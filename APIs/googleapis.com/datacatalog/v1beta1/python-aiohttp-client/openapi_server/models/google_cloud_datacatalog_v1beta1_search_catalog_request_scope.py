# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_gcp_public_datasets: bool=None, include_org_ids: List[str]=None, include_project_ids: List[str]=None, restricted_locations: List[str]=None):
        """GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope - a model defined in OpenAPI

        :param include_gcp_public_datasets: The include_gcp_public_datasets of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :param include_org_ids: The include_org_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :param include_project_ids: The include_project_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :param restricted_locations: The restricted_locations of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        """
        self.openapi_types = {
            'include_gcp_public_datasets': bool,
            'include_org_ids': List[str],
            'include_project_ids': List[str],
            'restricted_locations': List[str]
        }

        self.attribute_map = {
            'include_gcp_public_datasets': 'includeGcpPublicDatasets',
            'include_org_ids': 'includeOrgIds',
            'include_project_ids': 'includeProjectIds',
            'restricted_locations': 'restrictedLocations'
        }

        self._include_gcp_public_datasets = include_gcp_public_datasets
        self._include_org_ids = include_org_ids
        self._include_project_ids = include_project_ids
        self._restricted_locations = restricted_locations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_gcp_public_datasets(self):
        """Gets the include_gcp_public_datasets of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.

        If `true`, include Google Cloud public datasets in the search results. Info on Google Cloud public datasets is available at https://cloud.google.com/public-datasets/. By default, Google Cloud public datasets are excluded.

        :return: The include_gcp_public_datasets of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :rtype: bool
        """
        return self._include_gcp_public_datasets

    @include_gcp_public_datasets.setter
    def include_gcp_public_datasets(self, include_gcp_public_datasets):
        """Sets the include_gcp_public_datasets of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.

        If `true`, include Google Cloud public datasets in the search results. Info on Google Cloud public datasets is available at https://cloud.google.com/public-datasets/. By default, Google Cloud public datasets are excluded.

        :param include_gcp_public_datasets: The include_gcp_public_datasets of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :type include_gcp_public_datasets: bool
        """

        self._include_gcp_public_datasets = include_gcp_public_datasets

    @property
    def include_org_ids(self):
        """Gets the include_org_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.

        The list of organization IDs to search within. To find your organization ID, follow instructions in https://cloud.google.com/resource-manager/docs/creating-managing-organization.

        :return: The include_org_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :rtype: List[str]
        """
        return self._include_org_ids

    @include_org_ids.setter
    def include_org_ids(self, include_org_ids):
        """Sets the include_org_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.

        The list of organization IDs to search within. To find your organization ID, follow instructions in https://cloud.google.com/resource-manager/docs/creating-managing-organization.

        :param include_org_ids: The include_org_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :type include_org_ids: List[str]
        """

        self._include_org_ids = include_org_ids

    @property
    def include_project_ids(self):
        """Gets the include_project_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.

        The list of project IDs to search within. To learn more about the distinction between project names/IDs/numbers, go to https://cloud.google.com/docs/overview/#projects.

        :return: The include_project_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :rtype: List[str]
        """
        return self._include_project_ids

    @include_project_ids.setter
    def include_project_ids(self, include_project_ids):
        """Sets the include_project_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.

        The list of project IDs to search within. To learn more about the distinction between project names/IDs/numbers, go to https://cloud.google.com/docs/overview/#projects.

        :param include_project_ids: The include_project_ids of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :type include_project_ids: List[str]
        """

        self._include_project_ids = include_project_ids

    @property
    def restricted_locations(self):
        """Gets the restricted_locations of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.

        Optional. The list of locations to search within. 1. If empty, search will be performed in all locations; 2. If any of the locations are NOT in the valid locations list, error will be returned; 3. Otherwise, search only the given locations for matching results. Typical usage is to leave this field empty. When a location is unreachable as returned in the `SearchCatalogResponse.unreachable` field, users can repeat the search request with this parameter set to get additional information on the error. Valid locations: * asia-east1 * asia-east2 * asia-northeast1 * asia-northeast2 * asia-northeast3 * asia-south1 * asia-southeast1 * australia-southeast1 * eu * europe-north1 * europe-west1 * europe-west2 * europe-west3 * europe-west4 * europe-west6 * global * northamerica-northeast1 * southamerica-east1 * us * us-central1 * us-east1 * us-east4 * us-west1 * us-west2

        :return: The restricted_locations of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :rtype: List[str]
        """
        return self._restricted_locations

    @restricted_locations.setter
    def restricted_locations(self, restricted_locations):
        """Sets the restricted_locations of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.

        Optional. The list of locations to search within. 1. If empty, search will be performed in all locations; 2. If any of the locations are NOT in the valid locations list, error will be returned; 3. Otherwise, search only the given locations for matching results. Typical usage is to leave this field empty. When a location is unreachable as returned in the `SearchCatalogResponse.unreachable` field, users can repeat the search request with this parameter set to get additional information on the error. Valid locations: * asia-east1 * asia-east2 * asia-northeast1 * asia-northeast2 * asia-northeast3 * asia-south1 * asia-southeast1 * australia-southeast1 * eu * europe-north1 * europe-west1 * europe-west2 * europe-west3 * europe-west4 * europe-west6 * global * northamerica-northeast1 * southamerica-east1 * us * us-central1 * us-east1 * us-east4 * us-west1 * us-west2

        :param restricted_locations: The restricted_locations of this GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.
        :type restricted_locations: List[str]
        """

        self._restricted_locations = restricted_locations
