# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1beta1ColumnSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column: str=None, description: str=None, mode: str=None, subcolumns: List[GoogleCloudDatacatalogV1beta1ColumnSchema]=None, type: str=None):
        """GoogleCloudDatacatalogV1beta1ColumnSchema - a model defined in OpenAPI

        :param column: The column of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :param description: The description of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :param mode: The mode of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :param subcolumns: The subcolumns of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :param type: The type of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        """
        self.openapi_types = {
            'column': str,
            'description': str,
            'mode': str,
            'subcolumns': List[GoogleCloudDatacatalogV1beta1ColumnSchema],
            'type': str
        }

        self.attribute_map = {
            'column': 'column',
            'description': 'description',
            'mode': 'mode',
            'subcolumns': 'subcolumns',
            'type': 'type'
        }

        self._column = column
        self._description = description
        self._mode = mode
        self._subcolumns = subcolumns
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1beta1ColumnSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1beta1ColumnSchema of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column(self):
        """Gets the column of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Required. Name of the column.

        :return: The column of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :rtype: str
        """
        return self._column

    @column.setter
    def column(self, column):
        """Sets the column of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Required. Name of the column.

        :param column: The column of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :type column: str
        """

        self._column = column

    @property
    def description(self):
        """Gets the description of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Optional. Description of the column. Default value is an empty string.

        :return: The description of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Optional. Description of the column. Default value is an empty string.

        :param description: The description of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :type description: str
        """

        self._description = description

    @property
    def mode(self):
        """Gets the mode of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Optional. A column's mode indicates whether the values in this column are required, nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported. Default mode is `NULLABLE`.

        :return: The mode of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Optional. A column's mode indicates whether the values in this column are required, nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported. Default mode is `NULLABLE`.

        :param mode: The mode of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :type mode: str
        """

        self._mode = mode

    @property
    def subcolumns(self):
        """Gets the subcolumns of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Optional. Schema of sub-columns. A column can have zero or more sub-columns.

        :return: The subcolumns of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :rtype: List[GoogleCloudDatacatalogV1beta1ColumnSchema]
        """
        return self._subcolumns

    @subcolumns.setter
    def subcolumns(self, subcolumns):
        """Sets the subcolumns of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Optional. Schema of sub-columns. A column can have zero or more sub-columns.

        :param subcolumns: The subcolumns of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :type subcolumns: List[GoogleCloudDatacatalogV1beta1ColumnSchema]
        """

        self._subcolumns = subcolumns

    @property
    def type(self):
        """Gets the type of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Required. Type of the column.

        :return: The type of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDatacatalogV1beta1ColumnSchema.

        Required. Type of the column.

        :param type: The type of this GoogleCloudDatacatalogV1beta1ColumnSchema.
        :type type: str
        """

        self._type = type
