# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1_dataplex_external_table import GoogleCloudDatacatalogV1DataplexExternalTable
from openapi_server.models.google_cloud_datacatalog_v1_dataplex_spec import GoogleCloudDatacatalogV1DataplexSpec
from openapi_server import util


class GoogleCloudDatacatalogV1DataplexTableSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataplex_spec: GoogleCloudDatacatalogV1DataplexSpec=None, external_tables: List[GoogleCloudDatacatalogV1DataplexExternalTable]=None, user_managed: bool=None):
        """GoogleCloudDatacatalogV1DataplexTableSpec - a model defined in OpenAPI

        :param dataplex_spec: The dataplex_spec of this GoogleCloudDatacatalogV1DataplexTableSpec.
        :param external_tables: The external_tables of this GoogleCloudDatacatalogV1DataplexTableSpec.
        :param user_managed: The user_managed of this GoogleCloudDatacatalogV1DataplexTableSpec.
        """
        self.openapi_types = {
            'dataplex_spec': GoogleCloudDatacatalogV1DataplexSpec,
            'external_tables': List[GoogleCloudDatacatalogV1DataplexExternalTable],
            'user_managed': bool
        }

        self.attribute_map = {
            'dataplex_spec': 'dataplexSpec',
            'external_tables': 'externalTables',
            'user_managed': 'userManaged'
        }

        self._dataplex_spec = dataplex_spec
        self._external_tables = external_tables
        self._user_managed = user_managed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1DataplexTableSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1DataplexTableSpec of this GoogleCloudDatacatalogV1DataplexTableSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataplex_spec(self):
        """Gets the dataplex_spec of this GoogleCloudDatacatalogV1DataplexTableSpec.


        :return: The dataplex_spec of this GoogleCloudDatacatalogV1DataplexTableSpec.
        :rtype: GoogleCloudDatacatalogV1DataplexSpec
        """
        return self._dataplex_spec

    @dataplex_spec.setter
    def dataplex_spec(self, dataplex_spec):
        """Sets the dataplex_spec of this GoogleCloudDatacatalogV1DataplexTableSpec.


        :param dataplex_spec: The dataplex_spec of this GoogleCloudDatacatalogV1DataplexTableSpec.
        :type dataplex_spec: GoogleCloudDatacatalogV1DataplexSpec
        """

        self._dataplex_spec = dataplex_spec

    @property
    def external_tables(self):
        """Gets the external_tables of this GoogleCloudDatacatalogV1DataplexTableSpec.

        List of external tables registered by Dataplex in other systems based on the same underlying data. External tables allow to query this data in those systems.

        :return: The external_tables of this GoogleCloudDatacatalogV1DataplexTableSpec.
        :rtype: List[GoogleCloudDatacatalogV1DataplexExternalTable]
        """
        return self._external_tables

    @external_tables.setter
    def external_tables(self, external_tables):
        """Sets the external_tables of this GoogleCloudDatacatalogV1DataplexTableSpec.

        List of external tables registered by Dataplex in other systems based on the same underlying data. External tables allow to query this data in those systems.

        :param external_tables: The external_tables of this GoogleCloudDatacatalogV1DataplexTableSpec.
        :type external_tables: List[GoogleCloudDatacatalogV1DataplexExternalTable]
        """

        self._external_tables = external_tables

    @property
    def user_managed(self):
        """Gets the user_managed of this GoogleCloudDatacatalogV1DataplexTableSpec.

        Indicates if the table schema is managed by the user or not.

        :return: The user_managed of this GoogleCloudDatacatalogV1DataplexTableSpec.
        :rtype: bool
        """
        return self._user_managed

    @user_managed.setter
    def user_managed(self, user_managed):
        """Sets the user_managed of this GoogleCloudDatacatalogV1DataplexTableSpec.

        Indicates if the table schema is managed by the user or not.

        :param user_managed: The user_managed of this GoogleCloudDatacatalogV1DataplexTableSpec.
        :type user_managed: bool
        """

        self._user_managed = user_managed
