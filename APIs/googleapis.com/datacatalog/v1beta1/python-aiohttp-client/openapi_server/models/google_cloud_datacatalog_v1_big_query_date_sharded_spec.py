# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1BigQueryDateShardedSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset: str=None, latest_shard_resource: str=None, shard_count: str=None, table_prefix: str=None):
        """GoogleCloudDatacatalogV1BigQueryDateShardedSpec - a model defined in OpenAPI

        :param dataset: The dataset of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :param latest_shard_resource: The latest_shard_resource of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :param shard_count: The shard_count of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :param table_prefix: The table_prefix of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        """
        self.openapi_types = {
            'dataset': str,
            'latest_shard_resource': str,
            'shard_count': str,
            'table_prefix': str
        }

        self.attribute_map = {
            'dataset': 'dataset',
            'latest_shard_resource': 'latestShardResource',
            'shard_count': 'shardCount',
            'table_prefix': 'tablePrefix'
        }

        self._dataset = dataset
        self._latest_shard_resource = latest_shard_resource
        self._shard_count = shard_count
        self._table_prefix = table_prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1BigQueryDateShardedSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1BigQueryDateShardedSpec of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset(self):
        """Gets the dataset of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.

        Output only. The Data Catalog resource name of the dataset entry the current table belongs to. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.

        :return: The dataset of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :rtype: str
        """
        return self._dataset

    @dataset.setter
    def dataset(self, dataset):
        """Sets the dataset of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.

        Output only. The Data Catalog resource name of the dataset entry the current table belongs to. For example: `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.

        :param dataset: The dataset of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :type dataset: str
        """

        self._dataset = dataset

    @property
    def latest_shard_resource(self):
        """Gets the latest_shard_resource of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.

        Output only. BigQuery resource name of the latest shard.

        :return: The latest_shard_resource of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :rtype: str
        """
        return self._latest_shard_resource

    @latest_shard_resource.setter
    def latest_shard_resource(self, latest_shard_resource):
        """Sets the latest_shard_resource of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.

        Output only. BigQuery resource name of the latest shard.

        :param latest_shard_resource: The latest_shard_resource of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :type latest_shard_resource: str
        """

        self._latest_shard_resource = latest_shard_resource

    @property
    def shard_count(self):
        """Gets the shard_count of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.

        Output only. Total number of shards.

        :return: The shard_count of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :rtype: str
        """
        return self._shard_count

    @shard_count.setter
    def shard_count(self, shard_count):
        """Sets the shard_count of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.

        Output only. Total number of shards.

        :param shard_count: The shard_count of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :type shard_count: str
        """

        self._shard_count = shard_count

    @property
    def table_prefix(self):
        """Gets the table_prefix of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.

        Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is `MyTable`.

        :return: The table_prefix of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :rtype: str
        """
        return self._table_prefix

    @table_prefix.setter
    def table_prefix(self, table_prefix):
        """Sets the table_prefix of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.

        Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101` shard, the `table_prefix` is `MyTable`.

        :param table_prefix: The table_prefix of this GoogleCloudDatacatalogV1BigQueryDateShardedSpec.
        :type table_prefix: str
        """

        self._table_prefix = table_prefix
