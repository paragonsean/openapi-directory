# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1beta1PolicyTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, child_policy_tags: List[str]=None, description: str=None, display_name: str=None, name: str=None, parent_policy_tag: str=None):
        """GoogleCloudDatacatalogV1beta1PolicyTag - a model defined in OpenAPI

        :param child_policy_tags: The child_policy_tags of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :param description: The description of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :param display_name: The display_name of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :param name: The name of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :param parent_policy_tag: The parent_policy_tag of this GoogleCloudDatacatalogV1beta1PolicyTag.
        """
        self.openapi_types = {
            'child_policy_tags': List[str],
            'description': str,
            'display_name': str,
            'name': str,
            'parent_policy_tag': str
        }

        self.attribute_map = {
            'child_policy_tags': 'childPolicyTags',
            'description': 'description',
            'display_name': 'displayName',
            'name': 'name',
            'parent_policy_tag': 'parentPolicyTag'
        }

        self._child_policy_tags = child_policy_tags
        self._description = description
        self._display_name = display_name
        self._name = name
        self._parent_policy_tag = parent_policy_tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1beta1PolicyTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1beta1PolicyTag of this GoogleCloudDatacatalogV1beta1PolicyTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def child_policy_tags(self):
        """Gets the child_policy_tags of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Output only. Resource names of child policy tags of this policy tag.

        :return: The child_policy_tags of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :rtype: List[str]
        """
        return self._child_policy_tags

    @child_policy_tags.setter
    def child_policy_tags(self, child_policy_tags):
        """Sets the child_policy_tags of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Output only. Resource names of child policy tags of this policy tag.

        :param child_policy_tags: The child_policy_tags of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :type child_policy_tags: List[str]
        """

        self._child_policy_tags = child_policy_tags

    @property
    def description(self):
        """Gets the description of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.

        :return: The description of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.

        :param description: The description of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.

        :return: The display_name of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.

        :param display_name: The display_name of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Identifier. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".

        :return: The name of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Identifier. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".

        :param name: The name of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :type name: str
        """

        self._name = name

    @property
    def parent_policy_tag(self):
        """Gets the parent_policy_tag of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Resource name of this policy tag's parent policy tag (e.g. for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the \"Geolocation\" policy tag in the example above). If not set, defaults to an empty string.

        :return: The parent_policy_tag of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :rtype: str
        """
        return self._parent_policy_tag

    @parent_policy_tag.setter
    def parent_policy_tag(self, parent_policy_tag):
        """Sets the parent_policy_tag of this GoogleCloudDatacatalogV1beta1PolicyTag.

        Resource name of this policy tag's parent policy tag (e.g. for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the \"Geolocation\" policy tag in the example above). If not set, defaults to an empty string.

        :param parent_policy_tag: The parent_policy_tag of this GoogleCloudDatacatalogV1beta1PolicyTag.
        :type parent_policy_tag: str
        """

        self._parent_policy_tag = parent_policy_tag
