# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1_storage_properties import GoogleCloudDatacatalogV1StorageProperties
from openapi_server import util


class GoogleCloudDatacatalogV1DataSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource: str=None, service: str=None, source_entry: str=None, storage_properties: GoogleCloudDatacatalogV1StorageProperties=None):
        """GoogleCloudDatacatalogV1DataSource - a model defined in OpenAPI

        :param resource: The resource of this GoogleCloudDatacatalogV1DataSource.
        :param service: The service of this GoogleCloudDatacatalogV1DataSource.
        :param source_entry: The source_entry of this GoogleCloudDatacatalogV1DataSource.
        :param storage_properties: The storage_properties of this GoogleCloudDatacatalogV1DataSource.
        """
        self.openapi_types = {
            'resource': str,
            'service': str,
            'source_entry': str,
            'storage_properties': GoogleCloudDatacatalogV1StorageProperties
        }

        self.attribute_map = {
            'resource': 'resource',
            'service': 'service',
            'source_entry': 'sourceEntry',
            'storage_properties': 'storageProperties'
        }

        self._resource = resource
        self._service = service
        self._source_entry = source_entry
        self._storage_properties = storage_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1DataSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1DataSource of this GoogleCloudDatacatalogV1DataSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource(self):
        """Gets the resource of this GoogleCloudDatacatalogV1DataSource.

        Full name of a resource as defined by the service. For example: `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`

        :return: The resource of this GoogleCloudDatacatalogV1DataSource.
        :rtype: str
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this GoogleCloudDatacatalogV1DataSource.

        Full name of a resource as defined by the service. For example: `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`

        :param resource: The resource of this GoogleCloudDatacatalogV1DataSource.
        :type resource: str
        """

        self._resource = resource

    @property
    def service(self):
        """Gets the service of this GoogleCloudDatacatalogV1DataSource.

        Service that physically stores the data.

        :return: The service of this GoogleCloudDatacatalogV1DataSource.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this GoogleCloudDatacatalogV1DataSource.

        Service that physically stores the data.

        :param service: The service of this GoogleCloudDatacatalogV1DataSource.
        :type service: str
        """
        allowed_values = ["SERVICE_UNSPECIFIED", "CLOUD_STORAGE", "BIGQUERY"]  # noqa: E501
        if service not in allowed_values:
            raise ValueError(
                "Invalid value for `service` ({0}), must be one of {1}"
                .format(service, allowed_values)
            )

        self._service = service

    @property
    def source_entry(self):
        """Gets the source_entry of this GoogleCloudDatacatalogV1DataSource.

        Output only. Data Catalog entry name, if applicable.

        :return: The source_entry of this GoogleCloudDatacatalogV1DataSource.
        :rtype: str
        """
        return self._source_entry

    @source_entry.setter
    def source_entry(self, source_entry):
        """Sets the source_entry of this GoogleCloudDatacatalogV1DataSource.

        Output only. Data Catalog entry name, if applicable.

        :param source_entry: The source_entry of this GoogleCloudDatacatalogV1DataSource.
        :type source_entry: str
        """

        self._source_entry = source_entry

    @property
    def storage_properties(self):
        """Gets the storage_properties of this GoogleCloudDatacatalogV1DataSource.


        :return: The storage_properties of this GoogleCloudDatacatalogV1DataSource.
        :rtype: GoogleCloudDatacatalogV1StorageProperties
        """
        return self._storage_properties

    @storage_properties.setter
    def storage_properties(self, storage_properties):
        """Sets the storage_properties of this GoogleCloudDatacatalogV1DataSource.


        :param storage_properties: The storage_properties of this GoogleCloudDatacatalogV1DataSource.
        :type storage_properties: GoogleCloudDatacatalogV1StorageProperties
        """

        self._storage_properties = storage_properties
