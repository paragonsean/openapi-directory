# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1ViewSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, view_query: str=None):
        """GoogleCloudDatacatalogV1ViewSpec - a model defined in OpenAPI

        :param view_query: The view_query of this GoogleCloudDatacatalogV1ViewSpec.
        """
        self.openapi_types = {
            'view_query': str
        }

        self.attribute_map = {
            'view_query': 'viewQuery'
        }

        self._view_query = view_query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1ViewSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1ViewSpec of this GoogleCloudDatacatalogV1ViewSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def view_query(self):
        """Gets the view_query of this GoogleCloudDatacatalogV1ViewSpec.

        Output only. The query that defines the table view.

        :return: The view_query of this GoogleCloudDatacatalogV1ViewSpec.
        :rtype: str
        """
        return self._view_query

    @view_query.setter
    def view_query(self, view_query):
        """Sets the view_query of this GoogleCloudDatacatalogV1ViewSpec.

        Output only. The query that defines the table view.

        :param view_query: The view_query of this GoogleCloudDatacatalogV1ViewSpec.
        :type view_query: str
        """

        self._view_query = view_query
