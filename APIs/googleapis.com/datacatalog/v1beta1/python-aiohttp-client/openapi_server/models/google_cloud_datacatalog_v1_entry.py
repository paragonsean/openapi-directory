# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1_big_query_date_sharded_spec import GoogleCloudDatacatalogV1BigQueryDateShardedSpec
from openapi_server.models.google_cloud_datacatalog_v1_big_query_table_spec import GoogleCloudDatacatalogV1BigQueryTableSpec
from openapi_server.models.google_cloud_datacatalog_v1_business_context import GoogleCloudDatacatalogV1BusinessContext
from openapi_server.models.google_cloud_datacatalog_v1_cloud_bigtable_system_spec import GoogleCloudDatacatalogV1CloudBigtableSystemSpec
from openapi_server.models.google_cloud_datacatalog_v1_data_source import GoogleCloudDatacatalogV1DataSource
from openapi_server.models.google_cloud_datacatalog_v1_data_source_connection_spec import GoogleCloudDatacatalogV1DataSourceConnectionSpec
from openapi_server.models.google_cloud_datacatalog_v1_database_table_spec import GoogleCloudDatacatalogV1DatabaseTableSpec
from openapi_server.models.google_cloud_datacatalog_v1_dataset_spec import GoogleCloudDatacatalogV1DatasetSpec
from openapi_server.models.google_cloud_datacatalog_v1_feature_online_store_spec import GoogleCloudDatacatalogV1FeatureOnlineStoreSpec
from openapi_server.models.google_cloud_datacatalog_v1_fileset_spec import GoogleCloudDatacatalogV1FilesetSpec
from openapi_server.models.google_cloud_datacatalog_v1_gcs_fileset_spec import GoogleCloudDatacatalogV1GcsFilesetSpec
from openapi_server.models.google_cloud_datacatalog_v1_looker_system_spec import GoogleCloudDatacatalogV1LookerSystemSpec
from openapi_server.models.google_cloud_datacatalog_v1_model_spec import GoogleCloudDatacatalogV1ModelSpec
from openapi_server.models.google_cloud_datacatalog_v1_personal_details import GoogleCloudDatacatalogV1PersonalDetails
from openapi_server.models.google_cloud_datacatalog_v1_routine_spec import GoogleCloudDatacatalogV1RoutineSpec
from openapi_server.models.google_cloud_datacatalog_v1_schema import GoogleCloudDatacatalogV1Schema
from openapi_server.models.google_cloud_datacatalog_v1_service_spec import GoogleCloudDatacatalogV1ServiceSpec
from openapi_server.models.google_cloud_datacatalog_v1_sql_database_system_spec import GoogleCloudDatacatalogV1SqlDatabaseSystemSpec
from openapi_server.models.google_cloud_datacatalog_v1_system_timestamps import GoogleCloudDatacatalogV1SystemTimestamps
from openapi_server.models.google_cloud_datacatalog_v1_usage_signal import GoogleCloudDatacatalogV1UsageSignal
from openapi_server import util


class GoogleCloudDatacatalogV1Entry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery_date_sharded_spec: GoogleCloudDatacatalogV1BigQueryDateShardedSpec=None, bigquery_table_spec: GoogleCloudDatacatalogV1BigQueryTableSpec=None, business_context: GoogleCloudDatacatalogV1BusinessContext=None, cloud_bigtable_system_spec: GoogleCloudDatacatalogV1CloudBigtableSystemSpec=None, data_source: GoogleCloudDatacatalogV1DataSource=None, data_source_connection_spec: GoogleCloudDatacatalogV1DataSourceConnectionSpec=None, database_table_spec: GoogleCloudDatacatalogV1DatabaseTableSpec=None, dataset_spec: GoogleCloudDatacatalogV1DatasetSpec=None, description: str=None, display_name: str=None, feature_online_store_spec: GoogleCloudDatacatalogV1FeatureOnlineStoreSpec=None, fileset_spec: GoogleCloudDatacatalogV1FilesetSpec=None, fully_qualified_name: str=None, gcs_fileset_spec: GoogleCloudDatacatalogV1GcsFilesetSpec=None, integrated_system: str=None, labels: Dict[str, str]=None, linked_resource: str=None, looker_system_spec: GoogleCloudDatacatalogV1LookerSystemSpec=None, model_spec: GoogleCloudDatacatalogV1ModelSpec=None, name: str=None, personal_details: GoogleCloudDatacatalogV1PersonalDetails=None, routine_spec: GoogleCloudDatacatalogV1RoutineSpec=None, _schema: GoogleCloudDatacatalogV1Schema=None, service_spec: GoogleCloudDatacatalogV1ServiceSpec=None, source_system_timestamps: GoogleCloudDatacatalogV1SystemTimestamps=None, sql_database_system_spec: GoogleCloudDatacatalogV1SqlDatabaseSystemSpec=None, type: str=None, usage_signal: GoogleCloudDatacatalogV1UsageSignal=None, user_specified_system: str=None, user_specified_type: str=None):
        """GoogleCloudDatacatalogV1Entry - a model defined in OpenAPI

        :param bigquery_date_sharded_spec: The bigquery_date_sharded_spec of this GoogleCloudDatacatalogV1Entry.
        :param bigquery_table_spec: The bigquery_table_spec of this GoogleCloudDatacatalogV1Entry.
        :param business_context: The business_context of this GoogleCloudDatacatalogV1Entry.
        :param cloud_bigtable_system_spec: The cloud_bigtable_system_spec of this GoogleCloudDatacatalogV1Entry.
        :param data_source: The data_source of this GoogleCloudDatacatalogV1Entry.
        :param data_source_connection_spec: The data_source_connection_spec of this GoogleCloudDatacatalogV1Entry.
        :param database_table_spec: The database_table_spec of this GoogleCloudDatacatalogV1Entry.
        :param dataset_spec: The dataset_spec of this GoogleCloudDatacatalogV1Entry.
        :param description: The description of this GoogleCloudDatacatalogV1Entry.
        :param display_name: The display_name of this GoogleCloudDatacatalogV1Entry.
        :param feature_online_store_spec: The feature_online_store_spec of this GoogleCloudDatacatalogV1Entry.
        :param fileset_spec: The fileset_spec of this GoogleCloudDatacatalogV1Entry.
        :param fully_qualified_name: The fully_qualified_name of this GoogleCloudDatacatalogV1Entry.
        :param gcs_fileset_spec: The gcs_fileset_spec of this GoogleCloudDatacatalogV1Entry.
        :param integrated_system: The integrated_system of this GoogleCloudDatacatalogV1Entry.
        :param labels: The labels of this GoogleCloudDatacatalogV1Entry.
        :param linked_resource: The linked_resource of this GoogleCloudDatacatalogV1Entry.
        :param looker_system_spec: The looker_system_spec of this GoogleCloudDatacatalogV1Entry.
        :param model_spec: The model_spec of this GoogleCloudDatacatalogV1Entry.
        :param name: The name of this GoogleCloudDatacatalogV1Entry.
        :param personal_details: The personal_details of this GoogleCloudDatacatalogV1Entry.
        :param routine_spec: The routine_spec of this GoogleCloudDatacatalogV1Entry.
        :param _schema: The _schema of this GoogleCloudDatacatalogV1Entry.
        :param service_spec: The service_spec of this GoogleCloudDatacatalogV1Entry.
        :param source_system_timestamps: The source_system_timestamps of this GoogleCloudDatacatalogV1Entry.
        :param sql_database_system_spec: The sql_database_system_spec of this GoogleCloudDatacatalogV1Entry.
        :param type: The type of this GoogleCloudDatacatalogV1Entry.
        :param usage_signal: The usage_signal of this GoogleCloudDatacatalogV1Entry.
        :param user_specified_system: The user_specified_system of this GoogleCloudDatacatalogV1Entry.
        :param user_specified_type: The user_specified_type of this GoogleCloudDatacatalogV1Entry.
        """
        self.openapi_types = {
            'bigquery_date_sharded_spec': GoogleCloudDatacatalogV1BigQueryDateShardedSpec,
            'bigquery_table_spec': GoogleCloudDatacatalogV1BigQueryTableSpec,
            'business_context': GoogleCloudDatacatalogV1BusinessContext,
            'cloud_bigtable_system_spec': GoogleCloudDatacatalogV1CloudBigtableSystemSpec,
            'data_source': GoogleCloudDatacatalogV1DataSource,
            'data_source_connection_spec': GoogleCloudDatacatalogV1DataSourceConnectionSpec,
            'database_table_spec': GoogleCloudDatacatalogV1DatabaseTableSpec,
            'dataset_spec': GoogleCloudDatacatalogV1DatasetSpec,
            'description': str,
            'display_name': str,
            'feature_online_store_spec': GoogleCloudDatacatalogV1FeatureOnlineStoreSpec,
            'fileset_spec': GoogleCloudDatacatalogV1FilesetSpec,
            'fully_qualified_name': str,
            'gcs_fileset_spec': GoogleCloudDatacatalogV1GcsFilesetSpec,
            'integrated_system': str,
            'labels': Dict[str, str],
            'linked_resource': str,
            'looker_system_spec': GoogleCloudDatacatalogV1LookerSystemSpec,
            'model_spec': GoogleCloudDatacatalogV1ModelSpec,
            'name': str,
            'personal_details': GoogleCloudDatacatalogV1PersonalDetails,
            'routine_spec': GoogleCloudDatacatalogV1RoutineSpec,
            '_schema': GoogleCloudDatacatalogV1Schema,
            'service_spec': GoogleCloudDatacatalogV1ServiceSpec,
            'source_system_timestamps': GoogleCloudDatacatalogV1SystemTimestamps,
            'sql_database_system_spec': GoogleCloudDatacatalogV1SqlDatabaseSystemSpec,
            'type': str,
            'usage_signal': GoogleCloudDatacatalogV1UsageSignal,
            'user_specified_system': str,
            'user_specified_type': str
        }

        self.attribute_map = {
            'bigquery_date_sharded_spec': 'bigqueryDateShardedSpec',
            'bigquery_table_spec': 'bigqueryTableSpec',
            'business_context': 'businessContext',
            'cloud_bigtable_system_spec': 'cloudBigtableSystemSpec',
            'data_source': 'dataSource',
            'data_source_connection_spec': 'dataSourceConnectionSpec',
            'database_table_spec': 'databaseTableSpec',
            'dataset_spec': 'datasetSpec',
            'description': 'description',
            'display_name': 'displayName',
            'feature_online_store_spec': 'featureOnlineStoreSpec',
            'fileset_spec': 'filesetSpec',
            'fully_qualified_name': 'fullyQualifiedName',
            'gcs_fileset_spec': 'gcsFilesetSpec',
            'integrated_system': 'integratedSystem',
            'labels': 'labels',
            'linked_resource': 'linkedResource',
            'looker_system_spec': 'lookerSystemSpec',
            'model_spec': 'modelSpec',
            'name': 'name',
            'personal_details': 'personalDetails',
            'routine_spec': 'routineSpec',
            '_schema': 'schema',
            'service_spec': 'serviceSpec',
            'source_system_timestamps': 'sourceSystemTimestamps',
            'sql_database_system_spec': 'sqlDatabaseSystemSpec',
            'type': 'type',
            'usage_signal': 'usageSignal',
            'user_specified_system': 'userSpecifiedSystem',
            'user_specified_type': 'userSpecifiedType'
        }

        self._bigquery_date_sharded_spec = bigquery_date_sharded_spec
        self._bigquery_table_spec = bigquery_table_spec
        self._business_context = business_context
        self._cloud_bigtable_system_spec = cloud_bigtable_system_spec
        self._data_source = data_source
        self._data_source_connection_spec = data_source_connection_spec
        self._database_table_spec = database_table_spec
        self._dataset_spec = dataset_spec
        self._description = description
        self._display_name = display_name
        self._feature_online_store_spec = feature_online_store_spec
        self._fileset_spec = fileset_spec
        self._fully_qualified_name = fully_qualified_name
        self._gcs_fileset_spec = gcs_fileset_spec
        self._integrated_system = integrated_system
        self._labels = labels
        self._linked_resource = linked_resource
        self._looker_system_spec = looker_system_spec
        self._model_spec = model_spec
        self._name = name
        self._personal_details = personal_details
        self._routine_spec = routine_spec
        self.__schema = _schema
        self._service_spec = service_spec
        self._source_system_timestamps = source_system_timestamps
        self._sql_database_system_spec = sql_database_system_spec
        self._type = type
        self._usage_signal = usage_signal
        self._user_specified_system = user_specified_system
        self._user_specified_type = user_specified_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1Entry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1Entry of this GoogleCloudDatacatalogV1Entry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery_date_sharded_spec(self):
        """Gets the bigquery_date_sharded_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The bigquery_date_sharded_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1BigQueryDateShardedSpec
        """
        return self._bigquery_date_sharded_spec

    @bigquery_date_sharded_spec.setter
    def bigquery_date_sharded_spec(self, bigquery_date_sharded_spec):
        """Sets the bigquery_date_sharded_spec of this GoogleCloudDatacatalogV1Entry.


        :param bigquery_date_sharded_spec: The bigquery_date_sharded_spec of this GoogleCloudDatacatalogV1Entry.
        :type bigquery_date_sharded_spec: GoogleCloudDatacatalogV1BigQueryDateShardedSpec
        """

        self._bigquery_date_sharded_spec = bigquery_date_sharded_spec

    @property
    def bigquery_table_spec(self):
        """Gets the bigquery_table_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The bigquery_table_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1BigQueryTableSpec
        """
        return self._bigquery_table_spec

    @bigquery_table_spec.setter
    def bigquery_table_spec(self, bigquery_table_spec):
        """Sets the bigquery_table_spec of this GoogleCloudDatacatalogV1Entry.


        :param bigquery_table_spec: The bigquery_table_spec of this GoogleCloudDatacatalogV1Entry.
        :type bigquery_table_spec: GoogleCloudDatacatalogV1BigQueryTableSpec
        """

        self._bigquery_table_spec = bigquery_table_spec

    @property
    def business_context(self):
        """Gets the business_context of this GoogleCloudDatacatalogV1Entry.


        :return: The business_context of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1BusinessContext
        """
        return self._business_context

    @business_context.setter
    def business_context(self, business_context):
        """Sets the business_context of this GoogleCloudDatacatalogV1Entry.


        :param business_context: The business_context of this GoogleCloudDatacatalogV1Entry.
        :type business_context: GoogleCloudDatacatalogV1BusinessContext
        """

        self._business_context = business_context

    @property
    def cloud_bigtable_system_spec(self):
        """Gets the cloud_bigtable_system_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The cloud_bigtable_system_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1CloudBigtableSystemSpec
        """
        return self._cloud_bigtable_system_spec

    @cloud_bigtable_system_spec.setter
    def cloud_bigtable_system_spec(self, cloud_bigtable_system_spec):
        """Sets the cloud_bigtable_system_spec of this GoogleCloudDatacatalogV1Entry.


        :param cloud_bigtable_system_spec: The cloud_bigtable_system_spec of this GoogleCloudDatacatalogV1Entry.
        :type cloud_bigtable_system_spec: GoogleCloudDatacatalogV1CloudBigtableSystemSpec
        """

        self._cloud_bigtable_system_spec = cloud_bigtable_system_spec

    @property
    def data_source(self):
        """Gets the data_source of this GoogleCloudDatacatalogV1Entry.


        :return: The data_source of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1DataSource
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this GoogleCloudDatacatalogV1Entry.


        :param data_source: The data_source of this GoogleCloudDatacatalogV1Entry.
        :type data_source: GoogleCloudDatacatalogV1DataSource
        """

        self._data_source = data_source

    @property
    def data_source_connection_spec(self):
        """Gets the data_source_connection_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The data_source_connection_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1DataSourceConnectionSpec
        """
        return self._data_source_connection_spec

    @data_source_connection_spec.setter
    def data_source_connection_spec(self, data_source_connection_spec):
        """Sets the data_source_connection_spec of this GoogleCloudDatacatalogV1Entry.


        :param data_source_connection_spec: The data_source_connection_spec of this GoogleCloudDatacatalogV1Entry.
        :type data_source_connection_spec: GoogleCloudDatacatalogV1DataSourceConnectionSpec
        """

        self._data_source_connection_spec = data_source_connection_spec

    @property
    def database_table_spec(self):
        """Gets the database_table_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The database_table_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1DatabaseTableSpec
        """
        return self._database_table_spec

    @database_table_spec.setter
    def database_table_spec(self, database_table_spec):
        """Sets the database_table_spec of this GoogleCloudDatacatalogV1Entry.


        :param database_table_spec: The database_table_spec of this GoogleCloudDatacatalogV1Entry.
        :type database_table_spec: GoogleCloudDatacatalogV1DatabaseTableSpec
        """

        self._database_table_spec = database_table_spec

    @property
    def dataset_spec(self):
        """Gets the dataset_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The dataset_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1DatasetSpec
        """
        return self._dataset_spec

    @dataset_spec.setter
    def dataset_spec(self, dataset_spec):
        """Sets the dataset_spec of this GoogleCloudDatacatalogV1Entry.


        :param dataset_spec: The dataset_spec of this GoogleCloudDatacatalogV1Entry.
        :type dataset_spec: GoogleCloudDatacatalogV1DatasetSpec
        """

        self._dataset_spec = dataset_spec

    @property
    def description(self):
        """Gets the description of this GoogleCloudDatacatalogV1Entry.

        Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.

        :return: The description of this GoogleCloudDatacatalogV1Entry.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDatacatalogV1Entry.

        Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.

        :param description: The description of this GoogleCloudDatacatalogV1Entry.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDatacatalogV1Entry.

        Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string.

        :return: The display_name of this GoogleCloudDatacatalogV1Entry.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDatacatalogV1Entry.

        Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string.

        :param display_name: The display_name of this GoogleCloudDatacatalogV1Entry.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def feature_online_store_spec(self):
        """Gets the feature_online_store_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The feature_online_store_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1FeatureOnlineStoreSpec
        """
        return self._feature_online_store_spec

    @feature_online_store_spec.setter
    def feature_online_store_spec(self, feature_online_store_spec):
        """Sets the feature_online_store_spec of this GoogleCloudDatacatalogV1Entry.


        :param feature_online_store_spec: The feature_online_store_spec of this GoogleCloudDatacatalogV1Entry.
        :type feature_online_store_spec: GoogleCloudDatacatalogV1FeatureOnlineStoreSpec
        """

        self._feature_online_store_spec = feature_online_store_spec

    @property
    def fileset_spec(self):
        """Gets the fileset_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The fileset_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1FilesetSpec
        """
        return self._fileset_spec

    @fileset_spec.setter
    def fileset_spec(self, fileset_spec):
        """Sets the fileset_spec of this GoogleCloudDatacatalogV1Entry.


        :param fileset_spec: The fileset_spec of this GoogleCloudDatacatalogV1Entry.
        :type fileset_spec: GoogleCloudDatacatalogV1FilesetSpec
        """

        self._fileset_spec = fileset_spec

    @property
    def fully_qualified_name(self):
        """Gets the fully_qualified_name of this GoogleCloudDatacatalogV1Entry.

        [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation, and read-only later. Can be used for search and lookup of the entries. 

        :return: The fully_qualified_name of this GoogleCloudDatacatalogV1Entry.
        :rtype: str
        """
        return self._fully_qualified_name

    @fully_qualified_name.setter
    def fully_qualified_name(self, fully_qualified_name):
        """Sets the fully_qualified_name of this GoogleCloudDatacatalogV1Entry.

        [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation, and read-only later. Can be used for search and lookup of the entries. 

        :param fully_qualified_name: The fully_qualified_name of this GoogleCloudDatacatalogV1Entry.
        :type fully_qualified_name: str
        """

        self._fully_qualified_name = fully_qualified_name

    @property
    def gcs_fileset_spec(self):
        """Gets the gcs_fileset_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The gcs_fileset_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1GcsFilesetSpec
        """
        return self._gcs_fileset_spec

    @gcs_fileset_spec.setter
    def gcs_fileset_spec(self, gcs_fileset_spec):
        """Sets the gcs_fileset_spec of this GoogleCloudDatacatalogV1Entry.


        :param gcs_fileset_spec: The gcs_fileset_spec of this GoogleCloudDatacatalogV1Entry.
        :type gcs_fileset_spec: GoogleCloudDatacatalogV1GcsFilesetSpec
        """

        self._gcs_fileset_spec = gcs_fileset_spec

    @property
    def integrated_system(self):
        """Gets the integrated_system of this GoogleCloudDatacatalogV1Entry.

        Output only. Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.

        :return: The integrated_system of this GoogleCloudDatacatalogV1Entry.
        :rtype: str
        """
        return self._integrated_system

    @integrated_system.setter
    def integrated_system(self, integrated_system):
        """Sets the integrated_system of this GoogleCloudDatacatalogV1Entry.

        Output only. Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.

        :param integrated_system: The integrated_system of this GoogleCloudDatacatalogV1Entry.
        :type integrated_system: str
        """
        allowed_values = ["INTEGRATED_SYSTEM_UNSPECIFIED", "BIGQUERY", "CLOUD_PUBSUB", "DATAPROC_METASTORE", "DATAPLEX", "CLOUD_SPANNER", "CLOUD_BIGTABLE", "CLOUD_SQL", "LOOKER", "VERTEX_AI"]  # noqa: E501
        if integrated_system not in allowed_values:
            raise ValueError(
                "Invalid value for `integrated_system` ({0}), must be one of {1}"
                .format(integrated_system, allowed_values)
            )

        self._integrated_system = integrated_system

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudDatacatalogV1Entry.

        Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.

        :return: The labels of this GoogleCloudDatacatalogV1Entry.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudDatacatalogV1Entry.

        Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.

        :param labels: The labels of this GoogleCloudDatacatalogV1Entry.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def linked_resource(self):
        """Gets the linked_resource of this GoogleCloudDatacatalogV1Entry.

        The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.

        :return: The linked_resource of this GoogleCloudDatacatalogV1Entry.
        :rtype: str
        """
        return self._linked_resource

    @linked_resource.setter
    def linked_resource(self, linked_resource):
        """Sets the linked_resource of this GoogleCloudDatacatalogV1Entry.

        The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.

        :param linked_resource: The linked_resource of this GoogleCloudDatacatalogV1Entry.
        :type linked_resource: str
        """

        self._linked_resource = linked_resource

    @property
    def looker_system_spec(self):
        """Gets the looker_system_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The looker_system_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1LookerSystemSpec
        """
        return self._looker_system_spec

    @looker_system_spec.setter
    def looker_system_spec(self, looker_system_spec):
        """Sets the looker_system_spec of this GoogleCloudDatacatalogV1Entry.


        :param looker_system_spec: The looker_system_spec of this GoogleCloudDatacatalogV1Entry.
        :type looker_system_spec: GoogleCloudDatacatalogV1LookerSystemSpec
        """

        self._looker_system_spec = looker_system_spec

    @property
    def model_spec(self):
        """Gets the model_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The model_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1ModelSpec
        """
        return self._model_spec

    @model_spec.setter
    def model_spec(self, model_spec):
        """Sets the model_spec of this GoogleCloudDatacatalogV1Entry.


        :param model_spec: The model_spec of this GoogleCloudDatacatalogV1Entry.
        :type model_spec: GoogleCloudDatacatalogV1ModelSpec
        """

        self._model_spec = model_spec

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatacatalogV1Entry.

        Output only. The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.

        :return: The name of this GoogleCloudDatacatalogV1Entry.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatacatalogV1Entry.

        Output only. The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.

        :param name: The name of this GoogleCloudDatacatalogV1Entry.
        :type name: str
        """

        self._name = name

    @property
    def personal_details(self):
        """Gets the personal_details of this GoogleCloudDatacatalogV1Entry.


        :return: The personal_details of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1PersonalDetails
        """
        return self._personal_details

    @personal_details.setter
    def personal_details(self, personal_details):
        """Sets the personal_details of this GoogleCloudDatacatalogV1Entry.


        :param personal_details: The personal_details of this GoogleCloudDatacatalogV1Entry.
        :type personal_details: GoogleCloudDatacatalogV1PersonalDetails
        """

        self._personal_details = personal_details

    @property
    def routine_spec(self):
        """Gets the routine_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The routine_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1RoutineSpec
        """
        return self._routine_spec

    @routine_spec.setter
    def routine_spec(self, routine_spec):
        """Sets the routine_spec of this GoogleCloudDatacatalogV1Entry.


        :param routine_spec: The routine_spec of this GoogleCloudDatacatalogV1Entry.
        :type routine_spec: GoogleCloudDatacatalogV1RoutineSpec
        """

        self._routine_spec = routine_spec

    @property
    def _schema(self):
        """Gets the _schema of this GoogleCloudDatacatalogV1Entry.


        :return: The _schema of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1Schema
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this GoogleCloudDatacatalogV1Entry.


        :param _schema: The _schema of this GoogleCloudDatacatalogV1Entry.
        :type _schema: GoogleCloudDatacatalogV1Schema
        """

        self.__schema = _schema

    @property
    def service_spec(self):
        """Gets the service_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The service_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1ServiceSpec
        """
        return self._service_spec

    @service_spec.setter
    def service_spec(self, service_spec):
        """Sets the service_spec of this GoogleCloudDatacatalogV1Entry.


        :param service_spec: The service_spec of this GoogleCloudDatacatalogV1Entry.
        :type service_spec: GoogleCloudDatacatalogV1ServiceSpec
        """

        self._service_spec = service_spec

    @property
    def source_system_timestamps(self):
        """Gets the source_system_timestamps of this GoogleCloudDatacatalogV1Entry.


        :return: The source_system_timestamps of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1SystemTimestamps
        """
        return self._source_system_timestamps

    @source_system_timestamps.setter
    def source_system_timestamps(self, source_system_timestamps):
        """Sets the source_system_timestamps of this GoogleCloudDatacatalogV1Entry.


        :param source_system_timestamps: The source_system_timestamps of this GoogleCloudDatacatalogV1Entry.
        :type source_system_timestamps: GoogleCloudDatacatalogV1SystemTimestamps
        """

        self._source_system_timestamps = source_system_timestamps

    @property
    def sql_database_system_spec(self):
        """Gets the sql_database_system_spec of this GoogleCloudDatacatalogV1Entry.


        :return: The sql_database_system_spec of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1SqlDatabaseSystemSpec
        """
        return self._sql_database_system_spec

    @sql_database_system_spec.setter
    def sql_database_system_spec(self, sql_database_system_spec):
        """Sets the sql_database_system_spec of this GoogleCloudDatacatalogV1Entry.


        :param sql_database_system_spec: The sql_database_system_spec of this GoogleCloudDatacatalogV1Entry.
        :type sql_database_system_spec: GoogleCloudDatacatalogV1SqlDatabaseSystemSpec
        """

        self._sql_database_system_spec = sql_database_system_spec

    @property
    def type(self):
        """Gets the type of this GoogleCloudDatacatalogV1Entry.

        The type of the entry. For details, see [`EntryType`](#entrytype).

        :return: The type of this GoogleCloudDatacatalogV1Entry.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this GoogleCloudDatacatalogV1Entry.

        The type of the entry. For details, see [`EntryType`](#entrytype).

        :param type: The type of this GoogleCloudDatacatalogV1Entry.
        :type type: str
        """
        allowed_values = ["ENTRY_TYPE_UNSPECIFIED", "TABLE", "MODEL", "DATA_STREAM", "FILESET", "CLUSTER", "DATABASE", "DATA_SOURCE_CONNECTION", "ROUTINE", "LAKE", "ZONE", "SERVICE", "DATABASE_SCHEMA", "DASHBOARD", "EXPLORE", "LOOK", "FEATURE_ONLINE_STORE", "FEATURE_VIEW", "FEATURE_GROUP"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def usage_signal(self):
        """Gets the usage_signal of this GoogleCloudDatacatalogV1Entry.


        :return: The usage_signal of this GoogleCloudDatacatalogV1Entry.
        :rtype: GoogleCloudDatacatalogV1UsageSignal
        """
        return self._usage_signal

    @usage_signal.setter
    def usage_signal(self, usage_signal):
        """Sets the usage_signal of this GoogleCloudDatacatalogV1Entry.


        :param usage_signal: The usage_signal of this GoogleCloudDatacatalogV1Entry.
        :type usage_signal: GoogleCloudDatacatalogV1UsageSignal
        """

        self._usage_signal = usage_signal

    @property
    def user_specified_system(self):
        """Gets the user_specified_system of this GoogleCloudDatacatalogV1Entry.

        Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.

        :return: The user_specified_system of this GoogleCloudDatacatalogV1Entry.
        :rtype: str
        """
        return self._user_specified_system

    @user_specified_system.setter
    def user_specified_system(self, user_specified_system):
        """Sets the user_specified_system of this GoogleCloudDatacatalogV1Entry.

        Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.

        :param user_specified_system: The user_specified_system of this GoogleCloudDatacatalogV1Entry.
        :type user_specified_system: str
        """

        self._user_specified_system = user_specified_system

    @property
    def user_specified_type(self):
        """Gets the user_specified_type of this GoogleCloudDatacatalogV1Entry.

        Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.

        :return: The user_specified_type of this GoogleCloudDatacatalogV1Entry.
        :rtype: str
        """
        return self._user_specified_type

    @user_specified_type.setter
    def user_specified_type(self, user_specified_type):
        """Sets the user_specified_type of this GoogleCloudDatacatalogV1Entry.

        Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.

        :param user_specified_type: The user_specified_type of this GoogleCloudDatacatalogV1Entry.
        :type user_specified_type: str
        """

        self._user_specified_type = user_specified_type
