# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1SystemTimestamps(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, expire_time: str=None, update_time: str=None):
        """GoogleCloudDatacatalogV1SystemTimestamps - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudDatacatalogV1SystemTimestamps.
        :param expire_time: The expire_time of this GoogleCloudDatacatalogV1SystemTimestamps.
        :param update_time: The update_time of this GoogleCloudDatacatalogV1SystemTimestamps.
        """
        self.openapi_types = {
            'create_time': str,
            'expire_time': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'expire_time': 'expireTime',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._expire_time = expire_time
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1SystemTimestamps':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1SystemTimestamps of this GoogleCloudDatacatalogV1SystemTimestamps.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudDatacatalogV1SystemTimestamps.

        Creation timestamp of the resource within the given system.

        :return: The create_time of this GoogleCloudDatacatalogV1SystemTimestamps.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudDatacatalogV1SystemTimestamps.

        Creation timestamp of the resource within the given system.

        :param create_time: The create_time of this GoogleCloudDatacatalogV1SystemTimestamps.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def expire_time(self):
        """Gets the expire_time of this GoogleCloudDatacatalogV1SystemTimestamps.

        Output only. Expiration timestamp of the resource within the given system. Currently only applicable to BigQuery resources.

        :return: The expire_time of this GoogleCloudDatacatalogV1SystemTimestamps.
        :rtype: str
        """
        return self._expire_time

    @expire_time.setter
    def expire_time(self, expire_time):
        """Sets the expire_time of this GoogleCloudDatacatalogV1SystemTimestamps.

        Output only. Expiration timestamp of the resource within the given system. Currently only applicable to BigQuery resources.

        :param expire_time: The expire_time of this GoogleCloudDatacatalogV1SystemTimestamps.
        :type expire_time: str
        """

        self._expire_time = expire_time

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudDatacatalogV1SystemTimestamps.

        Timestamp of the last modification of the resource or its metadata within a given system. Note: Depending on the source system, not every modification updates this timestamp. For example, BigQuery timestamps every metadata modification but not data or permission changes.

        :return: The update_time of this GoogleCloudDatacatalogV1SystemTimestamps.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudDatacatalogV1SystemTimestamps.

        Timestamp of the last modification of the resource or its metadata within a given system. Note: Depending on the source system, not every modification updates this timestamp. For example, BigQuery timestamps every metadata modification but not data or permission changes.

        :param update_time: The update_time of this GoogleCloudDatacatalogV1SystemTimestamps.
        :type update_time: str
        """

        self._update_time = update_time
