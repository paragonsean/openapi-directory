/*
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetIamPolicyRequest;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1Entry;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1EntryGroup;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1ListEntriesResponse;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1ListTagsResponse;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1PolicyTag;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1Tag;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1TagTemplate;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1TagTemplateField;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1Taxonomy;
import org.openapitools.client.model.Policy;
import org.openapitools.client.model.SetIamPolicyRequest;
import org.openapitools.client.model.TestIamPermissionsRequest;
import org.openapitools.client.model.TestIamPermissionsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * A maximum of 10,000 entry groups may be created per organization across all locations. Users should enable the Data Catalog API in the project identified by the &#x60;parent&#x60; parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsEntryGroupsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String entryGroupId = null;
        GoogleCloudDatacatalogV1beta1EntryGroup googleCloudDatacatalogV1beta1EntryGroup = null;
        GoogleCloudDatacatalogV1beta1EntryGroup response = api.datacatalogProjectsLocationsEntryGroupsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, entryGroupId, googleCloudDatacatalogV1beta1EntryGroup);
        // TODO: test validations
    }

    /**
     * Creates an entry. Only entries of &#39;FILESET&#39; type or user-specified type can be created. Users should enable the Data Catalog API in the project identified by the &#x60;parent&#x60; parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information). A maximum of 100,000 entries may be created per entry group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsEntryGroupsEntriesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String entryId = null;
        GoogleCloudDatacatalogV1beta1Entry googleCloudDatacatalogV1beta1Entry = null;
        GoogleCloudDatacatalogV1beta1Entry response = api.datacatalogProjectsLocationsEntryGroupsEntriesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, entryId, googleCloudDatacatalogV1beta1Entry);
        // TODO: test validations
    }

    /**
     * Lists entries.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsEntryGroupsEntriesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudDatacatalogV1beta1ListEntriesResponse response = api.datacatalogProjectsLocationsEntryGroupsEntriesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Lists entry groups.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsEntryGroupsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse response = api.datacatalogProjectsLocationsEntryGroupsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a tag on an Entry. Note: The project identified by the &#x60;parent&#x60; parameter for the [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters) and the [tag template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters) used to create the tag must be from the same organization.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsEntryGroupsTagsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatacatalogV1beta1Tag googleCloudDatacatalogV1beta1Tag = null;
        GoogleCloudDatacatalogV1beta1Tag response = api.datacatalogProjectsLocationsEntryGroupsTagsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatacatalogV1beta1Tag);
        // TODO: test validations
    }

    /**
     * Lists tags assigned to an Entry. The columns in the response are lowercased.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsEntryGroupsTagsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatacatalogV1beta1ListTagsResponse response = api.datacatalogProjectsLocationsEntryGroupsTagsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a tag template. The user should enable the Data Catalog API in the project identified by the &#x60;parent&#x60; parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTagTemplatesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String tagTemplateId = null;
        GoogleCloudDatacatalogV1beta1TagTemplate googleCloudDatacatalogV1beta1TagTemplate = null;
        GoogleCloudDatacatalogV1beta1TagTemplate response = api.datacatalogProjectsLocationsTagTemplatesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, tagTemplateId, googleCloudDatacatalogV1beta1TagTemplate);
        // TODO: test validations
    }

    /**
     * Creates a field in a tag template. The user should enable the Data Catalog API in the project identified by the &#x60;parent&#x60; parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTagTemplatesFieldsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String tagTemplateFieldId = null;
        GoogleCloudDatacatalogV1beta1TagTemplateField googleCloudDatacatalogV1beta1TagTemplateField = null;
        GoogleCloudDatacatalogV1beta1TagTemplateField response = api.datacatalogProjectsLocationsTagTemplatesFieldsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, tagTemplateFieldId, googleCloudDatacatalogV1beta1TagTemplateField);
        // TODO: test validations
    }

    /**
     * Renames an enum value in a tag template. The enum values have to be unique within one enum field. Thus, an enum value cannot be renamed with a name used in any other enum value within the same enum field.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRenameTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest googleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest = null;
        GoogleCloudDatacatalogV1beta1TagTemplateField response = api.datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRename(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest);
        // TODO: test validations
    }

    /**
     * Creates a taxonomy in the specified project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatacatalogV1beta1Taxonomy googleCloudDatacatalogV1beta1Taxonomy = null;
        GoogleCloudDatacatalogV1beta1Taxonomy response = api.datacatalogProjectsLocationsTaxonomiesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatacatalogV1beta1Taxonomy);
        // TODO: test validations
    }

    /**
     * Exports all taxonomies and their policy tags in a project. This method generates SerializedTaxonomy protos with nested policy tags that can be used as an input for future ImportTaxonomies calls.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesExportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean serializedTaxonomies = null;
        List<String> taxonomies = null;
        GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse response = api.datacatalogProjectsLocationsTaxonomiesExport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, serializedTaxonomies, taxonomies);
        // TODO: test validations
    }

    /**
     * Imports all taxonomies and their policy tags to a project as new taxonomies. This method provides a bulk taxonomy / policy tag creation using nested proto structure.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesImportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest googleCloudDatacatalogV1beta1ImportTaxonomiesRequest = null;
        GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse response = api.datacatalogProjectsLocationsTaxonomiesImport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatacatalogV1beta1ImportTaxonomiesRequest);
        // TODO: test validations
    }

    /**
     * Lists all taxonomies in a project in a particular location that the caller has permission to view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse response = api.datacatalogProjectsLocationsTaxonomiesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a policy tag in the specified taxonomy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesPolicyTagsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudDatacatalogV1beta1PolicyTag googleCloudDatacatalogV1beta1PolicyTag = null;
        GoogleCloudDatacatalogV1beta1PolicyTag response = api.datacatalogProjectsLocationsTaxonomiesPolicyTagsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudDatacatalogV1beta1PolicyTag);
        // TODO: test validations
    }

    /**
     * Deletes a policy tag. Also deletes all of its descendant policy tags.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesPolicyTagsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean force = null;
        Object response = api.datacatalogProjectsLocationsTaxonomiesPolicyTagsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, force);
        // TODO: test validations
    }

    /**
     * Gets a policy tag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesPolicyTagsGetTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String readMask = null;
        GoogleCloudDatacatalogV1beta1PolicyTag response = api.datacatalogProjectsLocationsTaxonomiesPolicyTagsGet(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, readMask);
        // TODO: test validations
    }

    /**
     * Gets the IAM policy for a taxonomy or a policy tag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GetIamPolicyRequest getIamPolicyRequest = null;
        Policy response = api.datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, getIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Lists all policy tags in a taxonomy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesPolicyTagsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse response = api.datacatalogProjectsLocationsTaxonomiesPolicyTagsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a policy tag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesPolicyTagsPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        GoogleCloudDatacatalogV1beta1PolicyTag googleCloudDatacatalogV1beta1PolicyTag = null;
        GoogleCloudDatacatalogV1beta1PolicyTag response = api.datacatalogProjectsLocationsTaxonomiesPolicyTagsPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, googleCloudDatacatalogV1beta1PolicyTag);
        // TODO: test validations
    }

    /**
     * Sets the IAM policy for a taxonomy or a policy tag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        SetIamPolicyRequest setIamPolicyRequest = null;
        Policy response = api.datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, setIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Returns the permissions that a caller has on the specified taxonomy or policy tag.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissionsTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TestIamPermissionsRequest testIamPermissionsRequest = null;
        TestIamPermissionsResponse response = api.datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, testIamPermissionsRequest);
        // TODO: test validations
    }

}
