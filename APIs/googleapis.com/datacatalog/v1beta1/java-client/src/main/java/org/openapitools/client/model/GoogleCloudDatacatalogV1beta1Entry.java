/*
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1BigQueryTableSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1GcsFilesetSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1Schema;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1SystemTimestamps;
import org.openapitools.client.model.GoogleCloudDatacatalogV1beta1UsageSignal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the &#x60;linked_resource&#x60; field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:13.080824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatacatalogV1beta1Entry {
  public static final String SERIALIZED_NAME_BIGQUERY_DATE_SHARDED_SPEC = "bigqueryDateShardedSpec";
  @SerializedName(SERIALIZED_NAME_BIGQUERY_DATE_SHARDED_SPEC)
  private GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec bigqueryDateShardedSpec;

  public static final String SERIALIZED_NAME_BIGQUERY_TABLE_SPEC = "bigqueryTableSpec";
  @SerializedName(SERIALIZED_NAME_BIGQUERY_TABLE_SPEC)
  private GoogleCloudDatacatalogV1beta1BigQueryTableSpec bigqueryTableSpec;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_GCS_FILESET_SPEC = "gcsFilesetSpec";
  @SerializedName(SERIALIZED_NAME_GCS_FILESET_SPEC)
  private GoogleCloudDatacatalogV1beta1GcsFilesetSpec gcsFilesetSpec;

  /**
   * Output only. This field indicates the entry&#39;s source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
   */
  @JsonAdapter(IntegratedSystemEnum.Adapter.class)
  public enum IntegratedSystemEnum {
    INTEGRATED_SYSTEM_UNSPECIFIED("INTEGRATED_SYSTEM_UNSPECIFIED"),
    
    BIGQUERY("BIGQUERY"),
    
    CLOUD_PUBSUB("CLOUD_PUBSUB");

    private String value;

    IntegratedSystemEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IntegratedSystemEnum fromValue(String value) {
      for (IntegratedSystemEnum b : IntegratedSystemEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IntegratedSystemEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IntegratedSystemEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IntegratedSystemEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IntegratedSystemEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      IntegratedSystemEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_INTEGRATED_SYSTEM = "integratedSystem";
  @SerializedName(SERIALIZED_NAME_INTEGRATED_SYSTEM)
  private IntegratedSystemEnum integratedSystem;

  public static final String SERIALIZED_NAME_LINKED_RESOURCE = "linkedResource";
  @SerializedName(SERIALIZED_NAME_LINKED_RESOURCE)
  private String linkedResource;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SCHEMA = "schema";
  @SerializedName(SERIALIZED_NAME_SCHEMA)
  private GoogleCloudDatacatalogV1beta1Schema schema;

  public static final String SERIALIZED_NAME_SOURCE_SYSTEM_TIMESTAMPS = "sourceSystemTimestamps";
  @SerializedName(SERIALIZED_NAME_SOURCE_SYSTEM_TIMESTAMPS)
  private GoogleCloudDatacatalogV1beta1SystemTimestamps sourceSystemTimestamps;

  /**
   * The type of the entry. Only used for Entries with types in the EntryType enum.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ENTRY_TYPE_UNSPECIFIED("ENTRY_TYPE_UNSPECIFIED"),
    
    TABLE("TABLE"),
    
    MODEL("MODEL"),
    
    DATA_STREAM("DATA_STREAM"),
    
    FILESET("FILESET");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_USAGE_SIGNAL = "usageSignal";
  @SerializedName(SERIALIZED_NAME_USAGE_SIGNAL)
  private GoogleCloudDatacatalogV1beta1UsageSignal usageSignal;

  public static final String SERIALIZED_NAME_USER_SPECIFIED_SYSTEM = "userSpecifiedSystem";
  @SerializedName(SERIALIZED_NAME_USER_SPECIFIED_SYSTEM)
  private String userSpecifiedSystem;

  public static final String SERIALIZED_NAME_USER_SPECIFIED_TYPE = "userSpecifiedType";
  @SerializedName(SERIALIZED_NAME_USER_SPECIFIED_TYPE)
  private String userSpecifiedType;

  public GoogleCloudDatacatalogV1beta1Entry() {
  }

  public GoogleCloudDatacatalogV1beta1Entry(
     IntegratedSystemEnum integratedSystem, 
     String name
  ) {
    this();
    this.integratedSystem = integratedSystem;
    this.name = name;
  }

  public GoogleCloudDatacatalogV1beta1Entry bigqueryDateShardedSpec(GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec bigqueryDateShardedSpec) {
    this.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
    return this;
  }

  /**
   * Get bigqueryDateShardedSpec
   * @return bigqueryDateShardedSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec getBigqueryDateShardedSpec() {
    return bigqueryDateShardedSpec;
  }

  public void setBigqueryDateShardedSpec(GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec bigqueryDateShardedSpec) {
    this.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
  }


  public GoogleCloudDatacatalogV1beta1Entry bigqueryTableSpec(GoogleCloudDatacatalogV1beta1BigQueryTableSpec bigqueryTableSpec) {
    this.bigqueryTableSpec = bigqueryTableSpec;
    return this;
  }

  /**
   * Get bigqueryTableSpec
   * @return bigqueryTableSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1beta1BigQueryTableSpec getBigqueryTableSpec() {
    return bigqueryTableSpec;
  }

  public void setBigqueryTableSpec(GoogleCloudDatacatalogV1beta1BigQueryTableSpec bigqueryTableSpec) {
    this.bigqueryTableSpec = bigqueryTableSpec;
  }


  public GoogleCloudDatacatalogV1beta1Entry description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDatacatalogV1beta1Entry displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Display information such as title and description. A short name to identify the entry, for example, \&quot;Analytics Data - Jan 2011\&quot;. Default value is an empty string.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDatacatalogV1beta1Entry gcsFilesetSpec(GoogleCloudDatacatalogV1beta1GcsFilesetSpec gcsFilesetSpec) {
    this.gcsFilesetSpec = gcsFilesetSpec;
    return this;
  }

  /**
   * Get gcsFilesetSpec
   * @return gcsFilesetSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1beta1GcsFilesetSpec getGcsFilesetSpec() {
    return gcsFilesetSpec;
  }

  public void setGcsFilesetSpec(GoogleCloudDatacatalogV1beta1GcsFilesetSpec gcsFilesetSpec) {
    this.gcsFilesetSpec = gcsFilesetSpec;
  }


  /**
   * Output only. This field indicates the entry&#39;s source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
   * @return integratedSystem
   */
  @javax.annotation.Nullable
  public IntegratedSystemEnum getIntegratedSystem() {
    return integratedSystem;
  }



  public GoogleCloudDatacatalogV1beta1Entry linkedResource(String linkedResource) {
    this.linkedResource = linkedResource;
    return this;
  }

  /**
   * The resource this metadata entry refers to. For Google Cloud Platform resources, &#x60;linked_resource&#x60; is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the &#x60;linked_resource&#x60; for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.
   * @return linkedResource
   */
  @javax.annotation.Nullable
  public String getLinkedResource() {
    return linkedResource;
  }

  public void setLinkedResource(String linkedResource) {
    this.linkedResource = linkedResource;
  }


  /**
   * Output only. The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudDatacatalogV1beta1Entry schema(GoogleCloudDatacatalogV1beta1Schema schema) {
    this.schema = schema;
    return this;
  }

  /**
   * Get schema
   * @return schema
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1beta1Schema getSchema() {
    return schema;
  }

  public void setSchema(GoogleCloudDatacatalogV1beta1Schema schema) {
    this.schema = schema;
  }


  public GoogleCloudDatacatalogV1beta1Entry sourceSystemTimestamps(GoogleCloudDatacatalogV1beta1SystemTimestamps sourceSystemTimestamps) {
    this.sourceSystemTimestamps = sourceSystemTimestamps;
    return this;
  }

  /**
   * Get sourceSystemTimestamps
   * @return sourceSystemTimestamps
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1beta1SystemTimestamps getSourceSystemTimestamps() {
    return sourceSystemTimestamps;
  }

  public void setSourceSystemTimestamps(GoogleCloudDatacatalogV1beta1SystemTimestamps sourceSystemTimestamps) {
    this.sourceSystemTimestamps = sourceSystemTimestamps;
  }


  public GoogleCloudDatacatalogV1beta1Entry type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * The type of the entry. Only used for Entries with types in the EntryType enum.
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public GoogleCloudDatacatalogV1beta1Entry usageSignal(GoogleCloudDatacatalogV1beta1UsageSignal usageSignal) {
    this.usageSignal = usageSignal;
    return this;
  }

  /**
   * Get usageSignal
   * @return usageSignal
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1beta1UsageSignal getUsageSignal() {
    return usageSignal;
  }

  public void setUsageSignal(GoogleCloudDatacatalogV1beta1UsageSignal usageSignal) {
    this.usageSignal = usageSignal;
  }


  public GoogleCloudDatacatalogV1beta1Entry userSpecifiedSystem(String userSpecifiedSystem) {
    this.userSpecifiedSystem = userSpecifiedSystem;
    return this;
  }

  /**
   * This field indicates the entry&#39;s source system that Data Catalog does not integrate with. &#x60;user_specified_system&#x60; strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
   * @return userSpecifiedSystem
   */
  @javax.annotation.Nullable
  public String getUserSpecifiedSystem() {
    return userSpecifiedSystem;
  }

  public void setUserSpecifiedSystem(String userSpecifiedSystem) {
    this.userSpecifiedSystem = userSpecifiedSystem;
  }


  public GoogleCloudDatacatalogV1beta1Entry userSpecifiedType(String userSpecifiedType) {
    this.userSpecifiedType = userSpecifiedType;
    return this;
  }

  /**
   * Entry type if it does not fit any of the input-allowed values listed in &#x60;EntryType&#x60; enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example \&quot;my_special_type\&quot;. &#x60;user_specified_type&#x60; strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use &#x60;user_specified_type&#x60;.
   * @return userSpecifiedType
   */
  @javax.annotation.Nullable
  public String getUserSpecifiedType() {
    return userSpecifiedType;
  }

  public void setUserSpecifiedType(String userSpecifiedType) {
    this.userSpecifiedType = userSpecifiedType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatacatalogV1beta1Entry googleCloudDatacatalogV1beta1Entry = (GoogleCloudDatacatalogV1beta1Entry) o;
    return Objects.equals(this.bigqueryDateShardedSpec, googleCloudDatacatalogV1beta1Entry.bigqueryDateShardedSpec) &&
        Objects.equals(this.bigqueryTableSpec, googleCloudDatacatalogV1beta1Entry.bigqueryTableSpec) &&
        Objects.equals(this.description, googleCloudDatacatalogV1beta1Entry.description) &&
        Objects.equals(this.displayName, googleCloudDatacatalogV1beta1Entry.displayName) &&
        Objects.equals(this.gcsFilesetSpec, googleCloudDatacatalogV1beta1Entry.gcsFilesetSpec) &&
        Objects.equals(this.integratedSystem, googleCloudDatacatalogV1beta1Entry.integratedSystem) &&
        Objects.equals(this.linkedResource, googleCloudDatacatalogV1beta1Entry.linkedResource) &&
        Objects.equals(this.name, googleCloudDatacatalogV1beta1Entry.name) &&
        Objects.equals(this.schema, googleCloudDatacatalogV1beta1Entry.schema) &&
        Objects.equals(this.sourceSystemTimestamps, googleCloudDatacatalogV1beta1Entry.sourceSystemTimestamps) &&
        Objects.equals(this.type, googleCloudDatacatalogV1beta1Entry.type) &&
        Objects.equals(this.usageSignal, googleCloudDatacatalogV1beta1Entry.usageSignal) &&
        Objects.equals(this.userSpecifiedSystem, googleCloudDatacatalogV1beta1Entry.userSpecifiedSystem) &&
        Objects.equals(this.userSpecifiedType, googleCloudDatacatalogV1beta1Entry.userSpecifiedType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigqueryDateShardedSpec, bigqueryTableSpec, description, displayName, gcsFilesetSpec, integratedSystem, linkedResource, name, schema, sourceSystemTimestamps, type, usageSignal, userSpecifiedSystem, userSpecifiedType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatacatalogV1beta1Entry {\n");
    sb.append("    bigqueryDateShardedSpec: ").append(toIndentedString(bigqueryDateShardedSpec)).append("\n");
    sb.append("    bigqueryTableSpec: ").append(toIndentedString(bigqueryTableSpec)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    gcsFilesetSpec: ").append(toIndentedString(gcsFilesetSpec)).append("\n");
    sb.append("    integratedSystem: ").append(toIndentedString(integratedSystem)).append("\n");
    sb.append("    linkedResource: ").append(toIndentedString(linkedResource)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    sourceSystemTimestamps: ").append(toIndentedString(sourceSystemTimestamps)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    usageSignal: ").append(toIndentedString(usageSignal)).append("\n");
    sb.append("    userSpecifiedSystem: ").append(toIndentedString(userSpecifiedSystem)).append("\n");
    sb.append("    userSpecifiedType: ").append(toIndentedString(userSpecifiedType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigqueryDateShardedSpec");
    openapiFields.add("bigqueryTableSpec");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("gcsFilesetSpec");
    openapiFields.add("integratedSystem");
    openapiFields.add("linkedResource");
    openapiFields.add("name");
    openapiFields.add("schema");
    openapiFields.add("sourceSystemTimestamps");
    openapiFields.add("type");
    openapiFields.add("usageSignal");
    openapiFields.add("userSpecifiedSystem");
    openapiFields.add("userSpecifiedType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatacatalogV1beta1Entry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatacatalogV1beta1Entry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatacatalogV1beta1Entry is not found in the empty JSON string", GoogleCloudDatacatalogV1beta1Entry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatacatalogV1beta1Entry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatacatalogV1beta1Entry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigqueryDateShardedSpec`
      if (jsonObj.get("bigqueryDateShardedSpec") != null && !jsonObj.get("bigqueryDateShardedSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec.validateJsonElement(jsonObj.get("bigqueryDateShardedSpec"));
      }
      // validate the optional field `bigqueryTableSpec`
      if (jsonObj.get("bigqueryTableSpec") != null && !jsonObj.get("bigqueryTableSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1beta1BigQueryTableSpec.validateJsonElement(jsonObj.get("bigqueryTableSpec"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `gcsFilesetSpec`
      if (jsonObj.get("gcsFilesetSpec") != null && !jsonObj.get("gcsFilesetSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1beta1GcsFilesetSpec.validateJsonElement(jsonObj.get("gcsFilesetSpec"));
      }
      if ((jsonObj.get("integratedSystem") != null && !jsonObj.get("integratedSystem").isJsonNull()) && !jsonObj.get("integratedSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integratedSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integratedSystem").toString()));
      }
      // validate the optional field `integratedSystem`
      if (jsonObj.get("integratedSystem") != null && !jsonObj.get("integratedSystem").isJsonNull()) {
        IntegratedSystemEnum.validateJsonElement(jsonObj.get("integratedSystem"));
      }
      if ((jsonObj.get("linkedResource") != null && !jsonObj.get("linkedResource").isJsonNull()) && !jsonObj.get("linkedResource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedResource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedResource").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `schema`
      if (jsonObj.get("schema") != null && !jsonObj.get("schema").isJsonNull()) {
        GoogleCloudDatacatalogV1beta1Schema.validateJsonElement(jsonObj.get("schema"));
      }
      // validate the optional field `sourceSystemTimestamps`
      if (jsonObj.get("sourceSystemTimestamps") != null && !jsonObj.get("sourceSystemTimestamps").isJsonNull()) {
        GoogleCloudDatacatalogV1beta1SystemTimestamps.validateJsonElement(jsonObj.get("sourceSystemTimestamps"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      // validate the optional field `usageSignal`
      if (jsonObj.get("usageSignal") != null && !jsonObj.get("usageSignal").isJsonNull()) {
        GoogleCloudDatacatalogV1beta1UsageSignal.validateJsonElement(jsonObj.get("usageSignal"));
      }
      if ((jsonObj.get("userSpecifiedSystem") != null && !jsonObj.get("userSpecifiedSystem").isJsonNull()) && !jsonObj.get("userSpecifiedSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userSpecifiedSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userSpecifiedSystem").toString()));
      }
      if ((jsonObj.get("userSpecifiedType") != null && !jsonObj.get("userSpecifiedType").isJsonNull()) && !jsonObj.get("userSpecifiedType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userSpecifiedType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userSpecifiedType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatacatalogV1beta1Entry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatacatalogV1beta1Entry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatacatalogV1beta1Entry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatacatalogV1beta1Entry.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatacatalogV1beta1Entry>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatacatalogV1beta1Entry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatacatalogV1beta1Entry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatacatalogV1beta1Entry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatacatalogV1beta1Entry
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatacatalogV1beta1Entry
   */
  public static GoogleCloudDatacatalogV1beta1Entry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatacatalogV1beta1Entry.class);
  }

  /**
   * Convert an instance of GoogleCloudDatacatalogV1beta1Entry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

