/*
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudDatacatalogV1BigQueryRoutineSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1RoutineSpecArgument;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specification that applies to a routine. Valid only for entries with the &#x60;ROUTINE&#x60; type.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:13.080824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatacatalogV1RoutineSpec {
  public static final String SERIALIZED_NAME_BIGQUERY_ROUTINE_SPEC = "bigqueryRoutineSpec";
  @SerializedName(SERIALIZED_NAME_BIGQUERY_ROUTINE_SPEC)
  private GoogleCloudDatacatalogV1BigQueryRoutineSpec bigqueryRoutineSpec;

  public static final String SERIALIZED_NAME_DEFINITION_BODY = "definitionBody";
  @SerializedName(SERIALIZED_NAME_DEFINITION_BODY)
  private String definitionBody;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_RETURN_TYPE = "returnType";
  @SerializedName(SERIALIZED_NAME_RETURN_TYPE)
  private String returnType;

  public static final String SERIALIZED_NAME_ROUTINE_ARGUMENTS = "routineArguments";
  @SerializedName(SERIALIZED_NAME_ROUTINE_ARGUMENTS)
  private List<GoogleCloudDatacatalogV1RoutineSpecArgument> routineArguments = new ArrayList<>();

  /**
   * The type of the routine.
   */
  @JsonAdapter(RoutineTypeEnum.Adapter.class)
  public enum RoutineTypeEnum {
    ROUTINE_TYPE_UNSPECIFIED("ROUTINE_TYPE_UNSPECIFIED"),
    
    SCALAR_FUNCTION("SCALAR_FUNCTION"),
    
    PROCEDURE("PROCEDURE");

    private String value;

    RoutineTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RoutineTypeEnum fromValue(String value) {
      for (RoutineTypeEnum b : RoutineTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RoutineTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RoutineTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RoutineTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RoutineTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RoutineTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROUTINE_TYPE = "routineType";
  @SerializedName(SERIALIZED_NAME_ROUTINE_TYPE)
  private RoutineTypeEnum routineType;

  public GoogleCloudDatacatalogV1RoutineSpec() {
  }

  public GoogleCloudDatacatalogV1RoutineSpec bigqueryRoutineSpec(GoogleCloudDatacatalogV1BigQueryRoutineSpec bigqueryRoutineSpec) {
    this.bigqueryRoutineSpec = bigqueryRoutineSpec;
    return this;
  }

  /**
   * Get bigqueryRoutineSpec
   * @return bigqueryRoutineSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1BigQueryRoutineSpec getBigqueryRoutineSpec() {
    return bigqueryRoutineSpec;
  }

  public void setBigqueryRoutineSpec(GoogleCloudDatacatalogV1BigQueryRoutineSpec bigqueryRoutineSpec) {
    this.bigqueryRoutineSpec = bigqueryRoutineSpec;
  }


  public GoogleCloudDatacatalogV1RoutineSpec definitionBody(String definitionBody) {
    this.definitionBody = definitionBody;
    return this;
  }

  /**
   * The body of the routine.
   * @return definitionBody
   */
  @javax.annotation.Nullable
  public String getDefinitionBody() {
    return definitionBody;
  }

  public void setDefinitionBody(String definitionBody) {
    this.definitionBody = definitionBody;
  }


  public GoogleCloudDatacatalogV1RoutineSpec language(String language) {
    this.language = language;
    return this;
  }

  /**
   * The language the routine is written in. The exact value depends on the source system. For BigQuery routines, possible values are: * &#x60;SQL&#x60; * &#x60;JAVASCRIPT&#x60;
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }


  public GoogleCloudDatacatalogV1RoutineSpec returnType(String returnType) {
    this.returnType = returnType;
    return this;
  }

  /**
   * Return type of the argument. The exact value depends on the source system and the language.
   * @return returnType
   */
  @javax.annotation.Nullable
  public String getReturnType() {
    return returnType;
  }

  public void setReturnType(String returnType) {
    this.returnType = returnType;
  }


  public GoogleCloudDatacatalogV1RoutineSpec routineArguments(List<GoogleCloudDatacatalogV1RoutineSpecArgument> routineArguments) {
    this.routineArguments = routineArguments;
    return this;
  }

  public GoogleCloudDatacatalogV1RoutineSpec addRoutineArgumentsItem(GoogleCloudDatacatalogV1RoutineSpecArgument routineArgumentsItem) {
    if (this.routineArguments == null) {
      this.routineArguments = new ArrayList<>();
    }
    this.routineArguments.add(routineArgumentsItem);
    return this;
  }

  /**
   * Arguments of the routine.
   * @return routineArguments
   */
  @javax.annotation.Nullable
  public List<GoogleCloudDatacatalogV1RoutineSpecArgument> getRoutineArguments() {
    return routineArguments;
  }

  public void setRoutineArguments(List<GoogleCloudDatacatalogV1RoutineSpecArgument> routineArguments) {
    this.routineArguments = routineArguments;
  }


  public GoogleCloudDatacatalogV1RoutineSpec routineType(RoutineTypeEnum routineType) {
    this.routineType = routineType;
    return this;
  }

  /**
   * The type of the routine.
   * @return routineType
   */
  @javax.annotation.Nullable
  public RoutineTypeEnum getRoutineType() {
    return routineType;
  }

  public void setRoutineType(RoutineTypeEnum routineType) {
    this.routineType = routineType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatacatalogV1RoutineSpec googleCloudDatacatalogV1RoutineSpec = (GoogleCloudDatacatalogV1RoutineSpec) o;
    return Objects.equals(this.bigqueryRoutineSpec, googleCloudDatacatalogV1RoutineSpec.bigqueryRoutineSpec) &&
        Objects.equals(this.definitionBody, googleCloudDatacatalogV1RoutineSpec.definitionBody) &&
        Objects.equals(this.language, googleCloudDatacatalogV1RoutineSpec.language) &&
        Objects.equals(this.returnType, googleCloudDatacatalogV1RoutineSpec.returnType) &&
        Objects.equals(this.routineArguments, googleCloudDatacatalogV1RoutineSpec.routineArguments) &&
        Objects.equals(this.routineType, googleCloudDatacatalogV1RoutineSpec.routineType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigqueryRoutineSpec, definitionBody, language, returnType, routineArguments, routineType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatacatalogV1RoutineSpec {\n");
    sb.append("    bigqueryRoutineSpec: ").append(toIndentedString(bigqueryRoutineSpec)).append("\n");
    sb.append("    definitionBody: ").append(toIndentedString(definitionBody)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    returnType: ").append(toIndentedString(returnType)).append("\n");
    sb.append("    routineArguments: ").append(toIndentedString(routineArguments)).append("\n");
    sb.append("    routineType: ").append(toIndentedString(routineType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigqueryRoutineSpec");
    openapiFields.add("definitionBody");
    openapiFields.add("language");
    openapiFields.add("returnType");
    openapiFields.add("routineArguments");
    openapiFields.add("routineType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatacatalogV1RoutineSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatacatalogV1RoutineSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatacatalogV1RoutineSpec is not found in the empty JSON string", GoogleCloudDatacatalogV1RoutineSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatacatalogV1RoutineSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatacatalogV1RoutineSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigqueryRoutineSpec`
      if (jsonObj.get("bigqueryRoutineSpec") != null && !jsonObj.get("bigqueryRoutineSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1BigQueryRoutineSpec.validateJsonElement(jsonObj.get("bigqueryRoutineSpec"));
      }
      if ((jsonObj.get("definitionBody") != null && !jsonObj.get("definitionBody").isJsonNull()) && !jsonObj.get("definitionBody").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `definitionBody` to be a primitive type in the JSON string but got `%s`", jsonObj.get("definitionBody").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
      if ((jsonObj.get("returnType") != null && !jsonObj.get("returnType").isJsonNull()) && !jsonObj.get("returnType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `returnType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("returnType").toString()));
      }
      if (jsonObj.get("routineArguments") != null && !jsonObj.get("routineArguments").isJsonNull()) {
        JsonArray jsonArrayroutineArguments = jsonObj.getAsJsonArray("routineArguments");
        if (jsonArrayroutineArguments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("routineArguments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `routineArguments` to be an array in the JSON string but got `%s`", jsonObj.get("routineArguments").toString()));
          }

          // validate the optional field `routineArguments` (array)
          for (int i = 0; i < jsonArrayroutineArguments.size(); i++) {
            GoogleCloudDatacatalogV1RoutineSpecArgument.validateJsonElement(jsonArrayroutineArguments.get(i));
          };
        }
      }
      if ((jsonObj.get("routineType") != null && !jsonObj.get("routineType").isJsonNull()) && !jsonObj.get("routineType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `routineType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("routineType").toString()));
      }
      // validate the optional field `routineType`
      if (jsonObj.get("routineType") != null && !jsonObj.get("routineType").isJsonNull()) {
        RoutineTypeEnum.validateJsonElement(jsonObj.get("routineType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatacatalogV1RoutineSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatacatalogV1RoutineSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatacatalogV1RoutineSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatacatalogV1RoutineSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatacatalogV1RoutineSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatacatalogV1RoutineSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatacatalogV1RoutineSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatacatalogV1RoutineSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatacatalogV1RoutineSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatacatalogV1RoutineSpec
   */
  public static GoogleCloudDatacatalogV1RoutineSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatacatalogV1RoutineSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudDatacatalogV1RoutineSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

