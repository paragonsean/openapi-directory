/*
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A result that appears in the response of a search request. Each result captures details of one entry that matches the search.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:13.080824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatacatalogV1beta1SearchCatalogResult {
  public static final String SERIALIZED_NAME_LINKED_RESOURCE = "linkedResource";
  @SerializedName(SERIALIZED_NAME_LINKED_RESOURCE)
  private String linkedResource;

  public static final String SERIALIZED_NAME_MODIFY_TIME = "modifyTime";
  @SerializedName(SERIALIZED_NAME_MODIFY_TIME)
  private String modifyTime;

  public static final String SERIALIZED_NAME_RELATIVE_RESOURCE_NAME = "relativeResourceName";
  @SerializedName(SERIALIZED_NAME_RELATIVE_RESOURCE_NAME)
  private String relativeResourceName;

  public static final String SERIALIZED_NAME_SEARCH_RESULT_SUBTYPE = "searchResultSubtype";
  @SerializedName(SERIALIZED_NAME_SEARCH_RESULT_SUBTYPE)
  private String searchResultSubtype;

  /**
   * Type of the search result. This field can be used to determine which Get method to call to fetch the full resource.
   */
  @JsonAdapter(SearchResultTypeEnum.Adapter.class)
  public enum SearchResultTypeEnum {
    SEARCH_RESULT_TYPE_UNSPECIFIED("SEARCH_RESULT_TYPE_UNSPECIFIED"),
    
    ENTRY("ENTRY"),
    
    TAG_TEMPLATE("TAG_TEMPLATE"),
    
    ENTRY_GROUP("ENTRY_GROUP");

    private String value;

    SearchResultTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SearchResultTypeEnum fromValue(String value) {
      for (SearchResultTypeEnum b : SearchResultTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SearchResultTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SearchResultTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SearchResultTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SearchResultTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SearchResultTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SEARCH_RESULT_TYPE = "searchResultType";
  @SerializedName(SERIALIZED_NAME_SEARCH_RESULT_TYPE)
  private SearchResultTypeEnum searchResultType;

  public GoogleCloudDatacatalogV1beta1SearchCatalogResult() {
  }

  public GoogleCloudDatacatalogV1beta1SearchCatalogResult linkedResource(String linkedResource) {
    this.linkedResource = linkedResource;
    return this;
  }

  /**
   * The full name of the cloud resource the entry belongs to. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Example: * &#x60;//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId&#x60;
   * @return linkedResource
   */
  @javax.annotation.Nullable
  public String getLinkedResource() {
    return linkedResource;
  }

  public void setLinkedResource(String linkedResource) {
    this.linkedResource = linkedResource;
  }


  public GoogleCloudDatacatalogV1beta1SearchCatalogResult modifyTime(String modifyTime) {
    this.modifyTime = modifyTime;
    return this;
  }

  /**
   * Last-modified timestamp of the entry from the managing system.
   * @return modifyTime
   */
  @javax.annotation.Nullable
  public String getModifyTime() {
    return modifyTime;
  }

  public void setModifyTime(String modifyTime) {
    this.modifyTime = modifyTime;
  }


  public GoogleCloudDatacatalogV1beta1SearchCatalogResult relativeResourceName(String relativeResourceName) {
    this.relativeResourceName = relativeResourceName;
    return this;
  }

  /**
   * The relative resource name of the resource in URL format. Examples: * &#x60;projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}&#x60; * &#x60;projects/{project_id}/tagTemplates/{tag_template_id}&#x60;
   * @return relativeResourceName
   */
  @javax.annotation.Nullable
  public String getRelativeResourceName() {
    return relativeResourceName;
  }

  public void setRelativeResourceName(String relativeResourceName) {
    this.relativeResourceName = relativeResourceName;
  }


  public GoogleCloudDatacatalogV1beta1SearchCatalogResult searchResultSubtype(String searchResultSubtype) {
    this.searchResultSubtype = searchResultSubtype;
    return this;
  }

  /**
   * Sub-type of the search result. This is a dot-delimited description of the resource&#39;s full type, and is the same as the value callers would provide in the \&quot;type\&quot; search facet. Examples: &#x60;entry.table&#x60;, &#x60;entry.dataStream&#x60;, &#x60;tagTemplate&#x60;.
   * @return searchResultSubtype
   */
  @javax.annotation.Nullable
  public String getSearchResultSubtype() {
    return searchResultSubtype;
  }

  public void setSearchResultSubtype(String searchResultSubtype) {
    this.searchResultSubtype = searchResultSubtype;
  }


  public GoogleCloudDatacatalogV1beta1SearchCatalogResult searchResultType(SearchResultTypeEnum searchResultType) {
    this.searchResultType = searchResultType;
    return this;
  }

  /**
   * Type of the search result. This field can be used to determine which Get method to call to fetch the full resource.
   * @return searchResultType
   */
  @javax.annotation.Nullable
  public SearchResultTypeEnum getSearchResultType() {
    return searchResultType;
  }

  public void setSearchResultType(SearchResultTypeEnum searchResultType) {
    this.searchResultType = searchResultType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatacatalogV1beta1SearchCatalogResult googleCloudDatacatalogV1beta1SearchCatalogResult = (GoogleCloudDatacatalogV1beta1SearchCatalogResult) o;
    return Objects.equals(this.linkedResource, googleCloudDatacatalogV1beta1SearchCatalogResult.linkedResource) &&
        Objects.equals(this.modifyTime, googleCloudDatacatalogV1beta1SearchCatalogResult.modifyTime) &&
        Objects.equals(this.relativeResourceName, googleCloudDatacatalogV1beta1SearchCatalogResult.relativeResourceName) &&
        Objects.equals(this.searchResultSubtype, googleCloudDatacatalogV1beta1SearchCatalogResult.searchResultSubtype) &&
        Objects.equals(this.searchResultType, googleCloudDatacatalogV1beta1SearchCatalogResult.searchResultType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkedResource, modifyTime, relativeResourceName, searchResultSubtype, searchResultType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatacatalogV1beta1SearchCatalogResult {\n");
    sb.append("    linkedResource: ").append(toIndentedString(linkedResource)).append("\n");
    sb.append("    modifyTime: ").append(toIndentedString(modifyTime)).append("\n");
    sb.append("    relativeResourceName: ").append(toIndentedString(relativeResourceName)).append("\n");
    sb.append("    searchResultSubtype: ").append(toIndentedString(searchResultSubtype)).append("\n");
    sb.append("    searchResultType: ").append(toIndentedString(searchResultType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("linkedResource");
    openapiFields.add("modifyTime");
    openapiFields.add("relativeResourceName");
    openapiFields.add("searchResultSubtype");
    openapiFields.add("searchResultType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatacatalogV1beta1SearchCatalogResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatacatalogV1beta1SearchCatalogResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatacatalogV1beta1SearchCatalogResult is not found in the empty JSON string", GoogleCloudDatacatalogV1beta1SearchCatalogResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatacatalogV1beta1SearchCatalogResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatacatalogV1beta1SearchCatalogResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("linkedResource") != null && !jsonObj.get("linkedResource").isJsonNull()) && !jsonObj.get("linkedResource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedResource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedResource").toString()));
      }
      if ((jsonObj.get("modifyTime") != null && !jsonObj.get("modifyTime").isJsonNull()) && !jsonObj.get("modifyTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifyTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifyTime").toString()));
      }
      if ((jsonObj.get("relativeResourceName") != null && !jsonObj.get("relativeResourceName").isJsonNull()) && !jsonObj.get("relativeResourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relativeResourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relativeResourceName").toString()));
      }
      if ((jsonObj.get("searchResultSubtype") != null && !jsonObj.get("searchResultSubtype").isJsonNull()) && !jsonObj.get("searchResultSubtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchResultSubtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchResultSubtype").toString()));
      }
      if ((jsonObj.get("searchResultType") != null && !jsonObj.get("searchResultType").isJsonNull()) && !jsonObj.get("searchResultType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchResultType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchResultType").toString()));
      }
      // validate the optional field `searchResultType`
      if (jsonObj.get("searchResultType") != null && !jsonObj.get("searchResultType").isJsonNull()) {
        SearchResultTypeEnum.validateJsonElement(jsonObj.get("searchResultType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatacatalogV1beta1SearchCatalogResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatacatalogV1beta1SearchCatalogResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatacatalogV1beta1SearchCatalogResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatacatalogV1beta1SearchCatalogResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatacatalogV1beta1SearchCatalogResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatacatalogV1beta1SearchCatalogResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatacatalogV1beta1SearchCatalogResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatacatalogV1beta1SearchCatalogResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatacatalogV1beta1SearchCatalogResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatacatalogV1beta1SearchCatalogResult
   */
  public static GoogleCloudDatacatalogV1beta1SearchCatalogResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatacatalogV1beta1SearchCatalogResult.class);
  }

  /**
   * Convert an instance of GoogleCloudDatacatalogV1beta1SearchCatalogResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

