/*
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudDatacatalogV1BigQueryDateShardedSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1BigQueryTableSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1BusinessContext;
import org.openapitools.client.model.GoogleCloudDatacatalogV1CloudBigtableSystemSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1DataSource;
import org.openapitools.client.model.GoogleCloudDatacatalogV1DataSourceConnectionSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1DatabaseTableSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1DatasetSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1FeatureOnlineStoreSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1FilesetSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1GcsFilesetSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1LookerSystemSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1ModelSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1PersonalDetails;
import org.openapitools.client.model.GoogleCloudDatacatalogV1RoutineSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1Schema;
import org.openapitools.client.model.GoogleCloudDatacatalogV1ServiceSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1SqlDatabaseSystemSpec;
import org.openapitools.client.model.GoogleCloudDatacatalogV1SystemTimestamps;
import org.openapitools.client.model.GoogleCloudDatacatalogV1UsageSignal;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the &#x60;linked_resource&#x60; field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:13.080824-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatacatalogV1Entry {
  public static final String SERIALIZED_NAME_BIGQUERY_DATE_SHARDED_SPEC = "bigqueryDateShardedSpec";
  @SerializedName(SERIALIZED_NAME_BIGQUERY_DATE_SHARDED_SPEC)
  private GoogleCloudDatacatalogV1BigQueryDateShardedSpec bigqueryDateShardedSpec;

  public static final String SERIALIZED_NAME_BIGQUERY_TABLE_SPEC = "bigqueryTableSpec";
  @SerializedName(SERIALIZED_NAME_BIGQUERY_TABLE_SPEC)
  private GoogleCloudDatacatalogV1BigQueryTableSpec bigqueryTableSpec;

  public static final String SERIALIZED_NAME_BUSINESS_CONTEXT = "businessContext";
  @SerializedName(SERIALIZED_NAME_BUSINESS_CONTEXT)
  private GoogleCloudDatacatalogV1BusinessContext businessContext;

  public static final String SERIALIZED_NAME_CLOUD_BIGTABLE_SYSTEM_SPEC = "cloudBigtableSystemSpec";
  @SerializedName(SERIALIZED_NAME_CLOUD_BIGTABLE_SYSTEM_SPEC)
  private GoogleCloudDatacatalogV1CloudBigtableSystemSpec cloudBigtableSystemSpec;

  public static final String SERIALIZED_NAME_DATA_SOURCE = "dataSource";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE)
  private GoogleCloudDatacatalogV1DataSource dataSource;

  public static final String SERIALIZED_NAME_DATA_SOURCE_CONNECTION_SPEC = "dataSourceConnectionSpec";
  @SerializedName(SERIALIZED_NAME_DATA_SOURCE_CONNECTION_SPEC)
  private GoogleCloudDatacatalogV1DataSourceConnectionSpec dataSourceConnectionSpec;

  public static final String SERIALIZED_NAME_DATABASE_TABLE_SPEC = "databaseTableSpec";
  @SerializedName(SERIALIZED_NAME_DATABASE_TABLE_SPEC)
  private GoogleCloudDatacatalogV1DatabaseTableSpec databaseTableSpec;

  public static final String SERIALIZED_NAME_DATASET_SPEC = "datasetSpec";
  @SerializedName(SERIALIZED_NAME_DATASET_SPEC)
  private GoogleCloudDatacatalogV1DatasetSpec datasetSpec;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_FEATURE_ONLINE_STORE_SPEC = "featureOnlineStoreSpec";
  @SerializedName(SERIALIZED_NAME_FEATURE_ONLINE_STORE_SPEC)
  private GoogleCloudDatacatalogV1FeatureOnlineStoreSpec featureOnlineStoreSpec;

  public static final String SERIALIZED_NAME_FILESET_SPEC = "filesetSpec";
  @SerializedName(SERIALIZED_NAME_FILESET_SPEC)
  private GoogleCloudDatacatalogV1FilesetSpec filesetSpec;

  public static final String SERIALIZED_NAME_FULLY_QUALIFIED_NAME = "fullyQualifiedName";
  @SerializedName(SERIALIZED_NAME_FULLY_QUALIFIED_NAME)
  private String fullyQualifiedName;

  public static final String SERIALIZED_NAME_GCS_FILESET_SPEC = "gcsFilesetSpec";
  @SerializedName(SERIALIZED_NAME_GCS_FILESET_SPEC)
  private GoogleCloudDatacatalogV1GcsFilesetSpec gcsFilesetSpec;

  /**
   * Output only. Indicates the entry&#39;s source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
   */
  @JsonAdapter(IntegratedSystemEnum.Adapter.class)
  public enum IntegratedSystemEnum {
    INTEGRATED_SYSTEM_UNSPECIFIED("INTEGRATED_SYSTEM_UNSPECIFIED"),
    
    BIGQUERY("BIGQUERY"),
    
    CLOUD_PUBSUB("CLOUD_PUBSUB"),
    
    DATAPROC_METASTORE("DATAPROC_METASTORE"),
    
    DATAPLEX("DATAPLEX"),
    
    CLOUD_SPANNER("CLOUD_SPANNER"),
    
    CLOUD_BIGTABLE("CLOUD_BIGTABLE"),
    
    CLOUD_SQL("CLOUD_SQL"),
    
    LOOKER("LOOKER"),
    
    VERTEX_AI("VERTEX_AI");

    private String value;

    IntegratedSystemEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IntegratedSystemEnum fromValue(String value) {
      for (IntegratedSystemEnum b : IntegratedSystemEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<IntegratedSystemEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IntegratedSystemEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IntegratedSystemEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return IntegratedSystemEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      IntegratedSystemEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_INTEGRATED_SYSTEM = "integratedSystem";
  @SerializedName(SERIALIZED_NAME_INTEGRATED_SYSTEM)
  private IntegratedSystemEnum integratedSystem;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_LINKED_RESOURCE = "linkedResource";
  @SerializedName(SERIALIZED_NAME_LINKED_RESOURCE)
  private String linkedResource;

  public static final String SERIALIZED_NAME_LOOKER_SYSTEM_SPEC = "lookerSystemSpec";
  @SerializedName(SERIALIZED_NAME_LOOKER_SYSTEM_SPEC)
  private GoogleCloudDatacatalogV1LookerSystemSpec lookerSystemSpec;

  public static final String SERIALIZED_NAME_MODEL_SPEC = "modelSpec";
  @SerializedName(SERIALIZED_NAME_MODEL_SPEC)
  private GoogleCloudDatacatalogV1ModelSpec modelSpec;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PERSONAL_DETAILS = "personalDetails";
  @SerializedName(SERIALIZED_NAME_PERSONAL_DETAILS)
  private GoogleCloudDatacatalogV1PersonalDetails personalDetails;

  public static final String SERIALIZED_NAME_ROUTINE_SPEC = "routineSpec";
  @SerializedName(SERIALIZED_NAME_ROUTINE_SPEC)
  private GoogleCloudDatacatalogV1RoutineSpec routineSpec;

  public static final String SERIALIZED_NAME_SCHEMA = "schema";
  @SerializedName(SERIALIZED_NAME_SCHEMA)
  private GoogleCloudDatacatalogV1Schema schema;

  public static final String SERIALIZED_NAME_SERVICE_SPEC = "serviceSpec";
  @SerializedName(SERIALIZED_NAME_SERVICE_SPEC)
  private GoogleCloudDatacatalogV1ServiceSpec serviceSpec;

  public static final String SERIALIZED_NAME_SOURCE_SYSTEM_TIMESTAMPS = "sourceSystemTimestamps";
  @SerializedName(SERIALIZED_NAME_SOURCE_SYSTEM_TIMESTAMPS)
  private GoogleCloudDatacatalogV1SystemTimestamps sourceSystemTimestamps;

  public static final String SERIALIZED_NAME_SQL_DATABASE_SYSTEM_SPEC = "sqlDatabaseSystemSpec";
  @SerializedName(SERIALIZED_NAME_SQL_DATABASE_SYSTEM_SPEC)
  private GoogleCloudDatacatalogV1SqlDatabaseSystemSpec sqlDatabaseSystemSpec;

  /**
   * The type of the entry. For details, see [&#x60;EntryType&#x60;](#entrytype).
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    ENTRY_TYPE_UNSPECIFIED("ENTRY_TYPE_UNSPECIFIED"),
    
    TABLE("TABLE"),
    
    MODEL("MODEL"),
    
    DATA_STREAM("DATA_STREAM"),
    
    FILESET("FILESET"),
    
    CLUSTER("CLUSTER"),
    
    DATABASE("DATABASE"),
    
    DATA_SOURCE_CONNECTION("DATA_SOURCE_CONNECTION"),
    
    ROUTINE("ROUTINE"),
    
    LAKE("LAKE"),
    
    ZONE("ZONE"),
    
    SERVICE("SERVICE"),
    
    DATABASE_SCHEMA("DATABASE_SCHEMA"),
    
    DASHBOARD("DASHBOARD"),
    
    EXPLORE("EXPLORE"),
    
    LOOK("LOOK"),
    
    FEATURE_ONLINE_STORE("FEATURE_ONLINE_STORE"),
    
    FEATURE_VIEW("FEATURE_VIEW"),
    
    FEATURE_GROUP("FEATURE_GROUP");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_USAGE_SIGNAL = "usageSignal";
  @SerializedName(SERIALIZED_NAME_USAGE_SIGNAL)
  private GoogleCloudDatacatalogV1UsageSignal usageSignal;

  public static final String SERIALIZED_NAME_USER_SPECIFIED_SYSTEM = "userSpecifiedSystem";
  @SerializedName(SERIALIZED_NAME_USER_SPECIFIED_SYSTEM)
  private String userSpecifiedSystem;

  public static final String SERIALIZED_NAME_USER_SPECIFIED_TYPE = "userSpecifiedType";
  @SerializedName(SERIALIZED_NAME_USER_SPECIFIED_TYPE)
  private String userSpecifiedType;

  public GoogleCloudDatacatalogV1Entry() {
  }

  public GoogleCloudDatacatalogV1Entry(
     IntegratedSystemEnum integratedSystem, 
     String name
  ) {
    this();
    this.integratedSystem = integratedSystem;
    this.name = name;
  }

  public GoogleCloudDatacatalogV1Entry bigqueryDateShardedSpec(GoogleCloudDatacatalogV1BigQueryDateShardedSpec bigqueryDateShardedSpec) {
    this.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
    return this;
  }

  /**
   * Get bigqueryDateShardedSpec
   * @return bigqueryDateShardedSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1BigQueryDateShardedSpec getBigqueryDateShardedSpec() {
    return bigqueryDateShardedSpec;
  }

  public void setBigqueryDateShardedSpec(GoogleCloudDatacatalogV1BigQueryDateShardedSpec bigqueryDateShardedSpec) {
    this.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
  }


  public GoogleCloudDatacatalogV1Entry bigqueryTableSpec(GoogleCloudDatacatalogV1BigQueryTableSpec bigqueryTableSpec) {
    this.bigqueryTableSpec = bigqueryTableSpec;
    return this;
  }

  /**
   * Get bigqueryTableSpec
   * @return bigqueryTableSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1BigQueryTableSpec getBigqueryTableSpec() {
    return bigqueryTableSpec;
  }

  public void setBigqueryTableSpec(GoogleCloudDatacatalogV1BigQueryTableSpec bigqueryTableSpec) {
    this.bigqueryTableSpec = bigqueryTableSpec;
  }


  public GoogleCloudDatacatalogV1Entry businessContext(GoogleCloudDatacatalogV1BusinessContext businessContext) {
    this.businessContext = businessContext;
    return this;
  }

  /**
   * Get businessContext
   * @return businessContext
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1BusinessContext getBusinessContext() {
    return businessContext;
  }

  public void setBusinessContext(GoogleCloudDatacatalogV1BusinessContext businessContext) {
    this.businessContext = businessContext;
  }


  public GoogleCloudDatacatalogV1Entry cloudBigtableSystemSpec(GoogleCloudDatacatalogV1CloudBigtableSystemSpec cloudBigtableSystemSpec) {
    this.cloudBigtableSystemSpec = cloudBigtableSystemSpec;
    return this;
  }

  /**
   * Get cloudBigtableSystemSpec
   * @return cloudBigtableSystemSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1CloudBigtableSystemSpec getCloudBigtableSystemSpec() {
    return cloudBigtableSystemSpec;
  }

  public void setCloudBigtableSystemSpec(GoogleCloudDatacatalogV1CloudBigtableSystemSpec cloudBigtableSystemSpec) {
    this.cloudBigtableSystemSpec = cloudBigtableSystemSpec;
  }


  public GoogleCloudDatacatalogV1Entry dataSource(GoogleCloudDatacatalogV1DataSource dataSource) {
    this.dataSource = dataSource;
    return this;
  }

  /**
   * Get dataSource
   * @return dataSource
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1DataSource getDataSource() {
    return dataSource;
  }

  public void setDataSource(GoogleCloudDatacatalogV1DataSource dataSource) {
    this.dataSource = dataSource;
  }


  public GoogleCloudDatacatalogV1Entry dataSourceConnectionSpec(GoogleCloudDatacatalogV1DataSourceConnectionSpec dataSourceConnectionSpec) {
    this.dataSourceConnectionSpec = dataSourceConnectionSpec;
    return this;
  }

  /**
   * Get dataSourceConnectionSpec
   * @return dataSourceConnectionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1DataSourceConnectionSpec getDataSourceConnectionSpec() {
    return dataSourceConnectionSpec;
  }

  public void setDataSourceConnectionSpec(GoogleCloudDatacatalogV1DataSourceConnectionSpec dataSourceConnectionSpec) {
    this.dataSourceConnectionSpec = dataSourceConnectionSpec;
  }


  public GoogleCloudDatacatalogV1Entry databaseTableSpec(GoogleCloudDatacatalogV1DatabaseTableSpec databaseTableSpec) {
    this.databaseTableSpec = databaseTableSpec;
    return this;
  }

  /**
   * Get databaseTableSpec
   * @return databaseTableSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1DatabaseTableSpec getDatabaseTableSpec() {
    return databaseTableSpec;
  }

  public void setDatabaseTableSpec(GoogleCloudDatacatalogV1DatabaseTableSpec databaseTableSpec) {
    this.databaseTableSpec = databaseTableSpec;
  }


  public GoogleCloudDatacatalogV1Entry datasetSpec(GoogleCloudDatacatalogV1DatasetSpec datasetSpec) {
    this.datasetSpec = datasetSpec;
    return this;
  }

  /**
   * Get datasetSpec
   * @return datasetSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1DatasetSpec getDatasetSpec() {
    return datasetSpec;
  }

  public void setDatasetSpec(GoogleCloudDatacatalogV1DatasetSpec datasetSpec) {
    this.datasetSpec = datasetSpec;
  }


  public GoogleCloudDatacatalogV1Entry description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudDatacatalogV1Entry displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudDatacatalogV1Entry featureOnlineStoreSpec(GoogleCloudDatacatalogV1FeatureOnlineStoreSpec featureOnlineStoreSpec) {
    this.featureOnlineStoreSpec = featureOnlineStoreSpec;
    return this;
  }

  /**
   * Get featureOnlineStoreSpec
   * @return featureOnlineStoreSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1FeatureOnlineStoreSpec getFeatureOnlineStoreSpec() {
    return featureOnlineStoreSpec;
  }

  public void setFeatureOnlineStoreSpec(GoogleCloudDatacatalogV1FeatureOnlineStoreSpec featureOnlineStoreSpec) {
    this.featureOnlineStoreSpec = featureOnlineStoreSpec;
  }


  public GoogleCloudDatacatalogV1Entry filesetSpec(GoogleCloudDatacatalogV1FilesetSpec filesetSpec) {
    this.filesetSpec = filesetSpec;
    return this;
  }

  /**
   * Get filesetSpec
   * @return filesetSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1FilesetSpec getFilesetSpec() {
    return filesetSpec;
  }

  public void setFilesetSpec(GoogleCloudDatacatalogV1FilesetSpec filesetSpec) {
    this.filesetSpec = filesetSpec;
  }


  public GoogleCloudDatacatalogV1Entry fullyQualifiedName(String fullyQualifiedName) {
    this.fullyQualifiedName = fullyQualifiedName;
    return this;
  }

  /**
   * [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation, and read-only later. Can be used for search and lookup of the entries. 
   * @return fullyQualifiedName
   */
  @javax.annotation.Nullable
  public String getFullyQualifiedName() {
    return fullyQualifiedName;
  }

  public void setFullyQualifiedName(String fullyQualifiedName) {
    this.fullyQualifiedName = fullyQualifiedName;
  }


  public GoogleCloudDatacatalogV1Entry gcsFilesetSpec(GoogleCloudDatacatalogV1GcsFilesetSpec gcsFilesetSpec) {
    this.gcsFilesetSpec = gcsFilesetSpec;
    return this;
  }

  /**
   * Get gcsFilesetSpec
   * @return gcsFilesetSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1GcsFilesetSpec getGcsFilesetSpec() {
    return gcsFilesetSpec;
  }

  public void setGcsFilesetSpec(GoogleCloudDatacatalogV1GcsFilesetSpec gcsFilesetSpec) {
    this.gcsFilesetSpec = gcsFilesetSpec;
  }


  /**
   * Output only. Indicates the entry&#39;s source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
   * @return integratedSystem
   */
  @javax.annotation.Nullable
  public IntegratedSystemEnum getIntegratedSystem() {
    return integratedSystem;
  }



  public GoogleCloudDatacatalogV1Entry labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudDatacatalogV1Entry putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudDatacatalogV1Entry linkedResource(String linkedResource) {
    this.linkedResource = linkedResource;
    return this;
  }

  /**
   * The resource this metadata entry refers to. For Google Cloud Platform resources, &#x60;linked_resource&#x60; is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the &#x60;linked_resource&#x60; for a table resource from BigQuery is: &#x60;//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}&#x60; Output only when the entry is one of the types in the &#x60;EntryType&#x60; enum. For entries with a &#x60;user_specified_type&#x60;, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
   * @return linkedResource
   */
  @javax.annotation.Nullable
  public String getLinkedResource() {
    return linkedResource;
  }

  public void setLinkedResource(String linkedResource) {
    this.linkedResource = linkedResource;
  }


  public GoogleCloudDatacatalogV1Entry lookerSystemSpec(GoogleCloudDatacatalogV1LookerSystemSpec lookerSystemSpec) {
    this.lookerSystemSpec = lookerSystemSpec;
    return this;
  }

  /**
   * Get lookerSystemSpec
   * @return lookerSystemSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1LookerSystemSpec getLookerSystemSpec() {
    return lookerSystemSpec;
  }

  public void setLookerSystemSpec(GoogleCloudDatacatalogV1LookerSystemSpec lookerSystemSpec) {
    this.lookerSystemSpec = lookerSystemSpec;
  }


  public GoogleCloudDatacatalogV1Entry modelSpec(GoogleCloudDatacatalogV1ModelSpec modelSpec) {
    this.modelSpec = modelSpec;
    return this;
  }

  /**
   * Get modelSpec
   * @return modelSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1ModelSpec getModelSpec() {
    return modelSpec;
  }

  public void setModelSpec(GoogleCloudDatacatalogV1ModelSpec modelSpec) {
    this.modelSpec = modelSpec;
  }


  /**
   * Output only. The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudDatacatalogV1Entry personalDetails(GoogleCloudDatacatalogV1PersonalDetails personalDetails) {
    this.personalDetails = personalDetails;
    return this;
  }

  /**
   * Get personalDetails
   * @return personalDetails
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1PersonalDetails getPersonalDetails() {
    return personalDetails;
  }

  public void setPersonalDetails(GoogleCloudDatacatalogV1PersonalDetails personalDetails) {
    this.personalDetails = personalDetails;
  }


  public GoogleCloudDatacatalogV1Entry routineSpec(GoogleCloudDatacatalogV1RoutineSpec routineSpec) {
    this.routineSpec = routineSpec;
    return this;
  }

  /**
   * Get routineSpec
   * @return routineSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1RoutineSpec getRoutineSpec() {
    return routineSpec;
  }

  public void setRoutineSpec(GoogleCloudDatacatalogV1RoutineSpec routineSpec) {
    this.routineSpec = routineSpec;
  }


  public GoogleCloudDatacatalogV1Entry schema(GoogleCloudDatacatalogV1Schema schema) {
    this.schema = schema;
    return this;
  }

  /**
   * Get schema
   * @return schema
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1Schema getSchema() {
    return schema;
  }

  public void setSchema(GoogleCloudDatacatalogV1Schema schema) {
    this.schema = schema;
  }


  public GoogleCloudDatacatalogV1Entry serviceSpec(GoogleCloudDatacatalogV1ServiceSpec serviceSpec) {
    this.serviceSpec = serviceSpec;
    return this;
  }

  /**
   * Get serviceSpec
   * @return serviceSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1ServiceSpec getServiceSpec() {
    return serviceSpec;
  }

  public void setServiceSpec(GoogleCloudDatacatalogV1ServiceSpec serviceSpec) {
    this.serviceSpec = serviceSpec;
  }


  public GoogleCloudDatacatalogV1Entry sourceSystemTimestamps(GoogleCloudDatacatalogV1SystemTimestamps sourceSystemTimestamps) {
    this.sourceSystemTimestamps = sourceSystemTimestamps;
    return this;
  }

  /**
   * Get sourceSystemTimestamps
   * @return sourceSystemTimestamps
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1SystemTimestamps getSourceSystemTimestamps() {
    return sourceSystemTimestamps;
  }

  public void setSourceSystemTimestamps(GoogleCloudDatacatalogV1SystemTimestamps sourceSystemTimestamps) {
    this.sourceSystemTimestamps = sourceSystemTimestamps;
  }


  public GoogleCloudDatacatalogV1Entry sqlDatabaseSystemSpec(GoogleCloudDatacatalogV1SqlDatabaseSystemSpec sqlDatabaseSystemSpec) {
    this.sqlDatabaseSystemSpec = sqlDatabaseSystemSpec;
    return this;
  }

  /**
   * Get sqlDatabaseSystemSpec
   * @return sqlDatabaseSystemSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1SqlDatabaseSystemSpec getSqlDatabaseSystemSpec() {
    return sqlDatabaseSystemSpec;
  }

  public void setSqlDatabaseSystemSpec(GoogleCloudDatacatalogV1SqlDatabaseSystemSpec sqlDatabaseSystemSpec) {
    this.sqlDatabaseSystemSpec = sqlDatabaseSystemSpec;
  }


  public GoogleCloudDatacatalogV1Entry type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * The type of the entry. For details, see [&#x60;EntryType&#x60;](#entrytype).
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public GoogleCloudDatacatalogV1Entry usageSignal(GoogleCloudDatacatalogV1UsageSignal usageSignal) {
    this.usageSignal = usageSignal;
    return this;
  }

  /**
   * Get usageSignal
   * @return usageSignal
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1UsageSignal getUsageSignal() {
    return usageSignal;
  }

  public void setUsageSignal(GoogleCloudDatacatalogV1UsageSignal usageSignal) {
    this.usageSignal = usageSignal;
  }


  public GoogleCloudDatacatalogV1Entry userSpecifiedSystem(String userSpecifiedSystem) {
    this.userSpecifiedSystem = userSpecifiedSystem;
    return this;
  }

  /**
   * Indicates the entry&#39;s source system that Data Catalog doesn&#39;t automatically integrate with. The &#x60;user_specified_system&#x60; string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
   * @return userSpecifiedSystem
   */
  @javax.annotation.Nullable
  public String getUserSpecifiedSystem() {
    return userSpecifiedSystem;
  }

  public void setUserSpecifiedSystem(String userSpecifiedSystem) {
    this.userSpecifiedSystem = userSpecifiedSystem;
  }


  public GoogleCloudDatacatalogV1Entry userSpecifiedType(String userSpecifiedType) {
    this.userSpecifiedType = userSpecifiedType;
    return this;
  }

  /**
   * Custom entry type that doesn&#39;t match any of the values allowed for input and listed in the &#x60;EntryType&#x60; enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, &#x60;my_special_type&#x60;. The &#x60;user_specified_type&#x60; string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
   * @return userSpecifiedType
   */
  @javax.annotation.Nullable
  public String getUserSpecifiedType() {
    return userSpecifiedType;
  }

  public void setUserSpecifiedType(String userSpecifiedType) {
    this.userSpecifiedType = userSpecifiedType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatacatalogV1Entry googleCloudDatacatalogV1Entry = (GoogleCloudDatacatalogV1Entry) o;
    return Objects.equals(this.bigqueryDateShardedSpec, googleCloudDatacatalogV1Entry.bigqueryDateShardedSpec) &&
        Objects.equals(this.bigqueryTableSpec, googleCloudDatacatalogV1Entry.bigqueryTableSpec) &&
        Objects.equals(this.businessContext, googleCloudDatacatalogV1Entry.businessContext) &&
        Objects.equals(this.cloudBigtableSystemSpec, googleCloudDatacatalogV1Entry.cloudBigtableSystemSpec) &&
        Objects.equals(this.dataSource, googleCloudDatacatalogV1Entry.dataSource) &&
        Objects.equals(this.dataSourceConnectionSpec, googleCloudDatacatalogV1Entry.dataSourceConnectionSpec) &&
        Objects.equals(this.databaseTableSpec, googleCloudDatacatalogV1Entry.databaseTableSpec) &&
        Objects.equals(this.datasetSpec, googleCloudDatacatalogV1Entry.datasetSpec) &&
        Objects.equals(this.description, googleCloudDatacatalogV1Entry.description) &&
        Objects.equals(this.displayName, googleCloudDatacatalogV1Entry.displayName) &&
        Objects.equals(this.featureOnlineStoreSpec, googleCloudDatacatalogV1Entry.featureOnlineStoreSpec) &&
        Objects.equals(this.filesetSpec, googleCloudDatacatalogV1Entry.filesetSpec) &&
        Objects.equals(this.fullyQualifiedName, googleCloudDatacatalogV1Entry.fullyQualifiedName) &&
        Objects.equals(this.gcsFilesetSpec, googleCloudDatacatalogV1Entry.gcsFilesetSpec) &&
        Objects.equals(this.integratedSystem, googleCloudDatacatalogV1Entry.integratedSystem) &&
        Objects.equals(this.labels, googleCloudDatacatalogV1Entry.labels) &&
        Objects.equals(this.linkedResource, googleCloudDatacatalogV1Entry.linkedResource) &&
        Objects.equals(this.lookerSystemSpec, googleCloudDatacatalogV1Entry.lookerSystemSpec) &&
        Objects.equals(this.modelSpec, googleCloudDatacatalogV1Entry.modelSpec) &&
        Objects.equals(this.name, googleCloudDatacatalogV1Entry.name) &&
        Objects.equals(this.personalDetails, googleCloudDatacatalogV1Entry.personalDetails) &&
        Objects.equals(this.routineSpec, googleCloudDatacatalogV1Entry.routineSpec) &&
        Objects.equals(this.schema, googleCloudDatacatalogV1Entry.schema) &&
        Objects.equals(this.serviceSpec, googleCloudDatacatalogV1Entry.serviceSpec) &&
        Objects.equals(this.sourceSystemTimestamps, googleCloudDatacatalogV1Entry.sourceSystemTimestamps) &&
        Objects.equals(this.sqlDatabaseSystemSpec, googleCloudDatacatalogV1Entry.sqlDatabaseSystemSpec) &&
        Objects.equals(this.type, googleCloudDatacatalogV1Entry.type) &&
        Objects.equals(this.usageSignal, googleCloudDatacatalogV1Entry.usageSignal) &&
        Objects.equals(this.userSpecifiedSystem, googleCloudDatacatalogV1Entry.userSpecifiedSystem) &&
        Objects.equals(this.userSpecifiedType, googleCloudDatacatalogV1Entry.userSpecifiedType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigqueryDateShardedSpec, bigqueryTableSpec, businessContext, cloudBigtableSystemSpec, dataSource, dataSourceConnectionSpec, databaseTableSpec, datasetSpec, description, displayName, featureOnlineStoreSpec, filesetSpec, fullyQualifiedName, gcsFilesetSpec, integratedSystem, labels, linkedResource, lookerSystemSpec, modelSpec, name, personalDetails, routineSpec, schema, serviceSpec, sourceSystemTimestamps, sqlDatabaseSystemSpec, type, usageSignal, userSpecifiedSystem, userSpecifiedType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatacatalogV1Entry {\n");
    sb.append("    bigqueryDateShardedSpec: ").append(toIndentedString(bigqueryDateShardedSpec)).append("\n");
    sb.append("    bigqueryTableSpec: ").append(toIndentedString(bigqueryTableSpec)).append("\n");
    sb.append("    businessContext: ").append(toIndentedString(businessContext)).append("\n");
    sb.append("    cloudBigtableSystemSpec: ").append(toIndentedString(cloudBigtableSystemSpec)).append("\n");
    sb.append("    dataSource: ").append(toIndentedString(dataSource)).append("\n");
    sb.append("    dataSourceConnectionSpec: ").append(toIndentedString(dataSourceConnectionSpec)).append("\n");
    sb.append("    databaseTableSpec: ").append(toIndentedString(databaseTableSpec)).append("\n");
    sb.append("    datasetSpec: ").append(toIndentedString(datasetSpec)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    featureOnlineStoreSpec: ").append(toIndentedString(featureOnlineStoreSpec)).append("\n");
    sb.append("    filesetSpec: ").append(toIndentedString(filesetSpec)).append("\n");
    sb.append("    fullyQualifiedName: ").append(toIndentedString(fullyQualifiedName)).append("\n");
    sb.append("    gcsFilesetSpec: ").append(toIndentedString(gcsFilesetSpec)).append("\n");
    sb.append("    integratedSystem: ").append(toIndentedString(integratedSystem)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    linkedResource: ").append(toIndentedString(linkedResource)).append("\n");
    sb.append("    lookerSystemSpec: ").append(toIndentedString(lookerSystemSpec)).append("\n");
    sb.append("    modelSpec: ").append(toIndentedString(modelSpec)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    personalDetails: ").append(toIndentedString(personalDetails)).append("\n");
    sb.append("    routineSpec: ").append(toIndentedString(routineSpec)).append("\n");
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    serviceSpec: ").append(toIndentedString(serviceSpec)).append("\n");
    sb.append("    sourceSystemTimestamps: ").append(toIndentedString(sourceSystemTimestamps)).append("\n");
    sb.append("    sqlDatabaseSystemSpec: ").append(toIndentedString(sqlDatabaseSystemSpec)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    usageSignal: ").append(toIndentedString(usageSignal)).append("\n");
    sb.append("    userSpecifiedSystem: ").append(toIndentedString(userSpecifiedSystem)).append("\n");
    sb.append("    userSpecifiedType: ").append(toIndentedString(userSpecifiedType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigqueryDateShardedSpec");
    openapiFields.add("bigqueryTableSpec");
    openapiFields.add("businessContext");
    openapiFields.add("cloudBigtableSystemSpec");
    openapiFields.add("dataSource");
    openapiFields.add("dataSourceConnectionSpec");
    openapiFields.add("databaseTableSpec");
    openapiFields.add("datasetSpec");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("featureOnlineStoreSpec");
    openapiFields.add("filesetSpec");
    openapiFields.add("fullyQualifiedName");
    openapiFields.add("gcsFilesetSpec");
    openapiFields.add("integratedSystem");
    openapiFields.add("labels");
    openapiFields.add("linkedResource");
    openapiFields.add("lookerSystemSpec");
    openapiFields.add("modelSpec");
    openapiFields.add("name");
    openapiFields.add("personalDetails");
    openapiFields.add("routineSpec");
    openapiFields.add("schema");
    openapiFields.add("serviceSpec");
    openapiFields.add("sourceSystemTimestamps");
    openapiFields.add("sqlDatabaseSystemSpec");
    openapiFields.add("type");
    openapiFields.add("usageSignal");
    openapiFields.add("userSpecifiedSystem");
    openapiFields.add("userSpecifiedType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatacatalogV1Entry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatacatalogV1Entry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatacatalogV1Entry is not found in the empty JSON string", GoogleCloudDatacatalogV1Entry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatacatalogV1Entry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatacatalogV1Entry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigqueryDateShardedSpec`
      if (jsonObj.get("bigqueryDateShardedSpec") != null && !jsonObj.get("bigqueryDateShardedSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1BigQueryDateShardedSpec.validateJsonElement(jsonObj.get("bigqueryDateShardedSpec"));
      }
      // validate the optional field `bigqueryTableSpec`
      if (jsonObj.get("bigqueryTableSpec") != null && !jsonObj.get("bigqueryTableSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1BigQueryTableSpec.validateJsonElement(jsonObj.get("bigqueryTableSpec"));
      }
      // validate the optional field `businessContext`
      if (jsonObj.get("businessContext") != null && !jsonObj.get("businessContext").isJsonNull()) {
        GoogleCloudDatacatalogV1BusinessContext.validateJsonElement(jsonObj.get("businessContext"));
      }
      // validate the optional field `cloudBigtableSystemSpec`
      if (jsonObj.get("cloudBigtableSystemSpec") != null && !jsonObj.get("cloudBigtableSystemSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1CloudBigtableSystemSpec.validateJsonElement(jsonObj.get("cloudBigtableSystemSpec"));
      }
      // validate the optional field `dataSource`
      if (jsonObj.get("dataSource") != null && !jsonObj.get("dataSource").isJsonNull()) {
        GoogleCloudDatacatalogV1DataSource.validateJsonElement(jsonObj.get("dataSource"));
      }
      // validate the optional field `dataSourceConnectionSpec`
      if (jsonObj.get("dataSourceConnectionSpec") != null && !jsonObj.get("dataSourceConnectionSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1DataSourceConnectionSpec.validateJsonElement(jsonObj.get("dataSourceConnectionSpec"));
      }
      // validate the optional field `databaseTableSpec`
      if (jsonObj.get("databaseTableSpec") != null && !jsonObj.get("databaseTableSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1DatabaseTableSpec.validateJsonElement(jsonObj.get("databaseTableSpec"));
      }
      // validate the optional field `datasetSpec`
      if (jsonObj.get("datasetSpec") != null && !jsonObj.get("datasetSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1DatasetSpec.validateJsonElement(jsonObj.get("datasetSpec"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `featureOnlineStoreSpec`
      if (jsonObj.get("featureOnlineStoreSpec") != null && !jsonObj.get("featureOnlineStoreSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1FeatureOnlineStoreSpec.validateJsonElement(jsonObj.get("featureOnlineStoreSpec"));
      }
      // validate the optional field `filesetSpec`
      if (jsonObj.get("filesetSpec") != null && !jsonObj.get("filesetSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1FilesetSpec.validateJsonElement(jsonObj.get("filesetSpec"));
      }
      if ((jsonObj.get("fullyQualifiedName") != null && !jsonObj.get("fullyQualifiedName").isJsonNull()) && !jsonObj.get("fullyQualifiedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullyQualifiedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullyQualifiedName").toString()));
      }
      // validate the optional field `gcsFilesetSpec`
      if (jsonObj.get("gcsFilesetSpec") != null && !jsonObj.get("gcsFilesetSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1GcsFilesetSpec.validateJsonElement(jsonObj.get("gcsFilesetSpec"));
      }
      if ((jsonObj.get("integratedSystem") != null && !jsonObj.get("integratedSystem").isJsonNull()) && !jsonObj.get("integratedSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integratedSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integratedSystem").toString()));
      }
      // validate the optional field `integratedSystem`
      if (jsonObj.get("integratedSystem") != null && !jsonObj.get("integratedSystem").isJsonNull()) {
        IntegratedSystemEnum.validateJsonElement(jsonObj.get("integratedSystem"));
      }
      if ((jsonObj.get("linkedResource") != null && !jsonObj.get("linkedResource").isJsonNull()) && !jsonObj.get("linkedResource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedResource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedResource").toString()));
      }
      // validate the optional field `lookerSystemSpec`
      if (jsonObj.get("lookerSystemSpec") != null && !jsonObj.get("lookerSystemSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1LookerSystemSpec.validateJsonElement(jsonObj.get("lookerSystemSpec"));
      }
      // validate the optional field `modelSpec`
      if (jsonObj.get("modelSpec") != null && !jsonObj.get("modelSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1ModelSpec.validateJsonElement(jsonObj.get("modelSpec"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `personalDetails`
      if (jsonObj.get("personalDetails") != null && !jsonObj.get("personalDetails").isJsonNull()) {
        GoogleCloudDatacatalogV1PersonalDetails.validateJsonElement(jsonObj.get("personalDetails"));
      }
      // validate the optional field `routineSpec`
      if (jsonObj.get("routineSpec") != null && !jsonObj.get("routineSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1RoutineSpec.validateJsonElement(jsonObj.get("routineSpec"));
      }
      // validate the optional field `schema`
      if (jsonObj.get("schema") != null && !jsonObj.get("schema").isJsonNull()) {
        GoogleCloudDatacatalogV1Schema.validateJsonElement(jsonObj.get("schema"));
      }
      // validate the optional field `serviceSpec`
      if (jsonObj.get("serviceSpec") != null && !jsonObj.get("serviceSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1ServiceSpec.validateJsonElement(jsonObj.get("serviceSpec"));
      }
      // validate the optional field `sourceSystemTimestamps`
      if (jsonObj.get("sourceSystemTimestamps") != null && !jsonObj.get("sourceSystemTimestamps").isJsonNull()) {
        GoogleCloudDatacatalogV1SystemTimestamps.validateJsonElement(jsonObj.get("sourceSystemTimestamps"));
      }
      // validate the optional field `sqlDatabaseSystemSpec`
      if (jsonObj.get("sqlDatabaseSystemSpec") != null && !jsonObj.get("sqlDatabaseSystemSpec").isJsonNull()) {
        GoogleCloudDatacatalogV1SqlDatabaseSystemSpec.validateJsonElement(jsonObj.get("sqlDatabaseSystemSpec"));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        TypeEnum.validateJsonElement(jsonObj.get("type"));
      }
      // validate the optional field `usageSignal`
      if (jsonObj.get("usageSignal") != null && !jsonObj.get("usageSignal").isJsonNull()) {
        GoogleCloudDatacatalogV1UsageSignal.validateJsonElement(jsonObj.get("usageSignal"));
      }
      if ((jsonObj.get("userSpecifiedSystem") != null && !jsonObj.get("userSpecifiedSystem").isJsonNull()) && !jsonObj.get("userSpecifiedSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userSpecifiedSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userSpecifiedSystem").toString()));
      }
      if ((jsonObj.get("userSpecifiedType") != null && !jsonObj.get("userSpecifiedType").isJsonNull()) && !jsonObj.get("userSpecifiedType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userSpecifiedType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userSpecifiedType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatacatalogV1Entry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatacatalogV1Entry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatacatalogV1Entry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatacatalogV1Entry.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatacatalogV1Entry>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatacatalogV1Entry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatacatalogV1Entry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatacatalogV1Entry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatacatalogV1Entry
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatacatalogV1Entry
   */
  public static GoogleCloudDatacatalogV1Entry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatacatalogV1Entry.class);
  }

  /**
   * Convert an instance of GoogleCloudDatacatalogV1Entry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

