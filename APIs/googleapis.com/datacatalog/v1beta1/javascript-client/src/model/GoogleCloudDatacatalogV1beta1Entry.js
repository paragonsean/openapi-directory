/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec from './GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec';
import GoogleCloudDatacatalogV1beta1BigQueryTableSpec from './GoogleCloudDatacatalogV1beta1BigQueryTableSpec';
import GoogleCloudDatacatalogV1beta1GcsFilesetSpec from './GoogleCloudDatacatalogV1beta1GcsFilesetSpec';
import GoogleCloudDatacatalogV1beta1Schema from './GoogleCloudDatacatalogV1beta1Schema';
import GoogleCloudDatacatalogV1beta1SystemTimestamps from './GoogleCloudDatacatalogV1beta1SystemTimestamps';
import GoogleCloudDatacatalogV1beta1UsageSignal from './GoogleCloudDatacatalogV1beta1UsageSignal';

/**
 * The GoogleCloudDatacatalogV1beta1Entry model module.
 * @module model/GoogleCloudDatacatalogV1beta1Entry
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1beta1Entry {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1beta1Entry</code>.
     * Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the &#x60;linked_resource&#x60; field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag.
     * @alias module:model/GoogleCloudDatacatalogV1beta1Entry
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1beta1Entry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1beta1Entry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1beta1Entry} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1beta1Entry} The populated <code>GoogleCloudDatacatalogV1beta1Entry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1beta1Entry();

            if (data.hasOwnProperty('bigqueryDateShardedSpec')) {
                obj['bigqueryDateShardedSpec'] = GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec.constructFromObject(data['bigqueryDateShardedSpec']);
            }
            if (data.hasOwnProperty('bigqueryTableSpec')) {
                obj['bigqueryTableSpec'] = GoogleCloudDatacatalogV1beta1BigQueryTableSpec.constructFromObject(data['bigqueryTableSpec']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('gcsFilesetSpec')) {
                obj['gcsFilesetSpec'] = GoogleCloudDatacatalogV1beta1GcsFilesetSpec.constructFromObject(data['gcsFilesetSpec']);
            }
            if (data.hasOwnProperty('integratedSystem')) {
                obj['integratedSystem'] = ApiClient.convertToType(data['integratedSystem'], 'String');
            }
            if (data.hasOwnProperty('linkedResource')) {
                obj['linkedResource'] = ApiClient.convertToType(data['linkedResource'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = GoogleCloudDatacatalogV1beta1Schema.constructFromObject(data['schema']);
            }
            if (data.hasOwnProperty('sourceSystemTimestamps')) {
                obj['sourceSystemTimestamps'] = GoogleCloudDatacatalogV1beta1SystemTimestamps.constructFromObject(data['sourceSystemTimestamps']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('usageSignal')) {
                obj['usageSignal'] = GoogleCloudDatacatalogV1beta1UsageSignal.constructFromObject(data['usageSignal']);
            }
            if (data.hasOwnProperty('userSpecifiedSystem')) {
                obj['userSpecifiedSystem'] = ApiClient.convertToType(data['userSpecifiedSystem'], 'String');
            }
            if (data.hasOwnProperty('userSpecifiedType')) {
                obj['userSpecifiedType'] = ApiClient.convertToType(data['userSpecifiedType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1beta1Entry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1beta1Entry</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bigqueryDateShardedSpec`
        if (data['bigqueryDateShardedSpec']) { // data not null
          GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec.validateJSON(data['bigqueryDateShardedSpec']);
        }
        // validate the optional field `bigqueryTableSpec`
        if (data['bigqueryTableSpec']) { // data not null
          GoogleCloudDatacatalogV1beta1BigQueryTableSpec.validateJSON(data['bigqueryTableSpec']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `gcsFilesetSpec`
        if (data['gcsFilesetSpec']) { // data not null
          GoogleCloudDatacatalogV1beta1GcsFilesetSpec.validateJSON(data['gcsFilesetSpec']);
        }
        // ensure the json data is a string
        if (data['integratedSystem'] && !(typeof data['integratedSystem'] === 'string' || data['integratedSystem'] instanceof String)) {
            throw new Error("Expected the field `integratedSystem` to be a primitive type in the JSON string but got " + data['integratedSystem']);
        }
        // ensure the json data is a string
        if (data['linkedResource'] && !(typeof data['linkedResource'] === 'string' || data['linkedResource'] instanceof String)) {
            throw new Error("Expected the field `linkedResource` to be a primitive type in the JSON string but got " + data['linkedResource']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `schema`
        if (data['schema']) { // data not null
          GoogleCloudDatacatalogV1beta1Schema.validateJSON(data['schema']);
        }
        // validate the optional field `sourceSystemTimestamps`
        if (data['sourceSystemTimestamps']) { // data not null
          GoogleCloudDatacatalogV1beta1SystemTimestamps.validateJSON(data['sourceSystemTimestamps']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `usageSignal`
        if (data['usageSignal']) { // data not null
          GoogleCloudDatacatalogV1beta1UsageSignal.validateJSON(data['usageSignal']);
        }
        // ensure the json data is a string
        if (data['userSpecifiedSystem'] && !(typeof data['userSpecifiedSystem'] === 'string' || data['userSpecifiedSystem'] instanceof String)) {
            throw new Error("Expected the field `userSpecifiedSystem` to be a primitive type in the JSON string but got " + data['userSpecifiedSystem']);
        }
        // ensure the json data is a string
        if (data['userSpecifiedType'] && !(typeof data['userSpecifiedType'] === 'string' || data['userSpecifiedType'] instanceof String)) {
            throw new Error("Expected the field `userSpecifiedType` to be a primitive type in the JSON string but got " + data['userSpecifiedType']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec} bigqueryDateShardedSpec
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['bigqueryDateShardedSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1beta1BigQueryTableSpec} bigqueryTableSpec
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['bigqueryTableSpec'] = undefined;

/**
 * Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.
 * @member {String} description
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['description'] = undefined;

/**
 * Display information such as title and description. A short name to identify the entry, for example, \"Analytics Data - Jan 2011\". Default value is an empty string.
 * @member {String} displayName
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1beta1GcsFilesetSpec} gcsFilesetSpec
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['gcsFilesetSpec'] = undefined;

/**
 * Output only. This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
 * @member {module:model/GoogleCloudDatacatalogV1beta1Entry.IntegratedSystemEnum} integratedSystem
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['integratedSystem'] = undefined;

/**
 * The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.
 * @member {String} linkedResource
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['linkedResource'] = undefined;

/**
 * Output only. The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.
 * @member {String} name
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1beta1Schema} schema
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['schema'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1beta1SystemTimestamps} sourceSystemTimestamps
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['sourceSystemTimestamps'] = undefined;

/**
 * The type of the entry. Only used for Entries with types in the EntryType enum.
 * @member {module:model/GoogleCloudDatacatalogV1beta1Entry.TypeEnum} type
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['type'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1beta1UsageSignal} usageSignal
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['usageSignal'] = undefined;

/**
 * This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
 * @member {String} userSpecifiedSystem
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['userSpecifiedSystem'] = undefined;

/**
 * Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example \"my_special_type\". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`.
 * @member {String} userSpecifiedType
 */
GoogleCloudDatacatalogV1beta1Entry.prototype['userSpecifiedType'] = undefined;





/**
 * Allowed values for the <code>integratedSystem</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1beta1Entry['IntegratedSystemEnum'] = {

    /**
     * value: "INTEGRATED_SYSTEM_UNSPECIFIED"
     * @const
     */
    "INTEGRATED_SYSTEM_UNSPECIFIED": "INTEGRATED_SYSTEM_UNSPECIFIED",

    /**
     * value: "BIGQUERY"
     * @const
     */
    "BIGQUERY": "BIGQUERY",

    /**
     * value: "CLOUD_PUBSUB"
     * @const
     */
    "CLOUD_PUBSUB": "CLOUD_PUBSUB"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1beta1Entry['TypeEnum'] = {

    /**
     * value: "ENTRY_TYPE_UNSPECIFIED"
     * @const
     */
    "ENTRY_TYPE_UNSPECIFIED": "ENTRY_TYPE_UNSPECIFIED",

    /**
     * value: "TABLE"
     * @const
     */
    "TABLE": "TABLE",

    /**
     * value: "MODEL"
     * @const
     */
    "MODEL": "MODEL",

    /**
     * value: "DATA_STREAM"
     * @const
     */
    "DATA_STREAM": "DATA_STREAM",

    /**
     * value: "FILESET"
     * @const
     */
    "FILESET": "FILESET"
};



export default GoogleCloudDatacatalogV1beta1Entry;

