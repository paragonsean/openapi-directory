/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec model module.
 * @module model/GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec</code>.
     * Spec that applies to clusters of an Instance of Cloud Bigtable.
     * @alias module:model/GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec} The populated <code>GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec();

            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('linkedResource')) {
                obj['linkedResource'] = ApiClient.convertToType(data['linkedResource'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['linkedResource'] && !(typeof data['linkedResource'] === 'string' || data['linkedResource'] instanceof String)) {
            throw new Error("Expected the field `linkedResource` to be a primitive type in the JSON string but got " + data['linkedResource']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Name of the cluster.
 * @member {String} displayName
 */
GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec.prototype['displayName'] = undefined;

/**
 * A link back to the parent resource, in this case Instance.
 * @member {String} linkedResource
 */
GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec.prototype['linkedResource'] = undefined;

/**
 * Location of the cluster, typically a Cloud zone.
 * @member {String} location
 */
GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec.prototype['location'] = undefined;

/**
 * Type of the resource. For a cluster this would be \"CLUSTER\".
 * @member {String} type
 */
GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec.prototype['type'] = undefined;






export default GoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec;

