/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec model module.
 * @module model/GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec</code>.
     * Spec for a group of BigQuery tables with name pattern &#x60;[prefix]YYYYMMDD&#x60;. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding
     * @alias module:model/GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec} The populated <code>GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec();

            if (data.hasOwnProperty('dataset')) {
                obj['dataset'] = ApiClient.convertToType(data['dataset'], 'String');
            }
            if (data.hasOwnProperty('shardCount')) {
                obj['shardCount'] = ApiClient.convertToType(data['shardCount'], 'String');
            }
            if (data.hasOwnProperty('tablePrefix')) {
                obj['tablePrefix'] = ApiClient.convertToType(data['tablePrefix'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dataset'] && !(typeof data['dataset'] === 'string' || data['dataset'] instanceof String)) {
            throw new Error("Expected the field `dataset` to be a primitive type in the JSON string but got " + data['dataset']);
        }
        // ensure the json data is a string
        if (data['shardCount'] && !(typeof data['shardCount'] === 'string' || data['shardCount'] instanceof String)) {
            throw new Error("Expected the field `shardCount` to be a primitive type in the JSON string but got " + data['shardCount']);
        }
        // ensure the json data is a string
        if (data['tablePrefix'] && !(typeof data['tablePrefix'] === 'string' || data['tablePrefix'] instanceof String)) {
            throw new Error("Expected the field `tablePrefix` to be a primitive type in the JSON string but got " + data['tablePrefix']);
        }

        return true;
    }


}



/**
 * Output only. The Data Catalog resource name of the dataset entry the current table belongs to, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
 * @member {String} dataset
 */
GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec.prototype['dataset'] = undefined;

/**
 * Output only. Total number of shards.
 * @member {String} shardCount
 */
GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec.prototype['shardCount'] = undefined;

/**
 * Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the `table_prefix` is `MyTable`.
 * @member {String} tablePrefix
 */
GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec.prototype['tablePrefix'] = undefined;






export default GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec;

