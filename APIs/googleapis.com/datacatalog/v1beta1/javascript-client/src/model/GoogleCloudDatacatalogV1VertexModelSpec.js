/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1VertexModelSourceInfo from './GoogleCloudDatacatalogV1VertexModelSourceInfo';

/**
 * The GoogleCloudDatacatalogV1VertexModelSpec model module.
 * @module model/GoogleCloudDatacatalogV1VertexModelSpec
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1VertexModelSpec {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1VertexModelSpec</code>.
     * Specification for vertex model resources.
     * @alias module:model/GoogleCloudDatacatalogV1VertexModelSpec
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1VertexModelSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1VertexModelSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1VertexModelSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1VertexModelSpec} The populated <code>GoogleCloudDatacatalogV1VertexModelSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1VertexModelSpec();

            if (data.hasOwnProperty('containerImageUri')) {
                obj['containerImageUri'] = ApiClient.convertToType(data['containerImageUri'], 'String');
            }
            if (data.hasOwnProperty('versionAliases')) {
                obj['versionAliases'] = ApiClient.convertToType(data['versionAliases'], ['String']);
            }
            if (data.hasOwnProperty('versionDescription')) {
                obj['versionDescription'] = ApiClient.convertToType(data['versionDescription'], 'String');
            }
            if (data.hasOwnProperty('versionId')) {
                obj['versionId'] = ApiClient.convertToType(data['versionId'], 'String');
            }
            if (data.hasOwnProperty('vertexModelSourceInfo')) {
                obj['vertexModelSourceInfo'] = GoogleCloudDatacatalogV1VertexModelSourceInfo.constructFromObject(data['vertexModelSourceInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1VertexModelSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1VertexModelSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['containerImageUri'] && !(typeof data['containerImageUri'] === 'string' || data['containerImageUri'] instanceof String)) {
            throw new Error("Expected the field `containerImageUri` to be a primitive type in the JSON string but got " + data['containerImageUri']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['versionAliases'])) {
            throw new Error("Expected the field `versionAliases` to be an array in the JSON data but got " + data['versionAliases']);
        }
        // ensure the json data is a string
        if (data['versionDescription'] && !(typeof data['versionDescription'] === 'string' || data['versionDescription'] instanceof String)) {
            throw new Error("Expected the field `versionDescription` to be a primitive type in the JSON string but got " + data['versionDescription']);
        }
        // ensure the json data is a string
        if (data['versionId'] && !(typeof data['versionId'] === 'string' || data['versionId'] instanceof String)) {
            throw new Error("Expected the field `versionId` to be a primitive type in the JSON string but got " + data['versionId']);
        }
        // validate the optional field `vertexModelSourceInfo`
        if (data['vertexModelSourceInfo']) { // data not null
          GoogleCloudDatacatalogV1VertexModelSourceInfo.validateJSON(data['vertexModelSourceInfo']);
        }

        return true;
    }


}



/**
 * URI of the Docker image to be used as the custom container for serving predictions.
 * @member {String} containerImageUri
 */
GoogleCloudDatacatalogV1VertexModelSpec.prototype['containerImageUri'] = undefined;

/**
 * User provided version aliases so that a model version can be referenced via alias
 * @member {Array.<String>} versionAliases
 */
GoogleCloudDatacatalogV1VertexModelSpec.prototype['versionAliases'] = undefined;

/**
 * The description of this version.
 * @member {String} versionDescription
 */
GoogleCloudDatacatalogV1VertexModelSpec.prototype['versionDescription'] = undefined;

/**
 * The version ID of the model.
 * @member {String} versionId
 */
GoogleCloudDatacatalogV1VertexModelSpec.prototype['versionId'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1VertexModelSourceInfo} vertexModelSourceInfo
 */
GoogleCloudDatacatalogV1VertexModelSpec.prototype['vertexModelSourceInfo'] = undefined;






export default GoogleCloudDatacatalogV1VertexModelSpec;

