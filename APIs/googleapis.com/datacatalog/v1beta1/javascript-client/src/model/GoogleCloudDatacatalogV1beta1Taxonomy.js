/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1beta1SystemTimestamps from './GoogleCloudDatacatalogV1beta1SystemTimestamps';
import GoogleCloudDatacatalogV1beta1TaxonomyService from './GoogleCloudDatacatalogV1beta1TaxonomyService';

/**
 * The GoogleCloudDatacatalogV1beta1Taxonomy model module.
 * @module model/GoogleCloudDatacatalogV1beta1Taxonomy
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1beta1Taxonomy {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1beta1Taxonomy</code>.
     * A taxonomy is a collection of policy tags that classify data along a common axis. For instance a data *sensitivity* taxonomy could contain policy tags denoting PII such as age, zipcode, and SSN. A data *origin* taxonomy could contain policy tags to distinguish user data, employee data, partner data, public data.
     * @alias module:model/GoogleCloudDatacatalogV1beta1Taxonomy
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1beta1Taxonomy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1beta1Taxonomy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1beta1Taxonomy} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1beta1Taxonomy} The populated <code>GoogleCloudDatacatalogV1beta1Taxonomy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1beta1Taxonomy();

            if (data.hasOwnProperty('activatedPolicyTypes')) {
                obj['activatedPolicyTypes'] = ApiClient.convertToType(data['activatedPolicyTypes'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('policyTagCount')) {
                obj['policyTagCount'] = ApiClient.convertToType(data['policyTagCount'], 'Number');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = GoogleCloudDatacatalogV1beta1TaxonomyService.constructFromObject(data['service']);
            }
            if (data.hasOwnProperty('taxonomyTimestamps')) {
                obj['taxonomyTimestamps'] = GoogleCloudDatacatalogV1beta1SystemTimestamps.constructFromObject(data['taxonomyTimestamps']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1beta1Taxonomy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1beta1Taxonomy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['activatedPolicyTypes'])) {
            throw new Error("Expected the field `activatedPolicyTypes` to be an array in the JSON data but got " + data['activatedPolicyTypes']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `service`
        if (data['service']) { // data not null
          GoogleCloudDatacatalogV1beta1TaxonomyService.validateJSON(data['service']);
        }
        // validate the optional field `taxonomyTimestamps`
        if (data['taxonomyTimestamps']) { // data not null
          GoogleCloudDatacatalogV1beta1SystemTimestamps.validateJSON(data['taxonomyTimestamps']);
        }

        return true;
    }


}



/**
 * Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.
 * @member {Array.<module:model/GoogleCloudDatacatalogV1beta1Taxonomy.ActivatedPolicyTypesEnum>} activatedPolicyTypes
 */
GoogleCloudDatacatalogV1beta1Taxonomy.prototype['activatedPolicyTypes'] = undefined;

/**
 * Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description.
 * @member {String} description
 */
GoogleCloudDatacatalogV1beta1Taxonomy.prototype['description'] = undefined;

/**
 * Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8. The taxonomy display name must be unique within an organization.
 * @member {String} displayName
 */
GoogleCloudDatacatalogV1beta1Taxonomy.prototype['displayName'] = undefined;

/**
 * Identifier. Resource name of this taxonomy, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{id}\".
 * @member {String} name
 */
GoogleCloudDatacatalogV1beta1Taxonomy.prototype['name'] = undefined;

/**
 * Output only. Number of policy tags contained in this taxonomy.
 * @member {Number} policyTagCount
 */
GoogleCloudDatacatalogV1beta1Taxonomy.prototype['policyTagCount'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1beta1TaxonomyService} service
 */
GoogleCloudDatacatalogV1beta1Taxonomy.prototype['service'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1beta1SystemTimestamps} taxonomyTimestamps
 */
GoogleCloudDatacatalogV1beta1Taxonomy.prototype['taxonomyTimestamps'] = undefined;





/**
 * Allowed values for the <code>activatedPolicyTypes</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1beta1Taxonomy['ActivatedPolicyTypesEnum'] = {

    /**
     * value: "POLICY_TYPE_UNSPECIFIED"
     * @const
     */
    "POLICY_TYPE_UNSPECIFIED": "POLICY_TYPE_UNSPECIFIED",

    /**
     * value: "FINE_GRAINED_ACCESS_CONTROL"
     * @const
     */
    "FINE_GRAINED_ACCESS_CONTROL": "FINE_GRAINED_ACCESS_CONTROL"
};



export default GoogleCloudDatacatalogV1beta1Taxonomy;

