/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatacatalogV1beta1PolicyTag model module.
 * @module model/GoogleCloudDatacatalogV1beta1PolicyTag
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1beta1PolicyTag {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1beta1PolicyTag</code>.
     * Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be defined in a hierarchy. For example, consider the following hierarchy: Geolocation -&gt; (LatLong, City, ZipCode). PolicyTag \&quot;Geolocation\&quot; contains three child policy tags: \&quot;LatLong\&quot;, \&quot;City\&quot;, and \&quot;ZipCode\&quot;.
     * @alias module:model/GoogleCloudDatacatalogV1beta1PolicyTag
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1beta1PolicyTag.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1beta1PolicyTag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1beta1PolicyTag} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1beta1PolicyTag} The populated <code>GoogleCloudDatacatalogV1beta1PolicyTag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1beta1PolicyTag();

            if (data.hasOwnProperty('childPolicyTags')) {
                obj['childPolicyTags'] = ApiClient.convertToType(data['childPolicyTags'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parentPolicyTag')) {
                obj['parentPolicyTag'] = ApiClient.convertToType(data['parentPolicyTag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1beta1PolicyTag</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1beta1PolicyTag</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['childPolicyTags'])) {
            throw new Error("Expected the field `childPolicyTags` to be an array in the JSON data but got " + data['childPolicyTags']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['parentPolicyTag'] && !(typeof data['parentPolicyTag'] === 'string' || data['parentPolicyTag'] instanceof String)) {
            throw new Error("Expected the field `parentPolicyTag` to be a primitive type in the JSON string but got " + data['parentPolicyTag']);
        }

        return true;
    }


}



/**
 * Output only. Resource names of child policy tags of this policy tag.
 * @member {Array.<String>} childPolicyTags
 */
GoogleCloudDatacatalogV1beta1PolicyTag.prototype['childPolicyTags'] = undefined;

/**
 * Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.
 * @member {String} description
 */
GoogleCloudDatacatalogV1beta1PolicyTag.prototype['description'] = undefined;

/**
 * Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.
 * @member {String} displayName
 */
GoogleCloudDatacatalogV1beta1PolicyTag.prototype['displayName'] = undefined;

/**
 * Identifier. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".
 * @member {String} name
 */
GoogleCloudDatacatalogV1beta1PolicyTag.prototype['name'] = undefined;

/**
 * Resource name of this policy tag's parent policy tag (e.g. for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the \"Geolocation\" policy tag in the example above). If not set, defaults to an empty string.
 * @member {String} parentPolicyTag
 */
GoogleCloudDatacatalogV1beta1PolicyTag.prototype['parentPolicyTag'] = undefined;






export default GoogleCloudDatacatalogV1beta1PolicyTag;

