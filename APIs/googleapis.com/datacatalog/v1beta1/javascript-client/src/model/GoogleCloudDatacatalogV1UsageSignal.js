/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1CommonUsageStats from './GoogleCloudDatacatalogV1CommonUsageStats';
import GoogleCloudDatacatalogV1UsageStats from './GoogleCloudDatacatalogV1UsageStats';

/**
 * The GoogleCloudDatacatalogV1UsageSignal model module.
 * @module model/GoogleCloudDatacatalogV1UsageSignal
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1UsageSignal {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1UsageSignal</code>.
     * The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day.
     * @alias module:model/GoogleCloudDatacatalogV1UsageSignal
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1UsageSignal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1UsageSignal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1UsageSignal} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1UsageSignal} The populated <code>GoogleCloudDatacatalogV1UsageSignal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1UsageSignal();

            if (data.hasOwnProperty('commonUsageWithinTimeRange')) {
                obj['commonUsageWithinTimeRange'] = ApiClient.convertToType(data['commonUsageWithinTimeRange'], {'String': GoogleCloudDatacatalogV1CommonUsageStats});
            }
            if (data.hasOwnProperty('favoriteCount')) {
                obj['favoriteCount'] = ApiClient.convertToType(data['favoriteCount'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('usageWithinTimeRange')) {
                obj['usageWithinTimeRange'] = ApiClient.convertToType(data['usageWithinTimeRange'], {'String': GoogleCloudDatacatalogV1UsageStats});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1UsageSignal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1UsageSignal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['favoriteCount'] && !(typeof data['favoriteCount'] === 'string' || data['favoriteCount'] instanceof String)) {
            throw new Error("Expected the field `favoriteCount` to be a primitive type in the JSON string but got " + data['favoriteCount']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Common usage statistics over each of the predefined time ranges. Supported time ranges are `{\"24H\", \"7D\", \"30D\", \"Lifetime\"}`.
 * @member {Object.<String, module:model/GoogleCloudDatacatalogV1CommonUsageStats>} commonUsageWithinTimeRange
 */
GoogleCloudDatacatalogV1UsageSignal.prototype['commonUsageWithinTimeRange'] = undefined;

/**
 * Favorite count in the source system.
 * @member {String} favoriteCount
 */
GoogleCloudDatacatalogV1UsageSignal.prototype['favoriteCount'] = undefined;

/**
 * The end timestamp of the duration of usage statistics.
 * @member {String} updateTime
 */
GoogleCloudDatacatalogV1UsageSignal.prototype['updateTime'] = undefined;

/**
 * Output only. BigQuery usage statistics over each of the predefined time ranges. Supported time ranges are `{\"24H\", \"7D\", \"30D\"}`.
 * @member {Object.<String, module:model/GoogleCloudDatacatalogV1UsageStats>} usageWithinTimeRange
 */
GoogleCloudDatacatalogV1UsageSignal.prototype['usageWithinTimeRange'] = undefined;






export default GoogleCloudDatacatalogV1UsageSignal;

