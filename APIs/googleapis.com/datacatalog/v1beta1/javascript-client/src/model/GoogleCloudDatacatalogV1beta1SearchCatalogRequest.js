/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope from './GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope';

/**
 * The GoogleCloudDatacatalogV1beta1SearchCatalogRequest model module.
 * @module model/GoogleCloudDatacatalogV1beta1SearchCatalogRequest
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1beta1SearchCatalogRequest {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1beta1SearchCatalogRequest</code>.
     * Request message for SearchCatalog.
     * @alias module:model/GoogleCloudDatacatalogV1beta1SearchCatalogRequest
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1beta1SearchCatalogRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1beta1SearchCatalogRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1beta1SearchCatalogRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1beta1SearchCatalogRequest} The populated <code>GoogleCloudDatacatalogV1beta1SearchCatalogRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1beta1SearchCatalogRequest();

            if (data.hasOwnProperty('orderBy')) {
                obj['orderBy'] = ApiClient.convertToType(data['orderBy'], 'String');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('pageToken')) {
                obj['pageToken'] = ApiClient.convertToType(data['pageToken'], 'String');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.constructFromObject(data['scope']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1beta1SearchCatalogRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1beta1SearchCatalogRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['orderBy'] && !(typeof data['orderBy'] === 'string' || data['orderBy'] instanceof String)) {
            throw new Error("Expected the field `orderBy` to be a primitive type in the JSON string but got " + data['orderBy']);
        }
        // ensure the json data is a string
        if (data['pageToken'] && !(typeof data['pageToken'] === 'string' || data['pageToken'] instanceof String)) {
            throw new Error("Expected the field `pageToken` to be a primitive type in the JSON string but got " + data['pageToken']);
        }
        // ensure the json data is a string
        if (data['query'] && !(typeof data['query'] === 'string' || data['query'] instanceof String)) {
            throw new Error("Expected the field `query` to be a primitive type in the JSON string but got " + data['query']);
        }
        // validate the optional field `scope`
        if (data['scope']) { // data not null
          GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.validateJSON(data['scope']);
        }

        return true;
    }


}



/**
 * Specifies the ordering of results, currently supported case-sensitive choices are: * `relevance`, only supports descending * `last_modified_timestamp [asc|desc]`, defaults to descending if not specified * `default` that can only be descending If not specified, defaults to `relevance` descending.
 * @member {String} orderBy
 */
GoogleCloudDatacatalogV1beta1SearchCatalogRequest.prototype['orderBy'] = undefined;

/**
 * Number of results in the search page. If <=0 then defaults to 10. Max limit for page_size is 1000. Throws an invalid argument for page_size > 1000.
 * @member {Number} pageSize
 */
GoogleCloudDatacatalogV1beta1SearchCatalogRequest.prototype['pageSize'] = undefined;

/**
 * Optional. Pagination token returned in an earlier SearchCatalogResponse.next_page_token, which indicates that this is a continuation of a prior SearchCatalogRequest call, and that the system should return the next page of data. If empty, the first page is returned.
 * @member {String} pageToken
 */
GoogleCloudDatacatalogV1beta1SearchCatalogRequest.prototype['pageToken'] = undefined;

/**
 * Optional. The query string in search query syntax. An empty query string will result in all data assets (in the specified scope) that the user has access to. Query strings can be simple as \"x\" or more qualified as: * name:x * column:x * description:y Note: Query tokens need to have a minimum of 3 characters for substring matching to work correctly. See [Data Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference) for more information.
 * @member {String} query
 */
GoogleCloudDatacatalogV1beta1SearchCatalogRequest.prototype['query'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope} scope
 */
GoogleCloudDatacatalogV1beta1SearchCatalogRequest.prototype['scope'] = undefined;






export default GoogleCloudDatacatalogV1beta1SearchCatalogRequest;

