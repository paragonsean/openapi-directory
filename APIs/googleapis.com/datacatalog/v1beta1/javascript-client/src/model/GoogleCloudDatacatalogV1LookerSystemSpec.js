/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatacatalogV1LookerSystemSpec model module.
 * @module model/GoogleCloudDatacatalogV1LookerSystemSpec
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1LookerSystemSpec {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1LookerSystemSpec</code>.
     * Specification that applies to entries that are part &#x60;LOOKER&#x60; system (user_specified_type)
     * @alias module:model/GoogleCloudDatacatalogV1LookerSystemSpec
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1LookerSystemSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1LookerSystemSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1LookerSystemSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1LookerSystemSpec} The populated <code>GoogleCloudDatacatalogV1LookerSystemSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1LookerSystemSpec();

            if (data.hasOwnProperty('parentInstanceDisplayName')) {
                obj['parentInstanceDisplayName'] = ApiClient.convertToType(data['parentInstanceDisplayName'], 'String');
            }
            if (data.hasOwnProperty('parentInstanceId')) {
                obj['parentInstanceId'] = ApiClient.convertToType(data['parentInstanceId'], 'String');
            }
            if (data.hasOwnProperty('parentModelDisplayName')) {
                obj['parentModelDisplayName'] = ApiClient.convertToType(data['parentModelDisplayName'], 'String');
            }
            if (data.hasOwnProperty('parentModelId')) {
                obj['parentModelId'] = ApiClient.convertToType(data['parentModelId'], 'String');
            }
            if (data.hasOwnProperty('parentViewDisplayName')) {
                obj['parentViewDisplayName'] = ApiClient.convertToType(data['parentViewDisplayName'], 'String');
            }
            if (data.hasOwnProperty('parentViewId')) {
                obj['parentViewId'] = ApiClient.convertToType(data['parentViewId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1LookerSystemSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1LookerSystemSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['parentInstanceDisplayName'] && !(typeof data['parentInstanceDisplayName'] === 'string' || data['parentInstanceDisplayName'] instanceof String)) {
            throw new Error("Expected the field `parentInstanceDisplayName` to be a primitive type in the JSON string but got " + data['parentInstanceDisplayName']);
        }
        // ensure the json data is a string
        if (data['parentInstanceId'] && !(typeof data['parentInstanceId'] === 'string' || data['parentInstanceId'] instanceof String)) {
            throw new Error("Expected the field `parentInstanceId` to be a primitive type in the JSON string but got " + data['parentInstanceId']);
        }
        // ensure the json data is a string
        if (data['parentModelDisplayName'] && !(typeof data['parentModelDisplayName'] === 'string' || data['parentModelDisplayName'] instanceof String)) {
            throw new Error("Expected the field `parentModelDisplayName` to be a primitive type in the JSON string but got " + data['parentModelDisplayName']);
        }
        // ensure the json data is a string
        if (data['parentModelId'] && !(typeof data['parentModelId'] === 'string' || data['parentModelId'] instanceof String)) {
            throw new Error("Expected the field `parentModelId` to be a primitive type in the JSON string but got " + data['parentModelId']);
        }
        // ensure the json data is a string
        if (data['parentViewDisplayName'] && !(typeof data['parentViewDisplayName'] === 'string' || data['parentViewDisplayName'] instanceof String)) {
            throw new Error("Expected the field `parentViewDisplayName` to be a primitive type in the JSON string but got " + data['parentViewDisplayName']);
        }
        // ensure the json data is a string
        if (data['parentViewId'] && !(typeof data['parentViewId'] === 'string' || data['parentViewId'] instanceof String)) {
            throw new Error("Expected the field `parentViewId` to be a primitive type in the JSON string but got " + data['parentViewId']);
        }

        return true;
    }


}



/**
 * Name of the parent Looker Instance. Empty if it does not exist.
 * @member {String} parentInstanceDisplayName
 */
GoogleCloudDatacatalogV1LookerSystemSpec.prototype['parentInstanceDisplayName'] = undefined;

/**
 * ID of the parent Looker Instance. Empty if it does not exist. Example value: `someinstance.looker.com`
 * @member {String} parentInstanceId
 */
GoogleCloudDatacatalogV1LookerSystemSpec.prototype['parentInstanceId'] = undefined;

/**
 * Name of the parent Model. Empty if it does not exist.
 * @member {String} parentModelDisplayName
 */
GoogleCloudDatacatalogV1LookerSystemSpec.prototype['parentModelDisplayName'] = undefined;

/**
 * ID of the parent Model. Empty if it does not exist.
 * @member {String} parentModelId
 */
GoogleCloudDatacatalogV1LookerSystemSpec.prototype['parentModelId'] = undefined;

/**
 * Name of the parent View. Empty if it does not exist.
 * @member {String} parentViewDisplayName
 */
GoogleCloudDatacatalogV1LookerSystemSpec.prototype['parentViewDisplayName'] = undefined;

/**
 * ID of the parent View. Empty if it does not exist.
 * @member {String} parentViewId
 */
GoogleCloudDatacatalogV1LookerSystemSpec.prototype['parentViewId'] = undefined;






export default GoogleCloudDatacatalogV1LookerSystemSpec;

