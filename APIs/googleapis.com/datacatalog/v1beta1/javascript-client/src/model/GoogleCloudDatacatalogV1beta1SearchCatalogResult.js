/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatacatalogV1beta1SearchCatalogResult model module.
 * @module model/GoogleCloudDatacatalogV1beta1SearchCatalogResult
 * @version v1beta1
 */
class GoogleCloudDatacatalogV1beta1SearchCatalogResult {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1beta1SearchCatalogResult</code>.
     * A result that appears in the response of a search request. Each result captures details of one entry that matches the search.
     * @alias module:model/GoogleCloudDatacatalogV1beta1SearchCatalogResult
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1beta1SearchCatalogResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1beta1SearchCatalogResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1beta1SearchCatalogResult} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1beta1SearchCatalogResult} The populated <code>GoogleCloudDatacatalogV1beta1SearchCatalogResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1beta1SearchCatalogResult();

            if (data.hasOwnProperty('linkedResource')) {
                obj['linkedResource'] = ApiClient.convertToType(data['linkedResource'], 'String');
            }
            if (data.hasOwnProperty('modifyTime')) {
                obj['modifyTime'] = ApiClient.convertToType(data['modifyTime'], 'String');
            }
            if (data.hasOwnProperty('relativeResourceName')) {
                obj['relativeResourceName'] = ApiClient.convertToType(data['relativeResourceName'], 'String');
            }
            if (data.hasOwnProperty('searchResultSubtype')) {
                obj['searchResultSubtype'] = ApiClient.convertToType(data['searchResultSubtype'], 'String');
            }
            if (data.hasOwnProperty('searchResultType')) {
                obj['searchResultType'] = ApiClient.convertToType(data['searchResultType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1beta1SearchCatalogResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1beta1SearchCatalogResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['linkedResource'] && !(typeof data['linkedResource'] === 'string' || data['linkedResource'] instanceof String)) {
            throw new Error("Expected the field `linkedResource` to be a primitive type in the JSON string but got " + data['linkedResource']);
        }
        // ensure the json data is a string
        if (data['modifyTime'] && !(typeof data['modifyTime'] === 'string' || data['modifyTime'] instanceof String)) {
            throw new Error("Expected the field `modifyTime` to be a primitive type in the JSON string but got " + data['modifyTime']);
        }
        // ensure the json data is a string
        if (data['relativeResourceName'] && !(typeof data['relativeResourceName'] === 'string' || data['relativeResourceName'] instanceof String)) {
            throw new Error("Expected the field `relativeResourceName` to be a primitive type in the JSON string but got " + data['relativeResourceName']);
        }
        // ensure the json data is a string
        if (data['searchResultSubtype'] && !(typeof data['searchResultSubtype'] === 'string' || data['searchResultSubtype'] instanceof String)) {
            throw new Error("Expected the field `searchResultSubtype` to be a primitive type in the JSON string but got " + data['searchResultSubtype']);
        }
        // ensure the json data is a string
        if (data['searchResultType'] && !(typeof data['searchResultType'] === 'string' || data['searchResultType'] instanceof String)) {
            throw new Error("Expected the field `searchResultType` to be a primitive type in the JSON string but got " + data['searchResultType']);
        }

        return true;
    }


}



/**
 * The full name of the cloud resource the entry belongs to. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Example: * `//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId`
 * @member {String} linkedResource
 */
GoogleCloudDatacatalogV1beta1SearchCatalogResult.prototype['linkedResource'] = undefined;

/**
 * Last-modified timestamp of the entry from the managing system.
 * @member {String} modifyTime
 */
GoogleCloudDatacatalogV1beta1SearchCatalogResult.prototype['modifyTime'] = undefined;

/**
 * The relative resource name of the resource in URL format. Examples: * `projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}` * `projects/{project_id}/tagTemplates/{tag_template_id}`
 * @member {String} relativeResourceName
 */
GoogleCloudDatacatalogV1beta1SearchCatalogResult.prototype['relativeResourceName'] = undefined;

/**
 * Sub-type of the search result. This is a dot-delimited description of the resource's full type, and is the same as the value callers would provide in the \"type\" search facet. Examples: `entry.table`, `entry.dataStream`, `tagTemplate`.
 * @member {String} searchResultSubtype
 */
GoogleCloudDatacatalogV1beta1SearchCatalogResult.prototype['searchResultSubtype'] = undefined;

/**
 * Type of the search result. This field can be used to determine which Get method to call to fetch the full resource.
 * @member {module:model/GoogleCloudDatacatalogV1beta1SearchCatalogResult.SearchResultTypeEnum} searchResultType
 */
GoogleCloudDatacatalogV1beta1SearchCatalogResult.prototype['searchResultType'] = undefined;





/**
 * Allowed values for the <code>searchResultType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1beta1SearchCatalogResult['SearchResultTypeEnum'] = {

    /**
     * value: "SEARCH_RESULT_TYPE_UNSPECIFIED"
     * @const
     */
    "SEARCH_RESULT_TYPE_UNSPECIFIED": "SEARCH_RESULT_TYPE_UNSPECIFIED",

    /**
     * value: "ENTRY"
     * @const
     */
    "ENTRY": "ENTRY",

    /**
     * value: "TAG_TEMPLATE"
     * @const
     */
    "TAG_TEMPLATE": "TAG_TEMPLATE",

    /**
     * value: "ENTRY_GROUP"
     * @const
     */
    "ENTRY_GROUP": "ENTRY_GROUP"
};



export default GoogleCloudDatacatalogV1beta1SearchCatalogResult;

