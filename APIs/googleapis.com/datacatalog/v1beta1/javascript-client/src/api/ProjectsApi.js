/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetIamPolicyRequest from '../model/GetIamPolicyRequest';
import GoogleCloudDatacatalogV1beta1Entry from '../model/GoogleCloudDatacatalogV1beta1Entry';
import GoogleCloudDatacatalogV1beta1EntryGroup from '../model/GoogleCloudDatacatalogV1beta1EntryGroup';
import GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse from '../model/GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse';
import GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest from '../model/GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest';
import GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse from '../model/GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse';
import GoogleCloudDatacatalogV1beta1ListEntriesResponse from '../model/GoogleCloudDatacatalogV1beta1ListEntriesResponse';
import GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse from '../model/GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse';
import GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse from '../model/GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse';
import GoogleCloudDatacatalogV1beta1ListTagsResponse from '../model/GoogleCloudDatacatalogV1beta1ListTagsResponse';
import GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse from '../model/GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse';
import GoogleCloudDatacatalogV1beta1PolicyTag from '../model/GoogleCloudDatacatalogV1beta1PolicyTag';
import GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest from '../model/GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest';
import GoogleCloudDatacatalogV1beta1Tag from '../model/GoogleCloudDatacatalogV1beta1Tag';
import GoogleCloudDatacatalogV1beta1TagTemplate from '../model/GoogleCloudDatacatalogV1beta1TagTemplate';
import GoogleCloudDatacatalogV1beta1TagTemplateField from '../model/GoogleCloudDatacatalogV1beta1TagTemplateField';
import GoogleCloudDatacatalogV1beta1Taxonomy from '../model/GoogleCloudDatacatalogV1beta1Taxonomy';
import Policy from '../model/Policy';
import SetIamPolicyRequest from '../model/SetIamPolicyRequest';
import TestIamPermissionsRequest from '../model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from '../model/TestIamPermissionsResponse';

/**
* Projects service.
* @module api/ProjectsApi
* @version v1beta1
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsEntryGroupsCreate operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1EntryGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * A maximum of 10,000 entry groups may be created per organization across all locations. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
     * @param {String} parent Required. The name of the project this entry group is in. Example: * projects/{project_id}/locations/{location} Note that this EntryGroup and its child resources may not actually be stored in the location in this name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [entryGroupId] Required. The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters, numbers and underscores, and be at most 64 characters.
     * @param {module:model/GoogleCloudDatacatalogV1beta1EntryGroup} [googleCloudDatacatalogV1beta1EntryGroup] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1EntryGroup}
     */
    datacatalogProjectsLocationsEntryGroupsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1EntryGroup'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsEntryGroupsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'entryGroupId': opts['entryGroupId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1EntryGroup;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/entryGroups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsEntryGroupsEntriesCreate operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsEntriesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1Entry} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an entry. Only entries of 'FILESET' type or user-specified type can be created. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information). A maximum of 100,000 entries may be created per entry group.
     * @param {String} parent Required. The name of the entry group this entry is in. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this Entry and its child resources may not actually be stored in the location in this name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [entryId] Required. The id of the entry to create.
     * @param {module:model/GoogleCloudDatacatalogV1beta1Entry} [googleCloudDatacatalogV1beta1Entry] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsEntriesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1Entry}
     */
    datacatalogProjectsLocationsEntryGroupsEntriesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1Entry'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsEntryGroupsEntriesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'entryId': opts['entryId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1Entry;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/entries', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsEntryGroupsEntriesList operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsEntriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1ListEntriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists entries.
     * @param {String} parent Required. The name of the entry group that contains the entries, which can be provided in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for `page_size > 1000`.
     * @param {String} [pageToken] Token that specifies which page is requested. If empty, the first page is returned.
     * @param {String} [readMask] The fields to return for each Entry. If not set or empty, all fields are returned. For example, setting read_mask to contain only one path \"name\" will cause ListEntries to return a list of Entries with only \"name\" field.
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsEntriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1ListEntriesResponse}
     */
    datacatalogProjectsLocationsEntryGroupsEntriesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsEntryGroupsEntriesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1ListEntriesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/entries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsEntryGroupsList operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists entry groups.
     * @param {String} parent Required. The name of the location that contains the entry groups, which can be provided in URL format. Example: * projects/{project_id}/locations/{location}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for `page_size > 1000`.
     * @param {String} [pageToken] Optional. Token that specifies which page is requested. If empty, the first page is returned.
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse}
     */
    datacatalogProjectsLocationsEntryGroupsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsEntryGroupsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/entryGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsEntryGroupsTagsCreate operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsTagsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1Tag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters) and the [tag template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters) used to create the tag must be from the same organization.
     * @param {String} parent Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Tag and its child resources may not actually be stored in the location in this name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDatacatalogV1beta1Tag} [googleCloudDatacatalogV1beta1Tag] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsTagsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1Tag}
     */
    datacatalogProjectsLocationsEntryGroupsTagsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1Tag'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsEntryGroupsTagsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1Tag;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/tags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsEntryGroupsTagsList operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsTagsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1ListTagsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists tags assigned to an Entry. The columns in the response are lowercased.
     * @param {String} parent Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry or an EntryGroup. Examples: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of tags to return. Default is 10. Max limit is 1000.
     * @param {String} [pageToken] Token that specifies which page is requested. If empty, the first page is returned.
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsEntryGroupsTagsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1ListTagsResponse}
     */
    datacatalogProjectsLocationsEntryGroupsTagsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsEntryGroupsTagsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1ListTagsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/tags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTagTemplatesCreate operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTagTemplatesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1TagTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
     * @param {String} parent Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions. Example: * projects/{project_id}/locations/us-central1
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [tagTemplateId] Required. The id of the tag template to create.
     * @param {module:model/GoogleCloudDatacatalogV1beta1TagTemplate} [googleCloudDatacatalogV1beta1TagTemplate] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTagTemplatesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1TagTemplate}
     */
    datacatalogProjectsLocationsTagTemplatesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1TagTemplate'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsTagTemplatesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'tagTemplateId': opts['tagTemplateId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1TagTemplate;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/tagTemplates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTagTemplatesFieldsCreate operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTagTemplatesFieldsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1TagTemplateField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a field in a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
     * @param {String} parent Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions). Example: * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [tagTemplateFieldId] Required. The ID of the tag template field to create. Field ids can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template.
     * @param {module:model/GoogleCloudDatacatalogV1beta1TagTemplateField} [googleCloudDatacatalogV1beta1TagTemplateField] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTagTemplatesFieldsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1TagTemplateField}
     */
    datacatalogProjectsLocationsTagTemplatesFieldsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1TagTemplateField'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsTagTemplatesFieldsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'tagTemplateFieldId': opts['tagTemplateFieldId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1TagTemplateField;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/fields', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRename operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRenameCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1TagTemplateField} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Renames an enum value in a tag template. The enum values have to be unique within one enum field. Thus, an enum value cannot be renamed with a name used in any other enum value within the same enum field.
     * @param {String} name Required. The name of the enum field value. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest} [googleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRenameCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1TagTemplateField}
     */
    datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRename(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRename");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1TagTemplateField;
      return this.apiClient.callApi(
        '/v1beta1/{name}:rename', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesCreate operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1Taxonomy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a taxonomy in the specified project.
     * @param {String} parent Required. Resource name of the project that the taxonomy will belong to.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDatacatalogV1beta1Taxonomy} [googleCloudDatacatalogV1beta1Taxonomy] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1Taxonomy}
     */
    datacatalogProjectsLocationsTaxonomiesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1Taxonomy'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsTaxonomiesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1Taxonomy;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/taxonomies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesExport operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesExportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Exports all taxonomies and their policy tags in a project. This method generates SerializedTaxonomy protos with nested policy tags that can be used as an input for future ImportTaxonomies calls.
     * @param {String} parent Required. Resource name of the project that taxonomies to be exported will share.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [serializedTaxonomies] Export taxonomies as serialized taxonomies.
     * @param {Array.<String>} [taxonomies] Required. Resource names of the taxonomies to be exported.
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse}
     */
    datacatalogProjectsLocationsTaxonomiesExport(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsTaxonomiesExport");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'serializedTaxonomies': opts['serializedTaxonomies'],
        'taxonomies': this.apiClient.buildCollectionParam(opts['taxonomies'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/taxonomies:export', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesImport operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesImportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Imports all taxonomies and their policy tags to a project as new taxonomies. This method provides a bulk taxonomy / policy tag creation using nested proto structure.
     * @param {String} parent Required. Resource name of project that the imported taxonomies will belong to.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest} [googleCloudDatacatalogV1beta1ImportTaxonomiesRequest] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesImportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse}
     */
    datacatalogProjectsLocationsTaxonomiesImport(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1ImportTaxonomiesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsTaxonomiesImport");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/taxonomies:import', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesList operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all taxonomies in a project in a particular location that the caller has permission to view.
     * @param {String} parent Required. Resource name of the project to list the taxonomies of.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Supported field for filter is 'service' and value is 'dataplex'. Eg: service=dataplex.
     * @param {Number} [pageSize] The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.
     * @param {String} [pageToken] The next_page_token value returned from a previous list request, if any. If not set, defaults to an empty string.
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse}
     */
    datacatalogProjectsLocationsTaxonomiesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsTaxonomiesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/taxonomies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesPolicyTagsCreate operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1PolicyTag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a policy tag in the specified taxonomy.
     * @param {String} parent Required. Resource name of the taxonomy that the policy tag will belong to.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudDatacatalogV1beta1PolicyTag} [googleCloudDatacatalogV1beta1PolicyTag] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1PolicyTag}
     */
    datacatalogProjectsLocationsTaxonomiesPolicyTagsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1PolicyTag'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsTaxonomiesPolicyTagsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1PolicyTag;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/policyTags', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesPolicyTagsDelete operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a policy tag. Also deletes all of its descendant policy tags.
     * @param {String} name Required. Resource name of the policy tag to be deleted. All of its descendant policy tags will also be deleted.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [force] Required. Currently, this field must always be set to `true`. This confirms the deletion of this field from any tags using this field. `force = false` will be supported in the future.
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    datacatalogProjectsLocationsTaxonomiesPolicyTagsDelete(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling datacatalogProjectsLocationsTaxonomiesPolicyTagsDelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'force': opts['force']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesPolicyTagsGet operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1PolicyTag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a policy tag.
     * @param {String} name Required. Resource name of the requested policy tag.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [readMask] The fields to return. If not set or empty, all fields are returned.
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1PolicyTag}
     */
    datacatalogProjectsLocationsTaxonomiesPolicyTagsGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling datacatalogProjectsLocationsTaxonomiesPolicyTagsGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1PolicyTag;
      return this.apiClient.callApi(
        '/v1beta1/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the IAM policy for a taxonomy or a policy tag.
     * @param {String} resource REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GetIamPolicyRequest} [getIamPolicyRequest] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Policy}
     */
    datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['getIamPolicyRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Policy;
      return this.apiClient.callApi(
        '/v1beta1/{resource}:getIamPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesPolicyTagsList operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all policy tags in a taxonomy.
     * @param {String} parent Required. Resource name of the taxonomy to list the policy tags of.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.
     * @param {String} [pageToken] The next_page_token value returned from a previous List request, if any. If not set, defaults to an empty string.
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse}
     */
    datacatalogProjectsLocationsTaxonomiesPolicyTagsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling datacatalogProjectsLocationsTaxonomiesPolicyTagsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/policyTags', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesPolicyTagsPatch operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudDatacatalogV1beta1PolicyTag} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a policy tag.
     * @param {String} name Identifier. Resource name of this policy tag, whose format is: \"projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}\".
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [updateMask] The update mask applies to the resource. Only display_name, description and parent_policy_tag can be updated and thus can be listed in the mask. If update_mask is not provided, all allowed fields (i.e. display_name, description and parent) will be updated. For more information including the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.
     * @param {module:model/GoogleCloudDatacatalogV1beta1PolicyTag} [googleCloudDatacatalogV1beta1PolicyTag] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudDatacatalogV1beta1PolicyTag}
     */
    datacatalogProjectsLocationsTaxonomiesPolicyTagsPatch(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudDatacatalogV1beta1PolicyTag'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling datacatalogProjectsLocationsTaxonomiesPolicyTagsPatch");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'updateMask': opts['updateMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudDatacatalogV1beta1PolicyTag;
      return this.apiClient.callApi(
        '/v1beta1/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the IAM policy for a taxonomy or a policy tag.
     * @param {String} resource REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/SetIamPolicyRequest} [setIamPolicyRequest] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Policy}
     */
    datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['setIamPolicyRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Policy;
      return this.apiClient.callApi(
        '/v1beta1/{resource}:setIamPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions operation.
     * @callback module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestIamPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the permissions that a caller has on the specified taxonomy or policy tag.
     * @param {String} resource REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/TestIamPermissionsRequest} [testIamPermissionsRequest] 
     * @param {module:api/ProjectsApi~datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestIamPermissionsResponse}
     */
    datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['testIamPermissionsRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TestIamPermissionsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{resource}:testIamPermissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
