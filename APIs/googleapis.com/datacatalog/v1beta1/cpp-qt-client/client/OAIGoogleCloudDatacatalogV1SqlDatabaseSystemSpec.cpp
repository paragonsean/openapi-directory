/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::~OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec() {}

void OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::initializeModel() {

    m_database_version_isSet = false;
    m_database_version_isValid = false;

    m_instance_host_isSet = false;
    m_instance_host_isValid = false;

    m_sql_engine_isSet = false;
    m_sql_engine_isValid = false;
}

void OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::fromJsonObject(QJsonObject json) {

    m_database_version_isValid = ::OpenAPI::fromJsonValue(m_database_version, json[QString("databaseVersion")]);
    m_database_version_isSet = !json[QString("databaseVersion")].isNull() && m_database_version_isValid;

    m_instance_host_isValid = ::OpenAPI::fromJsonValue(m_instance_host, json[QString("instanceHost")]);
    m_instance_host_isSet = !json[QString("instanceHost")].isNull() && m_instance_host_isValid;

    m_sql_engine_isValid = ::OpenAPI::fromJsonValue(m_sql_engine, json[QString("sqlEngine")]);
    m_sql_engine_isSet = !json[QString("sqlEngine")].isNull() && m_sql_engine_isValid;
}

QString OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_database_version_isSet) {
        obj.insert(QString("databaseVersion"), ::OpenAPI::toJsonValue(m_database_version));
    }
    if (m_instance_host_isSet) {
        obj.insert(QString("instanceHost"), ::OpenAPI::toJsonValue(m_instance_host));
    }
    if (m_sql_engine_isSet) {
        obj.insert(QString("sqlEngine"), ::OpenAPI::toJsonValue(m_sql_engine));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::getDatabaseVersion() const {
    return m_database_version;
}
void OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::setDatabaseVersion(const QString &database_version) {
    m_database_version = database_version;
    m_database_version_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::is_database_version_Set() const{
    return m_database_version_isSet;
}

bool OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::is_database_version_Valid() const{
    return m_database_version_isValid;
}

QString OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::getInstanceHost() const {
    return m_instance_host;
}
void OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::setInstanceHost(const QString &instance_host) {
    m_instance_host = instance_host;
    m_instance_host_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::is_instance_host_Set() const{
    return m_instance_host_isSet;
}

bool OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::is_instance_host_Valid() const{
    return m_instance_host_isValid;
}

QString OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::getSqlEngine() const {
    return m_sql_engine;
}
void OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::setSqlEngine(const QString &sql_engine) {
    m_sql_engine = sql_engine;
    m_sql_engine_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::is_sql_engine_Set() const{
    return m_sql_engine_isSet;
}

bool OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::is_sql_engine_Valid() const{
    return m_sql_engine_isValid;
}

bool OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_database_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_host_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sql_engine_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
