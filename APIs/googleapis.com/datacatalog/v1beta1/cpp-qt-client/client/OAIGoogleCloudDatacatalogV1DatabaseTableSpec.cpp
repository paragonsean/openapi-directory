/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1DatabaseTableSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1DatabaseTableSpec::OAIGoogleCloudDatacatalogV1DatabaseTableSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1DatabaseTableSpec::OAIGoogleCloudDatacatalogV1DatabaseTableSpec() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1DatabaseTableSpec::~OAIGoogleCloudDatacatalogV1DatabaseTableSpec() {}

void OAIGoogleCloudDatacatalogV1DatabaseTableSpec::initializeModel() {

    m_database_view_spec_isSet = false;
    m_database_view_spec_isValid = false;

    m_dataplex_table_isSet = false;
    m_dataplex_table_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudDatacatalogV1DatabaseTableSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1DatabaseTableSpec::fromJsonObject(QJsonObject json) {

    m_database_view_spec_isValid = ::OpenAPI::fromJsonValue(m_database_view_spec, json[QString("databaseViewSpec")]);
    m_database_view_spec_isSet = !json[QString("databaseViewSpec")].isNull() && m_database_view_spec_isValid;

    m_dataplex_table_isValid = ::OpenAPI::fromJsonValue(m_dataplex_table, json[QString("dataplexTable")]);
    m_dataplex_table_isSet = !json[QString("dataplexTable")].isNull() && m_dataplex_table_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudDatacatalogV1DatabaseTableSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1DatabaseTableSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_database_view_spec.isSet()) {
        obj.insert(QString("databaseViewSpec"), ::OpenAPI::toJsonValue(m_database_view_spec));
    }
    if (m_dataplex_table.isSet()) {
        obj.insert(QString("dataplexTable"), ::OpenAPI::toJsonValue(m_dataplex_table));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIGoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpec OAIGoogleCloudDatacatalogV1DatabaseTableSpec::getDatabaseViewSpec() const {
    return m_database_view_spec;
}
void OAIGoogleCloudDatacatalogV1DatabaseTableSpec::setDatabaseViewSpec(const OAIGoogleCloudDatacatalogV1DatabaseTableSpecDatabaseViewSpec &database_view_spec) {
    m_database_view_spec = database_view_spec;
    m_database_view_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1DatabaseTableSpec::is_database_view_spec_Set() const{
    return m_database_view_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1DatabaseTableSpec::is_database_view_spec_Valid() const{
    return m_database_view_spec_isValid;
}

OAIGoogleCloudDatacatalogV1DataplexTableSpec OAIGoogleCloudDatacatalogV1DatabaseTableSpec::getDataplexTable() const {
    return m_dataplex_table;
}
void OAIGoogleCloudDatacatalogV1DatabaseTableSpec::setDataplexTable(const OAIGoogleCloudDatacatalogV1DataplexTableSpec &dataplex_table) {
    m_dataplex_table = dataplex_table;
    m_dataplex_table_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1DatabaseTableSpec::is_dataplex_table_Set() const{
    return m_dataplex_table_isSet;
}

bool OAIGoogleCloudDatacatalogV1DatabaseTableSpec::is_dataplex_table_Valid() const{
    return m_dataplex_table_isValid;
}

QString OAIGoogleCloudDatacatalogV1DatabaseTableSpec::getType() const {
    return m_type;
}
void OAIGoogleCloudDatacatalogV1DatabaseTableSpec::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1DatabaseTableSpec::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1DatabaseTableSpec::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudDatacatalogV1DatabaseTableSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_database_view_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataplex_table.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1DatabaseTableSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
