/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1BigQueryTableSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1BigQueryTableSpec::OAIGoogleCloudDatacatalogV1BigQueryTableSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1BigQueryTableSpec::OAIGoogleCloudDatacatalogV1BigQueryTableSpec() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1BigQueryTableSpec::~OAIGoogleCloudDatacatalogV1BigQueryTableSpec() {}

void OAIGoogleCloudDatacatalogV1BigQueryTableSpec::initializeModel() {

    m_table_source_type_isSet = false;
    m_table_source_type_isValid = false;

    m_table_spec_isSet = false;
    m_table_spec_isValid = false;

    m_view_spec_isSet = false;
    m_view_spec_isValid = false;
}

void OAIGoogleCloudDatacatalogV1BigQueryTableSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1BigQueryTableSpec::fromJsonObject(QJsonObject json) {

    m_table_source_type_isValid = ::OpenAPI::fromJsonValue(m_table_source_type, json[QString("tableSourceType")]);
    m_table_source_type_isSet = !json[QString("tableSourceType")].isNull() && m_table_source_type_isValid;

    m_table_spec_isValid = ::OpenAPI::fromJsonValue(m_table_spec, json[QString("tableSpec")]);
    m_table_spec_isSet = !json[QString("tableSpec")].isNull() && m_table_spec_isValid;

    m_view_spec_isValid = ::OpenAPI::fromJsonValue(m_view_spec, json[QString("viewSpec")]);
    m_view_spec_isSet = !json[QString("viewSpec")].isNull() && m_view_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1BigQueryTableSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1BigQueryTableSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_table_source_type_isSet) {
        obj.insert(QString("tableSourceType"), ::OpenAPI::toJsonValue(m_table_source_type));
    }
    if (m_table_spec.isSet()) {
        obj.insert(QString("tableSpec"), ::OpenAPI::toJsonValue(m_table_spec));
    }
    if (m_view_spec.isSet()) {
        obj.insert(QString("viewSpec"), ::OpenAPI::toJsonValue(m_view_spec));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1BigQueryTableSpec::getTableSourceType() const {
    return m_table_source_type;
}
void OAIGoogleCloudDatacatalogV1BigQueryTableSpec::setTableSourceType(const QString &table_source_type) {
    m_table_source_type = table_source_type;
    m_table_source_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1BigQueryTableSpec::is_table_source_type_Set() const{
    return m_table_source_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1BigQueryTableSpec::is_table_source_type_Valid() const{
    return m_table_source_type_isValid;
}

OAIGoogleCloudDatacatalogV1TableSpec OAIGoogleCloudDatacatalogV1BigQueryTableSpec::getTableSpec() const {
    return m_table_spec;
}
void OAIGoogleCloudDatacatalogV1BigQueryTableSpec::setTableSpec(const OAIGoogleCloudDatacatalogV1TableSpec &table_spec) {
    m_table_spec = table_spec;
    m_table_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1BigQueryTableSpec::is_table_spec_Set() const{
    return m_table_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1BigQueryTableSpec::is_table_spec_Valid() const{
    return m_table_spec_isValid;
}

OAIGoogleCloudDatacatalogV1ViewSpec OAIGoogleCloudDatacatalogV1BigQueryTableSpec::getViewSpec() const {
    return m_view_spec;
}
void OAIGoogleCloudDatacatalogV1BigQueryTableSpec::setViewSpec(const OAIGoogleCloudDatacatalogV1ViewSpec &view_spec) {
    m_view_spec = view_spec;
    m_view_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1BigQueryTableSpec::is_view_spec_Set() const{
    return m_view_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1BigQueryTableSpec::is_view_spec_Valid() const{
    return m_view_spec_isValid;
}

bool OAIGoogleCloudDatacatalogV1BigQueryTableSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_table_source_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_table_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_view_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1BigQueryTableSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
