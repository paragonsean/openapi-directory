/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1beta1Entry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1beta1Entry::OAIGoogleCloudDatacatalogV1beta1Entry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1beta1Entry::OAIGoogleCloudDatacatalogV1beta1Entry() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1beta1Entry::~OAIGoogleCloudDatacatalogV1beta1Entry() {}

void OAIGoogleCloudDatacatalogV1beta1Entry::initializeModel() {

    m_bigquery_date_sharded_spec_isSet = false;
    m_bigquery_date_sharded_spec_isValid = false;

    m_bigquery_table_spec_isSet = false;
    m_bigquery_table_spec_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_gcs_fileset_spec_isSet = false;
    m_gcs_fileset_spec_isValid = false;

    m_integrated_system_isSet = false;
    m_integrated_system_isValid = false;

    m_linked_resource_isSet = false;
    m_linked_resource_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_schema_isSet = false;
    m_schema_isValid = false;

    m_source_system_timestamps_isSet = false;
    m_source_system_timestamps_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_usage_signal_isSet = false;
    m_usage_signal_isValid = false;

    m_user_specified_system_isSet = false;
    m_user_specified_system_isValid = false;

    m_user_specified_type_isSet = false;
    m_user_specified_type_isValid = false;
}

void OAIGoogleCloudDatacatalogV1beta1Entry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1beta1Entry::fromJsonObject(QJsonObject json) {

    m_bigquery_date_sharded_spec_isValid = ::OpenAPI::fromJsonValue(m_bigquery_date_sharded_spec, json[QString("bigqueryDateShardedSpec")]);
    m_bigquery_date_sharded_spec_isSet = !json[QString("bigqueryDateShardedSpec")].isNull() && m_bigquery_date_sharded_spec_isValid;

    m_bigquery_table_spec_isValid = ::OpenAPI::fromJsonValue(m_bigquery_table_spec, json[QString("bigqueryTableSpec")]);
    m_bigquery_table_spec_isSet = !json[QString("bigqueryTableSpec")].isNull() && m_bigquery_table_spec_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_gcs_fileset_spec_isValid = ::OpenAPI::fromJsonValue(m_gcs_fileset_spec, json[QString("gcsFilesetSpec")]);
    m_gcs_fileset_spec_isSet = !json[QString("gcsFilesetSpec")].isNull() && m_gcs_fileset_spec_isValid;

    m_integrated_system_isValid = ::OpenAPI::fromJsonValue(m_integrated_system, json[QString("integratedSystem")]);
    m_integrated_system_isSet = !json[QString("integratedSystem")].isNull() && m_integrated_system_isValid;

    m_linked_resource_isValid = ::OpenAPI::fromJsonValue(m_linked_resource, json[QString("linkedResource")]);
    m_linked_resource_isSet = !json[QString("linkedResource")].isNull() && m_linked_resource_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_schema_isValid = ::OpenAPI::fromJsonValue(m_schema, json[QString("schema")]);
    m_schema_isSet = !json[QString("schema")].isNull() && m_schema_isValid;

    m_source_system_timestamps_isValid = ::OpenAPI::fromJsonValue(m_source_system_timestamps, json[QString("sourceSystemTimestamps")]);
    m_source_system_timestamps_isSet = !json[QString("sourceSystemTimestamps")].isNull() && m_source_system_timestamps_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_usage_signal_isValid = ::OpenAPI::fromJsonValue(m_usage_signal, json[QString("usageSignal")]);
    m_usage_signal_isSet = !json[QString("usageSignal")].isNull() && m_usage_signal_isValid;

    m_user_specified_system_isValid = ::OpenAPI::fromJsonValue(m_user_specified_system, json[QString("userSpecifiedSystem")]);
    m_user_specified_system_isSet = !json[QString("userSpecifiedSystem")].isNull() && m_user_specified_system_isValid;

    m_user_specified_type_isValid = ::OpenAPI::fromJsonValue(m_user_specified_type, json[QString("userSpecifiedType")]);
    m_user_specified_type_isSet = !json[QString("userSpecifiedType")].isNull() && m_user_specified_type_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1Entry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1beta1Entry::asJsonObject() const {
    QJsonObject obj;
    if (m_bigquery_date_sharded_spec.isSet()) {
        obj.insert(QString("bigqueryDateShardedSpec"), ::OpenAPI::toJsonValue(m_bigquery_date_sharded_spec));
    }
    if (m_bigquery_table_spec.isSet()) {
        obj.insert(QString("bigqueryTableSpec"), ::OpenAPI::toJsonValue(m_bigquery_table_spec));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_gcs_fileset_spec.isSet()) {
        obj.insert(QString("gcsFilesetSpec"), ::OpenAPI::toJsonValue(m_gcs_fileset_spec));
    }
    if (m_integrated_system_isSet) {
        obj.insert(QString("integratedSystem"), ::OpenAPI::toJsonValue(m_integrated_system));
    }
    if (m_linked_resource_isSet) {
        obj.insert(QString("linkedResource"), ::OpenAPI::toJsonValue(m_linked_resource));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_schema.isSet()) {
        obj.insert(QString("schema"), ::OpenAPI::toJsonValue(m_schema));
    }
    if (m_source_system_timestamps.isSet()) {
        obj.insert(QString("sourceSystemTimestamps"), ::OpenAPI::toJsonValue(m_source_system_timestamps));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_usage_signal.isSet()) {
        obj.insert(QString("usageSignal"), ::OpenAPI::toJsonValue(m_usage_signal));
    }
    if (m_user_specified_system_isSet) {
        obj.insert(QString("userSpecifiedSystem"), ::OpenAPI::toJsonValue(m_user_specified_system));
    }
    if (m_user_specified_type_isSet) {
        obj.insert(QString("userSpecifiedType"), ::OpenAPI::toJsonValue(m_user_specified_type));
    }
    return obj;
}

OAIGoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec OAIGoogleCloudDatacatalogV1beta1Entry::getBigqueryDateShardedSpec() const {
    return m_bigquery_date_sharded_spec;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setBigqueryDateShardedSpec(const OAIGoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec &bigquery_date_sharded_spec) {
    m_bigquery_date_sharded_spec = bigquery_date_sharded_spec;
    m_bigquery_date_sharded_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_bigquery_date_sharded_spec_Set() const{
    return m_bigquery_date_sharded_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_bigquery_date_sharded_spec_Valid() const{
    return m_bigquery_date_sharded_spec_isValid;
}

OAIGoogleCloudDatacatalogV1beta1BigQueryTableSpec OAIGoogleCloudDatacatalogV1beta1Entry::getBigqueryTableSpec() const {
    return m_bigquery_table_spec;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setBigqueryTableSpec(const OAIGoogleCloudDatacatalogV1beta1BigQueryTableSpec &bigquery_table_spec) {
    m_bigquery_table_spec = bigquery_table_spec;
    m_bigquery_table_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_bigquery_table_spec_Set() const{
    return m_bigquery_table_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_bigquery_table_spec_Valid() const{
    return m_bigquery_table_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1Entry::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1Entry::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudDatacatalogV1beta1GcsFilesetSpec OAIGoogleCloudDatacatalogV1beta1Entry::getGcsFilesetSpec() const {
    return m_gcs_fileset_spec;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setGcsFilesetSpec(const OAIGoogleCloudDatacatalogV1beta1GcsFilesetSpec &gcs_fileset_spec) {
    m_gcs_fileset_spec = gcs_fileset_spec;
    m_gcs_fileset_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_gcs_fileset_spec_Set() const{
    return m_gcs_fileset_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_gcs_fileset_spec_Valid() const{
    return m_gcs_fileset_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1Entry::getIntegratedSystem() const {
    return m_integrated_system;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setIntegratedSystem(const QString &integrated_system) {
    m_integrated_system = integrated_system;
    m_integrated_system_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_integrated_system_Set() const{
    return m_integrated_system_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_integrated_system_Valid() const{
    return m_integrated_system_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1Entry::getLinkedResource() const {
    return m_linked_resource;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setLinkedResource(const QString &linked_resource) {
    m_linked_resource = linked_resource;
    m_linked_resource_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_linked_resource_Set() const{
    return m_linked_resource_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_linked_resource_Valid() const{
    return m_linked_resource_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1Entry::getName() const {
    return m_name;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDatacatalogV1beta1Schema OAIGoogleCloudDatacatalogV1beta1Entry::getSchema() const {
    return m_schema;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setSchema(const OAIGoogleCloudDatacatalogV1beta1Schema &schema) {
    m_schema = schema;
    m_schema_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_schema_Set() const{
    return m_schema_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_schema_Valid() const{
    return m_schema_isValid;
}

OAIGoogleCloudDatacatalogV1beta1SystemTimestamps OAIGoogleCloudDatacatalogV1beta1Entry::getSourceSystemTimestamps() const {
    return m_source_system_timestamps;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setSourceSystemTimestamps(const OAIGoogleCloudDatacatalogV1beta1SystemTimestamps &source_system_timestamps) {
    m_source_system_timestamps = source_system_timestamps;
    m_source_system_timestamps_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_source_system_timestamps_Set() const{
    return m_source_system_timestamps_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_source_system_timestamps_Valid() const{
    return m_source_system_timestamps_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1Entry::getType() const {
    return m_type;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_type_Valid() const{
    return m_type_isValid;
}

OAIGoogleCloudDatacatalogV1beta1UsageSignal OAIGoogleCloudDatacatalogV1beta1Entry::getUsageSignal() const {
    return m_usage_signal;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setUsageSignal(const OAIGoogleCloudDatacatalogV1beta1UsageSignal &usage_signal) {
    m_usage_signal = usage_signal;
    m_usage_signal_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_usage_signal_Set() const{
    return m_usage_signal_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_usage_signal_Valid() const{
    return m_usage_signal_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1Entry::getUserSpecifiedSystem() const {
    return m_user_specified_system;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setUserSpecifiedSystem(const QString &user_specified_system) {
    m_user_specified_system = user_specified_system;
    m_user_specified_system_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_user_specified_system_Set() const{
    return m_user_specified_system_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_user_specified_system_Valid() const{
    return m_user_specified_system_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1Entry::getUserSpecifiedType() const {
    return m_user_specified_type;
}
void OAIGoogleCloudDatacatalogV1beta1Entry::setUserSpecifiedType(const QString &user_specified_type) {
    m_user_specified_type = user_specified_type;
    m_user_specified_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_user_specified_type_Set() const{
    return m_user_specified_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::is_user_specified_type_Valid() const{
    return m_user_specified_type_isValid;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bigquery_date_sharded_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigquery_table_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_fileset_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_integrated_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_linked_resource_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_system_timestamps.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usage_signal.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_specified_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_specified_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1beta1Entry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
