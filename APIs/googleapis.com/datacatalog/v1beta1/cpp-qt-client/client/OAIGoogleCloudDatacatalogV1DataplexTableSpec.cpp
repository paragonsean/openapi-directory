/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1DataplexTableSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1DataplexTableSpec::OAIGoogleCloudDatacatalogV1DataplexTableSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1DataplexTableSpec::OAIGoogleCloudDatacatalogV1DataplexTableSpec() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1DataplexTableSpec::~OAIGoogleCloudDatacatalogV1DataplexTableSpec() {}

void OAIGoogleCloudDatacatalogV1DataplexTableSpec::initializeModel() {

    m_dataplex_spec_isSet = false;
    m_dataplex_spec_isValid = false;

    m_external_tables_isSet = false;
    m_external_tables_isValid = false;

    m_user_managed_isSet = false;
    m_user_managed_isValid = false;
}

void OAIGoogleCloudDatacatalogV1DataplexTableSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1DataplexTableSpec::fromJsonObject(QJsonObject json) {

    m_dataplex_spec_isValid = ::OpenAPI::fromJsonValue(m_dataplex_spec, json[QString("dataplexSpec")]);
    m_dataplex_spec_isSet = !json[QString("dataplexSpec")].isNull() && m_dataplex_spec_isValid;

    m_external_tables_isValid = ::OpenAPI::fromJsonValue(m_external_tables, json[QString("externalTables")]);
    m_external_tables_isSet = !json[QString("externalTables")].isNull() && m_external_tables_isValid;

    m_user_managed_isValid = ::OpenAPI::fromJsonValue(m_user_managed, json[QString("userManaged")]);
    m_user_managed_isSet = !json[QString("userManaged")].isNull() && m_user_managed_isValid;
}

QString OAIGoogleCloudDatacatalogV1DataplexTableSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1DataplexTableSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_dataplex_spec.isSet()) {
        obj.insert(QString("dataplexSpec"), ::OpenAPI::toJsonValue(m_dataplex_spec));
    }
    if (m_external_tables.size() > 0) {
        obj.insert(QString("externalTables"), ::OpenAPI::toJsonValue(m_external_tables));
    }
    if (m_user_managed_isSet) {
        obj.insert(QString("userManaged"), ::OpenAPI::toJsonValue(m_user_managed));
    }
    return obj;
}

OAIGoogleCloudDatacatalogV1DataplexSpec OAIGoogleCloudDatacatalogV1DataplexTableSpec::getDataplexSpec() const {
    return m_dataplex_spec;
}
void OAIGoogleCloudDatacatalogV1DataplexTableSpec::setDataplexSpec(const OAIGoogleCloudDatacatalogV1DataplexSpec &dataplex_spec) {
    m_dataplex_spec = dataplex_spec;
    m_dataplex_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1DataplexTableSpec::is_dataplex_spec_Set() const{
    return m_dataplex_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1DataplexTableSpec::is_dataplex_spec_Valid() const{
    return m_dataplex_spec_isValid;
}

QList<OAIGoogleCloudDatacatalogV1DataplexExternalTable> OAIGoogleCloudDatacatalogV1DataplexTableSpec::getExternalTables() const {
    return m_external_tables;
}
void OAIGoogleCloudDatacatalogV1DataplexTableSpec::setExternalTables(const QList<OAIGoogleCloudDatacatalogV1DataplexExternalTable> &external_tables) {
    m_external_tables = external_tables;
    m_external_tables_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1DataplexTableSpec::is_external_tables_Set() const{
    return m_external_tables_isSet;
}

bool OAIGoogleCloudDatacatalogV1DataplexTableSpec::is_external_tables_Valid() const{
    return m_external_tables_isValid;
}

bool OAIGoogleCloudDatacatalogV1DataplexTableSpec::isUserManaged() const {
    return m_user_managed;
}
void OAIGoogleCloudDatacatalogV1DataplexTableSpec::setUserManaged(const bool &user_managed) {
    m_user_managed = user_managed;
    m_user_managed_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1DataplexTableSpec::is_user_managed_Set() const{
    return m_user_managed_isSet;
}

bool OAIGoogleCloudDatacatalogV1DataplexTableSpec::is_user_managed_Valid() const{
    return m_user_managed_isValid;
}

bool OAIGoogleCloudDatacatalogV1DataplexTableSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dataplex_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_tables.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_managed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1DataplexTableSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
