/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::~OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult() {}

void OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::initializeModel() {

    m_linked_resource_isSet = false;
    m_linked_resource_isValid = false;

    m_modify_time_isSet = false;
    m_modify_time_isValid = false;

    m_relative_resource_name_isSet = false;
    m_relative_resource_name_isValid = false;

    m_search_result_subtype_isSet = false;
    m_search_result_subtype_isValid = false;

    m_search_result_type_isSet = false;
    m_search_result_type_isValid = false;
}

void OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::fromJsonObject(QJsonObject json) {

    m_linked_resource_isValid = ::OpenAPI::fromJsonValue(m_linked_resource, json[QString("linkedResource")]);
    m_linked_resource_isSet = !json[QString("linkedResource")].isNull() && m_linked_resource_isValid;

    m_modify_time_isValid = ::OpenAPI::fromJsonValue(m_modify_time, json[QString("modifyTime")]);
    m_modify_time_isSet = !json[QString("modifyTime")].isNull() && m_modify_time_isValid;

    m_relative_resource_name_isValid = ::OpenAPI::fromJsonValue(m_relative_resource_name, json[QString("relativeResourceName")]);
    m_relative_resource_name_isSet = !json[QString("relativeResourceName")].isNull() && m_relative_resource_name_isValid;

    m_search_result_subtype_isValid = ::OpenAPI::fromJsonValue(m_search_result_subtype, json[QString("searchResultSubtype")]);
    m_search_result_subtype_isSet = !json[QString("searchResultSubtype")].isNull() && m_search_result_subtype_isValid;

    m_search_result_type_isValid = ::OpenAPI::fromJsonValue(m_search_result_type, json[QString("searchResultType")]);
    m_search_result_type_isSet = !json[QString("searchResultType")].isNull() && m_search_result_type_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::asJsonObject() const {
    QJsonObject obj;
    if (m_linked_resource_isSet) {
        obj.insert(QString("linkedResource"), ::OpenAPI::toJsonValue(m_linked_resource));
    }
    if (m_modify_time_isSet) {
        obj.insert(QString("modifyTime"), ::OpenAPI::toJsonValue(m_modify_time));
    }
    if (m_relative_resource_name_isSet) {
        obj.insert(QString("relativeResourceName"), ::OpenAPI::toJsonValue(m_relative_resource_name));
    }
    if (m_search_result_subtype_isSet) {
        obj.insert(QString("searchResultSubtype"), ::OpenAPI::toJsonValue(m_search_result_subtype));
    }
    if (m_search_result_type_isSet) {
        obj.insert(QString("searchResultType"), ::OpenAPI::toJsonValue(m_search_result_type));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::getLinkedResource() const {
    return m_linked_resource;
}
void OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::setLinkedResource(const QString &linked_resource) {
    m_linked_resource = linked_resource;
    m_linked_resource_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_linked_resource_Set() const{
    return m_linked_resource_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_linked_resource_Valid() const{
    return m_linked_resource_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::getModifyTime() const {
    return m_modify_time;
}
void OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::setModifyTime(const QString &modify_time) {
    m_modify_time = modify_time;
    m_modify_time_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_modify_time_Set() const{
    return m_modify_time_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_modify_time_Valid() const{
    return m_modify_time_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::getRelativeResourceName() const {
    return m_relative_resource_name;
}
void OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::setRelativeResourceName(const QString &relative_resource_name) {
    m_relative_resource_name = relative_resource_name;
    m_relative_resource_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_relative_resource_name_Set() const{
    return m_relative_resource_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_relative_resource_name_Valid() const{
    return m_relative_resource_name_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::getSearchResultSubtype() const {
    return m_search_result_subtype;
}
void OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::setSearchResultSubtype(const QString &search_result_subtype) {
    m_search_result_subtype = search_result_subtype;
    m_search_result_subtype_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_search_result_subtype_Set() const{
    return m_search_result_subtype_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_search_result_subtype_Valid() const{
    return m_search_result_subtype_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::getSearchResultType() const {
    return m_search_result_type;
}
void OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::setSearchResultType(const QString &search_result_type) {
    m_search_result_type = search_result_type;
    m_search_result_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_search_result_type_Set() const{
    return m_search_result_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::is_search_result_type_Valid() const{
    return m_search_result_type_isValid;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_linked_resource_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modify_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relative_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_result_subtype_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_result_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1beta1SearchCatalogResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
