/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequest.h
 *
 * Request message for SearchCatalog.
 */

#ifndef OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequest_H
#define OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope;

class OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequest : public OAIObject {
public:
    OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequest();
    OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequest(QString json);
    ~OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOrderBy() const;
    void setOrderBy(const QString &order_by);
    bool is_order_by_Set() const;
    bool is_order_by_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getPageToken() const;
    void setPageToken(const QString &page_token);
    bool is_page_token_Set() const;
    bool is_page_token_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope getScope() const;
    void setScope(const OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_order_by;
    bool m_order_by_isSet;
    bool m_order_by_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_page_token;
    bool m_page_token_isSet;
    bool m_page_token_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequest)

#endif // OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequest_H
