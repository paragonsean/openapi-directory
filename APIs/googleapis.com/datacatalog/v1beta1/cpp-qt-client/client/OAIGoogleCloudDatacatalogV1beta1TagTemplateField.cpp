/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1beta1TagTemplateField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1beta1TagTemplateField::OAIGoogleCloudDatacatalogV1beta1TagTemplateField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1beta1TagTemplateField::OAIGoogleCloudDatacatalogV1beta1TagTemplateField() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1beta1TagTemplateField::~OAIGoogleCloudDatacatalogV1beta1TagTemplateField() {}

void OAIGoogleCloudDatacatalogV1beta1TagTemplateField::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_is_required_isSet = false;
    m_is_required_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudDatacatalogV1beta1TagTemplateField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1beta1TagTemplateField::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_is_required_isValid = ::OpenAPI::fromJsonValue(m_is_required, json[QString("isRequired")]);
    m_is_required_isSet = !json[QString("isRequired")].isNull() && m_is_required_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1TagTemplateField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1beta1TagTemplateField::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_is_required_isSet) {
        obj.insert(QString("isRequired"), ::OpenAPI::toJsonValue(m_is_required));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_order_isSet) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1beta1TagTemplateField::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDatacatalogV1beta1TagTemplateField::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1TagTemplateField::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatacatalogV1beta1TagTemplateField::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::isIsRequired() const {
    return m_is_required;
}
void OAIGoogleCloudDatacatalogV1beta1TagTemplateField::setIsRequired(const bool &is_required) {
    m_is_required = is_required;
    m_is_required_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_is_required_Set() const{
    return m_is_required_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_is_required_Valid() const{
    return m_is_required_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1TagTemplateField::getName() const {
    return m_name;
}
void OAIGoogleCloudDatacatalogV1beta1TagTemplateField::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIGoogleCloudDatacatalogV1beta1TagTemplateField::getOrder() const {
    return m_order;
}
void OAIGoogleCloudDatacatalogV1beta1TagTemplateField::setOrder(const qint32 &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_order_Set() const{
    return m_order_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_order_Valid() const{
    return m_order_isValid;
}

OAIGoogleCloudDatacatalogV1beta1FieldType OAIGoogleCloudDatacatalogV1beta1TagTemplateField::getType() const {
    return m_type;
}
void OAIGoogleCloudDatacatalogV1beta1TagTemplateField::setType(const OAIGoogleCloudDatacatalogV1beta1FieldType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1beta1TagTemplateField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
