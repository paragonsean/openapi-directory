/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1ReconcileTagsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::OAIGoogleCloudDatacatalogV1ReconcileTagsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::OAIGoogleCloudDatacatalogV1ReconcileTagsResponse() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::~OAIGoogleCloudDatacatalogV1ReconcileTagsResponse() {}

void OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::initializeModel() {

    m_created_tags_count_isSet = false;
    m_created_tags_count_isValid = false;

    m_deleted_tags_count_isSet = false;
    m_deleted_tags_count_isValid = false;

    m_updated_tags_count_isSet = false;
    m_updated_tags_count_isValid = false;
}

void OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::fromJsonObject(QJsonObject json) {

    m_created_tags_count_isValid = ::OpenAPI::fromJsonValue(m_created_tags_count, json[QString("createdTagsCount")]);
    m_created_tags_count_isSet = !json[QString("createdTagsCount")].isNull() && m_created_tags_count_isValid;

    m_deleted_tags_count_isValid = ::OpenAPI::fromJsonValue(m_deleted_tags_count, json[QString("deletedTagsCount")]);
    m_deleted_tags_count_isSet = !json[QString("deletedTagsCount")].isNull() && m_deleted_tags_count_isValid;

    m_updated_tags_count_isValid = ::OpenAPI::fromJsonValue(m_updated_tags_count, json[QString("updatedTagsCount")]);
    m_updated_tags_count_isSet = !json[QString("updatedTagsCount")].isNull() && m_updated_tags_count_isValid;
}

QString OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_created_tags_count_isSet) {
        obj.insert(QString("createdTagsCount"), ::OpenAPI::toJsonValue(m_created_tags_count));
    }
    if (m_deleted_tags_count_isSet) {
        obj.insert(QString("deletedTagsCount"), ::OpenAPI::toJsonValue(m_deleted_tags_count));
    }
    if (m_updated_tags_count_isSet) {
        obj.insert(QString("updatedTagsCount"), ::OpenAPI::toJsonValue(m_updated_tags_count));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::getCreatedTagsCount() const {
    return m_created_tags_count;
}
void OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::setCreatedTagsCount(const QString &created_tags_count) {
    m_created_tags_count = created_tags_count;
    m_created_tags_count_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::is_created_tags_count_Set() const{
    return m_created_tags_count_isSet;
}

bool OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::is_created_tags_count_Valid() const{
    return m_created_tags_count_isValid;
}

QString OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::getDeletedTagsCount() const {
    return m_deleted_tags_count;
}
void OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::setDeletedTagsCount(const QString &deleted_tags_count) {
    m_deleted_tags_count = deleted_tags_count;
    m_deleted_tags_count_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::is_deleted_tags_count_Set() const{
    return m_deleted_tags_count_isSet;
}

bool OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::is_deleted_tags_count_Valid() const{
    return m_deleted_tags_count_isValid;
}

QString OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::getUpdatedTagsCount() const {
    return m_updated_tags_count;
}
void OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::setUpdatedTagsCount(const QString &updated_tags_count) {
    m_updated_tags_count = updated_tags_count;
    m_updated_tags_count_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::is_updated_tags_count_Set() const{
    return m_updated_tags_count_isSet;
}

bool OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::is_updated_tags_count_Valid() const{
    return m_updated_tags_count_isValid;
}

bool OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_tags_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_tags_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_tags_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1ReconcileTagsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
