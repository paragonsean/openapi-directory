/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec.h
 *
 * Specification for a group of BigQuery tables with the &#x60;[prefix]YYYYMMDD&#x60; name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
 */

#ifndef OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec_H
#define OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec : public OAIObject {
public:
    OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec();
    OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec(QString json);
    ~OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataset() const;
    void setDataset(const QString &dataset);
    bool is_dataset_Set() const;
    bool is_dataset_Valid() const;

    QString getLatestShardResource() const;
    void setLatestShardResource(const QString &latest_shard_resource);
    bool is_latest_shard_resource_Set() const;
    bool is_latest_shard_resource_Valid() const;

    QString getShardCount() const;
    void setShardCount(const QString &shard_count);
    bool is_shard_count_Set() const;
    bool is_shard_count_Valid() const;

    QString getTablePrefix() const;
    void setTablePrefix(const QString &table_prefix);
    bool is_table_prefix_Set() const;
    bool is_table_prefix_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dataset;
    bool m_dataset_isSet;
    bool m_dataset_isValid;

    QString m_latest_shard_resource;
    bool m_latest_shard_resource_isSet;
    bool m_latest_shard_resource_isValid;

    QString m_shard_count;
    bool m_shard_count_isSet;
    bool m_shard_count_isValid;

    QString m_table_prefix;
    bool m_table_prefix_isSet;
    bool m_table_prefix_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec)

#endif // OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec_H
