/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1beta1TagField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1beta1TagField::OAIGoogleCloudDatacatalogV1beta1TagField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1beta1TagField::OAIGoogleCloudDatacatalogV1beta1TagField() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1beta1TagField::~OAIGoogleCloudDatacatalogV1beta1TagField() {}

void OAIGoogleCloudDatacatalogV1beta1TagField::initializeModel() {

    m_bool_value_isSet = false;
    m_bool_value_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_double_value_isSet = false;
    m_double_value_isValid = false;

    m_enum_value_isSet = false;
    m_enum_value_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;

    m_string_value_isSet = false;
    m_string_value_isValid = false;

    m_timestamp_value_isSet = false;
    m_timestamp_value_isValid = false;
}

void OAIGoogleCloudDatacatalogV1beta1TagField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1beta1TagField::fromJsonObject(QJsonObject json) {

    m_bool_value_isValid = ::OpenAPI::fromJsonValue(m_bool_value, json[QString("boolValue")]);
    m_bool_value_isSet = !json[QString("boolValue")].isNull() && m_bool_value_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_double_value_isValid = ::OpenAPI::fromJsonValue(m_double_value, json[QString("doubleValue")]);
    m_double_value_isSet = !json[QString("doubleValue")].isNull() && m_double_value_isValid;

    m_enum_value_isValid = ::OpenAPI::fromJsonValue(m_enum_value, json[QString("enumValue")]);
    m_enum_value_isSet = !json[QString("enumValue")].isNull() && m_enum_value_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;

    m_string_value_isValid = ::OpenAPI::fromJsonValue(m_string_value, json[QString("stringValue")]);
    m_string_value_isSet = !json[QString("stringValue")].isNull() && m_string_value_isValid;

    m_timestamp_value_isValid = ::OpenAPI::fromJsonValue(m_timestamp_value, json[QString("timestampValue")]);
    m_timestamp_value_isSet = !json[QString("timestampValue")].isNull() && m_timestamp_value_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1TagField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1beta1TagField::asJsonObject() const {
    QJsonObject obj;
    if (m_bool_value_isSet) {
        obj.insert(QString("boolValue"), ::OpenAPI::toJsonValue(m_bool_value));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_double_value_isSet) {
        obj.insert(QString("doubleValue"), ::OpenAPI::toJsonValue(m_double_value));
    }
    if (m_enum_value.isSet()) {
        obj.insert(QString("enumValue"), ::OpenAPI::toJsonValue(m_enum_value));
    }
    if (m_order_isSet) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    if (m_string_value_isSet) {
        obj.insert(QString("stringValue"), ::OpenAPI::toJsonValue(m_string_value));
    }
    if (m_timestamp_value_isSet) {
        obj.insert(QString("timestampValue"), ::OpenAPI::toJsonValue(m_timestamp_value));
    }
    return obj;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::isBoolValue() const {
    return m_bool_value;
}
void OAIGoogleCloudDatacatalogV1beta1TagField::setBoolValue(const bool &bool_value) {
    m_bool_value = bool_value;
    m_bool_value_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_bool_value_Set() const{
    return m_bool_value_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_bool_value_Valid() const{
    return m_bool_value_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1TagField::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatacatalogV1beta1TagField::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_display_name_Valid() const{
    return m_display_name_isValid;
}

double OAIGoogleCloudDatacatalogV1beta1TagField::getDoubleValue() const {
    return m_double_value;
}
void OAIGoogleCloudDatacatalogV1beta1TagField::setDoubleValue(const double &double_value) {
    m_double_value = double_value;
    m_double_value_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_double_value_Set() const{
    return m_double_value_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_double_value_Valid() const{
    return m_double_value_isValid;
}

OAIGoogleCloudDatacatalogV1beta1TagFieldEnumValue OAIGoogleCloudDatacatalogV1beta1TagField::getEnumValue() const {
    return m_enum_value;
}
void OAIGoogleCloudDatacatalogV1beta1TagField::setEnumValue(const OAIGoogleCloudDatacatalogV1beta1TagFieldEnumValue &enum_value) {
    m_enum_value = enum_value;
    m_enum_value_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_enum_value_Set() const{
    return m_enum_value_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_enum_value_Valid() const{
    return m_enum_value_isValid;
}

qint32 OAIGoogleCloudDatacatalogV1beta1TagField::getOrder() const {
    return m_order;
}
void OAIGoogleCloudDatacatalogV1beta1TagField::setOrder(const qint32 &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_order_Set() const{
    return m_order_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_order_Valid() const{
    return m_order_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1TagField::getStringValue() const {
    return m_string_value;
}
void OAIGoogleCloudDatacatalogV1beta1TagField::setStringValue(const QString &string_value) {
    m_string_value = string_value;
    m_string_value_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_string_value_Set() const{
    return m_string_value_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_string_value_Valid() const{
    return m_string_value_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1TagField::getTimestampValue() const {
    return m_timestamp_value;
}
void OAIGoogleCloudDatacatalogV1beta1TagField::setTimestampValue(const QString &timestamp_value) {
    m_timestamp_value = timestamp_value;
    m_timestamp_value_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_timestamp_value_Set() const{
    return m_timestamp_value_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::is_timestamp_value_Valid() const{
    return m_timestamp_value_isValid;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bool_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_double_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enum_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_string_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1beta1TagField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
