/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1beta1UsageStats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1beta1UsageStats::OAIGoogleCloudDatacatalogV1beta1UsageStats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1beta1UsageStats::OAIGoogleCloudDatacatalogV1beta1UsageStats() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1beta1UsageStats::~OAIGoogleCloudDatacatalogV1beta1UsageStats() {}

void OAIGoogleCloudDatacatalogV1beta1UsageStats::initializeModel() {

    m_total_cancellations_isSet = false;
    m_total_cancellations_isValid = false;

    m_total_completions_isSet = false;
    m_total_completions_isValid = false;

    m_total_execution_time_for_completions_millis_isSet = false;
    m_total_execution_time_for_completions_millis_isValid = false;

    m_total_failures_isSet = false;
    m_total_failures_isValid = false;
}

void OAIGoogleCloudDatacatalogV1beta1UsageStats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1beta1UsageStats::fromJsonObject(QJsonObject json) {

    m_total_cancellations_isValid = ::OpenAPI::fromJsonValue(m_total_cancellations, json[QString("totalCancellations")]);
    m_total_cancellations_isSet = !json[QString("totalCancellations")].isNull() && m_total_cancellations_isValid;

    m_total_completions_isValid = ::OpenAPI::fromJsonValue(m_total_completions, json[QString("totalCompletions")]);
    m_total_completions_isSet = !json[QString("totalCompletions")].isNull() && m_total_completions_isValid;

    m_total_execution_time_for_completions_millis_isValid = ::OpenAPI::fromJsonValue(m_total_execution_time_for_completions_millis, json[QString("totalExecutionTimeForCompletionsMillis")]);
    m_total_execution_time_for_completions_millis_isSet = !json[QString("totalExecutionTimeForCompletionsMillis")].isNull() && m_total_execution_time_for_completions_millis_isValid;

    m_total_failures_isValid = ::OpenAPI::fromJsonValue(m_total_failures, json[QString("totalFailures")]);
    m_total_failures_isSet = !json[QString("totalFailures")].isNull() && m_total_failures_isValid;
}

QString OAIGoogleCloudDatacatalogV1beta1UsageStats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1beta1UsageStats::asJsonObject() const {
    QJsonObject obj;
    if (m_total_cancellations_isSet) {
        obj.insert(QString("totalCancellations"), ::OpenAPI::toJsonValue(m_total_cancellations));
    }
    if (m_total_completions_isSet) {
        obj.insert(QString("totalCompletions"), ::OpenAPI::toJsonValue(m_total_completions));
    }
    if (m_total_execution_time_for_completions_millis_isSet) {
        obj.insert(QString("totalExecutionTimeForCompletionsMillis"), ::OpenAPI::toJsonValue(m_total_execution_time_for_completions_millis));
    }
    if (m_total_failures_isSet) {
        obj.insert(QString("totalFailures"), ::OpenAPI::toJsonValue(m_total_failures));
    }
    return obj;
}

float OAIGoogleCloudDatacatalogV1beta1UsageStats::getTotalCancellations() const {
    return m_total_cancellations;
}
void OAIGoogleCloudDatacatalogV1beta1UsageStats::setTotalCancellations(const float &total_cancellations) {
    m_total_cancellations = total_cancellations;
    m_total_cancellations_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::is_total_cancellations_Set() const{
    return m_total_cancellations_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::is_total_cancellations_Valid() const{
    return m_total_cancellations_isValid;
}

float OAIGoogleCloudDatacatalogV1beta1UsageStats::getTotalCompletions() const {
    return m_total_completions;
}
void OAIGoogleCloudDatacatalogV1beta1UsageStats::setTotalCompletions(const float &total_completions) {
    m_total_completions = total_completions;
    m_total_completions_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::is_total_completions_Set() const{
    return m_total_completions_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::is_total_completions_Valid() const{
    return m_total_completions_isValid;
}

float OAIGoogleCloudDatacatalogV1beta1UsageStats::getTotalExecutionTimeForCompletionsMillis() const {
    return m_total_execution_time_for_completions_millis;
}
void OAIGoogleCloudDatacatalogV1beta1UsageStats::setTotalExecutionTimeForCompletionsMillis(const float &total_execution_time_for_completions_millis) {
    m_total_execution_time_for_completions_millis = total_execution_time_for_completions_millis;
    m_total_execution_time_for_completions_millis_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::is_total_execution_time_for_completions_millis_Set() const{
    return m_total_execution_time_for_completions_millis_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::is_total_execution_time_for_completions_millis_Valid() const{
    return m_total_execution_time_for_completions_millis_isValid;
}

float OAIGoogleCloudDatacatalogV1beta1UsageStats::getTotalFailures() const {
    return m_total_failures;
}
void OAIGoogleCloudDatacatalogV1beta1UsageStats::setTotalFailures(const float &total_failures) {
    m_total_failures = total_failures;
    m_total_failures_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::is_total_failures_Set() const{
    return m_total_failures_isSet;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::is_total_failures_Valid() const{
    return m_total_failures_isValid;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_total_cancellations_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_completions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_execution_time_for_completions_millis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_failures_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1beta1UsageStats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
