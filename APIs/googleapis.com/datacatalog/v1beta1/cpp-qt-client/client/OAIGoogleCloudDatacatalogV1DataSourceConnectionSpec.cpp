/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::~OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec() {}

void OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::initializeModel() {

    m_bigquery_connection_spec_isSet = false;
    m_bigquery_connection_spec_isValid = false;
}

void OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::fromJsonObject(QJsonObject json) {

    m_bigquery_connection_spec_isValid = ::OpenAPI::fromJsonValue(m_bigquery_connection_spec, json[QString("bigqueryConnectionSpec")]);
    m_bigquery_connection_spec_isSet = !json[QString("bigqueryConnectionSpec")].isNull() && m_bigquery_connection_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_bigquery_connection_spec.isSet()) {
        obj.insert(QString("bigqueryConnectionSpec"), ::OpenAPI::toJsonValue(m_bigquery_connection_spec));
    }
    return obj;
}

OAIGoogleCloudDatacatalogV1BigQueryConnectionSpec OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::getBigqueryConnectionSpec() const {
    return m_bigquery_connection_spec;
}
void OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::setBigqueryConnectionSpec(const OAIGoogleCloudDatacatalogV1BigQueryConnectionSpec &bigquery_connection_spec) {
    m_bigquery_connection_spec = bigquery_connection_spec;
    m_bigquery_connection_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::is_bigquery_connection_spec_Set() const{
    return m_bigquery_connection_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::is_bigquery_connection_spec_Valid() const{
    return m_bigquery_connection_spec_isValid;
}

bool OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bigquery_connection_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
