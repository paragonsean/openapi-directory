/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope.h
 *
 * The criteria that select the subspace used for query matching.
 */

#ifndef OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope_H
#define OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope : public OAIObject {
public:
    OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope();
    OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope(QString json);
    ~OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIncludeGcpPublicDatasets() const;
    void setIncludeGcpPublicDatasets(const bool &include_gcp_public_datasets);
    bool is_include_gcp_public_datasets_Set() const;
    bool is_include_gcp_public_datasets_Valid() const;

    QList<QString> getIncludeOrgIds() const;
    void setIncludeOrgIds(const QList<QString> &include_org_ids);
    bool is_include_org_ids_Set() const;
    bool is_include_org_ids_Valid() const;

    QList<QString> getIncludeProjectIds() const;
    void setIncludeProjectIds(const QList<QString> &include_project_ids);
    bool is_include_project_ids_Set() const;
    bool is_include_project_ids_Valid() const;

    QList<QString> getRestrictedLocations() const;
    void setRestrictedLocations(const QList<QString> &restricted_locations);
    bool is_restricted_locations_Set() const;
    bool is_restricted_locations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_include_gcp_public_datasets;
    bool m_include_gcp_public_datasets_isSet;
    bool m_include_gcp_public_datasets_isValid;

    QList<QString> m_include_org_ids;
    bool m_include_org_ids_isSet;
    bool m_include_org_ids_isValid;

    QList<QString> m_include_project_ids;
    bool m_include_project_ids_isSet;
    bool m_include_project_ids_isValid;

    QList<QString> m_restricted_locations;
    bool m_restricted_locations_isSet;
    bool m_restricted_locations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope)

#endif // OAIGoogleCloudDatacatalogV1beta1SearchCatalogRequestScope_H
