/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleCloudDataCatalogApi);
  }
}(this, function(expect, GoogleCloudDataCatalogApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleCloudDataCatalogApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('datacatalogProjectsLocationsEntryGroupsCreate', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsCreate successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsCreate
        //instance.datacatalogProjectsLocationsEntryGroupsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsEntriesCreate', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsEntriesCreate successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsEntriesCreate
        //instance.datacatalogProjectsLocationsEntryGroupsEntriesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsEntriesImport', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsEntriesImport successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsEntriesImport
        //instance.datacatalogProjectsLocationsEntryGroupsEntriesImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsEntriesList', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsEntriesList successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsEntriesList
        //instance.datacatalogProjectsLocationsEntryGroupsEntriesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsEntriesModifyEntryContacts', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsEntriesModifyEntryContacts successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsEntriesModifyEntryContacts
        //instance.datacatalogProjectsLocationsEntryGroupsEntriesModifyEntryContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsEntriesModifyEntryOverview', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsEntriesModifyEntryOverview successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsEntriesModifyEntryOverview
        //instance.datacatalogProjectsLocationsEntryGroupsEntriesModifyEntryOverview(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsEntriesStar', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsEntriesStar successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsEntriesStar
        //instance.datacatalogProjectsLocationsEntryGroupsEntriesStar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsEntriesTagsReconcile', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsEntriesTagsReconcile successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsEntriesTagsReconcile
        //instance.datacatalogProjectsLocationsEntryGroupsEntriesTagsReconcile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsEntriesUnstar', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsEntriesUnstar successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsEntriesUnstar
        //instance.datacatalogProjectsLocationsEntryGroupsEntriesUnstar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsList', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsList successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsList
        //instance.datacatalogProjectsLocationsEntryGroupsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsTagsCreate', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsTagsCreate successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsTagsCreate
        //instance.datacatalogProjectsLocationsEntryGroupsTagsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsEntryGroupsTagsList', function() {
      it('should call datacatalogProjectsLocationsEntryGroupsTagsList successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsEntryGroupsTagsList
        //instance.datacatalogProjectsLocationsEntryGroupsTagsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsOperationsCancel', function() {
      it('should call datacatalogProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsOperationsCancel
        //instance.datacatalogProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsOperationsList', function() {
      it('should call datacatalogProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsOperationsList
        //instance.datacatalogProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTagTemplatesCreate', function() {
      it('should call datacatalogProjectsLocationsTagTemplatesCreate successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTagTemplatesCreate
        //instance.datacatalogProjectsLocationsTagTemplatesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTagTemplatesFieldsCreate', function() {
      it('should call datacatalogProjectsLocationsTagTemplatesFieldsCreate successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTagTemplatesFieldsCreate
        //instance.datacatalogProjectsLocationsTagTemplatesFieldsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRename', function() {
      it('should call datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRename successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRename
        //instance.datacatalogProjectsLocationsTagTemplatesFieldsEnumValuesRename(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesCreate', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesCreate successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesCreate
        //instance.datacatalogProjectsLocationsTaxonomiesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesExport', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesExport successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesExport
        //instance.datacatalogProjectsLocationsTaxonomiesExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesImport', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesImport successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesImport
        //instance.datacatalogProjectsLocationsTaxonomiesImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesList', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesList successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesList
        //instance.datacatalogProjectsLocationsTaxonomiesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesPolicyTagsCreate', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesPolicyTagsCreate successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesPolicyTagsCreate
        //instance.datacatalogProjectsLocationsTaxonomiesPolicyTagsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesPolicyTagsDelete', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesPolicyTagsDelete successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesPolicyTagsDelete
        //instance.datacatalogProjectsLocationsTaxonomiesPolicyTagsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesPolicyTagsGet', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesPolicyTagsGet successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesPolicyTagsGet
        //instance.datacatalogProjectsLocationsTaxonomiesPolicyTagsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy
        //instance.datacatalogProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesPolicyTagsList', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesPolicyTagsList successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesPolicyTagsList
        //instance.datacatalogProjectsLocationsTaxonomiesPolicyTagsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesPolicyTagsPatch', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesPolicyTagsPatch successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesPolicyTagsPatch
        //instance.datacatalogProjectsLocationsTaxonomiesPolicyTagsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy
        //instance.datacatalogProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions
        //instance.datacatalogProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('datacatalogProjectsLocationsTaxonomiesReplace', function() {
      it('should call datacatalogProjectsLocationsTaxonomiesReplace successfully', function(done) {
        //uncomment below and update the code to test datacatalogProjectsLocationsTaxonomiesReplace
        //instance.datacatalogProjectsLocationsTaxonomiesReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
