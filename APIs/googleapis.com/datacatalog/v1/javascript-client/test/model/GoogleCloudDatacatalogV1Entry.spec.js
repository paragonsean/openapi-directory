/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoogleCloudDataCatalogApi);
  }
}(this, function(expect, GoogleCloudDataCatalogApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudDatacatalogV1Entry', function() {
    it('should create an instance of GoogleCloudDatacatalogV1Entry', function() {
      // uncomment below and update the code to test GoogleCloudDatacatalogV1Entry
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be.a(GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry);
    });

    it('should have the property bigqueryDateShardedSpec (base name: "bigqueryDateShardedSpec")', function() {
      // uncomment below and update the code to test the property bigqueryDateShardedSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property bigqueryTableSpec (base name: "bigqueryTableSpec")', function() {
      // uncomment below and update the code to test the property bigqueryTableSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property businessContext (base name: "businessContext")', function() {
      // uncomment below and update the code to test the property businessContext
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property cloudBigtableSystemSpec (base name: "cloudBigtableSystemSpec")', function() {
      // uncomment below and update the code to test the property cloudBigtableSystemSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property dataSource (base name: "dataSource")', function() {
      // uncomment below and update the code to test the property dataSource
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property dataSourceConnectionSpec (base name: "dataSourceConnectionSpec")', function() {
      // uncomment below and update the code to test the property dataSourceConnectionSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property databaseTableSpec (base name: "databaseTableSpec")', function() {
      // uncomment below and update the code to test the property databaseTableSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property datasetSpec (base name: "datasetSpec")', function() {
      // uncomment below and update the code to test the property datasetSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property featureOnlineStoreSpec (base name: "featureOnlineStoreSpec")', function() {
      // uncomment below and update the code to test the property featureOnlineStoreSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property filesetSpec (base name: "filesetSpec")', function() {
      // uncomment below and update the code to test the property filesetSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property fullyQualifiedName (base name: "fullyQualifiedName")', function() {
      // uncomment below and update the code to test the property fullyQualifiedName
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property gcsFilesetSpec (base name: "gcsFilesetSpec")', function() {
      // uncomment below and update the code to test the property gcsFilesetSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property integratedSystem (base name: "integratedSystem")', function() {
      // uncomment below and update the code to test the property integratedSystem
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property linkedResource (base name: "linkedResource")', function() {
      // uncomment below and update the code to test the property linkedResource
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property lookerSystemSpec (base name: "lookerSystemSpec")', function() {
      // uncomment below and update the code to test the property lookerSystemSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property modelSpec (base name: "modelSpec")', function() {
      // uncomment below and update the code to test the property modelSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property personalDetails (base name: "personalDetails")', function() {
      // uncomment below and update the code to test the property personalDetails
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property routineSpec (base name: "routineSpec")', function() {
      // uncomment below and update the code to test the property routineSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property schema (base name: "schema")', function() {
      // uncomment below and update the code to test the property schema
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property serviceSpec (base name: "serviceSpec")', function() {
      // uncomment below and update the code to test the property serviceSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property sourceSystemTimestamps (base name: "sourceSystemTimestamps")', function() {
      // uncomment below and update the code to test the property sourceSystemTimestamps
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property sqlDatabaseSystemSpec (base name: "sqlDatabaseSystemSpec")', function() {
      // uncomment below and update the code to test the property sqlDatabaseSystemSpec
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property usageSignal (base name: "usageSignal")', function() {
      // uncomment below and update the code to test the property usageSignal
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property userSpecifiedSystem (base name: "userSpecifiedSystem")', function() {
      // uncomment below and update the code to test the property userSpecifiedSystem
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

    it('should have the property userSpecifiedType (base name: "userSpecifiedType")', function() {
      // uncomment below and update the code to test the property userSpecifiedType
      //var instance = new GoogleCloudDataCatalogApi.GoogleCloudDatacatalogV1Entry();
      //expect(instance).to.be();
    });

  });

}));
