/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec model module.
 * @module model/GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec
 * @version v1
 */
class GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec</code>.
     * Specification for the BigQuery connection to a Cloud SQL instance.
     * @alias module:model/GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec} The populated <code>GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec();

            if (data.hasOwnProperty('database')) {
                obj['database'] = ApiClient.convertToType(data['database'], 'String');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['database'] && !(typeof data['database'] === 'string' || data['database'] instanceof String)) {
            throw new Error("Expected the field `database` to be a primitive type in the JSON string but got " + data['database']);
        }
        // ensure the json data is a string
        if (data['instanceId'] && !(typeof data['instanceId'] === 'string' || data['instanceId'] instanceof String)) {
            throw new Error("Expected the field `instanceId` to be a primitive type in the JSON string but got " + data['instanceId']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Database name.
 * @member {String} database
 */
GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec.prototype['database'] = undefined;

/**
 * Cloud SQL instance ID in the format of `project:location:instance`.
 * @member {String} instanceId
 */
GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec.prototype['instanceId'] = undefined;

/**
 * Type of the Cloud SQL database.
 * @member {module:model/GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec.TypeEnum} type
 */
GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec['TypeEnum'] = {

    /**
     * value: "DATABASE_TYPE_UNSPECIFIED"
     * @const
     */
    "DATABASE_TYPE_UNSPECIFIED": "DATABASE_TYPE_UNSPECIFIED",

    /**
     * value: "POSTGRES"
     * @const
     */
    "POSTGRES": "POSTGRES",

    /**
     * value: "MYSQL"
     * @const
     */
    "MYSQL": "MYSQL"
};



export default GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec;

