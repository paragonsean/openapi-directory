/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1Entry from './GoogleCloudDatacatalogV1Entry';
import GoogleCloudDatacatalogV1Tag from './GoogleCloudDatacatalogV1Tag';

/**
 * The GoogleCloudDatacatalogV1TaggedEntry model module.
 * @module model/GoogleCloudDatacatalogV1TaggedEntry
 * @version v1
 */
class GoogleCloudDatacatalogV1TaggedEntry {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1TaggedEntry</code>.
     * Wrapper containing Entry and information about Tags that should and should not be attached to it.
     * @alias module:model/GoogleCloudDatacatalogV1TaggedEntry
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1TaggedEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1TaggedEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1TaggedEntry} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1TaggedEntry} The populated <code>GoogleCloudDatacatalogV1TaggedEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1TaggedEntry();

            if (data.hasOwnProperty('absentTags')) {
                obj['absentTags'] = ApiClient.convertToType(data['absentTags'], [GoogleCloudDatacatalogV1Tag]);
            }
            if (data.hasOwnProperty('presentTags')) {
                obj['presentTags'] = ApiClient.convertToType(data['presentTags'], [GoogleCloudDatacatalogV1Tag]);
            }
            if (data.hasOwnProperty('v1Entry')) {
                obj['v1Entry'] = GoogleCloudDatacatalogV1Entry.constructFromObject(data['v1Entry']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1TaggedEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1TaggedEntry</code>.
     */
    static validateJSON(data) {
        if (data['absentTags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['absentTags'])) {
                throw new Error("Expected the field `absentTags` to be an array in the JSON data but got " + data['absentTags']);
            }
            // validate the optional field `absentTags` (array)
            for (const item of data['absentTags']) {
                GoogleCloudDatacatalogV1Tag.validateJSON(item);
            };
        }
        if (data['presentTags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['presentTags'])) {
                throw new Error("Expected the field `presentTags` to be an array in the JSON data but got " + data['presentTags']);
            }
            // validate the optional field `presentTags` (array)
            for (const item of data['presentTags']) {
                GoogleCloudDatacatalogV1Tag.validateJSON(item);
            };
        }
        // validate the optional field `v1Entry`
        if (data['v1Entry']) { // data not null
          GoogleCloudDatacatalogV1Entry.validateJSON(data['v1Entry']);
        }

        return true;
    }


}



/**
 * Optional. Tags that should be deleted from the Data Catalog. Caller should populate template name and column only.
 * @member {Array.<module:model/GoogleCloudDatacatalogV1Tag>} absentTags
 */
GoogleCloudDatacatalogV1TaggedEntry.prototype['absentTags'] = undefined;

/**
 * Optional. Tags that should be ingested into the Data Catalog. Caller should populate template name, column and fields.
 * @member {Array.<module:model/GoogleCloudDatacatalogV1Tag>} presentTags
 */
GoogleCloudDatacatalogV1TaggedEntry.prototype['presentTags'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1Entry} v1Entry
 */
GoogleCloudDatacatalogV1TaggedEntry.prototype['v1Entry'] = undefined;






export default GoogleCloudDatacatalogV1TaggedEntry;

