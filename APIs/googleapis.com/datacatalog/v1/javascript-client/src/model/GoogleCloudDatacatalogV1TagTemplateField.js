/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1FieldType from './GoogleCloudDatacatalogV1FieldType';

/**
 * The GoogleCloudDatacatalogV1TagTemplateField model module.
 * @module model/GoogleCloudDatacatalogV1TagTemplateField
 * @version v1
 */
class GoogleCloudDatacatalogV1TagTemplateField {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1TagTemplateField</code>.
     * The template for an individual field within a tag template.
     * @alias module:model/GoogleCloudDatacatalogV1TagTemplateField
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1TagTemplateField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1TagTemplateField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1TagTemplateField} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1TagTemplateField} The populated <code>GoogleCloudDatacatalogV1TagTemplateField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1TagTemplateField();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('isRequired')) {
                obj['isRequired'] = ApiClient.convertToType(data['isRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = GoogleCloudDatacatalogV1FieldType.constructFromObject(data['type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1TagTemplateField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1TagTemplateField</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          GoogleCloudDatacatalogV1FieldType.validateJSON(data['type']);
        }

        return true;
    }


}



/**
 * The description for this field. Defaults to an empty string.
 * @member {String} description
 */
GoogleCloudDatacatalogV1TagTemplateField.prototype['description'] = undefined;

/**
 * The display name for this field. Defaults to an empty string. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum length is 200 characters.
 * @member {String} displayName
 */
GoogleCloudDatacatalogV1TagTemplateField.prototype['displayName'] = undefined;

/**
 * If true, this field is required. Defaults to false.
 * @member {Boolean} isRequired
 */
GoogleCloudDatacatalogV1TagTemplateField.prototype['isRequired'] = undefined;

/**
 * Output only. The resource name of the tag template field in URL format. Example: `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE}/fields/{FIELD}` Note: The tag template field itself might not be stored in the location specified in its name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 64 characters.
 * @member {String} name
 */
GoogleCloudDatacatalogV1TagTemplateField.prototype['name'] = undefined;

/**
 * The order of this field with respect to other fields in this tag template. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order and field orders within a tag don't have to be sequential.
 * @member {Number} order
 */
GoogleCloudDatacatalogV1TagTemplateField.prototype['order'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1FieldType} type
 */
GoogleCloudDatacatalogV1TagTemplateField.prototype['type'] = undefined;






export default GoogleCloudDatacatalogV1TagTemplateField;

