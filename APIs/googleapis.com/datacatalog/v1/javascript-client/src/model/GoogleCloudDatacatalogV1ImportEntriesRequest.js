/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatacatalogV1ImportEntriesRequest model module.
 * @module model/GoogleCloudDatacatalogV1ImportEntriesRequest
 * @version v1
 */
class GoogleCloudDatacatalogV1ImportEntriesRequest {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1ImportEntriesRequest</code>.
     * Request message for ImportEntries method.
     * @alias module:model/GoogleCloudDatacatalogV1ImportEntriesRequest
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1ImportEntriesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1ImportEntriesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1ImportEntriesRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1ImportEntriesRequest} The populated <code>GoogleCloudDatacatalogV1ImportEntriesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1ImportEntriesRequest();

            if (data.hasOwnProperty('gcsBucketPath')) {
                obj['gcsBucketPath'] = ApiClient.convertToType(data['gcsBucketPath'], 'String');
            }
            if (data.hasOwnProperty('jobId')) {
                obj['jobId'] = ApiClient.convertToType(data['jobId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1ImportEntriesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1ImportEntriesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gcsBucketPath'] && !(typeof data['gcsBucketPath'] === 'string' || data['gcsBucketPath'] instanceof String)) {
            throw new Error("Expected the field `gcsBucketPath` to be a primitive type in the JSON string but got " + data['gcsBucketPath']);
        }
        // ensure the json data is a string
        if (data['jobId'] && !(typeof data['jobId'] === 'string' || data['jobId'] instanceof String)) {
            throw new Error("Expected the field `jobId` to be a primitive type in the JSON string but got " + data['jobId']);
        }

        return true;
    }


}



/**
 * Path to a Cloud Storage bucket that contains a dump ready for ingestion.
 * @member {String} gcsBucketPath
 */
GoogleCloudDatacatalogV1ImportEntriesRequest.prototype['gcsBucketPath'] = undefined;

/**
 * Optional. (Optional) Dataplex task job id, if specified will be used as part of ImportEntries LRO ID
 * @member {String} jobId
 */
GoogleCloudDatacatalogV1ImportEntriesRequest.prototype['jobId'] = undefined;






export default GoogleCloudDatacatalogV1ImportEntriesRequest;

