/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec from './GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec';

/**
 * The GoogleCloudDatacatalogV1BigQueryConnectionSpec model module.
 * @module model/GoogleCloudDatacatalogV1BigQueryConnectionSpec
 * @version v1
 */
class GoogleCloudDatacatalogV1BigQueryConnectionSpec {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1BigQueryConnectionSpec</code>.
     * Specification for the BigQuery connection.
     * @alias module:model/GoogleCloudDatacatalogV1BigQueryConnectionSpec
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1BigQueryConnectionSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1BigQueryConnectionSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1BigQueryConnectionSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1BigQueryConnectionSpec} The populated <code>GoogleCloudDatacatalogV1BigQueryConnectionSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1BigQueryConnectionSpec();

            if (data.hasOwnProperty('cloudSql')) {
                obj['cloudSql'] = GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec.constructFromObject(data['cloudSql']);
            }
            if (data.hasOwnProperty('connectionType')) {
                obj['connectionType'] = ApiClient.convertToType(data['connectionType'], 'String');
            }
            if (data.hasOwnProperty('hasCredential')) {
                obj['hasCredential'] = ApiClient.convertToType(data['hasCredential'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1BigQueryConnectionSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1BigQueryConnectionSpec</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cloudSql`
        if (data['cloudSql']) { // data not null
          GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec.validateJSON(data['cloudSql']);
        }
        // ensure the json data is a string
        if (data['connectionType'] && !(typeof data['connectionType'] === 'string' || data['connectionType'] instanceof String)) {
            throw new Error("Expected the field `connectionType` to be a primitive type in the JSON string but got " + data['connectionType']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec} cloudSql
 */
GoogleCloudDatacatalogV1BigQueryConnectionSpec.prototype['cloudSql'] = undefined;

/**
 * The type of the BigQuery connection.
 * @member {module:model/GoogleCloudDatacatalogV1BigQueryConnectionSpec.ConnectionTypeEnum} connectionType
 */
GoogleCloudDatacatalogV1BigQueryConnectionSpec.prototype['connectionType'] = undefined;

/**
 * True if there are credentials attached to the BigQuery connection; false otherwise.
 * @member {Boolean} hasCredential
 */
GoogleCloudDatacatalogV1BigQueryConnectionSpec.prototype['hasCredential'] = undefined;





/**
 * Allowed values for the <code>connectionType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1BigQueryConnectionSpec['ConnectionTypeEnum'] = {

    /**
     * value: "CONNECTION_TYPE_UNSPECIFIED"
     * @const
     */
    "CONNECTION_TYPE_UNSPECIFIED": "CONNECTION_TYPE_UNSPECIFIED",

    /**
     * value: "CLOUD_SQL"
     * @const
     */
    "CLOUD_SQL": "CLOUD_SQL"
};



export default GoogleCloudDatacatalogV1BigQueryConnectionSpec;

