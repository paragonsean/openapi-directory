/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue from './GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue';

/**
 * The GoogleCloudDatacatalogV1FieldTypeEnumType model module.
 * @module model/GoogleCloudDatacatalogV1FieldTypeEnumType
 * @version v1
 */
class GoogleCloudDatacatalogV1FieldTypeEnumType {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1FieldTypeEnumType</code>.
     * @alias module:model/GoogleCloudDatacatalogV1FieldTypeEnumType
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1FieldTypeEnumType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1FieldTypeEnumType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1FieldTypeEnumType} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1FieldTypeEnumType} The populated <code>GoogleCloudDatacatalogV1FieldTypeEnumType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1FieldTypeEnumType();

            if (data.hasOwnProperty('allowedValues')) {
                obj['allowedValues'] = ApiClient.convertToType(data['allowedValues'], [GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1FieldTypeEnumType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1FieldTypeEnumType</code>.
     */
    static validateJSON(data) {
        if (data['allowedValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['allowedValues'])) {
                throw new Error("Expected the field `allowedValues` to be an array in the JSON data but got " + data['allowedValues']);
            }
            // validate the optional field `allowedValues` (array)
            for (const item of data['allowedValues']) {
                GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The set of allowed values for this enum. This set must not be empty and can include up to 100 allowed values. The display names of the values in this set must not be empty and must be case-insensitively unique within this set. The order of items in this set is preserved. This field can be used to create, remove, and reorder enum values. To rename enum values, use the `RenameTagTemplateFieldEnumValue` method.
 * @member {Array.<module:model/GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue>} allowedValues
 */
GoogleCloudDatacatalogV1FieldTypeEnumType.prototype['allowedValues'] = undefined;






export default GoogleCloudDatacatalogV1FieldTypeEnumType;

