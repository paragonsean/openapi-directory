/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1BigQueryDateShardedSpec from './GoogleCloudDatacatalogV1BigQueryDateShardedSpec';
import GoogleCloudDatacatalogV1BigQueryTableSpec from './GoogleCloudDatacatalogV1BigQueryTableSpec';
import GoogleCloudDatacatalogV1BusinessContext from './GoogleCloudDatacatalogV1BusinessContext';
import GoogleCloudDatacatalogV1CloudBigtableSystemSpec from './GoogleCloudDatacatalogV1CloudBigtableSystemSpec';
import GoogleCloudDatacatalogV1DataSource from './GoogleCloudDatacatalogV1DataSource';
import GoogleCloudDatacatalogV1DataSourceConnectionSpec from './GoogleCloudDatacatalogV1DataSourceConnectionSpec';
import GoogleCloudDatacatalogV1DatabaseTableSpec from './GoogleCloudDatacatalogV1DatabaseTableSpec';
import GoogleCloudDatacatalogV1DatasetSpec from './GoogleCloudDatacatalogV1DatasetSpec';
import GoogleCloudDatacatalogV1FeatureOnlineStoreSpec from './GoogleCloudDatacatalogV1FeatureOnlineStoreSpec';
import GoogleCloudDatacatalogV1FilesetSpec from './GoogleCloudDatacatalogV1FilesetSpec';
import GoogleCloudDatacatalogV1GcsFilesetSpec from './GoogleCloudDatacatalogV1GcsFilesetSpec';
import GoogleCloudDatacatalogV1LookerSystemSpec from './GoogleCloudDatacatalogV1LookerSystemSpec';
import GoogleCloudDatacatalogV1ModelSpec from './GoogleCloudDatacatalogV1ModelSpec';
import GoogleCloudDatacatalogV1PersonalDetails from './GoogleCloudDatacatalogV1PersonalDetails';
import GoogleCloudDatacatalogV1RoutineSpec from './GoogleCloudDatacatalogV1RoutineSpec';
import GoogleCloudDatacatalogV1Schema from './GoogleCloudDatacatalogV1Schema';
import GoogleCloudDatacatalogV1ServiceSpec from './GoogleCloudDatacatalogV1ServiceSpec';
import GoogleCloudDatacatalogV1SqlDatabaseSystemSpec from './GoogleCloudDatacatalogV1SqlDatabaseSystemSpec';
import GoogleCloudDatacatalogV1SystemTimestamps from './GoogleCloudDatacatalogV1SystemTimestamps';
import GoogleCloudDatacatalogV1UsageSignal from './GoogleCloudDatacatalogV1UsageSignal';

/**
 * The GoogleCloudDatacatalogV1Entry model module.
 * @module model/GoogleCloudDatacatalogV1Entry
 * @version v1
 */
class GoogleCloudDatacatalogV1Entry {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1Entry</code>.
     * Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the &#x60;linked_resource&#x60; field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag.
     * @alias module:model/GoogleCloudDatacatalogV1Entry
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1Entry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1Entry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1Entry} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1Entry} The populated <code>GoogleCloudDatacatalogV1Entry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1Entry();

            if (data.hasOwnProperty('bigqueryDateShardedSpec')) {
                obj['bigqueryDateShardedSpec'] = GoogleCloudDatacatalogV1BigQueryDateShardedSpec.constructFromObject(data['bigqueryDateShardedSpec']);
            }
            if (data.hasOwnProperty('bigqueryTableSpec')) {
                obj['bigqueryTableSpec'] = GoogleCloudDatacatalogV1BigQueryTableSpec.constructFromObject(data['bigqueryTableSpec']);
            }
            if (data.hasOwnProperty('businessContext')) {
                obj['businessContext'] = GoogleCloudDatacatalogV1BusinessContext.constructFromObject(data['businessContext']);
            }
            if (data.hasOwnProperty('cloudBigtableSystemSpec')) {
                obj['cloudBigtableSystemSpec'] = GoogleCloudDatacatalogV1CloudBigtableSystemSpec.constructFromObject(data['cloudBigtableSystemSpec']);
            }
            if (data.hasOwnProperty('dataSource')) {
                obj['dataSource'] = GoogleCloudDatacatalogV1DataSource.constructFromObject(data['dataSource']);
            }
            if (data.hasOwnProperty('dataSourceConnectionSpec')) {
                obj['dataSourceConnectionSpec'] = GoogleCloudDatacatalogV1DataSourceConnectionSpec.constructFromObject(data['dataSourceConnectionSpec']);
            }
            if (data.hasOwnProperty('databaseTableSpec')) {
                obj['databaseTableSpec'] = GoogleCloudDatacatalogV1DatabaseTableSpec.constructFromObject(data['databaseTableSpec']);
            }
            if (data.hasOwnProperty('datasetSpec')) {
                obj['datasetSpec'] = GoogleCloudDatacatalogV1DatasetSpec.constructFromObject(data['datasetSpec']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('featureOnlineStoreSpec')) {
                obj['featureOnlineStoreSpec'] = GoogleCloudDatacatalogV1FeatureOnlineStoreSpec.constructFromObject(data['featureOnlineStoreSpec']);
            }
            if (data.hasOwnProperty('filesetSpec')) {
                obj['filesetSpec'] = GoogleCloudDatacatalogV1FilesetSpec.constructFromObject(data['filesetSpec']);
            }
            if (data.hasOwnProperty('fullyQualifiedName')) {
                obj['fullyQualifiedName'] = ApiClient.convertToType(data['fullyQualifiedName'], 'String');
            }
            if (data.hasOwnProperty('gcsFilesetSpec')) {
                obj['gcsFilesetSpec'] = GoogleCloudDatacatalogV1GcsFilesetSpec.constructFromObject(data['gcsFilesetSpec']);
            }
            if (data.hasOwnProperty('integratedSystem')) {
                obj['integratedSystem'] = ApiClient.convertToType(data['integratedSystem'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('linkedResource')) {
                obj['linkedResource'] = ApiClient.convertToType(data['linkedResource'], 'String');
            }
            if (data.hasOwnProperty('lookerSystemSpec')) {
                obj['lookerSystemSpec'] = GoogleCloudDatacatalogV1LookerSystemSpec.constructFromObject(data['lookerSystemSpec']);
            }
            if (data.hasOwnProperty('modelSpec')) {
                obj['modelSpec'] = GoogleCloudDatacatalogV1ModelSpec.constructFromObject(data['modelSpec']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('personalDetails')) {
                obj['personalDetails'] = GoogleCloudDatacatalogV1PersonalDetails.constructFromObject(data['personalDetails']);
            }
            if (data.hasOwnProperty('routineSpec')) {
                obj['routineSpec'] = GoogleCloudDatacatalogV1RoutineSpec.constructFromObject(data['routineSpec']);
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = GoogleCloudDatacatalogV1Schema.constructFromObject(data['schema']);
            }
            if (data.hasOwnProperty('serviceSpec')) {
                obj['serviceSpec'] = GoogleCloudDatacatalogV1ServiceSpec.constructFromObject(data['serviceSpec']);
            }
            if (data.hasOwnProperty('sourceSystemTimestamps')) {
                obj['sourceSystemTimestamps'] = GoogleCloudDatacatalogV1SystemTimestamps.constructFromObject(data['sourceSystemTimestamps']);
            }
            if (data.hasOwnProperty('sqlDatabaseSystemSpec')) {
                obj['sqlDatabaseSystemSpec'] = GoogleCloudDatacatalogV1SqlDatabaseSystemSpec.constructFromObject(data['sqlDatabaseSystemSpec']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('usageSignal')) {
                obj['usageSignal'] = GoogleCloudDatacatalogV1UsageSignal.constructFromObject(data['usageSignal']);
            }
            if (data.hasOwnProperty('userSpecifiedSystem')) {
                obj['userSpecifiedSystem'] = ApiClient.convertToType(data['userSpecifiedSystem'], 'String');
            }
            if (data.hasOwnProperty('userSpecifiedType')) {
                obj['userSpecifiedType'] = ApiClient.convertToType(data['userSpecifiedType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1Entry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1Entry</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bigqueryDateShardedSpec`
        if (data['bigqueryDateShardedSpec']) { // data not null
          GoogleCloudDatacatalogV1BigQueryDateShardedSpec.validateJSON(data['bigqueryDateShardedSpec']);
        }
        // validate the optional field `bigqueryTableSpec`
        if (data['bigqueryTableSpec']) { // data not null
          GoogleCloudDatacatalogV1BigQueryTableSpec.validateJSON(data['bigqueryTableSpec']);
        }
        // validate the optional field `businessContext`
        if (data['businessContext']) { // data not null
          GoogleCloudDatacatalogV1BusinessContext.validateJSON(data['businessContext']);
        }
        // validate the optional field `cloudBigtableSystemSpec`
        if (data['cloudBigtableSystemSpec']) { // data not null
          GoogleCloudDatacatalogV1CloudBigtableSystemSpec.validateJSON(data['cloudBigtableSystemSpec']);
        }
        // validate the optional field `dataSource`
        if (data['dataSource']) { // data not null
          GoogleCloudDatacatalogV1DataSource.validateJSON(data['dataSource']);
        }
        // validate the optional field `dataSourceConnectionSpec`
        if (data['dataSourceConnectionSpec']) { // data not null
          GoogleCloudDatacatalogV1DataSourceConnectionSpec.validateJSON(data['dataSourceConnectionSpec']);
        }
        // validate the optional field `databaseTableSpec`
        if (data['databaseTableSpec']) { // data not null
          GoogleCloudDatacatalogV1DatabaseTableSpec.validateJSON(data['databaseTableSpec']);
        }
        // validate the optional field `datasetSpec`
        if (data['datasetSpec']) { // data not null
          GoogleCloudDatacatalogV1DatasetSpec.validateJSON(data['datasetSpec']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `featureOnlineStoreSpec`
        if (data['featureOnlineStoreSpec']) { // data not null
          GoogleCloudDatacatalogV1FeatureOnlineStoreSpec.validateJSON(data['featureOnlineStoreSpec']);
        }
        // validate the optional field `filesetSpec`
        if (data['filesetSpec']) { // data not null
          GoogleCloudDatacatalogV1FilesetSpec.validateJSON(data['filesetSpec']);
        }
        // ensure the json data is a string
        if (data['fullyQualifiedName'] && !(typeof data['fullyQualifiedName'] === 'string' || data['fullyQualifiedName'] instanceof String)) {
            throw new Error("Expected the field `fullyQualifiedName` to be a primitive type in the JSON string but got " + data['fullyQualifiedName']);
        }
        // validate the optional field `gcsFilesetSpec`
        if (data['gcsFilesetSpec']) { // data not null
          GoogleCloudDatacatalogV1GcsFilesetSpec.validateJSON(data['gcsFilesetSpec']);
        }
        // ensure the json data is a string
        if (data['integratedSystem'] && !(typeof data['integratedSystem'] === 'string' || data['integratedSystem'] instanceof String)) {
            throw new Error("Expected the field `integratedSystem` to be a primitive type in the JSON string but got " + data['integratedSystem']);
        }
        // ensure the json data is a string
        if (data['linkedResource'] && !(typeof data['linkedResource'] === 'string' || data['linkedResource'] instanceof String)) {
            throw new Error("Expected the field `linkedResource` to be a primitive type in the JSON string but got " + data['linkedResource']);
        }
        // validate the optional field `lookerSystemSpec`
        if (data['lookerSystemSpec']) { // data not null
          GoogleCloudDatacatalogV1LookerSystemSpec.validateJSON(data['lookerSystemSpec']);
        }
        // validate the optional field `modelSpec`
        if (data['modelSpec']) { // data not null
          GoogleCloudDatacatalogV1ModelSpec.validateJSON(data['modelSpec']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `personalDetails`
        if (data['personalDetails']) { // data not null
          GoogleCloudDatacatalogV1PersonalDetails.validateJSON(data['personalDetails']);
        }
        // validate the optional field `routineSpec`
        if (data['routineSpec']) { // data not null
          GoogleCloudDatacatalogV1RoutineSpec.validateJSON(data['routineSpec']);
        }
        // validate the optional field `schema`
        if (data['schema']) { // data not null
          GoogleCloudDatacatalogV1Schema.validateJSON(data['schema']);
        }
        // validate the optional field `serviceSpec`
        if (data['serviceSpec']) { // data not null
          GoogleCloudDatacatalogV1ServiceSpec.validateJSON(data['serviceSpec']);
        }
        // validate the optional field `sourceSystemTimestamps`
        if (data['sourceSystemTimestamps']) { // data not null
          GoogleCloudDatacatalogV1SystemTimestamps.validateJSON(data['sourceSystemTimestamps']);
        }
        // validate the optional field `sqlDatabaseSystemSpec`
        if (data['sqlDatabaseSystemSpec']) { // data not null
          GoogleCloudDatacatalogV1SqlDatabaseSystemSpec.validateJSON(data['sqlDatabaseSystemSpec']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `usageSignal`
        if (data['usageSignal']) { // data not null
          GoogleCloudDatacatalogV1UsageSignal.validateJSON(data['usageSignal']);
        }
        // ensure the json data is a string
        if (data['userSpecifiedSystem'] && !(typeof data['userSpecifiedSystem'] === 'string' || data['userSpecifiedSystem'] instanceof String)) {
            throw new Error("Expected the field `userSpecifiedSystem` to be a primitive type in the JSON string but got " + data['userSpecifiedSystem']);
        }
        // ensure the json data is a string
        if (data['userSpecifiedType'] && !(typeof data['userSpecifiedType'] === 'string' || data['userSpecifiedType'] instanceof String)) {
            throw new Error("Expected the field `userSpecifiedType` to be a primitive type in the JSON string but got " + data['userSpecifiedType']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudDatacatalogV1BigQueryDateShardedSpec} bigqueryDateShardedSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['bigqueryDateShardedSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1BigQueryTableSpec} bigqueryTableSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['bigqueryTableSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1BusinessContext} businessContext
 */
GoogleCloudDatacatalogV1Entry.prototype['businessContext'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1CloudBigtableSystemSpec} cloudBigtableSystemSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['cloudBigtableSystemSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1DataSource} dataSource
 */
GoogleCloudDatacatalogV1Entry.prototype['dataSource'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1DataSourceConnectionSpec} dataSourceConnectionSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['dataSourceConnectionSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1DatabaseTableSpec} databaseTableSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['databaseTableSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1DatasetSpec} datasetSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['datasetSpec'] = undefined;

/**
 * Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
 * @member {String} description
 */
GoogleCloudDatacatalogV1Entry.prototype['description'] = undefined;

/**
 * Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string.
 * @member {String} displayName
 */
GoogleCloudDatacatalogV1Entry.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1FeatureOnlineStoreSpec} featureOnlineStoreSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['featureOnlineStoreSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1FilesetSpec} filesetSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['filesetSpec'] = undefined;

/**
 * [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation, and read-only later. Can be used for search and lookup of the entries. 
 * @member {String} fullyQualifiedName
 */
GoogleCloudDatacatalogV1Entry.prototype['fullyQualifiedName'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1GcsFilesetSpec} gcsFilesetSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['gcsFilesetSpec'] = undefined;

/**
 * Output only. Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
 * @member {module:model/GoogleCloudDatacatalogV1Entry.IntegratedSystemEnum} integratedSystem
 */
GoogleCloudDatacatalogV1Entry.prototype['integratedSystem'] = undefined;

/**
 * Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
 * @member {Object.<String, String>} labels
 */
GoogleCloudDatacatalogV1Entry.prototype['labels'] = undefined;

/**
 * The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
 * @member {String} linkedResource
 */
GoogleCloudDatacatalogV1Entry.prototype['linkedResource'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1LookerSystemSpec} lookerSystemSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['lookerSystemSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1ModelSpec} modelSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['modelSpec'] = undefined;

/**
 * Output only. The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.
 * @member {String} name
 */
GoogleCloudDatacatalogV1Entry.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1PersonalDetails} personalDetails
 */
GoogleCloudDatacatalogV1Entry.prototype['personalDetails'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1RoutineSpec} routineSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['routineSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1Schema} schema
 */
GoogleCloudDatacatalogV1Entry.prototype['schema'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1ServiceSpec} serviceSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['serviceSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1SystemTimestamps} sourceSystemTimestamps
 */
GoogleCloudDatacatalogV1Entry.prototype['sourceSystemTimestamps'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1SqlDatabaseSystemSpec} sqlDatabaseSystemSpec
 */
GoogleCloudDatacatalogV1Entry.prototype['sqlDatabaseSystemSpec'] = undefined;

/**
 * The type of the entry. For details, see [`EntryType`](#entrytype).
 * @member {module:model/GoogleCloudDatacatalogV1Entry.TypeEnum} type
 */
GoogleCloudDatacatalogV1Entry.prototype['type'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1UsageSignal} usageSignal
 */
GoogleCloudDatacatalogV1Entry.prototype['usageSignal'] = undefined;

/**
 * Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
 * @member {String} userSpecifiedSystem
 */
GoogleCloudDatacatalogV1Entry.prototype['userSpecifiedSystem'] = undefined;

/**
 * Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
 * @member {String} userSpecifiedType
 */
GoogleCloudDatacatalogV1Entry.prototype['userSpecifiedType'] = undefined;





/**
 * Allowed values for the <code>integratedSystem</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1Entry['IntegratedSystemEnum'] = {

    /**
     * value: "INTEGRATED_SYSTEM_UNSPECIFIED"
     * @const
     */
    "INTEGRATED_SYSTEM_UNSPECIFIED": "INTEGRATED_SYSTEM_UNSPECIFIED",

    /**
     * value: "BIGQUERY"
     * @const
     */
    "BIGQUERY": "BIGQUERY",

    /**
     * value: "CLOUD_PUBSUB"
     * @const
     */
    "CLOUD_PUBSUB": "CLOUD_PUBSUB",

    /**
     * value: "DATAPROC_METASTORE"
     * @const
     */
    "DATAPROC_METASTORE": "DATAPROC_METASTORE",

    /**
     * value: "DATAPLEX"
     * @const
     */
    "DATAPLEX": "DATAPLEX",

    /**
     * value: "CLOUD_SPANNER"
     * @const
     */
    "CLOUD_SPANNER": "CLOUD_SPANNER",

    /**
     * value: "CLOUD_BIGTABLE"
     * @const
     */
    "CLOUD_BIGTABLE": "CLOUD_BIGTABLE",

    /**
     * value: "CLOUD_SQL"
     * @const
     */
    "CLOUD_SQL": "CLOUD_SQL",

    /**
     * value: "LOOKER"
     * @const
     */
    "LOOKER": "LOOKER",

    /**
     * value: "VERTEX_AI"
     * @const
     */
    "VERTEX_AI": "VERTEX_AI"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1Entry['TypeEnum'] = {

    /**
     * value: "ENTRY_TYPE_UNSPECIFIED"
     * @const
     */
    "ENTRY_TYPE_UNSPECIFIED": "ENTRY_TYPE_UNSPECIFIED",

    /**
     * value: "TABLE"
     * @const
     */
    "TABLE": "TABLE",

    /**
     * value: "MODEL"
     * @const
     */
    "MODEL": "MODEL",

    /**
     * value: "DATA_STREAM"
     * @const
     */
    "DATA_STREAM": "DATA_STREAM",

    /**
     * value: "FILESET"
     * @const
     */
    "FILESET": "FILESET",

    /**
     * value: "CLUSTER"
     * @const
     */
    "CLUSTER": "CLUSTER",

    /**
     * value: "DATABASE"
     * @const
     */
    "DATABASE": "DATABASE",

    /**
     * value: "DATA_SOURCE_CONNECTION"
     * @const
     */
    "DATA_SOURCE_CONNECTION": "DATA_SOURCE_CONNECTION",

    /**
     * value: "ROUTINE"
     * @const
     */
    "ROUTINE": "ROUTINE",

    /**
     * value: "LAKE"
     * @const
     */
    "LAKE": "LAKE",

    /**
     * value: "ZONE"
     * @const
     */
    "ZONE": "ZONE",

    /**
     * value: "SERVICE"
     * @const
     */
    "SERVICE": "SERVICE",

    /**
     * value: "DATABASE_SCHEMA"
     * @const
     */
    "DATABASE_SCHEMA": "DATABASE_SCHEMA",

    /**
     * value: "DASHBOARD"
     * @const
     */
    "DASHBOARD": "DASHBOARD",

    /**
     * value: "EXPLORE"
     * @const
     */
    "EXPLORE": "EXPLORE",

    /**
     * value: "LOOK"
     * @const
     */
    "LOOK": "LOOK",

    /**
     * value: "FEATURE_ONLINE_STORE"
     * @const
     */
    "FEATURE_ONLINE_STORE": "FEATURE_ONLINE_STORE",

    /**
     * value: "FEATURE_VIEW"
     * @const
     */
    "FEATURE_VIEW": "FEATURE_VIEW",

    /**
     * value: "FEATURE_GROUP"
     * @const
     */
    "FEATURE_GROUP": "FEATURE_GROUP"
};



export default GoogleCloudDatacatalogV1Entry;

