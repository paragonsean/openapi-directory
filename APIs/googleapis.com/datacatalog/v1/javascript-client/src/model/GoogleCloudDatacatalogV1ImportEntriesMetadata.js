/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Status from './Status';

/**
 * The GoogleCloudDatacatalogV1ImportEntriesMetadata model module.
 * @module model/GoogleCloudDatacatalogV1ImportEntriesMetadata
 * @version v1
 */
class GoogleCloudDatacatalogV1ImportEntriesMetadata {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1ImportEntriesMetadata</code>.
     * Metadata message for long-running operation returned by the ImportEntries.
     * @alias module:model/GoogleCloudDatacatalogV1ImportEntriesMetadata
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1ImportEntriesMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1ImportEntriesMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1ImportEntriesMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1ImportEntriesMetadata} The populated <code>GoogleCloudDatacatalogV1ImportEntriesMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1ImportEntriesMetadata();

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [Status]);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1ImportEntriesMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1ImportEntriesMetadata</code>.
     */
    static validateJSON(data) {
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                Status.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * Partial errors that are encountered during the ImportEntries operation. There is no guarantee that all the encountered errors are reported. However, if no errors are reported, it means that no errors were encountered.
 * @member {Array.<module:model/Status>} errors
 */
GoogleCloudDatacatalogV1ImportEntriesMetadata.prototype['errors'] = undefined;

/**
 * State of the import operation.
 * @member {module:model/GoogleCloudDatacatalogV1ImportEntriesMetadata.StateEnum} state
 */
GoogleCloudDatacatalogV1ImportEntriesMetadata.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1ImportEntriesMetadata['StateEnum'] = {

    /**
     * value: "IMPORT_STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "IMPORT_STATE_UNSPECIFIED",

    /**
     * value: "IMPORT_QUEUED"
     * @const
     */
    "QUEUED": "IMPORT_QUEUED",

    /**
     * value: "IMPORT_IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IMPORT_IN_PROGRESS",

    /**
     * value: "IMPORT_DONE"
     * @const
     */
    "DONE": "IMPORT_DONE",

    /**
     * value: "IMPORT_OBSOLETE"
     * @const
     */
    "OBSOLETE": "IMPORT_OBSOLETE"
};



export default GoogleCloudDatacatalogV1ImportEntriesMetadata;

