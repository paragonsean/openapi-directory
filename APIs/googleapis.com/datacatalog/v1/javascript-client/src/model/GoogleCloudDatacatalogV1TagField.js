/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1TagFieldEnumValue from './GoogleCloudDatacatalogV1TagFieldEnumValue';

/**
 * The GoogleCloudDatacatalogV1TagField model module.
 * @module model/GoogleCloudDatacatalogV1TagField
 * @version v1
 */
class GoogleCloudDatacatalogV1TagField {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1TagField</code>.
     * Contains the value and additional information on a field within a Tag.
     * @alias module:model/GoogleCloudDatacatalogV1TagField
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1TagField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1TagField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1TagField} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1TagField} The populated <code>GoogleCloudDatacatalogV1TagField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1TagField();

            if (data.hasOwnProperty('boolValue')) {
                obj['boolValue'] = ApiClient.convertToType(data['boolValue'], 'Boolean');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('doubleValue')) {
                obj['doubleValue'] = ApiClient.convertToType(data['doubleValue'], 'Number');
            }
            if (data.hasOwnProperty('enumValue')) {
                obj['enumValue'] = GoogleCloudDatacatalogV1TagFieldEnumValue.constructFromObject(data['enumValue']);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('richtextValue')) {
                obj['richtextValue'] = ApiClient.convertToType(data['richtextValue'], 'String');
            }
            if (data.hasOwnProperty('stringValue')) {
                obj['stringValue'] = ApiClient.convertToType(data['stringValue'], 'String');
            }
            if (data.hasOwnProperty('timestampValue')) {
                obj['timestampValue'] = ApiClient.convertToType(data['timestampValue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1TagField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1TagField</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `enumValue`
        if (data['enumValue']) { // data not null
          GoogleCloudDatacatalogV1TagFieldEnumValue.validateJSON(data['enumValue']);
        }
        // ensure the json data is a string
        if (data['richtextValue'] && !(typeof data['richtextValue'] === 'string' || data['richtextValue'] instanceof String)) {
            throw new Error("Expected the field `richtextValue` to be a primitive type in the JSON string but got " + data['richtextValue']);
        }
        // ensure the json data is a string
        if (data['stringValue'] && !(typeof data['stringValue'] === 'string' || data['stringValue'] instanceof String)) {
            throw new Error("Expected the field `stringValue` to be a primitive type in the JSON string but got " + data['stringValue']);
        }
        // ensure the json data is a string
        if (data['timestampValue'] && !(typeof data['timestampValue'] === 'string' || data['timestampValue'] instanceof String)) {
            throw new Error("Expected the field `timestampValue` to be a primitive type in the JSON string but got " + data['timestampValue']);
        }

        return true;
    }


}



/**
 * The value of a tag field with a boolean type.
 * @member {Boolean} boolValue
 */
GoogleCloudDatacatalogV1TagField.prototype['boolValue'] = undefined;

/**
 * Output only. The display name of this field.
 * @member {String} displayName
 */
GoogleCloudDatacatalogV1TagField.prototype['displayName'] = undefined;

/**
 * The value of a tag field with a double type.
 * @member {Number} doubleValue
 */
GoogleCloudDatacatalogV1TagField.prototype['doubleValue'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1TagFieldEnumValue} enumValue
 */
GoogleCloudDatacatalogV1TagField.prototype['enumValue'] = undefined;

/**
 * Output only. The order of this field with respect to other fields in this tag. Can be set by Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag don't have to be sequential.
 * @member {Number} order
 */
GoogleCloudDatacatalogV1TagField.prototype['order'] = undefined;

/**
 * The value of a tag field with a rich text type. The maximum length is 10 MiB as this value holds HTML descriptions including encoded images. The maximum length of the text without images is 100 KiB.
 * @member {String} richtextValue
 */
GoogleCloudDatacatalogV1TagField.prototype['richtextValue'] = undefined;

/**
 * The value of a tag field with a string type. The maximum length is 2000 UTF-8 characters.
 * @member {String} stringValue
 */
GoogleCloudDatacatalogV1TagField.prototype['stringValue'] = undefined;

/**
 * The value of a tag field with a timestamp type.
 * @member {String} timestampValue
 */
GoogleCloudDatacatalogV1TagField.prototype['timestampValue'] = undefined;






export default GoogleCloudDatacatalogV1TagField;

