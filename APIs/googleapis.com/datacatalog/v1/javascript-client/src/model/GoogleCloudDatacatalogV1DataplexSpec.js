/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1PhysicalSchema from './GoogleCloudDatacatalogV1PhysicalSchema';

/**
 * The GoogleCloudDatacatalogV1DataplexSpec model module.
 * @module model/GoogleCloudDatacatalogV1DataplexSpec
 * @version v1
 */
class GoogleCloudDatacatalogV1DataplexSpec {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1DataplexSpec</code>.
     * Common Dataplex fields.
     * @alias module:model/GoogleCloudDatacatalogV1DataplexSpec
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1DataplexSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1DataplexSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1DataplexSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1DataplexSpec} The populated <code>GoogleCloudDatacatalogV1DataplexSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1DataplexSpec();

            if (data.hasOwnProperty('asset')) {
                obj['asset'] = ApiClient.convertToType(data['asset'], 'String');
            }
            if (data.hasOwnProperty('compressionFormat')) {
                obj['compressionFormat'] = ApiClient.convertToType(data['compressionFormat'], 'String');
            }
            if (data.hasOwnProperty('dataFormat')) {
                obj['dataFormat'] = GoogleCloudDatacatalogV1PhysicalSchema.constructFromObject(data['dataFormat']);
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1DataplexSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1DataplexSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['asset'] && !(typeof data['asset'] === 'string' || data['asset'] instanceof String)) {
            throw new Error("Expected the field `asset` to be a primitive type in the JSON string but got " + data['asset']);
        }
        // ensure the json data is a string
        if (data['compressionFormat'] && !(typeof data['compressionFormat'] === 'string' || data['compressionFormat'] instanceof String)) {
            throw new Error("Expected the field `compressionFormat` to be a primitive type in the JSON string but got " + data['compressionFormat']);
        }
        // validate the optional field `dataFormat`
        if (data['dataFormat']) { // data not null
          GoogleCloudDatacatalogV1PhysicalSchema.validateJSON(data['dataFormat']);
        }
        // ensure the json data is a string
        if (data['projectId'] && !(typeof data['projectId'] === 'string' || data['projectId'] instanceof String)) {
            throw new Error("Expected the field `projectId` to be a primitive type in the JSON string but got " + data['projectId']);
        }

        return true;
    }


}



/**
 * Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.
 * @member {String} asset
 */
GoogleCloudDatacatalogV1DataplexSpec.prototype['asset'] = undefined;

/**
 * Compression format of the data, e.g., zip, gzip etc.
 * @member {String} compressionFormat
 */
GoogleCloudDatacatalogV1DataplexSpec.prototype['compressionFormat'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1PhysicalSchema} dataFormat
 */
GoogleCloudDatacatalogV1DataplexSpec.prototype['dataFormat'] = undefined;

/**
 * Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.
 * @member {String} projectId
 */
GoogleCloudDatacatalogV1DataplexSpec.prototype['projectId'] = undefined;






export default GoogleCloudDatacatalogV1DataplexSpec;

