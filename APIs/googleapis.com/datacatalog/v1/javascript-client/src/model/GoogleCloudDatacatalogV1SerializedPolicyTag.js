/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatacatalogV1SerializedPolicyTag model module.
 * @module model/GoogleCloudDatacatalogV1SerializedPolicyTag
 * @version v1
 */
class GoogleCloudDatacatalogV1SerializedPolicyTag {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1SerializedPolicyTag</code>.
     * A nested protocol buffer that represents a policy tag and all its descendants.
     * @alias module:model/GoogleCloudDatacatalogV1SerializedPolicyTag
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1SerializedPolicyTag.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1SerializedPolicyTag</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1SerializedPolicyTag} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1SerializedPolicyTag} The populated <code>GoogleCloudDatacatalogV1SerializedPolicyTag</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1SerializedPolicyTag();

            if (data.hasOwnProperty('childPolicyTags')) {
                obj['childPolicyTags'] = ApiClient.convertToType(data['childPolicyTags'], [GoogleCloudDatacatalogV1SerializedPolicyTag]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('policyTag')) {
                obj['policyTag'] = ApiClient.convertToType(data['policyTag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1SerializedPolicyTag</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1SerializedPolicyTag</code>.
     */
    static validateJSON(data) {
        if (data['childPolicyTags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['childPolicyTags'])) {
                throw new Error("Expected the field `childPolicyTags` to be an array in the JSON data but got " + data['childPolicyTags']);
            }
            // validate the optional field `childPolicyTags` (array)
            for (const item of data['childPolicyTags']) {
                GoogleCloudDatacatalogV1SerializedPolicyTag.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['policyTag'] && !(typeof data['policyTag'] === 'string' || data['policyTag'] instanceof String)) {
            throw new Error("Expected the field `policyTag` to be a primitive type in the JSON string but got " + data['policyTag']);
        }

        return true;
    }


}



/**
 * Children of the policy tag, if any.
 * @member {Array.<module:model/GoogleCloudDatacatalogV1SerializedPolicyTag>} childPolicyTags
 */
GoogleCloudDatacatalogV1SerializedPolicyTag.prototype['childPolicyTags'] = undefined;

/**
 * Description of the serialized policy tag. At most 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.
 * @member {String} description
 */
GoogleCloudDatacatalogV1SerializedPolicyTag.prototype['description'] = undefined;

/**
 * Required. Display name of the policy tag. At most 200 bytes when encoded in UTF-8.
 * @member {String} displayName
 */
GoogleCloudDatacatalogV1SerializedPolicyTag.prototype['displayName'] = undefined;

/**
 * Resource name of the policy tag. This field is ignored when calling `ImportTaxonomies`.
 * @member {String} policyTag
 */
GoogleCloudDatacatalogV1SerializedPolicyTag.prototype['policyTag'] = undefined;






export default GoogleCloudDatacatalogV1SerializedPolicyTag;

