/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec model module.
 * @module model/GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec
 * @version v1
 */
class GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec</code>.
     * Column info specific to Looker System.
     * @alias module:model/GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec} The populated <code>GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Looker specific column type of this column.
 * @member {module:model/GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec.TypeEnum} type
 */
GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec['TypeEnum'] = {

    /**
     * value: "LOOKER_COLUMN_TYPE_UNSPECIFIED"
     * @const
     */
    "LOOKER_COLUMN_TYPE_UNSPECIFIED": "LOOKER_COLUMN_TYPE_UNSPECIFIED",

    /**
     * value: "DIMENSION"
     * @const
     */
    "DIMENSION": "DIMENSION",

    /**
     * value: "DIMENSION_GROUP"
     * @const
     */
    "DIMENSION_GROUP": "DIMENSION_GROUP",

    /**
     * value: "FILTER"
     * @const
     */
    "FILTER": "FILTER",

    /**
     * value: "MEASURE"
     * @const
     */
    "MEASURE": "MEASURE",

    /**
     * value: "PARAMETER"
     * @const
     */
    "PARAMETER": "PARAMETER"
};



export default GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec;

