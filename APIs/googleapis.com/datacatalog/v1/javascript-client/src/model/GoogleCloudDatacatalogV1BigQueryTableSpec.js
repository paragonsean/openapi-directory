/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1TableSpec from './GoogleCloudDatacatalogV1TableSpec';
import GoogleCloudDatacatalogV1ViewSpec from './GoogleCloudDatacatalogV1ViewSpec';

/**
 * The GoogleCloudDatacatalogV1BigQueryTableSpec model module.
 * @module model/GoogleCloudDatacatalogV1BigQueryTableSpec
 * @version v1
 */
class GoogleCloudDatacatalogV1BigQueryTableSpec {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1BigQueryTableSpec</code>.
     * Describes a BigQuery table.
     * @alias module:model/GoogleCloudDatacatalogV1BigQueryTableSpec
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1BigQueryTableSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1BigQueryTableSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1BigQueryTableSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1BigQueryTableSpec} The populated <code>GoogleCloudDatacatalogV1BigQueryTableSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1BigQueryTableSpec();

            if (data.hasOwnProperty('tableSourceType')) {
                obj['tableSourceType'] = ApiClient.convertToType(data['tableSourceType'], 'String');
            }
            if (data.hasOwnProperty('tableSpec')) {
                obj['tableSpec'] = GoogleCloudDatacatalogV1TableSpec.constructFromObject(data['tableSpec']);
            }
            if (data.hasOwnProperty('viewSpec')) {
                obj['viewSpec'] = GoogleCloudDatacatalogV1ViewSpec.constructFromObject(data['viewSpec']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1BigQueryTableSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1BigQueryTableSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tableSourceType'] && !(typeof data['tableSourceType'] === 'string' || data['tableSourceType'] instanceof String)) {
            throw new Error("Expected the field `tableSourceType` to be a primitive type in the JSON string but got " + data['tableSourceType']);
        }
        // validate the optional field `tableSpec`
        if (data['tableSpec']) { // data not null
          GoogleCloudDatacatalogV1TableSpec.validateJSON(data['tableSpec']);
        }
        // validate the optional field `viewSpec`
        if (data['viewSpec']) { // data not null
          GoogleCloudDatacatalogV1ViewSpec.validateJSON(data['viewSpec']);
        }

        return true;
    }


}



/**
 * Output only. The table source type.
 * @member {module:model/GoogleCloudDatacatalogV1BigQueryTableSpec.TableSourceTypeEnum} tableSourceType
 */
GoogleCloudDatacatalogV1BigQueryTableSpec.prototype['tableSourceType'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1TableSpec} tableSpec
 */
GoogleCloudDatacatalogV1BigQueryTableSpec.prototype['tableSpec'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1ViewSpec} viewSpec
 */
GoogleCloudDatacatalogV1BigQueryTableSpec.prototype['viewSpec'] = undefined;





/**
 * Allowed values for the <code>tableSourceType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1BigQueryTableSpec['TableSourceTypeEnum'] = {

    /**
     * value: "TABLE_SOURCE_TYPE_UNSPECIFIED"
     * @const
     */
    "TABLE_SOURCE_TYPE_UNSPECIFIED": "TABLE_SOURCE_TYPE_UNSPECIFIED",

    /**
     * value: "BIGQUERY_VIEW"
     * @const
     */
    "BIGQUERY_VIEW": "BIGQUERY_VIEW",

    /**
     * value: "BIGQUERY_TABLE"
     * @const
     */
    "BIGQUERY_TABLE": "BIGQUERY_TABLE",

    /**
     * value: "BIGQUERY_MATERIALIZED_VIEW"
     * @const
     */
    "BIGQUERY_MATERIALIZED_VIEW": "BIGQUERY_MATERIALIZED_VIEW"
};



export default GoogleCloudDatacatalogV1BigQueryTableSpec;

