/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDatacatalogV1StorageProperties from './GoogleCloudDatacatalogV1StorageProperties';

/**
 * The GoogleCloudDatacatalogV1DataSource model module.
 * @module model/GoogleCloudDatacatalogV1DataSource
 * @version v1
 */
class GoogleCloudDatacatalogV1DataSource {
    /**
     * Constructs a new <code>GoogleCloudDatacatalogV1DataSource</code>.
     * Physical location of an entry.
     * @alias module:model/GoogleCloudDatacatalogV1DataSource
     */
    constructor() { 
        
        GoogleCloudDatacatalogV1DataSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudDatacatalogV1DataSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudDatacatalogV1DataSource} obj Optional instance to populate.
     * @return {module:model/GoogleCloudDatacatalogV1DataSource} The populated <code>GoogleCloudDatacatalogV1DataSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudDatacatalogV1DataSource();

            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = ApiClient.convertToType(data['service'], 'String');
            }
            if (data.hasOwnProperty('sourceEntry')) {
                obj['sourceEntry'] = ApiClient.convertToType(data['sourceEntry'], 'String');
            }
            if (data.hasOwnProperty('storageProperties')) {
                obj['storageProperties'] = GoogleCloudDatacatalogV1StorageProperties.constructFromObject(data['storageProperties']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudDatacatalogV1DataSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudDatacatalogV1DataSource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['resource'] && !(typeof data['resource'] === 'string' || data['resource'] instanceof String)) {
            throw new Error("Expected the field `resource` to be a primitive type in the JSON string but got " + data['resource']);
        }
        // ensure the json data is a string
        if (data['service'] && !(typeof data['service'] === 'string' || data['service'] instanceof String)) {
            throw new Error("Expected the field `service` to be a primitive type in the JSON string but got " + data['service']);
        }
        // ensure the json data is a string
        if (data['sourceEntry'] && !(typeof data['sourceEntry'] === 'string' || data['sourceEntry'] instanceof String)) {
            throw new Error("Expected the field `sourceEntry` to be a primitive type in the JSON string but got " + data['sourceEntry']);
        }
        // validate the optional field `storageProperties`
        if (data['storageProperties']) { // data not null
          GoogleCloudDatacatalogV1StorageProperties.validateJSON(data['storageProperties']);
        }

        return true;
    }


}



/**
 * Full name of a resource as defined by the service. For example: `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`
 * @member {String} resource
 */
GoogleCloudDatacatalogV1DataSource.prototype['resource'] = undefined;

/**
 * Service that physically stores the data.
 * @member {module:model/GoogleCloudDatacatalogV1DataSource.ServiceEnum} service
 */
GoogleCloudDatacatalogV1DataSource.prototype['service'] = undefined;

/**
 * Output only. Data Catalog entry name, if applicable.
 * @member {String} sourceEntry
 */
GoogleCloudDatacatalogV1DataSource.prototype['sourceEntry'] = undefined;

/**
 * @member {module:model/GoogleCloudDatacatalogV1StorageProperties} storageProperties
 */
GoogleCloudDatacatalogV1DataSource.prototype['storageProperties'] = undefined;





/**
 * Allowed values for the <code>service</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudDatacatalogV1DataSource['ServiceEnum'] = {

    /**
     * value: "SERVICE_UNSPECIFIED"
     * @const
     */
    "SERVICE_UNSPECIFIED": "SERVICE_UNSPECIFIED",

    /**
     * value: "CLOUD_STORAGE"
     * @const
     */
    "CLOUD_STORAGE": "CLOUD_STORAGE",

    /**
     * value: "BIGQUERY"
     * @const
     */
    "BIGQUERY": "BIGQUERY"
};



export default GoogleCloudDatacatalogV1DataSource;

