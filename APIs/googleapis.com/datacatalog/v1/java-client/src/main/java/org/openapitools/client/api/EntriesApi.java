/*
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GoogleCloudDatacatalogV1Entry;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EntriesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public EntriesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public EntriesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for datacatalogEntriesLookup
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fullyQualifiedName [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. FQNs take two forms: * For non-regionalized resources: &#x60;{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}&#x60; * For regionalized resources: &#x60;{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}&#x60; Example for a DPMS table: &#x60;dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}&#x60; (optional)
     * @param linkedResource The full name of the Google Cloud Platform resource the Data Catalog entry represents. For more information, see [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). Full names are case-sensitive. For example: * &#x60;//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}&#x60; * &#x60;//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}&#x60; (optional)
     * @param location Location where the lookup should be performed. Required to lookup entry that is not a part of &#x60;DPMS&#x60; or &#x60;DATAPLEX&#x60; &#x60;integrated_system&#x60; using its &#x60;fully_qualified_name&#x60;. Ignored in other cases. (optional)
     * @param project Project where the lookup should be performed. Required to lookup entry that is not a part of &#x60;DPMS&#x60; or &#x60;DATAPLEX&#x60; &#x60;integrated_system&#x60; using its &#x60;fully_qualified_name&#x60;. Ignored in other cases. (optional)
     * @param sqlResource The SQL name of the entry. SQL names are case-sensitive. Examples: * &#x60;pubsub.topic.{PROJECT_ID}.{TOPIC_ID}&#x60; * &#x60;pubsub.topic.{PROJECT_ID}.&#x60;\\&#x60;&#x60;{TOPIC.ID.SEPARATED.WITH.DOTS}&#x60;\\&#x60; * &#x60;bigquery.table.{PROJECT_ID}.{DATASET_ID}.{TABLE_ID}&#x60; * &#x60;bigquery.dataset.{PROJECT_ID}.{DATASET_ID}&#x60; * &#x60;datacatalog.entry.{PROJECT_ID}.{LOCATION_ID}.{ENTRY_GROUP_ID}.{ENTRY_ID}&#x60; Identifiers (&#x60;*_ID&#x60;) should comply with the [Lexical structure in Standard SQL] (https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call datacatalogEntriesLookupCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String fullyQualifiedName, String linkedResource, String location, String project, String sqlResource, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/entries:lookup";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fullyQualifiedName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fullyQualifiedName", fullyQualifiedName));
        }

        if (linkedResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("linkedResource", linkedResource));
        }

        if (location != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("location", location));
        }

        if (project != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("project", project));
        }

        if (sqlResource != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sqlResource", sqlResource));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call datacatalogEntriesLookupValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String fullyQualifiedName, String linkedResource, String location, String project, String sqlResource, final ApiCallback _callback) throws ApiException {
        return datacatalogEntriesLookupCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fullyQualifiedName, linkedResource, location, project, sqlResource, _callback);

    }

    /**
     * 
     * Gets an entry by its target resource name. The resource name comes from the source Google Cloud Platform service.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fullyQualifiedName [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. FQNs take two forms: * For non-regionalized resources: &#x60;{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}&#x60; * For regionalized resources: &#x60;{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}&#x60; Example for a DPMS table: &#x60;dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}&#x60; (optional)
     * @param linkedResource The full name of the Google Cloud Platform resource the Data Catalog entry represents. For more information, see [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). Full names are case-sensitive. For example: * &#x60;//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}&#x60; * &#x60;//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}&#x60; (optional)
     * @param location Location where the lookup should be performed. Required to lookup entry that is not a part of &#x60;DPMS&#x60; or &#x60;DATAPLEX&#x60; &#x60;integrated_system&#x60; using its &#x60;fully_qualified_name&#x60;. Ignored in other cases. (optional)
     * @param project Project where the lookup should be performed. Required to lookup entry that is not a part of &#x60;DPMS&#x60; or &#x60;DATAPLEX&#x60; &#x60;integrated_system&#x60; using its &#x60;fully_qualified_name&#x60;. Ignored in other cases. (optional)
     * @param sqlResource The SQL name of the entry. SQL names are case-sensitive. Examples: * &#x60;pubsub.topic.{PROJECT_ID}.{TOPIC_ID}&#x60; * &#x60;pubsub.topic.{PROJECT_ID}.&#x60;\\&#x60;&#x60;{TOPIC.ID.SEPARATED.WITH.DOTS}&#x60;\\&#x60; * &#x60;bigquery.table.{PROJECT_ID}.{DATASET_ID}.{TABLE_ID}&#x60; * &#x60;bigquery.dataset.{PROJECT_ID}.{DATASET_ID}&#x60; * &#x60;datacatalog.entry.{PROJECT_ID}.{LOCATION_ID}.{ENTRY_GROUP_ID}.{ENTRY_ID}&#x60; Identifiers (&#x60;*_ID&#x60;) should comply with the [Lexical structure in Standard SQL] (https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical). (optional)
     * @return GoogleCloudDatacatalogV1Entry
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudDatacatalogV1Entry datacatalogEntriesLookup(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String fullyQualifiedName, String linkedResource, String location, String project, String sqlResource) throws ApiException {
        ApiResponse<GoogleCloudDatacatalogV1Entry> localVarResp = datacatalogEntriesLookupWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fullyQualifiedName, linkedResource, location, project, sqlResource);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets an entry by its target resource name. The resource name comes from the source Google Cloud Platform service.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fullyQualifiedName [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. FQNs take two forms: * For non-regionalized resources: &#x60;{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}&#x60; * For regionalized resources: &#x60;{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}&#x60; Example for a DPMS table: &#x60;dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}&#x60; (optional)
     * @param linkedResource The full name of the Google Cloud Platform resource the Data Catalog entry represents. For more information, see [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). Full names are case-sensitive. For example: * &#x60;//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}&#x60; * &#x60;//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}&#x60; (optional)
     * @param location Location where the lookup should be performed. Required to lookup entry that is not a part of &#x60;DPMS&#x60; or &#x60;DATAPLEX&#x60; &#x60;integrated_system&#x60; using its &#x60;fully_qualified_name&#x60;. Ignored in other cases. (optional)
     * @param project Project where the lookup should be performed. Required to lookup entry that is not a part of &#x60;DPMS&#x60; or &#x60;DATAPLEX&#x60; &#x60;integrated_system&#x60; using its &#x60;fully_qualified_name&#x60;. Ignored in other cases. (optional)
     * @param sqlResource The SQL name of the entry. SQL names are case-sensitive. Examples: * &#x60;pubsub.topic.{PROJECT_ID}.{TOPIC_ID}&#x60; * &#x60;pubsub.topic.{PROJECT_ID}.&#x60;\\&#x60;&#x60;{TOPIC.ID.SEPARATED.WITH.DOTS}&#x60;\\&#x60; * &#x60;bigquery.table.{PROJECT_ID}.{DATASET_ID}.{TABLE_ID}&#x60; * &#x60;bigquery.dataset.{PROJECT_ID}.{DATASET_ID}&#x60; * &#x60;datacatalog.entry.{PROJECT_ID}.{LOCATION_ID}.{ENTRY_GROUP_ID}.{ENTRY_ID}&#x60; Identifiers (&#x60;*_ID&#x60;) should comply with the [Lexical structure in Standard SQL] (https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical). (optional)
     * @return ApiResponse&lt;GoogleCloudDatacatalogV1Entry&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudDatacatalogV1Entry> datacatalogEntriesLookupWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String fullyQualifiedName, String linkedResource, String location, String project, String sqlResource) throws ApiException {
        okhttp3.Call localVarCall = datacatalogEntriesLookupValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fullyQualifiedName, linkedResource, location, project, sqlResource, null);
        Type localVarReturnType = new TypeToken<GoogleCloudDatacatalogV1Entry>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets an entry by its target resource name. The resource name comes from the source Google Cloud Platform service.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fullyQualifiedName [Fully Qualified Name (FQN)](https://cloud.google.com//data-catalog/docs/fully-qualified-names) of the resource. FQNs take two forms: * For non-regionalized resources: &#x60;{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}&#x60; * For regionalized resources: &#x60;{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}&#x60; Example for a DPMS table: &#x60;dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}&#x60; (optional)
     * @param linkedResource The full name of the Google Cloud Platform resource the Data Catalog entry represents. For more information, see [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). Full names are case-sensitive. For example: * &#x60;//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}&#x60; * &#x60;//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}&#x60; (optional)
     * @param location Location where the lookup should be performed. Required to lookup entry that is not a part of &#x60;DPMS&#x60; or &#x60;DATAPLEX&#x60; &#x60;integrated_system&#x60; using its &#x60;fully_qualified_name&#x60;. Ignored in other cases. (optional)
     * @param project Project where the lookup should be performed. Required to lookup entry that is not a part of &#x60;DPMS&#x60; or &#x60;DATAPLEX&#x60; &#x60;integrated_system&#x60; using its &#x60;fully_qualified_name&#x60;. Ignored in other cases. (optional)
     * @param sqlResource The SQL name of the entry. SQL names are case-sensitive. Examples: * &#x60;pubsub.topic.{PROJECT_ID}.{TOPIC_ID}&#x60; * &#x60;pubsub.topic.{PROJECT_ID}.&#x60;\\&#x60;&#x60;{TOPIC.ID.SEPARATED.WITH.DOTS}&#x60;\\&#x60; * &#x60;bigquery.table.{PROJECT_ID}.{DATASET_ID}.{TABLE_ID}&#x60; * &#x60;bigquery.dataset.{PROJECT_ID}.{DATASET_ID}&#x60; * &#x60;datacatalog.entry.{PROJECT_ID}.{LOCATION_ID}.{ENTRY_GROUP_ID}.{ENTRY_ID}&#x60; Identifiers (&#x60;*_ID&#x60;) should comply with the [Lexical structure in Standard SQL] (https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call datacatalogEntriesLookupAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String fullyQualifiedName, String linkedResource, String location, String project, String sqlResource, final ApiCallback<GoogleCloudDatacatalogV1Entry> _callback) throws ApiException {

        okhttp3.Call localVarCall = datacatalogEntriesLookupValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, fullyQualifiedName, linkedResource, location, project, sqlResource, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudDatacatalogV1Entry>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
