/*
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The criteria that select the subspace used for query matching.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:16.144565-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatacatalogV1SearchCatalogRequestScope {
  public static final String SERIALIZED_NAME_INCLUDE_GCP_PUBLIC_DATASETS = "includeGcpPublicDatasets";
  @SerializedName(SERIALIZED_NAME_INCLUDE_GCP_PUBLIC_DATASETS)
  private Boolean includeGcpPublicDatasets;

  public static final String SERIALIZED_NAME_INCLUDE_ORG_IDS = "includeOrgIds";
  @SerializedName(SERIALIZED_NAME_INCLUDE_ORG_IDS)
  private List<String> includeOrgIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_INCLUDE_PROJECT_IDS = "includeProjectIds";
  @SerializedName(SERIALIZED_NAME_INCLUDE_PROJECT_IDS)
  private List<String> includeProjectIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_INCLUDE_PUBLIC_TAG_TEMPLATES = "includePublicTagTemplates";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_INCLUDE_PUBLIC_TAG_TEMPLATES)
  private Boolean includePublicTagTemplates;

  public static final String SERIALIZED_NAME_RESTRICTED_LOCATIONS = "restrictedLocations";
  @SerializedName(SERIALIZED_NAME_RESTRICTED_LOCATIONS)
  private List<String> restrictedLocations = new ArrayList<>();

  public static final String SERIALIZED_NAME_STARRED_ONLY = "starredOnly";
  @SerializedName(SERIALIZED_NAME_STARRED_ONLY)
  private Boolean starredOnly;

  public GoogleCloudDatacatalogV1SearchCatalogRequestScope() {
  }

  public GoogleCloudDatacatalogV1SearchCatalogRequestScope includeGcpPublicDatasets(Boolean includeGcpPublicDatasets) {
    this.includeGcpPublicDatasets = includeGcpPublicDatasets;
    return this;
  }

  /**
   * If &#x60;true&#x60;, include Google Cloud public datasets in search results. By default, they are excluded. See [Google Cloud Public Datasets](/public-datasets) for more information.
   * @return includeGcpPublicDatasets
   */
  @javax.annotation.Nullable
  public Boolean getIncludeGcpPublicDatasets() {
    return includeGcpPublicDatasets;
  }

  public void setIncludeGcpPublicDatasets(Boolean includeGcpPublicDatasets) {
    this.includeGcpPublicDatasets = includeGcpPublicDatasets;
  }


  public GoogleCloudDatacatalogV1SearchCatalogRequestScope includeOrgIds(List<String> includeOrgIds) {
    this.includeOrgIds = includeOrgIds;
    return this;
  }

  public GoogleCloudDatacatalogV1SearchCatalogRequestScope addIncludeOrgIdsItem(String includeOrgIdsItem) {
    if (this.includeOrgIds == null) {
      this.includeOrgIds = new ArrayList<>();
    }
    this.includeOrgIds.add(includeOrgIdsItem);
    return this;
  }

  /**
   * The list of organization IDs to search within. To find your organization ID, follow the steps from [Creating and managing organizations] (/resource-manager/docs/creating-managing-organization).
   * @return includeOrgIds
   */
  @javax.annotation.Nullable
  public List<String> getIncludeOrgIds() {
    return includeOrgIds;
  }

  public void setIncludeOrgIds(List<String> includeOrgIds) {
    this.includeOrgIds = includeOrgIds;
  }


  public GoogleCloudDatacatalogV1SearchCatalogRequestScope includeProjectIds(List<String> includeProjectIds) {
    this.includeProjectIds = includeProjectIds;
    return this;
  }

  public GoogleCloudDatacatalogV1SearchCatalogRequestScope addIncludeProjectIdsItem(String includeProjectIdsItem) {
    if (this.includeProjectIds == null) {
      this.includeProjectIds = new ArrayList<>();
    }
    this.includeProjectIds.add(includeProjectIdsItem);
    return this;
  }

  /**
   * The list of project IDs to search within. For more information on the distinction between project names, IDs, and numbers, see [Projects](/docs/overview/#projects).
   * @return includeProjectIds
   */
  @javax.annotation.Nullable
  public List<String> getIncludeProjectIds() {
    return includeProjectIds;
  }

  public void setIncludeProjectIds(List<String> includeProjectIds) {
    this.includeProjectIds = includeProjectIds;
  }


  @Deprecated
  public GoogleCloudDatacatalogV1SearchCatalogRequestScope includePublicTagTemplates(Boolean includePublicTagTemplates) {
    this.includePublicTagTemplates = includePublicTagTemplates;
    return this;
  }

  /**
   * Optional. This field is deprecated. The search mechanism for public and private tag templates is the same.
   * @return includePublicTagTemplates
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getIncludePublicTagTemplates() {
    return includePublicTagTemplates;
  }

  @Deprecated
  public void setIncludePublicTagTemplates(Boolean includePublicTagTemplates) {
    this.includePublicTagTemplates = includePublicTagTemplates;
  }


  public GoogleCloudDatacatalogV1SearchCatalogRequestScope restrictedLocations(List<String> restrictedLocations) {
    this.restrictedLocations = restrictedLocations;
    return this;
  }

  public GoogleCloudDatacatalogV1SearchCatalogRequestScope addRestrictedLocationsItem(String restrictedLocationsItem) {
    if (this.restrictedLocations == null) {
      this.restrictedLocations = new ArrayList<>();
    }
    this.restrictedLocations.add(restrictedLocationsItem);
    return this;
  }

  /**
   * Optional. The list of locations to search within. If empty, all locations are searched. Returns an error if any location in the list isn&#39;t one of the [Supported regions](https://cloud.google.com/data-catalog/docs/concepts/regions#supported_regions). If a location is unreachable, its name is returned in the &#x60;SearchCatalogResponse.unreachable&#x60; field. To get additional information on the error, repeat the search request and set the location name as the value of this parameter.
   * @return restrictedLocations
   */
  @javax.annotation.Nullable
  public List<String> getRestrictedLocations() {
    return restrictedLocations;
  }

  public void setRestrictedLocations(List<String> restrictedLocations) {
    this.restrictedLocations = restrictedLocations;
  }


  public GoogleCloudDatacatalogV1SearchCatalogRequestScope starredOnly(Boolean starredOnly) {
    this.starredOnly = starredOnly;
    return this;
  }

  /**
   * Optional. If &#x60;true&#x60;, search only among starred entries. By default, all results are returned, starred or not.
   * @return starredOnly
   */
  @javax.annotation.Nullable
  public Boolean getStarredOnly() {
    return starredOnly;
  }

  public void setStarredOnly(Boolean starredOnly) {
    this.starredOnly = starredOnly;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatacatalogV1SearchCatalogRequestScope googleCloudDatacatalogV1SearchCatalogRequestScope = (GoogleCloudDatacatalogV1SearchCatalogRequestScope) o;
    return Objects.equals(this.includeGcpPublicDatasets, googleCloudDatacatalogV1SearchCatalogRequestScope.includeGcpPublicDatasets) &&
        Objects.equals(this.includeOrgIds, googleCloudDatacatalogV1SearchCatalogRequestScope.includeOrgIds) &&
        Objects.equals(this.includeProjectIds, googleCloudDatacatalogV1SearchCatalogRequestScope.includeProjectIds) &&
        Objects.equals(this.includePublicTagTemplates, googleCloudDatacatalogV1SearchCatalogRequestScope.includePublicTagTemplates) &&
        Objects.equals(this.restrictedLocations, googleCloudDatacatalogV1SearchCatalogRequestScope.restrictedLocations) &&
        Objects.equals(this.starredOnly, googleCloudDatacatalogV1SearchCatalogRequestScope.starredOnly);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeGcpPublicDatasets, includeOrgIds, includeProjectIds, includePublicTagTemplates, restrictedLocations, starredOnly);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatacatalogV1SearchCatalogRequestScope {\n");
    sb.append("    includeGcpPublicDatasets: ").append(toIndentedString(includeGcpPublicDatasets)).append("\n");
    sb.append("    includeOrgIds: ").append(toIndentedString(includeOrgIds)).append("\n");
    sb.append("    includeProjectIds: ").append(toIndentedString(includeProjectIds)).append("\n");
    sb.append("    includePublicTagTemplates: ").append(toIndentedString(includePublicTagTemplates)).append("\n");
    sb.append("    restrictedLocations: ").append(toIndentedString(restrictedLocations)).append("\n");
    sb.append("    starredOnly: ").append(toIndentedString(starredOnly)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("includeGcpPublicDatasets");
    openapiFields.add("includeOrgIds");
    openapiFields.add("includeProjectIds");
    openapiFields.add("includePublicTagTemplates");
    openapiFields.add("restrictedLocations");
    openapiFields.add("starredOnly");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatacatalogV1SearchCatalogRequestScope
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatacatalogV1SearchCatalogRequestScope.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatacatalogV1SearchCatalogRequestScope is not found in the empty JSON string", GoogleCloudDatacatalogV1SearchCatalogRequestScope.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatacatalogV1SearchCatalogRequestScope.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatacatalogV1SearchCatalogRequestScope` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("includeOrgIds") != null && !jsonObj.get("includeOrgIds").isJsonNull() && !jsonObj.get("includeOrgIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includeOrgIds` to be an array in the JSON string but got `%s`", jsonObj.get("includeOrgIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("includeProjectIds") != null && !jsonObj.get("includeProjectIds").isJsonNull() && !jsonObj.get("includeProjectIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `includeProjectIds` to be an array in the JSON string but got `%s`", jsonObj.get("includeProjectIds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("restrictedLocations") != null && !jsonObj.get("restrictedLocations").isJsonNull() && !jsonObj.get("restrictedLocations").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `restrictedLocations` to be an array in the JSON string but got `%s`", jsonObj.get("restrictedLocations").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatacatalogV1SearchCatalogRequestScope.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatacatalogV1SearchCatalogRequestScope' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatacatalogV1SearchCatalogRequestScope> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatacatalogV1SearchCatalogRequestScope.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatacatalogV1SearchCatalogRequestScope>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatacatalogV1SearchCatalogRequestScope value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatacatalogV1SearchCatalogRequestScope read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatacatalogV1SearchCatalogRequestScope given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatacatalogV1SearchCatalogRequestScope
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatacatalogV1SearchCatalogRequestScope
   */
  public static GoogleCloudDatacatalogV1SearchCatalogRequestScope fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatacatalogV1SearchCatalogRequestScope.class);
  }

  /**
   * Convert an instance of GoogleCloudDatacatalogV1SearchCatalogRequestScope to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

