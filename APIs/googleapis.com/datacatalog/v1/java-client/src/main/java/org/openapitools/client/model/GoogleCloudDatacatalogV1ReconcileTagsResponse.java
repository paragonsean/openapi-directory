/*
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Long-running operation response message returned by ReconcileTags.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:16.144565-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatacatalogV1ReconcileTagsResponse {
  public static final String SERIALIZED_NAME_CREATED_TAGS_COUNT = "createdTagsCount";
  @SerializedName(SERIALIZED_NAME_CREATED_TAGS_COUNT)
  private String createdTagsCount;

  public static final String SERIALIZED_NAME_DELETED_TAGS_COUNT = "deletedTagsCount";
  @SerializedName(SERIALIZED_NAME_DELETED_TAGS_COUNT)
  private String deletedTagsCount;

  public static final String SERIALIZED_NAME_UPDATED_TAGS_COUNT = "updatedTagsCount";
  @SerializedName(SERIALIZED_NAME_UPDATED_TAGS_COUNT)
  private String updatedTagsCount;

  public GoogleCloudDatacatalogV1ReconcileTagsResponse() {
  }

  public GoogleCloudDatacatalogV1ReconcileTagsResponse createdTagsCount(String createdTagsCount) {
    this.createdTagsCount = createdTagsCount;
    return this;
  }

  /**
   * Number of tags created in the request.
   * @return createdTagsCount
   */
  @javax.annotation.Nullable
  public String getCreatedTagsCount() {
    return createdTagsCount;
  }

  public void setCreatedTagsCount(String createdTagsCount) {
    this.createdTagsCount = createdTagsCount;
  }


  public GoogleCloudDatacatalogV1ReconcileTagsResponse deletedTagsCount(String deletedTagsCount) {
    this.deletedTagsCount = deletedTagsCount;
    return this;
  }

  /**
   * Number of tags deleted in the request.
   * @return deletedTagsCount
   */
  @javax.annotation.Nullable
  public String getDeletedTagsCount() {
    return deletedTagsCount;
  }

  public void setDeletedTagsCount(String deletedTagsCount) {
    this.deletedTagsCount = deletedTagsCount;
  }


  public GoogleCloudDatacatalogV1ReconcileTagsResponse updatedTagsCount(String updatedTagsCount) {
    this.updatedTagsCount = updatedTagsCount;
    return this;
  }

  /**
   * Number of tags updated in the request.
   * @return updatedTagsCount
   */
  @javax.annotation.Nullable
  public String getUpdatedTagsCount() {
    return updatedTagsCount;
  }

  public void setUpdatedTagsCount(String updatedTagsCount) {
    this.updatedTagsCount = updatedTagsCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatacatalogV1ReconcileTagsResponse googleCloudDatacatalogV1ReconcileTagsResponse = (GoogleCloudDatacatalogV1ReconcileTagsResponse) o;
    return Objects.equals(this.createdTagsCount, googleCloudDatacatalogV1ReconcileTagsResponse.createdTagsCount) &&
        Objects.equals(this.deletedTagsCount, googleCloudDatacatalogV1ReconcileTagsResponse.deletedTagsCount) &&
        Objects.equals(this.updatedTagsCount, googleCloudDatacatalogV1ReconcileTagsResponse.updatedTagsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdTagsCount, deletedTagsCount, updatedTagsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatacatalogV1ReconcileTagsResponse {\n");
    sb.append("    createdTagsCount: ").append(toIndentedString(createdTagsCount)).append("\n");
    sb.append("    deletedTagsCount: ").append(toIndentedString(deletedTagsCount)).append("\n");
    sb.append("    updatedTagsCount: ").append(toIndentedString(updatedTagsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createdTagsCount");
    openapiFields.add("deletedTagsCount");
    openapiFields.add("updatedTagsCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatacatalogV1ReconcileTagsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatacatalogV1ReconcileTagsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatacatalogV1ReconcileTagsResponse is not found in the empty JSON string", GoogleCloudDatacatalogV1ReconcileTagsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatacatalogV1ReconcileTagsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatacatalogV1ReconcileTagsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createdTagsCount") != null && !jsonObj.get("createdTagsCount").isJsonNull()) && !jsonObj.get("createdTagsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdTagsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdTagsCount").toString()));
      }
      if ((jsonObj.get("deletedTagsCount") != null && !jsonObj.get("deletedTagsCount").isJsonNull()) && !jsonObj.get("deletedTagsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deletedTagsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deletedTagsCount").toString()));
      }
      if ((jsonObj.get("updatedTagsCount") != null && !jsonObj.get("updatedTagsCount").isJsonNull()) && !jsonObj.get("updatedTagsCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updatedTagsCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updatedTagsCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatacatalogV1ReconcileTagsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatacatalogV1ReconcileTagsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatacatalogV1ReconcileTagsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatacatalogV1ReconcileTagsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatacatalogV1ReconcileTagsResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatacatalogV1ReconcileTagsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatacatalogV1ReconcileTagsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatacatalogV1ReconcileTagsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatacatalogV1ReconcileTagsResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatacatalogV1ReconcileTagsResponse
   */
  public static GoogleCloudDatacatalogV1ReconcileTagsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatacatalogV1ReconcileTagsResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudDatacatalogV1ReconcileTagsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

