/*
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudDatacatalogV1SearchCatalogRequestScope;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for SearchCatalog.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:38:16.144565-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudDatacatalogV1SearchCatalogRequest {
  public static final String SERIALIZED_NAME_ADMIN_SEARCH = "adminSearch";
  @SerializedName(SERIALIZED_NAME_ADMIN_SEARCH)
  private Boolean adminSearch;

  public static final String SERIALIZED_NAME_ORDER_BY = "orderBy";
  @SerializedName(SERIALIZED_NAME_ORDER_BY)
  private String orderBy;

  public static final String SERIALIZED_NAME_PAGE_SIZE = "pageSize";
  @SerializedName(SERIALIZED_NAME_PAGE_SIZE)
  private Integer pageSize;

  public static final String SERIALIZED_NAME_PAGE_TOKEN = "pageToken";
  @SerializedName(SERIALIZED_NAME_PAGE_TOKEN)
  private String pageToken;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;

  public static final String SERIALIZED_NAME_SCOPE = "scope";
  @SerializedName(SERIALIZED_NAME_SCOPE)
  private GoogleCloudDatacatalogV1SearchCatalogRequestScope scope;

  public GoogleCloudDatacatalogV1SearchCatalogRequest() {
  }

  public GoogleCloudDatacatalogV1SearchCatalogRequest adminSearch(Boolean adminSearch) {
    this.adminSearch = adminSearch;
    return this;
  }

  /**
   * Optional. If set, use searchAll permission granted on organizations from &#x60;include_org_ids&#x60; and projects from &#x60;include_project_ids&#x60; instead of the fine grained per resource permissions when filtering the search results. The only allowed &#x60;order_by&#x60; criteria for admin_search mode is &#x60;default&#x60;. Using this flags guarantees a full recall of the search results.
   * @return adminSearch
   */
  @javax.annotation.Nullable
  public Boolean getAdminSearch() {
    return adminSearch;
  }

  public void setAdminSearch(Boolean adminSearch) {
    this.adminSearch = adminSearch;
  }


  public GoogleCloudDatacatalogV1SearchCatalogRequest orderBy(String orderBy) {
    this.orderBy = orderBy;
    return this;
  }

  /**
   * Specifies the order of results. Currently supported case-sensitive values are: * &#x60;relevance&#x60; that can only be descending * &#x60;last_modified_timestamp [asc|desc]&#x60; with descending (&#x60;desc&#x60;) as default * &#x60;default&#x60; that can only be descending Search queries don&#39;t guarantee full recall. Results that match your query might not be returned, even in subsequent result pages. Additionally, returned (and not returned) results can vary if you repeat search queries. If you are experiencing recall issues and you don&#39;t have to fetch the results in any specific order, consider setting this parameter to &#x60;default&#x60;. If this parameter is omitted, it defaults to the descending &#x60;relevance&#x60;.
   * @return orderBy
   */
  @javax.annotation.Nullable
  public String getOrderBy() {
    return orderBy;
  }

  public void setOrderBy(String orderBy) {
    this.orderBy = orderBy;
  }


  public GoogleCloudDatacatalogV1SearchCatalogRequest pageSize(Integer pageSize) {
    this.pageSize = pageSize;
    return this;
  }

  /**
   * Upper bound on the number of results you can get in a single response. Can&#39;t be negative or 0, defaults to 10 in this case. The maximum number is 1000. If exceeded, throws an \&quot;invalid argument\&quot; exception.
   * @return pageSize
   */
  @javax.annotation.Nullable
  public Integer getPageSize() {
    return pageSize;
  }

  public void setPageSize(Integer pageSize) {
    this.pageSize = pageSize;
  }


  public GoogleCloudDatacatalogV1SearchCatalogRequest pageToken(String pageToken) {
    this.pageToken = pageToken;
    return this;
  }

  /**
   * Optional. Pagination token that, if specified, returns the next page of search results. If empty, returns the first page. This token is returned in the SearchCatalogResponse.next_page_token field of the response to a previous SearchCatalogRequest call.
   * @return pageToken
   */
  @javax.annotation.Nullable
  public String getPageToken() {
    return pageToken;
  }

  public void setPageToken(String pageToken) {
    this.pageToken = pageToken;
  }


  public GoogleCloudDatacatalogV1SearchCatalogRequest query(String query) {
    this.query = query;
    return this;
  }

  /**
   * Optional. The query string with a minimum of 3 characters and specific syntax. For more information, see [Data Catalog search syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference). An empty query string returns all data assets (in the specified scope) that you have access to. A query string can be a simple &#x60;xyz&#x60; or qualified by predicates: * &#x60;name:x&#x60; * &#x60;column:y&#x60; * &#x60;description:z&#x60;
   * @return query
   */
  @javax.annotation.Nullable
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }


  public GoogleCloudDatacatalogV1SearchCatalogRequest scope(GoogleCloudDatacatalogV1SearchCatalogRequestScope scope) {
    this.scope = scope;
    return this;
  }

  /**
   * Get scope
   * @return scope
   */
  @javax.annotation.Nullable
  public GoogleCloudDatacatalogV1SearchCatalogRequestScope getScope() {
    return scope;
  }

  public void setScope(GoogleCloudDatacatalogV1SearchCatalogRequestScope scope) {
    this.scope = scope;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudDatacatalogV1SearchCatalogRequest googleCloudDatacatalogV1SearchCatalogRequest = (GoogleCloudDatacatalogV1SearchCatalogRequest) o;
    return Objects.equals(this.adminSearch, googleCloudDatacatalogV1SearchCatalogRequest.adminSearch) &&
        Objects.equals(this.orderBy, googleCloudDatacatalogV1SearchCatalogRequest.orderBy) &&
        Objects.equals(this.pageSize, googleCloudDatacatalogV1SearchCatalogRequest.pageSize) &&
        Objects.equals(this.pageToken, googleCloudDatacatalogV1SearchCatalogRequest.pageToken) &&
        Objects.equals(this.query, googleCloudDatacatalogV1SearchCatalogRequest.query) &&
        Objects.equals(this.scope, googleCloudDatacatalogV1SearchCatalogRequest.scope);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adminSearch, orderBy, pageSize, pageToken, query, scope);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudDatacatalogV1SearchCatalogRequest {\n");
    sb.append("    adminSearch: ").append(toIndentedString(adminSearch)).append("\n");
    sb.append("    orderBy: ").append(toIndentedString(orderBy)).append("\n");
    sb.append("    pageSize: ").append(toIndentedString(pageSize)).append("\n");
    sb.append("    pageToken: ").append(toIndentedString(pageToken)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adminSearch");
    openapiFields.add("orderBy");
    openapiFields.add("pageSize");
    openapiFields.add("pageToken");
    openapiFields.add("query");
    openapiFields.add("scope");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudDatacatalogV1SearchCatalogRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudDatacatalogV1SearchCatalogRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudDatacatalogV1SearchCatalogRequest is not found in the empty JSON string", GoogleCloudDatacatalogV1SearchCatalogRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudDatacatalogV1SearchCatalogRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudDatacatalogV1SearchCatalogRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("orderBy") != null && !jsonObj.get("orderBy").isJsonNull()) && !jsonObj.get("orderBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderBy").toString()));
      }
      if ((jsonObj.get("pageToken") != null && !jsonObj.get("pageToken").isJsonNull()) && !jsonObj.get("pageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pageToken").toString()));
      }
      if ((jsonObj.get("query") != null && !jsonObj.get("query").isJsonNull()) && !jsonObj.get("query").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `query` to be a primitive type in the JSON string but got `%s`", jsonObj.get("query").toString()));
      }
      // validate the optional field `scope`
      if (jsonObj.get("scope") != null && !jsonObj.get("scope").isJsonNull()) {
        GoogleCloudDatacatalogV1SearchCatalogRequestScope.validateJsonElement(jsonObj.get("scope"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudDatacatalogV1SearchCatalogRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudDatacatalogV1SearchCatalogRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudDatacatalogV1SearchCatalogRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudDatacatalogV1SearchCatalogRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudDatacatalogV1SearchCatalogRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudDatacatalogV1SearchCatalogRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudDatacatalogV1SearchCatalogRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudDatacatalogV1SearchCatalogRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudDatacatalogV1SearchCatalogRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudDatacatalogV1SearchCatalogRequest
   */
  public static GoogleCloudDatacatalogV1SearchCatalogRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudDatacatalogV1SearchCatalogRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudDatacatalogV1SearchCatalogRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

