# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1_entry import GoogleCloudDatacatalogV1Entry
from openapi_server.models.google_cloud_datacatalog_v1_tag import GoogleCloudDatacatalogV1Tag
from openapi_server import util


class GoogleCloudDatacatalogV1TaggedEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, absent_tags: List[GoogleCloudDatacatalogV1Tag]=None, present_tags: List[GoogleCloudDatacatalogV1Tag]=None, v1_entry: GoogleCloudDatacatalogV1Entry=None):
        """GoogleCloudDatacatalogV1TaggedEntry - a model defined in OpenAPI

        :param absent_tags: The absent_tags of this GoogleCloudDatacatalogV1TaggedEntry.
        :param present_tags: The present_tags of this GoogleCloudDatacatalogV1TaggedEntry.
        :param v1_entry: The v1_entry of this GoogleCloudDatacatalogV1TaggedEntry.
        """
        self.openapi_types = {
            'absent_tags': List[GoogleCloudDatacatalogV1Tag],
            'present_tags': List[GoogleCloudDatacatalogV1Tag],
            'v1_entry': GoogleCloudDatacatalogV1Entry
        }

        self.attribute_map = {
            'absent_tags': 'absentTags',
            'present_tags': 'presentTags',
            'v1_entry': 'v1Entry'
        }

        self._absent_tags = absent_tags
        self._present_tags = present_tags
        self._v1_entry = v1_entry

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1TaggedEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1TaggedEntry of this GoogleCloudDatacatalogV1TaggedEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def absent_tags(self):
        """Gets the absent_tags of this GoogleCloudDatacatalogV1TaggedEntry.

        Optional. Tags that should be deleted from the Data Catalog. Caller should populate template name and column only.

        :return: The absent_tags of this GoogleCloudDatacatalogV1TaggedEntry.
        :rtype: List[GoogleCloudDatacatalogV1Tag]
        """
        return self._absent_tags

    @absent_tags.setter
    def absent_tags(self, absent_tags):
        """Sets the absent_tags of this GoogleCloudDatacatalogV1TaggedEntry.

        Optional. Tags that should be deleted from the Data Catalog. Caller should populate template name and column only.

        :param absent_tags: The absent_tags of this GoogleCloudDatacatalogV1TaggedEntry.
        :type absent_tags: List[GoogleCloudDatacatalogV1Tag]
        """

        self._absent_tags = absent_tags

    @property
    def present_tags(self):
        """Gets the present_tags of this GoogleCloudDatacatalogV1TaggedEntry.

        Optional. Tags that should be ingested into the Data Catalog. Caller should populate template name, column and fields.

        :return: The present_tags of this GoogleCloudDatacatalogV1TaggedEntry.
        :rtype: List[GoogleCloudDatacatalogV1Tag]
        """
        return self._present_tags

    @present_tags.setter
    def present_tags(self, present_tags):
        """Sets the present_tags of this GoogleCloudDatacatalogV1TaggedEntry.

        Optional. Tags that should be ingested into the Data Catalog. Caller should populate template name, column and fields.

        :param present_tags: The present_tags of this GoogleCloudDatacatalogV1TaggedEntry.
        :type present_tags: List[GoogleCloudDatacatalogV1Tag]
        """

        self._present_tags = present_tags

    @property
    def v1_entry(self):
        """Gets the v1_entry of this GoogleCloudDatacatalogV1TaggedEntry.


        :return: The v1_entry of this GoogleCloudDatacatalogV1TaggedEntry.
        :rtype: GoogleCloudDatacatalogV1Entry
        """
        return self._v1_entry

    @v1_entry.setter
    def v1_entry(self, v1_entry):
        """Sets the v1_entry of this GoogleCloudDatacatalogV1TaggedEntry.


        :param v1_entry: The v1_entry of this GoogleCloudDatacatalogV1TaggedEntry.
        :type v1_entry: GoogleCloudDatacatalogV1Entry
        """

        self._v1_entry = v1_entry
