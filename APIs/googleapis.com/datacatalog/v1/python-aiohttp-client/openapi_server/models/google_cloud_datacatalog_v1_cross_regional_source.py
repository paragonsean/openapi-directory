# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1CrossRegionalSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, taxonomy: str=None):
        """GoogleCloudDatacatalogV1CrossRegionalSource - a model defined in OpenAPI

        :param taxonomy: The taxonomy of this GoogleCloudDatacatalogV1CrossRegionalSource.
        """
        self.openapi_types = {
            'taxonomy': str
        }

        self.attribute_map = {
            'taxonomy': 'taxonomy'
        }

        self._taxonomy = taxonomy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1CrossRegionalSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1CrossRegionalSource of this GoogleCloudDatacatalogV1CrossRegionalSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def taxonomy(self):
        """Gets the taxonomy of this GoogleCloudDatacatalogV1CrossRegionalSource.

        Required. The resource name of the source taxonomy to import.

        :return: The taxonomy of this GoogleCloudDatacatalogV1CrossRegionalSource.
        :rtype: str
        """
        return self._taxonomy

    @taxonomy.setter
    def taxonomy(self, taxonomy):
        """Sets the taxonomy of this GoogleCloudDatacatalogV1CrossRegionalSource.

        Required. The resource name of the source taxonomy to import.

        :param taxonomy: The taxonomy of this GoogleCloudDatacatalogV1CrossRegionalSource.
        :type taxonomy: str
        """

        self._taxonomy = taxonomy
