# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1_physical_schema import GoogleCloudDatacatalogV1PhysicalSchema
from openapi_server import util


class GoogleCloudDatacatalogV1DataplexSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset: str=None, compression_format: str=None, data_format: GoogleCloudDatacatalogV1PhysicalSchema=None, project_id: str=None):
        """GoogleCloudDatacatalogV1DataplexSpec - a model defined in OpenAPI

        :param asset: The asset of this GoogleCloudDatacatalogV1DataplexSpec.
        :param compression_format: The compression_format of this GoogleCloudDatacatalogV1DataplexSpec.
        :param data_format: The data_format of this GoogleCloudDatacatalogV1DataplexSpec.
        :param project_id: The project_id of this GoogleCloudDatacatalogV1DataplexSpec.
        """
        self.openapi_types = {
            'asset': str,
            'compression_format': str,
            'data_format': GoogleCloudDatacatalogV1PhysicalSchema,
            'project_id': str
        }

        self.attribute_map = {
            'asset': 'asset',
            'compression_format': 'compressionFormat',
            'data_format': 'dataFormat',
            'project_id': 'projectId'
        }

        self._asset = asset
        self._compression_format = compression_format
        self._data_format = data_format
        self._project_id = project_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1DataplexSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1DataplexSpec of this GoogleCloudDatacatalogV1DataplexSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset(self):
        """Gets the asset of this GoogleCloudDatacatalogV1DataplexSpec.

        Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.

        :return: The asset of this GoogleCloudDatacatalogV1DataplexSpec.
        :rtype: str
        """
        return self._asset

    @asset.setter
    def asset(self, asset):
        """Sets the asset of this GoogleCloudDatacatalogV1DataplexSpec.

        Fully qualified resource name of an asset in Dataplex, to which the underlying data source (Cloud Storage bucket or BigQuery dataset) of the entity is attached.

        :param asset: The asset of this GoogleCloudDatacatalogV1DataplexSpec.
        :type asset: str
        """

        self._asset = asset

    @property
    def compression_format(self):
        """Gets the compression_format of this GoogleCloudDatacatalogV1DataplexSpec.

        Compression format of the data, e.g., zip, gzip etc.

        :return: The compression_format of this GoogleCloudDatacatalogV1DataplexSpec.
        :rtype: str
        """
        return self._compression_format

    @compression_format.setter
    def compression_format(self, compression_format):
        """Sets the compression_format of this GoogleCloudDatacatalogV1DataplexSpec.

        Compression format of the data, e.g., zip, gzip etc.

        :param compression_format: The compression_format of this GoogleCloudDatacatalogV1DataplexSpec.
        :type compression_format: str
        """

        self._compression_format = compression_format

    @property
    def data_format(self):
        """Gets the data_format of this GoogleCloudDatacatalogV1DataplexSpec.


        :return: The data_format of this GoogleCloudDatacatalogV1DataplexSpec.
        :rtype: GoogleCloudDatacatalogV1PhysicalSchema
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this GoogleCloudDatacatalogV1DataplexSpec.


        :param data_format: The data_format of this GoogleCloudDatacatalogV1DataplexSpec.
        :type data_format: GoogleCloudDatacatalogV1PhysicalSchema
        """

        self._data_format = data_format

    @property
    def project_id(self):
        """Gets the project_id of this GoogleCloudDatacatalogV1DataplexSpec.

        Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.

        :return: The project_id of this GoogleCloudDatacatalogV1DataplexSpec.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this GoogleCloudDatacatalogV1DataplexSpec.

        Project ID of the underlying Cloud Storage or BigQuery data. Note that this may not be the same project as the correspondingly Dataplex lake / zone / asset.

        :param project_id: The project_id of this GoogleCloudDatacatalogV1DataplexSpec.
        :type project_id: str
        """

        self._project_id = project_id
