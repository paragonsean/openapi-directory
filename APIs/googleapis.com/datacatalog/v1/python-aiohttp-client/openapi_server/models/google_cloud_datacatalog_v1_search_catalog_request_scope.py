# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1SearchCatalogRequestScope(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_gcp_public_datasets: bool=None, include_org_ids: List[str]=None, include_project_ids: List[str]=None, include_public_tag_templates: bool=None, restricted_locations: List[str]=None, starred_only: bool=None):
        """GoogleCloudDatacatalogV1SearchCatalogRequestScope - a model defined in OpenAPI

        :param include_gcp_public_datasets: The include_gcp_public_datasets of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :param include_org_ids: The include_org_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :param include_project_ids: The include_project_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :param include_public_tag_templates: The include_public_tag_templates of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :param restricted_locations: The restricted_locations of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :param starred_only: The starred_only of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        """
        self.openapi_types = {
            'include_gcp_public_datasets': bool,
            'include_org_ids': List[str],
            'include_project_ids': List[str],
            'include_public_tag_templates': bool,
            'restricted_locations': List[str],
            'starred_only': bool
        }

        self.attribute_map = {
            'include_gcp_public_datasets': 'includeGcpPublicDatasets',
            'include_org_ids': 'includeOrgIds',
            'include_project_ids': 'includeProjectIds',
            'include_public_tag_templates': 'includePublicTagTemplates',
            'restricted_locations': 'restrictedLocations',
            'starred_only': 'starredOnly'
        }

        self._include_gcp_public_datasets = include_gcp_public_datasets
        self._include_org_ids = include_org_ids
        self._include_project_ids = include_project_ids
        self._include_public_tag_templates = include_public_tag_templates
        self._restricted_locations = restricted_locations
        self._starred_only = starred_only

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1SearchCatalogRequestScope':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1SearchCatalogRequestScope of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_gcp_public_datasets(self):
        """Gets the include_gcp_public_datasets of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        If `true`, include Google Cloud public datasets in search results. By default, they are excluded. See [Google Cloud Public Datasets](/public-datasets) for more information.

        :return: The include_gcp_public_datasets of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :rtype: bool
        """
        return self._include_gcp_public_datasets

    @include_gcp_public_datasets.setter
    def include_gcp_public_datasets(self, include_gcp_public_datasets):
        """Sets the include_gcp_public_datasets of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        If `true`, include Google Cloud public datasets in search results. By default, they are excluded. See [Google Cloud Public Datasets](/public-datasets) for more information.

        :param include_gcp_public_datasets: The include_gcp_public_datasets of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :type include_gcp_public_datasets: bool
        """

        self._include_gcp_public_datasets = include_gcp_public_datasets

    @property
    def include_org_ids(self):
        """Gets the include_org_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        The list of organization IDs to search within. To find your organization ID, follow the steps from [Creating and managing organizations] (/resource-manager/docs/creating-managing-organization).

        :return: The include_org_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :rtype: List[str]
        """
        return self._include_org_ids

    @include_org_ids.setter
    def include_org_ids(self, include_org_ids):
        """Sets the include_org_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        The list of organization IDs to search within. To find your organization ID, follow the steps from [Creating and managing organizations] (/resource-manager/docs/creating-managing-organization).

        :param include_org_ids: The include_org_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :type include_org_ids: List[str]
        """

        self._include_org_ids = include_org_ids

    @property
    def include_project_ids(self):
        """Gets the include_project_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        The list of project IDs to search within. For more information on the distinction between project names, IDs, and numbers, see [Projects](/docs/overview/#projects).

        :return: The include_project_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :rtype: List[str]
        """
        return self._include_project_ids

    @include_project_ids.setter
    def include_project_ids(self, include_project_ids):
        """Sets the include_project_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        The list of project IDs to search within. For more information on the distinction between project names, IDs, and numbers, see [Projects](/docs/overview/#projects).

        :param include_project_ids: The include_project_ids of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :type include_project_ids: List[str]
        """

        self._include_project_ids = include_project_ids

    @property
    def include_public_tag_templates(self):
        """Gets the include_public_tag_templates of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        Optional. This field is deprecated. The search mechanism for public and private tag templates is the same.

        :return: The include_public_tag_templates of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :rtype: bool
        """
        return self._include_public_tag_templates

    @include_public_tag_templates.setter
    def include_public_tag_templates(self, include_public_tag_templates):
        """Sets the include_public_tag_templates of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        Optional. This field is deprecated. The search mechanism for public and private tag templates is the same.

        :param include_public_tag_templates: The include_public_tag_templates of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :type include_public_tag_templates: bool
        """

        self._include_public_tag_templates = include_public_tag_templates

    @property
    def restricted_locations(self):
        """Gets the restricted_locations of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        Optional. The list of locations to search within. If empty, all locations are searched. Returns an error if any location in the list isn't one of the [Supported regions](https://cloud.google.com/data-catalog/docs/concepts/regions#supported_regions). If a location is unreachable, its name is returned in the `SearchCatalogResponse.unreachable` field. To get additional information on the error, repeat the search request and set the location name as the value of this parameter.

        :return: The restricted_locations of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :rtype: List[str]
        """
        return self._restricted_locations

    @restricted_locations.setter
    def restricted_locations(self, restricted_locations):
        """Sets the restricted_locations of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        Optional. The list of locations to search within. If empty, all locations are searched. Returns an error if any location in the list isn't one of the [Supported regions](https://cloud.google.com/data-catalog/docs/concepts/regions#supported_regions). If a location is unreachable, its name is returned in the `SearchCatalogResponse.unreachable` field. To get additional information on the error, repeat the search request and set the location name as the value of this parameter.

        :param restricted_locations: The restricted_locations of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :type restricted_locations: List[str]
        """

        self._restricted_locations = restricted_locations

    @property
    def starred_only(self):
        """Gets the starred_only of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        Optional. If `true`, search only among starred entries. By default, all results are returned, starred or not.

        :return: The starred_only of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :rtype: bool
        """
        return self._starred_only

    @starred_only.setter
    def starred_only(self, starred_only):
        """Sets the starred_only of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.

        Optional. If `true`, search only among starred entries. By default, all results are returned, starred or not.

        :param starred_only: The starred_only of this GoogleCloudDatacatalogV1SearchCatalogRequestScope.
        :type starred_only: bool
        """

        self._starred_only = starred_only
