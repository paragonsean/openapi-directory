# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1_tag import GoogleCloudDatacatalogV1Tag
from openapi_server import util


class GoogleCloudDatacatalogV1ReconcileTagsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, force_delete_missing: bool=None, tag_template: str=None, tags: List[GoogleCloudDatacatalogV1Tag]=None):
        """GoogleCloudDatacatalogV1ReconcileTagsRequest - a model defined in OpenAPI

        :param force_delete_missing: The force_delete_missing of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        :param tag_template: The tag_template of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        :param tags: The tags of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        """
        self.openapi_types = {
            'force_delete_missing': bool,
            'tag_template': str,
            'tags': List[GoogleCloudDatacatalogV1Tag]
        }

        self.attribute_map = {
            'force_delete_missing': 'forceDeleteMissing',
            'tag_template': 'tagTemplate',
            'tags': 'tags'
        }

        self._force_delete_missing = force_delete_missing
        self._tag_template = tag_template
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1ReconcileTagsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1ReconcileTagsRequest of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def force_delete_missing(self):
        """Gets the force_delete_missing of this GoogleCloudDatacatalogV1ReconcileTagsRequest.

        If set to `true`, deletes entry tags related to a tag template not listed in the tags source from an entry. If set to `false`, unlisted tags are retained.

        :return: The force_delete_missing of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        :rtype: bool
        """
        return self._force_delete_missing

    @force_delete_missing.setter
    def force_delete_missing(self, force_delete_missing):
        """Sets the force_delete_missing of this GoogleCloudDatacatalogV1ReconcileTagsRequest.

        If set to `true`, deletes entry tags related to a tag template not listed in the tags source from an entry. If set to `false`, unlisted tags are retained.

        :param force_delete_missing: The force_delete_missing of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        :type force_delete_missing: bool
        """

        self._force_delete_missing = force_delete_missing

    @property
    def tag_template(self):
        """Gets the tag_template of this GoogleCloudDatacatalogV1ReconcileTagsRequest.

        Required. The name of the tag template, which is used for reconciliation.

        :return: The tag_template of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        :rtype: str
        """
        return self._tag_template

    @tag_template.setter
    def tag_template(self, tag_template):
        """Sets the tag_template of this GoogleCloudDatacatalogV1ReconcileTagsRequest.

        Required. The name of the tag template, which is used for reconciliation.

        :param tag_template: The tag_template of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        :type tag_template: str
        """

        self._tag_template = tag_template

    @property
    def tags(self):
        """Gets the tags of this GoogleCloudDatacatalogV1ReconcileTagsRequest.

        A list of tags to apply to an entry. A tag can specify a tag template, which must be the template specified in the `ReconcileTagsRequest`. The sole entry and each of its columns must be mentioned at most once.

        :return: The tags of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        :rtype: List[GoogleCloudDatacatalogV1Tag]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GoogleCloudDatacatalogV1ReconcileTagsRequest.

        A list of tags to apply to an entry. A tag can specify a tag template, which must be the template specified in the `ReconcileTagsRequest`. The sole entry and each of its columns must be mentioned at most once.

        :param tags: The tags of this GoogleCloudDatacatalogV1ReconcileTagsRequest.
        :type tags: List[GoogleCloudDatacatalogV1Tag]
        """

        self._tags = tags
