# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_datacatalog_v1_tagged_entry import GoogleCloudDatacatalogV1TaggedEntry
from openapi_server import util


class GoogleCloudDatacatalogV1DumpItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tagged_entry: GoogleCloudDatacatalogV1TaggedEntry=None):
        """GoogleCloudDatacatalogV1DumpItem - a model defined in OpenAPI

        :param tagged_entry: The tagged_entry of this GoogleCloudDatacatalogV1DumpItem.
        """
        self.openapi_types = {
            'tagged_entry': GoogleCloudDatacatalogV1TaggedEntry
        }

        self.attribute_map = {
            'tagged_entry': 'taggedEntry'
        }

        self._tagged_entry = tagged_entry

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1DumpItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1DumpItem of this GoogleCloudDatacatalogV1DumpItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tagged_entry(self):
        """Gets the tagged_entry of this GoogleCloudDatacatalogV1DumpItem.


        :return: The tagged_entry of this GoogleCloudDatacatalogV1DumpItem.
        :rtype: GoogleCloudDatacatalogV1TaggedEntry
        """
        return self._tagged_entry

    @tagged_entry.setter
    def tagged_entry(self, tagged_entry):
        """Sets the tagged_entry of this GoogleCloudDatacatalogV1DumpItem.


        :param tagged_entry: The tagged_entry of this GoogleCloudDatacatalogV1DumpItem.
        :type tagged_entry: GoogleCloudDatacatalogV1TaggedEntry
        """

        self._tagged_entry = tagged_entry
