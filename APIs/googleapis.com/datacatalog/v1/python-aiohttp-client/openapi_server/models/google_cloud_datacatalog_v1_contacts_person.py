# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1ContactsPerson(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, designation: str=None, email: str=None):
        """GoogleCloudDatacatalogV1ContactsPerson - a model defined in OpenAPI

        :param designation: The designation of this GoogleCloudDatacatalogV1ContactsPerson.
        :param email: The email of this GoogleCloudDatacatalogV1ContactsPerson.
        """
        self.openapi_types = {
            'designation': str,
            'email': str
        }

        self.attribute_map = {
            'designation': 'designation',
            'email': 'email'
        }

        self._designation = designation
        self._email = email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1ContactsPerson':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1ContactsPerson of this GoogleCloudDatacatalogV1ContactsPerson.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def designation(self):
        """Gets the designation of this GoogleCloudDatacatalogV1ContactsPerson.

        Designation of the person, for example, Data Steward.

        :return: The designation of this GoogleCloudDatacatalogV1ContactsPerson.
        :rtype: str
        """
        return self._designation

    @designation.setter
    def designation(self, designation):
        """Sets the designation of this GoogleCloudDatacatalogV1ContactsPerson.

        Designation of the person, for example, Data Steward.

        :param designation: The designation of this GoogleCloudDatacatalogV1ContactsPerson.
        :type designation: str
        """

        self._designation = designation

    @property
    def email(self):
        """Gets the email of this GoogleCloudDatacatalogV1ContactsPerson.

        Email of the person in the format of `john.doe@xyz`, ``, or `John Doe`.

        :return: The email of this GoogleCloudDatacatalogV1ContactsPerson.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this GoogleCloudDatacatalogV1ContactsPerson.

        Email of the person in the format of `john.doe@xyz`, ``, or `John Doe`.

        :param email: The email of this GoogleCloudDatacatalogV1ContactsPerson.
        :type email: str
        """

        self._email = email
