# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1TaxonomyService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity: str=None, name: str=None):
        """GoogleCloudDatacatalogV1TaxonomyService - a model defined in OpenAPI

        :param identity: The identity of this GoogleCloudDatacatalogV1TaxonomyService.
        :param name: The name of this GoogleCloudDatacatalogV1TaxonomyService.
        """
        self.openapi_types = {
            'identity': str,
            'name': str
        }

        self.attribute_map = {
            'identity': 'identity',
            'name': 'name'
        }

        self._identity = identity
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1TaxonomyService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1TaxonomyService of this GoogleCloudDatacatalogV1TaxonomyService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity(self):
        """Gets the identity of this GoogleCloudDatacatalogV1TaxonomyService.

        The service agent for the service.

        :return: The identity of this GoogleCloudDatacatalogV1TaxonomyService.
        :rtype: str
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this GoogleCloudDatacatalogV1TaxonomyService.

        The service agent for the service.

        :param identity: The identity of this GoogleCloudDatacatalogV1TaxonomyService.
        :type identity: str
        """

        self._identity = identity

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatacatalogV1TaxonomyService.

        The Google Cloud service name.

        :return: The name of this GoogleCloudDatacatalogV1TaxonomyService.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatacatalogV1TaxonomyService.

        The Google Cloud service name.

        :param name: The name of this GoogleCloudDatacatalogV1TaxonomyService.
        :type name: str
        """
        allowed_values = ["MANAGING_SYSTEM_UNSPECIFIED", "MANAGING_SYSTEM_DATAPLEX", "MANAGING_SYSTEM_OTHER"]  # noqa: E501
        if name not in allowed_values:
            raise ValueError(
                "Invalid value for `name` ({0}), must be one of {1}"
                .format(name, allowed_values)
            )

        self._name = name
