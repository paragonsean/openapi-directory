# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudDatacatalogV1PolicyTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, child_policy_tags: List[str]=None, description: str=None, display_name: str=None, name: str=None, parent_policy_tag: str=None):
        """GoogleCloudDatacatalogV1PolicyTag - a model defined in OpenAPI

        :param child_policy_tags: The child_policy_tags of this GoogleCloudDatacatalogV1PolicyTag.
        :param description: The description of this GoogleCloudDatacatalogV1PolicyTag.
        :param display_name: The display_name of this GoogleCloudDatacatalogV1PolicyTag.
        :param name: The name of this GoogleCloudDatacatalogV1PolicyTag.
        :param parent_policy_tag: The parent_policy_tag of this GoogleCloudDatacatalogV1PolicyTag.
        """
        self.openapi_types = {
            'child_policy_tags': List[str],
            'description': str,
            'display_name': str,
            'name': str,
            'parent_policy_tag': str
        }

        self.attribute_map = {
            'child_policy_tags': 'childPolicyTags',
            'description': 'description',
            'display_name': 'displayName',
            'name': 'name',
            'parent_policy_tag': 'parentPolicyTag'
        }

        self._child_policy_tags = child_policy_tags
        self._description = description
        self._display_name = display_name
        self._name = name
        self._parent_policy_tag = parent_policy_tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudDatacatalogV1PolicyTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudDatacatalogV1PolicyTag of this GoogleCloudDatacatalogV1PolicyTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def child_policy_tags(self):
        """Gets the child_policy_tags of this GoogleCloudDatacatalogV1PolicyTag.

        Output only. Resource names of child policy tags of this policy tag.

        :return: The child_policy_tags of this GoogleCloudDatacatalogV1PolicyTag.
        :rtype: List[str]
        """
        return self._child_policy_tags

    @child_policy_tags.setter
    def child_policy_tags(self, child_policy_tags):
        """Sets the child_policy_tags of this GoogleCloudDatacatalogV1PolicyTag.

        Output only. Resource names of child policy tags of this policy tag.

        :param child_policy_tags: The child_policy_tags of this GoogleCloudDatacatalogV1PolicyTag.
        :type child_policy_tags: List[str]
        """

        self._child_policy_tags = child_policy_tags

    @property
    def description(self):
        """Gets the description of this GoogleCloudDatacatalogV1PolicyTag.

        Description of this policy tag. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns and page breaks, and be at most 2000 bytes long when encoded in UTF-8.

        :return: The description of this GoogleCloudDatacatalogV1PolicyTag.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudDatacatalogV1PolicyTag.

        Description of this policy tag. If not set, defaults to empty. The description must contain only Unicode characters, tabs, newlines, carriage returns and page breaks, and be at most 2000 bytes long when encoded in UTF-8.

        :param description: The description of this GoogleCloudDatacatalogV1PolicyTag.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudDatacatalogV1PolicyTag.

        Required. User-defined name of this policy tag. The name can't start or end with spaces and must be unique within the parent taxonomy, contain only Unicode letters, numbers, underscores, dashes and spaces, and be at most 200 bytes long when encoded in UTF-8.

        :return: The display_name of this GoogleCloudDatacatalogV1PolicyTag.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudDatacatalogV1PolicyTag.

        Required. User-defined name of this policy tag. The name can't start or end with spaces and must be unique within the parent taxonomy, contain only Unicode letters, numbers, underscores, dashes and spaces, and be at most 200 bytes long when encoded in UTF-8.

        :param display_name: The display_name of this GoogleCloudDatacatalogV1PolicyTag.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GoogleCloudDatacatalogV1PolicyTag.

        Identifier. Resource name of this policy tag in the URL format. The policy tag manager generates unique taxonomy IDs and policy tag IDs.

        :return: The name of this GoogleCloudDatacatalogV1PolicyTag.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudDatacatalogV1PolicyTag.

        Identifier. Resource name of this policy tag in the URL format. The policy tag manager generates unique taxonomy IDs and policy tag IDs.

        :param name: The name of this GoogleCloudDatacatalogV1PolicyTag.
        :type name: str
        """

        self._name = name

    @property
    def parent_policy_tag(self):
        """Gets the parent_policy_tag of this GoogleCloudDatacatalogV1PolicyTag.

        Resource name of this policy tag's parent policy tag. If empty, this is a top level tag. If not set, defaults to an empty string. For example, for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag, and, for \"Geolocation\", this field is empty.

        :return: The parent_policy_tag of this GoogleCloudDatacatalogV1PolicyTag.
        :rtype: str
        """
        return self._parent_policy_tag

    @parent_policy_tag.setter
    def parent_policy_tag(self, parent_policy_tag):
        """Sets the parent_policy_tag of this GoogleCloudDatacatalogV1PolicyTag.

        Resource name of this policy tag's parent policy tag. If empty, this is a top level tag. If not set, defaults to an empty string. For example, for the \"LatLong\" policy tag in the example above, this field contains the resource name of the \"Geolocation\" policy tag, and, for \"Geolocation\", this field is empty.

        :param parent_policy_tag: The parent_policy_tag of this GoogleCloudDatacatalogV1PolicyTag.
        :type parent_policy_tag: str
        """

        self._parent_policy_tag = parent_policy_tag
