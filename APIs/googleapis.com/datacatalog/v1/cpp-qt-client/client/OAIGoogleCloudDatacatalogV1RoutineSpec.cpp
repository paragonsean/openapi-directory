/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1RoutineSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1RoutineSpec::OAIGoogleCloudDatacatalogV1RoutineSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1RoutineSpec::OAIGoogleCloudDatacatalogV1RoutineSpec() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1RoutineSpec::~OAIGoogleCloudDatacatalogV1RoutineSpec() {}

void OAIGoogleCloudDatacatalogV1RoutineSpec::initializeModel() {

    m_bigquery_routine_spec_isSet = false;
    m_bigquery_routine_spec_isValid = false;

    m_definition_body_isSet = false;
    m_definition_body_isValid = false;

    m_language_isSet = false;
    m_language_isValid = false;

    m_return_type_isSet = false;
    m_return_type_isValid = false;

    m_routine_arguments_isSet = false;
    m_routine_arguments_isValid = false;

    m_routine_type_isSet = false;
    m_routine_type_isValid = false;
}

void OAIGoogleCloudDatacatalogV1RoutineSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1RoutineSpec::fromJsonObject(QJsonObject json) {

    m_bigquery_routine_spec_isValid = ::OpenAPI::fromJsonValue(m_bigquery_routine_spec, json[QString("bigqueryRoutineSpec")]);
    m_bigquery_routine_spec_isSet = !json[QString("bigqueryRoutineSpec")].isNull() && m_bigquery_routine_spec_isValid;

    m_definition_body_isValid = ::OpenAPI::fromJsonValue(m_definition_body, json[QString("definitionBody")]);
    m_definition_body_isSet = !json[QString("definitionBody")].isNull() && m_definition_body_isValid;

    m_language_isValid = ::OpenAPI::fromJsonValue(m_language, json[QString("language")]);
    m_language_isSet = !json[QString("language")].isNull() && m_language_isValid;

    m_return_type_isValid = ::OpenAPI::fromJsonValue(m_return_type, json[QString("returnType")]);
    m_return_type_isSet = !json[QString("returnType")].isNull() && m_return_type_isValid;

    m_routine_arguments_isValid = ::OpenAPI::fromJsonValue(m_routine_arguments, json[QString("routineArguments")]);
    m_routine_arguments_isSet = !json[QString("routineArguments")].isNull() && m_routine_arguments_isValid;

    m_routine_type_isValid = ::OpenAPI::fromJsonValue(m_routine_type, json[QString("routineType")]);
    m_routine_type_isSet = !json[QString("routineType")].isNull() && m_routine_type_isValid;
}

QString OAIGoogleCloudDatacatalogV1RoutineSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1RoutineSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_bigquery_routine_spec.isSet()) {
        obj.insert(QString("bigqueryRoutineSpec"), ::OpenAPI::toJsonValue(m_bigquery_routine_spec));
    }
    if (m_definition_body_isSet) {
        obj.insert(QString("definitionBody"), ::OpenAPI::toJsonValue(m_definition_body));
    }
    if (m_language_isSet) {
        obj.insert(QString("language"), ::OpenAPI::toJsonValue(m_language));
    }
    if (m_return_type_isSet) {
        obj.insert(QString("returnType"), ::OpenAPI::toJsonValue(m_return_type));
    }
    if (m_routine_arguments.size() > 0) {
        obj.insert(QString("routineArguments"), ::OpenAPI::toJsonValue(m_routine_arguments));
    }
    if (m_routine_type_isSet) {
        obj.insert(QString("routineType"), ::OpenAPI::toJsonValue(m_routine_type));
    }
    return obj;
}

OAIGoogleCloudDatacatalogV1BigQueryRoutineSpec OAIGoogleCloudDatacatalogV1RoutineSpec::getBigqueryRoutineSpec() const {
    return m_bigquery_routine_spec;
}
void OAIGoogleCloudDatacatalogV1RoutineSpec::setBigqueryRoutineSpec(const OAIGoogleCloudDatacatalogV1BigQueryRoutineSpec &bigquery_routine_spec) {
    m_bigquery_routine_spec = bigquery_routine_spec;
    m_bigquery_routine_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_bigquery_routine_spec_Set() const{
    return m_bigquery_routine_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_bigquery_routine_spec_Valid() const{
    return m_bigquery_routine_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1RoutineSpec::getDefinitionBody() const {
    return m_definition_body;
}
void OAIGoogleCloudDatacatalogV1RoutineSpec::setDefinitionBody(const QString &definition_body) {
    m_definition_body = definition_body;
    m_definition_body_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_definition_body_Set() const{
    return m_definition_body_isSet;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_definition_body_Valid() const{
    return m_definition_body_isValid;
}

QString OAIGoogleCloudDatacatalogV1RoutineSpec::getLanguage() const {
    return m_language;
}
void OAIGoogleCloudDatacatalogV1RoutineSpec::setLanguage(const QString &language) {
    m_language = language;
    m_language_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_language_Set() const{
    return m_language_isSet;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_language_Valid() const{
    return m_language_isValid;
}

QString OAIGoogleCloudDatacatalogV1RoutineSpec::getReturnType() const {
    return m_return_type;
}
void OAIGoogleCloudDatacatalogV1RoutineSpec::setReturnType(const QString &return_type) {
    m_return_type = return_type;
    m_return_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_return_type_Set() const{
    return m_return_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_return_type_Valid() const{
    return m_return_type_isValid;
}

QList<OAIGoogleCloudDatacatalogV1RoutineSpecArgument> OAIGoogleCloudDatacatalogV1RoutineSpec::getRoutineArguments() const {
    return m_routine_arguments;
}
void OAIGoogleCloudDatacatalogV1RoutineSpec::setRoutineArguments(const QList<OAIGoogleCloudDatacatalogV1RoutineSpecArgument> &routine_arguments) {
    m_routine_arguments = routine_arguments;
    m_routine_arguments_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_routine_arguments_Set() const{
    return m_routine_arguments_isSet;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_routine_arguments_Valid() const{
    return m_routine_arguments_isValid;
}

QString OAIGoogleCloudDatacatalogV1RoutineSpec::getRoutineType() const {
    return m_routine_type;
}
void OAIGoogleCloudDatacatalogV1RoutineSpec::setRoutineType(const QString &routine_type) {
    m_routine_type = routine_type;
    m_routine_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_routine_type_Set() const{
    return m_routine_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::is_routine_type_Valid() const{
    return m_routine_type_isValid;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bigquery_routine_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_routine_arguments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_routine_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1RoutineSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
