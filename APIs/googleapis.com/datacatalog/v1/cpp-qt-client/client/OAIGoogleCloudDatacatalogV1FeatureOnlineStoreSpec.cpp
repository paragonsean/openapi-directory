/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::~OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec() {}

void OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::initializeModel() {

    m_storage_type_isSet = false;
    m_storage_type_isValid = false;
}

void OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::fromJsonObject(QJsonObject json) {

    m_storage_type_isValid = ::OpenAPI::fromJsonValue(m_storage_type, json[QString("storageType")]);
    m_storage_type_isSet = !json[QString("storageType")].isNull() && m_storage_type_isValid;
}

QString OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_storage_type_isSet) {
        obj.insert(QString("storageType"), ::OpenAPI::toJsonValue(m_storage_type));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::getStorageType() const {
    return m_storage_type;
}
void OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::setStorageType(const QString &storage_type) {
    m_storage_type = storage_type;
    m_storage_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::is_storage_type_Set() const{
    return m_storage_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::is_storage_type_Valid() const{
    return m_storage_type_isValid;
}

bool OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_storage_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
