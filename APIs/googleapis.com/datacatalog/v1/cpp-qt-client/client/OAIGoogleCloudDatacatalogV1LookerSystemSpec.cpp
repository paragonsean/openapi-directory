/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1LookerSystemSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1LookerSystemSpec::OAIGoogleCloudDatacatalogV1LookerSystemSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1LookerSystemSpec::OAIGoogleCloudDatacatalogV1LookerSystemSpec() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1LookerSystemSpec::~OAIGoogleCloudDatacatalogV1LookerSystemSpec() {}

void OAIGoogleCloudDatacatalogV1LookerSystemSpec::initializeModel() {

    m_parent_instance_display_name_isSet = false;
    m_parent_instance_display_name_isValid = false;

    m_parent_instance_id_isSet = false;
    m_parent_instance_id_isValid = false;

    m_parent_model_display_name_isSet = false;
    m_parent_model_display_name_isValid = false;

    m_parent_model_id_isSet = false;
    m_parent_model_id_isValid = false;

    m_parent_view_display_name_isSet = false;
    m_parent_view_display_name_isValid = false;

    m_parent_view_id_isSet = false;
    m_parent_view_id_isValid = false;
}

void OAIGoogleCloudDatacatalogV1LookerSystemSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1LookerSystemSpec::fromJsonObject(QJsonObject json) {

    m_parent_instance_display_name_isValid = ::OpenAPI::fromJsonValue(m_parent_instance_display_name, json[QString("parentInstanceDisplayName")]);
    m_parent_instance_display_name_isSet = !json[QString("parentInstanceDisplayName")].isNull() && m_parent_instance_display_name_isValid;

    m_parent_instance_id_isValid = ::OpenAPI::fromJsonValue(m_parent_instance_id, json[QString("parentInstanceId")]);
    m_parent_instance_id_isSet = !json[QString("parentInstanceId")].isNull() && m_parent_instance_id_isValid;

    m_parent_model_display_name_isValid = ::OpenAPI::fromJsonValue(m_parent_model_display_name, json[QString("parentModelDisplayName")]);
    m_parent_model_display_name_isSet = !json[QString("parentModelDisplayName")].isNull() && m_parent_model_display_name_isValid;

    m_parent_model_id_isValid = ::OpenAPI::fromJsonValue(m_parent_model_id, json[QString("parentModelId")]);
    m_parent_model_id_isSet = !json[QString("parentModelId")].isNull() && m_parent_model_id_isValid;

    m_parent_view_display_name_isValid = ::OpenAPI::fromJsonValue(m_parent_view_display_name, json[QString("parentViewDisplayName")]);
    m_parent_view_display_name_isSet = !json[QString("parentViewDisplayName")].isNull() && m_parent_view_display_name_isValid;

    m_parent_view_id_isValid = ::OpenAPI::fromJsonValue(m_parent_view_id, json[QString("parentViewId")]);
    m_parent_view_id_isSet = !json[QString("parentViewId")].isNull() && m_parent_view_id_isValid;
}

QString OAIGoogleCloudDatacatalogV1LookerSystemSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1LookerSystemSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_parent_instance_display_name_isSet) {
        obj.insert(QString("parentInstanceDisplayName"), ::OpenAPI::toJsonValue(m_parent_instance_display_name));
    }
    if (m_parent_instance_id_isSet) {
        obj.insert(QString("parentInstanceId"), ::OpenAPI::toJsonValue(m_parent_instance_id));
    }
    if (m_parent_model_display_name_isSet) {
        obj.insert(QString("parentModelDisplayName"), ::OpenAPI::toJsonValue(m_parent_model_display_name));
    }
    if (m_parent_model_id_isSet) {
        obj.insert(QString("parentModelId"), ::OpenAPI::toJsonValue(m_parent_model_id));
    }
    if (m_parent_view_display_name_isSet) {
        obj.insert(QString("parentViewDisplayName"), ::OpenAPI::toJsonValue(m_parent_view_display_name));
    }
    if (m_parent_view_id_isSet) {
        obj.insert(QString("parentViewId"), ::OpenAPI::toJsonValue(m_parent_view_id));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1LookerSystemSpec::getParentInstanceDisplayName() const {
    return m_parent_instance_display_name;
}
void OAIGoogleCloudDatacatalogV1LookerSystemSpec::setParentInstanceDisplayName(const QString &parent_instance_display_name) {
    m_parent_instance_display_name = parent_instance_display_name;
    m_parent_instance_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_instance_display_name_Set() const{
    return m_parent_instance_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_instance_display_name_Valid() const{
    return m_parent_instance_display_name_isValid;
}

QString OAIGoogleCloudDatacatalogV1LookerSystemSpec::getParentInstanceId() const {
    return m_parent_instance_id;
}
void OAIGoogleCloudDatacatalogV1LookerSystemSpec::setParentInstanceId(const QString &parent_instance_id) {
    m_parent_instance_id = parent_instance_id;
    m_parent_instance_id_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_instance_id_Set() const{
    return m_parent_instance_id_isSet;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_instance_id_Valid() const{
    return m_parent_instance_id_isValid;
}

QString OAIGoogleCloudDatacatalogV1LookerSystemSpec::getParentModelDisplayName() const {
    return m_parent_model_display_name;
}
void OAIGoogleCloudDatacatalogV1LookerSystemSpec::setParentModelDisplayName(const QString &parent_model_display_name) {
    m_parent_model_display_name = parent_model_display_name;
    m_parent_model_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_model_display_name_Set() const{
    return m_parent_model_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_model_display_name_Valid() const{
    return m_parent_model_display_name_isValid;
}

QString OAIGoogleCloudDatacatalogV1LookerSystemSpec::getParentModelId() const {
    return m_parent_model_id;
}
void OAIGoogleCloudDatacatalogV1LookerSystemSpec::setParentModelId(const QString &parent_model_id) {
    m_parent_model_id = parent_model_id;
    m_parent_model_id_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_model_id_Set() const{
    return m_parent_model_id_isSet;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_model_id_Valid() const{
    return m_parent_model_id_isValid;
}

QString OAIGoogleCloudDatacatalogV1LookerSystemSpec::getParentViewDisplayName() const {
    return m_parent_view_display_name;
}
void OAIGoogleCloudDatacatalogV1LookerSystemSpec::setParentViewDisplayName(const QString &parent_view_display_name) {
    m_parent_view_display_name = parent_view_display_name;
    m_parent_view_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_view_display_name_Set() const{
    return m_parent_view_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_view_display_name_Valid() const{
    return m_parent_view_display_name_isValid;
}

QString OAIGoogleCloudDatacatalogV1LookerSystemSpec::getParentViewId() const {
    return m_parent_view_id;
}
void OAIGoogleCloudDatacatalogV1LookerSystemSpec::setParentViewId(const QString &parent_view_id) {
    m_parent_view_id = parent_view_id;
    m_parent_view_id_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_view_id_Set() const{
    return m_parent_view_id_isSet;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::is_parent_view_id_Valid() const{
    return m_parent_view_id_isValid;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parent_instance_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_model_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_model_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_view_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_view_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1LookerSystemSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
