/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1PersonalDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1PersonalDetails::OAIGoogleCloudDatacatalogV1PersonalDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1PersonalDetails::OAIGoogleCloudDatacatalogV1PersonalDetails() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1PersonalDetails::~OAIGoogleCloudDatacatalogV1PersonalDetails() {}

void OAIGoogleCloudDatacatalogV1PersonalDetails::initializeModel() {

    m_star_time_isSet = false;
    m_star_time_isValid = false;

    m_starred_isSet = false;
    m_starred_isValid = false;
}

void OAIGoogleCloudDatacatalogV1PersonalDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1PersonalDetails::fromJsonObject(QJsonObject json) {

    m_star_time_isValid = ::OpenAPI::fromJsonValue(m_star_time, json[QString("starTime")]);
    m_star_time_isSet = !json[QString("starTime")].isNull() && m_star_time_isValid;

    m_starred_isValid = ::OpenAPI::fromJsonValue(m_starred, json[QString("starred")]);
    m_starred_isSet = !json[QString("starred")].isNull() && m_starred_isValid;
}

QString OAIGoogleCloudDatacatalogV1PersonalDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1PersonalDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_star_time_isSet) {
        obj.insert(QString("starTime"), ::OpenAPI::toJsonValue(m_star_time));
    }
    if (m_starred_isSet) {
        obj.insert(QString("starred"), ::OpenAPI::toJsonValue(m_starred));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1PersonalDetails::getStarTime() const {
    return m_star_time;
}
void OAIGoogleCloudDatacatalogV1PersonalDetails::setStarTime(const QString &star_time) {
    m_star_time = star_time;
    m_star_time_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1PersonalDetails::is_star_time_Set() const{
    return m_star_time_isSet;
}

bool OAIGoogleCloudDatacatalogV1PersonalDetails::is_star_time_Valid() const{
    return m_star_time_isValid;
}

bool OAIGoogleCloudDatacatalogV1PersonalDetails::isStarred() const {
    return m_starred;
}
void OAIGoogleCloudDatacatalogV1PersonalDetails::setStarred(const bool &starred) {
    m_starred = starred;
    m_starred_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1PersonalDetails::is_starred_Set() const{
    return m_starred_isSet;
}

bool OAIGoogleCloudDatacatalogV1PersonalDetails::is_starred_Valid() const{
    return m_starred_isValid;
}

bool OAIGoogleCloudDatacatalogV1PersonalDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_star_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_starred_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1PersonalDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
