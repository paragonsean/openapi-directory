/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1Entry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1Entry::OAIGoogleCloudDatacatalogV1Entry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1Entry::OAIGoogleCloudDatacatalogV1Entry() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1Entry::~OAIGoogleCloudDatacatalogV1Entry() {}

void OAIGoogleCloudDatacatalogV1Entry::initializeModel() {

    m_bigquery_date_sharded_spec_isSet = false;
    m_bigquery_date_sharded_spec_isValid = false;

    m_bigquery_table_spec_isSet = false;
    m_bigquery_table_spec_isValid = false;

    m_business_context_isSet = false;
    m_business_context_isValid = false;

    m_cloud_bigtable_system_spec_isSet = false;
    m_cloud_bigtable_system_spec_isValid = false;

    m_data_source_isSet = false;
    m_data_source_isValid = false;

    m_data_source_connection_spec_isSet = false;
    m_data_source_connection_spec_isValid = false;

    m_database_table_spec_isSet = false;
    m_database_table_spec_isValid = false;

    m_dataset_spec_isSet = false;
    m_dataset_spec_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_feature_online_store_spec_isSet = false;
    m_feature_online_store_spec_isValid = false;

    m_fileset_spec_isSet = false;
    m_fileset_spec_isValid = false;

    m_fully_qualified_name_isSet = false;
    m_fully_qualified_name_isValid = false;

    m_gcs_fileset_spec_isSet = false;
    m_gcs_fileset_spec_isValid = false;

    m_integrated_system_isSet = false;
    m_integrated_system_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_linked_resource_isSet = false;
    m_linked_resource_isValid = false;

    m_looker_system_spec_isSet = false;
    m_looker_system_spec_isValid = false;

    m_model_spec_isSet = false;
    m_model_spec_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_personal_details_isSet = false;
    m_personal_details_isValid = false;

    m_routine_spec_isSet = false;
    m_routine_spec_isValid = false;

    m_schema_isSet = false;
    m_schema_isValid = false;

    m_service_spec_isSet = false;
    m_service_spec_isValid = false;

    m_source_system_timestamps_isSet = false;
    m_source_system_timestamps_isValid = false;

    m_sql_database_system_spec_isSet = false;
    m_sql_database_system_spec_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_usage_signal_isSet = false;
    m_usage_signal_isValid = false;

    m_user_specified_system_isSet = false;
    m_user_specified_system_isValid = false;

    m_user_specified_type_isSet = false;
    m_user_specified_type_isValid = false;
}

void OAIGoogleCloudDatacatalogV1Entry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1Entry::fromJsonObject(QJsonObject json) {

    m_bigquery_date_sharded_spec_isValid = ::OpenAPI::fromJsonValue(m_bigquery_date_sharded_spec, json[QString("bigqueryDateShardedSpec")]);
    m_bigquery_date_sharded_spec_isSet = !json[QString("bigqueryDateShardedSpec")].isNull() && m_bigquery_date_sharded_spec_isValid;

    m_bigquery_table_spec_isValid = ::OpenAPI::fromJsonValue(m_bigquery_table_spec, json[QString("bigqueryTableSpec")]);
    m_bigquery_table_spec_isSet = !json[QString("bigqueryTableSpec")].isNull() && m_bigquery_table_spec_isValid;

    m_business_context_isValid = ::OpenAPI::fromJsonValue(m_business_context, json[QString("businessContext")]);
    m_business_context_isSet = !json[QString("businessContext")].isNull() && m_business_context_isValid;

    m_cloud_bigtable_system_spec_isValid = ::OpenAPI::fromJsonValue(m_cloud_bigtable_system_spec, json[QString("cloudBigtableSystemSpec")]);
    m_cloud_bigtable_system_spec_isSet = !json[QString("cloudBigtableSystemSpec")].isNull() && m_cloud_bigtable_system_spec_isValid;

    m_data_source_isValid = ::OpenAPI::fromJsonValue(m_data_source, json[QString("dataSource")]);
    m_data_source_isSet = !json[QString("dataSource")].isNull() && m_data_source_isValid;

    m_data_source_connection_spec_isValid = ::OpenAPI::fromJsonValue(m_data_source_connection_spec, json[QString("dataSourceConnectionSpec")]);
    m_data_source_connection_spec_isSet = !json[QString("dataSourceConnectionSpec")].isNull() && m_data_source_connection_spec_isValid;

    m_database_table_spec_isValid = ::OpenAPI::fromJsonValue(m_database_table_spec, json[QString("databaseTableSpec")]);
    m_database_table_spec_isSet = !json[QString("databaseTableSpec")].isNull() && m_database_table_spec_isValid;

    m_dataset_spec_isValid = ::OpenAPI::fromJsonValue(m_dataset_spec, json[QString("datasetSpec")]);
    m_dataset_spec_isSet = !json[QString("datasetSpec")].isNull() && m_dataset_spec_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_feature_online_store_spec_isValid = ::OpenAPI::fromJsonValue(m_feature_online_store_spec, json[QString("featureOnlineStoreSpec")]);
    m_feature_online_store_spec_isSet = !json[QString("featureOnlineStoreSpec")].isNull() && m_feature_online_store_spec_isValid;

    m_fileset_spec_isValid = ::OpenAPI::fromJsonValue(m_fileset_spec, json[QString("filesetSpec")]);
    m_fileset_spec_isSet = !json[QString("filesetSpec")].isNull() && m_fileset_spec_isValid;

    m_fully_qualified_name_isValid = ::OpenAPI::fromJsonValue(m_fully_qualified_name, json[QString("fullyQualifiedName")]);
    m_fully_qualified_name_isSet = !json[QString("fullyQualifiedName")].isNull() && m_fully_qualified_name_isValid;

    m_gcs_fileset_spec_isValid = ::OpenAPI::fromJsonValue(m_gcs_fileset_spec, json[QString("gcsFilesetSpec")]);
    m_gcs_fileset_spec_isSet = !json[QString("gcsFilesetSpec")].isNull() && m_gcs_fileset_spec_isValid;

    m_integrated_system_isValid = ::OpenAPI::fromJsonValue(m_integrated_system, json[QString("integratedSystem")]);
    m_integrated_system_isSet = !json[QString("integratedSystem")].isNull() && m_integrated_system_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_linked_resource_isValid = ::OpenAPI::fromJsonValue(m_linked_resource, json[QString("linkedResource")]);
    m_linked_resource_isSet = !json[QString("linkedResource")].isNull() && m_linked_resource_isValid;

    m_looker_system_spec_isValid = ::OpenAPI::fromJsonValue(m_looker_system_spec, json[QString("lookerSystemSpec")]);
    m_looker_system_spec_isSet = !json[QString("lookerSystemSpec")].isNull() && m_looker_system_spec_isValid;

    m_model_spec_isValid = ::OpenAPI::fromJsonValue(m_model_spec, json[QString("modelSpec")]);
    m_model_spec_isSet = !json[QString("modelSpec")].isNull() && m_model_spec_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_personal_details_isValid = ::OpenAPI::fromJsonValue(m_personal_details, json[QString("personalDetails")]);
    m_personal_details_isSet = !json[QString("personalDetails")].isNull() && m_personal_details_isValid;

    m_routine_spec_isValid = ::OpenAPI::fromJsonValue(m_routine_spec, json[QString("routineSpec")]);
    m_routine_spec_isSet = !json[QString("routineSpec")].isNull() && m_routine_spec_isValid;

    m_schema_isValid = ::OpenAPI::fromJsonValue(m_schema, json[QString("schema")]);
    m_schema_isSet = !json[QString("schema")].isNull() && m_schema_isValid;

    m_service_spec_isValid = ::OpenAPI::fromJsonValue(m_service_spec, json[QString("serviceSpec")]);
    m_service_spec_isSet = !json[QString("serviceSpec")].isNull() && m_service_spec_isValid;

    m_source_system_timestamps_isValid = ::OpenAPI::fromJsonValue(m_source_system_timestamps, json[QString("sourceSystemTimestamps")]);
    m_source_system_timestamps_isSet = !json[QString("sourceSystemTimestamps")].isNull() && m_source_system_timestamps_isValid;

    m_sql_database_system_spec_isValid = ::OpenAPI::fromJsonValue(m_sql_database_system_spec, json[QString("sqlDatabaseSystemSpec")]);
    m_sql_database_system_spec_isSet = !json[QString("sqlDatabaseSystemSpec")].isNull() && m_sql_database_system_spec_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_usage_signal_isValid = ::OpenAPI::fromJsonValue(m_usage_signal, json[QString("usageSignal")]);
    m_usage_signal_isSet = !json[QString("usageSignal")].isNull() && m_usage_signal_isValid;

    m_user_specified_system_isValid = ::OpenAPI::fromJsonValue(m_user_specified_system, json[QString("userSpecifiedSystem")]);
    m_user_specified_system_isSet = !json[QString("userSpecifiedSystem")].isNull() && m_user_specified_system_isValid;

    m_user_specified_type_isValid = ::OpenAPI::fromJsonValue(m_user_specified_type, json[QString("userSpecifiedType")]);
    m_user_specified_type_isSet = !json[QString("userSpecifiedType")].isNull() && m_user_specified_type_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1Entry::asJsonObject() const {
    QJsonObject obj;
    if (m_bigquery_date_sharded_spec.isSet()) {
        obj.insert(QString("bigqueryDateShardedSpec"), ::OpenAPI::toJsonValue(m_bigquery_date_sharded_spec));
    }
    if (m_bigquery_table_spec.isSet()) {
        obj.insert(QString("bigqueryTableSpec"), ::OpenAPI::toJsonValue(m_bigquery_table_spec));
    }
    if (m_business_context.isSet()) {
        obj.insert(QString("businessContext"), ::OpenAPI::toJsonValue(m_business_context));
    }
    if (m_cloud_bigtable_system_spec.isSet()) {
        obj.insert(QString("cloudBigtableSystemSpec"), ::OpenAPI::toJsonValue(m_cloud_bigtable_system_spec));
    }
    if (m_data_source.isSet()) {
        obj.insert(QString("dataSource"), ::OpenAPI::toJsonValue(m_data_source));
    }
    if (m_data_source_connection_spec.isSet()) {
        obj.insert(QString("dataSourceConnectionSpec"), ::OpenAPI::toJsonValue(m_data_source_connection_spec));
    }
    if (m_database_table_spec.isSet()) {
        obj.insert(QString("databaseTableSpec"), ::OpenAPI::toJsonValue(m_database_table_spec));
    }
    if (m_dataset_spec.isSet()) {
        obj.insert(QString("datasetSpec"), ::OpenAPI::toJsonValue(m_dataset_spec));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_feature_online_store_spec.isSet()) {
        obj.insert(QString("featureOnlineStoreSpec"), ::OpenAPI::toJsonValue(m_feature_online_store_spec));
    }
    if (m_fileset_spec.isSet()) {
        obj.insert(QString("filesetSpec"), ::OpenAPI::toJsonValue(m_fileset_spec));
    }
    if (m_fully_qualified_name_isSet) {
        obj.insert(QString("fullyQualifiedName"), ::OpenAPI::toJsonValue(m_fully_qualified_name));
    }
    if (m_gcs_fileset_spec.isSet()) {
        obj.insert(QString("gcsFilesetSpec"), ::OpenAPI::toJsonValue(m_gcs_fileset_spec));
    }
    if (m_integrated_system_isSet) {
        obj.insert(QString("integratedSystem"), ::OpenAPI::toJsonValue(m_integrated_system));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_linked_resource_isSet) {
        obj.insert(QString("linkedResource"), ::OpenAPI::toJsonValue(m_linked_resource));
    }
    if (m_looker_system_spec.isSet()) {
        obj.insert(QString("lookerSystemSpec"), ::OpenAPI::toJsonValue(m_looker_system_spec));
    }
    if (m_model_spec.isSet()) {
        obj.insert(QString("modelSpec"), ::OpenAPI::toJsonValue(m_model_spec));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_personal_details.isSet()) {
        obj.insert(QString("personalDetails"), ::OpenAPI::toJsonValue(m_personal_details));
    }
    if (m_routine_spec.isSet()) {
        obj.insert(QString("routineSpec"), ::OpenAPI::toJsonValue(m_routine_spec));
    }
    if (m_schema.isSet()) {
        obj.insert(QString("schema"), ::OpenAPI::toJsonValue(m_schema));
    }
    if (m_service_spec.isSet()) {
        obj.insert(QString("serviceSpec"), ::OpenAPI::toJsonValue(m_service_spec));
    }
    if (m_source_system_timestamps.isSet()) {
        obj.insert(QString("sourceSystemTimestamps"), ::OpenAPI::toJsonValue(m_source_system_timestamps));
    }
    if (m_sql_database_system_spec.isSet()) {
        obj.insert(QString("sqlDatabaseSystemSpec"), ::OpenAPI::toJsonValue(m_sql_database_system_spec));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_usage_signal.isSet()) {
        obj.insert(QString("usageSignal"), ::OpenAPI::toJsonValue(m_usage_signal));
    }
    if (m_user_specified_system_isSet) {
        obj.insert(QString("userSpecifiedSystem"), ::OpenAPI::toJsonValue(m_user_specified_system));
    }
    if (m_user_specified_type_isSet) {
        obj.insert(QString("userSpecifiedType"), ::OpenAPI::toJsonValue(m_user_specified_type));
    }
    return obj;
}

OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec OAIGoogleCloudDatacatalogV1Entry::getBigqueryDateShardedSpec() const {
    return m_bigquery_date_sharded_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setBigqueryDateShardedSpec(const OAIGoogleCloudDatacatalogV1BigQueryDateShardedSpec &bigquery_date_sharded_spec) {
    m_bigquery_date_sharded_spec = bigquery_date_sharded_spec;
    m_bigquery_date_sharded_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_bigquery_date_sharded_spec_Set() const{
    return m_bigquery_date_sharded_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_bigquery_date_sharded_spec_Valid() const{
    return m_bigquery_date_sharded_spec_isValid;
}

OAIGoogleCloudDatacatalogV1BigQueryTableSpec OAIGoogleCloudDatacatalogV1Entry::getBigqueryTableSpec() const {
    return m_bigquery_table_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setBigqueryTableSpec(const OAIGoogleCloudDatacatalogV1BigQueryTableSpec &bigquery_table_spec) {
    m_bigquery_table_spec = bigquery_table_spec;
    m_bigquery_table_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_bigquery_table_spec_Set() const{
    return m_bigquery_table_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_bigquery_table_spec_Valid() const{
    return m_bigquery_table_spec_isValid;
}

OAIGoogleCloudDatacatalogV1BusinessContext OAIGoogleCloudDatacatalogV1Entry::getBusinessContext() const {
    return m_business_context;
}
void OAIGoogleCloudDatacatalogV1Entry::setBusinessContext(const OAIGoogleCloudDatacatalogV1BusinessContext &business_context) {
    m_business_context = business_context;
    m_business_context_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_business_context_Set() const{
    return m_business_context_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_business_context_Valid() const{
    return m_business_context_isValid;
}

OAIGoogleCloudDatacatalogV1CloudBigtableSystemSpec OAIGoogleCloudDatacatalogV1Entry::getCloudBigtableSystemSpec() const {
    return m_cloud_bigtable_system_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setCloudBigtableSystemSpec(const OAIGoogleCloudDatacatalogV1CloudBigtableSystemSpec &cloud_bigtable_system_spec) {
    m_cloud_bigtable_system_spec = cloud_bigtable_system_spec;
    m_cloud_bigtable_system_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_cloud_bigtable_system_spec_Set() const{
    return m_cloud_bigtable_system_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_cloud_bigtable_system_spec_Valid() const{
    return m_cloud_bigtable_system_spec_isValid;
}

OAIGoogleCloudDatacatalogV1DataSource OAIGoogleCloudDatacatalogV1Entry::getDataSource() const {
    return m_data_source;
}
void OAIGoogleCloudDatacatalogV1Entry::setDataSource(const OAIGoogleCloudDatacatalogV1DataSource &data_source) {
    m_data_source = data_source;
    m_data_source_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_data_source_Set() const{
    return m_data_source_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_data_source_Valid() const{
    return m_data_source_isValid;
}

OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec OAIGoogleCloudDatacatalogV1Entry::getDataSourceConnectionSpec() const {
    return m_data_source_connection_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setDataSourceConnectionSpec(const OAIGoogleCloudDatacatalogV1DataSourceConnectionSpec &data_source_connection_spec) {
    m_data_source_connection_spec = data_source_connection_spec;
    m_data_source_connection_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_data_source_connection_spec_Set() const{
    return m_data_source_connection_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_data_source_connection_spec_Valid() const{
    return m_data_source_connection_spec_isValid;
}

OAIGoogleCloudDatacatalogV1DatabaseTableSpec OAIGoogleCloudDatacatalogV1Entry::getDatabaseTableSpec() const {
    return m_database_table_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setDatabaseTableSpec(const OAIGoogleCloudDatacatalogV1DatabaseTableSpec &database_table_spec) {
    m_database_table_spec = database_table_spec;
    m_database_table_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_database_table_spec_Set() const{
    return m_database_table_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_database_table_spec_Valid() const{
    return m_database_table_spec_isValid;
}

OAIGoogleCloudDatacatalogV1DatasetSpec OAIGoogleCloudDatacatalogV1Entry::getDatasetSpec() const {
    return m_dataset_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setDatasetSpec(const OAIGoogleCloudDatacatalogV1DatasetSpec &dataset_spec) {
    m_dataset_spec = dataset_spec;
    m_dataset_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_dataset_spec_Set() const{
    return m_dataset_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_dataset_spec_Valid() const{
    return m_dataset_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDatacatalogV1Entry::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatacatalogV1Entry::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec OAIGoogleCloudDatacatalogV1Entry::getFeatureOnlineStoreSpec() const {
    return m_feature_online_store_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setFeatureOnlineStoreSpec(const OAIGoogleCloudDatacatalogV1FeatureOnlineStoreSpec &feature_online_store_spec) {
    m_feature_online_store_spec = feature_online_store_spec;
    m_feature_online_store_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_feature_online_store_spec_Set() const{
    return m_feature_online_store_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_feature_online_store_spec_Valid() const{
    return m_feature_online_store_spec_isValid;
}

OAIGoogleCloudDatacatalogV1FilesetSpec OAIGoogleCloudDatacatalogV1Entry::getFilesetSpec() const {
    return m_fileset_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setFilesetSpec(const OAIGoogleCloudDatacatalogV1FilesetSpec &fileset_spec) {
    m_fileset_spec = fileset_spec;
    m_fileset_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_fileset_spec_Set() const{
    return m_fileset_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_fileset_spec_Valid() const{
    return m_fileset_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::getFullyQualifiedName() const {
    return m_fully_qualified_name;
}
void OAIGoogleCloudDatacatalogV1Entry::setFullyQualifiedName(const QString &fully_qualified_name) {
    m_fully_qualified_name = fully_qualified_name;
    m_fully_qualified_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_fully_qualified_name_Set() const{
    return m_fully_qualified_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_fully_qualified_name_Valid() const{
    return m_fully_qualified_name_isValid;
}

OAIGoogleCloudDatacatalogV1GcsFilesetSpec OAIGoogleCloudDatacatalogV1Entry::getGcsFilesetSpec() const {
    return m_gcs_fileset_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setGcsFilesetSpec(const OAIGoogleCloudDatacatalogV1GcsFilesetSpec &gcs_fileset_spec) {
    m_gcs_fileset_spec = gcs_fileset_spec;
    m_gcs_fileset_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_gcs_fileset_spec_Set() const{
    return m_gcs_fileset_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_gcs_fileset_spec_Valid() const{
    return m_gcs_fileset_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::getIntegratedSystem() const {
    return m_integrated_system;
}
void OAIGoogleCloudDatacatalogV1Entry::setIntegratedSystem(const QString &integrated_system) {
    m_integrated_system = integrated_system;
    m_integrated_system_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_integrated_system_Set() const{
    return m_integrated_system_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_integrated_system_Valid() const{
    return m_integrated_system_isValid;
}

QMap<QString, QString> OAIGoogleCloudDatacatalogV1Entry::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudDatacatalogV1Entry::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::getLinkedResource() const {
    return m_linked_resource;
}
void OAIGoogleCloudDatacatalogV1Entry::setLinkedResource(const QString &linked_resource) {
    m_linked_resource = linked_resource;
    m_linked_resource_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_linked_resource_Set() const{
    return m_linked_resource_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_linked_resource_Valid() const{
    return m_linked_resource_isValid;
}

OAIGoogleCloudDatacatalogV1LookerSystemSpec OAIGoogleCloudDatacatalogV1Entry::getLookerSystemSpec() const {
    return m_looker_system_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setLookerSystemSpec(const OAIGoogleCloudDatacatalogV1LookerSystemSpec &looker_system_spec) {
    m_looker_system_spec = looker_system_spec;
    m_looker_system_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_looker_system_spec_Set() const{
    return m_looker_system_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_looker_system_spec_Valid() const{
    return m_looker_system_spec_isValid;
}

OAIGoogleCloudDatacatalogV1ModelSpec OAIGoogleCloudDatacatalogV1Entry::getModelSpec() const {
    return m_model_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setModelSpec(const OAIGoogleCloudDatacatalogV1ModelSpec &model_spec) {
    m_model_spec = model_spec;
    m_model_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_model_spec_Set() const{
    return m_model_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_model_spec_Valid() const{
    return m_model_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::getName() const {
    return m_name;
}
void OAIGoogleCloudDatacatalogV1Entry::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudDatacatalogV1PersonalDetails OAIGoogleCloudDatacatalogV1Entry::getPersonalDetails() const {
    return m_personal_details;
}
void OAIGoogleCloudDatacatalogV1Entry::setPersonalDetails(const OAIGoogleCloudDatacatalogV1PersonalDetails &personal_details) {
    m_personal_details = personal_details;
    m_personal_details_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_personal_details_Set() const{
    return m_personal_details_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_personal_details_Valid() const{
    return m_personal_details_isValid;
}

OAIGoogleCloudDatacatalogV1RoutineSpec OAIGoogleCloudDatacatalogV1Entry::getRoutineSpec() const {
    return m_routine_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setRoutineSpec(const OAIGoogleCloudDatacatalogV1RoutineSpec &routine_spec) {
    m_routine_spec = routine_spec;
    m_routine_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_routine_spec_Set() const{
    return m_routine_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_routine_spec_Valid() const{
    return m_routine_spec_isValid;
}

OAIGoogleCloudDatacatalogV1Schema OAIGoogleCloudDatacatalogV1Entry::getSchema() const {
    return m_schema;
}
void OAIGoogleCloudDatacatalogV1Entry::setSchema(const OAIGoogleCloudDatacatalogV1Schema &schema) {
    m_schema = schema;
    m_schema_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_schema_Set() const{
    return m_schema_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_schema_Valid() const{
    return m_schema_isValid;
}

OAIGoogleCloudDatacatalogV1ServiceSpec OAIGoogleCloudDatacatalogV1Entry::getServiceSpec() const {
    return m_service_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setServiceSpec(const OAIGoogleCloudDatacatalogV1ServiceSpec &service_spec) {
    m_service_spec = service_spec;
    m_service_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_service_spec_Set() const{
    return m_service_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_service_spec_Valid() const{
    return m_service_spec_isValid;
}

OAIGoogleCloudDatacatalogV1SystemTimestamps OAIGoogleCloudDatacatalogV1Entry::getSourceSystemTimestamps() const {
    return m_source_system_timestamps;
}
void OAIGoogleCloudDatacatalogV1Entry::setSourceSystemTimestamps(const OAIGoogleCloudDatacatalogV1SystemTimestamps &source_system_timestamps) {
    m_source_system_timestamps = source_system_timestamps;
    m_source_system_timestamps_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_source_system_timestamps_Set() const{
    return m_source_system_timestamps_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_source_system_timestamps_Valid() const{
    return m_source_system_timestamps_isValid;
}

OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec OAIGoogleCloudDatacatalogV1Entry::getSqlDatabaseSystemSpec() const {
    return m_sql_database_system_spec;
}
void OAIGoogleCloudDatacatalogV1Entry::setSqlDatabaseSystemSpec(const OAIGoogleCloudDatacatalogV1SqlDatabaseSystemSpec &sql_database_system_spec) {
    m_sql_database_system_spec = sql_database_system_spec;
    m_sql_database_system_spec_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_sql_database_system_spec_Set() const{
    return m_sql_database_system_spec_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_sql_database_system_spec_Valid() const{
    return m_sql_database_system_spec_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::getType() const {
    return m_type;
}
void OAIGoogleCloudDatacatalogV1Entry::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_type_Valid() const{
    return m_type_isValid;
}

OAIGoogleCloudDatacatalogV1UsageSignal OAIGoogleCloudDatacatalogV1Entry::getUsageSignal() const {
    return m_usage_signal;
}
void OAIGoogleCloudDatacatalogV1Entry::setUsageSignal(const OAIGoogleCloudDatacatalogV1UsageSignal &usage_signal) {
    m_usage_signal = usage_signal;
    m_usage_signal_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_usage_signal_Set() const{
    return m_usage_signal_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_usage_signal_Valid() const{
    return m_usage_signal_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::getUserSpecifiedSystem() const {
    return m_user_specified_system;
}
void OAIGoogleCloudDatacatalogV1Entry::setUserSpecifiedSystem(const QString &user_specified_system) {
    m_user_specified_system = user_specified_system;
    m_user_specified_system_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_user_specified_system_Set() const{
    return m_user_specified_system_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_user_specified_system_Valid() const{
    return m_user_specified_system_isValid;
}

QString OAIGoogleCloudDatacatalogV1Entry::getUserSpecifiedType() const {
    return m_user_specified_type;
}
void OAIGoogleCloudDatacatalogV1Entry::setUserSpecifiedType(const QString &user_specified_type) {
    m_user_specified_type = user_specified_type;
    m_user_specified_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_user_specified_type_Set() const{
    return m_user_specified_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1Entry::is_user_specified_type_Valid() const{
    return m_user_specified_type_isValid;
}

bool OAIGoogleCloudDatacatalogV1Entry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bigquery_date_sharded_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigquery_table_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_context.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cloud_bigtable_system_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_source_connection_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_database_table_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dataset_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_online_store_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fileset_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fully_qualified_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_fileset_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_integrated_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_linked_resource_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_looker_system_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personal_details.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_routine_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_system_timestamps.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sql_database_system_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usage_signal.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_specified_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_specified_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1Entry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
