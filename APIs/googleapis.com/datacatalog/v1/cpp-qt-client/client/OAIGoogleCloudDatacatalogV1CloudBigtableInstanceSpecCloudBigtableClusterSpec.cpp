/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::~OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec() {}

void OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_linked_resource_isSet = false;
    m_linked_resource_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_linked_resource_isValid = ::OpenAPI::fromJsonValue(m_linked_resource, json[QString("linkedResource")]);
    m_linked_resource_isSet = !json[QString("linkedResource")].isNull() && m_linked_resource_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_linked_resource_isSet) {
        obj.insert(QString("linkedResource"), ::OpenAPI::toJsonValue(m_linked_resource));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::getLinkedResource() const {
    return m_linked_resource;
}
void OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::setLinkedResource(const QString &linked_resource) {
    m_linked_resource = linked_resource;
    m_linked_resource_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::is_linked_resource_Set() const{
    return m_linked_resource_isSet;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::is_linked_resource_Valid() const{
    return m_linked_resource_isValid;
}

QString OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::getLocation() const {
    return m_location;
}
void OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::is_location_Set() const{
    return m_location_isSet;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::is_location_Valid() const{
    return m_location_isValid;
}

QString OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::getType() const {
    return m_type;
}
void OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_linked_resource_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1CloudBigtableInstanceSpecCloudBigtableClusterSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
