/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1SerializedTaxonomy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1SerializedTaxonomy::OAIGoogleCloudDatacatalogV1SerializedTaxonomy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1SerializedTaxonomy::OAIGoogleCloudDatacatalogV1SerializedTaxonomy() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1SerializedTaxonomy::~OAIGoogleCloudDatacatalogV1SerializedTaxonomy() {}

void OAIGoogleCloudDatacatalogV1SerializedTaxonomy::initializeModel() {

    m_activated_policy_types_isSet = false;
    m_activated_policy_types_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_policy_tags_isSet = false;
    m_policy_tags_isValid = false;
}

void OAIGoogleCloudDatacatalogV1SerializedTaxonomy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1SerializedTaxonomy::fromJsonObject(QJsonObject json) {

    m_activated_policy_types_isValid = ::OpenAPI::fromJsonValue(m_activated_policy_types, json[QString("activatedPolicyTypes")]);
    m_activated_policy_types_isSet = !json[QString("activatedPolicyTypes")].isNull() && m_activated_policy_types_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_policy_tags_isValid = ::OpenAPI::fromJsonValue(m_policy_tags, json[QString("policyTags")]);
    m_policy_tags_isSet = !json[QString("policyTags")].isNull() && m_policy_tags_isValid;
}

QString OAIGoogleCloudDatacatalogV1SerializedTaxonomy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1SerializedTaxonomy::asJsonObject() const {
    QJsonObject obj;
    if (m_activated_policy_types.size() > 0) {
        obj.insert(QString("activatedPolicyTypes"), ::OpenAPI::toJsonValue(m_activated_policy_types));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_policy_tags.size() > 0) {
        obj.insert(QString("policyTags"), ::OpenAPI::toJsonValue(m_policy_tags));
    }
    return obj;
}

QList<QString> OAIGoogleCloudDatacatalogV1SerializedTaxonomy::getActivatedPolicyTypes() const {
    return m_activated_policy_types;
}
void OAIGoogleCloudDatacatalogV1SerializedTaxonomy::setActivatedPolicyTypes(const QList<QString> &activated_policy_types) {
    m_activated_policy_types = activated_policy_types;
    m_activated_policy_types_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::is_activated_policy_types_Set() const{
    return m_activated_policy_types_isSet;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::is_activated_policy_types_Valid() const{
    return m_activated_policy_types_isValid;
}

QString OAIGoogleCloudDatacatalogV1SerializedTaxonomy::getDescription() const {
    return m_description;
}
void OAIGoogleCloudDatacatalogV1SerializedTaxonomy::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudDatacatalogV1SerializedTaxonomy::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudDatacatalogV1SerializedTaxonomy::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIGoogleCloudDatacatalogV1SerializedPolicyTag> OAIGoogleCloudDatacatalogV1SerializedTaxonomy::getPolicyTags() const {
    return m_policy_tags;
}
void OAIGoogleCloudDatacatalogV1SerializedTaxonomy::setPolicyTags(const QList<OAIGoogleCloudDatacatalogV1SerializedPolicyTag> &policy_tags) {
    m_policy_tags = policy_tags;
    m_policy_tags_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::is_policy_tags_Set() const{
    return m_policy_tags_isSet;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::is_policy_tags_Valid() const{
    return m_policy_tags_isValid;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activated_policy_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_policy_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1SerializedTaxonomy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
