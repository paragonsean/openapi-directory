/**
 * Google Cloud Data Catalog API
 * A fully managed and highly scalable data discovery and metadata management service. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudDatacatalogV1Tag.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudDatacatalogV1Tag::OAIGoogleCloudDatacatalogV1Tag(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudDatacatalogV1Tag::OAIGoogleCloudDatacatalogV1Tag() {
    this->initializeModel();
}

OAIGoogleCloudDatacatalogV1Tag::~OAIGoogleCloudDatacatalogV1Tag() {}

void OAIGoogleCloudDatacatalogV1Tag::initializeModel() {

    m_column_isSet = false;
    m_column_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_r_template_isSet = false;
    m_r_template_isValid = false;

    m_template_display_name_isSet = false;
    m_template_display_name_isValid = false;
}

void OAIGoogleCloudDatacatalogV1Tag::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudDatacatalogV1Tag::fromJsonObject(QJsonObject json) {

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_r_template_isValid = ::OpenAPI::fromJsonValue(m_r_template, json[QString("template")]);
    m_r_template_isSet = !json[QString("template")].isNull() && m_r_template_isValid;

    m_template_display_name_isValid = ::OpenAPI::fromJsonValue(m_template_display_name, json[QString("templateDisplayName")]);
    m_template_display_name_isSet = !json[QString("templateDisplayName")].isNull() && m_template_display_name_isValid;
}

QString OAIGoogleCloudDatacatalogV1Tag::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudDatacatalogV1Tag::asJsonObject() const {
    QJsonObject obj;
    if (m_column_isSet) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_fields.size() > 0) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_r_template_isSet) {
        obj.insert(QString("template"), ::OpenAPI::toJsonValue(m_r_template));
    }
    if (m_template_display_name_isSet) {
        obj.insert(QString("templateDisplayName"), ::OpenAPI::toJsonValue(m_template_display_name));
    }
    return obj;
}

QString OAIGoogleCloudDatacatalogV1Tag::getColumn() const {
    return m_column;
}
void OAIGoogleCloudDatacatalogV1Tag::setColumn(const QString &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_column_Set() const{
    return m_column_isSet;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_column_Valid() const{
    return m_column_isValid;
}

QMap<QString, OAIGoogleCloudDatacatalogV1TagField> OAIGoogleCloudDatacatalogV1Tag::getFields() const {
    return m_fields;
}
void OAIGoogleCloudDatacatalogV1Tag::setFields(const QMap<QString, OAIGoogleCloudDatacatalogV1TagField> &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_fields_Valid() const{
    return m_fields_isValid;
}

QString OAIGoogleCloudDatacatalogV1Tag::getName() const {
    return m_name;
}
void OAIGoogleCloudDatacatalogV1Tag::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudDatacatalogV1Tag::getRTemplate() const {
    return m_r_template;
}
void OAIGoogleCloudDatacatalogV1Tag::setRTemplate(const QString &r_template) {
    m_r_template = r_template;
    m_r_template_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_r_template_Set() const{
    return m_r_template_isSet;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_r_template_Valid() const{
    return m_r_template_isValid;
}

QString OAIGoogleCloudDatacatalogV1Tag::getTemplateDisplayName() const {
    return m_template_display_name;
}
void OAIGoogleCloudDatacatalogV1Tag::setTemplateDisplayName(const QString &template_display_name) {
    m_template_display_name = template_display_name;
    m_template_display_name_isSet = true;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_template_display_name_Set() const{
    return m_template_display_name_isSet;
}

bool OAIGoogleCloudDatacatalogV1Tag::is_template_display_name_Valid() const{
    return m_template_display_name_isValid;
}

bool OAIGoogleCloudDatacatalogV1Tag::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudDatacatalogV1Tag::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
