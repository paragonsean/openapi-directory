/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ForwardingRule from './ForwardingRule';

/**
 * The DnsForwarding model module.
 * @module model/DnsForwarding
 * @version v1
 */
class DnsForwarding {
    /**
     * Constructs a new <code>DnsForwarding</code>.
     * DNS forwarding config. This config defines a list of domain to name server mappings, and is attached to the private cloud for custom domain resolution.
     * @alias module:model/DnsForwarding
     */
    constructor() { 
        
        DnsForwarding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DnsForwarding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DnsForwarding} obj Optional instance to populate.
     * @return {module:model/DnsForwarding} The populated <code>DnsForwarding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DnsForwarding();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('forwardingRules')) {
                obj['forwardingRules'] = ApiClient.convertToType(data['forwardingRules'], [ForwardingRule]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DnsForwarding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DnsForwarding</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        if (data['forwardingRules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['forwardingRules'])) {
                throw new Error("Expected the field `forwardingRules` to be an array in the JSON data but got " + data['forwardingRules']);
            }
            // validate the optional field `forwardingRules` (array)
            for (const item of data['forwardingRules']) {
                ForwardingRule.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. Creation time of this resource.
 * @member {String} createTime
 */
DnsForwarding.prototype['createTime'] = undefined;

/**
 * Required. List of domain mappings to configure
 * @member {Array.<module:model/ForwardingRule>} forwardingRules
 */
DnsForwarding.prototype['forwardingRules'] = undefined;

/**
 * Output only. The resource name of this DNS profile. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/dnsForwarding`
 * @member {String} name
 */
DnsForwarding.prototype['name'] = undefined;

/**
 * Output only. Last update time of this resource.
 * @member {String} updateTime
 */
DnsForwarding.prototype['updateTime'] = undefined;






export default DnsForwarding;

