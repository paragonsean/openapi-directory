/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StretchedClusterConfig model module.
 * @module model/StretchedClusterConfig
 * @version v1
 */
class StretchedClusterConfig {
    /**
     * Constructs a new <code>StretchedClusterConfig</code>.
     * Configuration of a stretched cluster.
     * @alias module:model/StretchedClusterConfig
     */
    constructor() { 
        
        StretchedClusterConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StretchedClusterConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StretchedClusterConfig} obj Optional instance to populate.
     * @return {module:model/StretchedClusterConfig} The populated <code>StretchedClusterConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StretchedClusterConfig();

            if (data.hasOwnProperty('preferredLocation')) {
                obj['preferredLocation'] = ApiClient.convertToType(data['preferredLocation'], 'String');
            }
            if (data.hasOwnProperty('secondaryLocation')) {
                obj['secondaryLocation'] = ApiClient.convertToType(data['secondaryLocation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StretchedClusterConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StretchedClusterConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['preferredLocation'] && !(typeof data['preferredLocation'] === 'string' || data['preferredLocation'] instanceof String)) {
            throw new Error("Expected the field `preferredLocation` to be a primitive type in the JSON string but got " + data['preferredLocation']);
        }
        // ensure the json data is a string
        if (data['secondaryLocation'] && !(typeof data['secondaryLocation'] === 'string' || data['secondaryLocation'] instanceof String)) {
            throw new Error("Expected the field `secondaryLocation` to be a primitive type in the JSON string but got " + data['secondaryLocation']);
        }

        return true;
    }


}



/**
 * Required. Zone that will remain operational when connection between the two zones is lost. Specify the resource name of a zone that belongs to the region of the private cloud. For example: `projects/{project}/locations/europe-west3-a` where `{project}` can either be a project number or a project ID.
 * @member {String} preferredLocation
 */
StretchedClusterConfig.prototype['preferredLocation'] = undefined;

/**
 * Required. Additional zone for a higher level of availability and load balancing. Specify the resource name of a zone that belongs to the region of the private cloud. For example: `projects/{project}/locations/europe-west3-b` where `{project}` can either be a project number or a project ID.
 * @member {String} secondaryLocation
 */
StretchedClusterConfig.prototype['secondaryLocation'] = undefined;






export default StretchedClusterConfig;

