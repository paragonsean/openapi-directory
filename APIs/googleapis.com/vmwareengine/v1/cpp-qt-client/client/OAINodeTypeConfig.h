/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodeTypeConfig.h
 *
 * Information about the type and number of nodes associated with the cluster.
 */

#ifndef OAINodeTypeConfig_H
#define OAINodeTypeConfig_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINodeTypeConfig : public OAIObject {
public:
    OAINodeTypeConfig();
    OAINodeTypeConfig(QString json);
    ~OAINodeTypeConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCustomCoreCount() const;
    void setCustomCoreCount(const qint32 &custom_core_count);
    bool is_custom_core_count_Set() const;
    bool is_custom_core_count_Valid() const;

    qint32 getNodeCount() const;
    void setNodeCount(const qint32 &node_count);
    bool is_node_count_Set() const;
    bool is_node_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_custom_core_count;
    bool m_custom_core_count_isSet;
    bool m_custom_core_count_isValid;

    qint32 m_node_count;
    bool m_node_count_isSet;
    bool m_node_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodeTypeConfig)

#endif // OAINodeTypeConfig_H
