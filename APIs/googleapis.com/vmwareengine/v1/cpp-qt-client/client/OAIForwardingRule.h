/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIForwardingRule.h
 *
 * A forwarding rule is a mapping of a &#x60;domain&#x60; to &#x60;name_servers&#x60;. This mapping allows VMware Engine to resolve domains for attached private clouds by forwarding DNS requests for a given domain to the specified nameservers.
 */

#ifndef OAIForwardingRule_H
#define OAIForwardingRule_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIForwardingRule : public OAIObject {
public:
    OAIForwardingRule();
    OAIForwardingRule(QString json);
    ~OAIForwardingRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QList<QString> getNameServers() const;
    void setNameServers(const QList<QString> &name_servers);
    bool is_name_servers_Set() const;
    bool is_name_servers_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QList<QString> m_name_servers;
    bool m_name_servers_isSet;
    bool m_name_servers_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIForwardingRule)

#endif // OAIForwardingRule_H
