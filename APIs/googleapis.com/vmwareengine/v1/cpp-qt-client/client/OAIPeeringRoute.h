/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPeeringRoute.h
 *
 * Exchanged network peering route.
 */

#ifndef OAIPeeringRoute_H
#define OAIPeeringRoute_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPeeringRoute : public OAIObject {
public:
    OAIPeeringRoute();
    OAIPeeringRoute(QString json);
    ~OAIPeeringRoute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDestRange() const;
    void setDestRange(const QString &dest_range);
    bool is_dest_range_Set() const;
    bool is_dest_range_Valid() const;

    QString getDirection() const;
    void setDirection(const QString &direction);
    bool is_direction_Set() const;
    bool is_direction_Valid() const;

    bool isImported() const;
    void setImported(const bool &imported);
    bool is_imported_Set() const;
    bool is_imported_Valid() const;

    QString getNextHopRegion() const;
    void setNextHopRegion(const QString &next_hop_region);
    bool is_next_hop_region_Set() const;
    bool is_next_hop_region_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dest_range;
    bool m_dest_range_isSet;
    bool m_dest_range_isValid;

    QString m_direction;
    bool m_direction_isSet;
    bool m_direction_isValid;

    bool m_imported;
    bool m_imported_isSet;
    bool m_imported_isValid;

    QString m_next_hop_region;
    bool m_next_hop_region_isSet;
    bool m_next_hop_region_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPeeringRoute)

#endif // OAIPeeringRoute_H
