/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIpRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIpRange::OAIIpRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIpRange::OAIIpRange() {
    this->initializeModel();
}

OAIIpRange::~OAIIpRange() {}

void OAIIpRange::initializeModel() {

    m_external_address_isSet = false;
    m_external_address_isValid = false;

    m_ip_address_isSet = false;
    m_ip_address_isValid = false;

    m_ip_address_range_isSet = false;
    m_ip_address_range_isValid = false;
}

void OAIIpRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIpRange::fromJsonObject(QJsonObject json) {

    m_external_address_isValid = ::OpenAPI::fromJsonValue(m_external_address, json[QString("externalAddress")]);
    m_external_address_isSet = !json[QString("externalAddress")].isNull() && m_external_address_isValid;

    m_ip_address_isValid = ::OpenAPI::fromJsonValue(m_ip_address, json[QString("ipAddress")]);
    m_ip_address_isSet = !json[QString("ipAddress")].isNull() && m_ip_address_isValid;

    m_ip_address_range_isValid = ::OpenAPI::fromJsonValue(m_ip_address_range, json[QString("ipAddressRange")]);
    m_ip_address_range_isSet = !json[QString("ipAddressRange")].isNull() && m_ip_address_range_isValid;
}

QString OAIIpRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIpRange::asJsonObject() const {
    QJsonObject obj;
    if (m_external_address_isSet) {
        obj.insert(QString("externalAddress"), ::OpenAPI::toJsonValue(m_external_address));
    }
    if (m_ip_address_isSet) {
        obj.insert(QString("ipAddress"), ::OpenAPI::toJsonValue(m_ip_address));
    }
    if (m_ip_address_range_isSet) {
        obj.insert(QString("ipAddressRange"), ::OpenAPI::toJsonValue(m_ip_address_range));
    }
    return obj;
}

QString OAIIpRange::getExternalAddress() const {
    return m_external_address;
}
void OAIIpRange::setExternalAddress(const QString &external_address) {
    m_external_address = external_address;
    m_external_address_isSet = true;
}

bool OAIIpRange::is_external_address_Set() const{
    return m_external_address_isSet;
}

bool OAIIpRange::is_external_address_Valid() const{
    return m_external_address_isValid;
}

QString OAIIpRange::getIpAddress() const {
    return m_ip_address;
}
void OAIIpRange::setIpAddress(const QString &ip_address) {
    m_ip_address = ip_address;
    m_ip_address_isSet = true;
}

bool OAIIpRange::is_ip_address_Set() const{
    return m_ip_address_isSet;
}

bool OAIIpRange::is_ip_address_Valid() const{
    return m_ip_address_isValid;
}

QString OAIIpRange::getIpAddressRange() const {
    return m_ip_address_range;
}
void OAIIpRange::setIpAddressRange(const QString &ip_address_range) {
    m_ip_address_range = ip_address_range;
    m_ip_address_range_isSet = true;
}

bool OAIIpRange::is_ip_address_range_Set() const{
    return m_ip_address_range_isSet;
}

bool OAIIpRange::is_ip_address_range_Valid() const{
    return m_ip_address_range_isValid;
}

bool OAIIpRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_external_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_address_range_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIpRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
