/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivateCloud.h
 *
 * Represents a private cloud resource. Private clouds of type &#x60;STANDARD&#x60; and &#x60;TIME_LIMITED&#x60; are zonal resources, &#x60;STRETCHED&#x60; private clouds are regional.
 */

#ifndef OAIPrivateCloud_H
#define OAIPrivateCloud_H

#include <QJsonObject>

#include "OAIHcx.h"
#include "OAIManagementCluster.h"
#include "OAINetworkConfig.h"
#include "OAINsx.h"
#include "OAIVcenter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHcx;
class OAIManagementCluster;
class OAINetworkConfig;
class OAINsx;
class OAIVcenter;

class OAIPrivateCloud : public OAIObject {
public:
    OAIPrivateCloud();
    OAIPrivateCloud(QString json);
    ~OAIPrivateCloud() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDeleteTime() const;
    void setDeleteTime(const QString &delete_time);
    bool is_delete_time_Set() const;
    bool is_delete_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExpireTime() const;
    void setExpireTime(const QString &expire_time);
    bool is_expire_time_Set() const;
    bool is_expire_time_Valid() const;

    OAIHcx getHcx() const;
    void setHcx(const OAIHcx &hcx);
    bool is_hcx_Set() const;
    bool is_hcx_Valid() const;

    OAIManagementCluster getManagementCluster() const;
    void setManagementCluster(const OAIManagementCluster &management_cluster);
    bool is_management_cluster_Set() const;
    bool is_management_cluster_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINetworkConfig getNetworkConfig() const;
    void setNetworkConfig(const OAINetworkConfig &network_config);
    bool is_network_config_Set() const;
    bool is_network_config_Valid() const;

    OAINsx getNsx() const;
    void setNsx(const OAINsx &nsx);
    bool is_nsx_Set() const;
    bool is_nsx_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    OAIVcenter getVcenter() const;
    void setVcenter(const OAIVcenter &vcenter);
    bool is_vcenter_Set() const;
    bool is_vcenter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_delete_time;
    bool m_delete_time_isSet;
    bool m_delete_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_expire_time;
    bool m_expire_time_isSet;
    bool m_expire_time_isValid;

    OAIHcx m_hcx;
    bool m_hcx_isSet;
    bool m_hcx_isValid;

    OAIManagementCluster m_management_cluster;
    bool m_management_cluster_isSet;
    bool m_management_cluster_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINetworkConfig m_network_config;
    bool m_network_config_isSet;
    bool m_network_config_isValid;

    OAINsx m_nsx;
    bool m_nsx_isSet;
    bool m_nsx_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    OAIVcenter m_vcenter;
    bool m_vcenter_isSet;
    bool m_vcenter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivateCloud)

#endif // OAIPrivateCloud_H
