/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkConfig.h
 *
 * Network configuration in the consumer project with which the peering has to be done.
 */

#ifndef OAINetworkConfig_H
#define OAINetworkConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetworkConfig : public OAIObject {
public:
    OAINetworkConfig();
    OAINetworkConfig(QString json);
    ~OAINetworkConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDnsServerIp() const;
    void setDnsServerIp(const QString &dns_server_ip);
    bool is_dns_server_ip_Set() const;
    bool is_dns_server_ip_Valid() const;

    QString getManagementCidr() const;
    void setManagementCidr(const QString &management_cidr);
    bool is_management_cidr_Set() const;
    bool is_management_cidr_Valid() const;

    qint32 getManagementIpAddressLayoutVersion() const;
    void setManagementIpAddressLayoutVersion(const qint32 &management_ip_address_layout_version);
    bool is_management_ip_address_layout_version_Set() const;
    bool is_management_ip_address_layout_version_Valid() const;

    QString getVmwareEngineNetwork() const;
    void setVmwareEngineNetwork(const QString &vmware_engine_network);
    bool is_vmware_engine_network_Set() const;
    bool is_vmware_engine_network_Valid() const;

    QString getVmwareEngineNetworkCanonical() const;
    void setVmwareEngineNetworkCanonical(const QString &vmware_engine_network_canonical);
    bool is_vmware_engine_network_canonical_Set() const;
    bool is_vmware_engine_network_canonical_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dns_server_ip;
    bool m_dns_server_ip_isSet;
    bool m_dns_server_ip_isValid;

    QString m_management_cidr;
    bool m_management_cidr_isSet;
    bool m_management_cidr_isValid;

    qint32 m_management_ip_address_layout_version;
    bool m_management_ip_address_layout_version_isSet;
    bool m_management_ip_address_layout_version_isValid;

    QString m_vmware_engine_network;
    bool m_vmware_engine_network_isSet;
    bool m_vmware_engine_network_isValid;

    QString m_vmware_engine_network_canonical;
    bool m_vmware_engine_network_canonical_isSet;
    bool m_vmware_engine_network_canonical_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkConfig)

#endif // OAINetworkConfig_H
