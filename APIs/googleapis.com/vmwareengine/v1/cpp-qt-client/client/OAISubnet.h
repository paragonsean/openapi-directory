/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubnet.h
 *
 * Subnet in a private cloud. Either &#x60;management&#x60; subnets (such as vMotion) that are read-only, or &#x60;userDefined&#x60;, which can also be updated.
 */

#ifndef OAISubnet_H
#define OAISubnet_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISubnet : public OAIObject {
public:
    OAISubnet();
    OAISubnet(QString json);
    ~OAISubnet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGatewayIp() const;
    void setGatewayIp(const QString &gateway_ip);
    bool is_gateway_ip_Set() const;
    bool is_gateway_ip_Valid() const;

    QString getIpCidrRange() const;
    void setIpCidrRange(const QString &ip_cidr_range);
    bool is_ip_cidr_range_Set() const;
    bool is_ip_cidr_range_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getVlanId() const;
    void setVlanId(const qint32 &vlan_id);
    bool is_vlan_id_Set() const;
    bool is_vlan_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_gateway_ip;
    bool m_gateway_ip_isSet;
    bool m_gateway_ip_isValid;

    QString m_ip_cidr_range;
    bool m_ip_cidr_range_isSet;
    bool m_ip_cidr_range_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_vlan_id;
    bool m_vlan_id_isSet;
    bool m_vlan_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubnet)

#endif // OAISubnet_H
