/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExternalAccessRule.h
 *
 * External access firewall rules for filtering incoming traffic destined to &#x60;ExternalAddress&#x60; resources.
 */

#ifndef OAIExternalAccessRule_H
#define OAIExternalAccessRule_H

#include <QJsonObject>

#include "OAIIpRange.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIpRange;

class OAIExternalAccessRule : public OAIObject {
public:
    OAIExternalAccessRule();
    OAIExternalAccessRule(QString json);
    ~OAIExternalAccessRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIIpRange> getDestinationIpRanges() const;
    void setDestinationIpRanges(const QList<OAIIpRange> &destination_ip_ranges);
    bool is_destination_ip_ranges_Set() const;
    bool is_destination_ip_ranges_Valid() const;

    QList<QString> getDestinationPorts() const;
    void setDestinationPorts(const QList<QString> &destination_ports);
    bool is_destination_ports_Set() const;
    bool is_destination_ports_Valid() const;

    QString getIpProtocol() const;
    void setIpProtocol(const QString &ip_protocol);
    bool is_ip_protocol_Set() const;
    bool is_ip_protocol_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QList<OAIIpRange> getSourceIpRanges() const;
    void setSourceIpRanges(const QList<OAIIpRange> &source_ip_ranges);
    bool is_source_ip_ranges_Set() const;
    bool is_source_ip_ranges_Valid() const;

    QList<QString> getSourcePorts() const;
    void setSourcePorts(const QList<QString> &source_ports);
    bool is_source_ports_Set() const;
    bool is_source_ports_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIIpRange> m_destination_ip_ranges;
    bool m_destination_ip_ranges_isSet;
    bool m_destination_ip_ranges_isValid;

    QList<QString> m_destination_ports;
    bool m_destination_ports_isSet;
    bool m_destination_ports_isValid;

    QString m_ip_protocol;
    bool m_ip_protocol_isSet;
    bool m_ip_protocol_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QList<OAIIpRange> m_source_ip_ranges;
    bool m_source_ip_ranges_isSet;
    bool m_source_ip_ranges_isValid;

    QList<QString> m_source_ports;
    bool m_source_ports_isSet;
    bool m_source_ports_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExternalAccessRule)

#endif // OAIExternalAccessRule_H
