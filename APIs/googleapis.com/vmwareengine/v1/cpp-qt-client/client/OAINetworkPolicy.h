/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINetworkPolicy.h
 *
 * Represents a network policy resource. Network policies are regional resources. You can use a network policy to enable or disable internet access and external IP access. Network policies are associated with a VMware Engine network, which might span across regions. For a given region, a network policy applies to all private clouds in the VMware Engine network associated with the policy.
 */

#ifndef OAINetworkPolicy_H
#define OAINetworkPolicy_H

#include <QJsonObject>

#include "OAINetworkService.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINetworkService;

class OAINetworkPolicy : public OAIObject {
public:
    OAINetworkPolicy();
    OAINetworkPolicy(QString json);
    ~OAINetworkPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEdgeServicesCidr() const;
    void setEdgeServicesCidr(const QString &edge_services_cidr);
    bool is_edge_services_cidr_Set() const;
    bool is_edge_services_cidr_Valid() const;

    OAINetworkService getExternalIp() const;
    void setExternalIp(const OAINetworkService &external_ip);
    bool is_external_ip_Set() const;
    bool is_external_ip_Valid() const;

    OAINetworkService getInternetAccess() const;
    void setInternetAccess(const OAINetworkService &internet_access);
    bool is_internet_access_Set() const;
    bool is_internet_access_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    QString getVmwareEngineNetwork() const;
    void setVmwareEngineNetwork(const QString &vmware_engine_network);
    bool is_vmware_engine_network_Set() const;
    bool is_vmware_engine_network_Valid() const;

    QString getVmwareEngineNetworkCanonical() const;
    void setVmwareEngineNetworkCanonical(const QString &vmware_engine_network_canonical);
    bool is_vmware_engine_network_canonical_Set() const;
    bool is_vmware_engine_network_canonical_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_edge_services_cidr;
    bool m_edge_services_cidr_isSet;
    bool m_edge_services_cidr_isValid;

    OAINetworkService m_external_ip;
    bool m_external_ip_isSet;
    bool m_external_ip_isValid;

    OAINetworkService m_internet_access;
    bool m_internet_access_isSet;
    bool m_internet_access_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    QString m_vmware_engine_network;
    bool m_vmware_engine_network_isSet;
    bool m_vmware_engine_network_isValid;

    QString m_vmware_engine_network_canonical;
    bool m_vmware_engine_network_canonical_isSet;
    bool m_vmware_engine_network_canonical_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetworkPolicy)

#endif // OAINetworkPolicy_H
