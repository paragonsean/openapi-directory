/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDnsForwarding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDnsForwarding::OAIDnsForwarding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDnsForwarding::OAIDnsForwarding() {
    this->initializeModel();
}

OAIDnsForwarding::~OAIDnsForwarding() {}

void OAIDnsForwarding::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_forwarding_rules_isSet = false;
    m_forwarding_rules_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIDnsForwarding::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDnsForwarding::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_forwarding_rules_isValid = ::OpenAPI::fromJsonValue(m_forwarding_rules, json[QString("forwardingRules")]);
    m_forwarding_rules_isSet = !json[QString("forwardingRules")].isNull() && m_forwarding_rules_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIDnsForwarding::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDnsForwarding::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_forwarding_rules.size() > 0) {
        obj.insert(QString("forwardingRules"), ::OpenAPI::toJsonValue(m_forwarding_rules));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIDnsForwarding::getCreateTime() const {
    return m_create_time;
}
void OAIDnsForwarding::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIDnsForwarding::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIDnsForwarding::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QList<OAIForwardingRule> OAIDnsForwarding::getForwardingRules() const {
    return m_forwarding_rules;
}
void OAIDnsForwarding::setForwardingRules(const QList<OAIForwardingRule> &forwarding_rules) {
    m_forwarding_rules = forwarding_rules;
    m_forwarding_rules_isSet = true;
}

bool OAIDnsForwarding::is_forwarding_rules_Set() const{
    return m_forwarding_rules_isSet;
}

bool OAIDnsForwarding::is_forwarding_rules_Valid() const{
    return m_forwarding_rules_isValid;
}

QString OAIDnsForwarding::getName() const {
    return m_name;
}
void OAIDnsForwarding::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDnsForwarding::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDnsForwarding::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIDnsForwarding::getUpdateTime() const {
    return m_update_time;
}
void OAIDnsForwarding::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIDnsForwarding::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIDnsForwarding::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIDnsForwarding::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forwarding_rules.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDnsForwarding::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
