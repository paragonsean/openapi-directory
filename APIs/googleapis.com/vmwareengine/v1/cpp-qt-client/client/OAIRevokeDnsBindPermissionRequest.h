/**
 * VMware Engine API
 * The Google VMware Engine API lets you programmatically manage VMware environments.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRevokeDnsBindPermissionRequest.h
 *
 * Request message for VmwareEngine.RevokeDnsBindPermission
 */

#ifndef OAIRevokeDnsBindPermissionRequest_H
#define OAIRevokeDnsBindPermissionRequest_H

#include <QJsonObject>

#include "OAIPrincipal.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPrincipal;

class OAIRevokeDnsBindPermissionRequest : public OAIObject {
public:
    OAIRevokeDnsBindPermissionRequest();
    OAIRevokeDnsBindPermissionRequest(QString json);
    ~OAIRevokeDnsBindPermissionRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPrincipal getPrincipal() const;
    void setPrincipal(const OAIPrincipal &principal);
    bool is_principal_Set() const;
    bool is_principal_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPrincipal m_principal;
    bool m_principal_isSet;
    bool m_principal_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRevokeDnsBindPermissionRequest)

#endif // OAIRevokeDnsBindPermissionRequest_H
