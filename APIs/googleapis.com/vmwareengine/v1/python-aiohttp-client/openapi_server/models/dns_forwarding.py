# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.forwarding_rule import ForwardingRule
from openapi_server import util


class DnsForwarding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, forwarding_rules: List[ForwardingRule]=None, name: str=None, update_time: str=None):
        """DnsForwarding - a model defined in OpenAPI

        :param create_time: The create_time of this DnsForwarding.
        :param forwarding_rules: The forwarding_rules of this DnsForwarding.
        :param name: The name of this DnsForwarding.
        :param update_time: The update_time of this DnsForwarding.
        """
        self.openapi_types = {
            'create_time': str,
            'forwarding_rules': List[ForwardingRule],
            'name': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'forwarding_rules': 'forwardingRules',
            'name': 'name',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._forwarding_rules = forwarding_rules
        self._name = name
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DnsForwarding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DnsForwarding of this DnsForwarding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this DnsForwarding.

        Output only. Creation time of this resource.

        :return: The create_time of this DnsForwarding.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this DnsForwarding.

        Output only. Creation time of this resource.

        :param create_time: The create_time of this DnsForwarding.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def forwarding_rules(self):
        """Gets the forwarding_rules of this DnsForwarding.

        Required. List of domain mappings to configure

        :return: The forwarding_rules of this DnsForwarding.
        :rtype: List[ForwardingRule]
        """
        return self._forwarding_rules

    @forwarding_rules.setter
    def forwarding_rules(self, forwarding_rules):
        """Sets the forwarding_rules of this DnsForwarding.

        Required. List of domain mappings to configure

        :param forwarding_rules: The forwarding_rules of this DnsForwarding.
        :type forwarding_rules: List[ForwardingRule]
        """

        self._forwarding_rules = forwarding_rules

    @property
    def name(self):
        """Gets the name of this DnsForwarding.

        Output only. The resource name of this DNS profile. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/dnsForwarding`

        :return: The name of this DnsForwarding.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DnsForwarding.

        Output only. The resource name of this DNS profile. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1-a/privateClouds/my-cloud/dnsForwarding`

        :param name: The name of this DnsForwarding.
        :type name: str
        """

        self._name = name

    @property
    def update_time(self):
        """Gets the update_time of this DnsForwarding.

        Output only. Last update time of this resource.

        :return: The update_time of this DnsForwarding.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this DnsForwarding.

        Output only. Last update time of this resource.

        :param update_time: The update_time of this DnsForwarding.
        :type update_time: str
        """

        self._update_time = update_time
