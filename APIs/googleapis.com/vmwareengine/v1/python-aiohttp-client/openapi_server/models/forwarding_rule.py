# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ForwardingRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain: str=None, name_servers: List[str]=None):
        """ForwardingRule - a model defined in OpenAPI

        :param domain: The domain of this ForwardingRule.
        :param name_servers: The name_servers of this ForwardingRule.
        """
        self.openapi_types = {
            'domain': str,
            'name_servers': List[str]
        }

        self.attribute_map = {
            'domain': 'domain',
            'name_servers': 'nameServers'
        }

        self._domain = domain
        self._name_servers = name_servers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForwardingRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForwardingRule of this ForwardingRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain(self):
        """Gets the domain of this ForwardingRule.

        Required. Domain used to resolve a `name_servers` list.

        :return: The domain of this ForwardingRule.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this ForwardingRule.

        Required. Domain used to resolve a `name_servers` list.

        :param domain: The domain of this ForwardingRule.
        :type domain: str
        """

        self._domain = domain

    @property
    def name_servers(self):
        """Gets the name_servers of this ForwardingRule.

        Required. List of DNS servers to use for domain resolution

        :return: The name_servers of this ForwardingRule.
        :rtype: List[str]
        """
        return self._name_servers

    @name_servers.setter
    def name_servers(self, name_servers):
        """Sets the name_servers of this ForwardingRule.

        Required. List of DNS servers to use for domain resolution

        :param name_servers: The name_servers of this ForwardingRule.
        :type name_servers: List[str]
        """

        self._name_servers = name_servers
