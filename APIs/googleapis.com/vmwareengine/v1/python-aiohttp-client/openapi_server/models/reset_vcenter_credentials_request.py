# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResetVcenterCredentialsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, request_id: str=None, username: str=None):
        """ResetVcenterCredentialsRequest - a model defined in OpenAPI

        :param request_id: The request_id of this ResetVcenterCredentialsRequest.
        :param username: The username of this ResetVcenterCredentialsRequest.
        """
        self.openapi_types = {
            'request_id': str,
            'username': str
        }

        self.attribute_map = {
            'request_id': 'requestId',
            'username': 'username'
        }

        self._request_id = request_id
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResetVcenterCredentialsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResetVcenterCredentialsRequest of this ResetVcenterCredentialsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_id(self):
        """Gets the request_id of this ResetVcenterCredentialsRequest.

        Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).

        :return: The request_id of this ResetVcenterCredentialsRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this ResetVcenterCredentialsRequest.

        Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server guarantees that a request doesn't result in creation of duplicate commitments for at least 60 minutes. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).

        :param request_id: The request_id of this ResetVcenterCredentialsRequest.
        :type request_id: str
        """

        self._request_id = request_id

    @property
    def username(self):
        """Gets the username of this ResetVcenterCredentialsRequest.

        Optional. The username of the user to be to reset the credentials. The default value of this field is CloudOwner@gve.local. The provided value should be one of the following: solution-user-01@gve.local, solution-user-02@gve.local, solution-user-03@gve.local, solution-user-04@gve.local, solution-user-05@gve.local, zertoadmin@gve.local.

        :return: The username of this ResetVcenterCredentialsRequest.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this ResetVcenterCredentialsRequest.

        Optional. The username of the user to be to reset the credentials. The default value of this field is CloudOwner@gve.local. The provided value should be one of the following: solution-user-01@gve.local, solution-user-02@gve.local, solution-user-03@gve.local, solution-user-04@gve.local, solution-user-05@gve.local, zertoadmin@gve.local.

        :param username: The username of this ResetVcenterCredentialsRequest.
        :type username: str
        """

        self._username = username
