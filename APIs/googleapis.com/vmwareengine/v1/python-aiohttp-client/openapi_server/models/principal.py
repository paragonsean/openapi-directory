# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Principal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_account: str=None, user: str=None):
        """Principal - a model defined in OpenAPI

        :param service_account: The service_account of this Principal.
        :param user: The user of this Principal.
        """
        self.openapi_types = {
            'service_account': str,
            'user': str
        }

        self.attribute_map = {
            'service_account': 'serviceAccount',
            'user': 'user'
        }

        self._service_account = service_account
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Principal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Principal of this Principal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_account(self):
        """Gets the service_account of this Principal.

        The service account which needs to be granted the permission.

        :return: The service_account of this Principal.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this Principal.

        The service account which needs to be granted the permission.

        :param service_account: The service_account of this Principal.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def user(self):
        """Gets the user of this Principal.

        The user who needs to be granted permission.

        :return: The user of this Principal.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this Principal.

        The user who needs to be granted permission.

        :param user: The user of this Principal.
        :type user: str
        """

        self._user = user
