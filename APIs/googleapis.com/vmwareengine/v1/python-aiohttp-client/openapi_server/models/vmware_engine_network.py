# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vpc_network import VpcNetwork
from openapi_server import util


class VmwareEngineNetwork(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, etag: str=None, name: str=None, state: str=None, type: str=None, uid: str=None, update_time: str=None, vpc_networks: List[VpcNetwork]=None):
        """VmwareEngineNetwork - a model defined in OpenAPI

        :param create_time: The create_time of this VmwareEngineNetwork.
        :param description: The description of this VmwareEngineNetwork.
        :param etag: The etag of this VmwareEngineNetwork.
        :param name: The name of this VmwareEngineNetwork.
        :param state: The state of this VmwareEngineNetwork.
        :param type: The type of this VmwareEngineNetwork.
        :param uid: The uid of this VmwareEngineNetwork.
        :param update_time: The update_time of this VmwareEngineNetwork.
        :param vpc_networks: The vpc_networks of this VmwareEngineNetwork.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'etag': str,
            'name': str,
            'state': str,
            'type': str,
            'uid': str,
            'update_time': str,
            'vpc_networks': List[VpcNetwork]
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'etag': 'etag',
            'name': 'name',
            'state': 'state',
            'type': 'type',
            'uid': 'uid',
            'update_time': 'updateTime',
            'vpc_networks': 'vpcNetworks'
        }

        self._create_time = create_time
        self._description = description
        self._etag = etag
        self._name = name
        self._state = state
        self._type = type
        self._uid = uid
        self._update_time = update_time
        self._vpc_networks = vpc_networks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VmwareEngineNetwork':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VmwareEngineNetwork of this VmwareEngineNetwork.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this VmwareEngineNetwork.

        Output only. Creation time of this resource.

        :return: The create_time of this VmwareEngineNetwork.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this VmwareEngineNetwork.

        Output only. Creation time of this resource.

        :param create_time: The create_time of this VmwareEngineNetwork.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this VmwareEngineNetwork.

        User-provided description for this VMware Engine network.

        :return: The description of this VmwareEngineNetwork.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this VmwareEngineNetwork.

        User-provided description for this VMware Engine network.

        :param description: The description of this VmwareEngineNetwork.
        :type description: str
        """

        self._description = description

    @property
    def etag(self):
        """Gets the etag of this VmwareEngineNetwork.

        Checksum that may be sent on update and delete requests to ensure that the user-provided value is up to date before the server processes a request. The server computes checksums based on the value of other fields in the request.

        :return: The etag of this VmwareEngineNetwork.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this VmwareEngineNetwork.

        Checksum that may be sent on update and delete requests to ensure that the user-provided value is up to date before the server processes a request. The server computes checksums based on the value of other fields in the request.

        :param etag: The etag of this VmwareEngineNetwork.
        :type etag: str
        """

        self._etag = etag

    @property
    def name(self):
        """Gets the name of this VmwareEngineNetwork.

        Output only. The resource name of the VMware Engine network. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/global/vmwareEngineNetworks/my-network`

        :return: The name of this VmwareEngineNetwork.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VmwareEngineNetwork.

        Output only. The resource name of the VMware Engine network. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/global/vmwareEngineNetworks/my-network`

        :param name: The name of this VmwareEngineNetwork.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this VmwareEngineNetwork.

        Output only. State of the VMware Engine network.

        :return: The state of this VmwareEngineNetwork.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this VmwareEngineNetwork.

        Output only. State of the VMware Engine network.

        :param state: The state of this VmwareEngineNetwork.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "CREATING", "ACTIVE", "UPDATING", "DELETING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def type(self):
        """Gets the type of this VmwareEngineNetwork.

        Required. VMware Engine network type.

        :return: The type of this VmwareEngineNetwork.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VmwareEngineNetwork.

        Required. VMware Engine network type.

        :param type: The type of this VmwareEngineNetwork.
        :type type: str
        """
        allowed_values = ["TYPE_UNSPECIFIED", "LEGACY", "STANDARD"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def uid(self):
        """Gets the uid of this VmwareEngineNetwork.

        Output only. System-generated unique identifier for the resource.

        :return: The uid of this VmwareEngineNetwork.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this VmwareEngineNetwork.

        Output only. System-generated unique identifier for the resource.

        :param uid: The uid of this VmwareEngineNetwork.
        :type uid: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this VmwareEngineNetwork.

        Output only. Last update time of this resource.

        :return: The update_time of this VmwareEngineNetwork.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this VmwareEngineNetwork.

        Output only. Last update time of this resource.

        :param update_time: The update_time of this VmwareEngineNetwork.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def vpc_networks(self):
        """Gets the vpc_networks of this VmwareEngineNetwork.

        Output only. VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects, the internet, and other Google Cloud services.

        :return: The vpc_networks of this VmwareEngineNetwork.
        :rtype: List[VpcNetwork]
        """
        return self._vpc_networks

    @vpc_networks.setter
    def vpc_networks(self, vpc_networks):
        """Sets the vpc_networks of this VmwareEngineNetwork.

        Output only. VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects, the internet, and other Google Cloud services.

        :param vpc_networks: The vpc_networks of this VmwareEngineNetwork.
        :type vpc_networks: List[VpcNetwork]
        """

        self._vpc_networks = vpc_networks
