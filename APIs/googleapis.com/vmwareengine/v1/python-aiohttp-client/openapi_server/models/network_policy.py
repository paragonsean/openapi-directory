# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.network_service import NetworkService
from openapi_server import util


class NetworkPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, edge_services_cidr: str=None, external_ip: NetworkService=None, internet_access: NetworkService=None, name: str=None, uid: str=None, update_time: str=None, vmware_engine_network: str=None, vmware_engine_network_canonical: str=None):
        """NetworkPolicy - a model defined in OpenAPI

        :param create_time: The create_time of this NetworkPolicy.
        :param description: The description of this NetworkPolicy.
        :param edge_services_cidr: The edge_services_cidr of this NetworkPolicy.
        :param external_ip: The external_ip of this NetworkPolicy.
        :param internet_access: The internet_access of this NetworkPolicy.
        :param name: The name of this NetworkPolicy.
        :param uid: The uid of this NetworkPolicy.
        :param update_time: The update_time of this NetworkPolicy.
        :param vmware_engine_network: The vmware_engine_network of this NetworkPolicy.
        :param vmware_engine_network_canonical: The vmware_engine_network_canonical of this NetworkPolicy.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'edge_services_cidr': str,
            'external_ip': NetworkService,
            'internet_access': NetworkService,
            'name': str,
            'uid': str,
            'update_time': str,
            'vmware_engine_network': str,
            'vmware_engine_network_canonical': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'edge_services_cidr': 'edgeServicesCidr',
            'external_ip': 'externalIp',
            'internet_access': 'internetAccess',
            'name': 'name',
            'uid': 'uid',
            'update_time': 'updateTime',
            'vmware_engine_network': 'vmwareEngineNetwork',
            'vmware_engine_network_canonical': 'vmwareEngineNetworkCanonical'
        }

        self._create_time = create_time
        self._description = description
        self._edge_services_cidr = edge_services_cidr
        self._external_ip = external_ip
        self._internet_access = internet_access
        self._name = name
        self._uid = uid
        self._update_time = update_time
        self._vmware_engine_network = vmware_engine_network
        self._vmware_engine_network_canonical = vmware_engine_network_canonical

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NetworkPolicy of this NetworkPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this NetworkPolicy.

        Output only. Creation time of this resource.

        :return: The create_time of this NetworkPolicy.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this NetworkPolicy.

        Output only. Creation time of this resource.

        :param create_time: The create_time of this NetworkPolicy.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this NetworkPolicy.

        Optional. User-provided description for this network policy.

        :return: The description of this NetworkPolicy.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NetworkPolicy.

        Optional. User-provided description for this network policy.

        :param description: The description of this NetworkPolicy.
        :type description: str
        """

        self._description = description

    @property
    def edge_services_cidr(self):
        """Gets the edge_services_cidr of this NetworkPolicy.

        Required. IP address range in CIDR notation used to create internet access and external IP access. An RFC 1918 CIDR block, with a \"/26\" prefix, is required. The range cannot overlap with any prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.

        :return: The edge_services_cidr of this NetworkPolicy.
        :rtype: str
        """
        return self._edge_services_cidr

    @edge_services_cidr.setter
    def edge_services_cidr(self, edge_services_cidr):
        """Sets the edge_services_cidr of this NetworkPolicy.

        Required. IP address range in CIDR notation used to create internet access and external IP access. An RFC 1918 CIDR block, with a \"/26\" prefix, is required. The range cannot overlap with any prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.

        :param edge_services_cidr: The edge_services_cidr of this NetworkPolicy.
        :type edge_services_cidr: str
        """

        self._edge_services_cidr = edge_services_cidr

    @property
    def external_ip(self):
        """Gets the external_ip of this NetworkPolicy.


        :return: The external_ip of this NetworkPolicy.
        :rtype: NetworkService
        """
        return self._external_ip

    @external_ip.setter
    def external_ip(self, external_ip):
        """Sets the external_ip of this NetworkPolicy.


        :param external_ip: The external_ip of this NetworkPolicy.
        :type external_ip: NetworkService
        """

        self._external_ip = external_ip

    @property
    def internet_access(self):
        """Gets the internet_access of this NetworkPolicy.


        :return: The internet_access of this NetworkPolicy.
        :rtype: NetworkService
        """
        return self._internet_access

    @internet_access.setter
    def internet_access(self, internet_access):
        """Sets the internet_access of this NetworkPolicy.


        :param internet_access: The internet_access of this NetworkPolicy.
        :type internet_access: NetworkService
        """

        self._internet_access = internet_access

    @property
    def name(self):
        """Gets the name of this NetworkPolicy.

        Output only. The resource name of this network policy. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`

        :return: The name of this NetworkPolicy.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NetworkPolicy.

        Output only. The resource name of this network policy. Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names. For example: `projects/my-project/locations/us-central1/networkPolicies/my-network-policy`

        :param name: The name of this NetworkPolicy.
        :type name: str
        """

        self._name = name

    @property
    def uid(self):
        """Gets the uid of this NetworkPolicy.

        Output only. System-generated unique identifier for the resource.

        :return: The uid of this NetworkPolicy.
        :rtype: str
        """
        return self._uid

    @uid.setter
    def uid(self, uid):
        """Sets the uid of this NetworkPolicy.

        Output only. System-generated unique identifier for the resource.

        :param uid: The uid of this NetworkPolicy.
        :type uid: str
        """

        self._uid = uid

    @property
    def update_time(self):
        """Gets the update_time of this NetworkPolicy.

        Output only. Last update time of this resource.

        :return: The update_time of this NetworkPolicy.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this NetworkPolicy.

        Output only. Last update time of this resource.

        :param update_time: The update_time of this NetworkPolicy.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def vmware_engine_network(self):
        """Gets the vmware_engine_network of this NetworkPolicy.

        Optional. The relative resource name of the VMware Engine network. Specify the name in the following form: `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}` where `{project}` can either be a project number or a project ID.

        :return: The vmware_engine_network of this NetworkPolicy.
        :rtype: str
        """
        return self._vmware_engine_network

    @vmware_engine_network.setter
    def vmware_engine_network(self, vmware_engine_network):
        """Sets the vmware_engine_network of this NetworkPolicy.

        Optional. The relative resource name of the VMware Engine network. Specify the name in the following form: `projects/{project}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}` where `{project}` can either be a project number or a project ID.

        :param vmware_engine_network: The vmware_engine_network of this NetworkPolicy.
        :type vmware_engine_network: str
        """

        self._vmware_engine_network = vmware_engine_network

    @property
    def vmware_engine_network_canonical(self):
        """Gets the vmware_engine_network_canonical of this NetworkPolicy.

        Output only. The canonical name of the VMware Engine network in the form: `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`

        :return: The vmware_engine_network_canonical of this NetworkPolicy.
        :rtype: str
        """
        return self._vmware_engine_network_canonical

    @vmware_engine_network_canonical.setter
    def vmware_engine_network_canonical(self, vmware_engine_network_canonical):
        """Sets the vmware_engine_network_canonical of this NetworkPolicy.

        Output only. The canonical name of the VMware Engine network in the form: `projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmware_engine_network_id}`

        :param vmware_engine_network_canonical: The vmware_engine_network_canonical of this NetworkPolicy.
        :type vmware_engine_network_canonical: str
        """

        self._vmware_engine_network_canonical = vmware_engine_network_canonical
