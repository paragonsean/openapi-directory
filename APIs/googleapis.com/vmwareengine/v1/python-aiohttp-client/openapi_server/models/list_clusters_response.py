# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cluster import Cluster
from openapi_server import util


class ListClustersResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clusters: List[Cluster]=None, next_page_token: str=None, unreachable: List[str]=None):
        """ListClustersResponse - a model defined in OpenAPI

        :param clusters: The clusters of this ListClustersResponse.
        :param next_page_token: The next_page_token of this ListClustersResponse.
        :param unreachable: The unreachable of this ListClustersResponse.
        """
        self.openapi_types = {
            'clusters': List[Cluster],
            'next_page_token': str,
            'unreachable': List[str]
        }

        self.attribute_map = {
            'clusters': 'clusters',
            'next_page_token': 'nextPageToken',
            'unreachable': 'unreachable'
        }

        self._clusters = clusters
        self._next_page_token = next_page_token
        self._unreachable = unreachable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListClustersResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListClustersResponse of this ListClustersResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clusters(self):
        """Gets the clusters of this ListClustersResponse.

        A list of private cloud clusters.

        :return: The clusters of this ListClustersResponse.
        :rtype: List[Cluster]
        """
        return self._clusters

    @clusters.setter
    def clusters(self, clusters):
        """Sets the clusters of this ListClustersResponse.

        A list of private cloud clusters.

        :param clusters: The clusters of this ListClustersResponse.
        :type clusters: List[Cluster]
        """

        self._clusters = clusters

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListClustersResponse.

        A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :return: The next_page_token of this ListClustersResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListClustersResponse.

        A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :param next_page_token: The next_page_token of this ListClustersResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def unreachable(self):
        """Gets the unreachable of this ListClustersResponse.

        Locations that could not be reached when making an aggregated query using wildcards.

        :return: The unreachable of this ListClustersResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this ListClustersResponse.

        Locations that could not be reached when making an aggregated query using wildcards.

        :param unreachable: The unreachable of this ListClustersResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable
