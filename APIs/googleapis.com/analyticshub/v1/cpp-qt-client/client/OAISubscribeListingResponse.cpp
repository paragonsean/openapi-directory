/**
 * Analytics Hub API
 * Exchange data and analytics assets securely and efficiently.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscribeListingResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscribeListingResponse::OAISubscribeListingResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscribeListingResponse::OAISubscribeListingResponse() {
    this->initializeModel();
}

OAISubscribeListingResponse::~OAISubscribeListingResponse() {}

void OAISubscribeListingResponse::initializeModel() {

    m_subscription_isSet = false;
    m_subscription_isValid = false;
}

void OAISubscribeListingResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscribeListingResponse::fromJsonObject(QJsonObject json) {

    m_subscription_isValid = ::OpenAPI::fromJsonValue(m_subscription, json[QString("subscription")]);
    m_subscription_isSet = !json[QString("subscription")].isNull() && m_subscription_isValid;
}

QString OAISubscribeListingResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscribeListingResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_subscription.isSet()) {
        obj.insert(QString("subscription"), ::OpenAPI::toJsonValue(m_subscription));
    }
    return obj;
}

OAISubscription OAISubscribeListingResponse::getSubscription() const {
    return m_subscription;
}
void OAISubscribeListingResponse::setSubscription(const OAISubscription &subscription) {
    m_subscription = subscription;
    m_subscription_isSet = true;
}

bool OAISubscribeListingResponse::is_subscription_Set() const{
    return m_subscription_isSet;
}

bool OAISubscribeListingResponse::is_subscription_Valid() const{
    return m_subscription_isValid;
}

bool OAISubscribeListingResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subscription.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscribeListingResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
