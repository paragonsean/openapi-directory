/**
 * Analytics Hub API
 * Exchange data and analytics assets securely and efficiently.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscribeDataExchangeRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscribeDataExchangeRequest::OAISubscribeDataExchangeRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscribeDataExchangeRequest::OAISubscribeDataExchangeRequest() {
    this->initializeModel();
}

OAISubscribeDataExchangeRequest::~OAISubscribeDataExchangeRequest() {}

void OAISubscribeDataExchangeRequest::initializeModel() {

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_subscriber_contact_isSet = false;
    m_subscriber_contact_isValid = false;

    m_subscription_isSet = false;
    m_subscription_isValid = false;
}

void OAISubscribeDataExchangeRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscribeDataExchangeRequest::fromJsonObject(QJsonObject json) {

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("destination")]);
    m_destination_isSet = !json[QString("destination")].isNull() && m_destination_isValid;

    m_subscriber_contact_isValid = ::OpenAPI::fromJsonValue(m_subscriber_contact, json[QString("subscriberContact")]);
    m_subscriber_contact_isSet = !json[QString("subscriberContact")].isNull() && m_subscriber_contact_isValid;

    m_subscription_isValid = ::OpenAPI::fromJsonValue(m_subscription, json[QString("subscription")]);
    m_subscription_isSet = !json[QString("subscription")].isNull() && m_subscription_isValid;
}

QString OAISubscribeDataExchangeRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscribeDataExchangeRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_isSet) {
        obj.insert(QString("destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_subscriber_contact_isSet) {
        obj.insert(QString("subscriberContact"), ::OpenAPI::toJsonValue(m_subscriber_contact));
    }
    if (m_subscription_isSet) {
        obj.insert(QString("subscription"), ::OpenAPI::toJsonValue(m_subscription));
    }
    return obj;
}

QString OAISubscribeDataExchangeRequest::getDestination() const {
    return m_destination;
}
void OAISubscribeDataExchangeRequest::setDestination(const QString &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAISubscribeDataExchangeRequest::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAISubscribeDataExchangeRequest::is_destination_Valid() const{
    return m_destination_isValid;
}

QString OAISubscribeDataExchangeRequest::getSubscriberContact() const {
    return m_subscriber_contact;
}
void OAISubscribeDataExchangeRequest::setSubscriberContact(const QString &subscriber_contact) {
    m_subscriber_contact = subscriber_contact;
    m_subscriber_contact_isSet = true;
}

bool OAISubscribeDataExchangeRequest::is_subscriber_contact_Set() const{
    return m_subscriber_contact_isSet;
}

bool OAISubscribeDataExchangeRequest::is_subscriber_contact_Valid() const{
    return m_subscriber_contact_isValid;
}

QString OAISubscribeDataExchangeRequest::getSubscription() const {
    return m_subscription;
}
void OAISubscribeDataExchangeRequest::setSubscription(const QString &subscription) {
    m_subscription = subscription;
    m_subscription_isSet = true;
}

bool OAISubscribeDataExchangeRequest::is_subscription_Set() const{
    return m_subscription_isSet;
}

bool OAISubscribeDataExchangeRequest::is_subscription_Valid() const{
    return m_subscription_isValid;
}

bool OAISubscribeDataExchangeRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscriber_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscribeDataExchangeRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
