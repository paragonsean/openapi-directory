/**
 * Analytics Hub API
 * Exchange data and analytics assets securely and efficiently.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkedResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkedResource::OAILinkedResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkedResource::OAILinkedResource() {
    this->initializeModel();
}

OAILinkedResource::~OAILinkedResource() {}

void OAILinkedResource::initializeModel() {

    m_linked_dataset_isSet = false;
    m_linked_dataset_isValid = false;
}

void OAILinkedResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkedResource::fromJsonObject(QJsonObject json) {

    m_linked_dataset_isValid = ::OpenAPI::fromJsonValue(m_linked_dataset, json[QString("linkedDataset")]);
    m_linked_dataset_isSet = !json[QString("linkedDataset")].isNull() && m_linked_dataset_isValid;
}

QString OAILinkedResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkedResource::asJsonObject() const {
    QJsonObject obj;
    if (m_linked_dataset_isSet) {
        obj.insert(QString("linkedDataset"), ::OpenAPI::toJsonValue(m_linked_dataset));
    }
    return obj;
}

QString OAILinkedResource::getLinkedDataset() const {
    return m_linked_dataset;
}
void OAILinkedResource::setLinkedDataset(const QString &linked_dataset) {
    m_linked_dataset = linked_dataset;
    m_linked_dataset_isSet = true;
}

bool OAILinkedResource::is_linked_dataset_Set() const{
    return m_linked_dataset_isSet;
}

bool OAILinkedResource::is_linked_dataset_Valid() const{
    return m_linked_dataset_isValid;
}

bool OAILinkedResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_linked_dataset_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkedResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
