/**
 * Analytics Hub API
 * Exchange data and analytics assets securely and efficiently.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataExchange.h
 *
 * A data exchange is a container that lets you share data. Along with the descriptive information about the data exchange, it contains listings that reference shared datasets.
 */

#ifndef OAIDataExchange_H
#define OAIDataExchange_H

#include <QJsonObject>

#include "OAISharingEnvironmentConfig.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISharingEnvironmentConfig;

class OAIDataExchange : public OAIObject {
public:
    OAIDataExchange();
    OAIDataExchange(QString json);
    ~OAIDataExchange() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getDocumentation() const;
    void setDocumentation(const QString &documentation);
    bool is_documentation_Set() const;
    bool is_documentation_Valid() const;

    QByteArray getIcon() const;
    void setIcon(const QByteArray &icon);
    bool is_icon_Set() const;
    bool is_icon_Valid() const;

    qint32 getListingCount() const;
    void setListingCount(const qint32 &listing_count);
    bool is_listing_count_Set() const;
    bool is_listing_count_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPrimaryContact() const;
    void setPrimaryContact(const QString &primary_contact);
    bool is_primary_contact_Set() const;
    bool is_primary_contact_Valid() const;

    OAISharingEnvironmentConfig getSharingEnvironmentConfig() const;
    void setSharingEnvironmentConfig(const OAISharingEnvironmentConfig &sharing_environment_config);
    bool is_sharing_environment_config_Set() const;
    bool is_sharing_environment_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_documentation;
    bool m_documentation_isSet;
    bool m_documentation_isValid;

    QByteArray m_icon;
    bool m_icon_isSet;
    bool m_icon_isValid;

    qint32 m_listing_count;
    bool m_listing_count_isSet;
    bool m_listing_count_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_primary_contact;
    bool m_primary_contact_isSet;
    bool m_primary_contact_isValid;

    OAISharingEnvironmentConfig m_sharing_environment_config;
    bool m_sharing_environment_config_isSet;
    bool m_sharing_environment_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataExchange)

#endif // OAIDataExchange_H
