/**
 * Analytics Hub API
 * Exchange data and analytics assets securely and efficiently.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISharingEnvironmentConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISharingEnvironmentConfig::OAISharingEnvironmentConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISharingEnvironmentConfig::OAISharingEnvironmentConfig() {
    this->initializeModel();
}

OAISharingEnvironmentConfig::~OAISharingEnvironmentConfig() {}

void OAISharingEnvironmentConfig::initializeModel() {

    m_dcr_exchange_config_isSet = false;
    m_dcr_exchange_config_isValid = false;

    m_default_exchange_config_isSet = false;
    m_default_exchange_config_isValid = false;
}

void OAISharingEnvironmentConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISharingEnvironmentConfig::fromJsonObject(QJsonObject json) {

    m_dcr_exchange_config_isValid = ::OpenAPI::fromJsonValue(m_dcr_exchange_config, json[QString("dcrExchangeConfig")]);
    m_dcr_exchange_config_isSet = !json[QString("dcrExchangeConfig")].isNull() && m_dcr_exchange_config_isValid;

    m_default_exchange_config_isValid = ::OpenAPI::fromJsonValue(m_default_exchange_config, json[QString("defaultExchangeConfig")]);
    m_default_exchange_config_isSet = !json[QString("defaultExchangeConfig")].isNull() && m_default_exchange_config_isValid;
}

QString OAISharingEnvironmentConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISharingEnvironmentConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_dcr_exchange_config.isSet()) {
        obj.insert(QString("dcrExchangeConfig"), ::OpenAPI::toJsonValue(m_dcr_exchange_config));
    }
    if (m_default_exchange_config_isSet) {
        obj.insert(QString("defaultExchangeConfig"), ::OpenAPI::toJsonValue(m_default_exchange_config));
    }
    return obj;
}

OAIDcrExchangeConfig OAISharingEnvironmentConfig::getDcrExchangeConfig() const {
    return m_dcr_exchange_config;
}
void OAISharingEnvironmentConfig::setDcrExchangeConfig(const OAIDcrExchangeConfig &dcr_exchange_config) {
    m_dcr_exchange_config = dcr_exchange_config;
    m_dcr_exchange_config_isSet = true;
}

bool OAISharingEnvironmentConfig::is_dcr_exchange_config_Set() const{
    return m_dcr_exchange_config_isSet;
}

bool OAISharingEnvironmentConfig::is_dcr_exchange_config_Valid() const{
    return m_dcr_exchange_config_isValid;
}

OAIObject OAISharingEnvironmentConfig::getDefaultExchangeConfig() const {
    return m_default_exchange_config;
}
void OAISharingEnvironmentConfig::setDefaultExchangeConfig(const OAIObject &default_exchange_config) {
    m_default_exchange_config = default_exchange_config;
    m_default_exchange_config_isSet = true;
}

bool OAISharingEnvironmentConfig::is_default_exchange_config_Set() const{
    return m_default_exchange_config_isSet;
}

bool OAISharingEnvironmentConfig::is_default_exchange_config_Valid() const{
    return m_default_exchange_config_isValid;
}

bool OAISharingEnvironmentConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dcr_exchange_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_exchange_config_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISharingEnvironmentConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
