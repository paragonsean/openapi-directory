/**
 * Analytics Hub API
 * Exchange data and analytics assets securely and efficiently.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BigQueryDatasetSource model module.
 * @module model/BigQueryDatasetSource
 * @version v1
 */
class BigQueryDatasetSource {
    /**
     * Constructs a new <code>BigQueryDatasetSource</code>.
     * A reference to a shared dataset. It is an existing BigQuery dataset with a collection of objects such as tables and views that you want to share with subscribers. When subscriber&#39;s subscribe to a listing, Analytics Hub creates a linked dataset in the subscriber&#39;s project. A Linked dataset is an opaque, read-only BigQuery dataset that serves as a _symbolic link_ to a shared dataset.
     * @alias module:model/BigQueryDatasetSource
     */
    constructor() { 
        
        BigQueryDatasetSource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BigQueryDatasetSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BigQueryDatasetSource} obj Optional instance to populate.
     * @return {module:model/BigQueryDatasetSource} The populated <code>BigQueryDatasetSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BigQueryDatasetSource();

            if (data.hasOwnProperty('dataset')) {
                obj['dataset'] = ApiClient.convertToType(data['dataset'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BigQueryDatasetSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BigQueryDatasetSource</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dataset'] && !(typeof data['dataset'] === 'string' || data['dataset'] instanceof String)) {
            throw new Error("Expected the field `dataset` to be a primitive type in the JSON string but got " + data['dataset']);
        }

        return true;
    }


}



/**
 * Resource name of the dataset source for this listing. e.g. `projects/myproject/datasets/123`
 * @member {String} dataset
 */
BigQueryDatasetSource.prototype['dataset'] = undefined;






export default BigQueryDatasetSource;

