# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscribeDataExchangeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination: str=None, subscriber_contact: str=None, subscription: str=None):
        """SubscribeDataExchangeRequest - a model defined in OpenAPI

        :param destination: The destination of this SubscribeDataExchangeRequest.
        :param subscriber_contact: The subscriber_contact of this SubscribeDataExchangeRequest.
        :param subscription: The subscription of this SubscribeDataExchangeRequest.
        """
        self.openapi_types = {
            'destination': str,
            'subscriber_contact': str,
            'subscription': str
        }

        self.attribute_map = {
            'destination': 'destination',
            'subscriber_contact': 'subscriberContact',
            'subscription': 'subscription'
        }

        self._destination = destination
        self._subscriber_contact = subscriber_contact
        self._subscription = subscription

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscribeDataExchangeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscribeDataExchangeRequest of this SubscribeDataExchangeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination(self):
        """Gets the destination of this SubscribeDataExchangeRequest.

        Required. The parent resource path of the Subscription. e.g. `projects/subscriberproject/locations/US`

        :return: The destination of this SubscribeDataExchangeRequest.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this SubscribeDataExchangeRequest.

        Required. The parent resource path of the Subscription. e.g. `projects/subscriberproject/locations/US`

        :param destination: The destination of this SubscribeDataExchangeRequest.
        :type destination: str
        """

        self._destination = destination

    @property
    def subscriber_contact(self):
        """Gets the subscriber_contact of this SubscribeDataExchangeRequest.

        Email of the subscriber.

        :return: The subscriber_contact of this SubscribeDataExchangeRequest.
        :rtype: str
        """
        return self._subscriber_contact

    @subscriber_contact.setter
    def subscriber_contact(self, subscriber_contact):
        """Sets the subscriber_contact of this SubscribeDataExchangeRequest.

        Email of the subscriber.

        :param subscriber_contact: The subscriber_contact of this SubscribeDataExchangeRequest.
        :type subscriber_contact: str
        """

        self._subscriber_contact = subscriber_contact

    @property
    def subscription(self):
        """Gets the subscription of this SubscribeDataExchangeRequest.

        Required. Name of the subscription to create. e.g. `subscription1`

        :return: The subscription of this SubscribeDataExchangeRequest.
        :rtype: str
        """
        return self._subscription

    @subscription.setter
    def subscription(self, subscription):
        """Sets the subscription of this SubscribeDataExchangeRequest.

        Required. Name of the subscription to create. e.g. `subscription1`

        :param subscription: The subscription of this SubscribeDataExchangeRequest.
        :type subscription: str
        """

        self._subscription = subscription
