# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LinkedResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, linked_dataset: str=None):
        """LinkedResource - a model defined in OpenAPI

        :param linked_dataset: The linked_dataset of this LinkedResource.
        """
        self.openapi_types = {
            'linked_dataset': str
        }

        self.attribute_map = {
            'linked_dataset': 'linkedDataset'
        }

        self._linked_dataset = linked_dataset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedResource of this LinkedResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linked_dataset(self):
        """Gets the linked_dataset of this LinkedResource.

        Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linked_dataset

        :return: The linked_dataset of this LinkedResource.
        :rtype: str
        """
        return self._linked_dataset

    @linked_dataset.setter
    def linked_dataset(self, linked_dataset):
        """Sets the linked_dataset of this LinkedResource.

        Output only. Name of the linked dataset, e.g. projects/subscriberproject/datasets/linked_dataset

        :param linked_dataset: The linked_dataset of this LinkedResource.
        :type linked_dataset: str
        """

        self._linked_dataset = linked_dataset
