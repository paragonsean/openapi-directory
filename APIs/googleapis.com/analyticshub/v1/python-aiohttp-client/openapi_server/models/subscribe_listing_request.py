# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destination_dataset import DestinationDataset
from openapi_server import util


class SubscribeListingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_dataset: DestinationDataset=None):
        """SubscribeListingRequest - a model defined in OpenAPI

        :param destination_dataset: The destination_dataset of this SubscribeListingRequest.
        """
        self.openapi_types = {
            'destination_dataset': DestinationDataset
        }

        self.attribute_map = {
            'destination_dataset': 'destinationDataset'
        }

        self._destination_dataset = destination_dataset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscribeListingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscribeListingRequest of this SubscribeListingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_dataset(self):
        """Gets the destination_dataset of this SubscribeListingRequest.


        :return: The destination_dataset of this SubscribeListingRequest.
        :rtype: DestinationDataset
        """
        return self._destination_dataset

    @destination_dataset.setter
    def destination_dataset(self, destination_dataset):
        """Sets the destination_dataset of this SubscribeListingRequest.


        :param destination_dataset: The destination_dataset of this SubscribeListingRequest.
        :type destination_dataset: DestinationDataset
        """

        self._destination_dataset = destination_dataset
