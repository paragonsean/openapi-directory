/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIpConfiguration.h
 *
 * IP Management configuration.
 */

#ifndef OAIIpConfiguration_H
#define OAIIpConfiguration_H

#include <QJsonObject>

#include "OAIAclEntry.h"
#include "OAIPscConfig.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAclEntry;
class OAIPscConfig;

class OAIIpConfiguration : public OAIObject {
public:
    OAIIpConfiguration();
    OAIIpConfiguration(QString json);
    ~OAIIpConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllocatedIpRange() const;
    void setAllocatedIpRange(const QString &allocated_ip_range);
    bool is_allocated_ip_range_Set() const;
    bool is_allocated_ip_range_Valid() const;

    QList<OAIAclEntry> getAuthorizedNetworks() const;
    void setAuthorizedNetworks(const QList<OAIAclEntry> &authorized_networks);
    bool is_authorized_networks_Set() const;
    bool is_authorized_networks_Valid() const;

    bool isEnablePrivatePathForGoogleCloudServices() const;
    void setEnablePrivatePathForGoogleCloudServices(const bool &enable_private_path_for_google_cloud_services);
    bool is_enable_private_path_for_google_cloud_services_Set() const;
    bool is_enable_private_path_for_google_cloud_services_Valid() const;

    bool isIpv4Enabled() const;
    void setIpv4Enabled(const bool &ipv4_enabled);
    bool is_ipv4_enabled_Set() const;
    bool is_ipv4_enabled_Valid() const;

    QString getPrivateNetwork() const;
    void setPrivateNetwork(const QString &private_network);
    bool is_private_network_Set() const;
    bool is_private_network_Valid() const;

    OAIPscConfig getPscConfig() const;
    void setPscConfig(const OAIPscConfig &psc_config);
    bool is_psc_config_Set() const;
    bool is_psc_config_Valid() const;

    bool isRequireSsl() const;
    void setRequireSsl(const bool &require_ssl);
    bool is_require_ssl_Set() const;
    bool is_require_ssl_Valid() const;

    QString getSslMode() const;
    void setSslMode(const QString &ssl_mode);
    bool is_ssl_mode_Set() const;
    bool is_ssl_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allocated_ip_range;
    bool m_allocated_ip_range_isSet;
    bool m_allocated_ip_range_isValid;

    QList<OAIAclEntry> m_authorized_networks;
    bool m_authorized_networks_isSet;
    bool m_authorized_networks_isValid;

    bool m_enable_private_path_for_google_cloud_services;
    bool m_enable_private_path_for_google_cloud_services_isSet;
    bool m_enable_private_path_for_google_cloud_services_isValid;

    bool m_ipv4_enabled;
    bool m_ipv4_enabled_isSet;
    bool m_ipv4_enabled_isValid;

    QString m_private_network;
    bool m_private_network_isSet;
    bool m_private_network_isValid;

    OAIPscConfig m_psc_config;
    bool m_psc_config_isSet;
    bool m_psc_config_isValid;

    bool m_require_ssl;
    bool m_require_ssl_isSet;
    bool m_require_ssl_isValid;

    QString m_ssl_mode;
    bool m_ssl_mode_isSet;
    bool m_ssl_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIpConfiguration)

#endif // OAIIpConfiguration_H
