/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISqlInstancesGetLatestRecoveryTimeResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISqlInstancesGetLatestRecoveryTimeResponse::OAISqlInstancesGetLatestRecoveryTimeResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISqlInstancesGetLatestRecoveryTimeResponse::OAISqlInstancesGetLatestRecoveryTimeResponse() {
    this->initializeModel();
}

OAISqlInstancesGetLatestRecoveryTimeResponse::~OAISqlInstancesGetLatestRecoveryTimeResponse() {}

void OAISqlInstancesGetLatestRecoveryTimeResponse::initializeModel() {

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_latest_recovery_time_isSet = false;
    m_latest_recovery_time_isValid = false;
}

void OAISqlInstancesGetLatestRecoveryTimeResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISqlInstancesGetLatestRecoveryTimeResponse::fromJsonObject(QJsonObject json) {

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_latest_recovery_time_isValid = ::OpenAPI::fromJsonValue(m_latest_recovery_time, json[QString("latestRecoveryTime")]);
    m_latest_recovery_time_isSet = !json[QString("latestRecoveryTime")].isNull() && m_latest_recovery_time_isValid;
}

QString OAISqlInstancesGetLatestRecoveryTimeResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISqlInstancesGetLatestRecoveryTimeResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_latest_recovery_time_isSet) {
        obj.insert(QString("latestRecoveryTime"), ::OpenAPI::toJsonValue(m_latest_recovery_time));
    }
    return obj;
}

QString OAISqlInstancesGetLatestRecoveryTimeResponse::getKind() const {
    return m_kind;
}
void OAISqlInstancesGetLatestRecoveryTimeResponse::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAISqlInstancesGetLatestRecoveryTimeResponse::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAISqlInstancesGetLatestRecoveryTimeResponse::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAISqlInstancesGetLatestRecoveryTimeResponse::getLatestRecoveryTime() const {
    return m_latest_recovery_time;
}
void OAISqlInstancesGetLatestRecoveryTimeResponse::setLatestRecoveryTime(const QString &latest_recovery_time) {
    m_latest_recovery_time = latest_recovery_time;
    m_latest_recovery_time_isSet = true;
}

bool OAISqlInstancesGetLatestRecoveryTimeResponse::is_latest_recovery_time_Set() const{
    return m_latest_recovery_time_isSet;
}

bool OAISqlInstancesGetLatestRecoveryTimeResponse::is_latest_recovery_time_Valid() const{
    return m_latest_recovery_time_isValid;
}

bool OAISqlInstancesGetLatestRecoveryTimeResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_recovery_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISqlInstancesGetLatestRecoveryTimeResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
