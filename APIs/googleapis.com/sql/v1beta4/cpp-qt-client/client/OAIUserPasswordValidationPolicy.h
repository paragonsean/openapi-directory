/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserPasswordValidationPolicy.h
 *
 * User level password validation policy.
 */

#ifndef OAIUserPasswordValidationPolicy_H
#define OAIUserPasswordValidationPolicy_H

#include <QJsonObject>

#include "OAIPasswordStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPasswordStatus;

class OAIUserPasswordValidationPolicy : public OAIObject {
public:
    OAIUserPasswordValidationPolicy();
    OAIUserPasswordValidationPolicy(QString json);
    ~OAIUserPasswordValidationPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAllowedFailedAttempts() const;
    void setAllowedFailedAttempts(const qint32 &allowed_failed_attempts);
    bool is_allowed_failed_attempts_Set() const;
    bool is_allowed_failed_attempts_Valid() const;

    bool isEnableFailedAttemptsCheck() const;
    void setEnableFailedAttemptsCheck(const bool &enable_failed_attempts_check);
    bool is_enable_failed_attempts_check_Set() const;
    bool is_enable_failed_attempts_check_Valid() const;

    bool isEnablePasswordVerification() const;
    void setEnablePasswordVerification(const bool &enable_password_verification);
    bool is_enable_password_verification_Set() const;
    bool is_enable_password_verification_Valid() const;

    QString getPasswordExpirationDuration() const;
    void setPasswordExpirationDuration(const QString &password_expiration_duration);
    bool is_password_expiration_duration_Set() const;
    bool is_password_expiration_duration_Valid() const;

    OAIPasswordStatus getStatus() const;
    void setStatus(const OAIPasswordStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_allowed_failed_attempts;
    bool m_allowed_failed_attempts_isSet;
    bool m_allowed_failed_attempts_isValid;

    bool m_enable_failed_attempts_check;
    bool m_enable_failed_attempts_check_isSet;
    bool m_enable_failed_attempts_check_isValid;

    bool m_enable_password_verification;
    bool m_enable_password_verification_isSet;
    bool m_enable_password_verification_isValid;

    QString m_password_expiration_duration;
    bool m_password_expiration_duration_isSet;
    bool m_password_expiration_duration_isValid;

    OAIPasswordStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserPasswordValidationPolicy)

#endif // OAIUserPasswordValidationPolicy_H
