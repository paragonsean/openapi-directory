/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInsightsConfig.h
 *
 * Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.
 */

#ifndef OAIInsightsConfig_H
#define OAIInsightsConfig_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInsightsConfig : public OAIObject {
public:
    OAIInsightsConfig();
    OAIInsightsConfig(QString json);
    ~OAIInsightsConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isQueryInsightsEnabled() const;
    void setQueryInsightsEnabled(const bool &query_insights_enabled);
    bool is_query_insights_enabled_Set() const;
    bool is_query_insights_enabled_Valid() const;

    qint32 getQueryPlansPerMinute() const;
    void setQueryPlansPerMinute(const qint32 &query_plans_per_minute);
    bool is_query_plans_per_minute_Set() const;
    bool is_query_plans_per_minute_Valid() const;

    qint32 getQueryStringLength() const;
    void setQueryStringLength(const qint32 &query_string_length);
    bool is_query_string_length_Set() const;
    bool is_query_string_length_Valid() const;

    bool isRecordApplicationTags() const;
    void setRecordApplicationTags(const bool &record_application_tags);
    bool is_record_application_tags_Set() const;
    bool is_record_application_tags_Valid() const;

    bool isRecordClientAddress() const;
    void setRecordClientAddress(const bool &record_client_address);
    bool is_record_client_address_Set() const;
    bool is_record_client_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_query_insights_enabled;
    bool m_query_insights_enabled_isSet;
    bool m_query_insights_enabled_isValid;

    qint32 m_query_plans_per_minute;
    bool m_query_plans_per_minute_isSet;
    bool m_query_plans_per_minute_isValid;

    qint32 m_query_string_length;
    bool m_query_string_length_isSet;
    bool m_query_string_length_isValid;

    bool m_record_application_tags;
    bool m_record_application_tags_isSet;
    bool m_record_application_tags_isValid;

    bool m_record_client_address;
    bool m_record_client_address_isSet;
    bool m_record_client_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInsightsConfig)

#endif // OAIInsightsConfig_H
