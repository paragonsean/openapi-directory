/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloneContext.h
 *
 * Database instance clone context.
 */

#ifndef OAICloneContext_H
#define OAICloneContext_H

#include <QJsonObject>

#include "OAIBinLogCoordinates.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBinLogCoordinates;

class OAICloneContext : public OAIObject {
public:
    OAICloneContext();
    OAICloneContext(QString json);
    ~OAICloneContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAllocatedIpRange() const;
    void setAllocatedIpRange(const QString &allocated_ip_range);
    bool is_allocated_ip_range_Set() const;
    bool is_allocated_ip_range_Valid() const;

    OAIBinLogCoordinates getBinLogCoordinates() const;
    void setBinLogCoordinates(const OAIBinLogCoordinates &bin_log_coordinates);
    bool is_bin_log_coordinates_Set() const;
    bool is_bin_log_coordinates_Valid() const;

    QList<QString> getDatabaseNames() const;
    void setDatabaseNames(const QList<QString> &database_names);
    bool is_database_names_Set() const;
    bool is_database_names_Valid() const;

    QString getDestinationInstanceName() const;
    void setDestinationInstanceName(const QString &destination_instance_name);
    bool is_destination_instance_name_Set() const;
    bool is_destination_instance_name_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getPitrTimestampMs() const;
    void setPitrTimestampMs(const QString &pitr_timestamp_ms);
    bool is_pitr_timestamp_ms_Set() const;
    bool is_pitr_timestamp_ms_Valid() const;

    QString getPointInTime() const;
    void setPointInTime(const QString &point_in_time);
    bool is_point_in_time_Set() const;
    bool is_point_in_time_Valid() const;

    QString getPreferredZone() const;
    void setPreferredZone(const QString &preferred_zone);
    bool is_preferred_zone_Set() const;
    bool is_preferred_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_allocated_ip_range;
    bool m_allocated_ip_range_isSet;
    bool m_allocated_ip_range_isValid;

    OAIBinLogCoordinates m_bin_log_coordinates;
    bool m_bin_log_coordinates_isSet;
    bool m_bin_log_coordinates_isValid;

    QList<QString> m_database_names;
    bool m_database_names_isSet;
    bool m_database_names_isValid;

    QString m_destination_instance_name;
    bool m_destination_instance_name_isSet;
    bool m_destination_instance_name_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_pitr_timestamp_ms;
    bool m_pitr_timestamp_ms_isSet;
    bool m_pitr_timestamp_ms_isValid;

    QString m_point_in_time;
    bool m_point_in_time_isSet;
    bool m_point_in_time_isValid;

    QString m_preferred_zone;
    bool m_preferred_zone_isSet;
    bool m_preferred_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloneContext)

#endif // OAICloneContext_H
