/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstancesListResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstancesListResponse::OAIInstancesListResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstancesListResponse::OAIInstancesListResponse() {
    this->initializeModel();
}

OAIInstancesListResponse::~OAIInstancesListResponse() {}

void OAIInstancesListResponse::initializeModel() {

    m_items_isSet = false;
    m_items_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_warnings_isSet = false;
    m_warnings_isValid = false;
}

void OAIInstancesListResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstancesListResponse::fromJsonObject(QJsonObject json) {

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_warnings_isValid = ::OpenAPI::fromJsonValue(m_warnings, json[QString("warnings")]);
    m_warnings_isSet = !json[QString("warnings")].isNull() && m_warnings_isValid;
}

QString OAIInstancesListResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstancesListResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_warnings.size() > 0) {
        obj.insert(QString("warnings"), ::OpenAPI::toJsonValue(m_warnings));
    }
    return obj;
}

QList<OAIDatabaseInstance> OAIInstancesListResponse::getItems() const {
    return m_items;
}
void OAIInstancesListResponse::setItems(const QList<OAIDatabaseInstance> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIInstancesListResponse::is_items_Set() const{
    return m_items_isSet;
}

bool OAIInstancesListResponse::is_items_Valid() const{
    return m_items_isValid;
}

QString OAIInstancesListResponse::getKind() const {
    return m_kind;
}
void OAIInstancesListResponse::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIInstancesListResponse::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIInstancesListResponse::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIInstancesListResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIInstancesListResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIInstancesListResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIInstancesListResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAIApiWarning> OAIInstancesListResponse::getWarnings() const {
    return m_warnings;
}
void OAIInstancesListResponse::setWarnings(const QList<OAIApiWarning> &warnings) {
    m_warnings = warnings;
    m_warnings_isSet = true;
}

bool OAIInstancesListResponse::is_warnings_Set() const{
    return m_warnings_isSet;
}

bool OAIInstancesListResponse::is_warnings_Valid() const{
    return m_warnings_isValid;
}

bool OAIInstancesListResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstancesListResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
