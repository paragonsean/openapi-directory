/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser.h
 *
 * A Cloud SQL user resource.
 */

#ifndef OAIUser_H
#define OAIUser_H

#include <QJsonObject>

#include "OAISqlServerUserDetails.h"
#include "OAIUserPasswordValidationPolicy.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserPasswordValidationPolicy;
class OAISqlServerUserDetails;

class OAIUser : public OAIObject {
public:
    OAIUser();
    OAIUser(QString json);
    ~OAIUser() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDualPasswordType() const;
    void setDualPasswordType(const QString &dual_password_type);
    bool is_dual_password_type_Set() const;
    bool is_dual_password_type_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getHost() const;
    void setHost(const QString &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    QString getInstance() const;
    void setInstance(const QString &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    OAIUserPasswordValidationPolicy getPasswordPolicy() const;
    void setPasswordPolicy(const OAIUserPasswordValidationPolicy &password_policy);
    bool is_password_policy_Set() const;
    bool is_password_policy_Valid() const;

    QString getProject() const;
    void setProject(const QString &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    OAISqlServerUserDetails getSqlserverUserDetails() const;
    void setSqlserverUserDetails(const OAISqlServerUserDetails &sqlserver_user_details);
    bool is_sqlserver_user_details_Set() const;
    bool is_sqlserver_user_details_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dual_password_type;
    bool m_dual_password_type_isSet;
    bool m_dual_password_type_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    QString m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    OAIUserPasswordValidationPolicy m_password_policy;
    bool m_password_policy_isSet;
    bool m_password_policy_isValid;

    QString m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    OAISqlServerUserDetails m_sqlserver_user_details;
    bool m_sqlserver_user_details_isSet;
    bool m_sqlserver_user_details_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser)

#endif // OAIUser_H
