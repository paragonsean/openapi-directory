/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOperation.h
 *
 * An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource.
 */

#ifndef OAIOperation_H
#define OAIOperation_H

#include <QJsonObject>

#include "OAIApiWarning.h"
#include "OAIBackupContext.h"
#include "OAIExportContext.h"
#include "OAIImportContext.h"
#include "OAIOperationErrors.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApiWarning;
class OAIBackupContext;
class OAIOperationErrors;
class OAIExportContext;
class OAIImportContext;

class OAIOperation : public OAIObject {
public:
    OAIOperation();
    OAIOperation(QString json);
    ~OAIOperation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApiWarning getApiWarning() const;
    void setApiWarning(const OAIApiWarning &api_warning);
    bool is_api_warning_Set() const;
    bool is_api_warning_Valid() const;

    OAIBackupContext getBackupContext() const;
    void setBackupContext(const OAIBackupContext &backup_context);
    bool is_backup_context_Set() const;
    bool is_backup_context_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIOperationErrors getError() const;
    void setError(const OAIOperationErrors &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    OAIExportContext getExportContext() const;
    void setExportContext(const OAIExportContext &export_context);
    bool is_export_context_Set() const;
    bool is_export_context_Valid() const;

    OAIImportContext getImportContext() const;
    void setImportContext(const OAIImportContext &import_context);
    bool is_import_context_Set() const;
    bool is_import_context_Valid() const;

    QString getInsertTime() const;
    void setInsertTime(const QString &insert_time);
    bool is_insert_time_Set() const;
    bool is_insert_time_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOperationType() const;
    void setOperationType(const QString &operation_type);
    bool is_operation_type_Set() const;
    bool is_operation_type_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTargetId() const;
    void setTargetId(const QString &target_id);
    bool is_target_id_Set() const;
    bool is_target_id_Valid() const;

    QString getTargetLink() const;
    void setTargetLink(const QString &target_link);
    bool is_target_link_Set() const;
    bool is_target_link_Valid() const;

    QString getTargetProject() const;
    void setTargetProject(const QString &target_project);
    bool is_target_project_Set() const;
    bool is_target_project_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApiWarning m_api_warning;
    bool m_api_warning_isSet;
    bool m_api_warning_isValid;

    OAIBackupContext m_backup_context;
    bool m_backup_context_isSet;
    bool m_backup_context_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIOperationErrors m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    OAIExportContext m_export_context;
    bool m_export_context_isSet;
    bool m_export_context_isValid;

    OAIImportContext m_import_context;
    bool m_import_context_isSet;
    bool m_import_context_isValid;

    QString m_insert_time;
    bool m_insert_time_isSet;
    bool m_insert_time_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_operation_type;
    bool m_operation_type_isSet;
    bool m_operation_type_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_target_id;
    bool m_target_id_isSet;
    bool m_target_id_isValid;

    QString m_target_link;
    bool m_target_link_isSet;
    bool m_target_link_isValid;

    QString m_target_project;
    bool m_target_project_isSet;
    bool m_target_project_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOperation)

#endif // OAIOperation_H
