/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackupRun.h
 *
 * A BackupRun resource.
 */

#ifndef OAIBackupRun_H
#define OAIBackupRun_H

#include <QJsonObject>

#include "OAIDiskEncryptionConfiguration.h"
#include "OAIDiskEncryptionStatus.h"
#include "OAIOperationError.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiskEncryptionConfiguration;
class OAIDiskEncryptionStatus;
class OAIOperationError;

class OAIBackupRun : public OAIObject {
public:
    OAIBackupRun();
    OAIBackupRun(QString json);
    ~OAIBackupRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackupKind() const;
    void setBackupKind(const QString &backup_kind);
    bool is_backup_kind_Set() const;
    bool is_backup_kind_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDiskEncryptionConfiguration getDiskEncryptionConfiguration() const;
    void setDiskEncryptionConfiguration(const OAIDiskEncryptionConfiguration &disk_encryption_configuration);
    bool is_disk_encryption_configuration_Set() const;
    bool is_disk_encryption_configuration_Valid() const;

    OAIDiskEncryptionStatus getDiskEncryptionStatus() const;
    void setDiskEncryptionStatus(const OAIDiskEncryptionStatus &disk_encryption_status);
    bool is_disk_encryption_status_Set() const;
    bool is_disk_encryption_status_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getEnqueuedTime() const;
    void setEnqueuedTime(const QString &enqueued_time);
    bool is_enqueued_time_Set() const;
    bool is_enqueued_time_Valid() const;

    OAIOperationError getError() const;
    void setError(const OAIOperationError &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInstance() const;
    void setInstance(const QString &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getWindowStartTime() const;
    void setWindowStartTime(const QString &window_start_time);
    bool is_window_start_time_Set() const;
    bool is_window_start_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_backup_kind;
    bool m_backup_kind_isSet;
    bool m_backup_kind_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDiskEncryptionConfiguration m_disk_encryption_configuration;
    bool m_disk_encryption_configuration_isSet;
    bool m_disk_encryption_configuration_isValid;

    OAIDiskEncryptionStatus m_disk_encryption_status;
    bool m_disk_encryption_status_isSet;
    bool m_disk_encryption_status_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_enqueued_time;
    bool m_enqueued_time_isSet;
    bool m_enqueued_time_isValid;

    OAIOperationError m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_window_start_time;
    bool m_window_start_time_isSet;
    bool m_window_start_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackupRun)

#endif // OAIBackupRun_H
