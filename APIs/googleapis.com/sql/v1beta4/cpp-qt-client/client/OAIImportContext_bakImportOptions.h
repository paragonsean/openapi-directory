/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportContext_bakImportOptions.h
 *
 * Import parameters specific to SQL Server .BAK files
 */

#ifndef OAIImportContext_bakImportOptions_H
#define OAIImportContext_bakImportOptions_H

#include <QJsonObject>

#include "OAIImportContext_bakImportOptions_encryptionOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImportContext_bakImportOptions_encryptionOptions;

class OAIImportContext_bakImportOptions : public OAIObject {
public:
    OAIImportContext_bakImportOptions();
    OAIImportContext_bakImportOptions(QString json);
    ~OAIImportContext_bakImportOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBakType() const;
    void setBakType(const QString &bak_type);
    bool is_bak_type_Set() const;
    bool is_bak_type_Valid() const;

    OAIImportContext_bakImportOptions_encryptionOptions getEncryptionOptions() const;
    void setEncryptionOptions(const OAIImportContext_bakImportOptions_encryptionOptions &encryption_options);
    bool is_encryption_options_Set() const;
    bool is_encryption_options_Valid() const;

    bool isNoRecovery() const;
    void setNoRecovery(const bool &no_recovery);
    bool is_no_recovery_Set() const;
    bool is_no_recovery_Valid() const;

    bool isRecoveryOnly() const;
    void setRecoveryOnly(const bool &recovery_only);
    bool is_recovery_only_Set() const;
    bool is_recovery_only_Valid() const;

    QString getStopAt() const;
    void setStopAt(const QString &stop_at);
    bool is_stop_at_Set() const;
    bool is_stop_at_Valid() const;

    QString getStopAtMark() const;
    void setStopAtMark(const QString &stop_at_mark);
    bool is_stop_at_mark_Set() const;
    bool is_stop_at_mark_Valid() const;

    bool isStriped() const;
    void setStriped(const bool &striped);
    bool is_striped_Set() const;
    bool is_striped_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bak_type;
    bool m_bak_type_isSet;
    bool m_bak_type_isValid;

    OAIImportContext_bakImportOptions_encryptionOptions m_encryption_options;
    bool m_encryption_options_isSet;
    bool m_encryption_options_isValid;

    bool m_no_recovery;
    bool m_no_recovery_isSet;
    bool m_no_recovery_isValid;

    bool m_recovery_only;
    bool m_recovery_only_isSet;
    bool m_recovery_only_isValid;

    QString m_stop_at;
    bool m_stop_at_isSet;
    bool m_stop_at_isValid;

    QString m_stop_at_mark;
    bool m_stop_at_mark_isSet;
    bool m_stop_at_mark_isValid;

    bool m_striped;
    bool m_striped_isSet;
    bool m_striped_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportContext_bakImportOptions)

#endif // OAIImportContext_bakImportOptions_H
