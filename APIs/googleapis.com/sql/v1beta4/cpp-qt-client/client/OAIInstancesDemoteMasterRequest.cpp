/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstancesDemoteMasterRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstancesDemoteMasterRequest::OAIInstancesDemoteMasterRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstancesDemoteMasterRequest::OAIInstancesDemoteMasterRequest() {
    this->initializeModel();
}

OAIInstancesDemoteMasterRequest::~OAIInstancesDemoteMasterRequest() {}

void OAIInstancesDemoteMasterRequest::initializeModel() {

    m_demote_master_context_isSet = false;
    m_demote_master_context_isValid = false;
}

void OAIInstancesDemoteMasterRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstancesDemoteMasterRequest::fromJsonObject(QJsonObject json) {

    m_demote_master_context_isValid = ::OpenAPI::fromJsonValue(m_demote_master_context, json[QString("demoteMasterContext")]);
    m_demote_master_context_isSet = !json[QString("demoteMasterContext")].isNull() && m_demote_master_context_isValid;
}

QString OAIInstancesDemoteMasterRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstancesDemoteMasterRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_demote_master_context.isSet()) {
        obj.insert(QString("demoteMasterContext"), ::OpenAPI::toJsonValue(m_demote_master_context));
    }
    return obj;
}

OAIDemoteMasterContext OAIInstancesDemoteMasterRequest::getDemoteMasterContext() const {
    return m_demote_master_context;
}
void OAIInstancesDemoteMasterRequest::setDemoteMasterContext(const OAIDemoteMasterContext &demote_master_context) {
    m_demote_master_context = demote_master_context;
    m_demote_master_context_isSet = true;
}

bool OAIInstancesDemoteMasterRequest::is_demote_master_context_Set() const{
    return m_demote_master_context_isSet;
}

bool OAIInstancesDemoteMasterRequest::is_demote_master_context_Valid() const{
    return m_demote_master_context_isValid;
}

bool OAIInstancesDemoteMasterRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_demote_master_context.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstancesDemoteMasterRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
