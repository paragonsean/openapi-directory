/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMaintenanceWindow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMaintenanceWindow::OAIMaintenanceWindow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMaintenanceWindow::OAIMaintenanceWindow() {
    this->initializeModel();
}

OAIMaintenanceWindow::~OAIMaintenanceWindow() {}

void OAIMaintenanceWindow::initializeModel() {

    m_day_isSet = false;
    m_day_isValid = false;

    m_hour_isSet = false;
    m_hour_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_update_track_isSet = false;
    m_update_track_isValid = false;
}

void OAIMaintenanceWindow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMaintenanceWindow::fromJsonObject(QJsonObject json) {

    m_day_isValid = ::OpenAPI::fromJsonValue(m_day, json[QString("day")]);
    m_day_isSet = !json[QString("day")].isNull() && m_day_isValid;

    m_hour_isValid = ::OpenAPI::fromJsonValue(m_hour, json[QString("hour")]);
    m_hour_isSet = !json[QString("hour")].isNull() && m_hour_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_update_track_isValid = ::OpenAPI::fromJsonValue(m_update_track, json[QString("updateTrack")]);
    m_update_track_isSet = !json[QString("updateTrack")].isNull() && m_update_track_isValid;
}

QString OAIMaintenanceWindow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMaintenanceWindow::asJsonObject() const {
    QJsonObject obj;
    if (m_day_isSet) {
        obj.insert(QString("day"), ::OpenAPI::toJsonValue(m_day));
    }
    if (m_hour_isSet) {
        obj.insert(QString("hour"), ::OpenAPI::toJsonValue(m_hour));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_update_track_isSet) {
        obj.insert(QString("updateTrack"), ::OpenAPI::toJsonValue(m_update_track));
    }
    return obj;
}

qint32 OAIMaintenanceWindow::getDay() const {
    return m_day;
}
void OAIMaintenanceWindow::setDay(const qint32 &day) {
    m_day = day;
    m_day_isSet = true;
}

bool OAIMaintenanceWindow::is_day_Set() const{
    return m_day_isSet;
}

bool OAIMaintenanceWindow::is_day_Valid() const{
    return m_day_isValid;
}

qint32 OAIMaintenanceWindow::getHour() const {
    return m_hour;
}
void OAIMaintenanceWindow::setHour(const qint32 &hour) {
    m_hour = hour;
    m_hour_isSet = true;
}

bool OAIMaintenanceWindow::is_hour_Set() const{
    return m_hour_isSet;
}

bool OAIMaintenanceWindow::is_hour_Valid() const{
    return m_hour_isValid;
}

QString OAIMaintenanceWindow::getKind() const {
    return m_kind;
}
void OAIMaintenanceWindow::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIMaintenanceWindow::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIMaintenanceWindow::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIMaintenanceWindow::getUpdateTrack() const {
    return m_update_track;
}
void OAIMaintenanceWindow::setUpdateTrack(const QString &update_track) {
    m_update_track = update_track;
    m_update_track_isSet = true;
}

bool OAIMaintenanceWindow::is_update_track_Set() const{
    return m_update_track_isSet;
}

bool OAIMaintenanceWindow::is_update_track_Valid() const{
    return m_update_track_isValid;
}

bool OAIMaintenanceWindow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hour_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_track_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMaintenanceWindow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
