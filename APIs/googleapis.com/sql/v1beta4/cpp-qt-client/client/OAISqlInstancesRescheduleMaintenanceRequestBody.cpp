/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISqlInstancesRescheduleMaintenanceRequestBody.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISqlInstancesRescheduleMaintenanceRequestBody::OAISqlInstancesRescheduleMaintenanceRequestBody(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISqlInstancesRescheduleMaintenanceRequestBody::OAISqlInstancesRescheduleMaintenanceRequestBody() {
    this->initializeModel();
}

OAISqlInstancesRescheduleMaintenanceRequestBody::~OAISqlInstancesRescheduleMaintenanceRequestBody() {}

void OAISqlInstancesRescheduleMaintenanceRequestBody::initializeModel() {

    m_reschedule_isSet = false;
    m_reschedule_isValid = false;
}

void OAISqlInstancesRescheduleMaintenanceRequestBody::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISqlInstancesRescheduleMaintenanceRequestBody::fromJsonObject(QJsonObject json) {

    m_reschedule_isValid = ::OpenAPI::fromJsonValue(m_reschedule, json[QString("reschedule")]);
    m_reschedule_isSet = !json[QString("reschedule")].isNull() && m_reschedule_isValid;
}

QString OAISqlInstancesRescheduleMaintenanceRequestBody::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISqlInstancesRescheduleMaintenanceRequestBody::asJsonObject() const {
    QJsonObject obj;
    if (m_reschedule.isSet()) {
        obj.insert(QString("reschedule"), ::OpenAPI::toJsonValue(m_reschedule));
    }
    return obj;
}

OAIReschedule OAISqlInstancesRescheduleMaintenanceRequestBody::getReschedule() const {
    return m_reschedule;
}
void OAISqlInstancesRescheduleMaintenanceRequestBody::setReschedule(const OAIReschedule &reschedule) {
    m_reschedule = reschedule;
    m_reschedule_isSet = true;
}

bool OAISqlInstancesRescheduleMaintenanceRequestBody::is_reschedule_Set() const{
    return m_reschedule_isSet;
}

bool OAISqlInstancesRescheduleMaintenanceRequestBody::is_reschedule_Valid() const{
    return m_reschedule_isValid;
}

bool OAISqlInstancesRescheduleMaintenanceRequestBody::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reschedule.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISqlInstancesRescheduleMaintenanceRequestBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
