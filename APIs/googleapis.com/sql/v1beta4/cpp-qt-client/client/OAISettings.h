/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISettings.h
 *
 * Database instance settings.
 */

#ifndef OAISettings_H
#define OAISettings_H

#include <QJsonObject>

#include "OAIAdvancedMachineFeatures.h"
#include "OAIBackupConfiguration.h"
#include "OAIDataCacheConfig.h"
#include "OAIDatabaseFlags.h"
#include "OAIDenyMaintenancePeriod.h"
#include "OAIInsightsConfig.h"
#include "OAIIpConfiguration.h"
#include "OAILocationPreference.h"
#include "OAIMaintenanceWindow.h"
#include "OAIPasswordValidationPolicy.h"
#include "OAISqlActiveDirectoryConfig.h"
#include "OAISqlServerAuditConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISqlActiveDirectoryConfig;
class OAIAdvancedMachineFeatures;
class OAIBackupConfiguration;
class OAIDataCacheConfig;
class OAIDatabaseFlags;
class OAIDenyMaintenancePeriod;
class OAIInsightsConfig;
class OAIIpConfiguration;
class OAILocationPreference;
class OAIMaintenanceWindow;
class OAIPasswordValidationPolicy;
class OAISqlServerAuditConfig;

class OAISettings : public OAIObject {
public:
    OAISettings();
    OAISettings(QString json);
    ~OAISettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActivationPolicy() const;
    void setActivationPolicy(const QString &activation_policy);
    bool is_activation_policy_Set() const;
    bool is_activation_policy_Valid() const;

    OAISqlActiveDirectoryConfig getActiveDirectoryConfig() const;
    void setActiveDirectoryConfig(const OAISqlActiveDirectoryConfig &active_directory_config);
    bool is_active_directory_config_Set() const;
    bool is_active_directory_config_Valid() const;

    OAIAdvancedMachineFeatures getAdvancedMachineFeatures() const;
    void setAdvancedMachineFeatures(const OAIAdvancedMachineFeatures &advanced_machine_features);
    bool is_advanced_machine_features_Set() const;
    bool is_advanced_machine_features_Valid() const;

    Q_DECL_DEPRECATED QList<QString> getAuthorizedGaeApplications() const;
    Q_DECL_DEPRECATED void setAuthorizedGaeApplications(const QList<QString> &authorized_gae_applications);
    Q_DECL_DEPRECATED bool is_authorized_gae_applications_Set() const;
    Q_DECL_DEPRECATED bool is_authorized_gae_applications_Valid() const;

    QString getAvailabilityType() const;
    void setAvailabilityType(const QString &availability_type);
    bool is_availability_type_Set() const;
    bool is_availability_type_Valid() const;

    OAIBackupConfiguration getBackupConfiguration() const;
    void setBackupConfiguration(const OAIBackupConfiguration &backup_configuration);
    bool is_backup_configuration_Set() const;
    bool is_backup_configuration_Valid() const;

    QString getCollation() const;
    void setCollation(const QString &collation);
    bool is_collation_Set() const;
    bool is_collation_Valid() const;

    QString getConnectorEnforcement() const;
    void setConnectorEnforcement(const QString &connector_enforcement);
    bool is_connector_enforcement_Set() const;
    bool is_connector_enforcement_Valid() const;

    Q_DECL_DEPRECATED bool isCrashSafeReplicationEnabled() const;
    Q_DECL_DEPRECATED void setCrashSafeReplicationEnabled(const bool &crash_safe_replication_enabled);
    Q_DECL_DEPRECATED bool is_crash_safe_replication_enabled_Set() const;
    Q_DECL_DEPRECATED bool is_crash_safe_replication_enabled_Valid() const;

    OAIDataCacheConfig getDataCacheConfig() const;
    void setDataCacheConfig(const OAIDataCacheConfig &data_cache_config);
    bool is_data_cache_config_Set() const;
    bool is_data_cache_config_Valid() const;

    QString getDataDiskSizeGb() const;
    void setDataDiskSizeGb(const QString &data_disk_size_gb);
    bool is_data_disk_size_gb_Set() const;
    bool is_data_disk_size_gb_Valid() const;

    QString getDataDiskType() const;
    void setDataDiskType(const QString &data_disk_type);
    bool is_data_disk_type_Set() const;
    bool is_data_disk_type_Valid() const;

    QList<OAIDatabaseFlags> getDatabaseFlags() const;
    void setDatabaseFlags(const QList<OAIDatabaseFlags> &database_flags);
    bool is_database_flags_Set() const;
    bool is_database_flags_Valid() const;

    bool isDatabaseReplicationEnabled() const;
    void setDatabaseReplicationEnabled(const bool &database_replication_enabled);
    bool is_database_replication_enabled_Set() const;
    bool is_database_replication_enabled_Valid() const;

    bool isDeletionProtectionEnabled() const;
    void setDeletionProtectionEnabled(const bool &deletion_protection_enabled);
    bool is_deletion_protection_enabled_Set() const;
    bool is_deletion_protection_enabled_Valid() const;

    QList<OAIDenyMaintenancePeriod> getDenyMaintenancePeriods() const;
    void setDenyMaintenancePeriods(const QList<OAIDenyMaintenancePeriod> &deny_maintenance_periods);
    bool is_deny_maintenance_periods_Set() const;
    bool is_deny_maintenance_periods_Valid() const;

    QString getEdition() const;
    void setEdition(const QString &edition);
    bool is_edition_Set() const;
    bool is_edition_Valid() const;

    OAIInsightsConfig getInsightsConfig() const;
    void setInsightsConfig(const OAIInsightsConfig &insights_config);
    bool is_insights_config_Set() const;
    bool is_insights_config_Valid() const;

    OAIIpConfiguration getIpConfiguration() const;
    void setIpConfiguration(const OAIIpConfiguration &ip_configuration);
    bool is_ip_configuration_Set() const;
    bool is_ip_configuration_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAILocationPreference getLocationPreference() const;
    void setLocationPreference(const OAILocationPreference &location_preference);
    bool is_location_preference_Set() const;
    bool is_location_preference_Valid() const;

    OAIMaintenanceWindow getMaintenanceWindow() const;
    void setMaintenanceWindow(const OAIMaintenanceWindow &maintenance_window);
    bool is_maintenance_window_Set() const;
    bool is_maintenance_window_Valid() const;

    OAIPasswordValidationPolicy getPasswordValidationPolicy() const;
    void setPasswordValidationPolicy(const OAIPasswordValidationPolicy &password_validation_policy);
    bool is_password_validation_policy_Set() const;
    bool is_password_validation_policy_Valid() const;

    QString getPricingPlan() const;
    void setPricingPlan(const QString &pricing_plan);
    bool is_pricing_plan_Set() const;
    bool is_pricing_plan_Valid() const;

    Q_DECL_DEPRECATED QString getReplicationType() const;
    Q_DECL_DEPRECATED void setReplicationType(const QString &replication_type);
    Q_DECL_DEPRECATED bool is_replication_type_Set() const;
    Q_DECL_DEPRECATED bool is_replication_type_Valid() const;

    QString getSettingsVersion() const;
    void setSettingsVersion(const QString &settings_version);
    bool is_settings_version_Set() const;
    bool is_settings_version_Valid() const;

    OAISqlServerAuditConfig getSqlServerAuditConfig() const;
    void setSqlServerAuditConfig(const OAISqlServerAuditConfig &sql_server_audit_config);
    bool is_sql_server_audit_config_Set() const;
    bool is_sql_server_audit_config_Valid() const;

    bool isStorageAutoResize() const;
    void setStorageAutoResize(const bool &storage_auto_resize);
    bool is_storage_auto_resize_Set() const;
    bool is_storage_auto_resize_Valid() const;

    QString getStorageAutoResizeLimit() const;
    void setStorageAutoResizeLimit(const QString &storage_auto_resize_limit);
    bool is_storage_auto_resize_limit_Set() const;
    bool is_storage_auto_resize_limit_Valid() const;

    QString getTier() const;
    void setTier(const QString &tier);
    bool is_tier_Set() const;
    bool is_tier_Valid() const;

    QString getTimeZone() const;
    void setTimeZone(const QString &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    QMap<QString, QString> getUserLabels() const;
    void setUserLabels(const QMap<QString, QString> &user_labels);
    bool is_user_labels_Set() const;
    bool is_user_labels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_activation_policy;
    bool m_activation_policy_isSet;
    bool m_activation_policy_isValid;

    OAISqlActiveDirectoryConfig m_active_directory_config;
    bool m_active_directory_config_isSet;
    bool m_active_directory_config_isValid;

    OAIAdvancedMachineFeatures m_advanced_machine_features;
    bool m_advanced_machine_features_isSet;
    bool m_advanced_machine_features_isValid;

    QList<QString> m_authorized_gae_applications;
    bool m_authorized_gae_applications_isSet;
    bool m_authorized_gae_applications_isValid;

    QString m_availability_type;
    bool m_availability_type_isSet;
    bool m_availability_type_isValid;

    OAIBackupConfiguration m_backup_configuration;
    bool m_backup_configuration_isSet;
    bool m_backup_configuration_isValid;

    QString m_collation;
    bool m_collation_isSet;
    bool m_collation_isValid;

    QString m_connector_enforcement;
    bool m_connector_enforcement_isSet;
    bool m_connector_enforcement_isValid;

    bool m_crash_safe_replication_enabled;
    bool m_crash_safe_replication_enabled_isSet;
    bool m_crash_safe_replication_enabled_isValid;

    OAIDataCacheConfig m_data_cache_config;
    bool m_data_cache_config_isSet;
    bool m_data_cache_config_isValid;

    QString m_data_disk_size_gb;
    bool m_data_disk_size_gb_isSet;
    bool m_data_disk_size_gb_isValid;

    QString m_data_disk_type;
    bool m_data_disk_type_isSet;
    bool m_data_disk_type_isValid;

    QList<OAIDatabaseFlags> m_database_flags;
    bool m_database_flags_isSet;
    bool m_database_flags_isValid;

    bool m_database_replication_enabled;
    bool m_database_replication_enabled_isSet;
    bool m_database_replication_enabled_isValid;

    bool m_deletion_protection_enabled;
    bool m_deletion_protection_enabled_isSet;
    bool m_deletion_protection_enabled_isValid;

    QList<OAIDenyMaintenancePeriod> m_deny_maintenance_periods;
    bool m_deny_maintenance_periods_isSet;
    bool m_deny_maintenance_periods_isValid;

    QString m_edition;
    bool m_edition_isSet;
    bool m_edition_isValid;

    OAIInsightsConfig m_insights_config;
    bool m_insights_config_isSet;
    bool m_insights_config_isValid;

    OAIIpConfiguration m_ip_configuration;
    bool m_ip_configuration_isSet;
    bool m_ip_configuration_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAILocationPreference m_location_preference;
    bool m_location_preference_isSet;
    bool m_location_preference_isValid;

    OAIMaintenanceWindow m_maintenance_window;
    bool m_maintenance_window_isSet;
    bool m_maintenance_window_isValid;

    OAIPasswordValidationPolicy m_password_validation_policy;
    bool m_password_validation_policy_isSet;
    bool m_password_validation_policy_isValid;

    QString m_pricing_plan;
    bool m_pricing_plan_isSet;
    bool m_pricing_plan_isValid;

    QString m_replication_type;
    bool m_replication_type_isSet;
    bool m_replication_type_isValid;

    QString m_settings_version;
    bool m_settings_version_isSet;
    bool m_settings_version_isValid;

    OAISqlServerAuditConfig m_sql_server_audit_config;
    bool m_sql_server_audit_config_isSet;
    bool m_sql_server_audit_config_isValid;

    bool m_storage_auto_resize;
    bool m_storage_auto_resize_isSet;
    bool m_storage_auto_resize_isValid;

    QString m_storage_auto_resize_limit;
    bool m_storage_auto_resize_limit_isSet;
    bool m_storage_auto_resize_limit_isValid;

    QString m_tier;
    bool m_tier_isSet;
    bool m_tier_isValid;

    QString m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    QMap<QString, QString> m_user_labels;
    bool m_user_labels_isSet;
    bool m_user_labels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISettings)

#endif // OAISettings_H
