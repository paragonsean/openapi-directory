/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFlag.h
 *
 * A flag resource.
 */

#ifndef OAIFlag_H
#define OAIFlag_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFlag : public OAIObject {
public:
    OAIFlag();
    OAIFlag(QString json);
    ~OAIFlag() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedIntValues() const;
    void setAllowedIntValues(const QList<QString> &allowed_int_values);
    bool is_allowed_int_values_Set() const;
    bool is_allowed_int_values_Valid() const;

    QList<QString> getAllowedStringValues() const;
    void setAllowedStringValues(const QList<QString> &allowed_string_values);
    bool is_allowed_string_values_Set() const;
    bool is_allowed_string_values_Valid() const;

    QList<QString> getAppliesTo() const;
    void setAppliesTo(const QList<QString> &applies_to);
    bool is_applies_to_Set() const;
    bool is_applies_to_Valid() const;

    bool isInBeta() const;
    void setInBeta(const bool &in_beta);
    bool is_in_beta_Set() const;
    bool is_in_beta_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getMaxValue() const;
    void setMaxValue(const QString &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    QString getMinValue() const;
    void setMinValue(const QString &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isRequiresRestart() const;
    void setRequiresRestart(const bool &requires_restart);
    bool is_requires_restart_Set() const;
    bool is_requires_restart_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_int_values;
    bool m_allowed_int_values_isSet;
    bool m_allowed_int_values_isValid;

    QList<QString> m_allowed_string_values;
    bool m_allowed_string_values_isSet;
    bool m_allowed_string_values_isValid;

    QList<QString> m_applies_to;
    bool m_applies_to_isSet;
    bool m_applies_to_isValid;

    bool m_in_beta;
    bool m_in_beta_isSet;
    bool m_in_beta_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    QString m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_requires_restart;
    bool m_requires_restart_isSet;
    bool m_requires_restart_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFlag)

#endif // OAIFlag_H
