/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGenerateEphemeralCertResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGenerateEphemeralCertResponse::OAIGenerateEphemeralCertResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGenerateEphemeralCertResponse::OAIGenerateEphemeralCertResponse() {
    this->initializeModel();
}

OAIGenerateEphemeralCertResponse::~OAIGenerateEphemeralCertResponse() {}

void OAIGenerateEphemeralCertResponse::initializeModel() {

    m_ephemeral_cert_isSet = false;
    m_ephemeral_cert_isValid = false;
}

void OAIGenerateEphemeralCertResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGenerateEphemeralCertResponse::fromJsonObject(QJsonObject json) {

    m_ephemeral_cert_isValid = ::OpenAPI::fromJsonValue(m_ephemeral_cert, json[QString("ephemeralCert")]);
    m_ephemeral_cert_isSet = !json[QString("ephemeralCert")].isNull() && m_ephemeral_cert_isValid;
}

QString OAIGenerateEphemeralCertResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGenerateEphemeralCertResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_ephemeral_cert.isSet()) {
        obj.insert(QString("ephemeralCert"), ::OpenAPI::toJsonValue(m_ephemeral_cert));
    }
    return obj;
}

OAISslCert OAIGenerateEphemeralCertResponse::getEphemeralCert() const {
    return m_ephemeral_cert;
}
void OAIGenerateEphemeralCertResponse::setEphemeralCert(const OAISslCert &ephemeral_cert) {
    m_ephemeral_cert = ephemeral_cert;
    m_ephemeral_cert_isSet = true;
}

bool OAIGenerateEphemeralCertResponse::is_ephemeral_cert_Set() const{
    return m_ephemeral_cert_isSet;
}

bool OAIGenerateEphemeralCertResponse::is_ephemeral_cert_Valid() const{
    return m_ephemeral_cert_isValid;
}

bool OAIGenerateEphemeralCertResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ephemeral_cert.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGenerateEphemeralCertResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
