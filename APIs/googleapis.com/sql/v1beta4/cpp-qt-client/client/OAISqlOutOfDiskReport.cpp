/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISqlOutOfDiskReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISqlOutOfDiskReport::OAISqlOutOfDiskReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISqlOutOfDiskReport::OAISqlOutOfDiskReport() {
    this->initializeModel();
}

OAISqlOutOfDiskReport::~OAISqlOutOfDiskReport() {}

void OAISqlOutOfDiskReport::initializeModel() {

    m_sql_min_recommended_increase_size_gb_isSet = false;
    m_sql_min_recommended_increase_size_gb_isValid = false;

    m_sql_out_of_disk_state_isSet = false;
    m_sql_out_of_disk_state_isValid = false;
}

void OAISqlOutOfDiskReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISqlOutOfDiskReport::fromJsonObject(QJsonObject json) {

    m_sql_min_recommended_increase_size_gb_isValid = ::OpenAPI::fromJsonValue(m_sql_min_recommended_increase_size_gb, json[QString("sqlMinRecommendedIncreaseSizeGb")]);
    m_sql_min_recommended_increase_size_gb_isSet = !json[QString("sqlMinRecommendedIncreaseSizeGb")].isNull() && m_sql_min_recommended_increase_size_gb_isValid;

    m_sql_out_of_disk_state_isValid = ::OpenAPI::fromJsonValue(m_sql_out_of_disk_state, json[QString("sqlOutOfDiskState")]);
    m_sql_out_of_disk_state_isSet = !json[QString("sqlOutOfDiskState")].isNull() && m_sql_out_of_disk_state_isValid;
}

QString OAISqlOutOfDiskReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISqlOutOfDiskReport::asJsonObject() const {
    QJsonObject obj;
    if (m_sql_min_recommended_increase_size_gb_isSet) {
        obj.insert(QString("sqlMinRecommendedIncreaseSizeGb"), ::OpenAPI::toJsonValue(m_sql_min_recommended_increase_size_gb));
    }
    if (m_sql_out_of_disk_state_isSet) {
        obj.insert(QString("sqlOutOfDiskState"), ::OpenAPI::toJsonValue(m_sql_out_of_disk_state));
    }
    return obj;
}

qint32 OAISqlOutOfDiskReport::getSqlMinRecommendedIncreaseSizeGb() const {
    return m_sql_min_recommended_increase_size_gb;
}
void OAISqlOutOfDiskReport::setSqlMinRecommendedIncreaseSizeGb(const qint32 &sql_min_recommended_increase_size_gb) {
    m_sql_min_recommended_increase_size_gb = sql_min_recommended_increase_size_gb;
    m_sql_min_recommended_increase_size_gb_isSet = true;
}

bool OAISqlOutOfDiskReport::is_sql_min_recommended_increase_size_gb_Set() const{
    return m_sql_min_recommended_increase_size_gb_isSet;
}

bool OAISqlOutOfDiskReport::is_sql_min_recommended_increase_size_gb_Valid() const{
    return m_sql_min_recommended_increase_size_gb_isValid;
}

QString OAISqlOutOfDiskReport::getSqlOutOfDiskState() const {
    return m_sql_out_of_disk_state;
}
void OAISqlOutOfDiskReport::setSqlOutOfDiskState(const QString &sql_out_of_disk_state) {
    m_sql_out_of_disk_state = sql_out_of_disk_state;
    m_sql_out_of_disk_state_isSet = true;
}

bool OAISqlOutOfDiskReport::is_sql_out_of_disk_state_Set() const{
    return m_sql_out_of_disk_state_isSet;
}

bool OAISqlOutOfDiskReport::is_sql_out_of_disk_state_Valid() const{
    return m_sql_out_of_disk_state_isValid;
}

bool OAISqlOutOfDiskReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sql_min_recommended_increase_size_gb_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sql_out_of_disk_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISqlOutOfDiskReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
