/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstancesCloneRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstancesCloneRequest::OAIInstancesCloneRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstancesCloneRequest::OAIInstancesCloneRequest() {
    this->initializeModel();
}

OAIInstancesCloneRequest::~OAIInstancesCloneRequest() {}

void OAIInstancesCloneRequest::initializeModel() {

    m_clone_context_isSet = false;
    m_clone_context_isValid = false;
}

void OAIInstancesCloneRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstancesCloneRequest::fromJsonObject(QJsonObject json) {

    m_clone_context_isValid = ::OpenAPI::fromJsonValue(m_clone_context, json[QString("cloneContext")]);
    m_clone_context_isSet = !json[QString("cloneContext")].isNull() && m_clone_context_isValid;
}

QString OAIInstancesCloneRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstancesCloneRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_clone_context.isSet()) {
        obj.insert(QString("cloneContext"), ::OpenAPI::toJsonValue(m_clone_context));
    }
    return obj;
}

OAICloneContext OAIInstancesCloneRequest::getCloneContext() const {
    return m_clone_context;
}
void OAIInstancesCloneRequest::setCloneContext(const OAICloneContext &clone_context) {
    m_clone_context = clone_context;
    m_clone_context_isSet = true;
}

bool OAIInstancesCloneRequest::is_clone_context_Set() const{
    return m_clone_context_isSet;
}

bool OAIInstancesCloneRequest::is_clone_context_Valid() const{
    return m_clone_context_isValid;
}

bool OAIInstancesCloneRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_clone_context.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstancesCloneRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
