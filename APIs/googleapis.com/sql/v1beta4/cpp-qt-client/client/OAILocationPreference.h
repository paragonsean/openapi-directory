/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILocationPreference.h
 *
 * Preferred location. This specifies where a Cloud SQL instance is located. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.
 */

#ifndef OAILocationPreference_H
#define OAILocationPreference_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILocationPreference : public OAIObject {
public:
    OAILocationPreference();
    OAILocationPreference(QString json);
    ~OAILocationPreference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QString getFollowGaeApplication() const;
    Q_DECL_DEPRECATED void setFollowGaeApplication(const QString &follow_gae_application);
    Q_DECL_DEPRECATED bool is_follow_gae_application_Set() const;
    Q_DECL_DEPRECATED bool is_follow_gae_application_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getSecondaryZone() const;
    void setSecondaryZone(const QString &secondary_zone);
    bool is_secondary_zone_Set() const;
    bool is_secondary_zone_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_follow_gae_application;
    bool m_follow_gae_application_isSet;
    bool m_follow_gae_application_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_secondary_zone;
    bool m_secondary_zone_isSet;
    bool m_secondary_zone_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILocationPreference)

#endif // OAILocationPreference_H
