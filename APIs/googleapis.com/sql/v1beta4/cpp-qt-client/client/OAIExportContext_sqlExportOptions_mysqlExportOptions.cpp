/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExportContext_sqlExportOptions_mysqlExportOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExportContext_sqlExportOptions_mysqlExportOptions::OAIExportContext_sqlExportOptions_mysqlExportOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExportContext_sqlExportOptions_mysqlExportOptions::OAIExportContext_sqlExportOptions_mysqlExportOptions() {
    this->initializeModel();
}

OAIExportContext_sqlExportOptions_mysqlExportOptions::~OAIExportContext_sqlExportOptions_mysqlExportOptions() {}

void OAIExportContext_sqlExportOptions_mysqlExportOptions::initializeModel() {

    m_master_data_isSet = false;
    m_master_data_isValid = false;
}

void OAIExportContext_sqlExportOptions_mysqlExportOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExportContext_sqlExportOptions_mysqlExportOptions::fromJsonObject(QJsonObject json) {

    m_master_data_isValid = ::OpenAPI::fromJsonValue(m_master_data, json[QString("masterData")]);
    m_master_data_isSet = !json[QString("masterData")].isNull() && m_master_data_isValid;
}

QString OAIExportContext_sqlExportOptions_mysqlExportOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExportContext_sqlExportOptions_mysqlExportOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_master_data_isSet) {
        obj.insert(QString("masterData"), ::OpenAPI::toJsonValue(m_master_data));
    }
    return obj;
}

qint32 OAIExportContext_sqlExportOptions_mysqlExportOptions::getMasterData() const {
    return m_master_data;
}
void OAIExportContext_sqlExportOptions_mysqlExportOptions::setMasterData(const qint32 &master_data) {
    m_master_data = master_data;
    m_master_data_isSet = true;
}

bool OAIExportContext_sqlExportOptions_mysqlExportOptions::is_master_data_Set() const{
    return m_master_data_isSet;
}

bool OAIExportContext_sqlExportOptions_mysqlExportOptions::is_master_data_Valid() const{
    return m_master_data_isValid;
}

bool OAIExportContext_sqlExportOptions_mysqlExportOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_master_data_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExportContext_sqlExportOptions_mysqlExportOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
