/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerformDiskShrinkContext.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerformDiskShrinkContext::OAIPerformDiskShrinkContext(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerformDiskShrinkContext::OAIPerformDiskShrinkContext() {
    this->initializeModel();
}

OAIPerformDiskShrinkContext::~OAIPerformDiskShrinkContext() {}

void OAIPerformDiskShrinkContext::initializeModel() {

    m_target_size_gb_isSet = false;
    m_target_size_gb_isValid = false;
}

void OAIPerformDiskShrinkContext::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerformDiskShrinkContext::fromJsonObject(QJsonObject json) {

    m_target_size_gb_isValid = ::OpenAPI::fromJsonValue(m_target_size_gb, json[QString("targetSizeGb")]);
    m_target_size_gb_isSet = !json[QString("targetSizeGb")].isNull() && m_target_size_gb_isValid;
}

QString OAIPerformDiskShrinkContext::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerformDiskShrinkContext::asJsonObject() const {
    QJsonObject obj;
    if (m_target_size_gb_isSet) {
        obj.insert(QString("targetSizeGb"), ::OpenAPI::toJsonValue(m_target_size_gb));
    }
    return obj;
}

QString OAIPerformDiskShrinkContext::getTargetSizeGb() const {
    return m_target_size_gb;
}
void OAIPerformDiskShrinkContext::setTargetSizeGb(const QString &target_size_gb) {
    m_target_size_gb = target_size_gb;
    m_target_size_gb_isSet = true;
}

bool OAIPerformDiskShrinkContext::is_target_size_gb_Set() const{
    return m_target_size_gb_isSet;
}

bool OAIPerformDiskShrinkContext::is_target_size_gb_Valid() const{
    return m_target_size_gb_isValid;
}

bool OAIPerformDiskShrinkContext::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_target_size_gb_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerformDiskShrinkContext::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
