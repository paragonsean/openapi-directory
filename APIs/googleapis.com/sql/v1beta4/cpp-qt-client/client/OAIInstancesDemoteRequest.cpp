/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstancesDemoteRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstancesDemoteRequest::OAIInstancesDemoteRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstancesDemoteRequest::OAIInstancesDemoteRequest() {
    this->initializeModel();
}

OAIInstancesDemoteRequest::~OAIInstancesDemoteRequest() {}

void OAIInstancesDemoteRequest::initializeModel() {

    m_demote_context_isSet = false;
    m_demote_context_isValid = false;
}

void OAIInstancesDemoteRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstancesDemoteRequest::fromJsonObject(QJsonObject json) {

    m_demote_context_isValid = ::OpenAPI::fromJsonValue(m_demote_context, json[QString("demoteContext")]);
    m_demote_context_isSet = !json[QString("demoteContext")].isNull() && m_demote_context_isValid;
}

QString OAIInstancesDemoteRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstancesDemoteRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_demote_context.isSet()) {
        obj.insert(QString("demoteContext"), ::OpenAPI::toJsonValue(m_demote_context));
    }
    return obj;
}

OAIDemoteContext OAIInstancesDemoteRequest::getDemoteContext() const {
    return m_demote_context;
}
void OAIInstancesDemoteRequest::setDemoteContext(const OAIDemoteContext &demote_context) {
    m_demote_context = demote_context;
    m_demote_context_isSet = true;
}

bool OAIInstancesDemoteRequest::is_demote_context_Set() const{
    return m_demote_context_isSet;
}

bool OAIInstancesDemoteRequest::is_demote_context_Valid() const{
    return m_demote_context_isValid;
}

bool OAIInstancesDemoteRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_demote_context.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstancesDemoteRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
