/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudSqlAdminApi);
  }
}(this, function(expect, CloudSqlAdminApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudSqlAdminApi.BackupRun();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BackupRun', function() {
    it('should create an instance of BackupRun', function() {
      // uncomment below and update the code to test BackupRun
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be.a(CloudSqlAdminApi.BackupRun);
    });

    it('should have the property backupKind (base name: "backupKind")', function() {
      // uncomment below and update the code to test the property backupKind
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property diskEncryptionConfiguration (base name: "diskEncryptionConfiguration")', function() {
      // uncomment below and update the code to test the property diskEncryptionConfiguration
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property diskEncryptionStatus (base name: "diskEncryptionStatus")', function() {
      // uncomment below and update the code to test the property diskEncryptionStatus
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "endTime")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property enqueuedTime (base name: "enqueuedTime")', function() {
      // uncomment below and update the code to test the property enqueuedTime
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property error (base name: "error")', function() {
      // uncomment below and update the code to test the property error
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property instance (base name: "instance")', function() {
      // uncomment below and update the code to test the property instance
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property selfLink (base name: "selfLink")', function() {
      // uncomment below and update the code to test the property selfLink
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

    it('should have the property windowStartTime (base name: "windowStartTime")', function() {
      // uncomment below and update the code to test the property windowStartTime
      //var instance = new CloudSqlAdminApi.BackupRun();
      //expect(instance).to.be();
    });

  });

}));
