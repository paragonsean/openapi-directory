/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Operation from '../model/Operation';
import PerformDiskShrinkContext from '../model/PerformDiskShrinkContext';
import SqlInstancesGetDiskShrinkConfigResponse from '../model/SqlInstancesGetDiskShrinkConfigResponse';
import SqlInstancesGetLatestRecoveryTimeResponse from '../model/SqlInstancesGetLatestRecoveryTimeResponse';
import SqlInstancesRescheduleMaintenanceRequestBody from '../model/SqlInstancesRescheduleMaintenanceRequestBody';
import SqlInstancesStartExternalSyncRequest from '../model/SqlInstancesStartExternalSyncRequest';
import SqlInstancesVerifyExternalSyncSettingsRequest from '../model/SqlInstancesVerifyExternalSyncSettingsRequest';
import SqlInstancesVerifyExternalSyncSettingsResponse from '../model/SqlInstancesVerifyExternalSyncSettingsResponse';

/**
* Projects service.
* @module api/ProjectsApi
* @version v1beta4
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the sqlProjectsInstancesGetDiskShrinkConfig operation.
     * @callback module:api/ProjectsApi~sqlProjectsInstancesGetDiskShrinkConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SqlInstancesGetDiskShrinkConfigResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Disk Shrink Config for a given instance.
     * @param {String} project Project ID of the project that contains the instance.
     * @param {String} instance Cloud SQL instance ID. This does not include the project ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~sqlProjectsInstancesGetDiskShrinkConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SqlInstancesGetDiskShrinkConfigResponse}
     */
    sqlProjectsInstancesGetDiskShrinkConfig(project, instance, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling sqlProjectsInstancesGetDiskShrinkConfig");
      }
      // verify the required parameter 'instance' is set
      if (instance === undefined || instance === null) {
        throw new Error("Missing the required parameter 'instance' when calling sqlProjectsInstancesGetDiskShrinkConfig");
      }

      let pathParams = {
        'project': project,
        'instance': instance
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SqlInstancesGetDiskShrinkConfigResponse;
      return this.apiClient.callApi(
        '/sql/v1beta4/projects/{project}/instances/{instance}/getDiskShrinkConfig', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sqlProjectsInstancesGetLatestRecoveryTime operation.
     * @callback module:api/ProjectsApi~sqlProjectsInstancesGetLatestRecoveryTimeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SqlInstancesGetLatestRecoveryTimeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Latest Recovery Time for a given instance.
     * @param {String} project Project ID of the project that contains the instance.
     * @param {String} instance Cloud SQL instance ID. This does not include the project ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~sqlProjectsInstancesGetLatestRecoveryTimeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SqlInstancesGetLatestRecoveryTimeResponse}
     */
    sqlProjectsInstancesGetLatestRecoveryTime(project, instance, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling sqlProjectsInstancesGetLatestRecoveryTime");
      }
      // verify the required parameter 'instance' is set
      if (instance === undefined || instance === null) {
        throw new Error("Missing the required parameter 'instance' when calling sqlProjectsInstancesGetLatestRecoveryTime");
      }

      let pathParams = {
        'project': project,
        'instance': instance
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SqlInstancesGetLatestRecoveryTimeResponse;
      return this.apiClient.callApi(
        '/sql/v1beta4/projects/{project}/instances/{instance}/getLatestRecoveryTime', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sqlProjectsInstancesPerformDiskShrink operation.
     * @callback module:api/ProjectsApi~sqlProjectsInstancesPerformDiskShrinkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform Disk Shrink on primary instance.
     * @param {String} project Project ID of the project that contains the instance.
     * @param {String} instance Cloud SQL instance ID. This does not include the project ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/PerformDiskShrinkContext} [performDiskShrinkContext] 
     * @param {module:api/ProjectsApi~sqlProjectsInstancesPerformDiskShrinkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Operation}
     */
    sqlProjectsInstancesPerformDiskShrink(project, instance, opts, callback) {
      opts = opts || {};
      let postBody = opts['performDiskShrinkContext'];
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling sqlProjectsInstancesPerformDiskShrink");
      }
      // verify the required parameter 'instance' is set
      if (instance === undefined || instance === null) {
        throw new Error("Missing the required parameter 'instance' when calling sqlProjectsInstancesPerformDiskShrink");
      }

      let pathParams = {
        'project': project,
        'instance': instance
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Operation;
      return this.apiClient.callApi(
        '/sql/v1beta4/projects/{project}/instances/{instance}/performDiskShrink', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sqlProjectsInstancesRescheduleMaintenance operation.
     * @callback module:api/ProjectsApi~sqlProjectsInstancesRescheduleMaintenanceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reschedules the maintenance on the given instance.
     * @param {String} project ID of the project that contains the instance.
     * @param {String} instance Cloud SQL instance ID. This does not include the project ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/SqlInstancesRescheduleMaintenanceRequestBody} [sqlInstancesRescheduleMaintenanceRequestBody] 
     * @param {module:api/ProjectsApi~sqlProjectsInstancesRescheduleMaintenanceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Operation}
     */
    sqlProjectsInstancesRescheduleMaintenance(project, instance, opts, callback) {
      opts = opts || {};
      let postBody = opts['sqlInstancesRescheduleMaintenanceRequestBody'];
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling sqlProjectsInstancesRescheduleMaintenance");
      }
      // verify the required parameter 'instance' is set
      if (instance === undefined || instance === null) {
        throw new Error("Missing the required parameter 'instance' when calling sqlProjectsInstancesRescheduleMaintenance");
      }

      let pathParams = {
        'project': project,
        'instance': instance
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Operation;
      return this.apiClient.callApi(
        '/sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sqlProjectsInstancesResetReplicaSize operation.
     * @callback module:api/ProjectsApi~sqlProjectsInstancesResetReplicaSizeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset Replica Size to primary instance disk size.
     * @param {String} project ID of the project that contains the read replica.
     * @param {String} instance Cloud SQL read replica instance name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~sqlProjectsInstancesResetReplicaSizeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Operation}
     */
    sqlProjectsInstancesResetReplicaSize(project, instance, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling sqlProjectsInstancesResetReplicaSize");
      }
      // verify the required parameter 'instance' is set
      if (instance === undefined || instance === null) {
        throw new Error("Missing the required parameter 'instance' when calling sqlProjectsInstancesResetReplicaSize");
      }

      let pathParams = {
        'project': project,
        'instance': instance
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Operation;
      return this.apiClient.callApi(
        '/sql/v1beta4/projects/{project}/instances/{instance}/resetReplicaSize', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sqlProjectsInstancesStartExternalSync operation.
     * @callback module:api/ProjectsApi~sqlProjectsInstancesStartExternalSyncCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start External primary instance migration.
     * @param {String} project ID of the project that contains the instance.
     * @param {String} instance Cloud SQL instance ID. This does not include the project ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/SqlInstancesStartExternalSyncRequest} [sqlInstancesStartExternalSyncRequest] 
     * @param {module:api/ProjectsApi~sqlProjectsInstancesStartExternalSyncCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Operation}
     */
    sqlProjectsInstancesStartExternalSync(project, instance, opts, callback) {
      opts = opts || {};
      let postBody = opts['sqlInstancesStartExternalSyncRequest'];
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling sqlProjectsInstancesStartExternalSync");
      }
      // verify the required parameter 'instance' is set
      if (instance === undefined || instance === null) {
        throw new Error("Missing the required parameter 'instance' when calling sqlProjectsInstancesStartExternalSync");
      }

      let pathParams = {
        'project': project,
        'instance': instance
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Operation;
      return this.apiClient.callApi(
        '/sql/v1beta4/projects/{project}/instances/{instance}/startExternalSync', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the sqlProjectsInstancesVerifyExternalSyncSettings operation.
     * @callback module:api/ProjectsApi~sqlProjectsInstancesVerifyExternalSyncSettingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SqlInstancesVerifyExternalSyncSettingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify External primary instance external sync settings.
     * @param {String} project Project ID of the project that contains the instance.
     * @param {String} instance Cloud SQL instance ID. This does not include the project ID.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/SqlInstancesVerifyExternalSyncSettingsRequest} [sqlInstancesVerifyExternalSyncSettingsRequest] 
     * @param {module:api/ProjectsApi~sqlProjectsInstancesVerifyExternalSyncSettingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SqlInstancesVerifyExternalSyncSettingsResponse}
     */
    sqlProjectsInstancesVerifyExternalSyncSettings(project, instance, opts, callback) {
      opts = opts || {};
      let postBody = opts['sqlInstancesVerifyExternalSyncSettingsRequest'];
      // verify the required parameter 'project' is set
      if (project === undefined || project === null) {
        throw new Error("Missing the required parameter 'project' when calling sqlProjectsInstancesVerifyExternalSyncSettings");
      }
      // verify the required parameter 'instance' is set
      if (instance === undefined || instance === null) {
        throw new Error("Missing the required parameter 'instance' when calling sqlProjectsInstancesVerifyExternalSyncSettings");
      }

      let pathParams = {
        'project': project,
        'instance': instance
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SqlInstancesVerifyExternalSyncSettingsResponse;
      return this.apiClient.callApi(
        '/sql/v1beta4/projects/{project}/instances/{instance}/verifyExternalSyncSettings', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
