/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AclEntry from './model/AclEntry';
import AdvancedMachineFeatures from './model/AdvancedMachineFeatures';
import ApiWarning from './model/ApiWarning';
import BackupConfiguration from './model/BackupConfiguration';
import BackupContext from './model/BackupContext';
import BackupReencryptionConfig from './model/BackupReencryptionConfig';
import BackupRetentionSettings from './model/BackupRetentionSettings';
import BackupRun from './model/BackupRun';
import BackupRunsListResponse from './model/BackupRunsListResponse';
import BinLogCoordinates from './model/BinLogCoordinates';
import CloneContext from './model/CloneContext';
import ConnectSettings from './model/ConnectSettings';
import DataCacheConfig from './model/DataCacheConfig';
import Database from './model/Database';
import DatabaseFlags from './model/DatabaseFlags';
import DatabaseInstance from './model/DatabaseInstance';
import DatabaseInstanceFailoverReplica from './model/DatabaseInstanceFailoverReplica';
import DatabasesListResponse from './model/DatabasesListResponse';
import DemoteContext from './model/DemoteContext';
import DemoteMasterConfiguration from './model/DemoteMasterConfiguration';
import DemoteMasterContext from './model/DemoteMasterContext';
import DemoteMasterMySqlReplicaConfiguration from './model/DemoteMasterMySqlReplicaConfiguration';
import DenyMaintenancePeriod from './model/DenyMaintenancePeriod';
import DiskEncryptionConfiguration from './model/DiskEncryptionConfiguration';
import DiskEncryptionStatus from './model/DiskEncryptionStatus';
import ExportContext from './model/ExportContext';
import ExportContextBakExportOptions from './model/ExportContextBakExportOptions';
import ExportContextCsvExportOptions from './model/ExportContextCsvExportOptions';
import ExportContextSqlExportOptions from './model/ExportContextSqlExportOptions';
import ExportContextSqlExportOptionsMysqlExportOptions from './model/ExportContextSqlExportOptionsMysqlExportOptions';
import FailoverContext from './model/FailoverContext';
import Flag from './model/Flag';
import FlagsListResponse from './model/FlagsListResponse';
import GenerateEphemeralCertRequest from './model/GenerateEphemeralCertRequest';
import GenerateEphemeralCertResponse from './model/GenerateEphemeralCertResponse';
import ImportContext from './model/ImportContext';
import ImportContextBakImportOptions from './model/ImportContextBakImportOptions';
import ImportContextBakImportOptionsEncryptionOptions from './model/ImportContextBakImportOptionsEncryptionOptions';
import ImportContextCsvImportOptions from './model/ImportContextCsvImportOptions';
import InsightsConfig from './model/InsightsConfig';
import InstanceReference from './model/InstanceReference';
import InstancesCloneRequest from './model/InstancesCloneRequest';
import InstancesDemoteMasterRequest from './model/InstancesDemoteMasterRequest';
import InstancesDemoteRequest from './model/InstancesDemoteRequest';
import InstancesExportRequest from './model/InstancesExportRequest';
import InstancesFailoverRequest from './model/InstancesFailoverRequest';
import InstancesImportRequest from './model/InstancesImportRequest';
import InstancesListResponse from './model/InstancesListResponse';
import InstancesListServerCasResponse from './model/InstancesListServerCasResponse';
import InstancesReencryptRequest from './model/InstancesReencryptRequest';
import InstancesRestoreBackupRequest from './model/InstancesRestoreBackupRequest';
import InstancesRotateServerCaRequest from './model/InstancesRotateServerCaRequest';
import InstancesTruncateLogRequest from './model/InstancesTruncateLogRequest';
import IpConfiguration from './model/IpConfiguration';
import IpMapping from './model/IpMapping';
import LocationPreference from './model/LocationPreference';
import MaintenanceWindow from './model/MaintenanceWindow';
import MySqlReplicaConfiguration from './model/MySqlReplicaConfiguration';
import MySqlSyncConfig from './model/MySqlSyncConfig';
import OnPremisesConfiguration from './model/OnPremisesConfiguration';
import Operation from './model/Operation';
import OperationError from './model/OperationError';
import OperationErrors from './model/OperationErrors';
import OperationMetadata from './model/OperationMetadata';
import OperationsListResponse from './model/OperationsListResponse';
import PasswordStatus from './model/PasswordStatus';
import PasswordValidationPolicy from './model/PasswordValidationPolicy';
import PerformDiskShrinkContext from './model/PerformDiskShrinkContext';
import PscConfig from './model/PscConfig';
import ReplicaConfiguration from './model/ReplicaConfiguration';
import Reschedule from './model/Reschedule';
import RestoreBackupContext from './model/RestoreBackupContext';
import RotateServerCaContext from './model/RotateServerCaContext';
import Settings from './model/Settings';
import SqlActiveDirectoryConfig from './model/SqlActiveDirectoryConfig';
import SqlExternalSyncSettingError from './model/SqlExternalSyncSettingError';
import SqlInstancesGetDiskShrinkConfigResponse from './model/SqlInstancesGetDiskShrinkConfigResponse';
import SqlInstancesGetLatestRecoveryTimeResponse from './model/SqlInstancesGetLatestRecoveryTimeResponse';
import SqlInstancesRescheduleMaintenanceRequestBody from './model/SqlInstancesRescheduleMaintenanceRequestBody';
import SqlInstancesStartExternalSyncRequest from './model/SqlInstancesStartExternalSyncRequest';
import SqlInstancesVerifyExternalSyncSettingsRequest from './model/SqlInstancesVerifyExternalSyncSettingsRequest';
import SqlInstancesVerifyExternalSyncSettingsResponse from './model/SqlInstancesVerifyExternalSyncSettingsResponse';
import SqlOutOfDiskReport from './model/SqlOutOfDiskReport';
import SqlScheduledMaintenance from './model/SqlScheduledMaintenance';
import SqlServerAuditConfig from './model/SqlServerAuditConfig';
import SqlServerDatabaseDetails from './model/SqlServerDatabaseDetails';
import SqlServerUserDetails from './model/SqlServerUserDetails';
import SslCert from './model/SslCert';
import SslCertDetail from './model/SslCertDetail';
import SslCertsCreateEphemeralRequest from './model/SslCertsCreateEphemeralRequest';
import SslCertsInsertRequest from './model/SslCertsInsertRequest';
import SslCertsInsertResponse from './model/SslCertsInsertResponse';
import SslCertsListResponse from './model/SslCertsListResponse';
import SyncFlags from './model/SyncFlags';
import Tier from './model/Tier';
import TiersListResponse from './model/TiersListResponse';
import TruncateLogContext from './model/TruncateLogContext';
import User from './model/User';
import UserPasswordValidationPolicy from './model/UserPasswordValidationPolicy';
import UsersListResponse from './model/UsersListResponse';
import BackupRunsApi from './api/BackupRunsApi';
import ConnectApi from './api/ConnectApi';
import DatabasesApi from './api/DatabasesApi';
import FlagsApi from './api/FlagsApi';
import InstancesApi from './api/InstancesApi';
import OperationsApi from './api/OperationsApi';
import ProjectsApi from './api/ProjectsApi';
import SslCertsApi from './api/SslCertsApi';
import TiersApi from './api/TiersApi';
import UsersApi from './api/UsersApi';


/**
* API for Cloud SQL database instance management.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudSqlAdminApi = require('index'); // See note below*.
* var xxxSvc = new CloudSqlAdminApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudSqlAdminApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudSqlAdminApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudSqlAdminApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta4
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AclEntry model constructor.
     * @property {module:model/AclEntry}
     */
    AclEntry,

    /**
     * The AdvancedMachineFeatures model constructor.
     * @property {module:model/AdvancedMachineFeatures}
     */
    AdvancedMachineFeatures,

    /**
     * The ApiWarning model constructor.
     * @property {module:model/ApiWarning}
     */
    ApiWarning,

    /**
     * The BackupConfiguration model constructor.
     * @property {module:model/BackupConfiguration}
     */
    BackupConfiguration,

    /**
     * The BackupContext model constructor.
     * @property {module:model/BackupContext}
     */
    BackupContext,

    /**
     * The BackupReencryptionConfig model constructor.
     * @property {module:model/BackupReencryptionConfig}
     */
    BackupReencryptionConfig,

    /**
     * The BackupRetentionSettings model constructor.
     * @property {module:model/BackupRetentionSettings}
     */
    BackupRetentionSettings,

    /**
     * The BackupRun model constructor.
     * @property {module:model/BackupRun}
     */
    BackupRun,

    /**
     * The BackupRunsListResponse model constructor.
     * @property {module:model/BackupRunsListResponse}
     */
    BackupRunsListResponse,

    /**
     * The BinLogCoordinates model constructor.
     * @property {module:model/BinLogCoordinates}
     */
    BinLogCoordinates,

    /**
     * The CloneContext model constructor.
     * @property {module:model/CloneContext}
     */
    CloneContext,

    /**
     * The ConnectSettings model constructor.
     * @property {module:model/ConnectSettings}
     */
    ConnectSettings,

    /**
     * The DataCacheConfig model constructor.
     * @property {module:model/DataCacheConfig}
     */
    DataCacheConfig,

    /**
     * The Database model constructor.
     * @property {module:model/Database}
     */
    Database,

    /**
     * The DatabaseFlags model constructor.
     * @property {module:model/DatabaseFlags}
     */
    DatabaseFlags,

    /**
     * The DatabaseInstance model constructor.
     * @property {module:model/DatabaseInstance}
     */
    DatabaseInstance,

    /**
     * The DatabaseInstanceFailoverReplica model constructor.
     * @property {module:model/DatabaseInstanceFailoverReplica}
     */
    DatabaseInstanceFailoverReplica,

    /**
     * The DatabasesListResponse model constructor.
     * @property {module:model/DatabasesListResponse}
     */
    DatabasesListResponse,

    /**
     * The DemoteContext model constructor.
     * @property {module:model/DemoteContext}
     */
    DemoteContext,

    /**
     * The DemoteMasterConfiguration model constructor.
     * @property {module:model/DemoteMasterConfiguration}
     */
    DemoteMasterConfiguration,

    /**
     * The DemoteMasterContext model constructor.
     * @property {module:model/DemoteMasterContext}
     */
    DemoteMasterContext,

    /**
     * The DemoteMasterMySqlReplicaConfiguration model constructor.
     * @property {module:model/DemoteMasterMySqlReplicaConfiguration}
     */
    DemoteMasterMySqlReplicaConfiguration,

    /**
     * The DenyMaintenancePeriod model constructor.
     * @property {module:model/DenyMaintenancePeriod}
     */
    DenyMaintenancePeriod,

    /**
     * The DiskEncryptionConfiguration model constructor.
     * @property {module:model/DiskEncryptionConfiguration}
     */
    DiskEncryptionConfiguration,

    /**
     * The DiskEncryptionStatus model constructor.
     * @property {module:model/DiskEncryptionStatus}
     */
    DiskEncryptionStatus,

    /**
     * The ExportContext model constructor.
     * @property {module:model/ExportContext}
     */
    ExportContext,

    /**
     * The ExportContextBakExportOptions model constructor.
     * @property {module:model/ExportContextBakExportOptions}
     */
    ExportContextBakExportOptions,

    /**
     * The ExportContextCsvExportOptions model constructor.
     * @property {module:model/ExportContextCsvExportOptions}
     */
    ExportContextCsvExportOptions,

    /**
     * The ExportContextSqlExportOptions model constructor.
     * @property {module:model/ExportContextSqlExportOptions}
     */
    ExportContextSqlExportOptions,

    /**
     * The ExportContextSqlExportOptionsMysqlExportOptions model constructor.
     * @property {module:model/ExportContextSqlExportOptionsMysqlExportOptions}
     */
    ExportContextSqlExportOptionsMysqlExportOptions,

    /**
     * The FailoverContext model constructor.
     * @property {module:model/FailoverContext}
     */
    FailoverContext,

    /**
     * The Flag model constructor.
     * @property {module:model/Flag}
     */
    Flag,

    /**
     * The FlagsListResponse model constructor.
     * @property {module:model/FlagsListResponse}
     */
    FlagsListResponse,

    /**
     * The GenerateEphemeralCertRequest model constructor.
     * @property {module:model/GenerateEphemeralCertRequest}
     */
    GenerateEphemeralCertRequest,

    /**
     * The GenerateEphemeralCertResponse model constructor.
     * @property {module:model/GenerateEphemeralCertResponse}
     */
    GenerateEphemeralCertResponse,

    /**
     * The ImportContext model constructor.
     * @property {module:model/ImportContext}
     */
    ImportContext,

    /**
     * The ImportContextBakImportOptions model constructor.
     * @property {module:model/ImportContextBakImportOptions}
     */
    ImportContextBakImportOptions,

    /**
     * The ImportContextBakImportOptionsEncryptionOptions model constructor.
     * @property {module:model/ImportContextBakImportOptionsEncryptionOptions}
     */
    ImportContextBakImportOptionsEncryptionOptions,

    /**
     * The ImportContextCsvImportOptions model constructor.
     * @property {module:model/ImportContextCsvImportOptions}
     */
    ImportContextCsvImportOptions,

    /**
     * The InsightsConfig model constructor.
     * @property {module:model/InsightsConfig}
     */
    InsightsConfig,

    /**
     * The InstanceReference model constructor.
     * @property {module:model/InstanceReference}
     */
    InstanceReference,

    /**
     * The InstancesCloneRequest model constructor.
     * @property {module:model/InstancesCloneRequest}
     */
    InstancesCloneRequest,

    /**
     * The InstancesDemoteMasterRequest model constructor.
     * @property {module:model/InstancesDemoteMasterRequest}
     */
    InstancesDemoteMasterRequest,

    /**
     * The InstancesDemoteRequest model constructor.
     * @property {module:model/InstancesDemoteRequest}
     */
    InstancesDemoteRequest,

    /**
     * The InstancesExportRequest model constructor.
     * @property {module:model/InstancesExportRequest}
     */
    InstancesExportRequest,

    /**
     * The InstancesFailoverRequest model constructor.
     * @property {module:model/InstancesFailoverRequest}
     */
    InstancesFailoverRequest,

    /**
     * The InstancesImportRequest model constructor.
     * @property {module:model/InstancesImportRequest}
     */
    InstancesImportRequest,

    /**
     * The InstancesListResponse model constructor.
     * @property {module:model/InstancesListResponse}
     */
    InstancesListResponse,

    /**
     * The InstancesListServerCasResponse model constructor.
     * @property {module:model/InstancesListServerCasResponse}
     */
    InstancesListServerCasResponse,

    /**
     * The InstancesReencryptRequest model constructor.
     * @property {module:model/InstancesReencryptRequest}
     */
    InstancesReencryptRequest,

    /**
     * The InstancesRestoreBackupRequest model constructor.
     * @property {module:model/InstancesRestoreBackupRequest}
     */
    InstancesRestoreBackupRequest,

    /**
     * The InstancesRotateServerCaRequest model constructor.
     * @property {module:model/InstancesRotateServerCaRequest}
     */
    InstancesRotateServerCaRequest,

    /**
     * The InstancesTruncateLogRequest model constructor.
     * @property {module:model/InstancesTruncateLogRequest}
     */
    InstancesTruncateLogRequest,

    /**
     * The IpConfiguration model constructor.
     * @property {module:model/IpConfiguration}
     */
    IpConfiguration,

    /**
     * The IpMapping model constructor.
     * @property {module:model/IpMapping}
     */
    IpMapping,

    /**
     * The LocationPreference model constructor.
     * @property {module:model/LocationPreference}
     */
    LocationPreference,

    /**
     * The MaintenanceWindow model constructor.
     * @property {module:model/MaintenanceWindow}
     */
    MaintenanceWindow,

    /**
     * The MySqlReplicaConfiguration model constructor.
     * @property {module:model/MySqlReplicaConfiguration}
     */
    MySqlReplicaConfiguration,

    /**
     * The MySqlSyncConfig model constructor.
     * @property {module:model/MySqlSyncConfig}
     */
    MySqlSyncConfig,

    /**
     * The OnPremisesConfiguration model constructor.
     * @property {module:model/OnPremisesConfiguration}
     */
    OnPremisesConfiguration,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationError model constructor.
     * @property {module:model/OperationError}
     */
    OperationError,

    /**
     * The OperationErrors model constructor.
     * @property {module:model/OperationErrors}
     */
    OperationErrors,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The OperationsListResponse model constructor.
     * @property {module:model/OperationsListResponse}
     */
    OperationsListResponse,

    /**
     * The PasswordStatus model constructor.
     * @property {module:model/PasswordStatus}
     */
    PasswordStatus,

    /**
     * The PasswordValidationPolicy model constructor.
     * @property {module:model/PasswordValidationPolicy}
     */
    PasswordValidationPolicy,

    /**
     * The PerformDiskShrinkContext model constructor.
     * @property {module:model/PerformDiskShrinkContext}
     */
    PerformDiskShrinkContext,

    /**
     * The PscConfig model constructor.
     * @property {module:model/PscConfig}
     */
    PscConfig,

    /**
     * The ReplicaConfiguration model constructor.
     * @property {module:model/ReplicaConfiguration}
     */
    ReplicaConfiguration,

    /**
     * The Reschedule model constructor.
     * @property {module:model/Reschedule}
     */
    Reschedule,

    /**
     * The RestoreBackupContext model constructor.
     * @property {module:model/RestoreBackupContext}
     */
    RestoreBackupContext,

    /**
     * The RotateServerCaContext model constructor.
     * @property {module:model/RotateServerCaContext}
     */
    RotateServerCaContext,

    /**
     * The Settings model constructor.
     * @property {module:model/Settings}
     */
    Settings,

    /**
     * The SqlActiveDirectoryConfig model constructor.
     * @property {module:model/SqlActiveDirectoryConfig}
     */
    SqlActiveDirectoryConfig,

    /**
     * The SqlExternalSyncSettingError model constructor.
     * @property {module:model/SqlExternalSyncSettingError}
     */
    SqlExternalSyncSettingError,

    /**
     * The SqlInstancesGetDiskShrinkConfigResponse model constructor.
     * @property {module:model/SqlInstancesGetDiskShrinkConfigResponse}
     */
    SqlInstancesGetDiskShrinkConfigResponse,

    /**
     * The SqlInstancesGetLatestRecoveryTimeResponse model constructor.
     * @property {module:model/SqlInstancesGetLatestRecoveryTimeResponse}
     */
    SqlInstancesGetLatestRecoveryTimeResponse,

    /**
     * The SqlInstancesRescheduleMaintenanceRequestBody model constructor.
     * @property {module:model/SqlInstancesRescheduleMaintenanceRequestBody}
     */
    SqlInstancesRescheduleMaintenanceRequestBody,

    /**
     * The SqlInstancesStartExternalSyncRequest model constructor.
     * @property {module:model/SqlInstancesStartExternalSyncRequest}
     */
    SqlInstancesStartExternalSyncRequest,

    /**
     * The SqlInstancesVerifyExternalSyncSettingsRequest model constructor.
     * @property {module:model/SqlInstancesVerifyExternalSyncSettingsRequest}
     */
    SqlInstancesVerifyExternalSyncSettingsRequest,

    /**
     * The SqlInstancesVerifyExternalSyncSettingsResponse model constructor.
     * @property {module:model/SqlInstancesVerifyExternalSyncSettingsResponse}
     */
    SqlInstancesVerifyExternalSyncSettingsResponse,

    /**
     * The SqlOutOfDiskReport model constructor.
     * @property {module:model/SqlOutOfDiskReport}
     */
    SqlOutOfDiskReport,

    /**
     * The SqlScheduledMaintenance model constructor.
     * @property {module:model/SqlScheduledMaintenance}
     */
    SqlScheduledMaintenance,

    /**
     * The SqlServerAuditConfig model constructor.
     * @property {module:model/SqlServerAuditConfig}
     */
    SqlServerAuditConfig,

    /**
     * The SqlServerDatabaseDetails model constructor.
     * @property {module:model/SqlServerDatabaseDetails}
     */
    SqlServerDatabaseDetails,

    /**
     * The SqlServerUserDetails model constructor.
     * @property {module:model/SqlServerUserDetails}
     */
    SqlServerUserDetails,

    /**
     * The SslCert model constructor.
     * @property {module:model/SslCert}
     */
    SslCert,

    /**
     * The SslCertDetail model constructor.
     * @property {module:model/SslCertDetail}
     */
    SslCertDetail,

    /**
     * The SslCertsCreateEphemeralRequest model constructor.
     * @property {module:model/SslCertsCreateEphemeralRequest}
     */
    SslCertsCreateEphemeralRequest,

    /**
     * The SslCertsInsertRequest model constructor.
     * @property {module:model/SslCertsInsertRequest}
     */
    SslCertsInsertRequest,

    /**
     * The SslCertsInsertResponse model constructor.
     * @property {module:model/SslCertsInsertResponse}
     */
    SslCertsInsertResponse,

    /**
     * The SslCertsListResponse model constructor.
     * @property {module:model/SslCertsListResponse}
     */
    SslCertsListResponse,

    /**
     * The SyncFlags model constructor.
     * @property {module:model/SyncFlags}
     */
    SyncFlags,

    /**
     * The Tier model constructor.
     * @property {module:model/Tier}
     */
    Tier,

    /**
     * The TiersListResponse model constructor.
     * @property {module:model/TiersListResponse}
     */
    TiersListResponse,

    /**
     * The TruncateLogContext model constructor.
     * @property {module:model/TruncateLogContext}
     */
    TruncateLogContext,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserPasswordValidationPolicy model constructor.
     * @property {module:model/UserPasswordValidationPolicy}
     */
    UserPasswordValidationPolicy,

    /**
     * The UsersListResponse model constructor.
     * @property {module:model/UsersListResponse}
     */
    UsersListResponse,

    /**
    * The BackupRunsApi service constructor.
    * @property {module:api/BackupRunsApi}
    */
    BackupRunsApi,

    /**
    * The ConnectApi service constructor.
    * @property {module:api/ConnectApi}
    */
    ConnectApi,

    /**
    * The DatabasesApi service constructor.
    * @property {module:api/DatabasesApi}
    */
    DatabasesApi,

    /**
    * The FlagsApi service constructor.
    * @property {module:api/FlagsApi}
    */
    FlagsApi,

    /**
    * The InstancesApi service constructor.
    * @property {module:api/InstancesApi}
    */
    InstancesApi,

    /**
    * The OperationsApi service constructor.
    * @property {module:api/OperationsApi}
    */
    OperationsApi,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi,

    /**
    * The SslCertsApi service constructor.
    * @property {module:api/SslCertsApi}
    */
    SslCertsApi,

    /**
    * The TiersApi service constructor.
    * @property {module:api/TiersApi}
    */
    TiersApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
