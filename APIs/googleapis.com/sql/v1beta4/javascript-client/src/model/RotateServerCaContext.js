/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RotateServerCaContext model module.
 * @module model/RotateServerCaContext
 * @version v1beta4
 */
class RotateServerCaContext {
    /**
     * Constructs a new <code>RotateServerCaContext</code>.
     * Instance rotate server CA context.
     * @alias module:model/RotateServerCaContext
     */
    constructor() { 
        
        RotateServerCaContext.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RotateServerCaContext</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RotateServerCaContext} obj Optional instance to populate.
     * @return {module:model/RotateServerCaContext} The populated <code>RotateServerCaContext</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RotateServerCaContext();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('nextVersion')) {
                obj['nextVersion'] = ApiClient.convertToType(data['nextVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RotateServerCaContext</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RotateServerCaContext</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['nextVersion'] && !(typeof data['nextVersion'] === 'string' || data['nextVersion'] instanceof String)) {
            throw new Error("Expected the field `nextVersion` to be a primitive type in the JSON string but got " + data['nextVersion']);
        }

        return true;
    }


}



/**
 * This is always `sql#rotateServerCaContext`.
 * @member {String} kind
 */
RotateServerCaContext.prototype['kind'] = undefined;

/**
 * The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version.
 * @member {String} nextVersion
 */
RotateServerCaContext.prototype['nextVersion'] = undefined;






export default RotateServerCaContext;

