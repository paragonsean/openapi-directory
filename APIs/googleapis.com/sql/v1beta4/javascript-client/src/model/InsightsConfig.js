/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InsightsConfig model module.
 * @module model/InsightsConfig
 * @version v1beta4
 */
class InsightsConfig {
    /**
     * Constructs a new <code>InsightsConfig</code>.
     * Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.
     * @alias module:model/InsightsConfig
     */
    constructor() { 
        
        InsightsConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InsightsConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsightsConfig} obj Optional instance to populate.
     * @return {module:model/InsightsConfig} The populated <code>InsightsConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsightsConfig();

            if (data.hasOwnProperty('queryInsightsEnabled')) {
                obj['queryInsightsEnabled'] = ApiClient.convertToType(data['queryInsightsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('queryPlansPerMinute')) {
                obj['queryPlansPerMinute'] = ApiClient.convertToType(data['queryPlansPerMinute'], 'Number');
            }
            if (data.hasOwnProperty('queryStringLength')) {
                obj['queryStringLength'] = ApiClient.convertToType(data['queryStringLength'], 'Number');
            }
            if (data.hasOwnProperty('recordApplicationTags')) {
                obj['recordApplicationTags'] = ApiClient.convertToType(data['recordApplicationTags'], 'Boolean');
            }
            if (data.hasOwnProperty('recordClientAddress')) {
                obj['recordClientAddress'] = ApiClient.convertToType(data['recordClientAddress'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsightsConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsightsConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Whether Query Insights feature is enabled.
 * @member {Boolean} queryInsightsEnabled
 */
InsightsConfig.prototype['queryInsightsEnabled'] = undefined;

/**
 * Number of query execution plans captured by Insights per minute for all queries combined. Default is 5.
 * @member {Number} queryPlansPerMinute
 */
InsightsConfig.prototype['queryPlansPerMinute'] = undefined;

/**
 * Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.
 * @member {Number} queryStringLength
 */
InsightsConfig.prototype['queryStringLength'] = undefined;

/**
 * Whether Query Insights will record application tags from query when enabled.
 * @member {Boolean} recordApplicationTags
 */
InsightsConfig.prototype['recordApplicationTags'] = undefined;

/**
 * Whether Query Insights will record client address when enabled.
 * @member {Boolean} recordClientAddress
 */
InsightsConfig.prototype['recordClientAddress'] = undefined;






export default InsightsConfig;

