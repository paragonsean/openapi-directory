/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SqlOutOfDiskReport model module.
 * @module model/SqlOutOfDiskReport
 * @version v1beta4
 */
class SqlOutOfDiskReport {
    /**
     * Constructs a new <code>SqlOutOfDiskReport</code>.
     * This message wraps up the information written by out-of-disk detection job.
     * @alias module:model/SqlOutOfDiskReport
     */
    constructor() { 
        
        SqlOutOfDiskReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SqlOutOfDiskReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SqlOutOfDiskReport} obj Optional instance to populate.
     * @return {module:model/SqlOutOfDiskReport} The populated <code>SqlOutOfDiskReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SqlOutOfDiskReport();

            if (data.hasOwnProperty('sqlMinRecommendedIncreaseSizeGb')) {
                obj['sqlMinRecommendedIncreaseSizeGb'] = ApiClient.convertToType(data['sqlMinRecommendedIncreaseSizeGb'], 'Number');
            }
            if (data.hasOwnProperty('sqlOutOfDiskState')) {
                obj['sqlOutOfDiskState'] = ApiClient.convertToType(data['sqlOutOfDiskState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SqlOutOfDiskReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SqlOutOfDiskReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['sqlOutOfDiskState'] && !(typeof data['sqlOutOfDiskState'] === 'string' || data['sqlOutOfDiskState'] instanceof String)) {
            throw new Error("Expected the field `sqlOutOfDiskState` to be a primitive type in the JSON string but got " + data['sqlOutOfDiskState']);
        }

        return true;
    }


}



/**
 * The minimum recommended increase size in GigaBytes This field is consumed by the frontend * Writers: * the proactive database wellness job for OOD. * Readers:
 * @member {Number} sqlMinRecommendedIncreaseSizeGb
 */
SqlOutOfDiskReport.prototype['sqlMinRecommendedIncreaseSizeGb'] = undefined;

/**
 * This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job
 * @member {module:model/SqlOutOfDiskReport.SqlOutOfDiskStateEnum} sqlOutOfDiskState
 */
SqlOutOfDiskReport.prototype['sqlOutOfDiskState'] = undefined;





/**
 * Allowed values for the <code>sqlOutOfDiskState</code> property.
 * @enum {String}
 * @readonly
 */
SqlOutOfDiskReport['SqlOutOfDiskStateEnum'] = {

    /**
     * value: "SQL_OUT_OF_DISK_STATE_UNSPECIFIED"
     * @const
     */
    "SQL_OUT_OF_DISK_STATE_UNSPECIFIED": "SQL_OUT_OF_DISK_STATE_UNSPECIFIED",

    /**
     * value: "NORMAL"
     * @const
     */
    "NORMAL": "NORMAL",

    /**
     * value: "SOFT_SHUTDOWN"
     * @const
     */
    "SOFT_SHUTDOWN": "SOFT_SHUTDOWN"
};



export default SqlOutOfDiskReport;

