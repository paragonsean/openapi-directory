/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SslCert from './SslCert';

/**
 * The InstancesListServerCasResponse model module.
 * @module model/InstancesListServerCasResponse
 * @version v1beta4
 */
class InstancesListServerCasResponse {
    /**
     * Constructs a new <code>InstancesListServerCasResponse</code>.
     * Instances ListServerCas response.
     * @alias module:model/InstancesListServerCasResponse
     */
    constructor() { 
        
        InstancesListServerCasResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstancesListServerCasResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstancesListServerCasResponse} obj Optional instance to populate.
     * @return {module:model/InstancesListServerCasResponse} The populated <code>InstancesListServerCasResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstancesListServerCasResponse();

            if (data.hasOwnProperty('activeVersion')) {
                obj['activeVersion'] = ApiClient.convertToType(data['activeVersion'], 'String');
            }
            if (data.hasOwnProperty('certs')) {
                obj['certs'] = ApiClient.convertToType(data['certs'], [SslCert]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstancesListServerCasResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstancesListServerCasResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activeVersion'] && !(typeof data['activeVersion'] === 'string' || data['activeVersion'] instanceof String)) {
            throw new Error("Expected the field `activeVersion` to be a primitive type in the JSON string but got " + data['activeVersion']);
        }
        if (data['certs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['certs'])) {
                throw new Error("Expected the field `certs` to be an array in the JSON data but got " + data['certs']);
            }
            // validate the optional field `certs` (array)
            for (const item of data['certs']) {
                SslCert.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * @member {String} activeVersion
 */
InstancesListServerCasResponse.prototype['activeVersion'] = undefined;

/**
 * List of server CA certificates for the instance.
 * @member {Array.<module:model/SslCert>} certs
 */
InstancesListServerCasResponse.prototype['certs'] = undefined;

/**
 * This is always `sql#instancesListServerCas`.
 * @member {String} kind
 */
InstancesListServerCasResponse.prototype['kind'] = undefined;






export default InstancesListServerCasResponse;

