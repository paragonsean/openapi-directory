/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackupRetentionSettings model module.
 * @module model/BackupRetentionSettings
 * @version v1beta4
 */
class BackupRetentionSettings {
    /**
     * Constructs a new <code>BackupRetentionSettings</code>.
     * We currently only support backup retention by specifying the number of backups we will retain.
     * @alias module:model/BackupRetentionSettings
     */
    constructor() { 
        
        BackupRetentionSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackupRetentionSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupRetentionSettings} obj Optional instance to populate.
     * @return {module:model/BackupRetentionSettings} The populated <code>BackupRetentionSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupRetentionSettings();

            if (data.hasOwnProperty('retainedBackups')) {
                obj['retainedBackups'] = ApiClient.convertToType(data['retainedBackups'], 'Number');
            }
            if (data.hasOwnProperty('retentionUnit')) {
                obj['retentionUnit'] = ApiClient.convertToType(data['retentionUnit'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupRetentionSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupRetentionSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['retentionUnit'] && !(typeof data['retentionUnit'] === 'string' || data['retentionUnit'] instanceof String)) {
            throw new Error("Expected the field `retentionUnit` to be a primitive type in the JSON string but got " + data['retentionUnit']);
        }

        return true;
    }


}



/**
 * Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups.
 * @member {Number} retainedBackups
 */
BackupRetentionSettings.prototype['retainedBackups'] = undefined;

/**
 * The unit that 'retained_backups' represents.
 * @member {module:model/BackupRetentionSettings.RetentionUnitEnum} retentionUnit
 */
BackupRetentionSettings.prototype['retentionUnit'] = undefined;





/**
 * Allowed values for the <code>retentionUnit</code> property.
 * @enum {String}
 * @readonly
 */
BackupRetentionSettings['RetentionUnitEnum'] = {

    /**
     * value: "RETENTION_UNIT_UNSPECIFIED"
     * @const
     */
    "RETENTION_UNIT_UNSPECIFIED": "RETENTION_UNIT_UNSPECIFIED",

    /**
     * value: "COUNT"
     * @const
     */
    "COUNT": "COUNT"
};



export default BackupRetentionSettings;

