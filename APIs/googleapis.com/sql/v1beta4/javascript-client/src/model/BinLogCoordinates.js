/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BinLogCoordinates model module.
 * @module model/BinLogCoordinates
 * @version v1beta4
 */
class BinLogCoordinates {
    /**
     * Constructs a new <code>BinLogCoordinates</code>.
     * Binary log coordinates.
     * @alias module:model/BinLogCoordinates
     */
    constructor() { 
        
        BinLogCoordinates.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BinLogCoordinates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BinLogCoordinates} obj Optional instance to populate.
     * @return {module:model/BinLogCoordinates} The populated <code>BinLogCoordinates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BinLogCoordinates();

            if (data.hasOwnProperty('binLogFileName')) {
                obj['binLogFileName'] = ApiClient.convertToType(data['binLogFileName'], 'String');
            }
            if (data.hasOwnProperty('binLogPosition')) {
                obj['binLogPosition'] = ApiClient.convertToType(data['binLogPosition'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BinLogCoordinates</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BinLogCoordinates</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['binLogFileName'] && !(typeof data['binLogFileName'] === 'string' || data['binLogFileName'] instanceof String)) {
            throw new Error("Expected the field `binLogFileName` to be a primitive type in the JSON string but got " + data['binLogFileName']);
        }
        // ensure the json data is a string
        if (data['binLogPosition'] && !(typeof data['binLogPosition'] === 'string' || data['binLogPosition'] instanceof String)) {
            throw new Error("Expected the field `binLogPosition` to be a primitive type in the JSON string but got " + data['binLogPosition']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * Name of the binary log file for a Cloud SQL instance.
 * @member {String} binLogFileName
 */
BinLogCoordinates.prototype['binLogFileName'] = undefined;

/**
 * Position (offset) within the binary log file.
 * @member {String} binLogPosition
 */
BinLogCoordinates.prototype['binLogPosition'] = undefined;

/**
 * This is always `sql#binLogCoordinates`.
 * @member {String} kind
 */
BinLogCoordinates.prototype['kind'] = undefined;






export default BinLogCoordinates;

