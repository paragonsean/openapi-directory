/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MySqlSyncConfig from './MySqlSyncConfig';

/**
 * The SqlInstancesVerifyExternalSyncSettingsRequest model module.
 * @module model/SqlInstancesVerifyExternalSyncSettingsRequest
 * @version v1beta4
 */
class SqlInstancesVerifyExternalSyncSettingsRequest {
    /**
     * Constructs a new <code>SqlInstancesVerifyExternalSyncSettingsRequest</code>.
     * @alias module:model/SqlInstancesVerifyExternalSyncSettingsRequest
     */
    constructor() { 
        
        SqlInstancesVerifyExternalSyncSettingsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SqlInstancesVerifyExternalSyncSettingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SqlInstancesVerifyExternalSyncSettingsRequest} obj Optional instance to populate.
     * @return {module:model/SqlInstancesVerifyExternalSyncSettingsRequest} The populated <code>SqlInstancesVerifyExternalSyncSettingsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SqlInstancesVerifyExternalSyncSettingsRequest();

            if (data.hasOwnProperty('mysqlSyncConfig')) {
                obj['mysqlSyncConfig'] = MySqlSyncConfig.constructFromObject(data['mysqlSyncConfig']);
            }
            if (data.hasOwnProperty('syncMode')) {
                obj['syncMode'] = ApiClient.convertToType(data['syncMode'], 'String');
            }
            if (data.hasOwnProperty('verifyConnectionOnly')) {
                obj['verifyConnectionOnly'] = ApiClient.convertToType(data['verifyConnectionOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('verifyReplicationOnly')) {
                obj['verifyReplicationOnly'] = ApiClient.convertToType(data['verifyReplicationOnly'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SqlInstancesVerifyExternalSyncSettingsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SqlInstancesVerifyExternalSyncSettingsRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `mysqlSyncConfig`
        if (data['mysqlSyncConfig']) { // data not null
          MySqlSyncConfig.validateJSON(data['mysqlSyncConfig']);
        }
        // ensure the json data is a string
        if (data['syncMode'] && !(typeof data['syncMode'] === 'string' || data['syncMode'] instanceof String)) {
            throw new Error("Expected the field `syncMode` to be a primitive type in the JSON string but got " + data['syncMode']);
        }

        return true;
    }


}



/**
 * @member {module:model/MySqlSyncConfig} mysqlSyncConfig
 */
SqlInstancesVerifyExternalSyncSettingsRequest.prototype['mysqlSyncConfig'] = undefined;

/**
 * External sync mode
 * @member {module:model/SqlInstancesVerifyExternalSyncSettingsRequest.SyncModeEnum} syncMode
 */
SqlInstancesVerifyExternalSyncSettingsRequest.prototype['syncMode'] = undefined;

/**
 * Flag to enable verifying connection only
 * @member {Boolean} verifyConnectionOnly
 */
SqlInstancesVerifyExternalSyncSettingsRequest.prototype['verifyConnectionOnly'] = undefined;

/**
 * Optional. Flag to verify settings required by replication setup only
 * @member {Boolean} verifyReplicationOnly
 */
SqlInstancesVerifyExternalSyncSettingsRequest.prototype['verifyReplicationOnly'] = undefined;





/**
 * Allowed values for the <code>syncMode</code> property.
 * @enum {String}
 * @readonly
 */
SqlInstancesVerifyExternalSyncSettingsRequest['SyncModeEnum'] = {

    /**
     * value: "EXTERNAL_SYNC_MODE_UNSPECIFIED"
     * @const
     */
    "EXTERNAL_SYNC_MODE_UNSPECIFIED": "EXTERNAL_SYNC_MODE_UNSPECIFIED",

    /**
     * value: "ONLINE"
     * @const
     */
    "ONLINE": "ONLINE",

    /**
     * value: "OFFLINE"
     * @const
     */
    "OFFLINE": "OFFLINE"
};



export default SqlInstancesVerifyExternalSyncSettingsRequest;

