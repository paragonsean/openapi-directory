/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SqlServerDatabaseDetails model module.
 * @module model/SqlServerDatabaseDetails
 * @version v1beta4
 */
class SqlServerDatabaseDetails {
    /**
     * Constructs a new <code>SqlServerDatabaseDetails</code>.
     * Represents a Sql Server database on the Cloud SQL instance.
     * @alias module:model/SqlServerDatabaseDetails
     */
    constructor() { 
        
        SqlServerDatabaseDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SqlServerDatabaseDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SqlServerDatabaseDetails} obj Optional instance to populate.
     * @return {module:model/SqlServerDatabaseDetails} The populated <code>SqlServerDatabaseDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SqlServerDatabaseDetails();

            if (data.hasOwnProperty('compatibilityLevel')) {
                obj['compatibilityLevel'] = ApiClient.convertToType(data['compatibilityLevel'], 'Number');
            }
            if (data.hasOwnProperty('recoveryModel')) {
                obj['recoveryModel'] = ApiClient.convertToType(data['recoveryModel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SqlServerDatabaseDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SqlServerDatabaseDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['recoveryModel'] && !(typeof data['recoveryModel'] === 'string' || data['recoveryModel'] instanceof String)) {
            throw new Error("Expected the field `recoveryModel` to be a primitive type in the JSON string but got " + data['recoveryModel']);
        }

        return true;
    }


}



/**
 * The version of SQL Server with which the database is to be made compatible
 * @member {Number} compatibilityLevel
 */
SqlServerDatabaseDetails.prototype['compatibilityLevel'] = undefined;

/**
 * The recovery model of a SQL Server database
 * @member {String} recoveryModel
 */
SqlServerDatabaseDetails.prototype['recoveryModel'] = undefined;






export default SqlServerDatabaseDetails;

