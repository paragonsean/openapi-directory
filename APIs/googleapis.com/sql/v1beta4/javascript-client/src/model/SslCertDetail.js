/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SslCert from './SslCert';

/**
 * The SslCertDetail model module.
 * @module model/SslCertDetail
 * @version v1beta4
 */
class SslCertDetail {
    /**
     * Constructs a new <code>SslCertDetail</code>.
     * SslCertDetail.
     * @alias module:model/SslCertDetail
     */
    constructor() { 
        
        SslCertDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SslCertDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SslCertDetail} obj Optional instance to populate.
     * @return {module:model/SslCertDetail} The populated <code>SslCertDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SslCertDetail();

            if (data.hasOwnProperty('certInfo')) {
                obj['certInfo'] = SslCert.constructFromObject(data['certInfo']);
            }
            if (data.hasOwnProperty('certPrivateKey')) {
                obj['certPrivateKey'] = ApiClient.convertToType(data['certPrivateKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SslCertDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SslCertDetail</code>.
     */
    static validateJSON(data) {
        // validate the optional field `certInfo`
        if (data['certInfo']) { // data not null
          SslCert.validateJSON(data['certInfo']);
        }
        // ensure the json data is a string
        if (data['certPrivateKey'] && !(typeof data['certPrivateKey'] === 'string' || data['certPrivateKey'] instanceof String)) {
            throw new Error("Expected the field `certPrivateKey` to be a primitive type in the JSON string but got " + data['certPrivateKey']);
        }

        return true;
    }


}



/**
 * @member {module:model/SslCert} certInfo
 */
SslCertDetail.prototype['certInfo'] = undefined;

/**
 * The private key for the client cert, in pem format. Keep private in order to protect your security.
 * @member {String} certPrivateKey
 */
SslCertDetail.prototype['certPrivateKey'] = undefined;






export default SslCertDetail;

