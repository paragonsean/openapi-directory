/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PscConfig model module.
 * @module model/PscConfig
 * @version v1beta4
 */
class PscConfig {
    /**
     * Constructs a new <code>PscConfig</code>.
     * PSC settings for a Cloud SQL instance.
     * @alias module:model/PscConfig
     */
    constructor() { 
        
        PscConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PscConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PscConfig} obj Optional instance to populate.
     * @return {module:model/PscConfig} The populated <code>PscConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PscConfig();

            if (data.hasOwnProperty('allowedConsumerProjects')) {
                obj['allowedConsumerProjects'] = ApiClient.convertToType(data['allowedConsumerProjects'], ['String']);
            }
            if (data.hasOwnProperty('pscEnabled')) {
                obj['pscEnabled'] = ApiClient.convertToType(data['pscEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PscConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PscConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedConsumerProjects'])) {
            throw new Error("Expected the field `allowedConsumerProjects` to be an array in the JSON data but got " + data['allowedConsumerProjects']);
        }

        return true;
    }


}



/**
 * Optional. The list of consumer projects that are allow-listed for PSC connections to this instance. This instance can be connected to with PSC from any network in these projects. Each consumer project in this list may be represented by a project number (numeric) or by a project id (alphanumeric).
 * @member {Array.<String>} allowedConsumerProjects
 */
PscConfig.prototype['allowedConsumerProjects'] = undefined;

/**
 * Whether PSC connectivity is enabled for this instance.
 * @member {Boolean} pscEnabled
 */
PscConfig.prototype['pscEnabled'] = undefined;






export default PscConfig;

