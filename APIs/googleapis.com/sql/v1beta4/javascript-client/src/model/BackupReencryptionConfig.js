/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BackupReencryptionConfig model module.
 * @module model/BackupReencryptionConfig
 * @version v1beta4
 */
class BackupReencryptionConfig {
    /**
     * Constructs a new <code>BackupReencryptionConfig</code>.
     * Backup Reencryption Config
     * @alias module:model/BackupReencryptionConfig
     */
    constructor() { 
        
        BackupReencryptionConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackupReencryptionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupReencryptionConfig} obj Optional instance to populate.
     * @return {module:model/BackupReencryptionConfig} The populated <code>BackupReencryptionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupReencryptionConfig();

            if (data.hasOwnProperty('backupLimit')) {
                obj['backupLimit'] = ApiClient.convertToType(data['backupLimit'], 'Number');
            }
            if (data.hasOwnProperty('backupType')) {
                obj['backupType'] = ApiClient.convertToType(data['backupType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupReencryptionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupReencryptionConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['backupType'] && !(typeof data['backupType'] === 'string' || data['backupType'] instanceof String)) {
            throw new Error("Expected the field `backupType` to be a primitive type in the JSON string but got " + data['backupType']);
        }

        return true;
    }


}



/**
 * Backup re-encryption limit
 * @member {Number} backupLimit
 */
BackupReencryptionConfig.prototype['backupLimit'] = undefined;

/**
 * Type of backups users want to re-encrypt.
 * @member {module:model/BackupReencryptionConfig.BackupTypeEnum} backupType
 */
BackupReencryptionConfig.prototype['backupType'] = undefined;





/**
 * Allowed values for the <code>backupType</code> property.
 * @enum {String}
 * @readonly
 */
BackupReencryptionConfig['BackupTypeEnum'] = {

    /**
     * value: "BACKUP_TYPE_UNSPECIFIED"
     * @const
     */
    "BACKUP_TYPE_UNSPECIFIED": "BACKUP_TYPE_UNSPECIFIED",

    /**
     * value: "AUTOMATED"
     * @const
     */
    "AUTOMATED": "AUTOMATED",

    /**
     * value: "ON_DEMAND"
     * @const
     */
    "ON_DEMAND": "ON_DEMAND"
};



export default BackupReencryptionConfig;

