/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GenerateEphemeralCertRequest model module.
 * @module model/GenerateEphemeralCertRequest
 * @version v1beta4
 */
class GenerateEphemeralCertRequest {
    /**
     * Constructs a new <code>GenerateEphemeralCertRequest</code>.
     * Ephemeral certificate creation request.
     * @alias module:model/GenerateEphemeralCertRequest
     */
    constructor() { 
        
        GenerateEphemeralCertRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GenerateEphemeralCertRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenerateEphemeralCertRequest} obj Optional instance to populate.
     * @return {module:model/GenerateEphemeralCertRequest} The populated <code>GenerateEphemeralCertRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenerateEphemeralCertRequest();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('public_key')) {
                obj['public_key'] = ApiClient.convertToType(data['public_key'], 'String');
            }
            if (data.hasOwnProperty('readTime')) {
                obj['readTime'] = ApiClient.convertToType(data['readTime'], 'String');
            }
            if (data.hasOwnProperty('validDuration')) {
                obj['validDuration'] = ApiClient.convertToType(data['validDuration'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GenerateEphemeralCertRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GenerateEphemeralCertRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['public_key'] && !(typeof data['public_key'] === 'string' || data['public_key'] instanceof String)) {
            throw new Error("Expected the field `public_key` to be a primitive type in the JSON string but got " + data['public_key']);
        }
        // ensure the json data is a string
        if (data['readTime'] && !(typeof data['readTime'] === 'string' || data['readTime'] instanceof String)) {
            throw new Error("Expected the field `readTime` to be a primitive type in the JSON string but got " + data['readTime']);
        }
        // ensure the json data is a string
        if (data['validDuration'] && !(typeof data['validDuration'] === 'string' || data['validDuration'] instanceof String)) {
            throw new Error("Expected the field `validDuration` to be a primitive type in the JSON string but got " + data['validDuration']);
        }

        return true;
    }


}



/**
 * Optional. Access token to include in the signed certificate.
 * @member {String} access_token
 */
GenerateEphemeralCertRequest.prototype['access_token'] = undefined;

/**
 * PEM encoded public key to include in the signed certificate.
 * @member {String} public_key
 */
GenerateEphemeralCertRequest.prototype['public_key'] = undefined;

/**
 * Optional. Optional snapshot read timestamp to trade freshness for performance.
 * @member {String} readTime
 */
GenerateEphemeralCertRequest.prototype['readTime'] = undefined;

/**
 * Optional. If set, it will contain the cert valid duration.
 * @member {String} validDuration
 */
GenerateEphemeralCertRequest.prototype['validDuration'] = undefined;






export default GenerateEphemeralCertRequest;

