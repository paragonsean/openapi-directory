/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BackupRetentionSettings from './BackupRetentionSettings';

/**
 * The BackupConfiguration model module.
 * @module model/BackupConfiguration
 * @version v1beta4
 */
class BackupConfiguration {
    /**
     * Constructs a new <code>BackupConfiguration</code>.
     * Database instance backup configuration.
     * @alias module:model/BackupConfiguration
     */
    constructor() { 
        
        BackupConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BackupConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BackupConfiguration} obj Optional instance to populate.
     * @return {module:model/BackupConfiguration} The populated <code>BackupConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BackupConfiguration();

            if (data.hasOwnProperty('backupRetentionSettings')) {
                obj['backupRetentionSettings'] = BackupRetentionSettings.constructFromObject(data['backupRetentionSettings']);
            }
            if (data.hasOwnProperty('binaryLogEnabled')) {
                obj['binaryLogEnabled'] = ApiClient.convertToType(data['binaryLogEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('pointInTimeRecoveryEnabled')) {
                obj['pointInTimeRecoveryEnabled'] = ApiClient.convertToType(data['pointInTimeRecoveryEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('replicationLogArchivingEnabled')) {
                obj['replicationLogArchivingEnabled'] = ApiClient.convertToType(data['replicationLogArchivingEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('transactionLogRetentionDays')) {
                obj['transactionLogRetentionDays'] = ApiClient.convertToType(data['transactionLogRetentionDays'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BackupConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BackupConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `backupRetentionSettings`
        if (data['backupRetentionSettings']) { // data not null
          BackupRetentionSettings.validateJSON(data['backupRetentionSettings']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/BackupRetentionSettings} backupRetentionSettings
 */
BackupConfiguration.prototype['backupRetentionSettings'] = undefined;

/**
 * (MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well.
 * @member {Boolean} binaryLogEnabled
 */
BackupConfiguration.prototype['binaryLogEnabled'] = undefined;

/**
 * Whether this configuration is enabled.
 * @member {Boolean} enabled
 */
BackupConfiguration.prototype['enabled'] = undefined;

/**
 * This is always `sql#backupConfiguration`.
 * @member {String} kind
 */
BackupConfiguration.prototype['kind'] = undefined;

/**
 * Location of the backup
 * @member {String} location
 */
BackupConfiguration.prototype['location'] = undefined;

/**
 * Whether point in time recovery is enabled.
 * @member {Boolean} pointInTimeRecoveryEnabled
 */
BackupConfiguration.prototype['pointInTimeRecoveryEnabled'] = undefined;

/**
 * Reserved for future use.
 * @member {Boolean} replicationLogArchivingEnabled
 */
BackupConfiguration.prototype['replicationLogArchivingEnabled'] = undefined;

/**
 * Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`.
 * @member {String} startTime
 */
BackupConfiguration.prototype['startTime'] = undefined;

/**
 * The number of days of transaction logs we retain for point in time restore, from 1-7.
 * @member {Number} transactionLogRetentionDays
 */
BackupConfiguration.prototype['transactionLogRetentionDays'] = undefined;






export default BackupConfiguration;

