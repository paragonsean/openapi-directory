/**
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SqlServerAuditConfig model module.
 * @module model/SqlServerAuditConfig
 * @version v1beta4
 */
class SqlServerAuditConfig {
    /**
     * Constructs a new <code>SqlServerAuditConfig</code>.
     * SQL Server specific audit configuration.
     * @alias module:model/SqlServerAuditConfig
     */
    constructor() { 
        
        SqlServerAuditConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SqlServerAuditConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SqlServerAuditConfig} obj Optional instance to populate.
     * @return {module:model/SqlServerAuditConfig} The populated <code>SqlServerAuditConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SqlServerAuditConfig();

            if (data.hasOwnProperty('bucket')) {
                obj['bucket'] = ApiClient.convertToType(data['bucket'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('retentionInterval')) {
                obj['retentionInterval'] = ApiClient.convertToType(data['retentionInterval'], 'String');
            }
            if (data.hasOwnProperty('uploadInterval')) {
                obj['uploadInterval'] = ApiClient.convertToType(data['uploadInterval'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SqlServerAuditConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SqlServerAuditConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bucket'] && !(typeof data['bucket'] === 'string' || data['bucket'] instanceof String)) {
            throw new Error("Expected the field `bucket` to be a primitive type in the JSON string but got " + data['bucket']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['retentionInterval'] && !(typeof data['retentionInterval'] === 'string' || data['retentionInterval'] instanceof String)) {
            throw new Error("Expected the field `retentionInterval` to be a primitive type in the JSON string but got " + data['retentionInterval']);
        }
        // ensure the json data is a string
        if (data['uploadInterval'] && !(typeof data['uploadInterval'] === 'string' || data['uploadInterval'] instanceof String)) {
            throw new Error("Expected the field `uploadInterval` to be a primitive type in the JSON string but got " + data['uploadInterval']);
        }

        return true;
    }


}



/**
 * The name of the destination bucket (e.g., gs://mybucket).
 * @member {String} bucket
 */
SqlServerAuditConfig.prototype['bucket'] = undefined;

/**
 * This is always sql#sqlServerAuditConfig
 * @member {String} kind
 */
SqlServerAuditConfig.prototype['kind'] = undefined;

/**
 * How long to keep generated audit files.
 * @member {String} retentionInterval
 */
SqlServerAuditConfig.prototype['retentionInterval'] = undefined;

/**
 * How often to upload generated audit files.
 * @member {String} uploadInterval
 */
SqlServerAuditConfig.prototype['uploadInterval'] = undefined;






export default SqlServerAuditConfig;

