# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AdvancedMachineFeatures(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, threads_per_core: int=None):
        """AdvancedMachineFeatures - a model defined in OpenAPI

        :param threads_per_core: The threads_per_core of this AdvancedMachineFeatures.
        """
        self.openapi_types = {
            'threads_per_core': int
        }

        self.attribute_map = {
            'threads_per_core': 'threadsPerCore'
        }

        self._threads_per_core = threads_per_core

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvancedMachineFeatures':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvancedMachineFeatures of this AdvancedMachineFeatures.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def threads_per_core(self):
        """Gets the threads_per_core of this AdvancedMachineFeatures.

        The number of threads per physical core.

        :return: The threads_per_core of this AdvancedMachineFeatures.
        :rtype: int
        """
        return self._threads_per_core

    @threads_per_core.setter
    def threads_per_core(self, threads_per_core):
        """Sets the threads_per_core of this AdvancedMachineFeatures.

        The number of threads per physical core.

        :param threads_per_core: The threads_per_core of this AdvancedMachineFeatures.
        :type threads_per_core: int
        """

        self._threads_per_core = threads_per_core
