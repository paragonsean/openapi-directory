# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.operation_error import OperationError
from openapi_server import util


class OperationErrors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[OperationError]=None, kind: str=None):
        """OperationErrors - a model defined in OpenAPI

        :param errors: The errors of this OperationErrors.
        :param kind: The kind of this OperationErrors.
        """
        self.openapi_types = {
            'errors': List[OperationError],
            'kind': str
        }

        self.attribute_map = {
            'errors': 'errors',
            'kind': 'kind'
        }

        self._errors = errors
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperationErrors':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperationErrors of this OperationErrors.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this OperationErrors.

        The list of errors encountered while processing this operation.

        :return: The errors of this OperationErrors.
        :rtype: List[OperationError]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this OperationErrors.

        The list of errors encountered while processing this operation.

        :param errors: The errors of this OperationErrors.
        :type errors: List[OperationError]
        """

        self._errors = errors

    @property
    def kind(self):
        """Gets the kind of this OperationErrors.

        This is always `sql#operationErrors`.

        :return: The kind of this OperationErrors.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this OperationErrors.

        This is always `sql#operationErrors`.

        :param kind: The kind of this OperationErrors.
        :type kind: str
        """

        self._kind = kind
