# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.clone_context import CloneContext
from openapi_server import util


class InstancesCloneRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clone_context: CloneContext=None):
        """InstancesCloneRequest - a model defined in OpenAPI

        :param clone_context: The clone_context of this InstancesCloneRequest.
        """
        self.openapi_types = {
            'clone_context': CloneContext
        }

        self.attribute_map = {
            'clone_context': 'cloneContext'
        }

        self._clone_context = clone_context

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstancesCloneRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstancesCloneRequest of this InstancesCloneRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clone_context(self):
        """Gets the clone_context of this InstancesCloneRequest.


        :return: The clone_context of this InstancesCloneRequest.
        :rtype: CloneContext
        """
        return self._clone_context

    @clone_context.setter
    def clone_context(self, clone_context):
        """Sets the clone_context of this InstancesCloneRequest.


        :param clone_context: The clone_context of this InstancesCloneRequest.
        :type clone_context: CloneContext
        """

        self._clone_context = clone_context
