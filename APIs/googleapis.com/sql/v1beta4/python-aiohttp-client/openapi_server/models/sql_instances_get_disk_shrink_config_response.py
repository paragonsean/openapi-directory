# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SqlInstancesGetDiskShrinkConfigResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, message: str=None, minimal_target_size_gb: str=None):
        """SqlInstancesGetDiskShrinkConfigResponse - a model defined in OpenAPI

        :param kind: The kind of this SqlInstancesGetDiskShrinkConfigResponse.
        :param message: The message of this SqlInstancesGetDiskShrinkConfigResponse.
        :param minimal_target_size_gb: The minimal_target_size_gb of this SqlInstancesGetDiskShrinkConfigResponse.
        """
        self.openapi_types = {
            'kind': str,
            'message': str,
            'minimal_target_size_gb': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'message': 'message',
            'minimal_target_size_gb': 'minimalTargetSizeGb'
        }

        self._kind = kind
        self._message = message
        self._minimal_target_size_gb = minimal_target_size_gb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SqlInstancesGetDiskShrinkConfigResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SqlInstancesGetDiskShrinkConfigResponse of this SqlInstancesGetDiskShrinkConfigResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this SqlInstancesGetDiskShrinkConfigResponse.

        This is always `sql#getDiskShrinkConfig`.

        :return: The kind of this SqlInstancesGetDiskShrinkConfigResponse.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this SqlInstancesGetDiskShrinkConfigResponse.

        This is always `sql#getDiskShrinkConfig`.

        :param kind: The kind of this SqlInstancesGetDiskShrinkConfigResponse.
        :type kind: str
        """

        self._kind = kind

    @property
    def message(self):
        """Gets the message of this SqlInstancesGetDiskShrinkConfigResponse.

        Additional message to customers.

        :return: The message of this SqlInstancesGetDiskShrinkConfigResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this SqlInstancesGetDiskShrinkConfigResponse.

        Additional message to customers.

        :param message: The message of this SqlInstancesGetDiskShrinkConfigResponse.
        :type message: str
        """

        self._message = message

    @property
    def minimal_target_size_gb(self):
        """Gets the minimal_target_size_gb of this SqlInstancesGetDiskShrinkConfigResponse.

        The minimum size to which a disk can be shrunk in GigaBytes.

        :return: The minimal_target_size_gb of this SqlInstancesGetDiskShrinkConfigResponse.
        :rtype: str
        """
        return self._minimal_target_size_gb

    @minimal_target_size_gb.setter
    def minimal_target_size_gb(self, minimal_target_size_gb):
        """Sets the minimal_target_size_gb of this SqlInstancesGetDiskShrinkConfigResponse.

        The minimum size to which a disk can be shrunk in GigaBytes.

        :param minimal_target_size_gb: The minimal_target_size_gb of this SqlInstancesGetDiskShrinkConfigResponse.
        :type minimal_target_size_gb: str
        """

        self._minimal_target_size_gb = minimal_target_size_gb
