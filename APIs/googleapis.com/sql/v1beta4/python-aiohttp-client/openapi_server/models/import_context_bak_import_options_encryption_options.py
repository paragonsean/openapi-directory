# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportContextBakImportOptionsEncryptionOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cert_path: str=None, pvk_password: str=None, pvk_path: str=None):
        """ImportContextBakImportOptionsEncryptionOptions - a model defined in OpenAPI

        :param cert_path: The cert_path of this ImportContextBakImportOptionsEncryptionOptions.
        :param pvk_password: The pvk_password of this ImportContextBakImportOptionsEncryptionOptions.
        :param pvk_path: The pvk_path of this ImportContextBakImportOptionsEncryptionOptions.
        """
        self.openapi_types = {
            'cert_path': str,
            'pvk_password': str,
            'pvk_path': str
        }

        self.attribute_map = {
            'cert_path': 'certPath',
            'pvk_password': 'pvkPassword',
            'pvk_path': 'pvkPath'
        }

        self._cert_path = cert_path
        self._pvk_password = pvk_password
        self._pvk_path = pvk_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportContextBakImportOptionsEncryptionOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImportContext_bakImportOptions_encryptionOptions of this ImportContextBakImportOptionsEncryptionOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cert_path(self):
        """Gets the cert_path of this ImportContextBakImportOptionsEncryptionOptions.

        Path to the Certificate (.cer) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.

        :return: The cert_path of this ImportContextBakImportOptionsEncryptionOptions.
        :rtype: str
        """
        return self._cert_path

    @cert_path.setter
    def cert_path(self, cert_path):
        """Sets the cert_path of this ImportContextBakImportOptionsEncryptionOptions.

        Path to the Certificate (.cer) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.

        :param cert_path: The cert_path of this ImportContextBakImportOptionsEncryptionOptions.
        :type cert_path: str
        """

        self._cert_path = cert_path

    @property
    def pvk_password(self):
        """Gets the pvk_password of this ImportContextBakImportOptionsEncryptionOptions.

        Password that encrypts the private key

        :return: The pvk_password of this ImportContextBakImportOptionsEncryptionOptions.
        :rtype: str
        """
        return self._pvk_password

    @pvk_password.setter
    def pvk_password(self, pvk_password):
        """Sets the pvk_password of this ImportContextBakImportOptionsEncryptionOptions.

        Password that encrypts the private key

        :param pvk_password: The pvk_password of this ImportContextBakImportOptionsEncryptionOptions.
        :type pvk_password: str
        """

        self._pvk_password = pvk_password

    @property
    def pvk_path(self):
        """Gets the pvk_path of this ImportContextBakImportOptionsEncryptionOptions.

        Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.

        :return: The pvk_path of this ImportContextBakImportOptionsEncryptionOptions.
        :rtype: str
        """
        return self._pvk_path

    @pvk_path.setter
    def pvk_path(self, pvk_path):
        """Sets the pvk_path of this ImportContextBakImportOptionsEncryptionOptions.

        Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form `gs://bucketName/fileName`. The instance must have write permissions to the bucket and read access to the file.

        :param pvk_path: The pvk_path of this ImportContextBakImportOptionsEncryptionOptions.
        :type pvk_path: str
        """

        self._pvk_path = pvk_path
