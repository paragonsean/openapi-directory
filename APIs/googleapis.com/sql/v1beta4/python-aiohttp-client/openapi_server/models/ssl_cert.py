# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SslCert(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cert: str=None, cert_serial_number: str=None, common_name: str=None, create_time: str=None, expiration_time: str=None, instance: str=None, kind: str=None, self_link: str=None, sha1_fingerprint: str=None):
        """SslCert - a model defined in OpenAPI

        :param cert: The cert of this SslCert.
        :param cert_serial_number: The cert_serial_number of this SslCert.
        :param common_name: The common_name of this SslCert.
        :param create_time: The create_time of this SslCert.
        :param expiration_time: The expiration_time of this SslCert.
        :param instance: The instance of this SslCert.
        :param kind: The kind of this SslCert.
        :param self_link: The self_link of this SslCert.
        :param sha1_fingerprint: The sha1_fingerprint of this SslCert.
        """
        self.openapi_types = {
            'cert': str,
            'cert_serial_number': str,
            'common_name': str,
            'create_time': str,
            'expiration_time': str,
            'instance': str,
            'kind': str,
            'self_link': str,
            'sha1_fingerprint': str
        }

        self.attribute_map = {
            'cert': 'cert',
            'cert_serial_number': 'certSerialNumber',
            'common_name': 'commonName',
            'create_time': 'createTime',
            'expiration_time': 'expirationTime',
            'instance': 'instance',
            'kind': 'kind',
            'self_link': 'selfLink',
            'sha1_fingerprint': 'sha1Fingerprint'
        }

        self._cert = cert
        self._cert_serial_number = cert_serial_number
        self._common_name = common_name
        self._create_time = create_time
        self._expiration_time = expiration_time
        self._instance = instance
        self._kind = kind
        self._self_link = self_link
        self._sha1_fingerprint = sha1_fingerprint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SslCert':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SslCert of this SslCert.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cert(self):
        """Gets the cert of this SslCert.

        PEM representation.

        :return: The cert of this SslCert.
        :rtype: str
        """
        return self._cert

    @cert.setter
    def cert(self, cert):
        """Sets the cert of this SslCert.

        PEM representation.

        :param cert: The cert of this SslCert.
        :type cert: str
        """

        self._cert = cert

    @property
    def cert_serial_number(self):
        """Gets the cert_serial_number of this SslCert.

        Serial number, as extracted from the certificate.

        :return: The cert_serial_number of this SslCert.
        :rtype: str
        """
        return self._cert_serial_number

    @cert_serial_number.setter
    def cert_serial_number(self, cert_serial_number):
        """Sets the cert_serial_number of this SslCert.

        Serial number, as extracted from the certificate.

        :param cert_serial_number: The cert_serial_number of this SslCert.
        :type cert_serial_number: str
        """

        self._cert_serial_number = cert_serial_number

    @property
    def common_name(self):
        """Gets the common_name of this SslCert.

        User supplied name. Constrained to [a-zA-Z.-_ ]+.

        :return: The common_name of this SslCert.
        :rtype: str
        """
        return self._common_name

    @common_name.setter
    def common_name(self, common_name):
        """Sets the common_name of this SslCert.

        User supplied name. Constrained to [a-zA-Z.-_ ]+.

        :param common_name: The common_name of this SslCert.
        :type common_name: str
        """

        self._common_name = common_name

    @property
    def create_time(self):
        """Gets the create_time of this SslCert.

        The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.

        :return: The create_time of this SslCert.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this SslCert.

        The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.

        :param create_time: The create_time of this SslCert.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def expiration_time(self):
        """Gets the expiration_time of this SslCert.

        The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.

        :return: The expiration_time of this SslCert.
        :rtype: str
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this SslCert.

        The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.

        :param expiration_time: The expiration_time of this SslCert.
        :type expiration_time: str
        """

        self._expiration_time = expiration_time

    @property
    def instance(self):
        """Gets the instance of this SslCert.

        Name of the database instance.

        :return: The instance of this SslCert.
        :rtype: str
        """
        return self._instance

    @instance.setter
    def instance(self, instance):
        """Sets the instance of this SslCert.

        Name of the database instance.

        :param instance: The instance of this SslCert.
        :type instance: str
        """

        self._instance = instance

    @property
    def kind(self):
        """Gets the kind of this SslCert.

        This is always `sql#sslCert`.

        :return: The kind of this SslCert.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this SslCert.

        This is always `sql#sslCert`.

        :param kind: The kind of this SslCert.
        :type kind: str
        """

        self._kind = kind

    @property
    def self_link(self):
        """Gets the self_link of this SslCert.

        The URI of this resource.

        :return: The self_link of this SslCert.
        :rtype: str
        """
        return self._self_link

    @self_link.setter
    def self_link(self, self_link):
        """Sets the self_link of this SslCert.

        The URI of this resource.

        :param self_link: The self_link of this SslCert.
        :type self_link: str
        """

        self._self_link = self_link

    @property
    def sha1_fingerprint(self):
        """Gets the sha1_fingerprint of this SslCert.

        Sha1 Fingerprint.

        :return: The sha1_fingerprint of this SslCert.
        :rtype: str
        """
        return self._sha1_fingerprint

    @sha1_fingerprint.setter
    def sha1_fingerprint(self, sha1_fingerprint):
        """Sets the sha1_fingerprint of this SslCert.

        Sha1 Fingerprint.

        :param sha1_fingerprint: The sha1_fingerprint of this SslCert.
        :type sha1_fingerprint: str
        """

        self._sha1_fingerprint = sha1_fingerprint
