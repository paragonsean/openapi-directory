# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PasswordStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locked: bool=None, password_expiration_time: str=None):
        """PasswordStatus - a model defined in OpenAPI

        :param locked: The locked of this PasswordStatus.
        :param password_expiration_time: The password_expiration_time of this PasswordStatus.
        """
        self.openapi_types = {
            'locked': bool,
            'password_expiration_time': str
        }

        self.attribute_map = {
            'locked': 'locked',
            'password_expiration_time': 'passwordExpirationTime'
        }

        self._locked = locked
        self._password_expiration_time = password_expiration_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PasswordStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PasswordStatus of this PasswordStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locked(self):
        """Gets the locked of this PasswordStatus.

        If true, user does not have login privileges.

        :return: The locked of this PasswordStatus.
        :rtype: bool
        """
        return self._locked

    @locked.setter
    def locked(self, locked):
        """Sets the locked of this PasswordStatus.

        If true, user does not have login privileges.

        :param locked: The locked of this PasswordStatus.
        :type locked: bool
        """

        self._locked = locked

    @property
    def password_expiration_time(self):
        """Gets the password_expiration_time of this PasswordStatus.

        The expiration time of the current password.

        :return: The password_expiration_time of this PasswordStatus.
        :rtype: str
        """
        return self._password_expiration_time

    @password_expiration_time.setter
    def password_expiration_time(self, password_expiration_time):
        """Sets the password_expiration_time of this PasswordStatus.

        The expiration time of the current password.

        :param password_expiration_time: The password_expiration_time of this PasswordStatus.
        :type password_expiration_time: str
        """

        self._password_expiration_time = password_expiration_time
