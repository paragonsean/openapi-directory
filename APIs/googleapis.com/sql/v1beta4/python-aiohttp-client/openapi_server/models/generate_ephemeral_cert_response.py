# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ssl_cert import SslCert
from openapi_server import util


class GenerateEphemeralCertResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ephemeral_cert: SslCert=None):
        """GenerateEphemeralCertResponse - a model defined in OpenAPI

        :param ephemeral_cert: The ephemeral_cert of this GenerateEphemeralCertResponse.
        """
        self.openapi_types = {
            'ephemeral_cert': SslCert
        }

        self.attribute_map = {
            'ephemeral_cert': 'ephemeralCert'
        }

        self._ephemeral_cert = ephemeral_cert

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateEphemeralCertResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateEphemeralCertResponse of this GenerateEphemeralCertResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ephemeral_cert(self):
        """Gets the ephemeral_cert of this GenerateEphemeralCertResponse.


        :return: The ephemeral_cert of this GenerateEphemeralCertResponse.
        :rtype: SslCert
        """
        return self._ephemeral_cert

    @ephemeral_cert.setter
    def ephemeral_cert(self, ephemeral_cert):
        """Sets the ephemeral_cert of this GenerateEphemeralCertResponse.


        :param ephemeral_cert: The ephemeral_cert of this GenerateEphemeralCertResponse.
        :type ephemeral_cert: SslCert
        """

        self._ephemeral_cert = ephemeral_cert
