# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SqlServerUserDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disabled: bool=None, server_roles: List[str]=None):
        """SqlServerUserDetails - a model defined in OpenAPI

        :param disabled: The disabled of this SqlServerUserDetails.
        :param server_roles: The server_roles of this SqlServerUserDetails.
        """
        self.openapi_types = {
            'disabled': bool,
            'server_roles': List[str]
        }

        self.attribute_map = {
            'disabled': 'disabled',
            'server_roles': 'serverRoles'
        }

        self._disabled = disabled
        self._server_roles = server_roles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SqlServerUserDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SqlServerUserDetails of this SqlServerUserDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disabled(self):
        """Gets the disabled of this SqlServerUserDetails.

        If the user has been disabled

        :return: The disabled of this SqlServerUserDetails.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this SqlServerUserDetails.

        If the user has been disabled

        :param disabled: The disabled of this SqlServerUserDetails.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def server_roles(self):
        """Gets the server_roles of this SqlServerUserDetails.

        The server roles for this user

        :return: The server_roles of this SqlServerUserDetails.
        :rtype: List[str]
        """
        return self._server_roles

    @server_roles.setter
    def server_roles(self, server_roles):
        """Sets the server_roles of this SqlServerUserDetails.

        The server roles for this user

        :param server_roles: The server_roles of this SqlServerUserDetails.
        :type server_roles: List[str]
        """

        self._server_roles = server_roles
