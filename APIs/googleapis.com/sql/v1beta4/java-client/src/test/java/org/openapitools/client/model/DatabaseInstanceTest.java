/*
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DatabaseInstanceFailoverReplica;
import org.openapitools.client.model.DiskEncryptionConfiguration;
import org.openapitools.client.model.DiskEncryptionStatus;
import org.openapitools.client.model.IpMapping;
import org.openapitools.client.model.OnPremisesConfiguration;
import org.openapitools.client.model.ReplicaConfiguration;
import org.openapitools.client.model.Settings;
import org.openapitools.client.model.SqlOutOfDiskReport;
import org.openapitools.client.model.SqlScheduledMaintenance;
import org.openapitools.client.model.SslCert;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DatabaseInstance
 */
public class DatabaseInstanceTest {
    private final DatabaseInstance model = new DatabaseInstance();

    /**
     * Model tests for DatabaseInstance
     */
    @Test
    public void testDatabaseInstance() {
        // TODO: test DatabaseInstance
    }

    /**
     * Test the property 'availableMaintenanceVersions'
     */
    @Test
    public void availableMaintenanceVersionsTest() {
        // TODO: test availableMaintenanceVersions
    }

    /**
     * Test the property 'backendType'
     */
    @Test
    public void backendTypeTest() {
        // TODO: test backendType
    }

    /**
     * Test the property 'connectionName'
     */
    @Test
    public void connectionNameTest() {
        // TODO: test connectionName
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'currentDiskSize'
     */
    @Test
    public void currentDiskSizeTest() {
        // TODO: test currentDiskSize
    }

    /**
     * Test the property 'databaseInstalledVersion'
     */
    @Test
    public void databaseInstalledVersionTest() {
        // TODO: test databaseInstalledVersion
    }

    /**
     * Test the property 'databaseVersion'
     */
    @Test
    public void databaseVersionTest() {
        // TODO: test databaseVersion
    }

    /**
     * Test the property 'diskEncryptionConfiguration'
     */
    @Test
    public void diskEncryptionConfigurationTest() {
        // TODO: test diskEncryptionConfiguration
    }

    /**
     * Test the property 'diskEncryptionStatus'
     */
    @Test
    public void diskEncryptionStatusTest() {
        // TODO: test diskEncryptionStatus
    }

    /**
     * Test the property 'dnsName'
     */
    @Test
    public void dnsNameTest() {
        // TODO: test dnsName
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'failoverReplica'
     */
    @Test
    public void failoverReplicaTest() {
        // TODO: test failoverReplica
    }

    /**
     * Test the property 'gceZone'
     */
    @Test
    public void gceZoneTest() {
        // TODO: test gceZone
    }

    /**
     * Test the property 'instanceType'
     */
    @Test
    public void instanceTypeTest() {
        // TODO: test instanceType
    }

    /**
     * Test the property 'ipAddresses'
     */
    @Test
    public void ipAddressesTest() {
        // TODO: test ipAddresses
    }

    /**
     * Test the property 'ipv6Address'
     */
    @Test
    public void ipv6AddressTest() {
        // TODO: test ipv6Address
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'maintenanceVersion'
     */
    @Test
    public void maintenanceVersionTest() {
        // TODO: test maintenanceVersion
    }

    /**
     * Test the property 'masterInstanceName'
     */
    @Test
    public void masterInstanceNameTest() {
        // TODO: test masterInstanceName
    }

    /**
     * Test the property 'maxDiskSize'
     */
    @Test
    public void maxDiskSizeTest() {
        // TODO: test maxDiskSize
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'onPremisesConfiguration'
     */
    @Test
    public void onPremisesConfigurationTest() {
        // TODO: test onPremisesConfiguration
    }

    /**
     * Test the property 'outOfDiskReport'
     */
    @Test
    public void outOfDiskReportTest() {
        // TODO: test outOfDiskReport
    }

    /**
     * Test the property 'primaryDnsName'
     */
    @Test
    public void primaryDnsNameTest() {
        // TODO: test primaryDnsName
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'pscServiceAttachmentLink'
     */
    @Test
    public void pscServiceAttachmentLinkTest() {
        // TODO: test pscServiceAttachmentLink
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'replicaConfiguration'
     */
    @Test
    public void replicaConfigurationTest() {
        // TODO: test replicaConfiguration
    }

    /**
     * Test the property 'replicaNames'
     */
    @Test
    public void replicaNamesTest() {
        // TODO: test replicaNames
    }

    /**
     * Test the property 'rootPassword'
     */
    @Test
    public void rootPasswordTest() {
        // TODO: test rootPassword
    }

    /**
     * Test the property 'satisfiesPzs'
     */
    @Test
    public void satisfiesPzsTest() {
        // TODO: test satisfiesPzs
    }

    /**
     * Test the property 'scheduledMaintenance'
     */
    @Test
    public void scheduledMaintenanceTest() {
        // TODO: test scheduledMaintenance
    }

    /**
     * Test the property 'secondaryGceZone'
     */
    @Test
    public void secondaryGceZoneTest() {
        // TODO: test secondaryGceZone
    }

    /**
     * Test the property 'selfLink'
     */
    @Test
    public void selfLinkTest() {
        // TODO: test selfLink
    }

    /**
     * Test the property 'serverCaCert'
     */
    @Test
    public void serverCaCertTest() {
        // TODO: test serverCaCert
    }

    /**
     * Test the property 'serviceAccountEmailAddress'
     */
    @Test
    public void serviceAccountEmailAddressTest() {
        // TODO: test serviceAccountEmailAddress
    }

    /**
     * Test the property 'settings'
     */
    @Test
    public void settingsTest() {
        // TODO: test settings
    }

    /**
     * Test the property 'sqlNetworkArchitecture'
     */
    @Test
    public void sqlNetworkArchitectureTest() {
        // TODO: test sqlNetworkArchitecture
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'suspensionReason'
     */
    @Test
    public void suspensionReasonTest() {
        // TODO: test suspensionReason
    }

    /**
     * Test the property 'writeEndpoint'
     */
    @Test
    public void writeEndpointTest() {
        // TODO: test writeEndpoint
    }

}
