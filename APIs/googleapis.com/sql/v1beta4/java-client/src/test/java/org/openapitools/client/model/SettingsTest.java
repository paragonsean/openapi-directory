/*
 * Cloud SQL Admin API
 * API for Cloud SQL database instance management
 *
 * The version of the OpenAPI document: v1beta4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.AdvancedMachineFeatures;
import org.openapitools.client.model.BackupConfiguration;
import org.openapitools.client.model.DataCacheConfig;
import org.openapitools.client.model.DatabaseFlags;
import org.openapitools.client.model.DenyMaintenancePeriod;
import org.openapitools.client.model.InsightsConfig;
import org.openapitools.client.model.IpConfiguration;
import org.openapitools.client.model.LocationPreference;
import org.openapitools.client.model.MaintenanceWindow;
import org.openapitools.client.model.PasswordValidationPolicy;
import org.openapitools.client.model.SqlActiveDirectoryConfig;
import org.openapitools.client.model.SqlServerAuditConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Settings
 */
public class SettingsTest {
    private final Settings model = new Settings();

    /**
     * Model tests for Settings
     */
    @Test
    public void testSettings() {
        // TODO: test Settings
    }

    /**
     * Test the property 'activationPolicy'
     */
    @Test
    public void activationPolicyTest() {
        // TODO: test activationPolicy
    }

    /**
     * Test the property 'activeDirectoryConfig'
     */
    @Test
    public void activeDirectoryConfigTest() {
        // TODO: test activeDirectoryConfig
    }

    /**
     * Test the property 'advancedMachineFeatures'
     */
    @Test
    public void advancedMachineFeaturesTest() {
        // TODO: test advancedMachineFeatures
    }

    /**
     * Test the property 'authorizedGaeApplications'
     */
    @Test
    public void authorizedGaeApplicationsTest() {
        // TODO: test authorizedGaeApplications
    }

    /**
     * Test the property 'availabilityType'
     */
    @Test
    public void availabilityTypeTest() {
        // TODO: test availabilityType
    }

    /**
     * Test the property 'backupConfiguration'
     */
    @Test
    public void backupConfigurationTest() {
        // TODO: test backupConfiguration
    }

    /**
     * Test the property 'collation'
     */
    @Test
    public void collationTest() {
        // TODO: test collation
    }

    /**
     * Test the property 'connectorEnforcement'
     */
    @Test
    public void connectorEnforcementTest() {
        // TODO: test connectorEnforcement
    }

    /**
     * Test the property 'crashSafeReplicationEnabled'
     */
    @Test
    public void crashSafeReplicationEnabledTest() {
        // TODO: test crashSafeReplicationEnabled
    }

    /**
     * Test the property 'dataCacheConfig'
     */
    @Test
    public void dataCacheConfigTest() {
        // TODO: test dataCacheConfig
    }

    /**
     * Test the property 'dataDiskSizeGb'
     */
    @Test
    public void dataDiskSizeGbTest() {
        // TODO: test dataDiskSizeGb
    }

    /**
     * Test the property 'dataDiskType'
     */
    @Test
    public void dataDiskTypeTest() {
        // TODO: test dataDiskType
    }

    /**
     * Test the property 'databaseFlags'
     */
    @Test
    public void databaseFlagsTest() {
        // TODO: test databaseFlags
    }

    /**
     * Test the property 'databaseReplicationEnabled'
     */
    @Test
    public void databaseReplicationEnabledTest() {
        // TODO: test databaseReplicationEnabled
    }

    /**
     * Test the property 'deletionProtectionEnabled'
     */
    @Test
    public void deletionProtectionEnabledTest() {
        // TODO: test deletionProtectionEnabled
    }

    /**
     * Test the property 'denyMaintenancePeriods'
     */
    @Test
    public void denyMaintenancePeriodsTest() {
        // TODO: test denyMaintenancePeriods
    }

    /**
     * Test the property 'edition'
     */
    @Test
    public void editionTest() {
        // TODO: test edition
    }

    /**
     * Test the property 'insightsConfig'
     */
    @Test
    public void insightsConfigTest() {
        // TODO: test insightsConfig
    }

    /**
     * Test the property 'ipConfiguration'
     */
    @Test
    public void ipConfigurationTest() {
        // TODO: test ipConfiguration
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'locationPreference'
     */
    @Test
    public void locationPreferenceTest() {
        // TODO: test locationPreference
    }

    /**
     * Test the property 'maintenanceWindow'
     */
    @Test
    public void maintenanceWindowTest() {
        // TODO: test maintenanceWindow
    }

    /**
     * Test the property 'passwordValidationPolicy'
     */
    @Test
    public void passwordValidationPolicyTest() {
        // TODO: test passwordValidationPolicy
    }

    /**
     * Test the property 'pricingPlan'
     */
    @Test
    public void pricingPlanTest() {
        // TODO: test pricingPlan
    }

    /**
     * Test the property 'replicationType'
     */
    @Test
    public void replicationTypeTest() {
        // TODO: test replicationType
    }

    /**
     * Test the property 'settingsVersion'
     */
    @Test
    public void settingsVersionTest() {
        // TODO: test settingsVersion
    }

    /**
     * Test the property 'sqlServerAuditConfig'
     */
    @Test
    public void sqlServerAuditConfigTest() {
        // TODO: test sqlServerAuditConfig
    }

    /**
     * Test the property 'storageAutoResize'
     */
    @Test
    public void storageAutoResizeTest() {
        // TODO: test storageAutoResize
    }

    /**
     * Test the property 'storageAutoResizeLimit'
     */
    @Test
    public void storageAutoResizeLimitTest() {
        // TODO: test storageAutoResizeLimit
    }

    /**
     * Test the property 'tier'
     */
    @Test
    public void tierTest() {
        // TODO: test tier
    }

    /**
     * Test the property 'timeZone'
     */
    @Test
    public void timeZoneTest() {
        // TODO: test timeZone
    }

    /**
     * Test the property 'userLabels'
     */
    @Test
    public void userLabelsTest() {
        // TODO: test userLabels
    }

}
