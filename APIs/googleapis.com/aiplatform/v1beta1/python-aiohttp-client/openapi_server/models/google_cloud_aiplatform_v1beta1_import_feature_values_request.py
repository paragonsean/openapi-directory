# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_avro_source import GoogleCloudAiplatformV1beta1AvroSource
from openapi_server.models.google_cloud_aiplatform_v1beta1_big_query_source import GoogleCloudAiplatformV1beta1BigQuerySource
from openapi_server.models.google_cloud_aiplatform_v1beta1_csv_source import GoogleCloudAiplatformV1beta1CsvSource
from openapi_server.models.google_cloud_aiplatform_v1beta1_import_feature_values_request_feature_spec import GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpec
from openapi_server import util


class GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avro_source: GoogleCloudAiplatformV1beta1AvroSource=None, bigquery_source: GoogleCloudAiplatformV1beta1BigQuerySource=None, csv_source: GoogleCloudAiplatformV1beta1CsvSource=None, disable_ingestion_analysis: bool=None, disable_online_serving: bool=None, entity_id_field: str=None, feature_specs: List[GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpec]=None, feature_time: str=None, feature_time_field: str=None, worker_count: int=None):
        """GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest - a model defined in OpenAPI

        :param avro_source: The avro_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :param bigquery_source: The bigquery_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :param csv_source: The csv_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :param disable_ingestion_analysis: The disable_ingestion_analysis of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :param disable_online_serving: The disable_online_serving of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :param entity_id_field: The entity_id_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :param feature_specs: The feature_specs of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :param feature_time: The feature_time of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :param feature_time_field: The feature_time_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :param worker_count: The worker_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        """
        self.openapi_types = {
            'avro_source': GoogleCloudAiplatformV1beta1AvroSource,
            'bigquery_source': GoogleCloudAiplatformV1beta1BigQuerySource,
            'csv_source': GoogleCloudAiplatformV1beta1CsvSource,
            'disable_ingestion_analysis': bool,
            'disable_online_serving': bool,
            'entity_id_field': str,
            'feature_specs': List[GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpec],
            'feature_time': str,
            'feature_time_field': str,
            'worker_count': int
        }

        self.attribute_map = {
            'avro_source': 'avroSource',
            'bigquery_source': 'bigquerySource',
            'csv_source': 'csvSource',
            'disable_ingestion_analysis': 'disableIngestionAnalysis',
            'disable_online_serving': 'disableOnlineServing',
            'entity_id_field': 'entityIdField',
            'feature_specs': 'featureSpecs',
            'feature_time': 'featureTime',
            'feature_time_field': 'featureTimeField',
            'worker_count': 'workerCount'
        }

        self._avro_source = avro_source
        self._bigquery_source = bigquery_source
        self._csv_source = csv_source
        self._disable_ingestion_analysis = disable_ingestion_analysis
        self._disable_online_serving = disable_online_serving
        self._entity_id_field = entity_id_field
        self._feature_specs = feature_specs
        self._feature_time = feature_time
        self._feature_time_field = feature_time_field
        self._worker_count = worker_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avro_source(self):
        """Gets the avro_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.


        :return: The avro_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: GoogleCloudAiplatformV1beta1AvroSource
        """
        return self._avro_source

    @avro_source.setter
    def avro_source(self, avro_source):
        """Sets the avro_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.


        :param avro_source: The avro_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type avro_source: GoogleCloudAiplatformV1beta1AvroSource
        """

        self._avro_source = avro_source

    @property
    def bigquery_source(self):
        """Gets the bigquery_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.


        :return: The bigquery_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: GoogleCloudAiplatformV1beta1BigQuerySource
        """
        return self._bigquery_source

    @bigquery_source.setter
    def bigquery_source(self, bigquery_source):
        """Sets the bigquery_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.


        :param bigquery_source: The bigquery_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type bigquery_source: GoogleCloudAiplatformV1beta1BigQuerySource
        """

        self._bigquery_source = bigquery_source

    @property
    def csv_source(self):
        """Gets the csv_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.


        :return: The csv_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: GoogleCloudAiplatformV1beta1CsvSource
        """
        return self._csv_source

    @csv_source.setter
    def csv_source(self, csv_source):
        """Sets the csv_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.


        :param csv_source: The csv_source of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type csv_source: GoogleCloudAiplatformV1beta1CsvSource
        """

        self._csv_source = csv_source

    @property
    def disable_ingestion_analysis(self):
        """Gets the disable_ingestion_analysis of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        If true, API doesn't start ingestion analysis pipeline.

        :return: The disable_ingestion_analysis of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: bool
        """
        return self._disable_ingestion_analysis

    @disable_ingestion_analysis.setter
    def disable_ingestion_analysis(self, disable_ingestion_analysis):
        """Sets the disable_ingestion_analysis of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        If true, API doesn't start ingestion analysis pipeline.

        :param disable_ingestion_analysis: The disable_ingestion_analysis of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type disable_ingestion_analysis: bool
        """

        self._disable_ingestion_analysis = disable_ingestion_analysis

    @property
    def disable_online_serving(self):
        """Gets the disable_online_serving of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        If set, data will not be imported for online serving. This is typically used for backfilling, where Feature generation timestamps are not in the timestamp range needed for online serving.

        :return: The disable_online_serving of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: bool
        """
        return self._disable_online_serving

    @disable_online_serving.setter
    def disable_online_serving(self, disable_online_serving):
        """Sets the disable_online_serving of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        If set, data will not be imported for online serving. This is typically used for backfilling, where Feature generation timestamps are not in the timestamp range needed for online serving.

        :param disable_online_serving: The disable_online_serving of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type disable_online_serving: bool
        """

        self._disable_online_serving = disable_online_serving

    @property
    def entity_id_field(self):
        """Gets the entity_id_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.

        :return: The entity_id_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: str
        """
        return self._entity_id_field

    @entity_id_field.setter
    def entity_id_field(self, entity_id_field):
        """Sets the entity_id_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.

        :param entity_id_field: The entity_id_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type entity_id_field: str
        """

        self._entity_id_field = entity_id_field

    @property
    def feature_specs(self):
        """Gets the feature_specs of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Required. Specifications defining which Feature values to import from the entity. The request fails if no feature_specs are provided, and having multiple feature_specs for one Feature is not allowed.

        :return: The feature_specs of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: List[GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpec]
        """
        return self._feature_specs

    @feature_specs.setter
    def feature_specs(self, feature_specs):
        """Sets the feature_specs of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Required. Specifications defining which Feature values to import from the entity. The request fails if no feature_specs are provided, and having multiple feature_specs for one Feature is not allowed.

        :param feature_specs: The feature_specs of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type feature_specs: List[GoogleCloudAiplatformV1beta1ImportFeatureValuesRequestFeatureSpec]
        """

        self._feature_specs = feature_specs

    @property
    def feature_time(self):
        """Gets the feature_time of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Single Feature timestamp for all entities being imported. The timestamp must not have higher than millisecond precision.

        :return: The feature_time of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: str
        """
        return self._feature_time

    @feature_time.setter
    def feature_time(self, feature_time):
        """Sets the feature_time of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Single Feature timestamp for all entities being imported. The timestamp must not have higher than millisecond precision.

        :param feature_time: The feature_time of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type feature_time: str
        """

        self._feature_time = feature_time

    @property
    def feature_time_field(self):
        """Gets the feature_time_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Source column that holds the Feature timestamp for all Feature values in each entity.

        :return: The feature_time_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: str
        """
        return self._feature_time_field

    @feature_time_field.setter
    def feature_time_field(self, feature_time_field):
        """Sets the feature_time_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Source column that holds the Feature timestamp for all Feature values in each entity.

        :param feature_time_field: The feature_time_field of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type feature_time_field: str
        """

        self._feature_time_field = feature_time_field

    @property
    def worker_count(self):
        """Gets the worker_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Specifies the number of workers that are used to write data to the Featurestore. Consider the online serving capacity that you require to achieve the desired import throughput without interfering with online serving. The value must be positive, and less than or equal to 100. If not set, defaults to using 1 worker. The low count ensures minimal impact on online serving performance.

        :return: The worker_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :rtype: int
        """
        return self._worker_count

    @worker_count.setter
    def worker_count(self, worker_count):
        """Sets the worker_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.

        Specifies the number of workers that are used to write data to the Featurestore. Consider the online serving capacity that you require to achieve the desired import throughput without interfering with online serving. The value must be positive, and less than or equal to 100. If not set, defaults to using 1 worker. The low count ensures minimal impact on online serving performance.

        :param worker_count: The worker_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest.
        :type worker_count: int
        """

        self._worker_count = worker_count
