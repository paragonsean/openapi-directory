# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, candidates_token_count: int=None, prompt_token_count: int=None, total_token_count: int=None):
        """GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata - a model defined in OpenAPI

        :param candidates_token_count: The candidates_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        :param prompt_token_count: The prompt_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        :param total_token_count: The total_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        """
        self.openapi_types = {
            'candidates_token_count': int,
            'prompt_token_count': int,
            'total_token_count': int
        }

        self.attribute_map = {
            'candidates_token_count': 'candidatesTokenCount',
            'prompt_token_count': 'promptTokenCount',
            'total_token_count': 'totalTokenCount'
        }

        self._candidates_token_count = candidates_token_count
        self._prompt_token_count = prompt_token_count
        self._total_token_count = total_token_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def candidates_token_count(self):
        """Gets the candidates_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.

        Number of tokens in the response(s).

        :return: The candidates_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        :rtype: int
        """
        return self._candidates_token_count

    @candidates_token_count.setter
    def candidates_token_count(self, candidates_token_count):
        """Sets the candidates_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.

        Number of tokens in the response(s).

        :param candidates_token_count: The candidates_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        :type candidates_token_count: int
        """

        self._candidates_token_count = candidates_token_count

    @property
    def prompt_token_count(self):
        """Gets the prompt_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.

        Number of tokens in the request.

        :return: The prompt_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        :rtype: int
        """
        return self._prompt_token_count

    @prompt_token_count.setter
    def prompt_token_count(self, prompt_token_count):
        """Sets the prompt_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.

        Number of tokens in the request.

        :param prompt_token_count: The prompt_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        :type prompt_token_count: int
        """

        self._prompt_token_count = prompt_token_count

    @property
    def total_token_count(self):
        """Gets the total_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.


        :return: The total_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        :rtype: int
        """
        return self._total_token_count

    @total_token_count.setter
    def total_token_count(self, total_token_count):
        """Sets the total_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.


        :param total_token_count: The total_token_count of this GoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.
        :type total_token_count: int
        """

        self._total_token_count = total_token_count
