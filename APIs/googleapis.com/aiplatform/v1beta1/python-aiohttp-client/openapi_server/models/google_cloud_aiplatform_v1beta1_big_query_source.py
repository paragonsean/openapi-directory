# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1BigQuerySource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_uri: str=None):
        """GoogleCloudAiplatformV1beta1BigQuerySource - a model defined in OpenAPI

        :param input_uri: The input_uri of this GoogleCloudAiplatformV1beta1BigQuerySource.
        """
        self.openapi_types = {
            'input_uri': str
        }

        self.attribute_map = {
            'input_uri': 'inputUri'
        }

        self._input_uri = input_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1BigQuerySource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1BigQuerySource of this GoogleCloudAiplatformV1beta1BigQuerySource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_uri(self):
        """Gets the input_uri of this GoogleCloudAiplatformV1beta1BigQuerySource.

        Required. BigQuery URI to a table, up to 2000 characters long. Accepted forms: * BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`.

        :return: The input_uri of this GoogleCloudAiplatformV1beta1BigQuerySource.
        :rtype: str
        """
        return self._input_uri

    @input_uri.setter
    def input_uri(self, input_uri):
        """Sets the input_uri of this GoogleCloudAiplatformV1beta1BigQuerySource.

        Required. BigQuery URI to a table, up to 2000 characters long. Accepted forms: * BigQuery path. For example: `bq://projectId.bqDatasetId.bqTableId`.

        :param input_uri: The input_uri of this GoogleCloudAiplatformV1beta1BigQuerySource.
        :type input_uri: str
        """

        self._input_uri = input_uri
