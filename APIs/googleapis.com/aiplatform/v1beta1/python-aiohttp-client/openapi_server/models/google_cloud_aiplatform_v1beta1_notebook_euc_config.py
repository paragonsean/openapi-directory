# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1NotebookEucConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bypass_actas_check: bool=None, euc_disabled: bool=None):
        """GoogleCloudAiplatformV1beta1NotebookEucConfig - a model defined in OpenAPI

        :param bypass_actas_check: The bypass_actas_check of this GoogleCloudAiplatformV1beta1NotebookEucConfig.
        :param euc_disabled: The euc_disabled of this GoogleCloudAiplatformV1beta1NotebookEucConfig.
        """
        self.openapi_types = {
            'bypass_actas_check': bool,
            'euc_disabled': bool
        }

        self.attribute_map = {
            'bypass_actas_check': 'bypassActasCheck',
            'euc_disabled': 'eucDisabled'
        }

        self._bypass_actas_check = bypass_actas_check
        self._euc_disabled = euc_disabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1NotebookEucConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1NotebookEucConfig of this GoogleCloudAiplatformV1beta1NotebookEucConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bypass_actas_check(self):
        """Gets the bypass_actas_check of this GoogleCloudAiplatformV1beta1NotebookEucConfig.

        Output only. Whether ActAs check is bypassed for service account attached to the VM. If false, we need ActAs check for the default Compute Engine Service account. When a Runtime is created, a VM is allocated using Default Compute Engine Service Account. Any user requesting to use this Runtime requires Service Account User (ActAs) permission over this SA. If true, Runtime owner is using EUC and does not require the above permission as VM no longer use default Compute Engine SA, but a P4SA.

        :return: The bypass_actas_check of this GoogleCloudAiplatformV1beta1NotebookEucConfig.
        :rtype: bool
        """
        return self._bypass_actas_check

    @bypass_actas_check.setter
    def bypass_actas_check(self, bypass_actas_check):
        """Sets the bypass_actas_check of this GoogleCloudAiplatformV1beta1NotebookEucConfig.

        Output only. Whether ActAs check is bypassed for service account attached to the VM. If false, we need ActAs check for the default Compute Engine Service account. When a Runtime is created, a VM is allocated using Default Compute Engine Service Account. Any user requesting to use this Runtime requires Service Account User (ActAs) permission over this SA. If true, Runtime owner is using EUC and does not require the above permission as VM no longer use default Compute Engine SA, but a P4SA.

        :param bypass_actas_check: The bypass_actas_check of this GoogleCloudAiplatformV1beta1NotebookEucConfig.
        :type bypass_actas_check: bool
        """

        self._bypass_actas_check = bypass_actas_check

    @property
    def euc_disabled(self):
        """Gets the euc_disabled of this GoogleCloudAiplatformV1beta1NotebookEucConfig.

        Input only. Whether EUC is disabled in this NotebookRuntimeTemplate. In proto3, the default value of a boolean is false. In this way, by default EUC will be enabled for NotebookRuntimeTemplate.

        :return: The euc_disabled of this GoogleCloudAiplatformV1beta1NotebookEucConfig.
        :rtype: bool
        """
        return self._euc_disabled

    @euc_disabled.setter
    def euc_disabled(self, euc_disabled):
        """Sets the euc_disabled of this GoogleCloudAiplatformV1beta1NotebookEucConfig.

        Input only. Whether EUC is disabled in this NotebookRuntimeTemplate. In proto3, the default value of a boolean is false. In this way, by default EUC will be enabled for NotebookRuntimeTemplate.

        :param euc_disabled: The euc_disabled of this GoogleCloudAiplatformV1beta1NotebookEucConfig.
        :type euc_disabled: bool
        """

        self._euc_disabled = euc_disabled
