# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_examples_restrictions_namespace import GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace
from openapi_server import util


class GoogleCloudAiplatformV1beta1ExamplesOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crowding_count: int=None, data_format: str=None, neighbor_count: int=None, restrictions: List[GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace]=None, return_embeddings: bool=None):
        """GoogleCloudAiplatformV1beta1ExamplesOverride - a model defined in OpenAPI

        :param crowding_count: The crowding_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :param data_format: The data_format of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :param neighbor_count: The neighbor_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :param restrictions: The restrictions of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :param return_embeddings: The return_embeddings of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        """
        self.openapi_types = {
            'crowding_count': int,
            'data_format': str,
            'neighbor_count': int,
            'restrictions': List[GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace],
            'return_embeddings': bool
        }

        self.attribute_map = {
            'crowding_count': 'crowdingCount',
            'data_format': 'dataFormat',
            'neighbor_count': 'neighborCount',
            'restrictions': 'restrictions',
            'return_embeddings': 'returnEmbeddings'
        }

        self._crowding_count = crowding_count
        self._data_format = data_format
        self._neighbor_count = neighbor_count
        self._restrictions = restrictions
        self._return_embeddings = return_embeddings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ExamplesOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ExamplesOverride of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crowding_count(self):
        """Gets the crowding_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        The number of neighbors to return that have the same crowding tag.

        :return: The crowding_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :rtype: int
        """
        return self._crowding_count

    @crowding_count.setter
    def crowding_count(self, crowding_count):
        """Sets the crowding_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        The number of neighbors to return that have the same crowding tag.

        :param crowding_count: The crowding_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :type crowding_count: int
        """

        self._crowding_count = crowding_count

    @property
    def data_format(self):
        """Gets the data_format of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        The format of the data being provided with each call.

        :return: The data_format of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :rtype: str
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        The format of the data being provided with each call.

        :param data_format: The data_format of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :type data_format: str
        """
        allowed_values = ["DATA_FORMAT_UNSPECIFIED", "INSTANCES", "EMBEDDINGS"]  # noqa: E501
        if data_format not in allowed_values:
            raise ValueError(
                "Invalid value for `data_format` ({0}), must be one of {1}"
                .format(data_format, allowed_values)
            )

        self._data_format = data_format

    @property
    def neighbor_count(self):
        """Gets the neighbor_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        The number of neighbors to return.

        :return: The neighbor_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :rtype: int
        """
        return self._neighbor_count

    @neighbor_count.setter
    def neighbor_count(self, neighbor_count):
        """Sets the neighbor_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        The number of neighbors to return.

        :param neighbor_count: The neighbor_count of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :type neighbor_count: int
        """

        self._neighbor_count = neighbor_count

    @property
    def restrictions(self):
        """Gets the restrictions of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        Restrict the resulting nearest neighbors to respect these constraints.

        :return: The restrictions of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :rtype: List[GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace]
        """
        return self._restrictions

    @restrictions.setter
    def restrictions(self, restrictions):
        """Sets the restrictions of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        Restrict the resulting nearest neighbors to respect these constraints.

        :param restrictions: The restrictions of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :type restrictions: List[GoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace]
        """

        self._restrictions = restrictions

    @property
    def return_embeddings(self):
        """Gets the return_embeddings of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        If true, return the embeddings instead of neighbors.

        :return: The return_embeddings of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :rtype: bool
        """
        return self._return_embeddings

    @return_embeddings.setter
    def return_embeddings(self, return_embeddings):
        """Sets the return_embeddings of this GoogleCloudAiplatformV1beta1ExamplesOverride.

        If true, return the embeddings instead of neighbors.

        :param return_embeddings: The return_embeddings of this GoogleCloudAiplatformV1beta1ExamplesOverride.
        :type return_embeddings: bool
        """

        self._return_embeddings = return_embeddings
