# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_encryption_spec import GoogleCloudAiplatformV1beta1EncryptionSpec
from openapi_server import util


class GoogleCloudAiplatformV1beta1CopyModelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec=None, model_id: str=None, parent_model: str=None, source_model: str=None):
        """GoogleCloudAiplatformV1beta1CopyModelRequest - a model defined in OpenAPI

        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :param model_id: The model_id of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :param parent_model: The parent_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :param source_model: The source_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        """
        self.openapi_types = {
            'encryption_spec': GoogleCloudAiplatformV1beta1EncryptionSpec,
            'model_id': str,
            'parent_model': str,
            'source_model': str
        }

        self.attribute_map = {
            'encryption_spec': 'encryptionSpec',
            'model_id': 'modelId',
            'parent_model': 'parentModel',
            'source_model': 'sourceModel'
        }

        self._encryption_spec = encryption_spec
        self._model_id = model_id
        self._parent_model = parent_model
        self._source_model = source_model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1CopyModelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1CopyModelRequest of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1beta1CopyModelRequest.


        :return: The encryption_spec of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :rtype: GoogleCloudAiplatformV1beta1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1beta1CopyModelRequest.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :type encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def model_id(self):
        """Gets the model_id of this GoogleCloudAiplatformV1beta1CopyModelRequest.

        Optional. Copy source_model into a new Model with this ID. The ID will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.

        :return: The model_id of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this GoogleCloudAiplatformV1beta1CopyModelRequest.

        Optional. Copy source_model into a new Model with this ID. The ID will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.

        :param model_id: The model_id of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :type model_id: str
        """

        self._model_id = model_id

    @property
    def parent_model(self):
        """Gets the parent_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.

        Optional. Specify this field to copy source_model into this existing Model as a new version. Format: `projects/{project}/locations/{location}/models/{model}`

        :return: The parent_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :rtype: str
        """
        return self._parent_model

    @parent_model.setter
    def parent_model(self, parent_model):
        """Sets the parent_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.

        Optional. Specify this field to copy source_model into this existing Model as a new version. Format: `projects/{project}/locations/{location}/models/{model}`

        :param parent_model: The parent_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :type parent_model: str
        """

        self._parent_model = parent_model

    @property
    def source_model(self):
        """Gets the source_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.

        Required. The resource name of the Model to copy. That Model must be in the same Project. Format: `projects/{project}/locations/{location}/models/{model}`

        :return: The source_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :rtype: str
        """
        return self._source_model

    @source_model.setter
    def source_model(self, source_model):
        """Sets the source_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.

        Required. The resource name of the Model to copy. That Model must be in the same Project. Format: `projects/{project}/locations/{location}/models/{model}`

        :param source_model: The source_model of this GoogleCloudAiplatformV1beta1CopyModelRequest.
        :type source_model: str
        """

        self._source_model = source_model
