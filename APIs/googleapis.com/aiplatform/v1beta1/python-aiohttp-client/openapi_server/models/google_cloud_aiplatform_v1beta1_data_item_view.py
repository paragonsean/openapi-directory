# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_annotation import GoogleCloudAiplatformV1beta1Annotation
from openapi_server.models.google_cloud_aiplatform_v1beta1_data_item import GoogleCloudAiplatformV1beta1DataItem
from openapi_server import util


class GoogleCloudAiplatformV1beta1DataItemView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: List[GoogleCloudAiplatformV1beta1Annotation]=None, data_item: GoogleCloudAiplatformV1beta1DataItem=None, has_truncated_annotations: bool=None):
        """GoogleCloudAiplatformV1beta1DataItemView - a model defined in OpenAPI

        :param annotations: The annotations of this GoogleCloudAiplatformV1beta1DataItemView.
        :param data_item: The data_item of this GoogleCloudAiplatformV1beta1DataItemView.
        :param has_truncated_annotations: The has_truncated_annotations of this GoogleCloudAiplatformV1beta1DataItemView.
        """
        self.openapi_types = {
            'annotations': List[GoogleCloudAiplatformV1beta1Annotation],
            'data_item': GoogleCloudAiplatformV1beta1DataItem,
            'has_truncated_annotations': bool
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'data_item': 'dataItem',
            'has_truncated_annotations': 'hasTruncatedAnnotations'
        }

        self._annotations = annotations
        self._data_item = data_item
        self._has_truncated_annotations = has_truncated_annotations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1DataItemView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1DataItemView of this GoogleCloudAiplatformV1beta1DataItemView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this GoogleCloudAiplatformV1beta1DataItemView.

        The Annotations on the DataItem. If too many Annotations should be returned for the DataItem, this field will be truncated per annotations_limit in request. If it was, then the has_truncated_annotations will be set to true.

        :return: The annotations of this GoogleCloudAiplatformV1beta1DataItemView.
        :rtype: List[GoogleCloudAiplatformV1beta1Annotation]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this GoogleCloudAiplatformV1beta1DataItemView.

        The Annotations on the DataItem. If too many Annotations should be returned for the DataItem, this field will be truncated per annotations_limit in request. If it was, then the has_truncated_annotations will be set to true.

        :param annotations: The annotations of this GoogleCloudAiplatformV1beta1DataItemView.
        :type annotations: List[GoogleCloudAiplatformV1beta1Annotation]
        """

        self._annotations = annotations

    @property
    def data_item(self):
        """Gets the data_item of this GoogleCloudAiplatformV1beta1DataItemView.


        :return: The data_item of this GoogleCloudAiplatformV1beta1DataItemView.
        :rtype: GoogleCloudAiplatformV1beta1DataItem
        """
        return self._data_item

    @data_item.setter
    def data_item(self, data_item):
        """Sets the data_item of this GoogleCloudAiplatformV1beta1DataItemView.


        :param data_item: The data_item of this GoogleCloudAiplatformV1beta1DataItemView.
        :type data_item: GoogleCloudAiplatformV1beta1DataItem
        """

        self._data_item = data_item

    @property
    def has_truncated_annotations(self):
        """Gets the has_truncated_annotations of this GoogleCloudAiplatformV1beta1DataItemView.

        True if and only if the Annotations field has been truncated. It happens if more Annotations for this DataItem met the request's annotation_filter than are allowed to be returned by annotations_limit. Note that if Annotations field is not being returned due to field mask, then this field will not be set to true no matter how many Annotations are there.

        :return: The has_truncated_annotations of this GoogleCloudAiplatformV1beta1DataItemView.
        :rtype: bool
        """
        return self._has_truncated_annotations

    @has_truncated_annotations.setter
    def has_truncated_annotations(self, has_truncated_annotations):
        """Sets the has_truncated_annotations of this GoogleCloudAiplatformV1beta1DataItemView.

        True if and only if the Annotations field has been truncated. It happens if more Annotations for this DataItem met the request's annotation_filter than are allowed to be returned by annotations_limit. Note that if Annotations field is not being returned due to field mask, then this field will not be set to true no matter how many Annotations are there.

        :param has_truncated_annotations: The has_truncated_annotations of this GoogleCloudAiplatformV1beta1DataItemView.
        :type has_truncated_annotations: bool
        """

        self._has_truncated_annotations = has_truncated_annotations
