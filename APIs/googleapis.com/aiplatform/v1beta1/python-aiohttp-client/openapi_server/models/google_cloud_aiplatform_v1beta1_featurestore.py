# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_encryption_spec import GoogleCloudAiplatformV1beta1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_featurestore_online_serving_config import GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig
from openapi_server import util


class GoogleCloudAiplatformV1beta1Featurestore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec=None, etag: str=None, labels: Dict[str, str]=None, name: str=None, online_serving_config: GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig=None, online_storage_ttl_days: int=None, state: str=None, update_time: str=None):
        """GoogleCloudAiplatformV1beta1Featurestore - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1Featurestore.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1Featurestore.
        :param etag: The etag of this GoogleCloudAiplatformV1beta1Featurestore.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1Featurestore.
        :param name: The name of this GoogleCloudAiplatformV1beta1Featurestore.
        :param online_serving_config: The online_serving_config of this GoogleCloudAiplatformV1beta1Featurestore.
        :param online_storage_ttl_days: The online_storage_ttl_days of this GoogleCloudAiplatformV1beta1Featurestore.
        :param state: The state of this GoogleCloudAiplatformV1beta1Featurestore.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1Featurestore.
        """
        self.openapi_types = {
            'create_time': str,
            'encryption_spec': GoogleCloudAiplatformV1beta1EncryptionSpec,
            'etag': str,
            'labels': Dict[str, str],
            'name': str,
            'online_serving_config': GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig,
            'online_storage_ttl_days': int,
            'state': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'encryption_spec': 'encryptionSpec',
            'etag': 'etag',
            'labels': 'labels',
            'name': 'name',
            'online_serving_config': 'onlineServingConfig',
            'online_storage_ttl_days': 'onlineStorageTtlDays',
            'state': 'state',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._encryption_spec = encryption_spec
        self._etag = etag
        self._labels = labels
        self._name = name
        self._online_serving_config = online_serving_config
        self._online_storage_ttl_days = online_storage_ttl_days
        self._state = state
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1Featurestore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1Featurestore of this GoogleCloudAiplatformV1beta1Featurestore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1Featurestore.

        Output only. Timestamp when this Featurestore was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1Featurestore.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1Featurestore.

        Output only. Timestamp when this Featurestore was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1Featurestore.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1beta1Featurestore.


        :return: The encryption_spec of this GoogleCloudAiplatformV1beta1Featurestore.
        :rtype: GoogleCloudAiplatformV1beta1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1beta1Featurestore.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1Featurestore.
        :type encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1beta1Featurestore.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1beta1Featurestore.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1beta1Featurestore.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1beta1Featurestore.
        :type etag: str
        """

        self._etag = etag

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1Featurestore.

        Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :return: The labels of this GoogleCloudAiplatformV1beta1Featurestore.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1Featurestore.

        Optional. The labels with user-defined metadata to organize your Featurestore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Featurestore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1Featurestore.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1Featurestore.

        Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`

        :return: The name of this GoogleCloudAiplatformV1beta1Featurestore.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1Featurestore.

        Output only. Name of the Featurestore. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`

        :param name: The name of this GoogleCloudAiplatformV1beta1Featurestore.
        :type name: str
        """

        self._name = name

    @property
    def online_serving_config(self):
        """Gets the online_serving_config of this GoogleCloudAiplatformV1beta1Featurestore.


        :return: The online_serving_config of this GoogleCloudAiplatformV1beta1Featurestore.
        :rtype: GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig
        """
        return self._online_serving_config

    @online_serving_config.setter
    def online_serving_config(self, online_serving_config):
        """Sets the online_serving_config of this GoogleCloudAiplatformV1beta1Featurestore.


        :param online_serving_config: The online_serving_config of this GoogleCloudAiplatformV1beta1Featurestore.
        :type online_serving_config: GoogleCloudAiplatformV1beta1FeaturestoreOnlineServingConfig
        """

        self._online_serving_config = online_serving_config

    @property
    def online_storage_ttl_days(self):
        """Gets the online_storage_ttl_days of this GoogleCloudAiplatformV1beta1Featurestore.

        Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days

        :return: The online_storage_ttl_days of this GoogleCloudAiplatformV1beta1Featurestore.
        :rtype: int
        """
        return self._online_storage_ttl_days

    @online_storage_ttl_days.setter
    def online_storage_ttl_days(self, online_storage_ttl_days):
        """Sets the online_storage_ttl_days of this GoogleCloudAiplatformV1beta1Featurestore.

        Optional. TTL in days for feature values that will be stored in online serving storage. The Feature Store online storage periodically removes obsolete feature values older than `online_storage_ttl_days` since the feature generation time. Note that `online_storage_ttl_days` should be less than or equal to `offline_storage_ttl_days` for each EntityType under a featurestore. If not set, default to 4000 days

        :param online_storage_ttl_days: The online_storage_ttl_days of this GoogleCloudAiplatformV1beta1Featurestore.
        :type online_storage_ttl_days: int
        """

        self._online_storage_ttl_days = online_storage_ttl_days

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1beta1Featurestore.

        Output only. State of the featurestore.

        :return: The state of this GoogleCloudAiplatformV1beta1Featurestore.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1beta1Featurestore.

        Output only. State of the featurestore.

        :param state: The state of this GoogleCloudAiplatformV1beta1Featurestore.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "STABLE", "UPDATING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1Featurestore.

        Output only. Timestamp when this Featurestore was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1beta1Featurestore.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1Featurestore.

        Output only. Timestamp when this Featurestore was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1Featurestore.
        :type update_time: str
        """

        self._update_time = update_time
