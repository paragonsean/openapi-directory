# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1MetadataSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, name: str=None, _schema: str=None, schema_type: str=None, schema_version: str=None):
        """GoogleCloudAiplatformV1beta1MetadataSchema - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :param description: The description of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :param name: The name of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :param _schema: The _schema of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :param schema_type: The schema_type of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :param schema_version: The schema_version of this GoogleCloudAiplatformV1beta1MetadataSchema.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'name': str,
            '_schema': str,
            'schema_type': str,
            'schema_version': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'name': 'name',
            '_schema': 'schema',
            'schema_type': 'schemaType',
            'schema_version': 'schemaVersion'
        }

        self._create_time = create_time
        self._description = description
        self._name = name
        self.__schema = _schema
        self._schema_type = schema_type
        self._schema_version = schema_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1MetadataSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1MetadataSchema of this GoogleCloudAiplatformV1beta1MetadataSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1MetadataSchema.

        Output only. Timestamp when this MetadataSchema was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1MetadataSchema.

        Output only. Timestamp when this MetadataSchema was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1beta1MetadataSchema.

        Description of the Metadata Schema

        :return: The description of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1beta1MetadataSchema.

        Description of the Metadata Schema

        :param description: The description of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1MetadataSchema.

        Output only. The resource name of the MetadataSchema.

        :return: The name of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1MetadataSchema.

        Output only. The resource name of the MetadataSchema.

        :param name: The name of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :type name: str
        """

        self._name = name

    @property
    def _schema(self):
        """Gets the _schema of this GoogleCloudAiplatformV1beta1MetadataSchema.

        Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)

        :return: The _schema of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :rtype: str
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this GoogleCloudAiplatformV1beta1MetadataSchema.

        Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)

        :param _schema: The _schema of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :type _schema: str
        """

        self.__schema = _schema

    @property
    def schema_type(self):
        """Gets the schema_type of this GoogleCloudAiplatformV1beta1MetadataSchema.

        The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema.

        :return: The schema_type of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :rtype: str
        """
        return self._schema_type

    @schema_type.setter
    def schema_type(self, schema_type):
        """Sets the schema_type of this GoogleCloudAiplatformV1beta1MetadataSchema.

        The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema.

        :param schema_type: The schema_type of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :type schema_type: str
        """
        allowed_values = ["METADATA_SCHEMA_TYPE_UNSPECIFIED", "ARTIFACT_TYPE", "EXECUTION_TYPE", "CONTEXT_TYPE"]  # noqa: E501
        if schema_type not in allowed_values:
            raise ValueError(
                "Invalid value for `schema_type` ({0}), must be one of {1}"
                .format(schema_type, allowed_values)
            )

        self._schema_type = schema_type

    @property
    def schema_version(self):
        """Gets the schema_version of this GoogleCloudAiplatformV1beta1MetadataSchema.

        The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.

        :return: The schema_version of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :rtype: str
        """
        return self._schema_version

    @schema_version.setter
    def schema_version(self, schema_version):
        """Sets the schema_version of this GoogleCloudAiplatformV1beta1MetadataSchema.

        The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.

        :param schema_version: The schema_version of this GoogleCloudAiplatformV1beta1MetadataSchema.
        :type schema_version: str
        """

        self._schema_version = schema_version
