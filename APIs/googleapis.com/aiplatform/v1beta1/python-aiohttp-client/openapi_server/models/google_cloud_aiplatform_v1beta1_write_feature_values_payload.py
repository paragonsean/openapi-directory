# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_feature_value import GoogleCloudAiplatformV1beta1FeatureValue
from openapi_server import util


class GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, feature_values: Dict[str, GoogleCloudAiplatformV1beta1FeatureValue]=None):
        """GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload - a model defined in OpenAPI

        :param entity_id: The entity_id of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.
        :param feature_values: The feature_values of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.
        """
        self.openapi_types = {
            'entity_id': str,
            'feature_values': Dict[str, GoogleCloudAiplatformV1beta1FeatureValue]
        }

        self.attribute_map = {
            'entity_id': 'entityId',
            'feature_values': 'featureValues'
        }

        self._entity_id = entity_id
        self._feature_values = feature_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.

        Required. The ID of the entity.

        :return: The entity_id of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.

        Required. The ID of the entity.

        :param entity_id: The entity_id of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def feature_values(self):
        """Gets the feature_values of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.

        Required. Feature values to be written, mapping from Feature ID to value. Up to 100,000 `feature_values` entries may be written across all payloads. The feature generation time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.

        :return: The feature_values of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.
        :rtype: Dict[str, GoogleCloudAiplatformV1beta1FeatureValue]
        """
        return self._feature_values

    @feature_values.setter
    def feature_values(self, feature_values):
        """Sets the feature_values of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.

        Required. Feature values to be written, mapping from Feature ID to value. Up to 100,000 `feature_values` entries may be written across all payloads. The feature generation time, aligned by days, must be no older than five years (1825 days) and no later than one year (366 days) in the future.

        :param feature_values: The feature_values of this GoogleCloudAiplatformV1beta1WriteFeatureValuesPayload.
        :type feature_values: Dict[str, GoogleCloudAiplatformV1beta1FeatureValue]
        """

        self._feature_values = feature_values
