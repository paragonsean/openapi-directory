# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_encryption_spec import GoogleCloudAiplatformV1beta1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_resource_pool import GoogleCloudAiplatformV1beta1ResourcePool
from openapi_server.models.google_cloud_aiplatform_v1beta1_resource_runtime import GoogleCloudAiplatformV1beta1ResourceRuntime
from openapi_server.models.google_cloud_aiplatform_v1beta1_resource_runtime_spec import GoogleCloudAiplatformV1beta1ResourceRuntimeSpec
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudAiplatformV1beta1PersistentResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec=None, error: GoogleRpcStatus=None, labels: Dict[str, str]=None, name: str=None, network: str=None, reserved_ip_ranges: List[str]=None, resource_pools: List[GoogleCloudAiplatformV1beta1ResourcePool]=None, resource_runtime: GoogleCloudAiplatformV1beta1ResourceRuntime=None, resource_runtime_spec: GoogleCloudAiplatformV1beta1ResourceRuntimeSpec=None, start_time: str=None, state: str=None, update_time: str=None):
        """GoogleCloudAiplatformV1beta1PersistentResource - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param error: The error of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param name: The name of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param network: The network of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param reserved_ip_ranges: The reserved_ip_ranges of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param resource_pools: The resource_pools of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param resource_runtime: The resource_runtime of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param resource_runtime_spec: The resource_runtime_spec of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param start_time: The start_time of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param state: The state of this GoogleCloudAiplatformV1beta1PersistentResource.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1PersistentResource.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'encryption_spec': GoogleCloudAiplatformV1beta1EncryptionSpec,
            'error': GoogleRpcStatus,
            'labels': Dict[str, str],
            'name': str,
            'network': str,
            'reserved_ip_ranges': List[str],
            'resource_pools': List[GoogleCloudAiplatformV1beta1ResourcePool],
            'resource_runtime': GoogleCloudAiplatformV1beta1ResourceRuntime,
            'resource_runtime_spec': GoogleCloudAiplatformV1beta1ResourceRuntimeSpec,
            'start_time': str,
            'state': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'encryption_spec': 'encryptionSpec',
            'error': 'error',
            'labels': 'labels',
            'name': 'name',
            'network': 'network',
            'reserved_ip_ranges': 'reservedIpRanges',
            'resource_pools': 'resourcePools',
            'resource_runtime': 'resourceRuntime',
            'resource_runtime_spec': 'resourceRuntimeSpec',
            'start_time': 'startTime',
            'state': 'state',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._encryption_spec = encryption_spec
        self._error = error
        self._labels = labels
        self._name = name
        self._network = network
        self._reserved_ip_ranges = reserved_ip_ranges
        self._resource_pools = resource_pools
        self._resource_runtime = resource_runtime
        self._resource_runtime_spec = resource_runtime_spec
        self._start_time = start_time
        self._state = state
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1PersistentResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1PersistentResource of this GoogleCloudAiplatformV1beta1PersistentResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1PersistentResource.

        Output only. Time when the PersistentResource was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1PersistentResource.

        Output only. Time when the PersistentResource was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1PersistentResource.

        Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :return: The display_name of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1PersistentResource.

        Optional. The display name of the PersistentResource. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1beta1PersistentResource.


        :return: The encryption_spec of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: GoogleCloudAiplatformV1beta1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1beta1PersistentResource.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def error(self):
        """Gets the error of this GoogleCloudAiplatformV1beta1PersistentResource.


        :return: The error of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: GoogleRpcStatus
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GoogleCloudAiplatformV1beta1PersistentResource.


        :param error: The error of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type error: GoogleRpcStatus
        """

        self._error = error

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1PersistentResource.

        Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :return: The labels of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1PersistentResource.

        Optional. The labels with user-defined metadata to organize PersistentResource. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1PersistentResource.

        Immutable. Resource name of a PersistentResource.

        :return: The name of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1PersistentResource.

        Immutable. Resource name of a PersistentResource.

        :param name: The name of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type name: str
        """

        self._name = name

    @property
    def network(self):
        """Gets the network of this GoogleCloudAiplatformV1beta1PersistentResource.

        Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network.

        :return: The network of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GoogleCloudAiplatformV1beta1PersistentResource.

        Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to peered with Vertex AI to host the persistent resources. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the resources aren't peered with any network.

        :param network: The network of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type network: str
        """

        self._network = network

    @property
    def reserved_ip_ranges(self):
        """Gets the reserved_ip_ranges of this GoogleCloudAiplatformV1beta1PersistentResource.

        Optional. A list of names for the reserved IP ranges under the VPC network that can be used for this persistent resource. If set, we will deploy the persistent resource within the provided IP ranges. Otherwise, the persistent resource is deployed to any IP ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].

        :return: The reserved_ip_ranges of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: List[str]
        """
        return self._reserved_ip_ranges

    @reserved_ip_ranges.setter
    def reserved_ip_ranges(self, reserved_ip_ranges):
        """Sets the reserved_ip_ranges of this GoogleCloudAiplatformV1beta1PersistentResource.

        Optional. A list of names for the reserved IP ranges under the VPC network that can be used for this persistent resource. If set, we will deploy the persistent resource within the provided IP ranges. Otherwise, the persistent resource is deployed to any IP ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].

        :param reserved_ip_ranges: The reserved_ip_ranges of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type reserved_ip_ranges: List[str]
        """

        self._reserved_ip_ranges = reserved_ip_ranges

    @property
    def resource_pools(self):
        """Gets the resource_pools of this GoogleCloudAiplatformV1beta1PersistentResource.

        Required. The spec of the pools of different resources.

        :return: The resource_pools of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: List[GoogleCloudAiplatformV1beta1ResourcePool]
        """
        return self._resource_pools

    @resource_pools.setter
    def resource_pools(self, resource_pools):
        """Sets the resource_pools of this GoogleCloudAiplatformV1beta1PersistentResource.

        Required. The spec of the pools of different resources.

        :param resource_pools: The resource_pools of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type resource_pools: List[GoogleCloudAiplatformV1beta1ResourcePool]
        """

        self._resource_pools = resource_pools

    @property
    def resource_runtime(self):
        """Gets the resource_runtime of this GoogleCloudAiplatformV1beta1PersistentResource.


        :return: The resource_runtime of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: GoogleCloudAiplatformV1beta1ResourceRuntime
        """
        return self._resource_runtime

    @resource_runtime.setter
    def resource_runtime(self, resource_runtime):
        """Sets the resource_runtime of this GoogleCloudAiplatformV1beta1PersistentResource.


        :param resource_runtime: The resource_runtime of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type resource_runtime: GoogleCloudAiplatformV1beta1ResourceRuntime
        """

        self._resource_runtime = resource_runtime

    @property
    def resource_runtime_spec(self):
        """Gets the resource_runtime_spec of this GoogleCloudAiplatformV1beta1PersistentResource.


        :return: The resource_runtime_spec of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: GoogleCloudAiplatformV1beta1ResourceRuntimeSpec
        """
        return self._resource_runtime_spec

    @resource_runtime_spec.setter
    def resource_runtime_spec(self, resource_runtime_spec):
        """Sets the resource_runtime_spec of this GoogleCloudAiplatformV1beta1PersistentResource.


        :param resource_runtime_spec: The resource_runtime_spec of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type resource_runtime_spec: GoogleCloudAiplatformV1beta1ResourceRuntimeSpec
        """

        self._resource_runtime_spec = resource_runtime_spec

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudAiplatformV1beta1PersistentResource.

        Output only. Time when the PersistentResource for the first time entered the `RUNNING` state.

        :return: The start_time of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudAiplatformV1beta1PersistentResource.

        Output only. Time when the PersistentResource for the first time entered the `RUNNING` state.

        :param start_time: The start_time of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1beta1PersistentResource.

        Output only. The detailed state of a Study.

        :return: The state of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1beta1PersistentResource.

        Output only. The detailed state of a Study.

        :param state: The state of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "PROVISIONING", "RUNNING", "STOPPING", "ERROR"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1PersistentResource.

        Output only. Time when the PersistentResource was most recently updated.

        :return: The update_time of this GoogleCloudAiplatformV1beta1PersistentResource.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1PersistentResource.

        Output only. Time when the PersistentResource was most recently updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1PersistentResource.
        :type update_time: str
        """

        self._update_time = update_time
