# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_encryption_spec import GoogleCloudAiplatformV1beta1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_input_data_config import GoogleCloudAiplatformV1beta1InputDataConfig
from openapi_server.models.google_cloud_aiplatform_v1beta1_model import GoogleCloudAiplatformV1beta1Model
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudAiplatformV1beta1TrainingPipeline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec=None, end_time: str=None, error: GoogleRpcStatus=None, input_data_config: GoogleCloudAiplatformV1beta1InputDataConfig=None, labels: Dict[str, str]=None, model_id: str=None, model_to_upload: GoogleCloudAiplatformV1beta1Model=None, name: str=None, parent_model: str=None, start_time: str=None, state: str=None, training_task_definition: str=None, training_task_inputs: object=None, training_task_metadata: object=None, update_time: str=None):
        """GoogleCloudAiplatformV1beta1TrainingPipeline - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param end_time: The end_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param error: The error of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param input_data_config: The input_data_config of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param model_id: The model_id of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param model_to_upload: The model_to_upload of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param name: The name of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param parent_model: The parent_model of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param start_time: The start_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param state: The state of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param training_task_definition: The training_task_definition of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param training_task_inputs: The training_task_inputs of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param training_task_metadata: The training_task_metadata of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'encryption_spec': GoogleCloudAiplatformV1beta1EncryptionSpec,
            'end_time': str,
            'error': GoogleRpcStatus,
            'input_data_config': GoogleCloudAiplatformV1beta1InputDataConfig,
            'labels': Dict[str, str],
            'model_id': str,
            'model_to_upload': GoogleCloudAiplatformV1beta1Model,
            'name': str,
            'parent_model': str,
            'start_time': str,
            'state': str,
            'training_task_definition': str,
            'training_task_inputs': object,
            'training_task_metadata': object,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'encryption_spec': 'encryptionSpec',
            'end_time': 'endTime',
            'error': 'error',
            'input_data_config': 'inputDataConfig',
            'labels': 'labels',
            'model_id': 'modelId',
            'model_to_upload': 'modelToUpload',
            'name': 'name',
            'parent_model': 'parentModel',
            'start_time': 'startTime',
            'state': 'state',
            'training_task_definition': 'trainingTaskDefinition',
            'training_task_inputs': 'trainingTaskInputs',
            'training_task_metadata': 'trainingTaskMetadata',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._encryption_spec = encryption_spec
        self._end_time = end_time
        self._error = error
        self._input_data_config = input_data_config
        self._labels = labels
        self._model_id = model_id
        self._model_to_upload = model_to_upload
        self._name = name
        self._parent_model = parent_model
        self._start_time = start_time
        self._state = state
        self._training_task_definition = training_task_definition
        self._training_task_inputs = training_task_inputs
        self._training_task_metadata = training_task_metadata
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1TrainingPipeline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1TrainingPipeline of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Time when the TrainingPipeline was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Time when the TrainingPipeline was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Required. The user-defined name of this TrainingPipeline.

        :return: The display_name of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Required. The user-defined name of this TrainingPipeline.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1beta1TrainingPipeline.


        :return: The encryption_spec of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: GoogleCloudAiplatformV1beta1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1beta1TrainingPipeline.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.

        :return: The end_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Time when the TrainingPipeline entered any of the following states: `PIPELINE_STATE_SUCCEEDED`, `PIPELINE_STATE_FAILED`, `PIPELINE_STATE_CANCELLED`.

        :param end_time: The end_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def error(self):
        """Gets the error of this GoogleCloudAiplatformV1beta1TrainingPipeline.


        :return: The error of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: GoogleRpcStatus
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GoogleCloudAiplatformV1beta1TrainingPipeline.


        :param error: The error of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type error: GoogleRpcStatus
        """

        self._error = error

    @property
    def input_data_config(self):
        """Gets the input_data_config of this GoogleCloudAiplatformV1beta1TrainingPipeline.


        :return: The input_data_config of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: GoogleCloudAiplatformV1beta1InputDataConfig
        """
        return self._input_data_config

    @input_data_config.setter
    def input_data_config(self, input_data_config):
        """Sets the input_data_config of this GoogleCloudAiplatformV1beta1TrainingPipeline.


        :param input_data_config: The input_data_config of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type input_data_config: GoogleCloudAiplatformV1beta1InputDataConfig
        """

        self._input_data_config = input_data_config

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :return: The labels of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def model_id(self):
        """Gets the model_id of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.

        :return: The model_id of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.

        :param model_id: The model_id of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type model_id: str
        """

        self._model_id = model_id

    @property
    def model_to_upload(self):
        """Gets the model_to_upload of this GoogleCloudAiplatformV1beta1TrainingPipeline.


        :return: The model_to_upload of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: GoogleCloudAiplatformV1beta1Model
        """
        return self._model_to_upload

    @model_to_upload.setter
    def model_to_upload(self, model_to_upload):
        """Sets the model_to_upload of this GoogleCloudAiplatformV1beta1TrainingPipeline.


        :param model_to_upload: The model_to_upload of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type model_to_upload: GoogleCloudAiplatformV1beta1Model
        """

        self._model_to_upload = model_to_upload

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Resource name of the TrainingPipeline.

        :return: The name of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Resource name of the TrainingPipeline.

        :param name: The name of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type name: str
        """

        self._name = name

    @property
    def parent_model(self):
        """Gets the parent_model of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model, instead, it will become a new version of this `parent_model`.

        :return: The parent_model of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._parent_model

    @parent_model.setter
    def parent_model(self, parent_model):
        """Sets the parent_model of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Optional. When specify this field, the `model_to_upload` will not be uploaded as a new model, instead, it will become a new version of this `parent_model`.

        :param parent_model: The parent_model of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type parent_model: str
        """

        self._parent_model = parent_model

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state.

        :return: The start_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Time when the TrainingPipeline for the first time entered the `PIPELINE_STATE_RUNNING` state.

        :param start_time: The start_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. The detailed state of the pipeline.

        :return: The state of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. The detailed state of the pipeline.

        :param state: The state of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type state: str
        """
        allowed_values = ["PIPELINE_STATE_UNSPECIFIED", "PIPELINE_STATE_QUEUED", "PIPELINE_STATE_PENDING", "PIPELINE_STATE_RUNNING", "PIPELINE_STATE_SUCCEEDED", "PIPELINE_STATE_FAILED", "PIPELINE_STATE_CANCELLING", "PIPELINE_STATE_CANCELLED", "PIPELINE_STATE_PAUSED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def training_task_definition(self):
        """Gets the training_task_definition of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.

        :return: The training_task_definition of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._training_task_definition

    @training_task_definition.setter
    def training_task_definition(self, training_task_definition):
        """Sets the training_task_definition of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.

        :param training_task_definition: The training_task_definition of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type training_task_definition: str
        """

        self._training_task_definition = training_task_definition

    @property
    def training_task_inputs(self):
        """Gets the training_task_inputs of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Required. The training task's parameter(s), as specified in the training_task_definition's `inputs`.

        :return: The training_task_inputs of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: object
        """
        return self._training_task_inputs

    @training_task_inputs.setter
    def training_task_inputs(self, training_task_inputs):
        """Sets the training_task_inputs of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Required. The training task's parameter(s), as specified in the training_task_definition's `inputs`.

        :param training_task_inputs: The training_task_inputs of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type training_task_inputs: object
        """

        self._training_task_inputs = training_task_inputs

    @property
    def training_task_metadata(self):
        """Gets the training_task_metadata of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object.

        :return: The training_task_metadata of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: object
        """
        return self._training_task_metadata

    @training_task_metadata.setter
    def training_task_metadata(self, training_task_metadata):
        """Sets the training_task_metadata of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. The metadata information as specified in the training_task_definition's `metadata`. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline's training_task_definition contains `metadata` object.

        :param training_task_metadata: The training_task_metadata of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type training_task_metadata: object
        """

        self._training_task_metadata = training_task_metadata

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Time when the TrainingPipeline was most recently updated.

        :return: The update_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.

        Output only. Time when the TrainingPipeline was most recently updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1TrainingPipeline.
        :type update_time: str
        """

        self._update_time = update_time
