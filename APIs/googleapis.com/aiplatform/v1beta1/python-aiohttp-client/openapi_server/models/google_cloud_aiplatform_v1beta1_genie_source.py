# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1GenieSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_model_uri: str=None):
        """GoogleCloudAiplatformV1beta1GenieSource - a model defined in OpenAPI

        :param base_model_uri: The base_model_uri of this GoogleCloudAiplatformV1beta1GenieSource.
        """
        self.openapi_types = {
            'base_model_uri': str
        }

        self.attribute_map = {
            'base_model_uri': 'baseModelUri'
        }

        self._base_model_uri = base_model_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1GenieSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1GenieSource of this GoogleCloudAiplatformV1beta1GenieSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_model_uri(self):
        """Gets the base_model_uri of this GoogleCloudAiplatformV1beta1GenieSource.

        Required. The public base model URI.

        :return: The base_model_uri of this GoogleCloudAiplatformV1beta1GenieSource.
        :rtype: str
        """
        return self._base_model_uri

    @base_model_uri.setter
    def base_model_uri(self, base_model_uri):
        """Sets the base_model_uri of this GoogleCloudAiplatformV1beta1GenieSource.

        Required. The public base model URI.

        :param base_model_uri: The base_model_uri of this GoogleCloudAiplatformV1beta1GenieSource.
        :type base_model_uri: str
        """

        self._base_model_uri = base_model_uri
