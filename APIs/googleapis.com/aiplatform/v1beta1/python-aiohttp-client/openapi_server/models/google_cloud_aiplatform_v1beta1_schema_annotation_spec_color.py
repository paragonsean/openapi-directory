# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_color import GoogleTypeColor
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color: GoogleTypeColor=None, display_name: str=None, id: str=None):
        """GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor - a model defined in OpenAPI

        :param color: The color of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        :param id: The id of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        """
        self.openapi_types = {
            'color': GoogleTypeColor,
            'display_name': str,
            'id': str
        }

        self.attribute_map = {
            'color': 'color',
            'display_name': 'displayName',
            'id': 'id'
        }

        self._color = color
        self._display_name = display_name
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color(self):
        """Gets the color of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.


        :return: The color of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        :rtype: GoogleTypeColor
        """
        return self._color

    @color.setter
    def color(self, color):
        """Sets the color of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.


        :param color: The color of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        :type color: GoogleTypeColor
        """

        self._color = color

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.

        The display name of the AnnotationSpec represented by the color in the segmentation mask.

        :return: The display_name of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.

        The display name of the AnnotationSpec represented by the color in the segmentation mask.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def id(self):
        """Gets the id of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.

        The ID of the AnnotationSpec represented by the color in the segmentation mask.

        :return: The id of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.

        The ID of the AnnotationSpec represented by the color in the segmentation mask.

        :param id: The id of this GoogleCloudAiplatformV1beta1SchemaAnnotationSpecColor.
        :type id: str
        """

        self._id = id
