# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, goal: str=None, metric_id: str=None):
        """GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec - a model defined in OpenAPI

        :param goal: The goal of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.
        :param metric_id: The metric_id of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.
        """
        self.openapi_types = {
            'goal': str,
            'metric_id': str
        }

        self.attribute_map = {
            'goal': 'goal',
            'metric_id': 'metricId'
        }

        self._goal = goal
        self._metric_id = metric_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def goal(self):
        """Gets the goal of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.

        Required. The optimization goal of the metric.

        :return: The goal of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.
        :rtype: str
        """
        return self._goal

    @goal.setter
    def goal(self, goal):
        """Sets the goal of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.

        Required. The optimization goal of the metric.

        :param goal: The goal of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.
        :type goal: str
        """
        allowed_values = ["GOAL_TYPE_UNSPECIFIED", "MAXIMIZE", "MINIMIZE"]  # noqa: E501
        if goal not in allowed_values:
            raise ValueError(
                "Invalid value for `goal` ({0}), must be one of {1}"
                .format(goal, allowed_values)
            )

        self._goal = goal

    @property
    def metric_id(self):
        """Gets the metric_id of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.

        Required. The ID of the metric. Must not contain whitespaces.

        :return: The metric_id of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.
        :rtype: str
        """
        return self._metric_id

    @metric_id.setter
    def metric_id(self, metric_id):
        """Sets the metric_id of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.

        Required. The ID of the metric. Must not contain whitespaces.

        :param metric_id: The metric_id of this GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec.
        :type metric_id: str
        """

        self._metric_id = metric_id
