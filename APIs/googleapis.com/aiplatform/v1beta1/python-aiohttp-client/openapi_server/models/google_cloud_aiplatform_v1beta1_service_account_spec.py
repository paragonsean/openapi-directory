# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ServiceAccountSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_custom_service_account: bool=None, service_account: str=None):
        """GoogleCloudAiplatformV1beta1ServiceAccountSpec - a model defined in OpenAPI

        :param enable_custom_service_account: The enable_custom_service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.
        :param service_account: The service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.
        """
        self.openapi_types = {
            'enable_custom_service_account': bool,
            'service_account': str
        }

        self.attribute_map = {
            'enable_custom_service_account': 'enableCustomServiceAccount',
            'service_account': 'serviceAccount'
        }

        self._enable_custom_service_account = enable_custom_service_account
        self._service_account = service_account

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ServiceAccountSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ServiceAccountSpec of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_custom_service_account(self):
        """Gets the enable_custom_service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.

        Required. If true, custom user-managed service account is enforced to run any workloads (for example, Vertex Jobs) on the resource. Otherwise, uses the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents).

        :return: The enable_custom_service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.
        :rtype: bool
        """
        return self._enable_custom_service_account

    @enable_custom_service_account.setter
    def enable_custom_service_account(self, enable_custom_service_account):
        """Sets the enable_custom_service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.

        Required. If true, custom user-managed service account is enforced to run any workloads (for example, Vertex Jobs) on the resource. Otherwise, uses the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents).

        :param enable_custom_service_account: The enable_custom_service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.
        :type enable_custom_service_account: bool
        """

        self._enable_custom_service_account = enable_custom_service_account

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.

        Optional. Default service account that this PersistentResource's workloads run as. The workloads include: * Any runtime specified via `ResourceRuntimeSpec` on creation time, for example, Ray. * Jobs submitted to PersistentResource, if no other service account specified in the job specs. Only works when custom service account is enabled and users have the `iam.serviceAccounts.actAs` permission on this service account. Required if any containers are specified in `ResourceRuntimeSpec`.

        :return: The service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.

        Optional. Default service account that this PersistentResource's workloads run as. The workloads include: * Any runtime specified via `ResourceRuntimeSpec` on creation time, for example, Ray. * Jobs submitted to PersistentResource, if no other service account specified in the job specs. Only works when custom service account is enabled and users have the `iam.serviceAccounts.actAs` permission on this service account. Required if any containers are specified in `ResourceRuntimeSpec`.

        :param service_account: The service_account of this GoogleCloudAiplatformV1beta1ServiceAccountSpec.
        :type service_account: str
        """

        self._service_account = service_account
