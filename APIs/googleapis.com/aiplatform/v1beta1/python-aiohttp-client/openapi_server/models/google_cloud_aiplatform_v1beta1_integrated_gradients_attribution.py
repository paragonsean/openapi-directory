# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_blur_baseline_config import GoogleCloudAiplatformV1beta1BlurBaselineConfig
from openapi_server.models.google_cloud_aiplatform_v1beta1_smooth_grad_config import GoogleCloudAiplatformV1beta1SmoothGradConfig
from openapi_server import util


class GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blur_baseline_config: GoogleCloudAiplatformV1beta1BlurBaselineConfig=None, smooth_grad_config: GoogleCloudAiplatformV1beta1SmoothGradConfig=None, step_count: int=None):
        """GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution - a model defined in OpenAPI

        :param blur_baseline_config: The blur_baseline_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        :param smooth_grad_config: The smooth_grad_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        :param step_count: The step_count of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        """
        self.openapi_types = {
            'blur_baseline_config': GoogleCloudAiplatformV1beta1BlurBaselineConfig,
            'smooth_grad_config': GoogleCloudAiplatformV1beta1SmoothGradConfig,
            'step_count': int
        }

        self.attribute_map = {
            'blur_baseline_config': 'blurBaselineConfig',
            'smooth_grad_config': 'smoothGradConfig',
            'step_count': 'stepCount'
        }

        self._blur_baseline_config = blur_baseline_config
        self._smooth_grad_config = smooth_grad_config
        self._step_count = step_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blur_baseline_config(self):
        """Gets the blur_baseline_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.


        :return: The blur_baseline_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        :rtype: GoogleCloudAiplatformV1beta1BlurBaselineConfig
        """
        return self._blur_baseline_config

    @blur_baseline_config.setter
    def blur_baseline_config(self, blur_baseline_config):
        """Sets the blur_baseline_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.


        :param blur_baseline_config: The blur_baseline_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        :type blur_baseline_config: GoogleCloudAiplatformV1beta1BlurBaselineConfig
        """

        self._blur_baseline_config = blur_baseline_config

    @property
    def smooth_grad_config(self):
        """Gets the smooth_grad_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.


        :return: The smooth_grad_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        :rtype: GoogleCloudAiplatformV1beta1SmoothGradConfig
        """
        return self._smooth_grad_config

    @smooth_grad_config.setter
    def smooth_grad_config(self, smooth_grad_config):
        """Sets the smooth_grad_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.


        :param smooth_grad_config: The smooth_grad_config of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        :type smooth_grad_config: GoogleCloudAiplatformV1beta1SmoothGradConfig
        """

        self._smooth_grad_config = smooth_grad_config

    @property
    def step_count(self):
        """Gets the step_count of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.

        Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.

        :return: The step_count of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        :rtype: int
        """
        return self._step_count

    @step_count.setter
    def step_count(self, step_count):
        """Sets the step_count of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.

        Required. The number of steps for approximating the path integral. A good value to start is 50 and gradually increase until the sum to diff property is within the desired error range. Valid range of its value is [1, 100], inclusively.

        :param step_count: The step_count of this GoogleCloudAiplatformV1beta1IntegratedGradientsAttribution.
        :type step_count: int
        """

        self._step_count = step_count
