# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_schema_trainingjob_definition_automl_image_training_tunable_parameter import GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, budget_milli_node_hours: str=None, disable_early_stopping: bool=None, model_type: str=None, tunable_parameter: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter=None, uptrain_base_model_id: str=None):
        """GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs - a model defined in OpenAPI

        :param budget_milli_node_hours: The budget_milli_node_hours of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :param disable_early_stopping: The disable_early_stopping of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :param model_type: The model_type of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :param tunable_parameter: The tunable_parameter of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :param uptrain_base_model_id: The uptrain_base_model_id of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        """
        self.openapi_types = {
            'budget_milli_node_hours': str,
            'disable_early_stopping': bool,
            'model_type': str,
            'tunable_parameter': GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter,
            'uptrain_base_model_id': str
        }

        self.attribute_map = {
            'budget_milli_node_hours': 'budgetMilliNodeHours',
            'disable_early_stopping': 'disableEarlyStopping',
            'model_type': 'modelType',
            'tunable_parameter': 'tunableParameter',
            'uptrain_base_model_id': 'uptrainBaseModelId'
        }

        self._budget_milli_node_hours = budget_milli_node_hours
        self._disable_early_stopping = disable_early_stopping
        self._model_type = model_type
        self._tunable_parameter = tunable_parameter
        self._uptrain_base_model_id = uptrain_base_model_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def budget_milli_node_hours(self):
        """Gets the budget_milli_node_hours of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.

        The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000 which represents one day in wall time, considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.

        :return: The budget_milli_node_hours of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :rtype: str
        """
        return self._budget_milli_node_hours

    @budget_milli_node_hours.setter
    def budget_milli_node_hours(self, budget_milli_node_hours):
        """Sets the budget_milli_node_hours of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.

        The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 20,000 and 900,000 milli node hours, inclusive. The default value is 216,000 which represents one day in wall time, considering 9 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1` the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.

        :param budget_milli_node_hours: The budget_milli_node_hours of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :type budget_milli_node_hours: str
        """

        self._budget_milli_node_hours = budget_milli_node_hours

    @property
    def disable_early_stopping(self):
        """Gets the disable_early_stopping of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.

        Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Object Detection might stop training before the entire training budget has been used.

        :return: The disable_early_stopping of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :rtype: bool
        """
        return self._disable_early_stopping

    @disable_early_stopping.setter
    def disable_early_stopping(self, disable_early_stopping):
        """Sets the disable_early_stopping of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.

        Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Object Detection might stop training before the entire training budget has been used.

        :param disable_early_stopping: The disable_early_stopping of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :type disable_early_stopping: bool
        """

        self._disable_early_stopping = disable_early_stopping

    @property
    def model_type(self):
        """Gets the model_type of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.


        :return: The model_type of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :rtype: str
        """
        return self._model_type

    @model_type.setter
    def model_type(self, model_type):
        """Sets the model_type of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.


        :param model_type: The model_type of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :type model_type: str
        """
        allowed_values = ["MODEL_TYPE_UNSPECIFIED", "CLOUD_HIGH_ACCURACY_1", "CLOUD_LOW_LATENCY_1", "CLOUD_1", "MOBILE_TF_LOW_LATENCY_1", "MOBILE_TF_VERSATILE_1", "MOBILE_TF_HIGH_ACCURACY_1", "CLOUD_STREAMING_1", "SPINENET", "YOLO"]  # noqa: E501
        if model_type not in allowed_values:
            raise ValueError(
                "Invalid value for `model_type` ({0}), must be one of {1}"
                .format(model_type, allowed_values)
            )

        self._model_type = model_type

    @property
    def tunable_parameter(self):
        """Gets the tunable_parameter of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.


        :return: The tunable_parameter of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :rtype: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter
        """
        return self._tunable_parameter

    @tunable_parameter.setter
    def tunable_parameter(self, tunable_parameter):
        """Sets the tunable_parameter of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.


        :param tunable_parameter: The tunable_parameter of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :type tunable_parameter: GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter
        """

        self._tunable_parameter = tunable_parameter

    @property
    def uptrain_base_model_id(self):
        """Gets the uptrain_base_model_id of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.

        The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType.

        :return: The uptrain_base_model_id of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :rtype: str
        """
        return self._uptrain_base_model_id

    @uptrain_base_model_id.setter
    def uptrain_base_model_id(self, uptrain_base_model_id):
        """Sets the uptrain_base_model_id of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.

        The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType.

        :param uptrain_base_model_id: The uptrain_base_model_id of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs.
        :type uptrain_base_model_id: str
        """

        self._uptrain_base_model_id = uptrain_base_model_id
