# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_destination_feature_setting import GoogleCloudAiplatformV1beta1DestinationFeatureSetting
from openapi_server.models.google_cloud_aiplatform_v1beta1_feature_selector import GoogleCloudAiplatformV1beta1FeatureSelector
from openapi_server import util


class GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_type_id: str=None, feature_selector: GoogleCloudAiplatformV1beta1FeatureSelector=None, settings: List[GoogleCloudAiplatformV1beta1DestinationFeatureSetting]=None):
        """GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec - a model defined in OpenAPI

        :param entity_type_id: The entity_type_id of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        :param feature_selector: The feature_selector of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        :param settings: The settings of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        """
        self.openapi_types = {
            'entity_type_id': str,
            'feature_selector': GoogleCloudAiplatformV1beta1FeatureSelector,
            'settings': List[GoogleCloudAiplatformV1beta1DestinationFeatureSetting]
        }

        self.attribute_map = {
            'entity_type_id': 'entityTypeId',
            'feature_selector': 'featureSelector',
            'settings': 'settings'
        }

        self._entity_type_id = entity_type_id
        self._feature_selector = feature_selector
        self._settings = settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_type_id(self):
        """Gets the entity_type_id of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.

        Required. ID of the EntityType to select Features. The EntityType id is the entity_type_id specified during EntityType creation.

        :return: The entity_type_id of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        :rtype: str
        """
        return self._entity_type_id

    @entity_type_id.setter
    def entity_type_id(self, entity_type_id):
        """Sets the entity_type_id of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.

        Required. ID of the EntityType to select Features. The EntityType id is the entity_type_id specified during EntityType creation.

        :param entity_type_id: The entity_type_id of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        :type entity_type_id: str
        """

        self._entity_type_id = entity_type_id

    @property
    def feature_selector(self):
        """Gets the feature_selector of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.


        :return: The feature_selector of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        :rtype: GoogleCloudAiplatformV1beta1FeatureSelector
        """
        return self._feature_selector

    @feature_selector.setter
    def feature_selector(self, feature_selector):
        """Sets the feature_selector of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.


        :param feature_selector: The feature_selector of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        :type feature_selector: GoogleCloudAiplatformV1beta1FeatureSelector
        """

        self._feature_selector = feature_selector

    @property
    def settings(self):
        """Gets the settings of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.

        Per-Feature settings for the batch read.

        :return: The settings of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        :rtype: List[GoogleCloudAiplatformV1beta1DestinationFeatureSetting]
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.

        Per-Feature settings for the batch read.

        :param settings: The settings of this GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequestEntityTypeSpec.
        :type settings: List[GoogleCloudAiplatformV1beta1DestinationFeatureSetting]
        """

        self._settings = settings
