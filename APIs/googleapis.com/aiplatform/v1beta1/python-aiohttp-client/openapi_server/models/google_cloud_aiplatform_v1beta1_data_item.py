# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1DataItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, etag: str=None, labels: Dict[str, str]=None, name: str=None, payload: object=None, update_time: str=None):
        """GoogleCloudAiplatformV1beta1DataItem - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1DataItem.
        :param etag: The etag of this GoogleCloudAiplatformV1beta1DataItem.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1DataItem.
        :param name: The name of this GoogleCloudAiplatformV1beta1DataItem.
        :param payload: The payload of this GoogleCloudAiplatformV1beta1DataItem.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1DataItem.
        """
        self.openapi_types = {
            'create_time': str,
            'etag': str,
            'labels': Dict[str, str],
            'name': str,
            'payload': object,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'etag': 'etag',
            'labels': 'labels',
            'name': 'name',
            'payload': 'payload',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._etag = etag
        self._labels = labels
        self._name = name
        self._payload = payload
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1DataItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1DataItem of this GoogleCloudAiplatformV1beta1DataItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1DataItem.

        Output only. Timestamp when this DataItem was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1DataItem.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1DataItem.

        Output only. Timestamp when this DataItem was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1DataItem.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1beta1DataItem.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1beta1DataItem.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1beta1DataItem.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1beta1DataItem.
        :type etag: str
        """

        self._etag = etag

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1DataItem.

        Optional. The labels with user-defined metadata to organize your DataItems. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one DataItem(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :return: The labels of this GoogleCloudAiplatformV1beta1DataItem.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1DataItem.

        Optional. The labels with user-defined metadata to organize your DataItems. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one DataItem(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1DataItem.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1DataItem.

        Output only. The resource name of the DataItem.

        :return: The name of this GoogleCloudAiplatformV1beta1DataItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1DataItem.

        Output only. The resource name of the DataItem.

        :param name: The name of this GoogleCloudAiplatformV1beta1DataItem.
        :type name: str
        """

        self._name = name

    @property
    def payload(self):
        """Gets the payload of this GoogleCloudAiplatformV1beta1DataItem.

        Required. The data that the DataItem represents (for example, an image or a text snippet). The schema of the payload is stored in the parent Dataset's metadata schema's dataItemSchemaUri field.

        :return: The payload of this GoogleCloudAiplatformV1beta1DataItem.
        :rtype: object
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this GoogleCloudAiplatformV1beta1DataItem.

        Required. The data that the DataItem represents (for example, an image or a text snippet). The schema of the payload is stored in the parent Dataset's metadata schema's dataItemSchemaUri field.

        :param payload: The payload of this GoogleCloudAiplatformV1beta1DataItem.
        :type payload: object
        """

        self._payload = payload

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1DataItem.

        Output only. Timestamp when this DataItem was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1beta1DataItem.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1DataItem.

        Output only. Timestamp when this DataItem was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1DataItem.
        :type update_time: str
        """

        self._update_time = update_time
