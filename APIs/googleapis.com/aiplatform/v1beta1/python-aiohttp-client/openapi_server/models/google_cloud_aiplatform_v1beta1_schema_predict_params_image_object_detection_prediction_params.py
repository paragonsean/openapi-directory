# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence_threshold: float=None, max_predictions: int=None):
        """GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams - a model defined in OpenAPI

        :param confidence_threshold: The confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.
        :param max_predictions: The max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.
        """
        self.openapi_types = {
            'confidence_threshold': float,
            'max_predictions': int
        }

        self.attribute_map = {
            'confidence_threshold': 'confidenceThreshold',
            'max_predictions': 'maxPredictions'
        }

        self._confidence_threshold = confidence_threshold
        self._max_predictions = max_predictions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence_threshold(self):
        """Gets the confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.

        The Model only returns predictions with at least this confidence score. Default value is 0.0

        :return: The confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.
        :rtype: float
        """
        return self._confidence_threshold

    @confidence_threshold.setter
    def confidence_threshold(self, confidence_threshold):
        """Sets the confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.

        The Model only returns predictions with at least this confidence score. Default value is 0.0

        :param confidence_threshold: The confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.
        :type confidence_threshold: float
        """

        self._confidence_threshold = confidence_threshold

    @property
    def max_predictions(self):
        """Gets the max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.

        The Model only returns up to that many top, by confidence score, predictions per instance. Note that number of returned predictions is also limited by metadata's predictionsLimit. Default value is 10.

        :return: The max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.
        :rtype: int
        """
        return self._max_predictions

    @max_predictions.setter
    def max_predictions(self, max_predictions):
        """Sets the max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.

        The Model only returns up to that many top, by confidence score, predictions per instance. Note that number of returned predictions is also limited by metadata's predictionsLimit. Default value is 10.

        :param max_predictions: The max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsImageObjectDetectionPredictionParams.
        :type max_predictions: int
        """

        self._max_predictions = max_predictions
