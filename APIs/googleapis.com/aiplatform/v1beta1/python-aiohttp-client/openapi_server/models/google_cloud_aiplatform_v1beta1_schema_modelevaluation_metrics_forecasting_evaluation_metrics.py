# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_schema_modelevaluation_metrics_forecasting_evaluation_metrics_quantile_metrics_entry import GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mean_absolute_error: float=None, mean_absolute_percentage_error: float=None, quantile_metrics: List[GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry]=None, r_squared: float=None, root_mean_squared_error: float=None, root_mean_squared_log_error: float=None, root_mean_squared_percentage_error: float=None, weighted_absolute_percentage_error: float=None):
        """GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics - a model defined in OpenAPI

        :param mean_absolute_error: The mean_absolute_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :param mean_absolute_percentage_error: The mean_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :param quantile_metrics: The quantile_metrics of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :param r_squared: The r_squared of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :param root_mean_squared_error: The root_mean_squared_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :param root_mean_squared_log_error: The root_mean_squared_log_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :param root_mean_squared_percentage_error: The root_mean_squared_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :param weighted_absolute_percentage_error: The weighted_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        """
        self.openapi_types = {
            'mean_absolute_error': float,
            'mean_absolute_percentage_error': float,
            'quantile_metrics': List[GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry],
            'r_squared': float,
            'root_mean_squared_error': float,
            'root_mean_squared_log_error': float,
            'root_mean_squared_percentage_error': float,
            'weighted_absolute_percentage_error': float
        }

        self.attribute_map = {
            'mean_absolute_error': 'meanAbsoluteError',
            'mean_absolute_percentage_error': 'meanAbsolutePercentageError',
            'quantile_metrics': 'quantileMetrics',
            'r_squared': 'rSquared',
            'root_mean_squared_error': 'rootMeanSquaredError',
            'root_mean_squared_log_error': 'rootMeanSquaredLogError',
            'root_mean_squared_percentage_error': 'rootMeanSquaredPercentageError',
            'weighted_absolute_percentage_error': 'weightedAbsolutePercentageError'
        }

        self._mean_absolute_error = mean_absolute_error
        self._mean_absolute_percentage_error = mean_absolute_percentage_error
        self._quantile_metrics = quantile_metrics
        self._r_squared = r_squared
        self._root_mean_squared_error = root_mean_squared_error
        self._root_mean_squared_log_error = root_mean_squared_log_error
        self._root_mean_squared_percentage_error = root_mean_squared_percentage_error
        self._weighted_absolute_percentage_error = weighted_absolute_percentage_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mean_absolute_error(self):
        """Gets the mean_absolute_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Mean Absolute Error (MAE).

        :return: The mean_absolute_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :rtype: float
        """
        return self._mean_absolute_error

    @mean_absolute_error.setter
    def mean_absolute_error(self, mean_absolute_error):
        """Sets the mean_absolute_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Mean Absolute Error (MAE).

        :param mean_absolute_error: The mean_absolute_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :type mean_absolute_error: float
        """

        self._mean_absolute_error = mean_absolute_error

    @property
    def mean_absolute_percentage_error(self):
        """Gets the mean_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Mean absolute percentage error. Infinity when there are zeros in the ground truth.

        :return: The mean_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :rtype: float
        """
        return self._mean_absolute_percentage_error

    @mean_absolute_percentage_error.setter
    def mean_absolute_percentage_error(self, mean_absolute_percentage_error):
        """Sets the mean_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Mean absolute percentage error. Infinity when there are zeros in the ground truth.

        :param mean_absolute_percentage_error: The mean_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :type mean_absolute_percentage_error: float
        """

        self._mean_absolute_percentage_error = mean_absolute_percentage_error

    @property
    def quantile_metrics(self):
        """Gets the quantile_metrics of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        The quantile metrics entries for each quantile.

        :return: The quantile_metrics of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :rtype: List[GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry]
        """
        return self._quantile_metrics

    @quantile_metrics.setter
    def quantile_metrics(self, quantile_metrics):
        """Sets the quantile_metrics of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        The quantile metrics entries for each quantile.

        :param quantile_metrics: The quantile_metrics of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :type quantile_metrics: List[GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry]
        """

        self._quantile_metrics = quantile_metrics

    @property
    def r_squared(self):
        """Gets the r_squared of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.

        :return: The r_squared of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :rtype: float
        """
        return self._r_squared

    @r_squared.setter
    def r_squared(self, r_squared):
        """Sets the r_squared of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.

        :param r_squared: The r_squared of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :type r_squared: float
        """

        self._r_squared = r_squared

    @property
    def root_mean_squared_error(self):
        """Gets the root_mean_squared_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Root Mean Squared Error (RMSE).

        :return: The root_mean_squared_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :rtype: float
        """
        return self._root_mean_squared_error

    @root_mean_squared_error.setter
    def root_mean_squared_error(self, root_mean_squared_error):
        """Sets the root_mean_squared_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Root Mean Squared Error (RMSE).

        :param root_mean_squared_error: The root_mean_squared_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :type root_mean_squared_error: float
        """

        self._root_mean_squared_error = root_mean_squared_error

    @property
    def root_mean_squared_log_error(self):
        """Gets the root_mean_squared_log_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Root mean squared log error. Undefined when there are negative ground truth values or predictions.

        :return: The root_mean_squared_log_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :rtype: float
        """
        return self._root_mean_squared_log_error

    @root_mean_squared_log_error.setter
    def root_mean_squared_log_error(self, root_mean_squared_log_error):
        """Sets the root_mean_squared_log_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Root mean squared log error. Undefined when there are negative ground truth values or predictions.

        :param root_mean_squared_log_error: The root_mean_squared_log_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :type root_mean_squared_log_error: float
        """

        self._root_mean_squared_log_error = root_mean_squared_log_error

    @property
    def root_mean_squared_percentage_error(self):
        """Gets the root_mean_squared_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary when MSPE is negative.

        :return: The root_mean_squared_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :rtype: float
        """
        return self._root_mean_squared_percentage_error

    @root_mean_squared_percentage_error.setter
    def root_mean_squared_percentage_error(self, root_mean_squared_percentage_error):
        """Sets the root_mean_squared_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary when MSPE is negative.

        :param root_mean_squared_percentage_error: The root_mean_squared_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :type root_mean_squared_percentage_error: float
        """

        self._root_mean_squared_percentage_error = root_mean_squared_percentage_error

    @property
    def weighted_absolute_percentage_error(self):
        """Gets the weighted_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Weighted Absolute Percentage Error. Does not use weights, this is just what the metric is called. Undefined if actual values sum to zero. Will be very large if actual values sum to a very small number.

        :return: The weighted_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :rtype: float
        """
        return self._weighted_absolute_percentage_error

    @weighted_absolute_percentage_error.setter
    def weighted_absolute_percentage_error(self, weighted_absolute_percentage_error):
        """Sets the weighted_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.

        Weighted Absolute Percentage Error. Does not use weights, this is just what the metric is called. Undefined if actual values sum to zero. Will be very large if actual values sum to a very small number.

        :param weighted_absolute_percentage_error: The weighted_absolute_percentage_error of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.
        :type weighted_absolute_percentage_error: float
        """

        self._weighted_absolute_percentage_error = weighted_absolute_percentage_error
