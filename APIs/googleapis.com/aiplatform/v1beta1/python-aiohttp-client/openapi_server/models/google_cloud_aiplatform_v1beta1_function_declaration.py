# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_schema import GoogleCloudAiplatformV1beta1Schema
from openapi_server import util


class GoogleCloudAiplatformV1beta1FunctionDeclaration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, parameters: GoogleCloudAiplatformV1beta1Schema=None):
        """GoogleCloudAiplatformV1beta1FunctionDeclaration - a model defined in OpenAPI

        :param description: The description of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        :param name: The name of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        :param parameters: The parameters of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'parameters': GoogleCloudAiplatformV1beta1Schema
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'parameters': 'parameters'
        }

        self._description = description
        self._name = name
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1FunctionDeclaration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1FunctionDeclaration of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1beta1FunctionDeclaration.

        Optional. Description and purpose of the function. Model uses it to decide how and whether to call the function.

        :return: The description of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1beta1FunctionDeclaration.

        Optional. Description and purpose of the function. Model uses it to decide how and whether to call the function.

        :param description: The description of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1FunctionDeclaration.

        Required. The name of the function to call. Must start with a letter or an underscore. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.

        :return: The name of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1FunctionDeclaration.

        Required. The name of the function to call. Must start with a letter or an underscore. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.

        :param name: The name of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        :type name: str
        """

        self._name = name

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudAiplatformV1beta1FunctionDeclaration.


        :return: The parameters of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        :rtype: GoogleCloudAiplatformV1beta1Schema
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudAiplatformV1beta1FunctionDeclaration.


        :param parameters: The parameters of this GoogleCloudAiplatformV1beta1FunctionDeclaration.
        :type parameters: GoogleCloudAiplatformV1beta1Schema
        """

        self._parameters = parameters
