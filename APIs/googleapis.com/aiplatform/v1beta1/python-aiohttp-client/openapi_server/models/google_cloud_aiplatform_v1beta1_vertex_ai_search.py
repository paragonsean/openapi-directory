# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1VertexAISearch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datastore: str=None):
        """GoogleCloudAiplatformV1beta1VertexAISearch - a model defined in OpenAPI

        :param datastore: The datastore of this GoogleCloudAiplatformV1beta1VertexAISearch.
        """
        self.openapi_types = {
            'datastore': str
        }

        self.attribute_map = {
            'datastore': 'datastore'
        }

        self._datastore = datastore

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1VertexAISearch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1VertexAISearch of this GoogleCloudAiplatformV1beta1VertexAISearch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datastore(self):
        """Gets the datastore of this GoogleCloudAiplatformV1beta1VertexAISearch.

        Required. Fully-qualified Vertex AI Search's datastore resource ID. projects/<>/locations/<>/collections/<>/dataStores/<>

        :return: The datastore of this GoogleCloudAiplatformV1beta1VertexAISearch.
        :rtype: str
        """
        return self._datastore

    @datastore.setter
    def datastore(self, datastore):
        """Sets the datastore of this GoogleCloudAiplatformV1beta1VertexAISearch.

        Required. Fully-qualified Vertex AI Search's datastore resource ID. projects/<>/locations/<>/collections/<>/dataStores/<>

        :param datastore: The datastore of this GoogleCloudAiplatformV1beta1VertexAISearch.
        :type datastore: str
        """

        self._datastore = datastore
