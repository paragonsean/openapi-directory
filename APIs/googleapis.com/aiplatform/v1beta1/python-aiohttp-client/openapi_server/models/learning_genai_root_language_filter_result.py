# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LearningGenaiRootLanguageFilterResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed: bool=None, detected_language: str=None, detected_language_probability: float=None):
        """LearningGenaiRootLanguageFilterResult - a model defined in OpenAPI

        :param allowed: The allowed of this LearningGenaiRootLanguageFilterResult.
        :param detected_language: The detected_language of this LearningGenaiRootLanguageFilterResult.
        :param detected_language_probability: The detected_language_probability of this LearningGenaiRootLanguageFilterResult.
        """
        self.openapi_types = {
            'allowed': bool,
            'detected_language': str,
            'detected_language_probability': float
        }

        self.attribute_map = {
            'allowed': 'allowed',
            'detected_language': 'detectedLanguage',
            'detected_language_probability': 'detectedLanguageProbability'
        }

        self._allowed = allowed
        self._detected_language = detected_language
        self._detected_language_probability = detected_language_probability

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootLanguageFilterResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootLanguageFilterResult of this LearningGenaiRootLanguageFilterResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed(self):
        """Gets the allowed of this LearningGenaiRootLanguageFilterResult.

        False when query or response should be filtered out due to unsupported language.

        :return: The allowed of this LearningGenaiRootLanguageFilterResult.
        :rtype: bool
        """
        return self._allowed

    @allowed.setter
    def allowed(self, allowed):
        """Sets the allowed of this LearningGenaiRootLanguageFilterResult.

        False when query or response should be filtered out due to unsupported language.

        :param allowed: The allowed of this LearningGenaiRootLanguageFilterResult.
        :type allowed: bool
        """

        self._allowed = allowed

    @property
    def detected_language(self):
        """Gets the detected_language of this LearningGenaiRootLanguageFilterResult.

        Language of the query or response.

        :return: The detected_language of this LearningGenaiRootLanguageFilterResult.
        :rtype: str
        """
        return self._detected_language

    @detected_language.setter
    def detected_language(self, detected_language):
        """Sets the detected_language of this LearningGenaiRootLanguageFilterResult.

        Language of the query or response.

        :param detected_language: The detected_language of this LearningGenaiRootLanguageFilterResult.
        :type detected_language: str
        """

        self._detected_language = detected_language

    @property
    def detected_language_probability(self):
        """Gets the detected_language_probability of this LearningGenaiRootLanguageFilterResult.

        Probability of the language predicted as returned by LangID.

        :return: The detected_language_probability of this LearningGenaiRootLanguageFilterResult.
        :rtype: float
        """
        return self._detected_language_probability

    @detected_language_probability.setter
    def detected_language_probability(self, detected_language_probability):
        """Sets the detected_language_probability of this LearningGenaiRootLanguageFilterResult.

        Probability of the language predicted as returned by LangID.

        :param detected_language_probability: The detected_language_probability of this LearningGenaiRootLanguageFilterResult.
        :type detected_language_probability: float
        """

        self._detected_language_probability = detected_language_probability
