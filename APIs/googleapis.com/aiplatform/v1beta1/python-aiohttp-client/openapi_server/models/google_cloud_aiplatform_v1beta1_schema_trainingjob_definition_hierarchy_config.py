# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_columns: List[str]=None, group_temporal_total_weight: float=None, group_total_weight: float=None, temporal_total_weight: float=None):
        """GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig - a model defined in OpenAPI

        :param group_columns: The group_columns of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :param group_temporal_total_weight: The group_temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :param group_total_weight: The group_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :param temporal_total_weight: The temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        """
        self.openapi_types = {
            'group_columns': List[str],
            'group_temporal_total_weight': float,
            'group_total_weight': float,
            'temporal_total_weight': float
        }

        self.attribute_map = {
            'group_columns': 'groupColumns',
            'group_temporal_total_weight': 'groupTemporalTotalWeight',
            'group_total_weight': 'groupTotalWeight',
            'temporal_total_weight': 'temporalTotalWeight'
        }

        self._group_columns = group_columns
        self._group_temporal_total_weight = group_temporal_total_weight
        self._group_total_weight = group_total_weight
        self._temporal_total_weight = temporal_total_weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_columns(self):
        """Gets the group_columns of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.

        A list of time series attribute column names that define the time series hierarchy. Only one level of hierarchy is supported, ex. 'region' for a hierarchy of stores or 'department' for a hierarchy of products. If multiple columns are specified, time series will be grouped by their combined values, ex. ('blue', 'large') for 'color' and 'size', up to 5 columns are accepted. If no group columns are specified, all time series are considered to be part of the same group.

        :return: The group_columns of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :rtype: List[str]
        """
        return self._group_columns

    @group_columns.setter
    def group_columns(self, group_columns):
        """Sets the group_columns of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.

        A list of time series attribute column names that define the time series hierarchy. Only one level of hierarchy is supported, ex. 'region' for a hierarchy of stores or 'department' for a hierarchy of products. If multiple columns are specified, time series will be grouped by their combined values, ex. ('blue', 'large') for 'color' and 'size', up to 5 columns are accepted. If no group columns are specified, all time series are considered to be part of the same group.

        :param group_columns: The group_columns of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :type group_columns: List[str]
        """

        self._group_columns = group_columns

    @property
    def group_temporal_total_weight(self):
        """Gets the group_temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.

        The weight of the loss for predictions aggregated over both the horizon and time series in the same hierarchy group.

        :return: The group_temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :rtype: float
        """
        return self._group_temporal_total_weight

    @group_temporal_total_weight.setter
    def group_temporal_total_weight(self, group_temporal_total_weight):
        """Sets the group_temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.

        The weight of the loss for predictions aggregated over both the horizon and time series in the same hierarchy group.

        :param group_temporal_total_weight: The group_temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :type group_temporal_total_weight: float
        """

        self._group_temporal_total_weight = group_temporal_total_weight

    @property
    def group_total_weight(self):
        """Gets the group_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.

        The weight of the loss for predictions aggregated over time series in the same group.

        :return: The group_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :rtype: float
        """
        return self._group_total_weight

    @group_total_weight.setter
    def group_total_weight(self, group_total_weight):
        """Sets the group_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.

        The weight of the loss for predictions aggregated over time series in the same group.

        :param group_total_weight: The group_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :type group_total_weight: float
        """

        self._group_total_weight = group_total_weight

    @property
    def temporal_total_weight(self):
        """Gets the temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.

        The weight of the loss for predictions aggregated over the horizon for a single time series.

        :return: The temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :rtype: float
        """
        return self._temporal_total_weight

    @temporal_total_weight.setter
    def temporal_total_weight(self, temporal_total_weight):
        """Sets the temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.

        The weight of the loss for predictions aggregated over the horizon for a single time series.

        :param temporal_total_weight: The temporal_total_weight of this GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.
        :type temporal_total_weight: float
        """

        self._temporal_total_weight = temporal_total_weight
