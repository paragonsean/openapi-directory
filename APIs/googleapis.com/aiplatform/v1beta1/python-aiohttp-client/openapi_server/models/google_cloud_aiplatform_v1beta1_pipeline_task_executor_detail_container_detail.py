# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failed_main_jobs: List[str]=None, failed_pre_caching_check_jobs: List[str]=None, main_job: str=None, pre_caching_check_job: str=None):
        """GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail - a model defined in OpenAPI

        :param failed_main_jobs: The failed_main_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :param failed_pre_caching_check_jobs: The failed_pre_caching_check_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :param main_job: The main_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :param pre_caching_check_job: The pre_caching_check_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        """
        self.openapi_types = {
            'failed_main_jobs': List[str],
            'failed_pre_caching_check_jobs': List[str],
            'main_job': str,
            'pre_caching_check_job': str
        }

        self.attribute_map = {
            'failed_main_jobs': 'failedMainJobs',
            'failed_pre_caching_check_jobs': 'failedPreCachingCheckJobs',
            'main_job': 'mainJob',
            'pre_caching_check_job': 'preCachingCheckJob'
        }

        self._failed_main_jobs = failed_main_jobs
        self._failed_pre_caching_check_jobs = failed_pre_caching_check_jobs
        self._main_job = main_job
        self._pre_caching_check_job = pre_caching_check_job

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failed_main_jobs(self):
        """Gets the failed_main_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.

        Output only. The names of the previously failed CustomJob for the main container executions. The list includes the all attempts in chronological order.

        :return: The failed_main_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :rtype: List[str]
        """
        return self._failed_main_jobs

    @failed_main_jobs.setter
    def failed_main_jobs(self, failed_main_jobs):
        """Sets the failed_main_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.

        Output only. The names of the previously failed CustomJob for the main container executions. The list includes the all attempts in chronological order.

        :param failed_main_jobs: The failed_main_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :type failed_main_jobs: List[str]
        """

        self._failed_main_jobs = failed_main_jobs

    @property
    def failed_pre_caching_check_jobs(self):
        """Gets the failed_pre_caching_check_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.

        Output only. The names of the previously failed CustomJob for the pre-caching-check container executions. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events. The list includes the all attempts in chronological order.

        :return: The failed_pre_caching_check_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :rtype: List[str]
        """
        return self._failed_pre_caching_check_jobs

    @failed_pre_caching_check_jobs.setter
    def failed_pre_caching_check_jobs(self, failed_pre_caching_check_jobs):
        """Sets the failed_pre_caching_check_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.

        Output only. The names of the previously failed CustomJob for the pre-caching-check container executions. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events. The list includes the all attempts in chronological order.

        :param failed_pre_caching_check_jobs: The failed_pre_caching_check_jobs of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :type failed_pre_caching_check_jobs: List[str]
        """

        self._failed_pre_caching_check_jobs = failed_pre_caching_check_jobs

    @property
    def main_job(self):
        """Gets the main_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.

        Output only. The name of the CustomJob for the main container execution.

        :return: The main_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :rtype: str
        """
        return self._main_job

    @main_job.setter
    def main_job(self, main_job):
        """Sets the main_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.

        Output only. The name of the CustomJob for the main container execution.

        :param main_job: The main_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :type main_job: str
        """

        self._main_job = main_job

    @property
    def pre_caching_check_job(self):
        """Gets the pre_caching_check_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.

        Output only. The name of the CustomJob for the pre-caching-check container execution. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events.

        :return: The pre_caching_check_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :rtype: str
        """
        return self._pre_caching_check_job

    @pre_caching_check_job.setter
    def pre_caching_check_job(self, pre_caching_check_job):
        """Sets the pre_caching_check_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.

        Output only. The name of the CustomJob for the pre-caching-check container execution. This job will be available if the PipelineJob.pipeline_spec specifies the `pre_caching_check` hook in the lifecycle events.

        :param pre_caching_check_job: The pre_caching_check_job of this GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.
        :type pre_caching_check_job: str
        """

        self._pre_caching_check_job = pre_caching_check_job
