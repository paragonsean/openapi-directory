# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ResumeScheduleRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, catch_up: bool=None):
        """GoogleCloudAiplatformV1beta1ResumeScheduleRequest - a model defined in OpenAPI

        :param catch_up: The catch_up of this GoogleCloudAiplatformV1beta1ResumeScheduleRequest.
        """
        self.openapi_types = {
            'catch_up': bool
        }

        self.attribute_map = {
            'catch_up': 'catchUp'
        }

        self._catch_up = catch_up

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ResumeScheduleRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ResumeScheduleRequest of this GoogleCloudAiplatformV1beta1ResumeScheduleRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def catch_up(self):
        """Gets the catch_up of this GoogleCloudAiplatformV1beta1ResumeScheduleRequest.

        Optional. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. This will also update Schedule.catch_up field. Default to false.

        :return: The catch_up of this GoogleCloudAiplatformV1beta1ResumeScheduleRequest.
        :rtype: bool
        """
        return self._catch_up

    @catch_up.setter
    def catch_up(self, catch_up):
        """Sets the catch_up of this GoogleCloudAiplatformV1beta1ResumeScheduleRequest.

        Optional. Whether to backfill missed runs when the schedule is resumed from PAUSED state. If set to true, all missed runs will be scheduled. New runs will be scheduled after the backfill is complete. This will also update Schedule.catch_up field. Default to false.

        :param catch_up: The catch_up of this GoogleCloudAiplatformV1beta1ResumeScheduleRequest.
        :type catch_up: bool
        """

        self._catch_up = catch_up
