# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, imported_entity_count: str=None, imported_feature_value_count: str=None, invalid_row_count: str=None, timestamp_outside_retention_rows_count: str=None):
        """GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse - a model defined in OpenAPI

        :param imported_entity_count: The imported_entity_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :param imported_feature_value_count: The imported_feature_value_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :param invalid_row_count: The invalid_row_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :param timestamp_outside_retention_rows_count: The timestamp_outside_retention_rows_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        """
        self.openapi_types = {
            'imported_entity_count': str,
            'imported_feature_value_count': str,
            'invalid_row_count': str,
            'timestamp_outside_retention_rows_count': str
        }

        self.attribute_map = {
            'imported_entity_count': 'importedEntityCount',
            'imported_feature_value_count': 'importedFeatureValueCount',
            'invalid_row_count': 'invalidRowCount',
            'timestamp_outside_retention_rows_count': 'timestampOutsideRetentionRowsCount'
        }

        self._imported_entity_count = imported_entity_count
        self._imported_feature_value_count = imported_feature_value_count
        self._invalid_row_count = invalid_row_count
        self._timestamp_outside_retention_rows_count = timestamp_outside_retention_rows_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def imported_entity_count(self):
        """Gets the imported_entity_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.

        Number of entities that have been imported by the operation.

        :return: The imported_entity_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :rtype: str
        """
        return self._imported_entity_count

    @imported_entity_count.setter
    def imported_entity_count(self, imported_entity_count):
        """Sets the imported_entity_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.

        Number of entities that have been imported by the operation.

        :param imported_entity_count: The imported_entity_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :type imported_entity_count: str
        """

        self._imported_entity_count = imported_entity_count

    @property
    def imported_feature_value_count(self):
        """Gets the imported_feature_value_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.

        Number of Feature values that have been imported by the operation.

        :return: The imported_feature_value_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :rtype: str
        """
        return self._imported_feature_value_count

    @imported_feature_value_count.setter
    def imported_feature_value_count(self, imported_feature_value_count):
        """Sets the imported_feature_value_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.

        Number of Feature values that have been imported by the operation.

        :param imported_feature_value_count: The imported_feature_value_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :type imported_feature_value_count: str
        """

        self._imported_feature_value_count = imported_feature_value_count

    @property
    def invalid_row_count(self):
        """Gets the invalid_row_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.

        The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources).

        :return: The invalid_row_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :rtype: str
        """
        return self._invalid_row_count

    @invalid_row_count.setter
    def invalid_row_count(self, invalid_row_count):
        """Sets the invalid_row_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.

        The number of rows in input source that weren't imported due to either * Not having any featureValues. * Having a null entityId. * Having a null timestamp. * Not being parsable (applicable for CSV sources).

        :param invalid_row_count: The invalid_row_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :type invalid_row_count: str
        """

        self._invalid_row_count = invalid_row_count

    @property
    def timestamp_outside_retention_rows_count(self):
        """Gets the timestamp_outside_retention_rows_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.

        The number rows that weren't ingested due to having feature timestamps outside the retention boundary.

        :return: The timestamp_outside_retention_rows_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :rtype: str
        """
        return self._timestamp_outside_retention_rows_count

    @timestamp_outside_retention_rows_count.setter
    def timestamp_outside_retention_rows_count(self, timestamp_outside_retention_rows_count):
        """Sets the timestamp_outside_retention_rows_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.

        The number rows that weren't ingested due to having feature timestamps outside the retention boundary.

        :param timestamp_outside_retention_rows_count: The timestamp_outside_retention_rows_count of this GoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.
        :type timestamp_outside_retention_rows_count: str
        """

        self._timestamp_outside_retention_rows_count = timestamp_outside_retention_rows_count
