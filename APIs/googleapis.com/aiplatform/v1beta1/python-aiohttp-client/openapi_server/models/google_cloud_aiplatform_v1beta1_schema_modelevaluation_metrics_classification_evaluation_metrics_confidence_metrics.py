# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_schema_modelevaluation_metrics_confusion_matrix import GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence_threshold: float=None, confusion_matrix: GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix=None, f1_score: float=None, f1_score_at1: float=None, f1_score_macro: float=None, f1_score_micro: float=None, false_negative_count: str=None, false_positive_count: str=None, false_positive_rate: float=None, false_positive_rate_at1: float=None, max_predictions: int=None, precision: float=None, precision_at1: float=None, recall: float=None, recall_at1: float=None, true_negative_count: str=None, true_positive_count: str=None):
        """GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics - a model defined in OpenAPI

        :param confidence_threshold: The confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param confusion_matrix: The confusion_matrix of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param f1_score: The f1_score of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param f1_score_at1: The f1_score_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param f1_score_macro: The f1_score_macro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param f1_score_micro: The f1_score_micro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param false_negative_count: The false_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param false_positive_count: The false_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param false_positive_rate: The false_positive_rate of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param false_positive_rate_at1: The false_positive_rate_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param max_predictions: The max_predictions of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param precision: The precision of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param precision_at1: The precision_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param recall: The recall of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param recall_at1: The recall_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param true_negative_count: The true_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :param true_positive_count: The true_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        """
        self.openapi_types = {
            'confidence_threshold': float,
            'confusion_matrix': GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix,
            'f1_score': float,
            'f1_score_at1': float,
            'f1_score_macro': float,
            'f1_score_micro': float,
            'false_negative_count': str,
            'false_positive_count': str,
            'false_positive_rate': float,
            'false_positive_rate_at1': float,
            'max_predictions': int,
            'precision': float,
            'precision_at1': float,
            'recall': float,
            'recall_at1': float,
            'true_negative_count': str,
            'true_positive_count': str
        }

        self.attribute_map = {
            'confidence_threshold': 'confidenceThreshold',
            'confusion_matrix': 'confusionMatrix',
            'f1_score': 'f1Score',
            'f1_score_at1': 'f1ScoreAt1',
            'f1_score_macro': 'f1ScoreMacro',
            'f1_score_micro': 'f1ScoreMicro',
            'false_negative_count': 'falseNegativeCount',
            'false_positive_count': 'falsePositiveCount',
            'false_positive_rate': 'falsePositiveRate',
            'false_positive_rate_at1': 'falsePositiveRateAt1',
            'max_predictions': 'maxPredictions',
            'precision': 'precision',
            'precision_at1': 'precisionAt1',
            'recall': 'recall',
            'recall_at1': 'recallAt1',
            'true_negative_count': 'trueNegativeCount',
            'true_positive_count': 'truePositiveCount'
        }

        self._confidence_threshold = confidence_threshold
        self._confusion_matrix = confusion_matrix
        self._f1_score = f1_score
        self._f1_score_at1 = f1_score_at1
        self._f1_score_macro = f1_score_macro
        self._f1_score_micro = f1_score_micro
        self._false_negative_count = false_negative_count
        self._false_positive_count = false_positive_count
        self._false_positive_rate = false_positive_rate
        self._false_positive_rate_at1 = false_positive_rate_at1
        self._max_predictions = max_predictions
        self._precision = precision
        self._precision_at1 = precision_at1
        self._recall = recall
        self._recall_at1 = recall_at1
        self._true_negative_count = true_negative_count
        self._true_positive_count = true_positive_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence_threshold(self):
        """Gets the confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Metrics are computed with an assumption that the Model never returns predictions with score lower than this value.

        :return: The confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._confidence_threshold

    @confidence_threshold.setter
    def confidence_threshold(self, confidence_threshold):
        """Sets the confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Metrics are computed with an assumption that the Model never returns predictions with score lower than this value.

        :param confidence_threshold: The confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type confidence_threshold: float
        """

        self._confidence_threshold = confidence_threshold

    @property
    def confusion_matrix(self):
        """Gets the confusion_matrix of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.


        :return: The confusion_matrix of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix
        """
        return self._confusion_matrix

    @confusion_matrix.setter
    def confusion_matrix(self, confusion_matrix):
        """Sets the confusion_matrix of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.


        :param confusion_matrix: The confusion_matrix of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type confusion_matrix: GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix
        """

        self._confusion_matrix = confusion_matrix

    @property
    def f1_score(self):
        """Gets the f1_score of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The harmonic mean of recall and precision. For summary metrics, it computes the micro-averaged F1 score.

        :return: The f1_score of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._f1_score

    @f1_score.setter
    def f1_score(self, f1_score):
        """Sets the f1_score of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The harmonic mean of recall and precision. For summary metrics, it computes the micro-averaged F1 score.

        :param f1_score: The f1_score of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type f1_score: float
        """

        self._f1_score = f1_score

    @property
    def f1_score_at1(self):
        """Gets the f1_score_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The harmonic mean of recallAt1 and precisionAt1.

        :return: The f1_score_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._f1_score_at1

    @f1_score_at1.setter
    def f1_score_at1(self, f1_score_at1):
        """Sets the f1_score_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The harmonic mean of recallAt1 and precisionAt1.

        :param f1_score_at1: The f1_score_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type f1_score_at1: float
        """

        self._f1_score_at1 = f1_score_at1

    @property
    def f1_score_macro(self):
        """Gets the f1_score_macro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Macro-averaged F1 Score.

        :return: The f1_score_macro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._f1_score_macro

    @f1_score_macro.setter
    def f1_score_macro(self, f1_score_macro):
        """Sets the f1_score_macro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Macro-averaged F1 Score.

        :param f1_score_macro: The f1_score_macro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type f1_score_macro: float
        """

        self._f1_score_macro = f1_score_macro

    @property
    def f1_score_micro(self):
        """Gets the f1_score_micro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Micro-averaged F1 Score.

        :return: The f1_score_micro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._f1_score_micro

    @f1_score_micro.setter
    def f1_score_micro(self, f1_score_micro):
        """Sets the f1_score_micro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Micro-averaged F1 Score.

        :param f1_score_micro: The f1_score_micro of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type f1_score_micro: float
        """

        self._f1_score_micro = f1_score_micro

    @property
    def false_negative_count(self):
        """Gets the false_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The number of ground truth labels that are not matched by a Model created label.

        :return: The false_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: str
        """
        return self._false_negative_count

    @false_negative_count.setter
    def false_negative_count(self, false_negative_count):
        """Sets the false_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The number of ground truth labels that are not matched by a Model created label.

        :param false_negative_count: The false_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type false_negative_count: str
        """

        self._false_negative_count = false_negative_count

    @property
    def false_positive_count(self):
        """Gets the false_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The number of Model created labels that do not match a ground truth label.

        :return: The false_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: str
        """
        return self._false_positive_count

    @false_positive_count.setter
    def false_positive_count(self, false_positive_count):
        """Sets the false_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The number of Model created labels that do not match a ground truth label.

        :param false_positive_count: The false_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type false_positive_count: str
        """

        self._false_positive_count = false_positive_count

    @property
    def false_positive_rate(self):
        """Gets the false_positive_rate of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        False Positive Rate for the given confidence threshold.

        :return: The false_positive_rate of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._false_positive_rate

    @false_positive_rate.setter
    def false_positive_rate(self, false_positive_rate):
        """Sets the false_positive_rate of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        False Positive Rate for the given confidence threshold.

        :param false_positive_rate: The false_positive_rate of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type false_positive_rate: float
        """

        self._false_positive_rate = false_positive_rate

    @property
    def false_positive_rate_at1(self):
        """Gets the false_positive_rate_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The False Positive Rate when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.

        :return: The false_positive_rate_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._false_positive_rate_at1

    @false_positive_rate_at1.setter
    def false_positive_rate_at1(self, false_positive_rate_at1):
        """Sets the false_positive_rate_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The False Positive Rate when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.

        :param false_positive_rate_at1: The false_positive_rate_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type false_positive_rate_at1: float
        """

        self._false_positive_rate_at1 = false_positive_rate_at1

    @property
    def max_predictions(self):
        """Gets the max_predictions of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Metrics are computed with an assumption that the Model always returns at most this many predictions (ordered by their score, descendingly), but they all still need to meet the `confidenceThreshold`.

        :return: The max_predictions of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: int
        """
        return self._max_predictions

    @max_predictions.setter
    def max_predictions(self, max_predictions):
        """Sets the max_predictions of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Metrics are computed with an assumption that the Model always returns at most this many predictions (ordered by their score, descendingly), but they all still need to meet the `confidenceThreshold`.

        :param max_predictions: The max_predictions of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type max_predictions: int
        """

        self._max_predictions = max_predictions

    @property
    def precision(self):
        """Gets the precision of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Precision for the given confidence threshold.

        :return: The precision of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._precision

    @precision.setter
    def precision(self, precision):
        """Sets the precision of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Precision for the given confidence threshold.

        :param precision: The precision of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type precision: float
        """

        self._precision = precision

    @property
    def precision_at1(self):
        """Gets the precision_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The precision when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.

        :return: The precision_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._precision_at1

    @precision_at1.setter
    def precision_at1(self, precision_at1):
        """Sets the precision_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The precision when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.

        :param precision_at1: The precision_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type precision_at1: float
        """

        self._precision_at1 = precision_at1

    @property
    def recall(self):
        """Gets the recall of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Recall (True Positive Rate) for the given confidence threshold.

        :return: The recall of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._recall

    @recall.setter
    def recall(self, recall):
        """Sets the recall of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        Recall (True Positive Rate) for the given confidence threshold.

        :param recall: The recall of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type recall: float
        """

        self._recall = recall

    @property
    def recall_at1(self):
        """Gets the recall_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The Recall (True Positive Rate) when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.

        :return: The recall_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: float
        """
        return self._recall_at1

    @recall_at1.setter
    def recall_at1(self, recall_at1):
        """Sets the recall_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The Recall (True Positive Rate) when only considering the label that has the highest prediction score and not below the confidence threshold for each DataItem.

        :param recall_at1: The recall_at1 of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type recall_at1: float
        """

        self._recall_at1 = recall_at1

    @property
    def true_negative_count(self):
        """Gets the true_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The number of labels that were not created by the Model, but if they would, they would not match a ground truth label.

        :return: The true_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: str
        """
        return self._true_negative_count

    @true_negative_count.setter
    def true_negative_count(self, true_negative_count):
        """Sets the true_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The number of labels that were not created by the Model, but if they would, they would not match a ground truth label.

        :param true_negative_count: The true_negative_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type true_negative_count: str
        """

        self._true_negative_count = true_negative_count

    @property
    def true_positive_count(self):
        """Gets the true_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The number of Model created labels that match a ground truth label.

        :return: The true_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :rtype: str
        """
        return self._true_positive_count

    @true_positive_count.setter
    def true_positive_count(self, true_positive_count):
        """Sets the true_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.

        The number of Model created labels that match a ground truth label.

        :param true_positive_count: The true_positive_count of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.
        :type true_positive_count: str
        """

        self._true_positive_count = true_positive_count
