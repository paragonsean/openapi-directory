# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_ai_nl_llm_proto_service_candidate import CloudAiNlLlmProtoServiceCandidate
from openapi_server.models.cloud_ai_nl_llm_proto_service_fact import CloudAiNlLlmProtoServiceFact
from openapi_server.models.cloud_ai_nl_llm_proto_service_message_metadata import CloudAiNlLlmProtoServiceMessageMetadata
from openapi_server.models.cloud_ai_nl_llm_proto_service_prompt_feedback import CloudAiNlLlmProtoServicePromptFeedback
from openapi_server.models.cloud_ai_nl_llm_proto_service_usage_metadata import CloudAiNlLlmProtoServiceUsageMetadata
from openapi_server.models.intelligence_cloud_automl_xps_reporting_metrics import IntelligenceCloudAutomlXpsReportingMetrics
from openapi_server import util


class CloudAiNlLlmProtoServiceGenerateMultiModalResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, candidates: List[CloudAiNlLlmProtoServiceCandidate]=None, debug_metadata: CloudAiNlLlmProtoServiceMessageMetadata=None, facts: List[CloudAiNlLlmProtoServiceFact]=None, prompt_feedback: CloudAiNlLlmProtoServicePromptFeedback=None, reporting_metrics: IntelligenceCloudAutomlXpsReportingMetrics=None, usage_metadata: CloudAiNlLlmProtoServiceUsageMetadata=None):
        """CloudAiNlLlmProtoServiceGenerateMultiModalResponse - a model defined in OpenAPI

        :param candidates: The candidates of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :param debug_metadata: The debug_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :param facts: The facts of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :param prompt_feedback: The prompt_feedback of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :param reporting_metrics: The reporting_metrics of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :param usage_metadata: The usage_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        """
        self.openapi_types = {
            'candidates': List[CloudAiNlLlmProtoServiceCandidate],
            'debug_metadata': CloudAiNlLlmProtoServiceMessageMetadata,
            'facts': List[CloudAiNlLlmProtoServiceFact],
            'prompt_feedback': CloudAiNlLlmProtoServicePromptFeedback,
            'reporting_metrics': IntelligenceCloudAutomlXpsReportingMetrics,
            'usage_metadata': CloudAiNlLlmProtoServiceUsageMetadata
        }

        self.attribute_map = {
            'candidates': 'candidates',
            'debug_metadata': 'debugMetadata',
            'facts': 'facts',
            'prompt_feedback': 'promptFeedback',
            'reporting_metrics': 'reportingMetrics',
            'usage_metadata': 'usageMetadata'
        }

        self._candidates = candidates
        self._debug_metadata = debug_metadata
        self._facts = facts
        self._prompt_feedback = prompt_feedback
        self._reporting_metrics = reporting_metrics
        self._usage_metadata = usage_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudAiNlLlmProtoServiceGenerateMultiModalResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudAiNlLlmProtoServiceGenerateMultiModalResponse of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def candidates(self):
        """Gets the candidates of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.

        Possible candidate responses to the conversation up until this point.

        :return: The candidates of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :rtype: List[CloudAiNlLlmProtoServiceCandidate]
        """
        return self._candidates

    @candidates.setter
    def candidates(self, candidates):
        """Sets the candidates of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.

        Possible candidate responses to the conversation up until this point.

        :param candidates: The candidates of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :type candidates: List[CloudAiNlLlmProtoServiceCandidate]
        """

        self._candidates = candidates

    @property
    def debug_metadata(self):
        """Gets the debug_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.


        :return: The debug_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :rtype: CloudAiNlLlmProtoServiceMessageMetadata
        """
        return self._debug_metadata

    @debug_metadata.setter
    def debug_metadata(self, debug_metadata):
        """Sets the debug_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.


        :param debug_metadata: The debug_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :type debug_metadata: CloudAiNlLlmProtoServiceMessageMetadata
        """

        self._debug_metadata = debug_metadata

    @property
    def facts(self):
        """Gets the facts of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.

        External facts retrieved for factuality/grounding.

        :return: The facts of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :rtype: List[CloudAiNlLlmProtoServiceFact]
        """
        return self._facts

    @facts.setter
    def facts(self, facts):
        """Sets the facts of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.

        External facts retrieved for factuality/grounding.

        :param facts: The facts of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :type facts: List[CloudAiNlLlmProtoServiceFact]
        """

        self._facts = facts

    @property
    def prompt_feedback(self):
        """Gets the prompt_feedback of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.


        :return: The prompt_feedback of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :rtype: CloudAiNlLlmProtoServicePromptFeedback
        """
        return self._prompt_feedback

    @prompt_feedback.setter
    def prompt_feedback(self, prompt_feedback):
        """Sets the prompt_feedback of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.


        :param prompt_feedback: The prompt_feedback of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :type prompt_feedback: CloudAiNlLlmProtoServicePromptFeedback
        """

        self._prompt_feedback = prompt_feedback

    @property
    def reporting_metrics(self):
        """Gets the reporting_metrics of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.


        :return: The reporting_metrics of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :rtype: IntelligenceCloudAutomlXpsReportingMetrics
        """
        return self._reporting_metrics

    @reporting_metrics.setter
    def reporting_metrics(self, reporting_metrics):
        """Sets the reporting_metrics of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.


        :param reporting_metrics: The reporting_metrics of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :type reporting_metrics: IntelligenceCloudAutomlXpsReportingMetrics
        """

        self._reporting_metrics = reporting_metrics

    @property
    def usage_metadata(self):
        """Gets the usage_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.


        :return: The usage_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :rtype: CloudAiNlLlmProtoServiceUsageMetadata
        """
        return self._usage_metadata

    @usage_metadata.setter
    def usage_metadata(self, usage_metadata):
        """Sets the usage_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.


        :param usage_metadata: The usage_metadata of this CloudAiNlLlmProtoServiceGenerateMultiModalResponse.
        :type usage_metadata: CloudAiNlLlmProtoServiceUsageMetadata
        """

        self._usage_metadata = usage_metadata
