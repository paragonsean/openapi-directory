# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitor_interval: str=None, monitor_window: str=None):
        """GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig - a model defined in OpenAPI

        :param monitor_interval: The monitor_interval of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.
        :param monitor_window: The monitor_window of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.
        """
        self.openapi_types = {
            'monitor_interval': str,
            'monitor_window': str
        }

        self.attribute_map = {
            'monitor_interval': 'monitorInterval',
            'monitor_window': 'monitorWindow'
        }

        self._monitor_interval = monitor_interval
        self._monitor_window = monitor_window

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitor_interval(self):
        """Gets the monitor_interval of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.

        Required. The model monitoring job scheduling interval. It will be rounded up to next full hour. This defines how often the monitoring jobs are triggered.

        :return: The monitor_interval of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.
        :rtype: str
        """
        return self._monitor_interval

    @monitor_interval.setter
    def monitor_interval(self, monitor_interval):
        """Sets the monitor_interval of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.

        Required. The model monitoring job scheduling interval. It will be rounded up to next full hour. This defines how often the monitoring jobs are triggered.

        :param monitor_interval: The monitor_interval of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.
        :type monitor_interval: str
        """

        self._monitor_interval = monitor_interval

    @property
    def monitor_window(self):
        """Gets the monitor_window of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.

        The time window of the prediction data being included in each prediction dataset. This window specifies how long the data should be collected from historical model results for each run. If not set, ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g. If currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window is set to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00 will be retrieved and aggregated to calculate the monitoring statistics.

        :return: The monitor_window of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.
        :rtype: str
        """
        return self._monitor_window

    @monitor_window.setter
    def monitor_window(self, monitor_window):
        """Sets the monitor_window of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.

        The time window of the prediction data being included in each prediction dataset. This window specifies how long the data should be collected from historical model results for each run. If not set, ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g. If currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window is set to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00 will be retrieved and aggregated to calculate the monitoring statistics.

        :param monitor_window: The monitor_window of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.
        :type monitor_window: str
        """

        self._monitor_window = monitor_window
