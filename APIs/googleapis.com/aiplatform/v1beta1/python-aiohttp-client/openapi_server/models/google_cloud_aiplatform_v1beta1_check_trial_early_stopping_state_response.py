# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, should_stop: bool=None):
        """GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse - a model defined in OpenAPI

        :param should_stop: The should_stop of this GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse.
        """
        self.openapi_types = {
            'should_stop': bool
        }

        self.attribute_map = {
            'should_stop': 'shouldStop'
        }

        self._should_stop = should_stop

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse of this GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def should_stop(self):
        """Gets the should_stop of this GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse.

        True if the Trial should stop.

        :return: The should_stop of this GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse.
        :rtype: bool
        """
        return self._should_stop

    @should_stop.setter
    def should_stop(self, should_stop):
        """Sets the should_stop of this GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse.

        True if the Trial should stop.

        :param should_stop: The should_stop of this GoogleCloudAiplatformV1beta1CheckTrialEarlyStoppingStateResponse.
        :type should_stop: bool
        """

        self._should_stop = should_stop
