# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_deployed_model import GoogleCloudAiplatformV1beta1DeployedModel
from openapi_server.models.google_cloud_aiplatform_v1beta1_encryption_spec import GoogleCloudAiplatformV1beta1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_predict_request_response_logging_config import GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig
from openapi_server.models.google_cloud_aiplatform_v1beta1_private_service_connect_config import GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig
from openapi_server import util


class GoogleCloudAiplatformV1beta1Endpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, deployed_models: List[GoogleCloudAiplatformV1beta1DeployedModel]=None, description: str=None, display_name: str=None, enable_private_service_connect: bool=None, encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec=None, etag: str=None, labels: Dict[str, str]=None, model_deployment_monitoring_job: str=None, name: str=None, network: str=None, predict_request_response_logging_config: GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig=None, private_service_connect_config: GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig=None, traffic_split: Dict[str, int]=None, update_time: str=None):
        """GoogleCloudAiplatformV1beta1Endpoint - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1Endpoint.
        :param deployed_models: The deployed_models of this GoogleCloudAiplatformV1beta1Endpoint.
        :param description: The description of this GoogleCloudAiplatformV1beta1Endpoint.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1Endpoint.
        :param enable_private_service_connect: The enable_private_service_connect of this GoogleCloudAiplatformV1beta1Endpoint.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1Endpoint.
        :param etag: The etag of this GoogleCloudAiplatformV1beta1Endpoint.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1Endpoint.
        :param model_deployment_monitoring_job: The model_deployment_monitoring_job of this GoogleCloudAiplatformV1beta1Endpoint.
        :param name: The name of this GoogleCloudAiplatformV1beta1Endpoint.
        :param network: The network of this GoogleCloudAiplatformV1beta1Endpoint.
        :param predict_request_response_logging_config: The predict_request_response_logging_config of this GoogleCloudAiplatformV1beta1Endpoint.
        :param private_service_connect_config: The private_service_connect_config of this GoogleCloudAiplatformV1beta1Endpoint.
        :param traffic_split: The traffic_split of this GoogleCloudAiplatformV1beta1Endpoint.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1Endpoint.
        """
        self.openapi_types = {
            'create_time': str,
            'deployed_models': List[GoogleCloudAiplatformV1beta1DeployedModel],
            'description': str,
            'display_name': str,
            'enable_private_service_connect': bool,
            'encryption_spec': GoogleCloudAiplatformV1beta1EncryptionSpec,
            'etag': str,
            'labels': Dict[str, str],
            'model_deployment_monitoring_job': str,
            'name': str,
            'network': str,
            'predict_request_response_logging_config': GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig,
            'private_service_connect_config': GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig,
            'traffic_split': Dict[str, int],
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'deployed_models': 'deployedModels',
            'description': 'description',
            'display_name': 'displayName',
            'enable_private_service_connect': 'enablePrivateServiceConnect',
            'encryption_spec': 'encryptionSpec',
            'etag': 'etag',
            'labels': 'labels',
            'model_deployment_monitoring_job': 'modelDeploymentMonitoringJob',
            'name': 'name',
            'network': 'network',
            'predict_request_response_logging_config': 'predictRequestResponseLoggingConfig',
            'private_service_connect_config': 'privateServiceConnectConfig',
            'traffic_split': 'trafficSplit',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._deployed_models = deployed_models
        self._description = description
        self._display_name = display_name
        self._enable_private_service_connect = enable_private_service_connect
        self._encryption_spec = encryption_spec
        self._etag = etag
        self._labels = labels
        self._model_deployment_monitoring_job = model_deployment_monitoring_job
        self._name = name
        self._network = network
        self._predict_request_response_logging_config = predict_request_response_logging_config
        self._private_service_connect_config = private_service_connect_config
        self._traffic_split = traffic_split
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1Endpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1Endpoint of this GoogleCloudAiplatformV1beta1Endpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. Timestamp when this Endpoint was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. Timestamp when this Endpoint was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1Endpoint.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def deployed_models(self):
        """Gets the deployed_models of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.

        :return: The deployed_models of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: List[GoogleCloudAiplatformV1beta1DeployedModel]
        """
        return self._deployed_models

    @deployed_models.setter
    def deployed_models(self, deployed_models):
        """Sets the deployed_models of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. The models deployed in this Endpoint. To add or remove DeployedModels use EndpointService.DeployModel and EndpointService.UndeployModel respectively.

        :param deployed_models: The deployed_models of this GoogleCloudAiplatformV1beta1Endpoint.
        :type deployed_models: List[GoogleCloudAiplatformV1beta1DeployedModel]
        """

        self._deployed_models = deployed_models

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1beta1Endpoint.

        The description of the Endpoint.

        :return: The description of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1beta1Endpoint.

        The description of the Endpoint.

        :param description: The description of this GoogleCloudAiplatformV1beta1Endpoint.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1Endpoint.

        Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :return: The display_name of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1Endpoint.

        Required. The display name of the Endpoint. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1Endpoint.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enable_private_service_connect(self):
        """Gets the enable_private_service_connect of this GoogleCloudAiplatformV1beta1Endpoint.

        Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.

        :return: The enable_private_service_connect of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: bool
        """
        return self._enable_private_service_connect

    @enable_private_service_connect.setter
    def enable_private_service_connect(self, enable_private_service_connect):
        """Sets the enable_private_service_connect of this GoogleCloudAiplatformV1beta1Endpoint.

        Deprecated: If true, expose the Endpoint via private service connect. Only one of the fields, network or enable_private_service_connect, can be set.

        :param enable_private_service_connect: The enable_private_service_connect of this GoogleCloudAiplatformV1beta1Endpoint.
        :type enable_private_service_connect: bool
        """

        self._enable_private_service_connect = enable_private_service_connect

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1beta1Endpoint.


        :return: The encryption_spec of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: GoogleCloudAiplatformV1beta1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1beta1Endpoint.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1Endpoint.
        :type encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1beta1Endpoint.

        Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1beta1Endpoint.

        Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1beta1Endpoint.
        :type etag: str
        """

        self._etag = etag

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1Endpoint.

        The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :return: The labels of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1Endpoint.

        The labels with user-defined metadata to organize your Endpoints. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1Endpoint.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def model_deployment_monitoring_job(self):
        """Gets the model_deployment_monitoring_job of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`

        :return: The model_deployment_monitoring_job of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: str
        """
        return self._model_deployment_monitoring_job

    @model_deployment_monitoring_job.setter
    def model_deployment_monitoring_job(self, model_deployment_monitoring_job):
        """Sets the model_deployment_monitoring_job of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. Resource name of the Model Monitoring job associated with this Endpoint if monitoring is enabled by JobService.CreateModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`

        :param model_deployment_monitoring_job: The model_deployment_monitoring_job of this GoogleCloudAiplatformV1beta1Endpoint.
        :type model_deployment_monitoring_job: str
        """

        self._model_deployment_monitoring_job = model_deployment_monitoring_job

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. The resource name of the Endpoint.

        :return: The name of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. The resource name of the Endpoint.

        :param name: The name of this GoogleCloudAiplatformV1beta1Endpoint.
        :type name: str
        """

        self._name = name

    @property
    def network(self):
        """Gets the network of this GoogleCloudAiplatformV1beta1Endpoint.

        Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name.

        :return: The network of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GoogleCloudAiplatformV1beta1Endpoint.

        Optional. The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the Endpoint should be peered. Private services access must already be configured for the network. If left unspecified, the Endpoint is not peered with any network. Only one of the fields, network or enable_private_service_connect, can be set. [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`. Where `{project}` is a project number, as in `12345`, and `{network}` is network name.

        :param network: The network of this GoogleCloudAiplatformV1beta1Endpoint.
        :type network: str
        """

        self._network = network

    @property
    def predict_request_response_logging_config(self):
        """Gets the predict_request_response_logging_config of this GoogleCloudAiplatformV1beta1Endpoint.


        :return: The predict_request_response_logging_config of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig
        """
        return self._predict_request_response_logging_config

    @predict_request_response_logging_config.setter
    def predict_request_response_logging_config(self, predict_request_response_logging_config):
        """Sets the predict_request_response_logging_config of this GoogleCloudAiplatformV1beta1Endpoint.


        :param predict_request_response_logging_config: The predict_request_response_logging_config of this GoogleCloudAiplatformV1beta1Endpoint.
        :type predict_request_response_logging_config: GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig
        """

        self._predict_request_response_logging_config = predict_request_response_logging_config

    @property
    def private_service_connect_config(self):
        """Gets the private_service_connect_config of this GoogleCloudAiplatformV1beta1Endpoint.


        :return: The private_service_connect_config of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig
        """
        return self._private_service_connect_config

    @private_service_connect_config.setter
    def private_service_connect_config(self, private_service_connect_config):
        """Sets the private_service_connect_config of this GoogleCloudAiplatformV1beta1Endpoint.


        :param private_service_connect_config: The private_service_connect_config of this GoogleCloudAiplatformV1beta1Endpoint.
        :type private_service_connect_config: GoogleCloudAiplatformV1beta1PrivateServiceConnectConfig
        """

        self._private_service_connect_config = private_service_connect_config

    @property
    def traffic_split(self):
        """Gets the traffic_split of this GoogleCloudAiplatformV1beta1Endpoint.

        A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.

        :return: The traffic_split of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: Dict[str, int]
        """
        return self._traffic_split

    @traffic_split.setter
    def traffic_split(self, traffic_split):
        """Sets the traffic_split of this GoogleCloudAiplatformV1beta1Endpoint.

        A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If a DeployedModel's ID is not listed in this map, then it receives no traffic. The traffic percentage values must add up to 100, or map must be empty if the Endpoint is to not accept any traffic at a moment.

        :param traffic_split: The traffic_split of this GoogleCloudAiplatformV1beta1Endpoint.
        :type traffic_split: Dict[str, int]
        """

        self._traffic_split = traffic_split

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. Timestamp when this Endpoint was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1beta1Endpoint.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1Endpoint.

        Output only. Timestamp when this Endpoint was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1Endpoint.
        :type update_time: str
        """

        self._update_time = update_time
