# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1AutomaticResources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_replica_count: int=None, min_replica_count: int=None):
        """GoogleCloudAiplatformV1beta1AutomaticResources - a model defined in OpenAPI

        :param max_replica_count: The max_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.
        :param min_replica_count: The min_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.
        """
        self.openapi_types = {
            'max_replica_count': int,
            'min_replica_count': int
        }

        self.attribute_map = {
            'max_replica_count': 'maxReplicaCount',
            'min_replica_count': 'minReplicaCount'
        }

        self._max_replica_count = max_replica_count
        self._min_replica_count = min_replica_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1AutomaticResources':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1AutomaticResources of this GoogleCloudAiplatformV1beta1AutomaticResources.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_replica_count(self):
        """Gets the max_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.

        Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number.

        :return: The max_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.
        :rtype: int
        """
        return self._max_replica_count

    @max_replica_count.setter
    def max_replica_count(self, max_replica_count):
        """Sets the max_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.

        Immutable. The maximum number of replicas this DeployedModel may be deployed on when the traffic against it increases. If the requested value is too large, the deployment will error, but if deployment succeeds then the ability to scale the model to that many replicas is guaranteed (barring service outages). If traffic against the DeployedModel increases beyond what its replicas at maximum may handle, a portion of the traffic will be dropped. If this value is not provided, a no upper bound for scaling under heavy traffic will be assume, though Vertex AI may be unable to scale beyond certain replica number.

        :param max_replica_count: The max_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.
        :type max_replica_count: int
        """

        self._max_replica_count = max_replica_count

    @property
    def min_replica_count(self):
        """Gets the min_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.

        Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.

        :return: The min_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.
        :rtype: int
        """
        return self._min_replica_count

    @min_replica_count.setter
    def min_replica_count(self, min_replica_count):
        """Sets the min_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.

        Immutable. The minimum number of replicas this DeployedModel will be always deployed on. If traffic against it increases, it may dynamically be deployed onto more replicas up to max_replica_count, and as traffic decreases, some of these extra replicas may be freed. If the requested value is too large, the deployment will error.

        :param min_replica_count: The min_replica_count of this GoogleCloudAiplatformV1beta1AutomaticResources.
        :type min_replica_count: int
        """

        self._min_replica_count = min_replica_count
