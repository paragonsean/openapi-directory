# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_ray_metric_spec import GoogleCloudAiplatformV1beta1RayMetricSpec
from openapi_server import util


class GoogleCloudAiplatformV1beta1RaySpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, head_node_resource_pool_id: str=None, image_uri: str=None, ray_metric_spec: GoogleCloudAiplatformV1beta1RayMetricSpec=None, resource_pool_images: Dict[str, str]=None):
        """GoogleCloudAiplatformV1beta1RaySpec - a model defined in OpenAPI

        :param head_node_resource_pool_id: The head_node_resource_pool_id of this GoogleCloudAiplatformV1beta1RaySpec.
        :param image_uri: The image_uri of this GoogleCloudAiplatformV1beta1RaySpec.
        :param ray_metric_spec: The ray_metric_spec of this GoogleCloudAiplatformV1beta1RaySpec.
        :param resource_pool_images: The resource_pool_images of this GoogleCloudAiplatformV1beta1RaySpec.
        """
        self.openapi_types = {
            'head_node_resource_pool_id': str,
            'image_uri': str,
            'ray_metric_spec': GoogleCloudAiplatformV1beta1RayMetricSpec,
            'resource_pool_images': Dict[str, str]
        }

        self.attribute_map = {
            'head_node_resource_pool_id': 'headNodeResourcePoolId',
            'image_uri': 'imageUri',
            'ray_metric_spec': 'rayMetricSpec',
            'resource_pool_images': 'resourcePoolImages'
        }

        self._head_node_resource_pool_id = head_node_resource_pool_id
        self._image_uri = image_uri
        self._ray_metric_spec = ray_metric_spec
        self._resource_pool_images = resource_pool_images

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1RaySpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1RaySpec of this GoogleCloudAiplatformV1beta1RaySpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def head_node_resource_pool_id(self):
        """Gets the head_node_resource_pool_id of this GoogleCloudAiplatformV1beta1RaySpec.

        Optional. This will be used to indicate which resource pool will serve as the Ray head node(the first node within that pool). Will use the machine from the first workerpool as the head node by default if this field isn't set.

        :return: The head_node_resource_pool_id of this GoogleCloudAiplatformV1beta1RaySpec.
        :rtype: str
        """
        return self._head_node_resource_pool_id

    @head_node_resource_pool_id.setter
    def head_node_resource_pool_id(self, head_node_resource_pool_id):
        """Sets the head_node_resource_pool_id of this GoogleCloudAiplatformV1beta1RaySpec.

        Optional. This will be used to indicate which resource pool will serve as the Ray head node(the first node within that pool). Will use the machine from the first workerpool as the head node by default if this field isn't set.

        :param head_node_resource_pool_id: The head_node_resource_pool_id of this GoogleCloudAiplatformV1beta1RaySpec.
        :type head_node_resource_pool_id: str
        """

        self._head_node_resource_pool_id = head_node_resource_pool_id

    @property
    def image_uri(self):
        """Gets the image_uri of this GoogleCloudAiplatformV1beta1RaySpec.

        Optional. Default image for user to choose a preferred ML framework (for example, TensorFlow or Pytorch) by choosing from [Vertex prebuilt images](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). Either this or the resource_pool_images is required. Use this field if you need all the resource pools to have the same Ray image. Otherwise, use the {@code resource_pool_images} field.

        :return: The image_uri of this GoogleCloudAiplatformV1beta1RaySpec.
        :rtype: str
        """
        return self._image_uri

    @image_uri.setter
    def image_uri(self, image_uri):
        """Sets the image_uri of this GoogleCloudAiplatformV1beta1RaySpec.

        Optional. Default image for user to choose a preferred ML framework (for example, TensorFlow or Pytorch) by choosing from [Vertex prebuilt images](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). Either this or the resource_pool_images is required. Use this field if you need all the resource pools to have the same Ray image. Otherwise, use the {@code resource_pool_images} field.

        :param image_uri: The image_uri of this GoogleCloudAiplatformV1beta1RaySpec.
        :type image_uri: str
        """

        self._image_uri = image_uri

    @property
    def ray_metric_spec(self):
        """Gets the ray_metric_spec of this GoogleCloudAiplatformV1beta1RaySpec.


        :return: The ray_metric_spec of this GoogleCloudAiplatformV1beta1RaySpec.
        :rtype: GoogleCloudAiplatformV1beta1RayMetricSpec
        """
        return self._ray_metric_spec

    @ray_metric_spec.setter
    def ray_metric_spec(self, ray_metric_spec):
        """Sets the ray_metric_spec of this GoogleCloudAiplatformV1beta1RaySpec.


        :param ray_metric_spec: The ray_metric_spec of this GoogleCloudAiplatformV1beta1RaySpec.
        :type ray_metric_spec: GoogleCloudAiplatformV1beta1RayMetricSpec
        """

        self._ray_metric_spec = ray_metric_spec

    @property
    def resource_pool_images(self):
        """Gets the resource_pool_images of this GoogleCloudAiplatformV1beta1RaySpec.

        Optional. Required if image_uri isn't set. A map of resource_pool_id to prebuild Ray image if user need to use different images for different head/worker pools. This map needs to cover all the resource pool ids. Example: { \"ray_head_node_pool\": \"head image\" \"ray_worker_node_pool1\": \"worker image\" \"ray_worker_node_pool2\": \"another worker image\" }

        :return: The resource_pool_images of this GoogleCloudAiplatformV1beta1RaySpec.
        :rtype: Dict[str, str]
        """
        return self._resource_pool_images

    @resource_pool_images.setter
    def resource_pool_images(self, resource_pool_images):
        """Sets the resource_pool_images of this GoogleCloudAiplatformV1beta1RaySpec.

        Optional. Required if image_uri isn't set. A map of resource_pool_id to prebuild Ray image if user need to use different images for different head/worker pools. This map needs to cover all the resource pool ids. Example: { \"ray_head_node_pool\": \"head image\" \"ray_worker_node_pool1\": \"worker image\" \"ray_worker_node_pool2\": \"another worker image\" }

        :param resource_pool_images: The resource_pool_images of this GoogleCloudAiplatformV1beta1RaySpec.
        :type resource_pool_images: Dict[str, str]
        """

        self._resource_pool_images = resource_pool_images
