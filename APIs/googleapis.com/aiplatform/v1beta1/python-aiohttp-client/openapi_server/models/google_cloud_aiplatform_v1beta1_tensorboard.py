# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_encryption_spec import GoogleCloudAiplatformV1beta1EncryptionSpec
from openapi_server import util


class GoogleCloudAiplatformV1beta1Tensorboard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blob_storage_path_prefix: str=None, create_time: str=None, description: str=None, display_name: str=None, encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec=None, etag: str=None, is_default: bool=None, labels: Dict[str, str]=None, name: str=None, run_count: int=None, update_time: str=None):
        """GoogleCloudAiplatformV1beta1Tensorboard - a model defined in OpenAPI

        :param blob_storage_path_prefix: The blob_storage_path_prefix of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param description: The description of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param etag: The etag of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param is_default: The is_default of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param name: The name of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param run_count: The run_count of this GoogleCloudAiplatformV1beta1Tensorboard.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1Tensorboard.
        """
        self.openapi_types = {
            'blob_storage_path_prefix': str,
            'create_time': str,
            'description': str,
            'display_name': str,
            'encryption_spec': GoogleCloudAiplatformV1beta1EncryptionSpec,
            'etag': str,
            'is_default': bool,
            'labels': Dict[str, str],
            'name': str,
            'run_count': int,
            'update_time': str
        }

        self.attribute_map = {
            'blob_storage_path_prefix': 'blobStoragePathPrefix',
            'create_time': 'createTime',
            'description': 'description',
            'display_name': 'displayName',
            'encryption_spec': 'encryptionSpec',
            'etag': 'etag',
            'is_default': 'isDefault',
            'labels': 'labels',
            'name': 'name',
            'run_count': 'runCount',
            'update_time': 'updateTime'
        }

        self._blob_storage_path_prefix = blob_storage_path_prefix
        self._create_time = create_time
        self._description = description
        self._display_name = display_name
        self._encryption_spec = encryption_spec
        self._etag = etag
        self._is_default = is_default
        self._labels = labels
        self._name = name
        self._run_count = run_count
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1Tensorboard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1Tensorboard of this GoogleCloudAiplatformV1beta1Tensorboard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blob_storage_path_prefix(self):
        """Gets the blob_storage_path_prefix of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.

        :return: The blob_storage_path_prefix of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: str
        """
        return self._blob_storage_path_prefix

    @blob_storage_path_prefix.setter
    def blob_storage_path_prefix(self, blob_storage_path_prefix):
        """Sets the blob_storage_path_prefix of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.

        :param blob_storage_path_prefix: The blob_storage_path_prefix of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type blob_storage_path_prefix: str
        """

        self._blob_storage_path_prefix = blob_storage_path_prefix

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. Timestamp when this Tensorboard was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. Timestamp when this Tensorboard was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1beta1Tensorboard.

        Description of this Tensorboard.

        :return: The description of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1beta1Tensorboard.

        Description of this Tensorboard.

        :param description: The description of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1Tensorboard.

        Required. User provided name of this Tensorboard.

        :return: The display_name of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1Tensorboard.

        Required. User provided name of this Tensorboard.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1beta1Tensorboard.


        :return: The encryption_spec of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: GoogleCloudAiplatformV1beta1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1beta1Tensorboard.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1beta1Tensorboard.

        Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1beta1Tensorboard.

        Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type etag: str
        """

        self._etag = etag

    @property
    def is_default(self):
        """Gets the is_default of this GoogleCloudAiplatformV1beta1Tensorboard.

        Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.

        :return: The is_default of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this GoogleCloudAiplatformV1beta1Tensorboard.

        Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.

        :param is_default: The is_default of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1Tensorboard.

        The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :return: The labels of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1Tensorboard.

        The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`

        :return: The name of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`

        :param name: The name of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type name: str
        """

        self._name = name

    @property
    def run_count(self):
        """Gets the run_count of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. The number of Runs stored in this Tensorboard.

        :return: The run_count of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: int
        """
        return self._run_count

    @run_count.setter
    def run_count(self, run_count):
        """Sets the run_count of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. The number of Runs stored in this Tensorboard.

        :param run_count: The run_count of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type run_count: int
        """

        self._run_count = run_count

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. Timestamp when this Tensorboard was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1beta1Tensorboard.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1Tensorboard.

        Output only. Timestamp when this Tensorboard was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1Tensorboard.
        :type update_time: str
        """

        self._update_time = update_time
