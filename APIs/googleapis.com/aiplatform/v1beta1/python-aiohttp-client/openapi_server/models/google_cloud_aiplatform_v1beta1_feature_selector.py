# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_id_matcher import GoogleCloudAiplatformV1beta1IdMatcher
from openapi_server import util


class GoogleCloudAiplatformV1beta1FeatureSelector(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id_matcher: GoogleCloudAiplatformV1beta1IdMatcher=None):
        """GoogleCloudAiplatformV1beta1FeatureSelector - a model defined in OpenAPI

        :param id_matcher: The id_matcher of this GoogleCloudAiplatformV1beta1FeatureSelector.
        """
        self.openapi_types = {
            'id_matcher': GoogleCloudAiplatformV1beta1IdMatcher
        }

        self.attribute_map = {
            'id_matcher': 'idMatcher'
        }

        self._id_matcher = id_matcher

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1FeatureSelector':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1FeatureSelector of this GoogleCloudAiplatformV1beta1FeatureSelector.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_matcher(self):
        """Gets the id_matcher of this GoogleCloudAiplatformV1beta1FeatureSelector.


        :return: The id_matcher of this GoogleCloudAiplatformV1beta1FeatureSelector.
        :rtype: GoogleCloudAiplatformV1beta1IdMatcher
        """
        return self._id_matcher

    @id_matcher.setter
    def id_matcher(self, id_matcher):
        """Sets the id_matcher of this GoogleCloudAiplatformV1beta1FeatureSelector.


        :param id_matcher: The id_matcher of this GoogleCloudAiplatformV1beta1FeatureSelector.
        :type id_matcher: GoogleCloudAiplatformV1beta1IdMatcher
        """

        self._id_matcher = id_matcher
