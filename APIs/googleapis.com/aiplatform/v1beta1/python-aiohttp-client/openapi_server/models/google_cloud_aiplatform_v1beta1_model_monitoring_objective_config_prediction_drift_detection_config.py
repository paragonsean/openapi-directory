# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_threshold_config import GoogleCloudAiplatformV1beta1ThresholdConfig
from openapi_server import util


class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribution_score_drift_thresholds: Dict[str, GoogleCloudAiplatformV1beta1ThresholdConfig]=None, default_drift_threshold: GoogleCloudAiplatformV1beta1ThresholdConfig=None, drift_thresholds: Dict[str, GoogleCloudAiplatformV1beta1ThresholdConfig]=None):
        """GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig - a model defined in OpenAPI

        :param attribution_score_drift_thresholds: The attribution_score_drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        :param default_drift_threshold: The default_drift_threshold of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        :param drift_thresholds: The drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        """
        self.openapi_types = {
            'attribution_score_drift_thresholds': Dict[str, GoogleCloudAiplatformV1beta1ThresholdConfig],
            'default_drift_threshold': GoogleCloudAiplatformV1beta1ThresholdConfig,
            'drift_thresholds': Dict[str, GoogleCloudAiplatformV1beta1ThresholdConfig]
        }

        self.attribute_map = {
            'attribution_score_drift_thresholds': 'attributionScoreDriftThresholds',
            'default_drift_threshold': 'defaultDriftThreshold',
            'drift_thresholds': 'driftThresholds'
        }

        self._attribution_score_drift_thresholds = attribution_score_drift_thresholds
        self._default_drift_threshold = default_drift_threshold
        self._drift_thresholds = drift_thresholds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribution_score_drift_thresholds(self):
        """Gets the attribution_score_drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.

        Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows.

        :return: The attribution_score_drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        :rtype: Dict[str, GoogleCloudAiplatformV1beta1ThresholdConfig]
        """
        return self._attribution_score_drift_thresholds

    @attribution_score_drift_thresholds.setter
    def attribution_score_drift_thresholds(self, attribution_score_drift_thresholds):
        """Sets the attribution_score_drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.

        Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows.

        :param attribution_score_drift_thresholds: The attribution_score_drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        :type attribution_score_drift_thresholds: Dict[str, GoogleCloudAiplatformV1beta1ThresholdConfig]
        """

        self._attribution_score_drift_thresholds = attribution_score_drift_thresholds

    @property
    def default_drift_threshold(self):
        """Gets the default_drift_threshold of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.


        :return: The default_drift_threshold of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        :rtype: GoogleCloudAiplatformV1beta1ThresholdConfig
        """
        return self._default_drift_threshold

    @default_drift_threshold.setter
    def default_drift_threshold(self, default_drift_threshold):
        """Sets the default_drift_threshold of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.


        :param default_drift_threshold: The default_drift_threshold of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        :type default_drift_threshold: GoogleCloudAiplatformV1beta1ThresholdConfig
        """

        self._default_drift_threshold = default_drift_threshold

    @property
    def drift_thresholds(self):
        """Gets the drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.

        Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws.

        :return: The drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        :rtype: Dict[str, GoogleCloudAiplatformV1beta1ThresholdConfig]
        """
        return self._drift_thresholds

    @drift_thresholds.setter
    def drift_thresholds(self, drift_thresholds):
        """Sets the drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.

        Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws.

        :param drift_thresholds: The drift_thresholds of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.
        :type drift_thresholds: Dict[str, GoogleCloudAiplatformV1beta1ThresholdConfig]
        """

        self._drift_thresholds = drift_thresholds
