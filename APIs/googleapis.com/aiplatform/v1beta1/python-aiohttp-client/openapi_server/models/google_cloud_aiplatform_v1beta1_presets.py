# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1Presets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, modality: str=None, query: str=None):
        """GoogleCloudAiplatformV1beta1Presets - a model defined in OpenAPI

        :param modality: The modality of this GoogleCloudAiplatformV1beta1Presets.
        :param query: The query of this GoogleCloudAiplatformV1beta1Presets.
        """
        self.openapi_types = {
            'modality': str,
            'query': str
        }

        self.attribute_map = {
            'modality': 'modality',
            'query': 'query'
        }

        self._modality = modality
        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1Presets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1Presets of this GoogleCloudAiplatformV1beta1Presets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def modality(self):
        """Gets the modality of this GoogleCloudAiplatformV1beta1Presets.

        The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.

        :return: The modality of this GoogleCloudAiplatformV1beta1Presets.
        :rtype: str
        """
        return self._modality

    @modality.setter
    def modality(self, modality):
        """Sets the modality of this GoogleCloudAiplatformV1beta1Presets.

        The modality of the uploaded model, which automatically configures the distance measurement and feature normalization for the underlying example index and queries. If your model does not precisely fit one of these types, it is okay to choose the closest type.

        :param modality: The modality of this GoogleCloudAiplatformV1beta1Presets.
        :type modality: str
        """
        allowed_values = ["MODALITY_UNSPECIFIED", "IMAGE", "TEXT", "TABULAR"]  # noqa: E501
        if modality not in allowed_values:
            raise ValueError(
                "Invalid value for `modality` ({0}), must be one of {1}"
                .format(modality, allowed_values)
            )

        self._modality = modality

    @property
    def query(self):
        """Gets the query of this GoogleCloudAiplatformV1beta1Presets.

        Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.

        :return: The query of this GoogleCloudAiplatformV1beta1Presets.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this GoogleCloudAiplatformV1beta1Presets.

        Preset option controlling parameters for speed-precision trade-off when querying for examples. If omitted, defaults to `PRECISE`.

        :param query: The query of this GoogleCloudAiplatformV1beta1Presets.
        :type query: str
        """
        allowed_values = ["PRECISE", "FAST"]  # noqa: E501
        if query not in allowed_values:
            raise ValueError(
                "Invalid value for `query` ({0}), must be one of {1}"
                .format(query, allowed_values)
            )

        self._query = query
