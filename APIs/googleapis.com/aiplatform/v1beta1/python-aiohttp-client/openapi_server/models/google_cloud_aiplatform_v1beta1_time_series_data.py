# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_time_series_data_point import GoogleCloudAiplatformV1beta1TimeSeriesDataPoint
from openapi_server import util


class GoogleCloudAiplatformV1beta1TimeSeriesData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tensorboard_time_series_id: str=None, value_type: str=None, values: List[GoogleCloudAiplatformV1beta1TimeSeriesDataPoint]=None):
        """GoogleCloudAiplatformV1beta1TimeSeriesData - a model defined in OpenAPI

        :param tensorboard_time_series_id: The tensorboard_time_series_id of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        :param value_type: The value_type of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        :param values: The values of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        """
        self.openapi_types = {
            'tensorboard_time_series_id': str,
            'value_type': str,
            'values': List[GoogleCloudAiplatformV1beta1TimeSeriesDataPoint]
        }

        self.attribute_map = {
            'tensorboard_time_series_id': 'tensorboardTimeSeriesId',
            'value_type': 'valueType',
            'values': 'values'
        }

        self._tensorboard_time_series_id = tensorboard_time_series_id
        self._value_type = value_type
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1TimeSeriesData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1TimeSeriesData of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tensorboard_time_series_id(self):
        """Gets the tensorboard_time_series_id of this GoogleCloudAiplatformV1beta1TimeSeriesData.

        Required. The ID of the TensorboardTimeSeries, which will become the final component of the TensorboardTimeSeries' resource name

        :return: The tensorboard_time_series_id of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        :rtype: str
        """
        return self._tensorboard_time_series_id

    @tensorboard_time_series_id.setter
    def tensorboard_time_series_id(self, tensorboard_time_series_id):
        """Sets the tensorboard_time_series_id of this GoogleCloudAiplatformV1beta1TimeSeriesData.

        Required. The ID of the TensorboardTimeSeries, which will become the final component of the TensorboardTimeSeries' resource name

        :param tensorboard_time_series_id: The tensorboard_time_series_id of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        :type tensorboard_time_series_id: str
        """

        self._tensorboard_time_series_id = tensorboard_time_series_id

    @property
    def value_type(self):
        """Gets the value_type of this GoogleCloudAiplatformV1beta1TimeSeriesData.

        Required. Immutable. The value type of this time series. All the values in this time series data must match this value type.

        :return: The value_type of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        :rtype: str
        """
        return self._value_type

    @value_type.setter
    def value_type(self, value_type):
        """Sets the value_type of this GoogleCloudAiplatformV1beta1TimeSeriesData.

        Required. Immutable. The value type of this time series. All the values in this time series data must match this value type.

        :param value_type: The value_type of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        :type value_type: str
        """
        allowed_values = ["VALUE_TYPE_UNSPECIFIED", "SCALAR", "TENSOR", "BLOB_SEQUENCE"]  # noqa: E501
        if value_type not in allowed_values:
            raise ValueError(
                "Invalid value for `value_type` ({0}), must be one of {1}"
                .format(value_type, allowed_values)
            )

        self._value_type = value_type

    @property
    def values(self):
        """Gets the values of this GoogleCloudAiplatformV1beta1TimeSeriesData.

        Required. Data points in this time series.

        :return: The values of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        :rtype: List[GoogleCloudAiplatformV1beta1TimeSeriesDataPoint]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this GoogleCloudAiplatformV1beta1TimeSeriesData.

        Required. Data points in this time series.

        :param values: The values of this GoogleCloudAiplatformV1beta1TimeSeriesData.
        :type values: List[GoogleCloudAiplatformV1beta1TimeSeriesDataPoint]
        """

        self._values = values
