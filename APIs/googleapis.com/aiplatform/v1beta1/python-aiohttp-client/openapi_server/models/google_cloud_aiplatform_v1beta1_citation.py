# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_date import GoogleTypeDate
from openapi_server import util


class GoogleCloudAiplatformV1beta1Citation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_index: int=None, license: str=None, publication_date: GoogleTypeDate=None, start_index: int=None, title: str=None, uri: str=None):
        """GoogleCloudAiplatformV1beta1Citation - a model defined in OpenAPI

        :param end_index: The end_index of this GoogleCloudAiplatformV1beta1Citation.
        :param license: The license of this GoogleCloudAiplatformV1beta1Citation.
        :param publication_date: The publication_date of this GoogleCloudAiplatformV1beta1Citation.
        :param start_index: The start_index of this GoogleCloudAiplatformV1beta1Citation.
        :param title: The title of this GoogleCloudAiplatformV1beta1Citation.
        :param uri: The uri of this GoogleCloudAiplatformV1beta1Citation.
        """
        self.openapi_types = {
            'end_index': int,
            'license': str,
            'publication_date': GoogleTypeDate,
            'start_index': int,
            'title': str,
            'uri': str
        }

        self.attribute_map = {
            'end_index': 'endIndex',
            'license': 'license',
            'publication_date': 'publicationDate',
            'start_index': 'startIndex',
            'title': 'title',
            'uri': 'uri'
        }

        self._end_index = end_index
        self._license = license
        self._publication_date = publication_date
        self._start_index = start_index
        self._title = title
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1Citation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1Citation of this GoogleCloudAiplatformV1beta1Citation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_index(self):
        """Gets the end_index of this GoogleCloudAiplatformV1beta1Citation.

        Output only. End index into the content.

        :return: The end_index of this GoogleCloudAiplatformV1beta1Citation.
        :rtype: int
        """
        return self._end_index

    @end_index.setter
    def end_index(self, end_index):
        """Sets the end_index of this GoogleCloudAiplatformV1beta1Citation.

        Output only. End index into the content.

        :param end_index: The end_index of this GoogleCloudAiplatformV1beta1Citation.
        :type end_index: int
        """

        self._end_index = end_index

    @property
    def license(self):
        """Gets the license of this GoogleCloudAiplatformV1beta1Citation.

        Output only. License of the attribution.

        :return: The license of this GoogleCloudAiplatformV1beta1Citation.
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license):
        """Sets the license of this GoogleCloudAiplatformV1beta1Citation.

        Output only. License of the attribution.

        :param license: The license of this GoogleCloudAiplatformV1beta1Citation.
        :type license: str
        """

        self._license = license

    @property
    def publication_date(self):
        """Gets the publication_date of this GoogleCloudAiplatformV1beta1Citation.


        :return: The publication_date of this GoogleCloudAiplatformV1beta1Citation.
        :rtype: GoogleTypeDate
        """
        return self._publication_date

    @publication_date.setter
    def publication_date(self, publication_date):
        """Sets the publication_date of this GoogleCloudAiplatformV1beta1Citation.


        :param publication_date: The publication_date of this GoogleCloudAiplatformV1beta1Citation.
        :type publication_date: GoogleTypeDate
        """

        self._publication_date = publication_date

    @property
    def start_index(self):
        """Gets the start_index of this GoogleCloudAiplatformV1beta1Citation.

        Output only. Start index into the content.

        :return: The start_index of this GoogleCloudAiplatformV1beta1Citation.
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this GoogleCloudAiplatformV1beta1Citation.

        Output only. Start index into the content.

        :param start_index: The start_index of this GoogleCloudAiplatformV1beta1Citation.
        :type start_index: int
        """

        self._start_index = start_index

    @property
    def title(self):
        """Gets the title of this GoogleCloudAiplatformV1beta1Citation.

        Output only. Title of the attribution.

        :return: The title of this GoogleCloudAiplatformV1beta1Citation.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this GoogleCloudAiplatformV1beta1Citation.

        Output only. Title of the attribution.

        :param title: The title of this GoogleCloudAiplatformV1beta1Citation.
        :type title: str
        """

        self._title = title

    @property
    def uri(self):
        """Gets the uri of this GoogleCloudAiplatformV1beta1Citation.

        Output only. Url reference of the attribution.

        :return: The uri of this GoogleCloudAiplatformV1beta1Citation.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this GoogleCloudAiplatformV1beta1Citation.

        Output only. Url reference of the attribution.

        :param uri: The uri of this GoogleCloudAiplatformV1beta1Citation.
        :type uri: str
        """

        self._uri = uri
