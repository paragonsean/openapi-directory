# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_deployed_index_ref import GoogleCloudAiplatformV1beta1DeployedIndexRef
from openapi_server.models.google_cloud_aiplatform_v1beta1_encryption_spec import GoogleCloudAiplatformV1beta1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_index_stats import GoogleCloudAiplatformV1beta1IndexStats
from openapi_server import util


class GoogleCloudAiplatformV1beta1Index(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, deployed_indexes: List[GoogleCloudAiplatformV1beta1DeployedIndexRef]=None, description: str=None, display_name: str=None, encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec=None, etag: str=None, index_stats: GoogleCloudAiplatformV1beta1IndexStats=None, index_update_method: str=None, labels: Dict[str, str]=None, metadata: object=None, metadata_schema_uri: str=None, name: str=None, update_time: str=None):
        """GoogleCloudAiplatformV1beta1Index - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1Index.
        :param deployed_indexes: The deployed_indexes of this GoogleCloudAiplatformV1beta1Index.
        :param description: The description of this GoogleCloudAiplatformV1beta1Index.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1Index.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1Index.
        :param etag: The etag of this GoogleCloudAiplatformV1beta1Index.
        :param index_stats: The index_stats of this GoogleCloudAiplatformV1beta1Index.
        :param index_update_method: The index_update_method of this GoogleCloudAiplatformV1beta1Index.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1Index.
        :param metadata: The metadata of this GoogleCloudAiplatformV1beta1Index.
        :param metadata_schema_uri: The metadata_schema_uri of this GoogleCloudAiplatformV1beta1Index.
        :param name: The name of this GoogleCloudAiplatformV1beta1Index.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1Index.
        """
        self.openapi_types = {
            'create_time': str,
            'deployed_indexes': List[GoogleCloudAiplatformV1beta1DeployedIndexRef],
            'description': str,
            'display_name': str,
            'encryption_spec': GoogleCloudAiplatformV1beta1EncryptionSpec,
            'etag': str,
            'index_stats': GoogleCloudAiplatformV1beta1IndexStats,
            'index_update_method': str,
            'labels': Dict[str, str],
            'metadata': object,
            'metadata_schema_uri': str,
            'name': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'deployed_indexes': 'deployedIndexes',
            'description': 'description',
            'display_name': 'displayName',
            'encryption_spec': 'encryptionSpec',
            'etag': 'etag',
            'index_stats': 'indexStats',
            'index_update_method': 'indexUpdateMethod',
            'labels': 'labels',
            'metadata': 'metadata',
            'metadata_schema_uri': 'metadataSchemaUri',
            'name': 'name',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._deployed_indexes = deployed_indexes
        self._description = description
        self._display_name = display_name
        self._encryption_spec = encryption_spec
        self._etag = etag
        self._index_stats = index_stats
        self._index_update_method = index_update_method
        self._labels = labels
        self._metadata = metadata
        self._metadata_schema_uri = metadata_schema_uri
        self._name = name
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1Index':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1Index of this GoogleCloudAiplatformV1beta1Index.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1Index.

        Output only. Timestamp when this Index was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1Index.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1Index.

        Output only. Timestamp when this Index was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1Index.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def deployed_indexes(self):
        """Gets the deployed_indexes of this GoogleCloudAiplatformV1beta1Index.

        Output only. The pointers to DeployedIndexes created from this Index. An Index can be only deleted if all its DeployedIndexes had been undeployed first.

        :return: The deployed_indexes of this GoogleCloudAiplatformV1beta1Index.
        :rtype: List[GoogleCloudAiplatformV1beta1DeployedIndexRef]
        """
        return self._deployed_indexes

    @deployed_indexes.setter
    def deployed_indexes(self, deployed_indexes):
        """Sets the deployed_indexes of this GoogleCloudAiplatformV1beta1Index.

        Output only. The pointers to DeployedIndexes created from this Index. An Index can be only deleted if all its DeployedIndexes had been undeployed first.

        :param deployed_indexes: The deployed_indexes of this GoogleCloudAiplatformV1beta1Index.
        :type deployed_indexes: List[GoogleCloudAiplatformV1beta1DeployedIndexRef]
        """

        self._deployed_indexes = deployed_indexes

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1beta1Index.

        The description of the Index.

        :return: The description of this GoogleCloudAiplatformV1beta1Index.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1beta1Index.

        The description of the Index.

        :param description: The description of this GoogleCloudAiplatformV1beta1Index.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1Index.

        Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :return: The display_name of this GoogleCloudAiplatformV1beta1Index.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1Index.

        Required. The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1Index.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1beta1Index.


        :return: The encryption_spec of this GoogleCloudAiplatformV1beta1Index.
        :rtype: GoogleCloudAiplatformV1beta1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1beta1Index.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1Index.
        :type encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1beta1Index.

        Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1beta1Index.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1beta1Index.

        Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1beta1Index.
        :type etag: str
        """

        self._etag = etag

    @property
    def index_stats(self):
        """Gets the index_stats of this GoogleCloudAiplatformV1beta1Index.


        :return: The index_stats of this GoogleCloudAiplatformV1beta1Index.
        :rtype: GoogleCloudAiplatformV1beta1IndexStats
        """
        return self._index_stats

    @index_stats.setter
    def index_stats(self, index_stats):
        """Sets the index_stats of this GoogleCloudAiplatformV1beta1Index.


        :param index_stats: The index_stats of this GoogleCloudAiplatformV1beta1Index.
        :type index_stats: GoogleCloudAiplatformV1beta1IndexStats
        """

        self._index_stats = index_stats

    @property
    def index_update_method(self):
        """Gets the index_update_method of this GoogleCloudAiplatformV1beta1Index.

        Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default.

        :return: The index_update_method of this GoogleCloudAiplatformV1beta1Index.
        :rtype: str
        """
        return self._index_update_method

    @index_update_method.setter
    def index_update_method(self, index_update_method):
        """Sets the index_update_method of this GoogleCloudAiplatformV1beta1Index.

        Immutable. The update method to use with this Index. If not set, BATCH_UPDATE will be used by default.

        :param index_update_method: The index_update_method of this GoogleCloudAiplatformV1beta1Index.
        :type index_update_method: str
        """
        allowed_values = ["INDEX_UPDATE_METHOD_UNSPECIFIED", "BATCH_UPDATE", "STREAM_UPDATE"]  # noqa: E501
        if index_update_method not in allowed_values:
            raise ValueError(
                "Invalid value for `index_update_method` ({0}), must be one of {1}"
                .format(index_update_method, allowed_values)
            )

        self._index_update_method = index_update_method

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1Index.

        The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :return: The labels of this GoogleCloudAiplatformV1beta1Index.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1Index.

        The labels with user-defined metadata to organize your Indexes. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1Index.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudAiplatformV1beta1Index.

        An additional information about the Index; the schema of the metadata can be found in metadata_schema.

        :return: The metadata of this GoogleCloudAiplatformV1beta1Index.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudAiplatformV1beta1Index.

        An additional information about the Index; the schema of the metadata can be found in metadata_schema.

        :param metadata: The metadata of this GoogleCloudAiplatformV1beta1Index.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def metadata_schema_uri(self):
        """Gets the metadata_schema_uri of this GoogleCloudAiplatformV1beta1Index.

        Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.

        :return: The metadata_schema_uri of this GoogleCloudAiplatformV1beta1Index.
        :rtype: str
        """
        return self._metadata_schema_uri

    @metadata_schema_uri.setter
    def metadata_schema_uri(self, metadata_schema_uri):
        """Sets the metadata_schema_uri of this GoogleCloudAiplatformV1beta1Index.

        Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Index, that is specific to it. Unset if the Index does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.

        :param metadata_schema_uri: The metadata_schema_uri of this GoogleCloudAiplatformV1beta1Index.
        :type metadata_schema_uri: str
        """

        self._metadata_schema_uri = metadata_schema_uri

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1Index.

        Output only. The resource name of the Index.

        :return: The name of this GoogleCloudAiplatformV1beta1Index.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1Index.

        Output only. The resource name of the Index.

        :param name: The name of this GoogleCloudAiplatformV1beta1Index.
        :type name: str
        """

        self._name = name

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1Index.

        Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it.

        :return: The update_time of this GoogleCloudAiplatformV1beta1Index.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1Index.

        Output only. Timestamp when this Index was most recently updated. This also includes any update to the contents of the Index. Note that Operations working on this Index may have their Operations.metadata.generic_metadata.update_time a little after the value of this timestamp, yet that does not mean their results are not already reflected in the Index. Result of any successfully completed Operation on the Index is reflected in it.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1Index.
        :type update_time: str
        """

        self._update_time = update_time
