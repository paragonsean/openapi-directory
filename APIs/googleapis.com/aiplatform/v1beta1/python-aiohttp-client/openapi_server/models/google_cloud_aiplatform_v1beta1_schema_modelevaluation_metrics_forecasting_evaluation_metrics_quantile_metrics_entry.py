# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, observed_quantile: float=None, quantile: float=None, scaled_pinball_loss: float=None):
        """GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry - a model defined in OpenAPI

        :param observed_quantile: The observed_quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        :param quantile: The quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        :param scaled_pinball_loss: The scaled_pinball_loss of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        """
        self.openapi_types = {
            'observed_quantile': float,
            'quantile': float,
            'scaled_pinball_loss': float
        }

        self.attribute_map = {
            'observed_quantile': 'observedQuantile',
            'quantile': 'quantile',
            'scaled_pinball_loss': 'scaledPinballLoss'
        }

        self._observed_quantile = observed_quantile
        self._quantile = quantile
        self._scaled_pinball_loss = scaled_pinball_loss

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def observed_quantile(self):
        """Gets the observed_quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.

        This is a custom metric that calculates the percentage of true values that were less than the predicted value for that quantile. Only populated when optimization_objective is minimize-quantile-loss and each entry corresponds to an entry in quantiles The percent value can be used to compare with the quantile value, which is the target value.

        :return: The observed_quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        :rtype: float
        """
        return self._observed_quantile

    @observed_quantile.setter
    def observed_quantile(self, observed_quantile):
        """Sets the observed_quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.

        This is a custom metric that calculates the percentage of true values that were less than the predicted value for that quantile. Only populated when optimization_objective is minimize-quantile-loss and each entry corresponds to an entry in quantiles The percent value can be used to compare with the quantile value, which is the target value.

        :param observed_quantile: The observed_quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        :type observed_quantile: float
        """

        self._observed_quantile = observed_quantile

    @property
    def quantile(self):
        """Gets the quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.

        The quantile for this entry.

        :return: The quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        :rtype: float
        """
        return self._quantile

    @quantile.setter
    def quantile(self, quantile):
        """Sets the quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.

        The quantile for this entry.

        :param quantile: The quantile of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        :type quantile: float
        """

        self._quantile = quantile

    @property
    def scaled_pinball_loss(self):
        """Gets the scaled_pinball_loss of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.

        The scaled pinball loss of this quantile.

        :return: The scaled_pinball_loss of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        :rtype: float
        """
        return self._scaled_pinball_loss

    @scaled_pinball_loss.setter
    def scaled_pinball_loss(self, scaled_pinball_loss):
        """Sets the scaled_pinball_loss of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.

        The scaled pinball loss of this quantile.

        :param scaled_pinball_loss: The scaled_pinball_loss of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.
        :type scaled_pinball_loss: float
        """

        self._scaled_pinball_loss = scaled_pinball_loss
