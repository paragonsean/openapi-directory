# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_batch_dedicated_resources import GoogleCloudAiplatformV1beta1BatchDedicatedResources
from openapi_server.models.google_cloud_aiplatform_v1beta1_batch_prediction_job_input_config import GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig
from openapi_server.models.google_cloud_aiplatform_v1beta1_batch_prediction_job_instance_config import GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig
from openapi_server.models.google_cloud_aiplatform_v1beta1_batch_prediction_job_output_config import GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig
from openapi_server.models.google_cloud_aiplatform_v1beta1_batch_prediction_job_output_info import GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo
from openapi_server.models.google_cloud_aiplatform_v1beta1_completion_stats import GoogleCloudAiplatformV1beta1CompletionStats
from openapi_server.models.google_cloud_aiplatform_v1beta1_encryption_spec import GoogleCloudAiplatformV1beta1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_explanation_spec import GoogleCloudAiplatformV1beta1ExplanationSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_manual_batch_tuning_parameters import GoogleCloudAiplatformV1beta1ManualBatchTuningParameters
from openapi_server.models.google_cloud_aiplatform_v1beta1_model_monitoring_config import GoogleCloudAiplatformV1beta1ModelMonitoringConfig
from openapi_server.models.google_cloud_aiplatform_v1beta1_model_monitoring_stats_anomalies import GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies
from openapi_server.models.google_cloud_aiplatform_v1beta1_resources_consumed import GoogleCloudAiplatformV1beta1ResourcesConsumed
from openapi_server.models.google_cloud_aiplatform_v1beta1_unmanaged_container_model import GoogleCloudAiplatformV1beta1UnmanagedContainerModel
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudAiplatformV1beta1BatchPredictionJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completion_stats: GoogleCloudAiplatformV1beta1CompletionStats=None, create_time: str=None, dedicated_resources: GoogleCloudAiplatformV1beta1BatchDedicatedResources=None, disable_container_logging: bool=None, display_name: str=None, encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec=None, end_time: str=None, error: GoogleRpcStatus=None, explanation_spec: GoogleCloudAiplatformV1beta1ExplanationSpec=None, generate_explanation: bool=None, input_config: GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig=None, instance_config: GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig=None, labels: Dict[str, str]=None, manual_batch_tuning_parameters: GoogleCloudAiplatformV1beta1ManualBatchTuningParameters=None, model: str=None, model_monitoring_config: GoogleCloudAiplatformV1beta1ModelMonitoringConfig=None, model_monitoring_stats_anomalies: List[GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies]=None, model_monitoring_status: GoogleRpcStatus=None, model_parameters: object=None, model_version_id: str=None, name: str=None, output_config: GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig=None, output_info: GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo=None, partial_failures: List[GoogleRpcStatus]=None, resources_consumed: GoogleCloudAiplatformV1beta1ResourcesConsumed=None, service_account: str=None, start_time: str=None, state: str=None, unmanaged_container_model: GoogleCloudAiplatformV1beta1UnmanagedContainerModel=None, update_time: str=None):
        """GoogleCloudAiplatformV1beta1BatchPredictionJob - a model defined in OpenAPI

        :param completion_stats: The completion_stats of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param dedicated_resources: The dedicated_resources of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param disable_container_logging: The disable_container_logging of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param end_time: The end_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param error: The error of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param explanation_spec: The explanation_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param generate_explanation: The generate_explanation of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param input_config: The input_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param instance_config: The instance_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param manual_batch_tuning_parameters: The manual_batch_tuning_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param model: The model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param model_monitoring_config: The model_monitoring_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param model_monitoring_stats_anomalies: The model_monitoring_stats_anomalies of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param model_monitoring_status: The model_monitoring_status of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param model_parameters: The model_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param model_version_id: The model_version_id of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param name: The name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param output_config: The output_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param output_info: The output_info of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param partial_failures: The partial_failures of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param resources_consumed: The resources_consumed of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param service_account: The service_account of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param start_time: The start_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param state: The state of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param unmanaged_container_model: The unmanaged_container_model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        """
        self.openapi_types = {
            'completion_stats': GoogleCloudAiplatformV1beta1CompletionStats,
            'create_time': str,
            'dedicated_resources': GoogleCloudAiplatformV1beta1BatchDedicatedResources,
            'disable_container_logging': bool,
            'display_name': str,
            'encryption_spec': GoogleCloudAiplatformV1beta1EncryptionSpec,
            'end_time': str,
            'error': GoogleRpcStatus,
            'explanation_spec': GoogleCloudAiplatformV1beta1ExplanationSpec,
            'generate_explanation': bool,
            'input_config': GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig,
            'instance_config': GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig,
            'labels': Dict[str, str],
            'manual_batch_tuning_parameters': GoogleCloudAiplatformV1beta1ManualBatchTuningParameters,
            'model': str,
            'model_monitoring_config': GoogleCloudAiplatformV1beta1ModelMonitoringConfig,
            'model_monitoring_stats_anomalies': List[GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies],
            'model_monitoring_status': GoogleRpcStatus,
            'model_parameters': object,
            'model_version_id': str,
            'name': str,
            'output_config': GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig,
            'output_info': GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo,
            'partial_failures': List[GoogleRpcStatus],
            'resources_consumed': GoogleCloudAiplatformV1beta1ResourcesConsumed,
            'service_account': str,
            'start_time': str,
            'state': str,
            'unmanaged_container_model': GoogleCloudAiplatformV1beta1UnmanagedContainerModel,
            'update_time': str
        }

        self.attribute_map = {
            'completion_stats': 'completionStats',
            'create_time': 'createTime',
            'dedicated_resources': 'dedicatedResources',
            'disable_container_logging': 'disableContainerLogging',
            'display_name': 'displayName',
            'encryption_spec': 'encryptionSpec',
            'end_time': 'endTime',
            'error': 'error',
            'explanation_spec': 'explanationSpec',
            'generate_explanation': 'generateExplanation',
            'input_config': 'inputConfig',
            'instance_config': 'instanceConfig',
            'labels': 'labels',
            'manual_batch_tuning_parameters': 'manualBatchTuningParameters',
            'model': 'model',
            'model_monitoring_config': 'modelMonitoringConfig',
            'model_monitoring_stats_anomalies': 'modelMonitoringStatsAnomalies',
            'model_monitoring_status': 'modelMonitoringStatus',
            'model_parameters': 'modelParameters',
            'model_version_id': 'modelVersionId',
            'name': 'name',
            'output_config': 'outputConfig',
            'output_info': 'outputInfo',
            'partial_failures': 'partialFailures',
            'resources_consumed': 'resourcesConsumed',
            'service_account': 'serviceAccount',
            'start_time': 'startTime',
            'state': 'state',
            'unmanaged_container_model': 'unmanagedContainerModel',
            'update_time': 'updateTime'
        }

        self._completion_stats = completion_stats
        self._create_time = create_time
        self._dedicated_resources = dedicated_resources
        self._disable_container_logging = disable_container_logging
        self._display_name = display_name
        self._encryption_spec = encryption_spec
        self._end_time = end_time
        self._error = error
        self._explanation_spec = explanation_spec
        self._generate_explanation = generate_explanation
        self._input_config = input_config
        self._instance_config = instance_config
        self._labels = labels
        self._manual_batch_tuning_parameters = manual_batch_tuning_parameters
        self._model = model
        self._model_monitoring_config = model_monitoring_config
        self._model_monitoring_stats_anomalies = model_monitoring_stats_anomalies
        self._model_monitoring_status = model_monitoring_status
        self._model_parameters = model_parameters
        self._model_version_id = model_version_id
        self._name = name
        self._output_config = output_config
        self._output_info = output_info
        self._partial_failures = partial_failures
        self._resources_consumed = resources_consumed
        self._service_account = service_account
        self._start_time = start_time
        self._state = state
        self._unmanaged_container_model = unmanaged_container_model
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1BatchPredictionJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1BatchPredictionJob of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completion_stats(self):
        """Gets the completion_stats of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The completion_stats of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1CompletionStats
        """
        return self._completion_stats

    @completion_stats.setter
    def completion_stats(self, completion_stats):
        """Sets the completion_stats of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param completion_stats: The completion_stats of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type completion_stats: GoogleCloudAiplatformV1beta1CompletionStats
        """

        self._completion_stats = completion_stats

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Time when the BatchPredictionJob was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Time when the BatchPredictionJob was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def dedicated_resources(self):
        """Gets the dedicated_resources of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The dedicated_resources of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1BatchDedicatedResources
        """
        return self._dedicated_resources

    @dedicated_resources.setter
    def dedicated_resources(self, dedicated_resources):
        """Sets the dedicated_resources of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param dedicated_resources: The dedicated_resources of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type dedicated_resources: GoogleCloudAiplatformV1beta1BatchDedicatedResources
        """

        self._dedicated_resources = dedicated_resources

    @property
    def disable_container_logging(self):
        """Gets the disable_container_logging of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.

        :return: The disable_container_logging of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: bool
        """
        return self._disable_container_logging

    @disable_container_logging.setter
    def disable_container_logging(self, disable_container_logging):
        """Sets the disable_container_logging of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.

        :param disable_container_logging: The disable_container_logging of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type disable_container_logging: bool
        """

        self._disable_container_logging = disable_container_logging

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Required. The user-defined name of this BatchPredictionJob.

        :return: The display_name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Required. The user-defined name of this BatchPredictionJob.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The encryption_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.

        :return: The end_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.

        :param end_time: The end_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def error(self):
        """Gets the error of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The error of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleRpcStatus
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param error: The error of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type error: GoogleRpcStatus
        """

        self._error = error

    @property
    def explanation_spec(self):
        """Gets the explanation_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The explanation_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1ExplanationSpec
        """
        return self._explanation_spec

    @explanation_spec.setter
    def explanation_spec(self, explanation_spec):
        """Sets the explanation_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param explanation_spec: The explanation_spec of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type explanation_spec: GoogleCloudAiplatformV1beta1ExplanationSpec
        """

        self._explanation_spec = explanation_spec

    @property
    def generate_explanation(self):
        """Gets the generate_explanation of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.

        :return: The generate_explanation of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: bool
        """
        return self._generate_explanation

    @generate_explanation.setter
    def generate_explanation(self, generate_explanation):
        """Sets the generate_explanation of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.

        :param generate_explanation: The generate_explanation of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type generate_explanation: bool
        """

        self._generate_explanation = generate_explanation

    @property
    def input_config(self):
        """Gets the input_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The input_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig
        """
        return self._input_config

    @input_config.setter
    def input_config(self, input_config):
        """Sets the input_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param input_config: The input_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type input_config: GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig
        """

        self._input_config = input_config

    @property
    def instance_config(self):
        """Gets the instance_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The instance_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig
        """
        return self._instance_config

    @instance_config.setter
    def instance_config(self, instance_config):
        """Sets the instance_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param instance_config: The instance_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type instance_config: GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig
        """

        self._instance_config = instance_config

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :return: The labels of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def manual_batch_tuning_parameters(self):
        """Gets the manual_batch_tuning_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The manual_batch_tuning_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1ManualBatchTuningParameters
        """
        return self._manual_batch_tuning_parameters

    @manual_batch_tuning_parameters.setter
    def manual_batch_tuning_parameters(self, manual_batch_tuning_parameters):
        """Sets the manual_batch_tuning_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param manual_batch_tuning_parameters: The manual_batch_tuning_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type manual_batch_tuning_parameters: GoogleCloudAiplatformV1beta1ManualBatchTuningParameters
        """

        self._manual_batch_tuning_parameters = manual_batch_tuning_parameters

    @property
    def model(self):
        """Gets the model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`

        :return: The model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`

        :param model: The model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type model: str
        """

        self._model = model

    @property
    def model_monitoring_config(self):
        """Gets the model_monitoring_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The model_monitoring_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1ModelMonitoringConfig
        """
        return self._model_monitoring_config

    @model_monitoring_config.setter
    def model_monitoring_config(self, model_monitoring_config):
        """Sets the model_monitoring_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param model_monitoring_config: The model_monitoring_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type model_monitoring_config: GoogleCloudAiplatformV1beta1ModelMonitoringConfig
        """

        self._model_monitoring_config = model_monitoring_config

    @property
    def model_monitoring_stats_anomalies(self):
        """Gets the model_monitoring_stats_anomalies of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Get batch prediction job monitoring statistics.

        :return: The model_monitoring_stats_anomalies of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: List[GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies]
        """
        return self._model_monitoring_stats_anomalies

    @model_monitoring_stats_anomalies.setter
    def model_monitoring_stats_anomalies(self, model_monitoring_stats_anomalies):
        """Sets the model_monitoring_stats_anomalies of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Get batch prediction job monitoring statistics.

        :param model_monitoring_stats_anomalies: The model_monitoring_stats_anomalies of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type model_monitoring_stats_anomalies: List[GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies]
        """

        self._model_monitoring_stats_anomalies = model_monitoring_stats_anomalies

    @property
    def model_monitoring_status(self):
        """Gets the model_monitoring_status of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The model_monitoring_status of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleRpcStatus
        """
        return self._model_monitoring_status

    @model_monitoring_status.setter
    def model_monitoring_status(self, model_monitoring_status):
        """Sets the model_monitoring_status of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param model_monitoring_status: The model_monitoring_status of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type model_monitoring_status: GoogleRpcStatus
        """

        self._model_monitoring_status = model_monitoring_status

    @property
    def model_parameters(self):
        """Gets the model_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.

        :return: The model_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: object
        """
        return self._model_parameters

    @model_parameters.setter
    def model_parameters(self, model_parameters):
        """Sets the model_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.

        :param model_parameters: The model_parameters of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type model_parameters: object
        """

        self._model_parameters = model_parameters

    @property
    def model_version_id(self):
        """Gets the model_version_id of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. The version ID of the Model that produces the predictions via this job.

        :return: The model_version_id of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._model_version_id

    @model_version_id.setter
    def model_version_id(self, model_version_id):
        """Sets the model_version_id of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. The version ID of the Model that produces the predictions via this job.

        :param model_version_id: The model_version_id of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type model_version_id: str
        """

        self._model_version_id = model_version_id

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Resource name of the BatchPredictionJob.

        :return: The name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Resource name of the BatchPredictionJob.

        :param name: The name of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type name: str
        """

        self._name = name

    @property
    def output_config(self):
        """Gets the output_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The output_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig
        """
        return self._output_config

    @output_config.setter
    def output_config(self, output_config):
        """Sets the output_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param output_config: The output_config of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type output_config: GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig
        """

        self._output_config = output_config

    @property
    def output_info(self):
        """Gets the output_info of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The output_info of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo
        """
        return self._output_info

    @output_info.setter
    def output_info(self, output_info):
        """Sets the output_info of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param output_info: The output_info of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type output_info: GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo
        """

        self._output_info = output_info

    @property
    def partial_failures(self):
        """Gets the partial_failures of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.

        :return: The partial_failures of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: List[GoogleRpcStatus]
        """
        return self._partial_failures

    @partial_failures.setter
    def partial_failures(self, partial_failures):
        """Sets the partial_failures of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.

        :param partial_failures: The partial_failures of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type partial_failures: List[GoogleRpcStatus]
        """

        self._partial_failures = partial_failures

    @property
    def resources_consumed(self):
        """Gets the resources_consumed of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The resources_consumed of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1ResourcesConsumed
        """
        return self._resources_consumed

    @resources_consumed.setter
    def resources_consumed(self, resources_consumed):
        """Sets the resources_consumed of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param resources_consumed: The resources_consumed of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type resources_consumed: GoogleCloudAiplatformV1beta1ResourcesConsumed
        """

        self._resources_consumed = resources_consumed

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.

        :return: The service_account of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.

        :param service_account: The service_account of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.

        :return: The start_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.

        :param start_time: The start_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. The detailed state of the job.

        :return: The state of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. The detailed state of the job.

        :param state: The state of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type state: str
        """
        allowed_values = ["JOB_STATE_UNSPECIFIED", "JOB_STATE_QUEUED", "JOB_STATE_PENDING", "JOB_STATE_RUNNING", "JOB_STATE_SUCCEEDED", "JOB_STATE_FAILED", "JOB_STATE_CANCELLING", "JOB_STATE_CANCELLED", "JOB_STATE_PAUSED", "JOB_STATE_EXPIRED", "JOB_STATE_UPDATING", "JOB_STATE_PARTIALLY_SUCCEEDED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def unmanaged_container_model(self):
        """Gets the unmanaged_container_model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :return: The unmanaged_container_model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: GoogleCloudAiplatformV1beta1UnmanagedContainerModel
        """
        return self._unmanaged_container_model

    @unmanaged_container_model.setter
    def unmanaged_container_model(self, unmanaged_container_model):
        """Sets the unmanaged_container_model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.


        :param unmanaged_container_model: The unmanaged_container_model of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type unmanaged_container_model: GoogleCloudAiplatformV1beta1UnmanagedContainerModel
        """

        self._unmanaged_container_model = unmanaged_container_model

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Time when the BatchPredictionJob was most recently updated.

        :return: The update_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.

        Output only. Time when the BatchPredictionJob was most recently updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1BatchPredictionJob.
        :type update_time: str
        """

        self._update_time = update_time
