# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery_table_path: str=None, log_source: str=None, log_type: str=None, request_response_logging_schema_version: str=None):
        """GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable - a model defined in OpenAPI

        :param bigquery_table_path: The bigquery_table_path of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :param log_source: The log_source of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :param log_type: The log_type of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :param request_response_logging_schema_version: The request_response_logging_schema_version of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        """
        self.openapi_types = {
            'bigquery_table_path': str,
            'log_source': str,
            'log_type': str,
            'request_response_logging_schema_version': str
        }

        self.attribute_map = {
            'bigquery_table_path': 'bigqueryTablePath',
            'log_source': 'logSource',
            'log_type': 'logType',
            'request_response_logging_schema_version': 'requestResponseLoggingSchemaVersion'
        }

        self._bigquery_table_path = bigquery_table_path
        self._log_source = log_source
        self._log_type = log_type
        self._request_response_logging_schema_version = request_response_logging_schema_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery_table_path(self):
        """Gets the bigquery_table_path of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.

        The created BigQuery table to store logs. Customer could do their own query & analysis. Format: `bq://.model_deployment_monitoring_._`

        :return: The bigquery_table_path of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :rtype: str
        """
        return self._bigquery_table_path

    @bigquery_table_path.setter
    def bigquery_table_path(self, bigquery_table_path):
        """Sets the bigquery_table_path of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.

        The created BigQuery table to store logs. Customer could do their own query & analysis. Format: `bq://.model_deployment_monitoring_._`

        :param bigquery_table_path: The bigquery_table_path of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :type bigquery_table_path: str
        """

        self._bigquery_table_path = bigquery_table_path

    @property
    def log_source(self):
        """Gets the log_source of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.

        The source of log.

        :return: The log_source of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :rtype: str
        """
        return self._log_source

    @log_source.setter
    def log_source(self, log_source):
        """Sets the log_source of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.

        The source of log.

        :param log_source: The log_source of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :type log_source: str
        """
        allowed_values = ["LOG_SOURCE_UNSPECIFIED", "TRAINING", "SERVING"]  # noqa: E501
        if log_source not in allowed_values:
            raise ValueError(
                "Invalid value for `log_source` ({0}), must be one of {1}"
                .format(log_source, allowed_values)
            )

        self._log_source = log_source

    @property
    def log_type(self):
        """Gets the log_type of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.

        The type of log.

        :return: The log_type of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :rtype: str
        """
        return self._log_type

    @log_type.setter
    def log_type(self, log_type):
        """Sets the log_type of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.

        The type of log.

        :param log_type: The log_type of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :type log_type: str
        """
        allowed_values = ["LOG_TYPE_UNSPECIFIED", "PREDICT", "EXPLAIN"]  # noqa: E501
        if log_type not in allowed_values:
            raise ValueError(
                "Invalid value for `log_type` ({0}), must be one of {1}"
                .format(log_type, allowed_values)
            )

        self._log_type = log_type

    @property
    def request_response_logging_schema_version(self):
        """Gets the request_response_logging_schema_version of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.

        Output only. The schema version of the request/response logging BigQuery table. Default to v1 if unset.

        :return: The request_response_logging_schema_version of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :rtype: str
        """
        return self._request_response_logging_schema_version

    @request_response_logging_schema_version.setter
    def request_response_logging_schema_version(self, request_response_logging_schema_version):
        """Sets the request_response_logging_schema_version of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.

        Output only. The schema version of the request/response logging BigQuery table. Default to v1 if unset.

        :param request_response_logging_schema_version: The request_response_logging_schema_version of this GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.
        :type request_response_logging_schema_version: str
        """

        self._request_response_logging_schema_version = request_response_logging_schema_version
