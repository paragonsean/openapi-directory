# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_schema_modelevaluation_metrics_confusion_matrix_annotation_spec_ref import GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_specs: List[GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef]=None, rows: List[List[object]]=None):
        """GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix - a model defined in OpenAPI

        :param annotation_specs: The annotation_specs of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.
        :param rows: The rows of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.
        """
        self.openapi_types = {
            'annotation_specs': List[GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef],
            'rows': List[List[object]]
        }

        self.attribute_map = {
            'annotation_specs': 'annotationSpecs',
            'rows': 'rows'
        }

        self._annotation_specs = annotation_specs
        self._rows = rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_specs(self):
        """Gets the annotation_specs of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.

        AnnotationSpecs used in the confusion matrix. For AutoML Text Extraction, a special negative AnnotationSpec with empty `id` and `displayName` of \"NULL\" will be added as the last element.

        :return: The annotation_specs of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.
        :rtype: List[GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef]
        """
        return self._annotation_specs

    @annotation_specs.setter
    def annotation_specs(self, annotation_specs):
        """Sets the annotation_specs of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.

        AnnotationSpecs used in the confusion matrix. For AutoML Text Extraction, a special negative AnnotationSpec with empty `id` and `displayName` of \"NULL\" will be added as the last element.

        :param annotation_specs: The annotation_specs of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.
        :type annotation_specs: List[GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef]
        """

        self._annotation_specs = annotation_specs

    @property
    def rows(self):
        """Gets the rows of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.

        Rows in the confusion matrix. The number of rows is equal to the size of `annotationSpecs`. `rowsi` is the number of DataItems that have ground truth of the `annotationSpecs[i]` and are predicted as `annotationSpecs[j]` by the Model being evaluated. For Text Extraction, when `annotationSpecs[i]` is the last element in `annotationSpecs`, i.e. the special negative AnnotationSpec, `rowsi` is the number of predicted entities of `annoatationSpec[j]` that are not labeled as any of the ground truth AnnotationSpec. When annotationSpecs[j] is the special negative AnnotationSpec, `rowsi` is the number of entities have ground truth of `annotationSpec[i]` that are not predicted as an entity by the Model. The value of the last cell, i.e. `rowi` where i == j and `annotationSpec[i]` is the special negative AnnotationSpec, is always 0.

        :return: The rows of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.
        :rtype: List[List[object]]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.

        Rows in the confusion matrix. The number of rows is equal to the size of `annotationSpecs`. `rowsi` is the number of DataItems that have ground truth of the `annotationSpecs[i]` and are predicted as `annotationSpecs[j]` by the Model being evaluated. For Text Extraction, when `annotationSpecs[i]` is the last element in `annotationSpecs`, i.e. the special negative AnnotationSpec, `rowsi` is the number of predicted entities of `annoatationSpec[j]` that are not labeled as any of the ground truth AnnotationSpec. When annotationSpecs[j] is the special negative AnnotationSpec, `rowsi` is the number of entities have ground truth of `annotationSpec[i]` that are not predicted as an entity by the Model. The value of the last cell, i.e. `rowi` where i == j and `annotationSpec[i]` is the special negative AnnotationSpec, is always 0.

        :param rows: The rows of this GoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.
        :type rows: List[List[object]]
        """

        self._rows = rows
