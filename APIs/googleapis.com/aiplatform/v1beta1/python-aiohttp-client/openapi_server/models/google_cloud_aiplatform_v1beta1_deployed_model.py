# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_automatic_resources import GoogleCloudAiplatformV1beta1AutomaticResources
from openapi_server.models.google_cloud_aiplatform_v1beta1_dedicated_resources import GoogleCloudAiplatformV1beta1DedicatedResources
from openapi_server.models.google_cloud_aiplatform_v1beta1_explanation_spec import GoogleCloudAiplatformV1beta1ExplanationSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_private_endpoints import GoogleCloudAiplatformV1beta1PrivateEndpoints
from openapi_server import util


class GoogleCloudAiplatformV1beta1DeployedModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, automatic_resources: GoogleCloudAiplatformV1beta1AutomaticResources=None, create_time: str=None, dedicated_resources: GoogleCloudAiplatformV1beta1DedicatedResources=None, disable_explanations: bool=None, display_name: str=None, enable_access_logging: bool=None, enable_container_logging: bool=None, explanation_spec: GoogleCloudAiplatformV1beta1ExplanationSpec=None, id: str=None, model: str=None, model_version_id: str=None, private_endpoints: GoogleCloudAiplatformV1beta1PrivateEndpoints=None, service_account: str=None, shared_resources: str=None):
        """GoogleCloudAiplatformV1beta1DeployedModel - a model defined in OpenAPI

        :param automatic_resources: The automatic_resources of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param dedicated_resources: The dedicated_resources of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param disable_explanations: The disable_explanations of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param enable_access_logging: The enable_access_logging of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param enable_container_logging: The enable_container_logging of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param explanation_spec: The explanation_spec of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param id: The id of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param model: The model of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param model_version_id: The model_version_id of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param private_endpoints: The private_endpoints of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param service_account: The service_account of this GoogleCloudAiplatformV1beta1DeployedModel.
        :param shared_resources: The shared_resources of this GoogleCloudAiplatformV1beta1DeployedModel.
        """
        self.openapi_types = {
            'automatic_resources': GoogleCloudAiplatformV1beta1AutomaticResources,
            'create_time': str,
            'dedicated_resources': GoogleCloudAiplatformV1beta1DedicatedResources,
            'disable_explanations': bool,
            'display_name': str,
            'enable_access_logging': bool,
            'enable_container_logging': bool,
            'explanation_spec': GoogleCloudAiplatformV1beta1ExplanationSpec,
            'id': str,
            'model': str,
            'model_version_id': str,
            'private_endpoints': GoogleCloudAiplatformV1beta1PrivateEndpoints,
            'service_account': str,
            'shared_resources': str
        }

        self.attribute_map = {
            'automatic_resources': 'automaticResources',
            'create_time': 'createTime',
            'dedicated_resources': 'dedicatedResources',
            'disable_explanations': 'disableExplanations',
            'display_name': 'displayName',
            'enable_access_logging': 'enableAccessLogging',
            'enable_container_logging': 'enableContainerLogging',
            'explanation_spec': 'explanationSpec',
            'id': 'id',
            'model': 'model',
            'model_version_id': 'modelVersionId',
            'private_endpoints': 'privateEndpoints',
            'service_account': 'serviceAccount',
            'shared_resources': 'sharedResources'
        }

        self._automatic_resources = automatic_resources
        self._create_time = create_time
        self._dedicated_resources = dedicated_resources
        self._disable_explanations = disable_explanations
        self._display_name = display_name
        self._enable_access_logging = enable_access_logging
        self._enable_container_logging = enable_container_logging
        self._explanation_spec = explanation_spec
        self._id = id
        self._model = model
        self._model_version_id = model_version_id
        self._private_endpoints = private_endpoints
        self._service_account = service_account
        self._shared_resources = shared_resources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1DeployedModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1DeployedModel of this GoogleCloudAiplatformV1beta1DeployedModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def automatic_resources(self):
        """Gets the automatic_resources of this GoogleCloudAiplatformV1beta1DeployedModel.


        :return: The automatic_resources of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: GoogleCloudAiplatformV1beta1AutomaticResources
        """
        return self._automatic_resources

    @automatic_resources.setter
    def automatic_resources(self, automatic_resources):
        """Sets the automatic_resources of this GoogleCloudAiplatformV1beta1DeployedModel.


        :param automatic_resources: The automatic_resources of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type automatic_resources: GoogleCloudAiplatformV1beta1AutomaticResources
        """

        self._automatic_resources = automatic_resources

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1DeployedModel.

        Output only. Timestamp when the DeployedModel was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1DeployedModel.

        Output only. Timestamp when the DeployedModel was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def dedicated_resources(self):
        """Gets the dedicated_resources of this GoogleCloudAiplatformV1beta1DeployedModel.


        :return: The dedicated_resources of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: GoogleCloudAiplatformV1beta1DedicatedResources
        """
        return self._dedicated_resources

    @dedicated_resources.setter
    def dedicated_resources(self, dedicated_resources):
        """Sets the dedicated_resources of this GoogleCloudAiplatformV1beta1DeployedModel.


        :param dedicated_resources: The dedicated_resources of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type dedicated_resources: GoogleCloudAiplatformV1beta1DedicatedResources
        """

        self._dedicated_resources = dedicated_resources

    @property
    def disable_explanations(self):
        """Gets the disable_explanations of this GoogleCloudAiplatformV1beta1DeployedModel.

        If true, deploy the model without explainable feature, regardless the existence of Model.explanation_spec or explanation_spec.

        :return: The disable_explanations of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: bool
        """
        return self._disable_explanations

    @disable_explanations.setter
    def disable_explanations(self, disable_explanations):
        """Sets the disable_explanations of this GoogleCloudAiplatformV1beta1DeployedModel.

        If true, deploy the model without explainable feature, regardless the existence of Model.explanation_spec or explanation_spec.

        :param disable_explanations: The disable_explanations of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type disable_explanations: bool
        """

        self._disable_explanations = disable_explanations

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1DeployedModel.

        The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.

        :return: The display_name of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1DeployedModel.

        The display name of the DeployedModel. If not provided upon creation, the Model's display_name is used.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def enable_access_logging(self):
        """Gets the enable_access_logging of this GoogleCloudAiplatformV1beta1DeployedModel.

        If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.

        :return: The enable_access_logging of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: bool
        """
        return self._enable_access_logging

    @enable_access_logging.setter
    def enable_access_logging(self, enable_access_logging):
        """Sets the enable_access_logging of this GoogleCloudAiplatformV1beta1DeployedModel.

        If true, online prediction access logs are sent to Cloud Logging. These logs are like standard server access logs, containing information like timestamp and latency for each prediction request. Note that logs may incur a cost, especially if your project receives prediction requests at a high queries per second rate (QPS). Estimate your costs before enabling this option.

        :param enable_access_logging: The enable_access_logging of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type enable_access_logging: bool
        """

        self._enable_access_logging = enable_access_logging

    @property
    def enable_container_logging(self):
        """Gets the enable_container_logging of this GoogleCloudAiplatformV1beta1DeployedModel.

        If true, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging. Only supported for custom-trained Models and AutoML Tabular Models.

        :return: The enable_container_logging of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: bool
        """
        return self._enable_container_logging

    @enable_container_logging.setter
    def enable_container_logging(self, enable_container_logging):
        """Sets the enable_container_logging of this GoogleCloudAiplatformV1beta1DeployedModel.

        If true, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging. Only supported for custom-trained Models and AutoML Tabular Models.

        :param enable_container_logging: The enable_container_logging of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type enable_container_logging: bool
        """

        self._enable_container_logging = enable_container_logging

    @property
    def explanation_spec(self):
        """Gets the explanation_spec of this GoogleCloudAiplatformV1beta1DeployedModel.


        :return: The explanation_spec of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: GoogleCloudAiplatformV1beta1ExplanationSpec
        """
        return self._explanation_spec

    @explanation_spec.setter
    def explanation_spec(self, explanation_spec):
        """Sets the explanation_spec of this GoogleCloudAiplatformV1beta1DeployedModel.


        :param explanation_spec: The explanation_spec of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type explanation_spec: GoogleCloudAiplatformV1beta1ExplanationSpec
        """

        self._explanation_spec = explanation_spec

    @property
    def id(self):
        """Gets the id of this GoogleCloudAiplatformV1beta1DeployedModel.

        Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are `/[0-9]/`.

        :return: The id of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudAiplatformV1beta1DeployedModel.

        Immutable. The ID of the DeployedModel. If not provided upon deployment, Vertex AI will generate a value for this ID. This value should be 1-10 characters, and valid characters are `/[0-9]/`.

        :param id: The id of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type id: str
        """

        self._id = id

    @property
    def model(self):
        """Gets the model of this GoogleCloudAiplatformV1beta1DeployedModel.

        Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed.

        :return: The model of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this GoogleCloudAiplatformV1beta1DeployedModel.

        Required. The resource name of the Model that this is the deployment of. Note that the Model may be in a different location than the DeployedModel's Endpoint. The resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed.

        :param model: The model of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type model: str
        """

        self._model = model

    @property
    def model_version_id(self):
        """Gets the model_version_id of this GoogleCloudAiplatformV1beta1DeployedModel.

        Output only. The version ID of the model that is deployed.

        :return: The model_version_id of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: str
        """
        return self._model_version_id

    @model_version_id.setter
    def model_version_id(self, model_version_id):
        """Sets the model_version_id of this GoogleCloudAiplatformV1beta1DeployedModel.

        Output only. The version ID of the model that is deployed.

        :param model_version_id: The model_version_id of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type model_version_id: str
        """

        self._model_version_id = model_version_id

    @property
    def private_endpoints(self):
        """Gets the private_endpoints of this GoogleCloudAiplatformV1beta1DeployedModel.


        :return: The private_endpoints of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: GoogleCloudAiplatformV1beta1PrivateEndpoints
        """
        return self._private_endpoints

    @private_endpoints.setter
    def private_endpoints(self, private_endpoints):
        """Sets the private_endpoints of this GoogleCloudAiplatformV1beta1DeployedModel.


        :param private_endpoints: The private_endpoints of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type private_endpoints: GoogleCloudAiplatformV1beta1PrivateEndpoints
        """

        self._private_endpoints = private_endpoints

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudAiplatformV1beta1DeployedModel.

        The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.

        :return: The service_account of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudAiplatformV1beta1DeployedModel.

        The service account that the DeployedModel's container runs as. Specify the email address of the service account. If this service account is not specified, the container runs as a service account that doesn't have access to the resource project. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.

        :param service_account: The service_account of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def shared_resources(self):
        """Gets the shared_resources of this GoogleCloudAiplatformV1beta1DeployedModel.

        The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`

        :return: The shared_resources of this GoogleCloudAiplatformV1beta1DeployedModel.
        :rtype: str
        """
        return self._shared_resources

    @shared_resources.setter
    def shared_resources(self, shared_resources):
        """Sets the shared_resources of this GoogleCloudAiplatformV1beta1DeployedModel.

        The resource name of the shared DeploymentResourcePool to deploy on. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`

        :param shared_resources: The shared_resources of this GoogleCloudAiplatformV1beta1DeployedModel.
        :type shared_resources: str
        """

        self._shared_resources = shared_resources
