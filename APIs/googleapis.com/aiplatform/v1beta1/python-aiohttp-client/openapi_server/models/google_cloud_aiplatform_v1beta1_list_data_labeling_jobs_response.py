# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_data_labeling_job import GoogleCloudAiplatformV1beta1DataLabelingJob
from openapi_server import util


class GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_labeling_jobs: List[GoogleCloudAiplatformV1beta1DataLabelingJob]=None, next_page_token: str=None):
        """GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse - a model defined in OpenAPI

        :param data_labeling_jobs: The data_labeling_jobs of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.
        :param next_page_token: The next_page_token of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.
        """
        self.openapi_types = {
            'data_labeling_jobs': List[GoogleCloudAiplatformV1beta1DataLabelingJob],
            'next_page_token': str
        }

        self.attribute_map = {
            'data_labeling_jobs': 'dataLabelingJobs',
            'next_page_token': 'nextPageToken'
        }

        self._data_labeling_jobs = data_labeling_jobs
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_labeling_jobs(self):
        """Gets the data_labeling_jobs of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.

        A list of DataLabelingJobs that matches the specified filter in the request.

        :return: The data_labeling_jobs of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.
        :rtype: List[GoogleCloudAiplatformV1beta1DataLabelingJob]
        """
        return self._data_labeling_jobs

    @data_labeling_jobs.setter
    def data_labeling_jobs(self, data_labeling_jobs):
        """Sets the data_labeling_jobs of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.

        A list of DataLabelingJobs that matches the specified filter in the request.

        :param data_labeling_jobs: The data_labeling_jobs of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.
        :type data_labeling_jobs: List[GoogleCloudAiplatformV1beta1DataLabelingJob]
        """

        self._data_labeling_jobs = data_labeling_jobs

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.

        The standard List next-page token.

        :return: The next_page_token of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.

        The standard List next-page token.

        :param next_page_token: The next_page_token of this GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
