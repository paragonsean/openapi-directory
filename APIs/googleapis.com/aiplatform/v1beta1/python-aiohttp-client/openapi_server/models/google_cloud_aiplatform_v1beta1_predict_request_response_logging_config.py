# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_big_query_destination import GoogleCloudAiplatformV1beta1BigQueryDestination
from openapi_server import util


class GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery_destination: GoogleCloudAiplatformV1beta1BigQueryDestination=None, enabled: bool=None, sampling_rate: float=None):
        """GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig - a model defined in OpenAPI

        :param bigquery_destination: The bigquery_destination of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        :param enabled: The enabled of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        :param sampling_rate: The sampling_rate of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        """
        self.openapi_types = {
            'bigquery_destination': GoogleCloudAiplatformV1beta1BigQueryDestination,
            'enabled': bool,
            'sampling_rate': float
        }

        self.attribute_map = {
            'bigquery_destination': 'bigqueryDestination',
            'enabled': 'enabled',
            'sampling_rate': 'samplingRate'
        }

        self._bigquery_destination = bigquery_destination
        self._enabled = enabled
        self._sampling_rate = sampling_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery_destination(self):
        """Gets the bigquery_destination of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.


        :return: The bigquery_destination of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        :rtype: GoogleCloudAiplatformV1beta1BigQueryDestination
        """
        return self._bigquery_destination

    @bigquery_destination.setter
    def bigquery_destination(self, bigquery_destination):
        """Sets the bigquery_destination of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.


        :param bigquery_destination: The bigquery_destination of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        :type bigquery_destination: GoogleCloudAiplatformV1beta1BigQueryDestination
        """

        self._bigquery_destination = bigquery_destination

    @property
    def enabled(self):
        """Gets the enabled of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.

        If logging is enabled or not.

        :return: The enabled of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.

        If logging is enabled or not.

        :param enabled: The enabled of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def sampling_rate(self):
        """Gets the sampling_rate of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.

        Percentage of requests to be logged, expressed as a fraction in range(0,1].

        :return: The sampling_rate of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        :rtype: float
        """
        return self._sampling_rate

    @sampling_rate.setter
    def sampling_rate(self, sampling_rate):
        """Sets the sampling_rate of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.

        Percentage of requests to be logged, expressed as a fraction in range(0,1].

        :param sampling_rate: The sampling_rate of this GoogleCloudAiplatformV1beta1PredictRequestResponseLoggingConfig.
        :type sampling_rate: float
        """

        self._sampling_rate = sampling_rate
