# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ResourceRuntime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_uris: Dict[str, str]=None, notebook_runtime_template: str=None):
        """GoogleCloudAiplatformV1beta1ResourceRuntime - a model defined in OpenAPI

        :param access_uris: The access_uris of this GoogleCloudAiplatformV1beta1ResourceRuntime.
        :param notebook_runtime_template: The notebook_runtime_template of this GoogleCloudAiplatformV1beta1ResourceRuntime.
        """
        self.openapi_types = {
            'access_uris': Dict[str, str],
            'notebook_runtime_template': str
        }

        self.attribute_map = {
            'access_uris': 'accessUris',
            'notebook_runtime_template': 'notebookRuntimeTemplate'
        }

        self._access_uris = access_uris
        self._notebook_runtime_template = notebook_runtime_template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ResourceRuntime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ResourceRuntime of this GoogleCloudAiplatformV1beta1ResourceRuntime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_uris(self):
        """Gets the access_uris of this GoogleCloudAiplatformV1beta1ResourceRuntime.

        Output only. URIs for user to connect to the Cluster. Example: { \"RAY_HEAD_NODE_INTERNAL_IP\": \"head-node-IP:10001\" \"RAY_DASHBOARD_URI\": \"ray-dashboard-address:8888\" }

        :return: The access_uris of this GoogleCloudAiplatformV1beta1ResourceRuntime.
        :rtype: Dict[str, str]
        """
        return self._access_uris

    @access_uris.setter
    def access_uris(self, access_uris):
        """Sets the access_uris of this GoogleCloudAiplatformV1beta1ResourceRuntime.

        Output only. URIs for user to connect to the Cluster. Example: { \"RAY_HEAD_NODE_INTERNAL_IP\": \"head-node-IP:10001\" \"RAY_DASHBOARD_URI\": \"ray-dashboard-address:8888\" }

        :param access_uris: The access_uris of this GoogleCloudAiplatformV1beta1ResourceRuntime.
        :type access_uris: Dict[str, str]
        """

        self._access_uris = access_uris

    @property
    def notebook_runtime_template(self):
        """Gets the notebook_runtime_template of this GoogleCloudAiplatformV1beta1ResourceRuntime.

        Output only. The resource name of NotebookRuntimeTemplate for the RoV Persistent Cluster The NotebokRuntimeTemplate is created in the same VPC (if set), and with the same Ray and Python version as the Persistent Cluster. Example: \"projects/1000/locations/us-central1/notebookRuntimeTemplates/abc123\"

        :return: The notebook_runtime_template of this GoogleCloudAiplatformV1beta1ResourceRuntime.
        :rtype: str
        """
        return self._notebook_runtime_template

    @notebook_runtime_template.setter
    def notebook_runtime_template(self, notebook_runtime_template):
        """Sets the notebook_runtime_template of this GoogleCloudAiplatformV1beta1ResourceRuntime.

        Output only. The resource name of NotebookRuntimeTemplate for the RoV Persistent Cluster The NotebokRuntimeTemplate is created in the same VPC (if set), and with the same Ray and Python version as the Persistent Cluster. Example: \"projects/1000/locations/us-central1/notebookRuntimeTemplates/abc123\"

        :param notebook_runtime_template: The notebook_runtime_template of this GoogleCloudAiplatformV1beta1ResourceRuntime.
        :type notebook_runtime_template: str
        """

        self._notebook_runtime_template = notebook_runtime_template
