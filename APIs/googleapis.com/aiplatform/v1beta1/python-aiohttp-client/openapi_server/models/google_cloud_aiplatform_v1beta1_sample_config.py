# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1SampleConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, following_batch_sample_percentage: int=None, initial_batch_sample_percentage: int=None, sample_strategy: str=None):
        """GoogleCloudAiplatformV1beta1SampleConfig - a model defined in OpenAPI

        :param following_batch_sample_percentage: The following_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.
        :param initial_batch_sample_percentage: The initial_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.
        :param sample_strategy: The sample_strategy of this GoogleCloudAiplatformV1beta1SampleConfig.
        """
        self.openapi_types = {
            'following_batch_sample_percentage': int,
            'initial_batch_sample_percentage': int,
            'sample_strategy': str
        }

        self.attribute_map = {
            'following_batch_sample_percentage': 'followingBatchSamplePercentage',
            'initial_batch_sample_percentage': 'initialBatchSamplePercentage',
            'sample_strategy': 'sampleStrategy'
        }

        self._following_batch_sample_percentage = following_batch_sample_percentage
        self._initial_batch_sample_percentage = initial_batch_sample_percentage
        self._sample_strategy = sample_strategy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SampleConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SampleConfig of this GoogleCloudAiplatformV1beta1SampleConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def following_batch_sample_percentage(self):
        """Gets the following_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.

        The percentage of data needed to be labeled in each following batch (except the first batch).

        :return: The following_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.
        :rtype: int
        """
        return self._following_batch_sample_percentage

    @following_batch_sample_percentage.setter
    def following_batch_sample_percentage(self, following_batch_sample_percentage):
        """Sets the following_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.

        The percentage of data needed to be labeled in each following batch (except the first batch).

        :param following_batch_sample_percentage: The following_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.
        :type following_batch_sample_percentage: int
        """

        self._following_batch_sample_percentage = following_batch_sample_percentage

    @property
    def initial_batch_sample_percentage(self):
        """Gets the initial_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.

        The percentage of data needed to be labeled in the first batch.

        :return: The initial_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.
        :rtype: int
        """
        return self._initial_batch_sample_percentage

    @initial_batch_sample_percentage.setter
    def initial_batch_sample_percentage(self, initial_batch_sample_percentage):
        """Sets the initial_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.

        The percentage of data needed to be labeled in the first batch.

        :param initial_batch_sample_percentage: The initial_batch_sample_percentage of this GoogleCloudAiplatformV1beta1SampleConfig.
        :type initial_batch_sample_percentage: int
        """

        self._initial_batch_sample_percentage = initial_batch_sample_percentage

    @property
    def sample_strategy(self):
        """Gets the sample_strategy of this GoogleCloudAiplatformV1beta1SampleConfig.

        Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.

        :return: The sample_strategy of this GoogleCloudAiplatformV1beta1SampleConfig.
        :rtype: str
        """
        return self._sample_strategy

    @sample_strategy.setter
    def sample_strategy(self, sample_strategy):
        """Sets the sample_strategy of this GoogleCloudAiplatformV1beta1SampleConfig.

        Field to choose sampling strategy. Sampling strategy will decide which data should be selected for human labeling in every batch.

        :param sample_strategy: The sample_strategy of this GoogleCloudAiplatformV1beta1SampleConfig.
        :type sample_strategy: str
        """
        allowed_values = ["SAMPLE_STRATEGY_UNSPECIFIED", "UNCERTAINTY"]  # noqa: E501
        if sample_strategy not in allowed_values:
            raise ValueError(
                "Invalid value for `sample_strategy` ({0}), must be one of {1}"
                .format(sample_strategy, allowed_values)
            )

        self._sample_strategy = sample_strategy
