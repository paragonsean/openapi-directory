# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_publisher_model_call_to_action_regional_resource_references import GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences
from openapi_server import util


class GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notebooks: List[GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]=None):
        """GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks - a model defined in OpenAPI

        :param notebooks: The notebooks of this GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks.
        """
        self.openapi_types = {
            'notebooks': List[GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        }

        self.attribute_map = {
            'notebooks': 'notebooks'
        }

        self._notebooks = notebooks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks of this GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notebooks(self):
        """Gets the notebooks of this GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks.

        Required. Regional resource references to notebooks.

        :return: The notebooks of this GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks.
        :rtype: List[GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        """
        return self._notebooks

    @notebooks.setter
    def notebooks(self, notebooks):
        """Sets the notebooks of this GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks.

        Required. Regional resource references to notebooks.

        :param notebooks: The notebooks of this GoogleCloudAiplatformV1beta1PublisherModelCallToActionOpenNotebooks.
        :type notebooks: List[GoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences]
        """

        self._notebooks = notebooks
