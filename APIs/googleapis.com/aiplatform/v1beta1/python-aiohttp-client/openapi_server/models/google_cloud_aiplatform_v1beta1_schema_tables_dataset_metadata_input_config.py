# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_schema_tables_dataset_metadata_big_query_source import GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource
from openapi_server.models.google_cloud_aiplatform_v1beta1_schema_tables_dataset_metadata_gcs_source import GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery_source: GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource=None, gcs_source: GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource=None):
        """GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig - a model defined in OpenAPI

        :param bigquery_source: The bigquery_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.
        :param gcs_source: The gcs_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.
        """
        self.openapi_types = {
            'bigquery_source': GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource,
            'gcs_source': GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource
        }

        self.attribute_map = {
            'bigquery_source': 'bigquerySource',
            'gcs_source': 'gcsSource'
        }

        self._bigquery_source = bigquery_source
        self._gcs_source = gcs_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery_source(self):
        """Gets the bigquery_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.


        :return: The bigquery_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.
        :rtype: GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource
        """
        return self._bigquery_source

    @bigquery_source.setter
    def bigquery_source(self, bigquery_source):
        """Sets the bigquery_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.


        :param bigquery_source: The bigquery_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.
        :type bigquery_source: GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataBigQuerySource
        """

        self._bigquery_source = bigquery_source

    @property
    def gcs_source(self):
        """Gets the gcs_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.


        :return: The gcs_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.
        :rtype: GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource
        """
        return self._gcs_source

    @gcs_source.setter
    def gcs_source(self, gcs_source):
        """Sets the gcs_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.


        :param gcs_source: The gcs_source of this GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataInputConfig.
        :type gcs_source: GoogleCloudAiplatformV1beta1SchemaTablesDatasetMetadataGcsSource
        """

        self._gcs_source = gcs_source
