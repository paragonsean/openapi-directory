# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_find_neighbors_request_query import GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery
from openapi_server import util


class GoogleCloudAiplatformV1beta1FindNeighborsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployed_index_id: str=None, queries: List[GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery]=None, return_full_datapoint: bool=None):
        """GoogleCloudAiplatformV1beta1FindNeighborsRequest - a model defined in OpenAPI

        :param deployed_index_id: The deployed_index_id of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        :param queries: The queries of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        :param return_full_datapoint: The return_full_datapoint of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        """
        self.openapi_types = {
            'deployed_index_id': str,
            'queries': List[GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery],
            'return_full_datapoint': bool
        }

        self.attribute_map = {
            'deployed_index_id': 'deployedIndexId',
            'queries': 'queries',
            'return_full_datapoint': 'returnFullDatapoint'
        }

        self._deployed_index_id = deployed_index_id
        self._queries = queries
        self._return_full_datapoint = return_full_datapoint

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1FindNeighborsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1FindNeighborsRequest of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployed_index_id(self):
        """Gets the deployed_index_id of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.

        The ID of the DeployedIndex that will serve the request. This request is sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has a DeployedIndex.id field. The value of the field below must equal one of the DeployedIndex.id fields of the IndexEndpoint that is being called for this request.

        :return: The deployed_index_id of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        :rtype: str
        """
        return self._deployed_index_id

    @deployed_index_id.setter
    def deployed_index_id(self, deployed_index_id):
        """Sets the deployed_index_id of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.

        The ID of the DeployedIndex that will serve the request. This request is sent to a specific IndexEndpoint, as per the IndexEndpoint.network. That IndexEndpoint also has IndexEndpoint.deployed_indexes, and each such index has a DeployedIndex.id field. The value of the field below must equal one of the DeployedIndex.id fields of the IndexEndpoint that is being called for this request.

        :param deployed_index_id: The deployed_index_id of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        :type deployed_index_id: str
        """

        self._deployed_index_id = deployed_index_id

    @property
    def queries(self):
        """Gets the queries of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.

        The list of queries.

        :return: The queries of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        :rtype: List[GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery]
        """
        return self._queries

    @queries.setter
    def queries(self, queries):
        """Sets the queries of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.

        The list of queries.

        :param queries: The queries of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        :type queries: List[GoogleCloudAiplatformV1beta1FindNeighborsRequestQuery]
        """

        self._queries = queries

    @property
    def return_full_datapoint(self):
        """Gets the return_full_datapoint of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.

        If set to true, the full datapoints (including all vector values and restricts) of the nearest neighbors are returned. Note that returning full datapoint will significantly increase the latency and cost of the query.

        :return: The return_full_datapoint of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        :rtype: bool
        """
        return self._return_full_datapoint

    @return_full_datapoint.setter
    def return_full_datapoint(self, return_full_datapoint):
        """Sets the return_full_datapoint of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.

        If set to true, the full datapoints (including all vector values and restricts) of the nearest neighbors are returned. Note that returning full datapoint will significantly increase the latency and cost of the query.

        :param return_full_datapoint: The return_full_datapoint of this GoogleCloudAiplatformV1beta1FindNeighborsRequest.
        :type return_full_datapoint: bool
        """

        self._return_full_datapoint = return_full_datapoint
