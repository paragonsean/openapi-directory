# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence_threshold: float=None, max_predictions: int=None, one_sec_interval_classification: bool=None, segment_classification: bool=None, shot_classification: bool=None):
        """GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams - a model defined in OpenAPI

        :param confidence_threshold: The confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :param max_predictions: The max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :param one_sec_interval_classification: The one_sec_interval_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :param segment_classification: The segment_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :param shot_classification: The shot_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        """
        self.openapi_types = {
            'confidence_threshold': float,
            'max_predictions': int,
            'one_sec_interval_classification': bool,
            'segment_classification': bool,
            'shot_classification': bool
        }

        self.attribute_map = {
            'confidence_threshold': 'confidenceThreshold',
            'max_predictions': 'maxPredictions',
            'one_sec_interval_classification': 'oneSecIntervalClassification',
            'segment_classification': 'segmentClassification',
            'shot_classification': 'shotClassification'
        }

        self._confidence_threshold = confidence_threshold
        self._max_predictions = max_predictions
        self._one_sec_interval_classification = one_sec_interval_classification
        self._segment_classification = segment_classification
        self._shot_classification = shot_classification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence_threshold(self):
        """Gets the confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        The Model only returns predictions with at least this confidence score. Default value is 0.0

        :return: The confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :rtype: float
        """
        return self._confidence_threshold

    @confidence_threshold.setter
    def confidence_threshold(self, confidence_threshold):
        """Sets the confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        The Model only returns predictions with at least this confidence score. Default value is 0.0

        :param confidence_threshold: The confidence_threshold of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :type confidence_threshold: float
        """

        self._confidence_threshold = confidence_threshold

    @property
    def max_predictions(self):
        """Gets the max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10,000.

        :return: The max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :rtype: int
        """
        return self._max_predictions

    @max_predictions.setter
    def max_predictions(self, max_predictions):
        """Sets the max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        The Model only returns up to that many top, by confidence score, predictions per instance. If this number is very high, the Model may return fewer predictions. Default value is 10,000.

        :param max_predictions: The max_predictions of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :type max_predictions: int
        """

        self._max_predictions = max_predictions

    @property
    def one_sec_interval_classification(self):
        """Gets the one_sec_interval_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        Set to true to request classification for a video at one-second intervals. Vertex AI returns labels and their confidence scores for each second of the entire time segment of the video that user specified in the input WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false

        :return: The one_sec_interval_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :rtype: bool
        """
        return self._one_sec_interval_classification

    @one_sec_interval_classification.setter
    def one_sec_interval_classification(self, one_sec_interval_classification):
        """Sets the one_sec_interval_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        Set to true to request classification for a video at one-second intervals. Vertex AI returns labels and their confidence scores for each second of the entire time segment of the video that user specified in the input WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false

        :param one_sec_interval_classification: The one_sec_interval_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :type one_sec_interval_classification: bool
        """

        self._one_sec_interval_classification = one_sec_interval_classification

    @property
    def segment_classification(self):
        """Gets the segment_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        Set to true to request segment-level classification. Vertex AI returns labels and their confidence scores for the entire time segment of the video that user specified in the input instance. Default value is true

        :return: The segment_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :rtype: bool
        """
        return self._segment_classification

    @segment_classification.setter
    def segment_classification(self, segment_classification):
        """Sets the segment_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        Set to true to request segment-level classification. Vertex AI returns labels and their confidence scores for the entire time segment of the video that user specified in the input instance. Default value is true

        :param segment_classification: The segment_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :type segment_classification: bool
        """

        self._segment_classification = segment_classification

    @property
    def shot_classification(self):
        """Gets the shot_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        Set to true to request shot-level classification. Vertex AI determines the boundaries for each camera shot in the entire time segment of the video that user specified in the input instance. Vertex AI then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false

        :return: The shot_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :rtype: bool
        """
        return self._shot_classification

    @shot_classification.setter
    def shot_classification(self, shot_classification):
        """Sets the shot_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.

        Set to true to request shot-level classification. Vertex AI determines the boundaries for each camera shot in the entire time segment of the video that user specified in the input instance. Vertex AI then returns labels and their confidence scores for each detected shot, along with the start and end time of the shot. WARNING: Model evaluation is not done for this classification type, the quality of it depends on the training data, but there are no metrics provided to describe that quality. Default value is false

        :param shot_classification: The shot_classification of this GoogleCloudAiplatformV1beta1SchemaPredictParamsVideoClassificationPredictionParams.
        :type shot_classification: bool
        """

        self._shot_classification = shot_classification
