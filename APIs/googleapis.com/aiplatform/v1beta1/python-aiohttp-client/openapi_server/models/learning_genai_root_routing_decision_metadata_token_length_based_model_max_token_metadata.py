# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_num_input_tokens: int=None, max_num_output_tokens: int=None, model_id: str=None):
        """LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata - a model defined in OpenAPI

        :param max_num_input_tokens: The max_num_input_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        :param max_num_output_tokens: The max_num_output_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        :param model_id: The model_id of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        """
        self.openapi_types = {
            'max_num_input_tokens': int,
            'max_num_output_tokens': int,
            'model_id': str
        }

        self.attribute_map = {
            'max_num_input_tokens': 'maxNumInputTokens',
            'max_num_output_tokens': 'maxNumOutputTokens',
            'model_id': 'modelId'
        }

        self._max_num_input_tokens = max_num_input_tokens
        self._max_num_output_tokens = max_num_output_tokens
        self._model_id = model_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_num_input_tokens(self):
        """Gets the max_num_input_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.


        :return: The max_num_input_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        :rtype: int
        """
        return self._max_num_input_tokens

    @max_num_input_tokens.setter
    def max_num_input_tokens(self, max_num_input_tokens):
        """Sets the max_num_input_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.


        :param max_num_input_tokens: The max_num_input_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        :type max_num_input_tokens: int
        """

        self._max_num_input_tokens = max_num_input_tokens

    @property
    def max_num_output_tokens(self):
        """Gets the max_num_output_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.


        :return: The max_num_output_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        :rtype: int
        """
        return self._max_num_output_tokens

    @max_num_output_tokens.setter
    def max_num_output_tokens(self, max_num_output_tokens):
        """Sets the max_num_output_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.


        :param max_num_output_tokens: The max_num_output_tokens of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        :type max_num_output_tokens: int
        """

        self._max_num_output_tokens = max_num_output_tokens

    @property
    def model_id(self):
        """Gets the model_id of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.


        :return: The model_id of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id):
        """Sets the model_id of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.


        :param model_id: The model_id of this LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.
        :type model_id: str
        """

        self._model_id = model_id
