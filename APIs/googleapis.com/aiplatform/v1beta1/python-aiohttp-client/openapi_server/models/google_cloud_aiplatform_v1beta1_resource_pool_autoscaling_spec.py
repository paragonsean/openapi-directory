# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_replica_count: str=None, min_replica_count: str=None):
        """GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec - a model defined in OpenAPI

        :param max_replica_count: The max_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.
        :param min_replica_count: The min_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.
        """
        self.openapi_types = {
            'max_replica_count': str,
            'min_replica_count': str
        }

        self.attribute_map = {
            'max_replica_count': 'maxReplicaCount',
            'min_replica_count': 'minReplicaCount'
        }

        self._max_replica_count = max_replica_count
        self._min_replica_count = min_replica_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_replica_count(self):
        """Gets the max_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.

        Optional. max replicas in the node pool, must be ≥ replica_count and > min_replica_count or will throw error

        :return: The max_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.
        :rtype: str
        """
        return self._max_replica_count

    @max_replica_count.setter
    def max_replica_count(self, max_replica_count):
        """Sets the max_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.

        Optional. max replicas in the node pool, must be ≥ replica_count and > min_replica_count or will throw error

        :param max_replica_count: The max_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.
        :type max_replica_count: str
        """

        self._max_replica_count = max_replica_count

    @property
    def min_replica_count(self):
        """Gets the min_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.

        Optional. min replicas in the node pool, must be ≤ replica_count and < max_replica_count or will throw error

        :return: The min_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.
        :rtype: str
        """
        return self._min_replica_count

    @min_replica_count.setter
    def min_replica_count(self, min_replica_count):
        """Sets the min_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.

        Optional. min replicas in the node pool, must be ≤ replica_count and < max_replica_count or will throw error

        :param min_replica_count: The min_replica_count of this GoogleCloudAiplatformV1beta1ResourcePoolAutoscalingSpec.
        :type min_replica_count: str
        """

        self._min_replica_count = min_replica_count
