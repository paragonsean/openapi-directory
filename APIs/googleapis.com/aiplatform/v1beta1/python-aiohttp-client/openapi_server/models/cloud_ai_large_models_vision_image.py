# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_ai_large_models_vision_image_rai_scores import CloudAiLargeModelsVisionImageRAIScores
from openapi_server.models.cloud_ai_large_models_vision_rai_info import CloudAiLargeModelsVisionRaiInfo
from openapi_server.models.cloud_ai_large_models_vision_semantic_filter_response import CloudAiLargeModelsVisionSemanticFilterResponse
from openapi_server import util


class CloudAiLargeModelsVisionImage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, encoding: str=None, image: str=None, image_rai_scores: CloudAiLargeModelsVisionImageRAIScores=None, rai_info: CloudAiLargeModelsVisionRaiInfo=None, semantic_filter_response: CloudAiLargeModelsVisionSemanticFilterResponse=None, text: str=None, uri: str=None):
        """CloudAiLargeModelsVisionImage - a model defined in OpenAPI

        :param encoding: The encoding of this CloudAiLargeModelsVisionImage.
        :param image: The image of this CloudAiLargeModelsVisionImage.
        :param image_rai_scores: The image_rai_scores of this CloudAiLargeModelsVisionImage.
        :param rai_info: The rai_info of this CloudAiLargeModelsVisionImage.
        :param semantic_filter_response: The semantic_filter_response of this CloudAiLargeModelsVisionImage.
        :param text: The text of this CloudAiLargeModelsVisionImage.
        :param uri: The uri of this CloudAiLargeModelsVisionImage.
        """
        self.openapi_types = {
            'encoding': str,
            'image': str,
            'image_rai_scores': CloudAiLargeModelsVisionImageRAIScores,
            'rai_info': CloudAiLargeModelsVisionRaiInfo,
            'semantic_filter_response': CloudAiLargeModelsVisionSemanticFilterResponse,
            'text': str,
            'uri': str
        }

        self.attribute_map = {
            'encoding': 'encoding',
            'image': 'image',
            'image_rai_scores': 'imageRaiScores',
            'rai_info': 'raiInfo',
            'semantic_filter_response': 'semanticFilterResponse',
            'text': 'text',
            'uri': 'uri'
        }

        self._encoding = encoding
        self._image = image
        self._image_rai_scores = image_rai_scores
        self._rai_info = rai_info
        self._semantic_filter_response = semantic_filter_response
        self._text = text
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudAiLargeModelsVisionImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudAiLargeModelsVisionImage of this CloudAiLargeModelsVisionImage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def encoding(self):
        """Gets the encoding of this CloudAiLargeModelsVisionImage.

        Image encoding, encoded as \"image/png\" or \"image/jpg\".

        :return: The encoding of this CloudAiLargeModelsVisionImage.
        :rtype: str
        """
        return self._encoding

    @encoding.setter
    def encoding(self, encoding):
        """Sets the encoding of this CloudAiLargeModelsVisionImage.

        Image encoding, encoded as \"image/png\" or \"image/jpg\".

        :param encoding: The encoding of this CloudAiLargeModelsVisionImage.
        :type encoding: str
        """

        self._encoding = encoding

    @property
    def image(self):
        """Gets the image of this CloudAiLargeModelsVisionImage.

        Raw bytes.

        :return: The image of this CloudAiLargeModelsVisionImage.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this CloudAiLargeModelsVisionImage.

        Raw bytes.

        :param image: The image of this CloudAiLargeModelsVisionImage.
        :type image: str
        """

        self._image = image

    @property
    def image_rai_scores(self):
        """Gets the image_rai_scores of this CloudAiLargeModelsVisionImage.


        :return: The image_rai_scores of this CloudAiLargeModelsVisionImage.
        :rtype: CloudAiLargeModelsVisionImageRAIScores
        """
        return self._image_rai_scores

    @image_rai_scores.setter
    def image_rai_scores(self, image_rai_scores):
        """Sets the image_rai_scores of this CloudAiLargeModelsVisionImage.


        :param image_rai_scores: The image_rai_scores of this CloudAiLargeModelsVisionImage.
        :type image_rai_scores: CloudAiLargeModelsVisionImageRAIScores
        """

        self._image_rai_scores = image_rai_scores

    @property
    def rai_info(self):
        """Gets the rai_info of this CloudAiLargeModelsVisionImage.


        :return: The rai_info of this CloudAiLargeModelsVisionImage.
        :rtype: CloudAiLargeModelsVisionRaiInfo
        """
        return self._rai_info

    @rai_info.setter
    def rai_info(self, rai_info):
        """Sets the rai_info of this CloudAiLargeModelsVisionImage.


        :param rai_info: The rai_info of this CloudAiLargeModelsVisionImage.
        :type rai_info: CloudAiLargeModelsVisionRaiInfo
        """

        self._rai_info = rai_info

    @property
    def semantic_filter_response(self):
        """Gets the semantic_filter_response of this CloudAiLargeModelsVisionImage.


        :return: The semantic_filter_response of this CloudAiLargeModelsVisionImage.
        :rtype: CloudAiLargeModelsVisionSemanticFilterResponse
        """
        return self._semantic_filter_response

    @semantic_filter_response.setter
    def semantic_filter_response(self, semantic_filter_response):
        """Sets the semantic_filter_response of this CloudAiLargeModelsVisionImage.


        :param semantic_filter_response: The semantic_filter_response of this CloudAiLargeModelsVisionImage.
        :type semantic_filter_response: CloudAiLargeModelsVisionSemanticFilterResponse
        """

        self._semantic_filter_response = semantic_filter_response

    @property
    def text(self):
        """Gets the text of this CloudAiLargeModelsVisionImage.

        Text/Expanded text input for imagen.

        :return: The text of this CloudAiLargeModelsVisionImage.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this CloudAiLargeModelsVisionImage.

        Text/Expanded text input for imagen.

        :param text: The text of this CloudAiLargeModelsVisionImage.
        :type text: str
        """

        self._text = text

    @property
    def uri(self):
        """Gets the uri of this CloudAiLargeModelsVisionImage.

        Path to another storage (typically Google Cloud Storage).

        :return: The uri of this CloudAiLargeModelsVisionImage.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this CloudAiLargeModelsVisionImage.

        Path to another storage (typically Google Cloud Storage).

        :param uri: The uri of this CloudAiLargeModelsVisionImage.
        :type uri: str
        """

        self._uri = uri
