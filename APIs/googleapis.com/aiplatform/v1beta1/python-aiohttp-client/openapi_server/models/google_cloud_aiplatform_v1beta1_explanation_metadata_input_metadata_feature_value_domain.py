# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_value: float=None, min_value: float=None, original_mean: float=None, original_stddev: float=None):
        """GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain - a model defined in OpenAPI

        :param max_value: The max_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :param min_value: The min_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :param original_mean: The original_mean of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :param original_stddev: The original_stddev of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        """
        self.openapi_types = {
            'max_value': float,
            'min_value': float,
            'original_mean': float,
            'original_stddev': float
        }

        self.attribute_map = {
            'max_value': 'maxValue',
            'min_value': 'minValue',
            'original_mean': 'originalMean',
            'original_stddev': 'originalStddev'
        }

        self._max_value = max_value
        self._min_value = min_value
        self._original_mean = original_mean
        self._original_stddev = original_stddev

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_value(self):
        """Gets the max_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.

        The maximum permissible value for this feature.

        :return: The max_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :rtype: float
        """
        return self._max_value

    @max_value.setter
    def max_value(self, max_value):
        """Sets the max_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.

        The maximum permissible value for this feature.

        :param max_value: The max_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :type max_value: float
        """

        self._max_value = max_value

    @property
    def min_value(self):
        """Gets the min_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.

        The minimum permissible value for this feature.

        :return: The min_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :rtype: float
        """
        return self._min_value

    @min_value.setter
    def min_value(self, min_value):
        """Sets the min_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.

        The minimum permissible value for this feature.

        :param min_value: The min_value of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :type min_value: float
        """

        self._min_value = min_value

    @property
    def original_mean(self):
        """Gets the original_mean of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.

        If this input feature has been normalized to a mean value of 0, the original_mean specifies the mean value of the domain prior to normalization.

        :return: The original_mean of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :rtype: float
        """
        return self._original_mean

    @original_mean.setter
    def original_mean(self, original_mean):
        """Sets the original_mean of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.

        If this input feature has been normalized to a mean value of 0, the original_mean specifies the mean value of the domain prior to normalization.

        :param original_mean: The original_mean of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :type original_mean: float
        """

        self._original_mean = original_mean

    @property
    def original_stddev(self):
        """Gets the original_stddev of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.

        If this input feature has been normalized to a standard deviation of 1.0, the original_stddev specifies the standard deviation of the domain prior to normalization.

        :return: The original_stddev of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :rtype: float
        """
        return self._original_stddev

    @original_stddev.setter
    def original_stddev(self, original_stddev):
        """Sets the original_stddev of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.

        If this input feature has been normalized to a standard deviation of 1.0, the original_stddev specifies the standard deviation of the domain prior to normalization.

        :param original_stddev: The original_stddev of this GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadataFeatureValueDomain.
        :type original_stddev: float
        """

        self._original_stddev = original_stddev
