# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UtilStatusProto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, canonical_code: int=None, code: int=None, message: str=None, message_set: object=None, space: str=None):
        """UtilStatusProto - a model defined in OpenAPI

        :param canonical_code: The canonical_code of this UtilStatusProto.
        :param code: The code of this UtilStatusProto.
        :param message: The message of this UtilStatusProto.
        :param message_set: The message_set of this UtilStatusProto.
        :param space: The space of this UtilStatusProto.
        """
        self.openapi_types = {
            'canonical_code': int,
            'code': int,
            'message': str,
            'message_set': object,
            'space': str
        }

        self.attribute_map = {
            'canonical_code': 'canonicalCode',
            'code': 'code',
            'message': 'message',
            'message_set': 'messageSet',
            'space': 'space'
        }

        self._canonical_code = canonical_code
        self._code = code
        self._message = message
        self._message_set = message_set
        self._space = space

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UtilStatusProto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UtilStatusProto of this UtilStatusProto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def canonical_code(self):
        """Gets the canonical_code of this UtilStatusProto.

        The canonical error code (see codes.proto) that most closely corresponds to this status. This may be missing, and in the common case of the generic space, it definitely will be.

        :return: The canonical_code of this UtilStatusProto.
        :rtype: int
        """
        return self._canonical_code

    @canonical_code.setter
    def canonical_code(self, canonical_code):
        """Sets the canonical_code of this UtilStatusProto.

        The canonical error code (see codes.proto) that most closely corresponds to this status. This may be missing, and in the common case of the generic space, it definitely will be.

        :param canonical_code: The canonical_code of this UtilStatusProto.
        :type canonical_code: int
        """

        self._canonical_code = canonical_code

    @property
    def code(self):
        """Gets the code of this UtilStatusProto.

        Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto

        :return: The code of this UtilStatusProto.
        :rtype: int
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this UtilStatusProto.

        Numeric code drawn from the space specified below. Often, this is the canonical error space, and code is drawn from google3/util/task/codes.proto

        :param code: The code of this UtilStatusProto.
        :type code: int
        """

        self._code = code

    @property
    def message(self):
        """Gets the message of this UtilStatusProto.

        Detail message

        :return: The message of this UtilStatusProto.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this UtilStatusProto.

        Detail message

        :param message: The message of this UtilStatusProto.
        :type message: str
        """

        self._message = message

    @property
    def message_set(self):
        """Gets the message_set of this UtilStatusProto.

        This is proto2's version of MessageSet.

        :return: The message_set of this UtilStatusProto.
        :rtype: object
        """
        return self._message_set

    @message_set.setter
    def message_set(self, message_set):
        """Sets the message_set of this UtilStatusProto.

        This is proto2's version of MessageSet.

        :param message_set: The message_set of this UtilStatusProto.
        :type message_set: object
        """

        self._message_set = message_set

    @property
    def space(self):
        """Gets the space of this UtilStatusProto.

        The following are usually only present when code != 0 Space to which this status belongs

        :return: The space of this UtilStatusProto.
        :rtype: str
        """
        return self._space

    @space.setter
    def space(self, space):
        """Sets the space of this UtilStatusProto.

        The following are usually only present when code != 0 Space to which this status belongs

        :param space: The space of this UtilStatusProto.
        :type space: str
        """

        self._space = space
