# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_explain_response_concurrent_explanation import GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanation
from openapi_server.models.google_cloud_aiplatform_v1beta1_explanation import GoogleCloudAiplatformV1beta1Explanation
from openapi_server import util


class GoogleCloudAiplatformV1beta1ExplainResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, concurrent_explanations: Dict[str, GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanation]=None, deployed_model_id: str=None, explanations: List[GoogleCloudAiplatformV1beta1Explanation]=None, predictions: List[object]=None):
        """GoogleCloudAiplatformV1beta1ExplainResponse - a model defined in OpenAPI

        :param concurrent_explanations: The concurrent_explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :param deployed_model_id: The deployed_model_id of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :param explanations: The explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :param predictions: The predictions of this GoogleCloudAiplatformV1beta1ExplainResponse.
        """
        self.openapi_types = {
            'concurrent_explanations': Dict[str, GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanation],
            'deployed_model_id': str,
            'explanations': List[GoogleCloudAiplatformV1beta1Explanation],
            'predictions': List[object]
        }

        self.attribute_map = {
            'concurrent_explanations': 'concurrentExplanations',
            'deployed_model_id': 'deployedModelId',
            'explanations': 'explanations',
            'predictions': 'predictions'
        }

        self._concurrent_explanations = concurrent_explanations
        self._deployed_model_id = deployed_model_id
        self._explanations = explanations
        self._predictions = predictions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ExplainResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ExplainResponse of this GoogleCloudAiplatformV1beta1ExplainResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def concurrent_explanations(self):
        """Gets the concurrent_explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.

        This field stores the results of the explanations run in parallel with The default explanation strategy/method.

        :return: The concurrent_explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :rtype: Dict[str, GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanation]
        """
        return self._concurrent_explanations

    @concurrent_explanations.setter
    def concurrent_explanations(self, concurrent_explanations):
        """Sets the concurrent_explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.

        This field stores the results of the explanations run in parallel with The default explanation strategy/method.

        :param concurrent_explanations: The concurrent_explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :type concurrent_explanations: Dict[str, GoogleCloudAiplatformV1beta1ExplainResponseConcurrentExplanation]
        """

        self._concurrent_explanations = concurrent_explanations

    @property
    def deployed_model_id(self):
        """Gets the deployed_model_id of this GoogleCloudAiplatformV1beta1ExplainResponse.

        ID of the Endpoint's DeployedModel that served this explanation.

        :return: The deployed_model_id of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :rtype: str
        """
        return self._deployed_model_id

    @deployed_model_id.setter
    def deployed_model_id(self, deployed_model_id):
        """Sets the deployed_model_id of this GoogleCloudAiplatformV1beta1ExplainResponse.

        ID of the Endpoint's DeployedModel that served this explanation.

        :param deployed_model_id: The deployed_model_id of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :type deployed_model_id: str
        """

        self._deployed_model_id = deployed_model_id

    @property
    def explanations(self):
        """Gets the explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.

        The explanations of the Model's PredictResponse.predictions. It has the same number of elements as instances to be explained.

        :return: The explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :rtype: List[GoogleCloudAiplatformV1beta1Explanation]
        """
        return self._explanations

    @explanations.setter
    def explanations(self, explanations):
        """Sets the explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.

        The explanations of the Model's PredictResponse.predictions. It has the same number of elements as instances to be explained.

        :param explanations: The explanations of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :type explanations: List[GoogleCloudAiplatformV1beta1Explanation]
        """

        self._explanations = explanations

    @property
    def predictions(self):
        """Gets the predictions of this GoogleCloudAiplatformV1beta1ExplainResponse.

        The predictions that are the output of the predictions call. Same as PredictResponse.predictions.

        :return: The predictions of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :rtype: List[object]
        """
        return self._predictions

    @predictions.setter
    def predictions(self, predictions):
        """Sets the predictions of this GoogleCloudAiplatformV1beta1ExplainResponse.

        The predictions that are the output of the predictions call. Same as PredictResponse.predictions.

        :param predictions: The predictions of this GoogleCloudAiplatformV1beta1ExplainResponse.
        :type predictions: List[object]
        """

        self._predictions = predictions
