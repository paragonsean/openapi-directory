# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_feature_selector import GoogleCloudAiplatformV1beta1FeatureSelector
from openapi_server.models.google_type_interval import GoogleTypeInterval
from openapi_server import util


class GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feature_selector: GoogleCloudAiplatformV1beta1FeatureSelector=None, skip_online_storage_delete: bool=None, time_range: GoogleTypeInterval=None):
        """GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature - a model defined in OpenAPI

        :param feature_selector: The feature_selector of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        :param skip_online_storage_delete: The skip_online_storage_delete of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        :param time_range: The time_range of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        """
        self.openapi_types = {
            'feature_selector': GoogleCloudAiplatformV1beta1FeatureSelector,
            'skip_online_storage_delete': bool,
            'time_range': GoogleTypeInterval
        }

        self.attribute_map = {
            'feature_selector': 'featureSelector',
            'skip_online_storage_delete': 'skipOnlineStorageDelete',
            'time_range': 'timeRange'
        }

        self._feature_selector = feature_selector
        self._skip_online_storage_delete = skip_online_storage_delete
        self._time_range = time_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feature_selector(self):
        """Gets the feature_selector of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.


        :return: The feature_selector of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        :rtype: GoogleCloudAiplatformV1beta1FeatureSelector
        """
        return self._feature_selector

    @feature_selector.setter
    def feature_selector(self, feature_selector):
        """Sets the feature_selector of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.


        :param feature_selector: The feature_selector of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        :type feature_selector: GoogleCloudAiplatformV1beta1FeatureSelector
        """

        self._feature_selector = feature_selector

    @property
    def skip_online_storage_delete(self):
        """Gets the skip_online_storage_delete of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.

        If set, data will not be deleted from online storage. When time range is older than the data in online storage, setting this to be true will make the deletion have no impact on online serving.

        :return: The skip_online_storage_delete of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        :rtype: bool
        """
        return self._skip_online_storage_delete

    @skip_online_storage_delete.setter
    def skip_online_storage_delete(self, skip_online_storage_delete):
        """Sets the skip_online_storage_delete of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.

        If set, data will not be deleted from online storage. When time range is older than the data in online storage, setting this to be true will make the deletion have no impact on online serving.

        :param skip_online_storage_delete: The skip_online_storage_delete of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        :type skip_online_storage_delete: bool
        """

        self._skip_online_storage_delete = skip_online_storage_delete

    @property
    def time_range(self):
        """Gets the time_range of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.


        :return: The time_range of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        :rtype: GoogleTypeInterval
        """
        return self._time_range

    @time_range.setter
    def time_range(self, time_range):
        """Sets the time_range of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.


        :param time_range: The time_range of this GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequestSelectTimeRangeAndFeature.
        :type time_range: GoogleTypeInterval
        """

        self._time_range = time_range
