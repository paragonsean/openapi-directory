# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_feature_view_vector_search_config_tree_ah_config import GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig
from openapi_server import util


class GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brute_force_config: object=None, crowding_column: str=None, distance_measure_type: str=None, embedding_column: str=None, embedding_dimension: int=None, filter_columns: List[str]=None, tree_ah_config: GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig=None):
        """GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig - a model defined in OpenAPI

        :param brute_force_config: The brute_force_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :param crowding_column: The crowding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :param distance_measure_type: The distance_measure_type of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :param embedding_column: The embedding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :param embedding_dimension: The embedding_dimension of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :param filter_columns: The filter_columns of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :param tree_ah_config: The tree_ah_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        """
        self.openapi_types = {
            'brute_force_config': object,
            'crowding_column': str,
            'distance_measure_type': str,
            'embedding_column': str,
            'embedding_dimension': int,
            'filter_columns': List[str],
            'tree_ah_config': GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig
        }

        self.attribute_map = {
            'brute_force_config': 'bruteForceConfig',
            'crowding_column': 'crowdingColumn',
            'distance_measure_type': 'distanceMeasureType',
            'embedding_column': 'embeddingColumn',
            'embedding_dimension': 'embeddingDimension',
            'filter_columns': 'filterColumns',
            'tree_ah_config': 'treeAhConfig'
        }

        self._brute_force_config = brute_force_config
        self._crowding_column = crowding_column
        self._distance_measure_type = distance_measure_type
        self._embedding_column = embedding_column
        self._embedding_dimension = embedding_dimension
        self._filter_columns = filter_columns
        self._tree_ah_config = tree_ah_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brute_force_config(self):
        """Gets the brute_force_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.


        :return: The brute_force_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :rtype: object
        """
        return self._brute_force_config

    @brute_force_config.setter
    def brute_force_config(self, brute_force_config):
        """Sets the brute_force_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.


        :param brute_force_config: The brute_force_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :type brute_force_config: object
        """

        self._brute_force_config = brute_force_config

    @property
    def crowding_column(self):
        """Gets the crowding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. Column of crowding. This column contains crowding attribute which is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.

        :return: The crowding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :rtype: str
        """
        return self._crowding_column

    @crowding_column.setter
    def crowding_column(self, crowding_column):
        """Sets the crowding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. Column of crowding. This column contains crowding attribute which is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.

        :param crowding_column: The crowding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :type crowding_column: str
        """

        self._crowding_column = crowding_column

    @property
    def distance_measure_type(self):
        """Gets the distance_measure_type of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. The distance measure used in nearest neighbor search.

        :return: The distance_measure_type of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :rtype: str
        """
        return self._distance_measure_type

    @distance_measure_type.setter
    def distance_measure_type(self, distance_measure_type):
        """Sets the distance_measure_type of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. The distance measure used in nearest neighbor search.

        :param distance_measure_type: The distance_measure_type of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :type distance_measure_type: str
        """
        allowed_values = ["DISTANCE_MEASURE_TYPE_UNSPECIFIED", "SQUARED_L2_DISTANCE", "COSINE_DISTANCE", "DOT_PRODUCT_DISTANCE"]  # noqa: E501
        if distance_measure_type not in allowed_values:
            raise ValueError(
                "Invalid value for `distance_measure_type` ({0}), must be one of {1}"
                .format(distance_measure_type, allowed_values)
            )

        self._distance_measure_type = distance_measure_type

    @property
    def embedding_column(self):
        """Gets the embedding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. Column of embedding. This column contains the source data to create index for vector search. embedding_column must be set when using vector search.

        :return: The embedding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :rtype: str
        """
        return self._embedding_column

    @embedding_column.setter
    def embedding_column(self, embedding_column):
        """Sets the embedding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. Column of embedding. This column contains the source data to create index for vector search. embedding_column must be set when using vector search.

        :param embedding_column: The embedding_column of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :type embedding_column: str
        """

        self._embedding_column = embedding_column

    @property
    def embedding_dimension(self):
        """Gets the embedding_dimension of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. The number of dimensions of the input embedding.

        :return: The embedding_dimension of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :rtype: int
        """
        return self._embedding_dimension

    @embedding_dimension.setter
    def embedding_dimension(self, embedding_dimension):
        """Sets the embedding_dimension of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. The number of dimensions of the input embedding.

        :param embedding_dimension: The embedding_dimension of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :type embedding_dimension: int
        """

        self._embedding_dimension = embedding_dimension

    @property
    def filter_columns(self):
        """Gets the filter_columns of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. Columns of features that're used to filter vector search results.

        :return: The filter_columns of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :rtype: List[str]
        """
        return self._filter_columns

    @filter_columns.setter
    def filter_columns(self, filter_columns):
        """Sets the filter_columns of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.

        Optional. Columns of features that're used to filter vector search results.

        :param filter_columns: The filter_columns of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :type filter_columns: List[str]
        """

        self._filter_columns = filter_columns

    @property
    def tree_ah_config(self):
        """Gets the tree_ah_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.


        :return: The tree_ah_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :rtype: GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig
        """
        return self._tree_ah_config

    @tree_ah_config.setter
    def tree_ah_config(self, tree_ah_config):
        """Sets the tree_ah_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.


        :param tree_ah_config: The tree_ah_config of this GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.
        :type tree_ah_config: GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig
        """

        self._tree_ah_config = tree_ah_config
