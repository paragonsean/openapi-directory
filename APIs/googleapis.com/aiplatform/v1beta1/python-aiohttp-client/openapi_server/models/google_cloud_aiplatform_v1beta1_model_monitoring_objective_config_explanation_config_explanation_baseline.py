# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_big_query_destination import GoogleCloudAiplatformV1beta1BigQueryDestination
from openapi_server.models.google_cloud_aiplatform_v1beta1_gcs_destination import GoogleCloudAiplatformV1beta1GcsDestination
from openapi_server import util


class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigquery: GoogleCloudAiplatformV1beta1BigQueryDestination=None, gcs: GoogleCloudAiplatformV1beta1GcsDestination=None, prediction_format: str=None):
        """GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline - a model defined in OpenAPI

        :param bigquery: The bigquery of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        :param gcs: The gcs of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        :param prediction_format: The prediction_format of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        """
        self.openapi_types = {
            'bigquery': GoogleCloudAiplatformV1beta1BigQueryDestination,
            'gcs': GoogleCloudAiplatformV1beta1GcsDestination,
            'prediction_format': str
        }

        self.attribute_map = {
            'bigquery': 'bigquery',
            'gcs': 'gcs',
            'prediction_format': 'predictionFormat'
        }

        self._bigquery = bigquery
        self._gcs = gcs
        self._prediction_format = prediction_format

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigquery(self):
        """Gets the bigquery of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.


        :return: The bigquery of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        :rtype: GoogleCloudAiplatformV1beta1BigQueryDestination
        """
        return self._bigquery

    @bigquery.setter
    def bigquery(self, bigquery):
        """Sets the bigquery of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.


        :param bigquery: The bigquery of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        :type bigquery: GoogleCloudAiplatformV1beta1BigQueryDestination
        """

        self._bigquery = bigquery

    @property
    def gcs(self):
        """Gets the gcs of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.


        :return: The gcs of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        :rtype: GoogleCloudAiplatformV1beta1GcsDestination
        """
        return self._gcs

    @gcs.setter
    def gcs(self, gcs):
        """Sets the gcs of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.


        :param gcs: The gcs of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        :type gcs: GoogleCloudAiplatformV1beta1GcsDestination
        """

        self._gcs = gcs

    @property
    def prediction_format(self):
        """Gets the prediction_format of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.

        The storage format of the predictions generated BatchPrediction job.

        :return: The prediction_format of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        :rtype: str
        """
        return self._prediction_format

    @prediction_format.setter
    def prediction_format(self, prediction_format):
        """Sets the prediction_format of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.

        The storage format of the predictions generated BatchPrediction job.

        :param prediction_format: The prediction_format of this GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.
        :type prediction_format: str
        """
        allowed_values = ["PREDICTION_FORMAT_UNSPECIFIED", "JSONL", "BIGQUERY"]  # noqa: E501
        if prediction_format not in allowed_values:
            raise ValueError(
                "Invalid value for `prediction_format` ({0}), must be one of {1}"
                .format(prediction_format, allowed_values)
            )

        self._prediction_format = prediction_format
