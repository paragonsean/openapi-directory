# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.util_status_proto import UtilStatusProto
from openapi_server import util


class LearningGenaiRootMetricOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, debug: str=None, name: str=None, numeric_value: float=None, status: UtilStatusProto=None, string_value: str=None):
        """LearningGenaiRootMetricOutput - a model defined in OpenAPI

        :param debug: The debug of this LearningGenaiRootMetricOutput.
        :param name: The name of this LearningGenaiRootMetricOutput.
        :param numeric_value: The numeric_value of this LearningGenaiRootMetricOutput.
        :param status: The status of this LearningGenaiRootMetricOutput.
        :param string_value: The string_value of this LearningGenaiRootMetricOutput.
        """
        self.openapi_types = {
            'debug': str,
            'name': str,
            'numeric_value': float,
            'status': UtilStatusProto,
            'string_value': str
        }

        self.attribute_map = {
            'debug': 'debug',
            'name': 'name',
            'numeric_value': 'numericValue',
            'status': 'status',
            'string_value': 'stringValue'
        }

        self._debug = debug
        self._name = name
        self._numeric_value = numeric_value
        self._status = status
        self._string_value = string_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootMetricOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootMetricOutput of this LearningGenaiRootMetricOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def debug(self):
        """Gets the debug of this LearningGenaiRootMetricOutput.


        :return: The debug of this LearningGenaiRootMetricOutput.
        :rtype: str
        """
        return self._debug

    @debug.setter
    def debug(self, debug):
        """Sets the debug of this LearningGenaiRootMetricOutput.


        :param debug: The debug of this LearningGenaiRootMetricOutput.
        :type debug: str
        """

        self._debug = debug

    @property
    def name(self):
        """Gets the name of this LearningGenaiRootMetricOutput.

        Name of the metric.

        :return: The name of this LearningGenaiRootMetricOutput.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LearningGenaiRootMetricOutput.

        Name of the metric.

        :param name: The name of this LearningGenaiRootMetricOutput.
        :type name: str
        """

        self._name = name

    @property
    def numeric_value(self):
        """Gets the numeric_value of this LearningGenaiRootMetricOutput.


        :return: The numeric_value of this LearningGenaiRootMetricOutput.
        :rtype: float
        """
        return self._numeric_value

    @numeric_value.setter
    def numeric_value(self, numeric_value):
        """Sets the numeric_value of this LearningGenaiRootMetricOutput.


        :param numeric_value: The numeric_value of this LearningGenaiRootMetricOutput.
        :type numeric_value: float
        """

        self._numeric_value = numeric_value

    @property
    def status(self):
        """Gets the status of this LearningGenaiRootMetricOutput.


        :return: The status of this LearningGenaiRootMetricOutput.
        :rtype: UtilStatusProto
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this LearningGenaiRootMetricOutput.


        :param status: The status of this LearningGenaiRootMetricOutput.
        :type status: UtilStatusProto
        """

        self._status = status

    @property
    def string_value(self):
        """Gets the string_value of this LearningGenaiRootMetricOutput.


        :return: The string_value of this LearningGenaiRootMetricOutput.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this LearningGenaiRootMetricOutput.


        :param string_value: The string_value of this LearningGenaiRootMetricOutput.
        :type string_value: str
        """

        self._string_value = string_value
