# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_custom_job_spec import GoogleCloudAiplatformV1beta1CustomJobSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_encryption_spec import GoogleCloudAiplatformV1beta1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_study_spec import GoogleCloudAiplatformV1beta1StudySpec
from openapi_server.models.google_cloud_aiplatform_v1beta1_trial import GoogleCloudAiplatformV1beta1Trial
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudAiplatformV1beta1HyperparameterTuningJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec=None, end_time: str=None, error: GoogleRpcStatus=None, labels: Dict[str, str]=None, max_failed_trial_count: int=None, max_trial_count: int=None, name: str=None, parallel_trial_count: int=None, start_time: str=None, state: str=None, study_spec: GoogleCloudAiplatformV1beta1StudySpec=None, trial_job_spec: GoogleCloudAiplatformV1beta1CustomJobSpec=None, trials: List[GoogleCloudAiplatformV1beta1Trial]=None, update_time: str=None):
        """GoogleCloudAiplatformV1beta1HyperparameterTuningJob - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param end_time: The end_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param error: The error of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param max_failed_trial_count: The max_failed_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param max_trial_count: The max_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param name: The name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param parallel_trial_count: The parallel_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param start_time: The start_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param state: The state of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param study_spec: The study_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param trial_job_spec: The trial_job_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param trials: The trials of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'encryption_spec': GoogleCloudAiplatformV1beta1EncryptionSpec,
            'end_time': str,
            'error': GoogleRpcStatus,
            'labels': Dict[str, str],
            'max_failed_trial_count': int,
            'max_trial_count': int,
            'name': str,
            'parallel_trial_count': int,
            'start_time': str,
            'state': str,
            'study_spec': GoogleCloudAiplatformV1beta1StudySpec,
            'trial_job_spec': GoogleCloudAiplatformV1beta1CustomJobSpec,
            'trials': List[GoogleCloudAiplatformV1beta1Trial],
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'encryption_spec': 'encryptionSpec',
            'end_time': 'endTime',
            'error': 'error',
            'labels': 'labels',
            'max_failed_trial_count': 'maxFailedTrialCount',
            'max_trial_count': 'maxTrialCount',
            'name': 'name',
            'parallel_trial_count': 'parallelTrialCount',
            'start_time': 'startTime',
            'state': 'state',
            'study_spec': 'studySpec',
            'trial_job_spec': 'trialJobSpec',
            'trials': 'trials',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._encryption_spec = encryption_spec
        self._end_time = end_time
        self._error = error
        self._labels = labels
        self._max_failed_trial_count = max_failed_trial_count
        self._max_trial_count = max_trial_count
        self._name = name
        self._parallel_trial_count = parallel_trial_count
        self._start_time = start_time
        self._state = state
        self._study_spec = study_spec
        self._trial_job_spec = trial_job_spec
        self._trials = trials
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1HyperparameterTuningJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1HyperparameterTuningJob of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Time when the HyperparameterTuningJob was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Time when the HyperparameterTuningJob was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :return: The display_name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.


        :return: The encryption_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: GoogleCloudAiplatformV1beta1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type encryption_spec: GoogleCloudAiplatformV1beta1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.

        :return: The end_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.

        :param end_time: The end_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def error(self):
        """Gets the error of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.


        :return: The error of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: GoogleRpcStatus
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.


        :param error: The error of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type error: GoogleRpcStatus
        """

        self._error = error

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :return: The labels of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def max_failed_trial_count(self):
        """Gets the max_failed_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.

        :return: The max_failed_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: int
        """
        return self._max_failed_trial_count

    @max_failed_trial_count.setter
    def max_failed_trial_count(self, max_failed_trial_count):
        """Sets the max_failed_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.

        :param max_failed_trial_count: The max_failed_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type max_failed_trial_count: int
        """

        self._max_failed_trial_count = max_failed_trial_count

    @property
    def max_trial_count(self):
        """Gets the max_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Required. The desired total number of Trials.

        :return: The max_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: int
        """
        return self._max_trial_count

    @max_trial_count.setter
    def max_trial_count(self, max_trial_count):
        """Sets the max_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Required. The desired total number of Trials.

        :param max_trial_count: The max_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type max_trial_count: int
        """

        self._max_trial_count = max_trial_count

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Resource name of the HyperparameterTuningJob.

        :return: The name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Resource name of the HyperparameterTuningJob.

        :param name: The name of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type name: str
        """

        self._name = name

    @property
    def parallel_trial_count(self):
        """Gets the parallel_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Required. The desired number of Trials to run in parallel.

        :return: The parallel_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: int
        """
        return self._parallel_trial_count

    @parallel_trial_count.setter
    def parallel_trial_count(self, parallel_trial_count):
        """Sets the parallel_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Required. The desired number of Trials to run in parallel.

        :param parallel_trial_count: The parallel_trial_count of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type parallel_trial_count: int
        """

        self._parallel_trial_count = parallel_trial_count

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state.

        :return: The start_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state.

        :param start_time: The start_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. The detailed state of the job.

        :return: The state of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. The detailed state of the job.

        :param state: The state of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type state: str
        """
        allowed_values = ["JOB_STATE_UNSPECIFIED", "JOB_STATE_QUEUED", "JOB_STATE_PENDING", "JOB_STATE_RUNNING", "JOB_STATE_SUCCEEDED", "JOB_STATE_FAILED", "JOB_STATE_CANCELLING", "JOB_STATE_CANCELLED", "JOB_STATE_PAUSED", "JOB_STATE_EXPIRED", "JOB_STATE_UPDATING", "JOB_STATE_PARTIALLY_SUCCEEDED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def study_spec(self):
        """Gets the study_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.


        :return: The study_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: GoogleCloudAiplatformV1beta1StudySpec
        """
        return self._study_spec

    @study_spec.setter
    def study_spec(self, study_spec):
        """Sets the study_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.


        :param study_spec: The study_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type study_spec: GoogleCloudAiplatformV1beta1StudySpec
        """

        self._study_spec = study_spec

    @property
    def trial_job_spec(self):
        """Gets the trial_job_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.


        :return: The trial_job_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: GoogleCloudAiplatformV1beta1CustomJobSpec
        """
        return self._trial_job_spec

    @trial_job_spec.setter
    def trial_job_spec(self, trial_job_spec):
        """Sets the trial_job_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.


        :param trial_job_spec: The trial_job_spec of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type trial_job_spec: GoogleCloudAiplatformV1beta1CustomJobSpec
        """

        self._trial_job_spec = trial_job_spec

    @property
    def trials(self):
        """Gets the trials of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Trials of the HyperparameterTuningJob.

        :return: The trials of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: List[GoogleCloudAiplatformV1beta1Trial]
        """
        return self._trials

    @trials.setter
    def trials(self, trials):
        """Sets the trials of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Trials of the HyperparameterTuningJob.

        :param trials: The trials of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type trials: List[GoogleCloudAiplatformV1beta1Trial]
        """

        self._trials = trials

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Time when the HyperparameterTuningJob was most recently updated.

        :return: The update_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.

        Output only. Time when the HyperparameterTuningJob was most recently updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1HyperparameterTuningJob.
        :type update_time: str
        """

        self._update_time = update_time
