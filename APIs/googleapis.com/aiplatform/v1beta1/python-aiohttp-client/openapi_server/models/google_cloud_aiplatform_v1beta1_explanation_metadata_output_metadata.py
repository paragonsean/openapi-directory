# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name_mapping_key: str=None, index_display_name_mapping: object=None, output_tensor_name: str=None):
        """GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata - a model defined in OpenAPI

        :param display_name_mapping_key: The display_name_mapping_key of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        :param index_display_name_mapping: The index_display_name_mapping of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        :param output_tensor_name: The output_tensor_name of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        """
        self.openapi_types = {
            'display_name_mapping_key': str,
            'index_display_name_mapping': object,
            'output_tensor_name': str
        }

        self.attribute_map = {
            'display_name_mapping_key': 'displayNameMappingKey',
            'index_display_name_mapping': 'indexDisplayNameMapping',
            'output_tensor_name': 'outputTensorName'
        }

        self._display_name_mapping_key = display_name_mapping_key
        self._index_display_name_mapping = index_display_name_mapping
        self._output_tensor_name = output_tensor_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name_mapping_key(self):
        """Gets the display_name_mapping_key of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.

        Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.

        :return: The display_name_mapping_key of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        :rtype: str
        """
        return self._display_name_mapping_key

    @display_name_mapping_key.setter
    def display_name_mapping_key(self, display_name_mapping_key):
        """Sets the display_name_mapping_key of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.

        Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.

        :param display_name_mapping_key: The display_name_mapping_key of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        :type display_name_mapping_key: str
        """

        self._display_name_mapping_key = display_name_mapping_key

    @property
    def index_display_name_mapping(self):
        """Gets the index_display_name_mapping of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.

        Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.

        :return: The index_display_name_mapping of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        :rtype: object
        """
        return self._index_display_name_mapping

    @index_display_name_mapping.setter
    def index_display_name_mapping(self, index_display_name_mapping):
        """Sets the index_display_name_mapping of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.

        Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.

        :param index_display_name_mapping: The index_display_name_mapping of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        :type index_display_name_mapping: object
        """

        self._index_display_name_mapping = index_display_name_mapping

    @property
    def output_tensor_name(self):
        """Gets the output_tensor_name of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.

        Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow.

        :return: The output_tensor_name of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        :rtype: str
        """
        return self._output_tensor_name

    @output_tensor_name.setter
    def output_tensor_name(self, output_tensor_name):
        """Sets the output_tensor_name of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.

        Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow.

        :param output_tensor_name: The output_tensor_name of this GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata.
        :type output_tensor_name: str
        """

        self._output_tensor_name = output_tensor_name
