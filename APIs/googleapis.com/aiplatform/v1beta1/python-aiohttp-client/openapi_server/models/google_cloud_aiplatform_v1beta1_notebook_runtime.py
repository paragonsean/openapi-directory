# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_notebook_reservation_affinity import GoogleCloudAiplatformV1beta1NotebookReservationAffinity
from openapi_server.models.google_cloud_aiplatform_v1beta1_notebook_runtime_template_ref import GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRef
from openapi_server import util


class GoogleCloudAiplatformV1beta1NotebookRuntime(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, display_name: str=None, expiration_time: str=None, health_state: str=None, is_upgradable: bool=None, labels: Dict[str, str]=None, name: str=None, network_tags: List[str]=None, notebook_runtime_template_ref: GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRef=None, notebook_runtime_type: str=None, proxy_uri: str=None, reservation_affinity: GoogleCloudAiplatformV1beta1NotebookReservationAffinity=None, runtime_state: str=None, runtime_user: str=None, service_account: str=None, update_time: str=None, version: str=None):
        """GoogleCloudAiplatformV1beta1NotebookRuntime - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param description: The description of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param expiration_time: The expiration_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param health_state: The health_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param is_upgradable: The is_upgradable of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param labels: The labels of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param name: The name of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param network_tags: The network_tags of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param notebook_runtime_template_ref: The notebook_runtime_template_ref of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param notebook_runtime_type: The notebook_runtime_type of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param proxy_uri: The proxy_uri of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param reservation_affinity: The reservation_affinity of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param runtime_state: The runtime_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param runtime_user: The runtime_user of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param service_account: The service_account of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :param version: The version of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'display_name': str,
            'expiration_time': str,
            'health_state': str,
            'is_upgradable': bool,
            'labels': Dict[str, str],
            'name': str,
            'network_tags': List[str],
            'notebook_runtime_template_ref': GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRef,
            'notebook_runtime_type': str,
            'proxy_uri': str,
            'reservation_affinity': GoogleCloudAiplatformV1beta1NotebookReservationAffinity,
            'runtime_state': str,
            'runtime_user': str,
            'service_account': str,
            'update_time': str,
            'version': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'display_name': 'displayName',
            'expiration_time': 'expirationTime',
            'health_state': 'healthState',
            'is_upgradable': 'isUpgradable',
            'labels': 'labels',
            'name': 'name',
            'network_tags': 'networkTags',
            'notebook_runtime_template_ref': 'notebookRuntimeTemplateRef',
            'notebook_runtime_type': 'notebookRuntimeType',
            'proxy_uri': 'proxyUri',
            'reservation_affinity': 'reservationAffinity',
            'runtime_state': 'runtimeState',
            'runtime_user': 'runtimeUser',
            'service_account': 'serviceAccount',
            'update_time': 'updateTime',
            'version': 'version'
        }

        self._create_time = create_time
        self._description = description
        self._display_name = display_name
        self._expiration_time = expiration_time
        self._health_state = health_state
        self._is_upgradable = is_upgradable
        self._labels = labels
        self._name = name
        self._network_tags = network_tags
        self._notebook_runtime_template_ref = notebook_runtime_template_ref
        self._notebook_runtime_type = notebook_runtime_type
        self._proxy_uri = proxy_uri
        self._reservation_affinity = reservation_affinity
        self._runtime_state = runtime_state
        self._runtime_user = runtime_user
        self._service_account = service_account
        self._update_time = update_time
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1NotebookRuntime':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1NotebookRuntime of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. Timestamp when this NotebookRuntime was created.

        :return: The create_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. Timestamp when this NotebookRuntime was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        The description of the NotebookRuntime.

        :return: The description of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        The description of the NotebookRuntime.

        :param description: The description of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Required. The display name of the NotebookRuntime. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :return: The display_name of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Required. The display name of the NotebookRuntime. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def expiration_time(self):
        """Gets the expiration_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user created runtime will be stopped and allowed for upgrade.

        :return: The expiration_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. Timestamp when this NotebookRuntime will be expired: 1. System Predefined NotebookRuntime: 24 hours after creation. After expiration, system predifined runtime will be deleted. 2. User created NotebookRuntime: 6 months after last upgrade. After expiration, user created runtime will be stopped and allowed for upgrade.

        :param expiration_time: The expiration_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type expiration_time: str
        """

        self._expiration_time = expiration_time

    @property
    def health_state(self):
        """Gets the health_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The health state of the NotebookRuntime.

        :return: The health_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._health_state

    @health_state.setter
    def health_state(self, health_state):
        """Sets the health_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The health state of the NotebookRuntime.

        :param health_state: The health_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type health_state: str
        """
        allowed_values = ["HEALTH_STATE_UNSPECIFIED", "HEALTHY", "UNHEALTHY"]  # noqa: E501
        if health_state not in allowed_values:
            raise ValueError(
                "Invalid value for `health_state` ({0}), must be one of {1}"
                .format(health_state, allowed_values)
            )

        self._health_state = health_state

    @property
    def is_upgradable(self):
        """Gets the is_upgradable of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. Whether NotebookRuntime is upgradable.

        :return: The is_upgradable of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: bool
        """
        return self._is_upgradable

    @is_upgradable.setter
    def is_upgradable(self, is_upgradable):
        """Sets the is_upgradable of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. Whether NotebookRuntime is upgradable.

        :param is_upgradable: The is_upgradable of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type is_upgradable: bool
        """

        self._is_upgradable = is_upgradable

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for NotebookRuntime: * \"aiplatform.googleapis.com/notebook_runtime_gce_instance_id\": output only, its value is the Compute Engine instance id. * \"aiplatform.googleapis.com/colab_enterprise_entry_service\": its value is either \"bigquery\" or \"vertex\"; if absent, it should be \"vertex\". This is to describe the entry service, either BigQuery or Vertex.

        :return: The labels of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        The labels with user-defined metadata to organize your NotebookRuntime. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one NotebookRuntime (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for NotebookRuntime: * \"aiplatform.googleapis.com/notebook_runtime_gce_instance_id\": output only, its value is the Compute Engine instance id. * \"aiplatform.googleapis.com/colab_enterprise_entry_service\": its value is either \"bigquery\" or \"vertex\"; if absent, it should be \"vertex\". This is to describe the entry service, either BigQuery or Vertex.

        :param labels: The labels of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The resource name of the NotebookRuntime.

        :return: The name of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The resource name of the NotebookRuntime.

        :param name: The name of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type name: str
        """

        self._name = name

    @property
    def network_tags(self):
        """Gets the network_tags of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).

        :return: The network_tags of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: List[str]
        """
        return self._network_tags

    @network_tags.setter
    def network_tags(self, network_tags):
        """Sets the network_tags of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/vpc/docs/add-remove-network-tags)).

        :param network_tags: The network_tags of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type network_tags: List[str]
        """

        self._network_tags = network_tags

    @property
    def notebook_runtime_template_ref(self):
        """Gets the notebook_runtime_template_ref of this GoogleCloudAiplatformV1beta1NotebookRuntime.


        :return: The notebook_runtime_template_ref of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRef
        """
        return self._notebook_runtime_template_ref

    @notebook_runtime_template_ref.setter
    def notebook_runtime_template_ref(self, notebook_runtime_template_ref):
        """Sets the notebook_runtime_template_ref of this GoogleCloudAiplatformV1beta1NotebookRuntime.


        :param notebook_runtime_template_ref: The notebook_runtime_template_ref of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type notebook_runtime_template_ref: GoogleCloudAiplatformV1beta1NotebookRuntimeTemplateRef
        """

        self._notebook_runtime_template_ref = notebook_runtime_template_ref

    @property
    def notebook_runtime_type(self):
        """Gets the notebook_runtime_type of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The type of the notebook runtime.

        :return: The notebook_runtime_type of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._notebook_runtime_type

    @notebook_runtime_type.setter
    def notebook_runtime_type(self, notebook_runtime_type):
        """Sets the notebook_runtime_type of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The type of the notebook runtime.

        :param notebook_runtime_type: The notebook_runtime_type of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type notebook_runtime_type: str
        """
        allowed_values = ["NOTEBOOK_RUNTIME_TYPE_UNSPECIFIED", "USER_DEFINED", "ONE_CLICK"]  # noqa: E501
        if notebook_runtime_type not in allowed_values:
            raise ValueError(
                "Invalid value for `notebook_runtime_type` ({0}), must be one of {1}"
                .format(notebook_runtime_type, allowed_values)
            )

        self._notebook_runtime_type = notebook_runtime_type

    @property
    def proxy_uri(self):
        """Gets the proxy_uri of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The proxy endpoint used to access the NotebookRuntime.

        :return: The proxy_uri of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._proxy_uri

    @proxy_uri.setter
    def proxy_uri(self, proxy_uri):
        """Sets the proxy_uri of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The proxy endpoint used to access the NotebookRuntime.

        :param proxy_uri: The proxy_uri of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type proxy_uri: str
        """

        self._proxy_uri = proxy_uri

    @property
    def reservation_affinity(self):
        """Gets the reservation_affinity of this GoogleCloudAiplatformV1beta1NotebookRuntime.


        :return: The reservation_affinity of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: GoogleCloudAiplatformV1beta1NotebookReservationAffinity
        """
        return self._reservation_affinity

    @reservation_affinity.setter
    def reservation_affinity(self, reservation_affinity):
        """Sets the reservation_affinity of this GoogleCloudAiplatformV1beta1NotebookRuntime.


        :param reservation_affinity: The reservation_affinity of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type reservation_affinity: GoogleCloudAiplatformV1beta1NotebookReservationAffinity
        """

        self._reservation_affinity = reservation_affinity

    @property
    def runtime_state(self):
        """Gets the runtime_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The runtime (instance) state of the NotebookRuntime.

        :return: The runtime_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._runtime_state

    @runtime_state.setter
    def runtime_state(self, runtime_state):
        """Sets the runtime_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The runtime (instance) state of the NotebookRuntime.

        :param runtime_state: The runtime_state of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type runtime_state: str
        """
        allowed_values = ["RUNTIME_STATE_UNSPECIFIED", "RUNNING", "BEING_STARTED", "BEING_STOPPED", "STOPPED", "BEING_UPGRADED"]  # noqa: E501
        if runtime_state not in allowed_values:
            raise ValueError(
                "Invalid value for `runtime_state` ({0}), must be one of {1}"
                .format(runtime_state, allowed_values)
            )

        self._runtime_state = runtime_state

    @property
    def runtime_user(self):
        """Gets the runtime_user of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Required. The user email of the NotebookRuntime.

        :return: The runtime_user of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._runtime_user

    @runtime_user.setter
    def runtime_user(self, runtime_user):
        """Sets the runtime_user of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Required. The user email of the NotebookRuntime.

        :param runtime_user: The runtime_user of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type runtime_user: str
        """

        self._runtime_user = runtime_user

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The service account that the NotebookRuntime workload runs as.

        :return: The service_account of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The service account that the NotebookRuntime workload runs as.

        :param service_account: The service_account of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. Timestamp when this NotebookRuntime was most recently updated.

        :return: The update_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. Timestamp when this NotebookRuntime was most recently updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def version(self):
        """Gets the version of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The VM os image version of NotebookRuntime.

        :return: The version of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this GoogleCloudAiplatformV1beta1NotebookRuntime.

        Output only. The VM os image version of NotebookRuntime.

        :param version: The version of this GoogleCloudAiplatformV1beta1NotebookRuntime.
        :type version: str
        """

        self._version = version
