# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_export_fraction_split import GoogleCloudAiplatformV1beta1ExportFractionSplit
from openapi_server.models.google_cloud_aiplatform_v1beta1_gcs_destination import GoogleCloudAiplatformV1beta1GcsDestination
from openapi_server import util


class GoogleCloudAiplatformV1beta1ExportDataConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations_filter: str=None, fraction_split: GoogleCloudAiplatformV1beta1ExportFractionSplit=None, gcs_destination: GoogleCloudAiplatformV1beta1GcsDestination=None):
        """GoogleCloudAiplatformV1beta1ExportDataConfig - a model defined in OpenAPI

        :param annotations_filter: The annotations_filter of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        :param fraction_split: The fraction_split of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        :param gcs_destination: The gcs_destination of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        """
        self.openapi_types = {
            'annotations_filter': str,
            'fraction_split': GoogleCloudAiplatformV1beta1ExportFractionSplit,
            'gcs_destination': GoogleCloudAiplatformV1beta1GcsDestination
        }

        self.attribute_map = {
            'annotations_filter': 'annotationsFilter',
            'fraction_split': 'fractionSplit',
            'gcs_destination': 'gcsDestination'
        }

        self._annotations_filter = annotations_filter
        self._fraction_split = fraction_split
        self._gcs_destination = gcs_destination

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ExportDataConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ExportDataConfig of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations_filter(self):
        """Gets the annotations_filter of this GoogleCloudAiplatformV1beta1ExportDataConfig.

        An expression for filtering what part of the Dataset is to be exported. Only Annotations that match this filter will be exported. The filter syntax is the same as in ListAnnotations.

        :return: The annotations_filter of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        :rtype: str
        """
        return self._annotations_filter

    @annotations_filter.setter
    def annotations_filter(self, annotations_filter):
        """Sets the annotations_filter of this GoogleCloudAiplatformV1beta1ExportDataConfig.

        An expression for filtering what part of the Dataset is to be exported. Only Annotations that match this filter will be exported. The filter syntax is the same as in ListAnnotations.

        :param annotations_filter: The annotations_filter of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        :type annotations_filter: str
        """

        self._annotations_filter = annotations_filter

    @property
    def fraction_split(self):
        """Gets the fraction_split of this GoogleCloudAiplatformV1beta1ExportDataConfig.


        :return: The fraction_split of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        :rtype: GoogleCloudAiplatformV1beta1ExportFractionSplit
        """
        return self._fraction_split

    @fraction_split.setter
    def fraction_split(self, fraction_split):
        """Sets the fraction_split of this GoogleCloudAiplatformV1beta1ExportDataConfig.


        :param fraction_split: The fraction_split of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        :type fraction_split: GoogleCloudAiplatformV1beta1ExportFractionSplit
        """

        self._fraction_split = fraction_split

    @property
    def gcs_destination(self):
        """Gets the gcs_destination of this GoogleCloudAiplatformV1beta1ExportDataConfig.


        :return: The gcs_destination of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        :rtype: GoogleCloudAiplatformV1beta1GcsDestination
        """
        return self._gcs_destination

    @gcs_destination.setter
    def gcs_destination(self, gcs_destination):
        """Sets the gcs_destination of this GoogleCloudAiplatformV1beta1ExportDataConfig.


        :param gcs_destination: The gcs_destination of this GoogleCloudAiplatformV1beta1ExportDataConfig.
        :type gcs_destination: GoogleCloudAiplatformV1beta1GcsDestination
        """

        self._gcs_destination = gcs_destination
