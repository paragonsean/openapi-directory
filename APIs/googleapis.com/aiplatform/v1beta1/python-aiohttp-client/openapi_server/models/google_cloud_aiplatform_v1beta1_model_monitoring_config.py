# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_gcs_destination import GoogleCloudAiplatformV1beta1GcsDestination
from openapi_server.models.google_cloud_aiplatform_v1beta1_model_monitoring_alert_config import GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig
from openapi_server.models.google_cloud_aiplatform_v1beta1_model_monitoring_objective_config import GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig
from openapi_server import util


class GoogleCloudAiplatformV1beta1ModelMonitoringConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_config: GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig=None, analysis_instance_schema_uri: str=None, objective_configs: List[GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig]=None, stats_anomalies_base_directory: GoogleCloudAiplatformV1beta1GcsDestination=None):
        """GoogleCloudAiplatformV1beta1ModelMonitoringConfig - a model defined in OpenAPI

        :param alert_config: The alert_config of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :param analysis_instance_schema_uri: The analysis_instance_schema_uri of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :param objective_configs: The objective_configs of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :param stats_anomalies_base_directory: The stats_anomalies_base_directory of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        """
        self.openapi_types = {
            'alert_config': GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig,
            'analysis_instance_schema_uri': str,
            'objective_configs': List[GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig],
            'stats_anomalies_base_directory': GoogleCloudAiplatformV1beta1GcsDestination
        }

        self.attribute_map = {
            'alert_config': 'alertConfig',
            'analysis_instance_schema_uri': 'analysisInstanceSchemaUri',
            'objective_configs': 'objectiveConfigs',
            'stats_anomalies_base_directory': 'statsAnomaliesBaseDirectory'
        }

        self._alert_config = alert_config
        self._analysis_instance_schema_uri = analysis_instance_schema_uri
        self._objective_configs = objective_configs
        self._stats_anomalies_base_directory = stats_anomalies_base_directory

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ModelMonitoringConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ModelMonitoringConfig of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_config(self):
        """Gets the alert_config of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.


        :return: The alert_config of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :rtype: GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig
        """
        return self._alert_config

    @alert_config.setter
    def alert_config(self, alert_config):
        """Sets the alert_config of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.


        :param alert_config: The alert_config of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :type alert_config: GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig
        """

        self._alert_config = alert_config

    @property
    def analysis_instance_schema_uri(self):
        """Gets the analysis_instance_schema_uri of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.

        YAML schema file uri in Cloud Storage describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.

        :return: The analysis_instance_schema_uri of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :rtype: str
        """
        return self._analysis_instance_schema_uri

    @analysis_instance_schema_uri.setter
    def analysis_instance_schema_uri(self, analysis_instance_schema_uri):
        """Sets the analysis_instance_schema_uri of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.

        YAML schema file uri in Cloud Storage describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.

        :param analysis_instance_schema_uri: The analysis_instance_schema_uri of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :type analysis_instance_schema_uri: str
        """

        self._analysis_instance_schema_uri = analysis_instance_schema_uri

    @property
    def objective_configs(self):
        """Gets the objective_configs of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.

        Model monitoring objective config.

        :return: The objective_configs of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :rtype: List[GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig]
        """
        return self._objective_configs

    @objective_configs.setter
    def objective_configs(self, objective_configs):
        """Sets the objective_configs of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.

        Model monitoring objective config.

        :param objective_configs: The objective_configs of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :type objective_configs: List[GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig]
        """

        self._objective_configs = objective_configs

    @property
    def stats_anomalies_base_directory(self):
        """Gets the stats_anomalies_base_directory of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.


        :return: The stats_anomalies_base_directory of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :rtype: GoogleCloudAiplatformV1beta1GcsDestination
        """
        return self._stats_anomalies_base_directory

    @stats_anomalies_base_directory.setter
    def stats_anomalies_base_directory(self, stats_anomalies_base_directory):
        """Sets the stats_anomalies_base_directory of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.


        :param stats_anomalies_base_directory: The stats_anomalies_base_directory of this GoogleCloudAiplatformV1beta1ModelMonitoringConfig.
        :type stats_anomalies_base_directory: GoogleCloudAiplatformV1beta1GcsDestination
        """

        self._stats_anomalies_base_directory = stats_anomalies_base_directory
