# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_blob_sequence_length: str=None, max_step: str=None, max_wall_time: str=None):
        """GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata - a model defined in OpenAPI

        :param max_blob_sequence_length: The max_blob_sequence_length of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        :param max_step: The max_step of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        :param max_wall_time: The max_wall_time of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        """
        self.openapi_types = {
            'max_blob_sequence_length': str,
            'max_step': str,
            'max_wall_time': str
        }

        self.attribute_map = {
            'max_blob_sequence_length': 'maxBlobSequenceLength',
            'max_step': 'maxStep',
            'max_wall_time': 'maxWallTime'
        }

        self._max_blob_sequence_length = max_blob_sequence_length
        self._max_step = max_step
        self._max_wall_time = max_wall_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_blob_sequence_length(self):
        """Gets the max_blob_sequence_length of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.

        Output only. The largest blob sequence length (number of blobs) of all data points in this time series, if its ValueType is BLOB_SEQUENCE.

        :return: The max_blob_sequence_length of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        :rtype: str
        """
        return self._max_blob_sequence_length

    @max_blob_sequence_length.setter
    def max_blob_sequence_length(self, max_blob_sequence_length):
        """Sets the max_blob_sequence_length of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.

        Output only. The largest blob sequence length (number of blobs) of all data points in this time series, if its ValueType is BLOB_SEQUENCE.

        :param max_blob_sequence_length: The max_blob_sequence_length of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        :type max_blob_sequence_length: str
        """

        self._max_blob_sequence_length = max_blob_sequence_length

    @property
    def max_step(self):
        """Gets the max_step of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.

        Output only. Max step index of all data points within a TensorboardTimeSeries.

        :return: The max_step of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        :rtype: str
        """
        return self._max_step

    @max_step.setter
    def max_step(self, max_step):
        """Sets the max_step of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.

        Output only. Max step index of all data points within a TensorboardTimeSeries.

        :param max_step: The max_step of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        :type max_step: str
        """

        self._max_step = max_step

    @property
    def max_wall_time(self):
        """Gets the max_wall_time of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.

        Output only. Max wall clock timestamp of all data points within a TensorboardTimeSeries.

        :return: The max_wall_time of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        :rtype: str
        """
        return self._max_wall_time

    @max_wall_time.setter
    def max_wall_time(self, max_wall_time):
        """Sets the max_wall_time of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.

        Output only. Max wall clock timestamp of all data points within a TensorboardTimeSeries.

        :param max_wall_time: The max_wall_time of this GoogleCloudAiplatformV1beta1TensorboardTimeSeriesMetadata.
        :type max_wall_time: str
        """

        self._max_wall_time = max_wall_time
