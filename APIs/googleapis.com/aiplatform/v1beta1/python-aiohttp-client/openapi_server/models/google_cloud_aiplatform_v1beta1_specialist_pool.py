# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1SpecialistPool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, name: str=None, pending_data_labeling_jobs: List[str]=None, specialist_manager_emails: List[str]=None, specialist_managers_count: int=None, specialist_worker_emails: List[str]=None):
        """GoogleCloudAiplatformV1beta1SpecialistPool - a model defined in OpenAPI

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :param name: The name of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :param pending_data_labeling_jobs: The pending_data_labeling_jobs of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :param specialist_manager_emails: The specialist_manager_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :param specialist_managers_count: The specialist_managers_count of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :param specialist_worker_emails: The specialist_worker_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.
        """
        self.openapi_types = {
            'display_name': str,
            'name': str,
            'pending_data_labeling_jobs': List[str],
            'specialist_manager_emails': List[str],
            'specialist_managers_count': int,
            'specialist_worker_emails': List[str]
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'name': 'name',
            'pending_data_labeling_jobs': 'pendingDataLabelingJobs',
            'specialist_manager_emails': 'specialistManagerEmails',
            'specialist_managers_count': 'specialistManagersCount',
            'specialist_worker_emails': 'specialistWorkerEmails'
        }

        self._display_name = display_name
        self._name = name
        self._pending_data_labeling_jobs = pending_data_labeling_jobs
        self._specialist_manager_emails = specialist_manager_emails
        self._specialist_managers_count = specialist_managers_count
        self._specialist_worker_emails = specialist_worker_emails

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SpecialistPool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SpecialistPool of this GoogleCloudAiplatformV1beta1SpecialistPool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1beta1SpecialistPool.

        Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level.

        :return: The display_name of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1beta1SpecialistPool.

        Required. The user-defined name of the SpecialistPool. The name can be up to 128 characters long and can consist of any UTF-8 characters. This field should be unique on project-level.

        :param display_name: The display_name of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1beta1SpecialistPool.

        Required. The resource name of the SpecialistPool.

        :return: The name of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1beta1SpecialistPool.

        Required. The resource name of the SpecialistPool.

        :param name: The name of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :type name: str
        """

        self._name = name

    @property
    def pending_data_labeling_jobs(self):
        """Gets the pending_data_labeling_jobs of this GoogleCloudAiplatformV1beta1SpecialistPool.

        Output only. The resource name of the pending data labeling jobs.

        :return: The pending_data_labeling_jobs of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :rtype: List[str]
        """
        return self._pending_data_labeling_jobs

    @pending_data_labeling_jobs.setter
    def pending_data_labeling_jobs(self, pending_data_labeling_jobs):
        """Sets the pending_data_labeling_jobs of this GoogleCloudAiplatformV1beta1SpecialistPool.

        Output only. The resource name of the pending data labeling jobs.

        :param pending_data_labeling_jobs: The pending_data_labeling_jobs of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :type pending_data_labeling_jobs: List[str]
        """

        self._pending_data_labeling_jobs = pending_data_labeling_jobs

    @property
    def specialist_manager_emails(self):
        """Gets the specialist_manager_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.

        The email addresses of the managers in the SpecialistPool.

        :return: The specialist_manager_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :rtype: List[str]
        """
        return self._specialist_manager_emails

    @specialist_manager_emails.setter
    def specialist_manager_emails(self, specialist_manager_emails):
        """Sets the specialist_manager_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.

        The email addresses of the managers in the SpecialistPool.

        :param specialist_manager_emails: The specialist_manager_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :type specialist_manager_emails: List[str]
        """

        self._specialist_manager_emails = specialist_manager_emails

    @property
    def specialist_managers_count(self):
        """Gets the specialist_managers_count of this GoogleCloudAiplatformV1beta1SpecialistPool.

        Output only. The number of managers in this SpecialistPool.

        :return: The specialist_managers_count of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :rtype: int
        """
        return self._specialist_managers_count

    @specialist_managers_count.setter
    def specialist_managers_count(self, specialist_managers_count):
        """Sets the specialist_managers_count of this GoogleCloudAiplatformV1beta1SpecialistPool.

        Output only. The number of managers in this SpecialistPool.

        :param specialist_managers_count: The specialist_managers_count of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :type specialist_managers_count: int
        """

        self._specialist_managers_count = specialist_managers_count

    @property
    def specialist_worker_emails(self):
        """Gets the specialist_worker_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.

        The email addresses of workers in the SpecialistPool.

        :return: The specialist_worker_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :rtype: List[str]
        """
        return self._specialist_worker_emails

    @specialist_worker_emails.setter
    def specialist_worker_emails(self, specialist_worker_emails):
        """Sets the specialist_worker_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.

        The email addresses of workers in the SpecialistPool.

        :param specialist_worker_emails: The specialist_worker_emails of this GoogleCloudAiplatformV1beta1SpecialistPool.
        :type specialist_worker_emails: List[str]
        """

        self._specialist_worker_emails = specialist_worker_emails
