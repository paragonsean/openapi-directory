# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, classes: List[str]=None, scores: List[float]=None):
        """GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult - a model defined in OpenAPI

        :param classes: The classes of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.
        :param scores: The scores of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.
        """
        self.openapi_types = {
            'classes': List[str],
            'scores': List[float]
        }

        self.attribute_map = {
            'classes': 'classes',
            'scores': 'scores'
        }

        self._classes = classes
        self._scores = scores

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def classes(self):
        """Gets the classes of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.

        The name of the classes being classified, contains all possible values of the target column.

        :return: The classes of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.
        :rtype: List[str]
        """
        return self._classes

    @classes.setter
    def classes(self, classes):
        """Sets the classes of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.

        The name of the classes being classified, contains all possible values of the target column.

        :param classes: The classes of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.
        :type classes: List[str]
        """

        self._classes = classes

    @property
    def scores(self):
        """Gets the scores of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.

        The model's confidence in each class being correct, higher value means higher confidence. The N-th score corresponds to the N-th class in classes.

        :return: The scores of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.
        :rtype: List[float]
        """
        return self._scores

    @scores.setter
    def scores(self, scores):
        """Sets the scores of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.

        The model's confidence in each class being correct, higher value means higher confidence. The N-th score corresponds to the N-th class in classes.

        :param scores: The scores of this GoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.
        :type scores: List[float]
        """

        self._scores = scores
