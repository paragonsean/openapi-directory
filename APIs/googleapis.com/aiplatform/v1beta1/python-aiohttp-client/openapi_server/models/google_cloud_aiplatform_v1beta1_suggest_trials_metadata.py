# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_generic_operation_metadata import GoogleCloudAiplatformV1beta1GenericOperationMetadata
from openapi_server import util


class GoogleCloudAiplatformV1beta1SuggestTrialsMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, generic_metadata: GoogleCloudAiplatformV1beta1GenericOperationMetadata=None):
        """GoogleCloudAiplatformV1beta1SuggestTrialsMetadata - a model defined in OpenAPI

        :param client_id: The client_id of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.
        :param generic_metadata: The generic_metadata of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.
        """
        self.openapi_types = {
            'client_id': str,
            'generic_metadata': GoogleCloudAiplatformV1beta1GenericOperationMetadata
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'generic_metadata': 'genericMetadata'
        }

        self._client_id = client_id
        self._generic_metadata = generic_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1SuggestTrialsMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1SuggestTrialsMetadata of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.

        The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed.

        :return: The client_id of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.

        The identifier of the client that is requesting the suggestion. If multiple SuggestTrialsRequests have the same `client_id`, the service will return the identical suggested Trial if the Trial is pending, and provide a new Trial if the last suggested Trial was completed.

        :param client_id: The client_id of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def generic_metadata(self):
        """Gets the generic_metadata of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.


        :return: The generic_metadata of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.
        :rtype: GoogleCloudAiplatformV1beta1GenericOperationMetadata
        """
        return self._generic_metadata

    @generic_metadata.setter
    def generic_metadata(self, generic_metadata):
        """Sets the generic_metadata of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.


        :param generic_metadata: The generic_metadata of this GoogleCloudAiplatformV1beta1SuggestTrialsMetadata.
        :type generic_metadata: GoogleCloudAiplatformV1beta1GenericOperationMetadata
        """

        self._generic_metadata = generic_metadata
