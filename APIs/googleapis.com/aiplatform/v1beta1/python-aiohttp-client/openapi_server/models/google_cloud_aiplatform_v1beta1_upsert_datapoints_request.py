# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_index_datapoint import GoogleCloudAiplatformV1beta1IndexDatapoint
from openapi_server import util


class GoogleCloudAiplatformV1beta1UpsertDatapointsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datapoints: List[GoogleCloudAiplatformV1beta1IndexDatapoint]=None, update_mask: str=None):
        """GoogleCloudAiplatformV1beta1UpsertDatapointsRequest - a model defined in OpenAPI

        :param datapoints: The datapoints of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.
        :param update_mask: The update_mask of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.
        """
        self.openapi_types = {
            'datapoints': List[GoogleCloudAiplatformV1beta1IndexDatapoint],
            'update_mask': str
        }

        self.attribute_map = {
            'datapoints': 'datapoints',
            'update_mask': 'updateMask'
        }

        self._datapoints = datapoints
        self._update_mask = update_mask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1UpsertDatapointsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1UpsertDatapointsRequest of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datapoints(self):
        """Gets the datapoints of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.

        A list of datapoints to be created/updated.

        :return: The datapoints of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.
        :rtype: List[GoogleCloudAiplatformV1beta1IndexDatapoint]
        """
        return self._datapoints

    @datapoints.setter
    def datapoints(self, datapoints):
        """Sets the datapoints of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.

        A list of datapoints to be created/updated.

        :param datapoints: The datapoints of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.
        :type datapoints: List[GoogleCloudAiplatformV1beta1IndexDatapoint]
        """

        self._datapoints = datapoints

    @property
    def update_mask(self):
        """Gets the update_mask of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.

        Optional. Update mask is used to specify the fields to be overwritten in the datapoints by the update. The fields specified in the update_mask are relative to each IndexDatapoint inside datapoints, not the full request. Updatable fields: * Use `all_restricts` to update both restricts and numeric_restricts.

        :return: The update_mask of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.
        :rtype: str
        """
        return self._update_mask

    @update_mask.setter
    def update_mask(self, update_mask):
        """Sets the update_mask of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.

        Optional. Update mask is used to specify the fields to be overwritten in the datapoints by the update. The fields specified in the update_mask are relative to each IndexDatapoint inside datapoints, not the full request. Updatable fields: * Use `all_restricts` to update both restricts and numeric_restricts.

        :param update_mask: The update_mask of this GoogleCloudAiplatformV1beta1UpsertDatapointsRequest.
        :type update_mask: str
        """

        self._update_mask = update_mask
