# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1beta1ModelSourceInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copy: bool=None, source_type: str=None):
        """GoogleCloudAiplatformV1beta1ModelSourceInfo - a model defined in OpenAPI

        :param copy: The copy of this GoogleCloudAiplatformV1beta1ModelSourceInfo.
        :param source_type: The source_type of this GoogleCloudAiplatformV1beta1ModelSourceInfo.
        """
        self.openapi_types = {
            'copy': bool,
            'source_type': str
        }

        self.attribute_map = {
            'copy': 'copy',
            'source_type': 'sourceType'
        }

        self._copy = copy
        self._source_type = source_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1ModelSourceInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1ModelSourceInfo of this GoogleCloudAiplatformV1beta1ModelSourceInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copy(self):
        """Gets the copy of this GoogleCloudAiplatformV1beta1ModelSourceInfo.

        If this Model is copy of another Model. If true then source_type pertains to the original.

        :return: The copy of this GoogleCloudAiplatformV1beta1ModelSourceInfo.
        :rtype: bool
        """
        return self._copy

    @copy.setter
    def copy(self, copy):
        """Sets the copy of this GoogleCloudAiplatformV1beta1ModelSourceInfo.

        If this Model is copy of another Model. If true then source_type pertains to the original.

        :param copy: The copy of this GoogleCloudAiplatformV1beta1ModelSourceInfo.
        :type copy: bool
        """

        self._copy = copy

    @property
    def source_type(self):
        """Gets the source_type of this GoogleCloudAiplatformV1beta1ModelSourceInfo.

        Type of the model source.

        :return: The source_type of this GoogleCloudAiplatformV1beta1ModelSourceInfo.
        :rtype: str
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this GoogleCloudAiplatformV1beta1ModelSourceInfo.

        Type of the model source.

        :param source_type: The source_type of this GoogleCloudAiplatformV1beta1ModelSourceInfo.
        :type source_type: str
        """
        allowed_values = ["MODEL_SOURCE_TYPE_UNSPECIFIED", "AUTOML", "CUSTOM", "BQML", "MODEL_GARDEN", "GENIE", "CUSTOM_TEXT_EMBEDDING", "MARKETPLACE"]  # noqa: E501
        if source_type not in allowed_values:
            raise ValueError(
                "Invalid value for `source_type` ({0}), must be one of {1}"
                .format(source_type, allowed_values)
            )

        self._source_type = source_type
