# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1beta1_part import GoogleCloudAiplatformV1beta1Part
from openapi_server import util


class GoogleCloudAiplatformV1beta1Content(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parts: List[GoogleCloudAiplatformV1beta1Part]=None, role: str=None):
        """GoogleCloudAiplatformV1beta1Content - a model defined in OpenAPI

        :param parts: The parts of this GoogleCloudAiplatformV1beta1Content.
        :param role: The role of this GoogleCloudAiplatformV1beta1Content.
        """
        self.openapi_types = {
            'parts': List[GoogleCloudAiplatformV1beta1Part],
            'role': str
        }

        self.attribute_map = {
            'parts': 'parts',
            'role': 'role'
        }

        self._parts = parts
        self._role = role

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1beta1Content':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1beta1Content of this GoogleCloudAiplatformV1beta1Content.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parts(self):
        """Gets the parts of this GoogleCloudAiplatformV1beta1Content.

        Required. Ordered `Parts` that constitute a single message. Parts may have different IANA MIME types.

        :return: The parts of this GoogleCloudAiplatformV1beta1Content.
        :rtype: List[GoogleCloudAiplatformV1beta1Part]
        """
        return self._parts

    @parts.setter
    def parts(self, parts):
        """Sets the parts of this GoogleCloudAiplatformV1beta1Content.

        Required. Ordered `Parts` that constitute a single message. Parts may have different IANA MIME types.

        :param parts: The parts of this GoogleCloudAiplatformV1beta1Content.
        :type parts: List[GoogleCloudAiplatformV1beta1Part]
        """

        self._parts = parts

    @property
    def role(self):
        """Gets the role of this GoogleCloudAiplatformV1beta1Content.

        Optional. The producer of the content. Must be either 'user' or 'model'. Useful to set for multi-turn conversations, otherwise can be left blank or unset.

        :return: The role of this GoogleCloudAiplatformV1beta1Content.
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this GoogleCloudAiplatformV1beta1Content.

        Optional. The producer of the content. Must be either 'user' or 'model'. Useful to set for multi-turn conversations, otherwise can be left blank or unset.

        :param role: The role of this GoogleCloudAiplatformV1beta1Content.
        :type role: str
        """

        self._role = role
