/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.h
 *
 * Deprecated. Use IndexConfig instead.
 */

#ifndef OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig_H
#define OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig;

class OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig();
    OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig(QString json);
    ~OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getBruteForceConfig() const;
    void setBruteForceConfig(const OAIObject &brute_force_config);
    bool is_brute_force_config_Set() const;
    bool is_brute_force_config_Valid() const;

    QString getCrowdingColumn() const;
    void setCrowdingColumn(const QString &crowding_column);
    bool is_crowding_column_Set() const;
    bool is_crowding_column_Valid() const;

    QString getDistanceMeasureType() const;
    void setDistanceMeasureType(const QString &distance_measure_type);
    bool is_distance_measure_type_Set() const;
    bool is_distance_measure_type_Valid() const;

    QString getEmbeddingColumn() const;
    void setEmbeddingColumn(const QString &embedding_column);
    bool is_embedding_column_Set() const;
    bool is_embedding_column_Valid() const;

    qint32 getEmbeddingDimension() const;
    void setEmbeddingDimension(const qint32 &embedding_dimension);
    bool is_embedding_dimension_Set() const;
    bool is_embedding_dimension_Valid() const;

    QList<QString> getFilterColumns() const;
    void setFilterColumns(const QList<QString> &filter_columns);
    bool is_filter_columns_Set() const;
    bool is_filter_columns_Valid() const;

    OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig getTreeAhConfig() const;
    void setTreeAhConfig(const OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig &tree_ah_config);
    bool is_tree_ah_config_Set() const;
    bool is_tree_ah_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_brute_force_config;
    bool m_brute_force_config_isSet;
    bool m_brute_force_config_isValid;

    QString m_crowding_column;
    bool m_crowding_column_isSet;
    bool m_crowding_column_isValid;

    QString m_distance_measure_type;
    bool m_distance_measure_type_isSet;
    bool m_distance_measure_type_isValid;

    QString m_embedding_column;
    bool m_embedding_column_isSet;
    bool m_embedding_column_isValid;

    qint32 m_embedding_dimension;
    bool m_embedding_dimension_isSet;
    bool m_embedding_dimension_isValid;

    QList<QString> m_filter_columns;
    bool m_filter_columns_isSet;
    bool m_filter_columns_isValid;

    OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig m_tree_ah_config;
    bool m_tree_ah_config_isSet;
    bool m_tree_ah_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig)

#endif // OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig_H
