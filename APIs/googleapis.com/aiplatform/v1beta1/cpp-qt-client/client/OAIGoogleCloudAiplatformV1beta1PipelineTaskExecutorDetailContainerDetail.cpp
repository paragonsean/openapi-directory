/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::~OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail() {}

void OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::initializeModel() {

    m_failed_main_jobs_isSet = false;
    m_failed_main_jobs_isValid = false;

    m_failed_pre_caching_check_jobs_isSet = false;
    m_failed_pre_caching_check_jobs_isValid = false;

    m_main_job_isSet = false;
    m_main_job_isValid = false;

    m_pre_caching_check_job_isSet = false;
    m_pre_caching_check_job_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::fromJsonObject(QJsonObject json) {

    m_failed_main_jobs_isValid = ::OpenAPI::fromJsonValue(m_failed_main_jobs, json[QString("failedMainJobs")]);
    m_failed_main_jobs_isSet = !json[QString("failedMainJobs")].isNull() && m_failed_main_jobs_isValid;

    m_failed_pre_caching_check_jobs_isValid = ::OpenAPI::fromJsonValue(m_failed_pre_caching_check_jobs, json[QString("failedPreCachingCheckJobs")]);
    m_failed_pre_caching_check_jobs_isSet = !json[QString("failedPreCachingCheckJobs")].isNull() && m_failed_pre_caching_check_jobs_isValid;

    m_main_job_isValid = ::OpenAPI::fromJsonValue(m_main_job, json[QString("mainJob")]);
    m_main_job_isSet = !json[QString("mainJob")].isNull() && m_main_job_isValid;

    m_pre_caching_check_job_isValid = ::OpenAPI::fromJsonValue(m_pre_caching_check_job, json[QString("preCachingCheckJob")]);
    m_pre_caching_check_job_isSet = !json[QString("preCachingCheckJob")].isNull() && m_pre_caching_check_job_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_failed_main_jobs.size() > 0) {
        obj.insert(QString("failedMainJobs"), ::OpenAPI::toJsonValue(m_failed_main_jobs));
    }
    if (m_failed_pre_caching_check_jobs.size() > 0) {
        obj.insert(QString("failedPreCachingCheckJobs"), ::OpenAPI::toJsonValue(m_failed_pre_caching_check_jobs));
    }
    if (m_main_job_isSet) {
        obj.insert(QString("mainJob"), ::OpenAPI::toJsonValue(m_main_job));
    }
    if (m_pre_caching_check_job_isSet) {
        obj.insert(QString("preCachingCheckJob"), ::OpenAPI::toJsonValue(m_pre_caching_check_job));
    }
    return obj;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::getFailedMainJobs() const {
    return m_failed_main_jobs;
}
void OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::setFailedMainJobs(const QList<QString> &failed_main_jobs) {
    m_failed_main_jobs = failed_main_jobs;
    m_failed_main_jobs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::is_failed_main_jobs_Set() const{
    return m_failed_main_jobs_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::is_failed_main_jobs_Valid() const{
    return m_failed_main_jobs_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::getFailedPreCachingCheckJobs() const {
    return m_failed_pre_caching_check_jobs;
}
void OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::setFailedPreCachingCheckJobs(const QList<QString> &failed_pre_caching_check_jobs) {
    m_failed_pre_caching_check_jobs = failed_pre_caching_check_jobs;
    m_failed_pre_caching_check_jobs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::is_failed_pre_caching_check_jobs_Set() const{
    return m_failed_pre_caching_check_jobs_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::is_failed_pre_caching_check_jobs_Valid() const{
    return m_failed_pre_caching_check_jobs_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::getMainJob() const {
    return m_main_job;
}
void OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::setMainJob(const QString &main_job) {
    m_main_job = main_job;
    m_main_job_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::is_main_job_Set() const{
    return m_main_job_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::is_main_job_Valid() const{
    return m_main_job_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::getPreCachingCheckJob() const {
    return m_pre_caching_check_job;
}
void OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::setPreCachingCheckJob(const QString &pre_caching_check_job) {
    m_pre_caching_check_job = pre_caching_check_job;
    m_pre_caching_check_job_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::is_pre_caching_check_job_Set() const{
    return m_pre_caching_check_job_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::is_pre_caching_check_job_Valid() const{
    return m_pre_caching_check_job_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failed_main_jobs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_failed_pre_caching_check_jobs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_main_job_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pre_caching_check_job_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskExecutorDetailContainerDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
