/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::~OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec() {}

void OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::initializeModel() {

    m_metric_isSet = false;
    m_metric_isValid = false;

    m_multi_trial_algorithm_isSet = false;
    m_multi_trial_algorithm_isValid = false;

    m_search_trial_spec_isSet = false;
    m_search_trial_spec_isValid = false;

    m_train_trial_spec_isSet = false;
    m_train_trial_spec_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::fromJsonObject(QJsonObject json) {

    m_metric_isValid = ::OpenAPI::fromJsonValue(m_metric, json[QString("metric")]);
    m_metric_isSet = !json[QString("metric")].isNull() && m_metric_isValid;

    m_multi_trial_algorithm_isValid = ::OpenAPI::fromJsonValue(m_multi_trial_algorithm, json[QString("multiTrialAlgorithm")]);
    m_multi_trial_algorithm_isSet = !json[QString("multiTrialAlgorithm")].isNull() && m_multi_trial_algorithm_isValid;

    m_search_trial_spec_isValid = ::OpenAPI::fromJsonValue(m_search_trial_spec, json[QString("searchTrialSpec")]);
    m_search_trial_spec_isSet = !json[QString("searchTrialSpec")].isNull() && m_search_trial_spec_isValid;

    m_train_trial_spec_isValid = ::OpenAPI::fromJsonValue(m_train_trial_spec, json[QString("trainTrialSpec")]);
    m_train_trial_spec_isSet = !json[QString("trainTrialSpec")].isNull() && m_train_trial_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_metric.isSet()) {
        obj.insert(QString("metric"), ::OpenAPI::toJsonValue(m_metric));
    }
    if (m_multi_trial_algorithm_isSet) {
        obj.insert(QString("multiTrialAlgorithm"), ::OpenAPI::toJsonValue(m_multi_trial_algorithm));
    }
    if (m_search_trial_spec.isSet()) {
        obj.insert(QString("searchTrialSpec"), ::OpenAPI::toJsonValue(m_search_trial_spec));
    }
    if (m_train_trial_spec.isSet()) {
        obj.insert(QString("trainTrialSpec"), ::OpenAPI::toJsonValue(m_train_trial_spec));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::getMetric() const {
    return m_metric;
}
void OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::setMetric(const OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecMetricSpec &metric) {
    m_metric = metric;
    m_metric_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::is_metric_Set() const{
    return m_metric_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::is_metric_Valid() const{
    return m_metric_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::getMultiTrialAlgorithm() const {
    return m_multi_trial_algorithm;
}
void OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::setMultiTrialAlgorithm(const QString &multi_trial_algorithm) {
    m_multi_trial_algorithm = multi_trial_algorithm;
    m_multi_trial_algorithm_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::is_multi_trial_algorithm_Set() const{
    return m_multi_trial_algorithm_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::is_multi_trial_algorithm_Valid() const{
    return m_multi_trial_algorithm_isValid;
}

OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::getSearchTrialSpec() const {
    return m_search_trial_spec;
}
void OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::setSearchTrialSpec(const OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec &search_trial_spec) {
    m_search_trial_spec = search_trial_spec;
    m_search_trial_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::is_search_trial_spec_Set() const{
    return m_search_trial_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::is_search_trial_spec_Valid() const{
    return m_search_trial_spec_isValid;
}

OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::getTrainTrialSpec() const {
    return m_train_trial_spec;
}
void OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::setTrainTrialSpec(const OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec &train_trial_spec) {
    m_train_trial_spec = train_trial_spec;
    m_train_trial_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::is_train_trial_spec_Set() const{
    return m_train_trial_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::is_train_trial_spec_Valid() const{
    return m_train_trial_spec_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_metric.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_multi_trial_algorithm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_trial_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_train_trial_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
