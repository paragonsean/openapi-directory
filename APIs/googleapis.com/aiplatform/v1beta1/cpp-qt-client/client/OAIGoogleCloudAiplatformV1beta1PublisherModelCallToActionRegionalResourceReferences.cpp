/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::~OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences() {}

void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::initializeModel() {

    m_references_isSet = false;
    m_references_isValid = false;

    m_resource_description_isSet = false;
    m_resource_description_isValid = false;

    m_resource_title_isSet = false;
    m_resource_title_isValid = false;

    m_resource_use_case_isSet = false;
    m_resource_use_case_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::fromJsonObject(QJsonObject json) {

    m_references_isValid = ::OpenAPI::fromJsonValue(m_references, json[QString("references")]);
    m_references_isSet = !json[QString("references")].isNull() && m_references_isValid;

    m_resource_description_isValid = ::OpenAPI::fromJsonValue(m_resource_description, json[QString("resourceDescription")]);
    m_resource_description_isSet = !json[QString("resourceDescription")].isNull() && m_resource_description_isValid;

    m_resource_title_isValid = ::OpenAPI::fromJsonValue(m_resource_title, json[QString("resourceTitle")]);
    m_resource_title_isSet = !json[QString("resourceTitle")].isNull() && m_resource_title_isValid;

    m_resource_use_case_isValid = ::OpenAPI::fromJsonValue(m_resource_use_case, json[QString("resourceUseCase")]);
    m_resource_use_case_isSet = !json[QString("resourceUseCase")].isNull() && m_resource_use_case_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::asJsonObject() const {
    QJsonObject obj;
    if (m_references.size() > 0) {
        obj.insert(QString("references"), ::OpenAPI::toJsonValue(m_references));
    }
    if (m_resource_description_isSet) {
        obj.insert(QString("resourceDescription"), ::OpenAPI::toJsonValue(m_resource_description));
    }
    if (m_resource_title_isSet) {
        obj.insert(QString("resourceTitle"), ::OpenAPI::toJsonValue(m_resource_title));
    }
    if (m_resource_use_case_isSet) {
        obj.insert(QString("resourceUseCase"), ::OpenAPI::toJsonValue(m_resource_use_case));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QMap<QString, OAIGoogleCloudAiplatformV1beta1PublisherModelResourceReference> OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::getReferences() const {
    return m_references;
}
void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::setReferences(const QMap<QString, OAIGoogleCloudAiplatformV1beta1PublisherModelResourceReference> &references) {
    m_references = references;
    m_references_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_references_Set() const{
    return m_references_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_references_Valid() const{
    return m_references_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::getResourceDescription() const {
    return m_resource_description;
}
void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::setResourceDescription(const QString &resource_description) {
    m_resource_description = resource_description;
    m_resource_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_resource_description_Set() const{
    return m_resource_description_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_resource_description_Valid() const{
    return m_resource_description_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::getResourceTitle() const {
    return m_resource_title;
}
void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::setResourceTitle(const QString &resource_title) {
    m_resource_title = resource_title;
    m_resource_title_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_resource_title_Set() const{
    return m_resource_title_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_resource_title_Valid() const{
    return m_resource_title_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::getResourceUseCase() const {
    return m_resource_use_case;
}
void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::setResourceUseCase(const QString &resource_use_case) {
    m_resource_use_case = resource_use_case;
    m_resource_use_case_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_resource_use_case_Set() const{
    return m_resource_use_case_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_resource_use_case_Valid() const{
    return m_resource_use_case_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::getTitle() const {
    return m_title;
}
void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_references.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_use_case_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionRegionalResourceReferences::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
