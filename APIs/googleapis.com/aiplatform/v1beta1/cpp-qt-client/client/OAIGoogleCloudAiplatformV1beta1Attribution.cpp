/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1Attribution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1Attribution::OAIGoogleCloudAiplatformV1beta1Attribution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1Attribution::OAIGoogleCloudAiplatformV1beta1Attribution() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1Attribution::~OAIGoogleCloudAiplatformV1beta1Attribution() {}

void OAIGoogleCloudAiplatformV1beta1Attribution::initializeModel() {

    m_approximation_error_isSet = false;
    m_approximation_error_isValid = false;

    m_baseline_output_value_isSet = false;
    m_baseline_output_value_isValid = false;

    m_feature_attributions_isSet = false;
    m_feature_attributions_isValid = false;

    m_instance_output_value_isSet = false;
    m_instance_output_value_isValid = false;

    m_output_display_name_isSet = false;
    m_output_display_name_isValid = false;

    m_output_index_isSet = false;
    m_output_index_isValid = false;

    m_output_name_isSet = false;
    m_output_name_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1Attribution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1Attribution::fromJsonObject(QJsonObject json) {

    m_approximation_error_isValid = ::OpenAPI::fromJsonValue(m_approximation_error, json[QString("approximationError")]);
    m_approximation_error_isSet = !json[QString("approximationError")].isNull() && m_approximation_error_isValid;

    m_baseline_output_value_isValid = ::OpenAPI::fromJsonValue(m_baseline_output_value, json[QString("baselineOutputValue")]);
    m_baseline_output_value_isSet = !json[QString("baselineOutputValue")].isNull() && m_baseline_output_value_isValid;

    m_feature_attributions_isValid = ::OpenAPI::fromJsonValue(m_feature_attributions, json[QString("featureAttributions")]);
    m_feature_attributions_isSet = !json[QString("featureAttributions")].isNull() && m_feature_attributions_isValid;

    m_instance_output_value_isValid = ::OpenAPI::fromJsonValue(m_instance_output_value, json[QString("instanceOutputValue")]);
    m_instance_output_value_isSet = !json[QString("instanceOutputValue")].isNull() && m_instance_output_value_isValid;

    m_output_display_name_isValid = ::OpenAPI::fromJsonValue(m_output_display_name, json[QString("outputDisplayName")]);
    m_output_display_name_isSet = !json[QString("outputDisplayName")].isNull() && m_output_display_name_isValid;

    m_output_index_isValid = ::OpenAPI::fromJsonValue(m_output_index, json[QString("outputIndex")]);
    m_output_index_isSet = !json[QString("outputIndex")].isNull() && m_output_index_isValid;

    m_output_name_isValid = ::OpenAPI::fromJsonValue(m_output_name, json[QString("outputName")]);
    m_output_name_isSet = !json[QString("outputName")].isNull() && m_output_name_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1Attribution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1Attribution::asJsonObject() const {
    QJsonObject obj;
    if (m_approximation_error_isSet) {
        obj.insert(QString("approximationError"), ::OpenAPI::toJsonValue(m_approximation_error));
    }
    if (m_baseline_output_value_isSet) {
        obj.insert(QString("baselineOutputValue"), ::OpenAPI::toJsonValue(m_baseline_output_value));
    }
    if (m_feature_attributions_isSet) {
        obj.insert(QString("featureAttributions"), ::OpenAPI::toJsonValue(m_feature_attributions));
    }
    if (m_instance_output_value_isSet) {
        obj.insert(QString("instanceOutputValue"), ::OpenAPI::toJsonValue(m_instance_output_value));
    }
    if (m_output_display_name_isSet) {
        obj.insert(QString("outputDisplayName"), ::OpenAPI::toJsonValue(m_output_display_name));
    }
    if (m_output_index.size() > 0) {
        obj.insert(QString("outputIndex"), ::OpenAPI::toJsonValue(m_output_index));
    }
    if (m_output_name_isSet) {
        obj.insert(QString("outputName"), ::OpenAPI::toJsonValue(m_output_name));
    }
    return obj;
}

double OAIGoogleCloudAiplatformV1beta1Attribution::getApproximationError() const {
    return m_approximation_error;
}
void OAIGoogleCloudAiplatformV1beta1Attribution::setApproximationError(const double &approximation_error) {
    m_approximation_error = approximation_error;
    m_approximation_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_approximation_error_Set() const{
    return m_approximation_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_approximation_error_Valid() const{
    return m_approximation_error_isValid;
}

double OAIGoogleCloudAiplatformV1beta1Attribution::getBaselineOutputValue() const {
    return m_baseline_output_value;
}
void OAIGoogleCloudAiplatformV1beta1Attribution::setBaselineOutputValue(const double &baseline_output_value) {
    m_baseline_output_value = baseline_output_value;
    m_baseline_output_value_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_baseline_output_value_Set() const{
    return m_baseline_output_value_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_baseline_output_value_Valid() const{
    return m_baseline_output_value_isValid;
}

QJsonValue OAIGoogleCloudAiplatformV1beta1Attribution::getFeatureAttributions() const {
    return m_feature_attributions;
}
void OAIGoogleCloudAiplatformV1beta1Attribution::setFeatureAttributions(const QJsonValue &feature_attributions) {
    m_feature_attributions = feature_attributions;
    m_feature_attributions_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_feature_attributions_Set() const{
    return m_feature_attributions_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_feature_attributions_Valid() const{
    return m_feature_attributions_isValid;
}

double OAIGoogleCloudAiplatformV1beta1Attribution::getInstanceOutputValue() const {
    return m_instance_output_value;
}
void OAIGoogleCloudAiplatformV1beta1Attribution::setInstanceOutputValue(const double &instance_output_value) {
    m_instance_output_value = instance_output_value;
    m_instance_output_value_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_instance_output_value_Set() const{
    return m_instance_output_value_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_instance_output_value_Valid() const{
    return m_instance_output_value_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1Attribution::getOutputDisplayName() const {
    return m_output_display_name;
}
void OAIGoogleCloudAiplatformV1beta1Attribution::setOutputDisplayName(const QString &output_display_name) {
    m_output_display_name = output_display_name;
    m_output_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_output_display_name_Set() const{
    return m_output_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_output_display_name_Valid() const{
    return m_output_display_name_isValid;
}

QList<qint32> OAIGoogleCloudAiplatformV1beta1Attribution::getOutputIndex() const {
    return m_output_index;
}
void OAIGoogleCloudAiplatformV1beta1Attribution::setOutputIndex(const QList<qint32> &output_index) {
    m_output_index = output_index;
    m_output_index_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_output_index_Set() const{
    return m_output_index_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_output_index_Valid() const{
    return m_output_index_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1Attribution::getOutputName() const {
    return m_output_name;
}
void OAIGoogleCloudAiplatformV1beta1Attribution::setOutputName(const QString &output_name) {
    m_output_name = output_name;
    m_output_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_output_name_Set() const{
    return m_output_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::is_output_name_Valid() const{
    return m_output_name_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_approximation_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_baseline_output_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_attributions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_output_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_index.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1Attribution::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
