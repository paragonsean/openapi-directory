/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::~OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly() {}

void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::initializeModel() {

    m_anomaly_detection_threshold_isSet = false;
    m_anomaly_detection_threshold_isValid = false;

    m_anomaly_uri_isSet = false;
    m_anomaly_uri_isValid = false;

    m_distribution_deviation_isSet = false;
    m_distribution_deviation_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_stats_uri_isSet = false;
    m_stats_uri_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::fromJsonObject(QJsonObject json) {

    m_anomaly_detection_threshold_isValid = ::OpenAPI::fromJsonValue(m_anomaly_detection_threshold, json[QString("anomalyDetectionThreshold")]);
    m_anomaly_detection_threshold_isSet = !json[QString("anomalyDetectionThreshold")].isNull() && m_anomaly_detection_threshold_isValid;

    m_anomaly_uri_isValid = ::OpenAPI::fromJsonValue(m_anomaly_uri, json[QString("anomalyUri")]);
    m_anomaly_uri_isSet = !json[QString("anomalyUri")].isNull() && m_anomaly_uri_isValid;

    m_distribution_deviation_isValid = ::OpenAPI::fromJsonValue(m_distribution_deviation, json[QString("distributionDeviation")]);
    m_distribution_deviation_isSet = !json[QString("distributionDeviation")].isNull() && m_distribution_deviation_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_stats_uri_isValid = ::OpenAPI::fromJsonValue(m_stats_uri, json[QString("statsUri")]);
    m_stats_uri_isSet = !json[QString("statsUri")].isNull() && m_stats_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::asJsonObject() const {
    QJsonObject obj;
    if (m_anomaly_detection_threshold_isSet) {
        obj.insert(QString("anomalyDetectionThreshold"), ::OpenAPI::toJsonValue(m_anomaly_detection_threshold));
    }
    if (m_anomaly_uri_isSet) {
        obj.insert(QString("anomalyUri"), ::OpenAPI::toJsonValue(m_anomaly_uri));
    }
    if (m_distribution_deviation_isSet) {
        obj.insert(QString("distributionDeviation"), ::OpenAPI::toJsonValue(m_distribution_deviation));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_stats_uri_isSet) {
        obj.insert(QString("statsUri"), ::OpenAPI::toJsonValue(m_stats_uri));
    }
    return obj;
}

double OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::getAnomalyDetectionThreshold() const {
    return m_anomaly_detection_threshold;
}
void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::setAnomalyDetectionThreshold(const double &anomaly_detection_threshold) {
    m_anomaly_detection_threshold = anomaly_detection_threshold;
    m_anomaly_detection_threshold_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_anomaly_detection_threshold_Set() const{
    return m_anomaly_detection_threshold_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_anomaly_detection_threshold_Valid() const{
    return m_anomaly_detection_threshold_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::getAnomalyUri() const {
    return m_anomaly_uri;
}
void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::setAnomalyUri(const QString &anomaly_uri) {
    m_anomaly_uri = anomaly_uri;
    m_anomaly_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_anomaly_uri_Set() const{
    return m_anomaly_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_anomaly_uri_Valid() const{
    return m_anomaly_uri_isValid;
}

double OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::getDistributionDeviation() const {
    return m_distribution_deviation;
}
void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::setDistributionDeviation(const double &distribution_deviation) {
    m_distribution_deviation = distribution_deviation;
    m_distribution_deviation_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_distribution_deviation_Set() const{
    return m_distribution_deviation_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_distribution_deviation_Valid() const{
    return m_distribution_deviation_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_end_time_Valid() const{
    return m_end_time_isValid;
}

double OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::getScore() const {
    return m_score;
}
void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::setScore(const double &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_score_Set() const{
    return m_score_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_score_Valid() const{
    return m_score_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::getStatsUri() const {
    return m_stats_uri;
}
void OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::setStatsUri(const QString &stats_uri) {
    m_stats_uri = stats_uri;
    m_stats_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_stats_uri_Set() const{
    return m_stats_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::is_stats_uri_Valid() const{
    return m_stats_uri_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_anomaly_detection_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_anomaly_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_distribution_deviation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stats_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureStatsAnomaly::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
