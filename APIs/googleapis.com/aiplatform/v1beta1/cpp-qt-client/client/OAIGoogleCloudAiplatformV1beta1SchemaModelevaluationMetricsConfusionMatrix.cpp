/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::~OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix() {}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::initializeModel() {

    m_annotation_specs_isSet = false;
    m_annotation_specs_isValid = false;

    m_rows_isSet = false;
    m_rows_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::fromJsonObject(QJsonObject json) {

    m_annotation_specs_isValid = ::OpenAPI::fromJsonValue(m_annotation_specs, json[QString("annotationSpecs")]);
    m_annotation_specs_isSet = !json[QString("annotationSpecs")].isNull() && m_annotation_specs_isValid;

    if(json["rows"].isArray()){
        auto arr = json["rows"].toArray();
        m_rows_isValid = true;
        if(arr.count() > 0) {
            for (const QJsonValue jval : arr) {
                QList<QJsonValue> item;
                m_rows_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_rows_isSet = !jval.isNull() && m_rows_isValid;
                m_rows.push_back(item);
            }
        }
    }
}

QString OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_specs.size() > 0) {
        obj.insert(QString("annotationSpecs"), ::OpenAPI::toJsonValue(m_annotation_specs));
    }
    if (m_rows.size() > 0) {
        
        obj.insert(QString("rows"), toJsonValue(m_rows));
    }
    return obj;
}

QList<OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef> OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::getAnnotationSpecs() const {
    return m_annotation_specs;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::setAnnotationSpecs(const QList<OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef> &annotation_specs) {
    m_annotation_specs = annotation_specs;
    m_annotation_specs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::is_annotation_specs_Set() const{
    return m_annotation_specs_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::is_annotation_specs_Valid() const{
    return m_annotation_specs_isValid;
}

QList<QList<QJsonValue>> OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::getRows() const {
    return m_rows;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::setRows(const QList<QList<QJsonValue>> &rows) {
    m_rows = rows;
    m_rows_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::is_rows_Set() const{
    return m_rows_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::is_rows_Valid() const{
    return m_rows_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_specs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rows.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
