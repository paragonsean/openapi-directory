/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1DedicatedResources.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1DedicatedResources::OAIGoogleCloudAiplatformV1beta1DedicatedResources(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1DedicatedResources::OAIGoogleCloudAiplatformV1beta1DedicatedResources() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1DedicatedResources::~OAIGoogleCloudAiplatformV1beta1DedicatedResources() {}

void OAIGoogleCloudAiplatformV1beta1DedicatedResources::initializeModel() {

    m_autoscaling_metric_specs_isSet = false;
    m_autoscaling_metric_specs_isValid = false;

    m_machine_spec_isSet = false;
    m_machine_spec_isValid = false;

    m_max_replica_count_isSet = false;
    m_max_replica_count_isValid = false;

    m_min_replica_count_isSet = false;
    m_min_replica_count_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1DedicatedResources::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1DedicatedResources::fromJsonObject(QJsonObject json) {

    m_autoscaling_metric_specs_isValid = ::OpenAPI::fromJsonValue(m_autoscaling_metric_specs, json[QString("autoscalingMetricSpecs")]);
    m_autoscaling_metric_specs_isSet = !json[QString("autoscalingMetricSpecs")].isNull() && m_autoscaling_metric_specs_isValid;

    m_machine_spec_isValid = ::OpenAPI::fromJsonValue(m_machine_spec, json[QString("machineSpec")]);
    m_machine_spec_isSet = !json[QString("machineSpec")].isNull() && m_machine_spec_isValid;

    m_max_replica_count_isValid = ::OpenAPI::fromJsonValue(m_max_replica_count, json[QString("maxReplicaCount")]);
    m_max_replica_count_isSet = !json[QString("maxReplicaCount")].isNull() && m_max_replica_count_isValid;

    m_min_replica_count_isValid = ::OpenAPI::fromJsonValue(m_min_replica_count, json[QString("minReplicaCount")]);
    m_min_replica_count_isSet = !json[QString("minReplicaCount")].isNull() && m_min_replica_count_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1DedicatedResources::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1DedicatedResources::asJsonObject() const {
    QJsonObject obj;
    if (m_autoscaling_metric_specs.size() > 0) {
        obj.insert(QString("autoscalingMetricSpecs"), ::OpenAPI::toJsonValue(m_autoscaling_metric_specs));
    }
    if (m_machine_spec.isSet()) {
        obj.insert(QString("machineSpec"), ::OpenAPI::toJsonValue(m_machine_spec));
    }
    if (m_max_replica_count_isSet) {
        obj.insert(QString("maxReplicaCount"), ::OpenAPI::toJsonValue(m_max_replica_count));
    }
    if (m_min_replica_count_isSet) {
        obj.insert(QString("minReplicaCount"), ::OpenAPI::toJsonValue(m_min_replica_count));
    }
    return obj;
}

QList<OAIGoogleCloudAiplatformV1beta1AutoscalingMetricSpec> OAIGoogleCloudAiplatformV1beta1DedicatedResources::getAutoscalingMetricSpecs() const {
    return m_autoscaling_metric_specs;
}
void OAIGoogleCloudAiplatformV1beta1DedicatedResources::setAutoscalingMetricSpecs(const QList<OAIGoogleCloudAiplatformV1beta1AutoscalingMetricSpec> &autoscaling_metric_specs) {
    m_autoscaling_metric_specs = autoscaling_metric_specs;
    m_autoscaling_metric_specs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::is_autoscaling_metric_specs_Set() const{
    return m_autoscaling_metric_specs_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::is_autoscaling_metric_specs_Valid() const{
    return m_autoscaling_metric_specs_isValid;
}

OAIGoogleCloudAiplatformV1beta1MachineSpec OAIGoogleCloudAiplatformV1beta1DedicatedResources::getMachineSpec() const {
    return m_machine_spec;
}
void OAIGoogleCloudAiplatformV1beta1DedicatedResources::setMachineSpec(const OAIGoogleCloudAiplatformV1beta1MachineSpec &machine_spec) {
    m_machine_spec = machine_spec;
    m_machine_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::is_machine_spec_Set() const{
    return m_machine_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::is_machine_spec_Valid() const{
    return m_machine_spec_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1DedicatedResources::getMaxReplicaCount() const {
    return m_max_replica_count;
}
void OAIGoogleCloudAiplatformV1beta1DedicatedResources::setMaxReplicaCount(const qint32 &max_replica_count) {
    m_max_replica_count = max_replica_count;
    m_max_replica_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::is_max_replica_count_Set() const{
    return m_max_replica_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::is_max_replica_count_Valid() const{
    return m_max_replica_count_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1DedicatedResources::getMinReplicaCount() const {
    return m_min_replica_count;
}
void OAIGoogleCloudAiplatformV1beta1DedicatedResources::setMinReplicaCount(const qint32 &min_replica_count) {
    m_min_replica_count = min_replica_count;
    m_min_replica_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::is_min_replica_count_Set() const{
    return m_min_replica_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::is_min_replica_count_Valid() const{
    return m_min_replica_count_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_autoscaling_metric_specs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_machine_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_replica_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_replica_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1DedicatedResources::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
