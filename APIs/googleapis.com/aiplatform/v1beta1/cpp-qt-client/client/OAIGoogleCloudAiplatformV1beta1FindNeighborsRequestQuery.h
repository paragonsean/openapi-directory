/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1FindNeighborsRequestQuery.h
 *
 * A query to find a number of the nearest neighbors (most similar vectors) of a vector.
 */

#ifndef OAIGoogleCloudAiplatformV1beta1FindNeighborsRequestQuery_H
#define OAIGoogleCloudAiplatformV1beta1FindNeighborsRequestQuery_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1beta1IndexDatapoint.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1beta1IndexDatapoint;

class OAIGoogleCloudAiplatformV1beta1FindNeighborsRequestQuery : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1FindNeighborsRequestQuery();
    OAIGoogleCloudAiplatformV1beta1FindNeighborsRequestQuery(QString json);
    ~OAIGoogleCloudAiplatformV1beta1FindNeighborsRequestQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getApproximateNeighborCount() const;
    void setApproximateNeighborCount(const qint32 &approximate_neighbor_count);
    bool is_approximate_neighbor_count_Set() const;
    bool is_approximate_neighbor_count_Valid() const;

    OAIGoogleCloudAiplatformV1beta1IndexDatapoint getDatapoint() const;
    void setDatapoint(const OAIGoogleCloudAiplatformV1beta1IndexDatapoint &datapoint);
    bool is_datapoint_Set() const;
    bool is_datapoint_Valid() const;

    double getFractionLeafNodesToSearchOverride() const;
    void setFractionLeafNodesToSearchOverride(const double &fraction_leaf_nodes_to_search_override);
    bool is_fraction_leaf_nodes_to_search_override_Set() const;
    bool is_fraction_leaf_nodes_to_search_override_Valid() const;

    qint32 getNeighborCount() const;
    void setNeighborCount(const qint32 &neighbor_count);
    bool is_neighbor_count_Set() const;
    bool is_neighbor_count_Valid() const;

    qint32 getPerCrowdingAttributeNeighborCount() const;
    void setPerCrowdingAttributeNeighborCount(const qint32 &per_crowding_attribute_neighbor_count);
    bool is_per_crowding_attribute_neighbor_count_Set() const;
    bool is_per_crowding_attribute_neighbor_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_approximate_neighbor_count;
    bool m_approximate_neighbor_count_isSet;
    bool m_approximate_neighbor_count_isValid;

    OAIGoogleCloudAiplatformV1beta1IndexDatapoint m_datapoint;
    bool m_datapoint_isSet;
    bool m_datapoint_isValid;

    double m_fraction_leaf_nodes_to_search_override;
    bool m_fraction_leaf_nodes_to_search_override_isSet;
    bool m_fraction_leaf_nodes_to_search_override_isValid;

    qint32 m_neighbor_count;
    bool m_neighbor_count_isSet;
    bool m_neighbor_count_isValid;

    qint32 m_per_crowding_attribute_neighbor_count;
    bool m_per_crowding_attribute_neighbor_count_isSet;
    bool m_per_crowding_attribute_neighbor_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1FindNeighborsRequestQuery)

#endif // OAIGoogleCloudAiplatformV1beta1FindNeighborsRequestQuery_H
