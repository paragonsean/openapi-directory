/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::~OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry() {}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::initializeModel() {

    m_observed_quantile_isSet = false;
    m_observed_quantile_isValid = false;

    m_quantile_isSet = false;
    m_quantile_isValid = false;

    m_scaled_pinball_loss_isSet = false;
    m_scaled_pinball_loss_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::fromJsonObject(QJsonObject json) {

    m_observed_quantile_isValid = ::OpenAPI::fromJsonValue(m_observed_quantile, json[QString("observedQuantile")]);
    m_observed_quantile_isSet = !json[QString("observedQuantile")].isNull() && m_observed_quantile_isValid;

    m_quantile_isValid = ::OpenAPI::fromJsonValue(m_quantile, json[QString("quantile")]);
    m_quantile_isSet = !json[QString("quantile")].isNull() && m_quantile_isValid;

    m_scaled_pinball_loss_isValid = ::OpenAPI::fromJsonValue(m_scaled_pinball_loss, json[QString("scaledPinballLoss")]);
    m_scaled_pinball_loss_isSet = !json[QString("scaledPinballLoss")].isNull() && m_scaled_pinball_loss_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_observed_quantile_isSet) {
        obj.insert(QString("observedQuantile"), ::OpenAPI::toJsonValue(m_observed_quantile));
    }
    if (m_quantile_isSet) {
        obj.insert(QString("quantile"), ::OpenAPI::toJsonValue(m_quantile));
    }
    if (m_scaled_pinball_loss_isSet) {
        obj.insert(QString("scaledPinballLoss"), ::OpenAPI::toJsonValue(m_scaled_pinball_loss));
    }
    return obj;
}

double OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::getObservedQuantile() const {
    return m_observed_quantile;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::setObservedQuantile(const double &observed_quantile) {
    m_observed_quantile = observed_quantile;
    m_observed_quantile_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::is_observed_quantile_Set() const{
    return m_observed_quantile_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::is_observed_quantile_Valid() const{
    return m_observed_quantile_isValid;
}

double OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::getQuantile() const {
    return m_quantile;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::setQuantile(const double &quantile) {
    m_quantile = quantile;
    m_quantile_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::is_quantile_Set() const{
    return m_quantile_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::is_quantile_Valid() const{
    return m_quantile_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::getScaledPinballLoss() const {
    return m_scaled_pinball_loss;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::setScaledPinballLoss(const float &scaled_pinball_loss) {
    m_scaled_pinball_loss = scaled_pinball_loss;
    m_scaled_pinball_loss_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::is_scaled_pinball_loss_Set() const{
    return m_scaled_pinball_loss_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::is_scaled_pinball_loss_Valid() const{
    return m_scaled_pinball_loss_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_observed_quantile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scaled_pinball_loss_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
