/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::~OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig() {}

void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::initializeModel() {

    m_max_duration_no_progress_isSet = false;
    m_max_duration_no_progress_isValid = false;

    m_max_num_trials_isSet = false;
    m_max_num_trials_isValid = false;

    m_max_num_trials_no_progress_isSet = false;
    m_max_num_trials_no_progress_isValid = false;

    m_maximum_runtime_constraint_isSet = false;
    m_maximum_runtime_constraint_isValid = false;

    m_min_num_trials_isSet = false;
    m_min_num_trials_isValid = false;

    m_minimum_runtime_constraint_isSet = false;
    m_minimum_runtime_constraint_isValid = false;

    m_should_stop_asap_isSet = false;
    m_should_stop_asap_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::fromJsonObject(QJsonObject json) {

    m_max_duration_no_progress_isValid = ::OpenAPI::fromJsonValue(m_max_duration_no_progress, json[QString("maxDurationNoProgress")]);
    m_max_duration_no_progress_isSet = !json[QString("maxDurationNoProgress")].isNull() && m_max_duration_no_progress_isValid;

    m_max_num_trials_isValid = ::OpenAPI::fromJsonValue(m_max_num_trials, json[QString("maxNumTrials")]);
    m_max_num_trials_isSet = !json[QString("maxNumTrials")].isNull() && m_max_num_trials_isValid;

    m_max_num_trials_no_progress_isValid = ::OpenAPI::fromJsonValue(m_max_num_trials_no_progress, json[QString("maxNumTrialsNoProgress")]);
    m_max_num_trials_no_progress_isSet = !json[QString("maxNumTrialsNoProgress")].isNull() && m_max_num_trials_no_progress_isValid;

    m_maximum_runtime_constraint_isValid = ::OpenAPI::fromJsonValue(m_maximum_runtime_constraint, json[QString("maximumRuntimeConstraint")]);
    m_maximum_runtime_constraint_isSet = !json[QString("maximumRuntimeConstraint")].isNull() && m_maximum_runtime_constraint_isValid;

    m_min_num_trials_isValid = ::OpenAPI::fromJsonValue(m_min_num_trials, json[QString("minNumTrials")]);
    m_min_num_trials_isSet = !json[QString("minNumTrials")].isNull() && m_min_num_trials_isValid;

    m_minimum_runtime_constraint_isValid = ::OpenAPI::fromJsonValue(m_minimum_runtime_constraint, json[QString("minimumRuntimeConstraint")]);
    m_minimum_runtime_constraint_isSet = !json[QString("minimumRuntimeConstraint")].isNull() && m_minimum_runtime_constraint_isValid;

    m_should_stop_asap_isValid = ::OpenAPI::fromJsonValue(m_should_stop_asap, json[QString("shouldStopAsap")]);
    m_should_stop_asap_isSet = !json[QString("shouldStopAsap")].isNull() && m_should_stop_asap_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_max_duration_no_progress_isSet) {
        obj.insert(QString("maxDurationNoProgress"), ::OpenAPI::toJsonValue(m_max_duration_no_progress));
    }
    if (m_max_num_trials_isSet) {
        obj.insert(QString("maxNumTrials"), ::OpenAPI::toJsonValue(m_max_num_trials));
    }
    if (m_max_num_trials_no_progress_isSet) {
        obj.insert(QString("maxNumTrialsNoProgress"), ::OpenAPI::toJsonValue(m_max_num_trials_no_progress));
    }
    if (m_maximum_runtime_constraint.isSet()) {
        obj.insert(QString("maximumRuntimeConstraint"), ::OpenAPI::toJsonValue(m_maximum_runtime_constraint));
    }
    if (m_min_num_trials_isSet) {
        obj.insert(QString("minNumTrials"), ::OpenAPI::toJsonValue(m_min_num_trials));
    }
    if (m_minimum_runtime_constraint.isSet()) {
        obj.insert(QString("minimumRuntimeConstraint"), ::OpenAPI::toJsonValue(m_minimum_runtime_constraint));
    }
    if (m_should_stop_asap_isSet) {
        obj.insert(QString("shouldStopAsap"), ::OpenAPI::toJsonValue(m_should_stop_asap));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::getMaxDurationNoProgress() const {
    return m_max_duration_no_progress;
}
void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::setMaxDurationNoProgress(const QString &max_duration_no_progress) {
    m_max_duration_no_progress = max_duration_no_progress;
    m_max_duration_no_progress_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_max_duration_no_progress_Set() const{
    return m_max_duration_no_progress_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_max_duration_no_progress_Valid() const{
    return m_max_duration_no_progress_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::getMaxNumTrials() const {
    return m_max_num_trials;
}
void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::setMaxNumTrials(const qint32 &max_num_trials) {
    m_max_num_trials = max_num_trials;
    m_max_num_trials_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_max_num_trials_Set() const{
    return m_max_num_trials_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_max_num_trials_Valid() const{
    return m_max_num_trials_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::getMaxNumTrialsNoProgress() const {
    return m_max_num_trials_no_progress;
}
void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::setMaxNumTrialsNoProgress(const qint32 &max_num_trials_no_progress) {
    m_max_num_trials_no_progress = max_num_trials_no_progress;
    m_max_num_trials_no_progress_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_max_num_trials_no_progress_Set() const{
    return m_max_num_trials_no_progress_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_max_num_trials_no_progress_Valid() const{
    return m_max_num_trials_no_progress_isValid;
}

OAIGoogleCloudAiplatformV1beta1StudyTimeConstraint OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::getMaximumRuntimeConstraint() const {
    return m_maximum_runtime_constraint;
}
void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::setMaximumRuntimeConstraint(const OAIGoogleCloudAiplatformV1beta1StudyTimeConstraint &maximum_runtime_constraint) {
    m_maximum_runtime_constraint = maximum_runtime_constraint;
    m_maximum_runtime_constraint_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_maximum_runtime_constraint_Set() const{
    return m_maximum_runtime_constraint_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_maximum_runtime_constraint_Valid() const{
    return m_maximum_runtime_constraint_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::getMinNumTrials() const {
    return m_min_num_trials;
}
void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::setMinNumTrials(const qint32 &min_num_trials) {
    m_min_num_trials = min_num_trials;
    m_min_num_trials_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_min_num_trials_Set() const{
    return m_min_num_trials_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_min_num_trials_Valid() const{
    return m_min_num_trials_isValid;
}

OAIGoogleCloudAiplatformV1beta1StudyTimeConstraint OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::getMinimumRuntimeConstraint() const {
    return m_minimum_runtime_constraint;
}
void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::setMinimumRuntimeConstraint(const OAIGoogleCloudAiplatformV1beta1StudyTimeConstraint &minimum_runtime_constraint) {
    m_minimum_runtime_constraint = minimum_runtime_constraint;
    m_minimum_runtime_constraint_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_minimum_runtime_constraint_Set() const{
    return m_minimum_runtime_constraint_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_minimum_runtime_constraint_Valid() const{
    return m_minimum_runtime_constraint_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::isShouldStopAsap() const {
    return m_should_stop_asap;
}
void OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::setShouldStopAsap(const bool &should_stop_asap) {
    m_should_stop_asap = should_stop_asap;
    m_should_stop_asap_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_should_stop_asap_Set() const{
    return m_should_stop_asap_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::is_should_stop_asap_Valid() const{
    return m_should_stop_asap_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_duration_no_progress_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_num_trials_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_num_trials_no_progress_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maximum_runtime_constraint.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_num_trials_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_runtime_constraint.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_should_stop_asap_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
