/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::~OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs() {}

void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::initializeModel() {

    m_additional_experiments_isSet = false;
    m_additional_experiments_isValid = false;

    m_available_at_forecast_columns_isSet = false;
    m_available_at_forecast_columns_isValid = false;

    m_context_window_isSet = false;
    m_context_window_isValid = false;

    m_data_granularity_isSet = false;
    m_data_granularity_isValid = false;

    m_export_evaluated_data_items_config_isSet = false;
    m_export_evaluated_data_items_config_isValid = false;

    m_forecast_horizon_isSet = false;
    m_forecast_horizon_isValid = false;

    m_hierarchy_config_isSet = false;
    m_hierarchy_config_isValid = false;

    m_holiday_regions_isSet = false;
    m_holiday_regions_isValid = false;

    m_optimization_objective_isSet = false;
    m_optimization_objective_isValid = false;

    m_quantiles_isSet = false;
    m_quantiles_isValid = false;

    m_target_column_isSet = false;
    m_target_column_isValid = false;

    m_time_column_isSet = false;
    m_time_column_isValid = false;

    m_time_series_attribute_columns_isSet = false;
    m_time_series_attribute_columns_isValid = false;

    m_time_series_identifier_column_isSet = false;
    m_time_series_identifier_column_isValid = false;

    m_train_budget_milli_node_hours_isSet = false;
    m_train_budget_milli_node_hours_isValid = false;

    m_transformations_isSet = false;
    m_transformations_isValid = false;

    m_unavailable_at_forecast_columns_isSet = false;
    m_unavailable_at_forecast_columns_isValid = false;

    m_validation_options_isSet = false;
    m_validation_options_isValid = false;

    m_weight_column_isSet = false;
    m_weight_column_isValid = false;

    m_window_config_isSet = false;
    m_window_config_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::fromJsonObject(QJsonObject json) {

    m_additional_experiments_isValid = ::OpenAPI::fromJsonValue(m_additional_experiments, json[QString("additionalExperiments")]);
    m_additional_experiments_isSet = !json[QString("additionalExperiments")].isNull() && m_additional_experiments_isValid;

    m_available_at_forecast_columns_isValid = ::OpenAPI::fromJsonValue(m_available_at_forecast_columns, json[QString("availableAtForecastColumns")]);
    m_available_at_forecast_columns_isSet = !json[QString("availableAtForecastColumns")].isNull() && m_available_at_forecast_columns_isValid;

    m_context_window_isValid = ::OpenAPI::fromJsonValue(m_context_window, json[QString("contextWindow")]);
    m_context_window_isSet = !json[QString("contextWindow")].isNull() && m_context_window_isValid;

    m_data_granularity_isValid = ::OpenAPI::fromJsonValue(m_data_granularity, json[QString("dataGranularity")]);
    m_data_granularity_isSet = !json[QString("dataGranularity")].isNull() && m_data_granularity_isValid;

    m_export_evaluated_data_items_config_isValid = ::OpenAPI::fromJsonValue(m_export_evaluated_data_items_config, json[QString("exportEvaluatedDataItemsConfig")]);
    m_export_evaluated_data_items_config_isSet = !json[QString("exportEvaluatedDataItemsConfig")].isNull() && m_export_evaluated_data_items_config_isValid;

    m_forecast_horizon_isValid = ::OpenAPI::fromJsonValue(m_forecast_horizon, json[QString("forecastHorizon")]);
    m_forecast_horizon_isSet = !json[QString("forecastHorizon")].isNull() && m_forecast_horizon_isValid;

    m_hierarchy_config_isValid = ::OpenAPI::fromJsonValue(m_hierarchy_config, json[QString("hierarchyConfig")]);
    m_hierarchy_config_isSet = !json[QString("hierarchyConfig")].isNull() && m_hierarchy_config_isValid;

    m_holiday_regions_isValid = ::OpenAPI::fromJsonValue(m_holiday_regions, json[QString("holidayRegions")]);
    m_holiday_regions_isSet = !json[QString("holidayRegions")].isNull() && m_holiday_regions_isValid;

    m_optimization_objective_isValid = ::OpenAPI::fromJsonValue(m_optimization_objective, json[QString("optimizationObjective")]);
    m_optimization_objective_isSet = !json[QString("optimizationObjective")].isNull() && m_optimization_objective_isValid;

    m_quantiles_isValid = ::OpenAPI::fromJsonValue(m_quantiles, json[QString("quantiles")]);
    m_quantiles_isSet = !json[QString("quantiles")].isNull() && m_quantiles_isValid;

    m_target_column_isValid = ::OpenAPI::fromJsonValue(m_target_column, json[QString("targetColumn")]);
    m_target_column_isSet = !json[QString("targetColumn")].isNull() && m_target_column_isValid;

    m_time_column_isValid = ::OpenAPI::fromJsonValue(m_time_column, json[QString("timeColumn")]);
    m_time_column_isSet = !json[QString("timeColumn")].isNull() && m_time_column_isValid;

    m_time_series_attribute_columns_isValid = ::OpenAPI::fromJsonValue(m_time_series_attribute_columns, json[QString("timeSeriesAttributeColumns")]);
    m_time_series_attribute_columns_isSet = !json[QString("timeSeriesAttributeColumns")].isNull() && m_time_series_attribute_columns_isValid;

    m_time_series_identifier_column_isValid = ::OpenAPI::fromJsonValue(m_time_series_identifier_column, json[QString("timeSeriesIdentifierColumn")]);
    m_time_series_identifier_column_isSet = !json[QString("timeSeriesIdentifierColumn")].isNull() && m_time_series_identifier_column_isValid;

    m_train_budget_milli_node_hours_isValid = ::OpenAPI::fromJsonValue(m_train_budget_milli_node_hours, json[QString("trainBudgetMilliNodeHours")]);
    m_train_budget_milli_node_hours_isSet = !json[QString("trainBudgetMilliNodeHours")].isNull() && m_train_budget_milli_node_hours_isValid;

    m_transformations_isValid = ::OpenAPI::fromJsonValue(m_transformations, json[QString("transformations")]);
    m_transformations_isSet = !json[QString("transformations")].isNull() && m_transformations_isValid;

    m_unavailable_at_forecast_columns_isValid = ::OpenAPI::fromJsonValue(m_unavailable_at_forecast_columns, json[QString("unavailableAtForecastColumns")]);
    m_unavailable_at_forecast_columns_isSet = !json[QString("unavailableAtForecastColumns")].isNull() && m_unavailable_at_forecast_columns_isValid;

    m_validation_options_isValid = ::OpenAPI::fromJsonValue(m_validation_options, json[QString("validationOptions")]);
    m_validation_options_isSet = !json[QString("validationOptions")].isNull() && m_validation_options_isValid;

    m_weight_column_isValid = ::OpenAPI::fromJsonValue(m_weight_column, json[QString("weightColumn")]);
    m_weight_column_isSet = !json[QString("weightColumn")].isNull() && m_weight_column_isValid;

    m_window_config_isValid = ::OpenAPI::fromJsonValue(m_window_config, json[QString("windowConfig")]);
    m_window_config_isSet = !json[QString("windowConfig")].isNull() && m_window_config_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_experiments.size() > 0) {
        obj.insert(QString("additionalExperiments"), ::OpenAPI::toJsonValue(m_additional_experiments));
    }
    if (m_available_at_forecast_columns.size() > 0) {
        obj.insert(QString("availableAtForecastColumns"), ::OpenAPI::toJsonValue(m_available_at_forecast_columns));
    }
    if (m_context_window_isSet) {
        obj.insert(QString("contextWindow"), ::OpenAPI::toJsonValue(m_context_window));
    }
    if (m_data_granularity.isSet()) {
        obj.insert(QString("dataGranularity"), ::OpenAPI::toJsonValue(m_data_granularity));
    }
    if (m_export_evaluated_data_items_config.isSet()) {
        obj.insert(QString("exportEvaluatedDataItemsConfig"), ::OpenAPI::toJsonValue(m_export_evaluated_data_items_config));
    }
    if (m_forecast_horizon_isSet) {
        obj.insert(QString("forecastHorizon"), ::OpenAPI::toJsonValue(m_forecast_horizon));
    }
    if (m_hierarchy_config.isSet()) {
        obj.insert(QString("hierarchyConfig"), ::OpenAPI::toJsonValue(m_hierarchy_config));
    }
    if (m_holiday_regions.size() > 0) {
        obj.insert(QString("holidayRegions"), ::OpenAPI::toJsonValue(m_holiday_regions));
    }
    if (m_optimization_objective_isSet) {
        obj.insert(QString("optimizationObjective"), ::OpenAPI::toJsonValue(m_optimization_objective));
    }
    if (m_quantiles.size() > 0) {
        obj.insert(QString("quantiles"), ::OpenAPI::toJsonValue(m_quantiles));
    }
    if (m_target_column_isSet) {
        obj.insert(QString("targetColumn"), ::OpenAPI::toJsonValue(m_target_column));
    }
    if (m_time_column_isSet) {
        obj.insert(QString("timeColumn"), ::OpenAPI::toJsonValue(m_time_column));
    }
    if (m_time_series_attribute_columns.size() > 0) {
        obj.insert(QString("timeSeriesAttributeColumns"), ::OpenAPI::toJsonValue(m_time_series_attribute_columns));
    }
    if (m_time_series_identifier_column_isSet) {
        obj.insert(QString("timeSeriesIdentifierColumn"), ::OpenAPI::toJsonValue(m_time_series_identifier_column));
    }
    if (m_train_budget_milli_node_hours_isSet) {
        obj.insert(QString("trainBudgetMilliNodeHours"), ::OpenAPI::toJsonValue(m_train_budget_milli_node_hours));
    }
    if (m_transformations.size() > 0) {
        obj.insert(QString("transformations"), ::OpenAPI::toJsonValue(m_transformations));
    }
    if (m_unavailable_at_forecast_columns.size() > 0) {
        obj.insert(QString("unavailableAtForecastColumns"), ::OpenAPI::toJsonValue(m_unavailable_at_forecast_columns));
    }
    if (m_validation_options_isSet) {
        obj.insert(QString("validationOptions"), ::OpenAPI::toJsonValue(m_validation_options));
    }
    if (m_weight_column_isSet) {
        obj.insert(QString("weightColumn"), ::OpenAPI::toJsonValue(m_weight_column));
    }
    if (m_window_config.isSet()) {
        obj.insert(QString("windowConfig"), ::OpenAPI::toJsonValue(m_window_config));
    }
    return obj;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getAdditionalExperiments() const {
    return m_additional_experiments;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setAdditionalExperiments(const QList<QString> &additional_experiments) {
    m_additional_experiments = additional_experiments;
    m_additional_experiments_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_additional_experiments_Set() const{
    return m_additional_experiments_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_additional_experiments_Valid() const{
    return m_additional_experiments_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getAvailableAtForecastColumns() const {
    return m_available_at_forecast_columns;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setAvailableAtForecastColumns(const QList<QString> &available_at_forecast_columns) {
    m_available_at_forecast_columns = available_at_forecast_columns;
    m_available_at_forecast_columns_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_available_at_forecast_columns_Set() const{
    return m_available_at_forecast_columns_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_available_at_forecast_columns_Valid() const{
    return m_available_at_forecast_columns_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getContextWindow() const {
    return m_context_window;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setContextWindow(const QString &context_window) {
    m_context_window = context_window;
    m_context_window_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_context_window_Set() const{
    return m_context_window_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_context_window_Valid() const{
    return m_context_window_isValid;
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsGranularity OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getDataGranularity() const {
    return m_data_granularity;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setDataGranularity(const OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsGranularity &data_granularity) {
    m_data_granularity = data_granularity;
    m_data_granularity_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_data_granularity_Set() const{
    return m_data_granularity_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_data_granularity_Valid() const{
    return m_data_granularity_isValid;
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getExportEvaluatedDataItemsConfig() const {
    return m_export_evaluated_data_items_config;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setExportEvaluatedDataItemsConfig(const OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig &export_evaluated_data_items_config) {
    m_export_evaluated_data_items_config = export_evaluated_data_items_config;
    m_export_evaluated_data_items_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_export_evaluated_data_items_config_Set() const{
    return m_export_evaluated_data_items_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_export_evaluated_data_items_config_Valid() const{
    return m_export_evaluated_data_items_config_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getForecastHorizon() const {
    return m_forecast_horizon;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setForecastHorizon(const QString &forecast_horizon) {
    m_forecast_horizon = forecast_horizon;
    m_forecast_horizon_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_forecast_horizon_Set() const{
    return m_forecast_horizon_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_forecast_horizon_Valid() const{
    return m_forecast_horizon_isValid;
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getHierarchyConfig() const {
    return m_hierarchy_config;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setHierarchyConfig(const OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig &hierarchy_config) {
    m_hierarchy_config = hierarchy_config;
    m_hierarchy_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_hierarchy_config_Set() const{
    return m_hierarchy_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_hierarchy_config_Valid() const{
    return m_hierarchy_config_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getHolidayRegions() const {
    return m_holiday_regions;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setHolidayRegions(const QList<QString> &holiday_regions) {
    m_holiday_regions = holiday_regions;
    m_holiday_regions_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_holiday_regions_Set() const{
    return m_holiday_regions_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_holiday_regions_Valid() const{
    return m_holiday_regions_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getOptimizationObjective() const {
    return m_optimization_objective;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setOptimizationObjective(const QString &optimization_objective) {
    m_optimization_objective = optimization_objective;
    m_optimization_objective_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_optimization_objective_Set() const{
    return m_optimization_objective_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_optimization_objective_Valid() const{
    return m_optimization_objective_isValid;
}

QList<double> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getQuantiles() const {
    return m_quantiles;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setQuantiles(const QList<double> &quantiles) {
    m_quantiles = quantiles;
    m_quantiles_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_quantiles_Set() const{
    return m_quantiles_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_quantiles_Valid() const{
    return m_quantiles_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getTargetColumn() const {
    return m_target_column;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setTargetColumn(const QString &target_column) {
    m_target_column = target_column;
    m_target_column_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_target_column_Set() const{
    return m_target_column_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_target_column_Valid() const{
    return m_target_column_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getTimeColumn() const {
    return m_time_column;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setTimeColumn(const QString &time_column) {
    m_time_column = time_column;
    m_time_column_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_time_column_Set() const{
    return m_time_column_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_time_column_Valid() const{
    return m_time_column_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getTimeSeriesAttributeColumns() const {
    return m_time_series_attribute_columns;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setTimeSeriesAttributeColumns(const QList<QString> &time_series_attribute_columns) {
    m_time_series_attribute_columns = time_series_attribute_columns;
    m_time_series_attribute_columns_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_time_series_attribute_columns_Set() const{
    return m_time_series_attribute_columns_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_time_series_attribute_columns_Valid() const{
    return m_time_series_attribute_columns_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getTimeSeriesIdentifierColumn() const {
    return m_time_series_identifier_column;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setTimeSeriesIdentifierColumn(const QString &time_series_identifier_column) {
    m_time_series_identifier_column = time_series_identifier_column;
    m_time_series_identifier_column_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_time_series_identifier_column_Set() const{
    return m_time_series_identifier_column_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_time_series_identifier_column_Valid() const{
    return m_time_series_identifier_column_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getTrainBudgetMilliNodeHours() const {
    return m_train_budget_milli_node_hours;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setTrainBudgetMilliNodeHours(const QString &train_budget_milli_node_hours) {
    m_train_budget_milli_node_hours = train_budget_milli_node_hours;
    m_train_budget_milli_node_hours_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_train_budget_milli_node_hours_Set() const{
    return m_train_budget_milli_node_hours_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_train_budget_milli_node_hours_Valid() const{
    return m_train_budget_milli_node_hours_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformation> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getTransformations() const {
    return m_transformations;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setTransformations(const QList<OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputsTransformation> &transformations) {
    m_transformations = transformations;
    m_transformations_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_transformations_Set() const{
    return m_transformations_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_transformations_Valid() const{
    return m_transformations_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getUnavailableAtForecastColumns() const {
    return m_unavailable_at_forecast_columns;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setUnavailableAtForecastColumns(const QList<QString> &unavailable_at_forecast_columns) {
    m_unavailable_at_forecast_columns = unavailable_at_forecast_columns;
    m_unavailable_at_forecast_columns_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_unavailable_at_forecast_columns_Set() const{
    return m_unavailable_at_forecast_columns_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_unavailable_at_forecast_columns_Valid() const{
    return m_unavailable_at_forecast_columns_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getValidationOptions() const {
    return m_validation_options;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setValidationOptions(const QString &validation_options) {
    m_validation_options = validation_options;
    m_validation_options_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_validation_options_Set() const{
    return m_validation_options_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_validation_options_Valid() const{
    return m_validation_options_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getWeightColumn() const {
    return m_weight_column;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setWeightColumn(const QString &weight_column) {
    m_weight_column = weight_column;
    m_weight_column_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_weight_column_Set() const{
    return m_weight_column_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_weight_column_Valid() const{
    return m_weight_column_isValid;
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::getWindowConfig() const {
    return m_window_config;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::setWindowConfig(const OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionWindowConfig &window_config) {
    m_window_config = window_config;
    m_window_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_window_config_Set() const{
    return m_window_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::is_window_config_Valid() const{
    return m_window_config_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_experiments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_at_forecast_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_context_window_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_granularity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_evaluated_data_items_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_forecast_horizon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hierarchy_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_holiday_regions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_optimization_objective_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantiles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_attribute_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_series_identifier_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_train_budget_milli_node_hours_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transformations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_unavailable_at_forecast_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_options_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_window_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionTftForecastingInputs::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
