/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::~OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig() {}

void OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::initializeModel() {

    m_enable_feature_attributes_isSet = false;
    m_enable_feature_attributes_isValid = false;

    m_explanation_baseline_isSet = false;
    m_explanation_baseline_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::fromJsonObject(QJsonObject json) {

    m_enable_feature_attributes_isValid = ::OpenAPI::fromJsonValue(m_enable_feature_attributes, json[QString("enableFeatureAttributes")]);
    m_enable_feature_attributes_isSet = !json[QString("enableFeatureAttributes")].isNull() && m_enable_feature_attributes_isValid;

    m_explanation_baseline_isValid = ::OpenAPI::fromJsonValue(m_explanation_baseline, json[QString("explanationBaseline")]);
    m_explanation_baseline_isSet = !json[QString("explanationBaseline")].isNull() && m_explanation_baseline_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_feature_attributes_isSet) {
        obj.insert(QString("enableFeatureAttributes"), ::OpenAPI::toJsonValue(m_enable_feature_attributes));
    }
    if (m_explanation_baseline.isSet()) {
        obj.insert(QString("explanationBaseline"), ::OpenAPI::toJsonValue(m_explanation_baseline));
    }
    return obj;
}

bool OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::isEnableFeatureAttributes() const {
    return m_enable_feature_attributes;
}
void OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::setEnableFeatureAttributes(const bool &enable_feature_attributes) {
    m_enable_feature_attributes = enable_feature_attributes;
    m_enable_feature_attributes_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::is_enable_feature_attributes_Set() const{
    return m_enable_feature_attributes_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::is_enable_feature_attributes_Valid() const{
    return m_enable_feature_attributes_isValid;
}

OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::getExplanationBaseline() const {
    return m_explanation_baseline;
}
void OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::setExplanationBaseline(const OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline &explanation_baseline) {
    m_explanation_baseline = explanation_baseline;
    m_explanation_baseline_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::is_explanation_baseline_Set() const{
    return m_explanation_baseline_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::is_explanation_baseline_Valid() const{
    return m_explanation_baseline_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_feature_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_explanation_baseline.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigExplanationConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
