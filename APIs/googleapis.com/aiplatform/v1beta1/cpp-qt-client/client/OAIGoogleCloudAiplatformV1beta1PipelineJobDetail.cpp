/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1PipelineJobDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::OAIGoogleCloudAiplatformV1beta1PipelineJobDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::OAIGoogleCloudAiplatformV1beta1PipelineJobDetail() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::~OAIGoogleCloudAiplatformV1beta1PipelineJobDetail() {}

void OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::initializeModel() {

    m_pipeline_context_isSet = false;
    m_pipeline_context_isValid = false;

    m_pipeline_run_context_isSet = false;
    m_pipeline_run_context_isValid = false;

    m_task_details_isSet = false;
    m_task_details_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::fromJsonObject(QJsonObject json) {

    m_pipeline_context_isValid = ::OpenAPI::fromJsonValue(m_pipeline_context, json[QString("pipelineContext")]);
    m_pipeline_context_isSet = !json[QString("pipelineContext")].isNull() && m_pipeline_context_isValid;

    m_pipeline_run_context_isValid = ::OpenAPI::fromJsonValue(m_pipeline_run_context, json[QString("pipelineRunContext")]);
    m_pipeline_run_context_isSet = !json[QString("pipelineRunContext")].isNull() && m_pipeline_run_context_isValid;

    m_task_details_isValid = ::OpenAPI::fromJsonValue(m_task_details, json[QString("taskDetails")]);
    m_task_details_isSet = !json[QString("taskDetails")].isNull() && m_task_details_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_pipeline_context.isSet()) {
        obj.insert(QString("pipelineContext"), ::OpenAPI::toJsonValue(m_pipeline_context));
    }
    if (m_pipeline_run_context.isSet()) {
        obj.insert(QString("pipelineRunContext"), ::OpenAPI::toJsonValue(m_pipeline_run_context));
    }
    if (m_task_details.size() > 0) {
        obj.insert(QString("taskDetails"), ::OpenAPI::toJsonValue(m_task_details));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1Context OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::getPipelineContext() const {
    return m_pipeline_context;
}
void OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::setPipelineContext(const OAIGoogleCloudAiplatformV1beta1Context &pipeline_context) {
    m_pipeline_context = pipeline_context;
    m_pipeline_context_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::is_pipeline_context_Set() const{
    return m_pipeline_context_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::is_pipeline_context_Valid() const{
    return m_pipeline_context_isValid;
}

OAIGoogleCloudAiplatformV1beta1Context OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::getPipelineRunContext() const {
    return m_pipeline_run_context;
}
void OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::setPipelineRunContext(const OAIGoogleCloudAiplatformV1beta1Context &pipeline_run_context) {
    m_pipeline_run_context = pipeline_run_context;
    m_pipeline_run_context_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::is_pipeline_run_context_Set() const{
    return m_pipeline_run_context_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::is_pipeline_run_context_Valid() const{
    return m_pipeline_run_context_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1PipelineTaskDetail> OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::getTaskDetails() const {
    return m_task_details;
}
void OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::setTaskDetails(const QList<OAIGoogleCloudAiplatformV1beta1PipelineTaskDetail> &task_details) {
    m_task_details = task_details;
    m_task_details_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::is_task_details_Set() const{
    return m_task_details_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::is_task_details_Valid() const{
    return m_task_details_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pipeline_context.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pipeline_run_context.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_task_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
