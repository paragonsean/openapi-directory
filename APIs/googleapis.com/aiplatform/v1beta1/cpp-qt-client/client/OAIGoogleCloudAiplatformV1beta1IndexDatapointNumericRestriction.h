/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction.h
 *
 * This field allows restricts to be based on numeric comparisons rather than categorical tokens.
 */

#ifndef OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction_H
#define OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction();
    OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction(QString json);
    ~OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    QString getOp() const;
    void setOp(const QString &op);
    bool is_op_Set() const;
    bool is_op_Valid() const;

    double getValueDouble() const;
    void setValueDouble(const double &value_double);
    bool is_value_double_Set() const;
    bool is_value_double_Valid() const;

    float getValueFloat() const;
    void setValueFloat(const float &value_float);
    bool is_value_float_Set() const;
    bool is_value_float_Valid() const;

    QString getValueInt() const;
    void setValueInt(const QString &value_int);
    bool is_value_int_Set() const;
    bool is_value_int_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;

    QString m_op;
    bool m_op_isSet;
    bool m_op_isValid;

    double m_value_double;
    bool m_value_double_isSet;
    bool m_value_double_isValid;

    float m_value_float;
    bool m_value_float_isSet;
    bool m_value_float_isValid;

    QString m_value_int;
    bool m_value_int_isSet;
    bool m_value_int_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction)

#endif // OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction_H
