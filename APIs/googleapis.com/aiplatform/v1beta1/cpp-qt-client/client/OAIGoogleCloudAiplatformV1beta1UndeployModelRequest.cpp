/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1UndeployModelRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::OAIGoogleCloudAiplatformV1beta1UndeployModelRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::OAIGoogleCloudAiplatformV1beta1UndeployModelRequest() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::~OAIGoogleCloudAiplatformV1beta1UndeployModelRequest() {}

void OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::initializeModel() {

    m_deployed_model_id_isSet = false;
    m_deployed_model_id_isValid = false;

    m_traffic_split_isSet = false;
    m_traffic_split_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::fromJsonObject(QJsonObject json) {

    m_deployed_model_id_isValid = ::OpenAPI::fromJsonValue(m_deployed_model_id, json[QString("deployedModelId")]);
    m_deployed_model_id_isSet = !json[QString("deployedModelId")].isNull() && m_deployed_model_id_isValid;

    m_traffic_split_isValid = ::OpenAPI::fromJsonValue(m_traffic_split, json[QString("trafficSplit")]);
    m_traffic_split_isSet = !json[QString("trafficSplit")].isNull() && m_traffic_split_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_deployed_model_id_isSet) {
        obj.insert(QString("deployedModelId"), ::OpenAPI::toJsonValue(m_deployed_model_id));
    }
    if (m_traffic_split.size() > 0) {
        obj.insert(QString("trafficSplit"), ::OpenAPI::toJsonValue(m_traffic_split));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::getDeployedModelId() const {
    return m_deployed_model_id;
}
void OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::setDeployedModelId(const QString &deployed_model_id) {
    m_deployed_model_id = deployed_model_id;
    m_deployed_model_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::is_deployed_model_id_Set() const{
    return m_deployed_model_id_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::is_deployed_model_id_Valid() const{
    return m_deployed_model_id_isValid;
}

QMap<QString, qint32> OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::getTrafficSplit() const {
    return m_traffic_split;
}
void OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::setTrafficSplit(const QMap<QString, qint32> &traffic_split) {
    m_traffic_split = traffic_split;
    m_traffic_split_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::is_traffic_split_Set() const{
    return m_traffic_split_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::is_traffic_split_Valid() const{
    return m_traffic_split_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deployed_model_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_traffic_split.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1UndeployModelRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
