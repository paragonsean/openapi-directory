/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1FunctionCall.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1FunctionCall::OAIGoogleCloudAiplatformV1beta1FunctionCall(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1FunctionCall::OAIGoogleCloudAiplatformV1beta1FunctionCall() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1FunctionCall::~OAIGoogleCloudAiplatformV1beta1FunctionCall() {}

void OAIGoogleCloudAiplatformV1beta1FunctionCall::initializeModel() {

    m_args_isSet = false;
    m_args_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1FunctionCall::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1FunctionCall::fromJsonObject(QJsonObject json) {

    m_args_isValid = ::OpenAPI::fromJsonValue(m_args, json[QString("args")]);
    m_args_isSet = !json[QString("args")].isNull() && m_args_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FunctionCall::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1FunctionCall::asJsonObject() const {
    QJsonObject obj;
    if (m_args.size() > 0) {
        obj.insert(QString("args"), ::OpenAPI::toJsonValue(m_args));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QMap<QString, QJsonValue> OAIGoogleCloudAiplatformV1beta1FunctionCall::getArgs() const {
    return m_args;
}
void OAIGoogleCloudAiplatformV1beta1FunctionCall::setArgs(const QMap<QString, QJsonValue> &args) {
    m_args = args;
    m_args_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FunctionCall::is_args_Set() const{
    return m_args_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FunctionCall::is_args_Valid() const{
    return m_args_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FunctionCall::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1beta1FunctionCall::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FunctionCall::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FunctionCall::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1FunctionCall::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_args.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1FunctionCall::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
