/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::~OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke() {}

void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::initializeModel() {

    m_gke_yaml_configs_isSet = false;
    m_gke_yaml_configs_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::fromJsonObject(QJsonObject json) {

    m_gke_yaml_configs_isValid = ::OpenAPI::fromJsonValue(m_gke_yaml_configs, json[QString("gkeYamlConfigs")]);
    m_gke_yaml_configs_isSet = !json[QString("gkeYamlConfigs")].isNull() && m_gke_yaml_configs_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::asJsonObject() const {
    QJsonObject obj;
    if (m_gke_yaml_configs.size() > 0) {
        obj.insert(QString("gkeYamlConfigs"), ::OpenAPI::toJsonValue(m_gke_yaml_configs));
    }
    return obj;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::getGkeYamlConfigs() const {
    return m_gke_yaml_configs;
}
void OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::setGkeYamlConfigs(const QList<QString> &gke_yaml_configs) {
    m_gke_yaml_configs = gke_yaml_configs;
    m_gke_yaml_configs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::is_gke_yaml_configs_Set() const{
    return m_gke_yaml_configs_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::is_gke_yaml_configs_Valid() const{
    return m_gke_yaml_configs_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gke_yaml_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelCallToActionDeployGke::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
