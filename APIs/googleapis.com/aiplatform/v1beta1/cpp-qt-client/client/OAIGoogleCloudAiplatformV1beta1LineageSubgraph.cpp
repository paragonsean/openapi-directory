/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1LineageSubgraph.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1LineageSubgraph::OAIGoogleCloudAiplatformV1beta1LineageSubgraph(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1LineageSubgraph::OAIGoogleCloudAiplatformV1beta1LineageSubgraph() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1LineageSubgraph::~OAIGoogleCloudAiplatformV1beta1LineageSubgraph() {}

void OAIGoogleCloudAiplatformV1beta1LineageSubgraph::initializeModel() {

    m_artifacts_isSet = false;
    m_artifacts_isValid = false;

    m_events_isSet = false;
    m_events_isValid = false;

    m_executions_isSet = false;
    m_executions_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1LineageSubgraph::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1LineageSubgraph::fromJsonObject(QJsonObject json) {

    m_artifacts_isValid = ::OpenAPI::fromJsonValue(m_artifacts, json[QString("artifacts")]);
    m_artifacts_isSet = !json[QString("artifacts")].isNull() && m_artifacts_isValid;

    m_events_isValid = ::OpenAPI::fromJsonValue(m_events, json[QString("events")]);
    m_events_isSet = !json[QString("events")].isNull() && m_events_isValid;

    m_executions_isValid = ::OpenAPI::fromJsonValue(m_executions, json[QString("executions")]);
    m_executions_isSet = !json[QString("executions")].isNull() && m_executions_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1LineageSubgraph::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1LineageSubgraph::asJsonObject() const {
    QJsonObject obj;
    if (m_artifacts.size() > 0) {
        obj.insert(QString("artifacts"), ::OpenAPI::toJsonValue(m_artifacts));
    }
    if (m_events.size() > 0) {
        obj.insert(QString("events"), ::OpenAPI::toJsonValue(m_events));
    }
    if (m_executions.size() > 0) {
        obj.insert(QString("executions"), ::OpenAPI::toJsonValue(m_executions));
    }
    return obj;
}

QList<OAIGoogleCloudAiplatformV1beta1Artifact> OAIGoogleCloudAiplatformV1beta1LineageSubgraph::getArtifacts() const {
    return m_artifacts;
}
void OAIGoogleCloudAiplatformV1beta1LineageSubgraph::setArtifacts(const QList<OAIGoogleCloudAiplatformV1beta1Artifact> &artifacts) {
    m_artifacts = artifacts;
    m_artifacts_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1LineageSubgraph::is_artifacts_Set() const{
    return m_artifacts_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1LineageSubgraph::is_artifacts_Valid() const{
    return m_artifacts_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1Event> OAIGoogleCloudAiplatformV1beta1LineageSubgraph::getEvents() const {
    return m_events;
}
void OAIGoogleCloudAiplatformV1beta1LineageSubgraph::setEvents(const QList<OAIGoogleCloudAiplatformV1beta1Event> &events) {
    m_events = events;
    m_events_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1LineageSubgraph::is_events_Set() const{
    return m_events_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1LineageSubgraph::is_events_Valid() const{
    return m_events_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1Execution> OAIGoogleCloudAiplatformV1beta1LineageSubgraph::getExecutions() const {
    return m_executions;
}
void OAIGoogleCloudAiplatformV1beta1LineageSubgraph::setExecutions(const QList<OAIGoogleCloudAiplatformV1beta1Execution> &executions) {
    m_executions = executions;
    m_executions_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1LineageSubgraph::is_executions_Set() const{
    return m_executions_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1LineageSubgraph::is_executions_Valid() const{
    return m_executions_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1LineageSubgraph::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_artifacts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_events.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_executions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1LineageSubgraph::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
