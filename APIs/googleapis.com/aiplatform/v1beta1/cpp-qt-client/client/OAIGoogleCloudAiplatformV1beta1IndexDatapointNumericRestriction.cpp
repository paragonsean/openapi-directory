/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::~OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction() {}

void OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::initializeModel() {

    m_r_namespace_isSet = false;
    m_r_namespace_isValid = false;

    m_op_isSet = false;
    m_op_isValid = false;

    m_value_double_isSet = false;
    m_value_double_isValid = false;

    m_value_float_isSet = false;
    m_value_float_isValid = false;

    m_value_int_isSet = false;
    m_value_int_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::fromJsonObject(QJsonObject json) {

    m_r_namespace_isValid = ::OpenAPI::fromJsonValue(m_r_namespace, json[QString("namespace")]);
    m_r_namespace_isSet = !json[QString("namespace")].isNull() && m_r_namespace_isValid;

    m_op_isValid = ::OpenAPI::fromJsonValue(m_op, json[QString("op")]);
    m_op_isSet = !json[QString("op")].isNull() && m_op_isValid;

    m_value_double_isValid = ::OpenAPI::fromJsonValue(m_value_double, json[QString("valueDouble")]);
    m_value_double_isSet = !json[QString("valueDouble")].isNull() && m_value_double_isValid;

    m_value_float_isValid = ::OpenAPI::fromJsonValue(m_value_float, json[QString("valueFloat")]);
    m_value_float_isSet = !json[QString("valueFloat")].isNull() && m_value_float_isValid;

    m_value_int_isValid = ::OpenAPI::fromJsonValue(m_value_int, json[QString("valueInt")]);
    m_value_int_isSet = !json[QString("valueInt")].isNull() && m_value_int_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::asJsonObject() const {
    QJsonObject obj;
    if (m_r_namespace_isSet) {
        obj.insert(QString("namespace"), ::OpenAPI::toJsonValue(m_r_namespace));
    }
    if (m_op_isSet) {
        obj.insert(QString("op"), ::OpenAPI::toJsonValue(m_op));
    }
    if (m_value_double_isSet) {
        obj.insert(QString("valueDouble"), ::OpenAPI::toJsonValue(m_value_double));
    }
    if (m_value_float_isSet) {
        obj.insert(QString("valueFloat"), ::OpenAPI::toJsonValue(m_value_float));
    }
    if (m_value_int_isSet) {
        obj.insert(QString("valueInt"), ::OpenAPI::toJsonValue(m_value_int));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::getRNamespace() const {
    return m_r_namespace;
}
void OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::setRNamespace(const QString &r_namespace) {
    m_r_namespace = r_namespace;
    m_r_namespace_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_r_namespace_Set() const{
    return m_r_namespace_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_r_namespace_Valid() const{
    return m_r_namespace_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::getOp() const {
    return m_op;
}
void OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::setOp(const QString &op) {
    m_op = op;
    m_op_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_op_Set() const{
    return m_op_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_op_Valid() const{
    return m_op_isValid;
}

double OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::getValueDouble() const {
    return m_value_double;
}
void OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::setValueDouble(const double &value_double) {
    m_value_double = value_double;
    m_value_double_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_value_double_Set() const{
    return m_value_double_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_value_double_Valid() const{
    return m_value_double_isValid;
}

float OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::getValueFloat() const {
    return m_value_float;
}
void OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::setValueFloat(const float &value_float) {
    m_value_float = value_float;
    m_value_float_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_value_float_Set() const{
    return m_value_float_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_value_float_Valid() const{
    return m_value_float_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::getValueInt() const {
    return m_value_int;
}
void OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::setValueInt(const QString &value_int) {
    m_value_int = value_int;
    m_value_int_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_value_int_Set() const{
    return m_value_int_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::is_value_int_Valid() const{
    return m_value_int_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_namespace_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_op_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_double_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_float_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_int_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
