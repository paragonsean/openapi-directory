/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::~OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse() {}

void OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::initializeModel() {

    m_time_series_data_isSet = false;
    m_time_series_data_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::fromJsonObject(QJsonObject json) {

    m_time_series_data_isValid = ::OpenAPI::fromJsonValue(m_time_series_data, json[QString("timeSeriesData")]);
    m_time_series_data_isSet = !json[QString("timeSeriesData")].isNull() && m_time_series_data_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_time_series_data.size() > 0) {
        obj.insert(QString("timeSeriesData"), ::OpenAPI::toJsonValue(m_time_series_data));
    }
    return obj;
}

QList<OAIGoogleCloudAiplatformV1beta1TimeSeriesData> OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::getTimeSeriesData() const {
    return m_time_series_data;
}
void OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::setTimeSeriesData(const QList<OAIGoogleCloudAiplatformV1beta1TimeSeriesData> &time_series_data) {
    m_time_series_data = time_series_data;
    m_time_series_data_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::is_time_series_data_Set() const{
    return m_time_series_data_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::is_time_series_data_Valid() const{
    return m_time_series_data_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_time_series_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
