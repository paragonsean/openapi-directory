/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1TimestampSplit.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1TimestampSplit::OAIGoogleCloudAiplatformV1beta1TimestampSplit(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1TimestampSplit::OAIGoogleCloudAiplatformV1beta1TimestampSplit() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1TimestampSplit::~OAIGoogleCloudAiplatformV1beta1TimestampSplit() {}

void OAIGoogleCloudAiplatformV1beta1TimestampSplit::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_test_fraction_isSet = false;
    m_test_fraction_isValid = false;

    m_training_fraction_isSet = false;
    m_training_fraction_isValid = false;

    m_validation_fraction_isSet = false;
    m_validation_fraction_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1TimestampSplit::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1TimestampSplit::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_test_fraction_isValid = ::OpenAPI::fromJsonValue(m_test_fraction, json[QString("testFraction")]);
    m_test_fraction_isSet = !json[QString("testFraction")].isNull() && m_test_fraction_isValid;

    m_training_fraction_isValid = ::OpenAPI::fromJsonValue(m_training_fraction, json[QString("trainingFraction")]);
    m_training_fraction_isSet = !json[QString("trainingFraction")].isNull() && m_training_fraction_isValid;

    m_validation_fraction_isValid = ::OpenAPI::fromJsonValue(m_validation_fraction, json[QString("validationFraction")]);
    m_validation_fraction_isSet = !json[QString("validationFraction")].isNull() && m_validation_fraction_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1TimestampSplit::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1TimestampSplit::asJsonObject() const {
    QJsonObject obj;
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_test_fraction_isSet) {
        obj.insert(QString("testFraction"), ::OpenAPI::toJsonValue(m_test_fraction));
    }
    if (m_training_fraction_isSet) {
        obj.insert(QString("trainingFraction"), ::OpenAPI::toJsonValue(m_training_fraction));
    }
    if (m_validation_fraction_isSet) {
        obj.insert(QString("validationFraction"), ::OpenAPI::toJsonValue(m_validation_fraction));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1TimestampSplit::getKey() const {
    return m_key;
}
void OAIGoogleCloudAiplatformV1beta1TimestampSplit::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::is_key_Set() const{
    return m_key_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::is_key_Valid() const{
    return m_key_isValid;
}

double OAIGoogleCloudAiplatformV1beta1TimestampSplit::getTestFraction() const {
    return m_test_fraction;
}
void OAIGoogleCloudAiplatformV1beta1TimestampSplit::setTestFraction(const double &test_fraction) {
    m_test_fraction = test_fraction;
    m_test_fraction_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::is_test_fraction_Set() const{
    return m_test_fraction_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::is_test_fraction_Valid() const{
    return m_test_fraction_isValid;
}

double OAIGoogleCloudAiplatformV1beta1TimestampSplit::getTrainingFraction() const {
    return m_training_fraction;
}
void OAIGoogleCloudAiplatformV1beta1TimestampSplit::setTrainingFraction(const double &training_fraction) {
    m_training_fraction = training_fraction;
    m_training_fraction_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::is_training_fraction_Set() const{
    return m_training_fraction_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::is_training_fraction_Valid() const{
    return m_training_fraction_isValid;
}

double OAIGoogleCloudAiplatformV1beta1TimestampSplit::getValidationFraction() const {
    return m_validation_fraction;
}
void OAIGoogleCloudAiplatformV1beta1TimestampSplit::setValidationFraction(const double &validation_fraction) {
    m_validation_fraction = validation_fraction;
    m_validation_fraction_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::is_validation_fraction_Set() const{
    return m_validation_fraction_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::is_validation_fraction_Valid() const{
    return m_validation_fraction_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_fraction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_fraction_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_fraction_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1TimestampSplit::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
