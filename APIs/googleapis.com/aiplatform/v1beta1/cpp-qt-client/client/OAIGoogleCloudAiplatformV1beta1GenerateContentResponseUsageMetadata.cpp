/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::~OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata() {}

void OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::initializeModel() {

    m_candidates_token_count_isSet = false;
    m_candidates_token_count_isValid = false;

    m_prompt_token_count_isSet = false;
    m_prompt_token_count_isValid = false;

    m_total_token_count_isSet = false;
    m_total_token_count_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::fromJsonObject(QJsonObject json) {

    m_candidates_token_count_isValid = ::OpenAPI::fromJsonValue(m_candidates_token_count, json[QString("candidatesTokenCount")]);
    m_candidates_token_count_isSet = !json[QString("candidatesTokenCount")].isNull() && m_candidates_token_count_isValid;

    m_prompt_token_count_isValid = ::OpenAPI::fromJsonValue(m_prompt_token_count, json[QString("promptTokenCount")]);
    m_prompt_token_count_isSet = !json[QString("promptTokenCount")].isNull() && m_prompt_token_count_isValid;

    m_total_token_count_isValid = ::OpenAPI::fromJsonValue(m_total_token_count, json[QString("totalTokenCount")]);
    m_total_token_count_isSet = !json[QString("totalTokenCount")].isNull() && m_total_token_count_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_candidates_token_count_isSet) {
        obj.insert(QString("candidatesTokenCount"), ::OpenAPI::toJsonValue(m_candidates_token_count));
    }
    if (m_prompt_token_count_isSet) {
        obj.insert(QString("promptTokenCount"), ::OpenAPI::toJsonValue(m_prompt_token_count));
    }
    if (m_total_token_count_isSet) {
        obj.insert(QString("totalTokenCount"), ::OpenAPI::toJsonValue(m_total_token_count));
    }
    return obj;
}

qint32 OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::getCandidatesTokenCount() const {
    return m_candidates_token_count;
}
void OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::setCandidatesTokenCount(const qint32 &candidates_token_count) {
    m_candidates_token_count = candidates_token_count;
    m_candidates_token_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::is_candidates_token_count_Set() const{
    return m_candidates_token_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::is_candidates_token_count_Valid() const{
    return m_candidates_token_count_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::getPromptTokenCount() const {
    return m_prompt_token_count;
}
void OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::setPromptTokenCount(const qint32 &prompt_token_count) {
    m_prompt_token_count = prompt_token_count;
    m_prompt_token_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::is_prompt_token_count_Set() const{
    return m_prompt_token_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::is_prompt_token_count_Valid() const{
    return m_prompt_token_count_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::getTotalTokenCount() const {
    return m_total_token_count;
}
void OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::setTotalTokenCount(const qint32 &total_token_count) {
    m_total_token_count = total_token_count;
    m_total_token_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::is_total_token_count_Set() const{
    return m_total_token_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::is_total_token_count_Valid() const{
    return m_total_token_count_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_candidates_token_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prompt_token_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_token_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1GenerateContentResponseUsageMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
