/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1Trial.h
 *
 * A message representing a Trial. A Trial contains a unique set of Parameters that has been or will be evaluated, along with the objective metrics got by running the Trial.
 */

#ifndef OAIGoogleCloudAiplatformV1beta1Trial_H
#define OAIGoogleCloudAiplatformV1beta1Trial_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1beta1Measurement.h"
#include "OAIGoogleCloudAiplatformV1beta1TrialParameter.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1beta1Measurement;
class OAIGoogleCloudAiplatformV1beta1TrialParameter;

class OAIGoogleCloudAiplatformV1beta1Trial : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1Trial();
    OAIGoogleCloudAiplatformV1beta1Trial(QString json);
    ~OAIGoogleCloudAiplatformV1beta1Trial() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getCustomJob() const;
    void setCustomJob(const QString &custom_job);
    bool is_custom_job_Set() const;
    bool is_custom_job_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    OAIGoogleCloudAiplatformV1beta1Measurement getFinalMeasurement() const;
    void setFinalMeasurement(const OAIGoogleCloudAiplatformV1beta1Measurement &final_measurement);
    bool is_final_measurement_Set() const;
    bool is_final_measurement_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInfeasibleReason() const;
    void setInfeasibleReason(const QString &infeasible_reason);
    bool is_infeasible_reason_Set() const;
    bool is_infeasible_reason_Valid() const;

    QList<OAIGoogleCloudAiplatformV1beta1Measurement> getMeasurements() const;
    void setMeasurements(const QList<OAIGoogleCloudAiplatformV1beta1Measurement> &measurements);
    bool is_measurements_Set() const;
    bool is_measurements_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIGoogleCloudAiplatformV1beta1TrialParameter> getParameters() const;
    void setParameters(const QList<OAIGoogleCloudAiplatformV1beta1TrialParameter> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QMap<QString, QString> getWebAccessUris() const;
    void setWebAccessUris(const QMap<QString, QString> &web_access_uris);
    bool is_web_access_uris_Set() const;
    bool is_web_access_uris_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_custom_job;
    bool m_custom_job_isSet;
    bool m_custom_job_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    OAIGoogleCloudAiplatformV1beta1Measurement m_final_measurement;
    bool m_final_measurement_isSet;
    bool m_final_measurement_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_infeasible_reason;
    bool m_infeasible_reason_isSet;
    bool m_infeasible_reason_isValid;

    QList<OAIGoogleCloudAiplatformV1beta1Measurement> m_measurements;
    bool m_measurements_isSet;
    bool m_measurements_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIGoogleCloudAiplatformV1beta1TrialParameter> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QMap<QString, QString> m_web_access_uris;
    bool m_web_access_uris_isSet;
    bool m_web_access_uris_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1Trial)

#endif // OAIGoogleCloudAiplatformV1beta1Trial_H
