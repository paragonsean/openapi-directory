/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1Probe.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1Probe::OAIGoogleCloudAiplatformV1beta1Probe(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1Probe::OAIGoogleCloudAiplatformV1beta1Probe() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1Probe::~OAIGoogleCloudAiplatformV1beta1Probe() {}

void OAIGoogleCloudAiplatformV1beta1Probe::initializeModel() {

    m_exec_isSet = false;
    m_exec_isValid = false;

    m_period_seconds_isSet = false;
    m_period_seconds_isValid = false;

    m_timeout_seconds_isSet = false;
    m_timeout_seconds_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1Probe::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1Probe::fromJsonObject(QJsonObject json) {

    m_exec_isValid = ::OpenAPI::fromJsonValue(m_exec, json[QString("exec")]);
    m_exec_isSet = !json[QString("exec")].isNull() && m_exec_isValid;

    m_period_seconds_isValid = ::OpenAPI::fromJsonValue(m_period_seconds, json[QString("periodSeconds")]);
    m_period_seconds_isSet = !json[QString("periodSeconds")].isNull() && m_period_seconds_isValid;

    m_timeout_seconds_isValid = ::OpenAPI::fromJsonValue(m_timeout_seconds, json[QString("timeoutSeconds")]);
    m_timeout_seconds_isSet = !json[QString("timeoutSeconds")].isNull() && m_timeout_seconds_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1Probe::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1Probe::asJsonObject() const {
    QJsonObject obj;
    if (m_exec.isSet()) {
        obj.insert(QString("exec"), ::OpenAPI::toJsonValue(m_exec));
    }
    if (m_period_seconds_isSet) {
        obj.insert(QString("periodSeconds"), ::OpenAPI::toJsonValue(m_period_seconds));
    }
    if (m_timeout_seconds_isSet) {
        obj.insert(QString("timeoutSeconds"), ::OpenAPI::toJsonValue(m_timeout_seconds));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1ProbeExecAction OAIGoogleCloudAiplatformV1beta1Probe::getExec() const {
    return m_exec;
}
void OAIGoogleCloudAiplatformV1beta1Probe::setExec(const OAIGoogleCloudAiplatformV1beta1ProbeExecAction &exec) {
    m_exec = exec;
    m_exec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Probe::is_exec_Set() const{
    return m_exec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Probe::is_exec_Valid() const{
    return m_exec_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1Probe::getPeriodSeconds() const {
    return m_period_seconds;
}
void OAIGoogleCloudAiplatformV1beta1Probe::setPeriodSeconds(const qint32 &period_seconds) {
    m_period_seconds = period_seconds;
    m_period_seconds_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Probe::is_period_seconds_Set() const{
    return m_period_seconds_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Probe::is_period_seconds_Valid() const{
    return m_period_seconds_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1Probe::getTimeoutSeconds() const {
    return m_timeout_seconds;
}
void OAIGoogleCloudAiplatformV1beta1Probe::setTimeoutSeconds(const qint32 &timeout_seconds) {
    m_timeout_seconds = timeout_seconds;
    m_timeout_seconds_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Probe::is_timeout_seconds_Set() const{
    return m_timeout_seconds_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Probe::is_timeout_seconds_Valid() const{
    return m_timeout_seconds_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1Probe::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timeout_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1Probe::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
