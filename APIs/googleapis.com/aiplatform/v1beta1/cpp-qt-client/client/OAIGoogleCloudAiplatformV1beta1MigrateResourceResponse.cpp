/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::~OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse() {}

void OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::initializeModel() {

    m_dataset_isSet = false;
    m_dataset_isValid = false;

    m_migratable_resource_isSet = false;
    m_migratable_resource_isValid = false;

    m_model_isSet = false;
    m_model_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::fromJsonObject(QJsonObject json) {

    m_dataset_isValid = ::OpenAPI::fromJsonValue(m_dataset, json[QString("dataset")]);
    m_dataset_isSet = !json[QString("dataset")].isNull() && m_dataset_isValid;

    m_migratable_resource_isValid = ::OpenAPI::fromJsonValue(m_migratable_resource, json[QString("migratableResource")]);
    m_migratable_resource_isSet = !json[QString("migratableResource")].isNull() && m_migratable_resource_isValid;

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_dataset_isSet) {
        obj.insert(QString("dataset"), ::OpenAPI::toJsonValue(m_dataset));
    }
    if (m_migratable_resource.isSet()) {
        obj.insert(QString("migratableResource"), ::OpenAPI::toJsonValue(m_migratable_resource));
    }
    if (m_model_isSet) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::getDataset() const {
    return m_dataset;
}
void OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::setDataset(const QString &dataset) {
    m_dataset = dataset;
    m_dataset_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::is_dataset_Set() const{
    return m_dataset_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::is_dataset_Valid() const{
    return m_dataset_isValid;
}

OAIGoogleCloudAiplatformV1beta1MigratableResource OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::getMigratableResource() const {
    return m_migratable_resource;
}
void OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::setMigratableResource(const OAIGoogleCloudAiplatformV1beta1MigratableResource &migratable_resource) {
    m_migratable_resource = migratable_resource;
    m_migratable_resource_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::is_migratable_resource_Set() const{
    return m_migratable_resource_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::is_migratable_resource_Valid() const{
    return m_migratable_resource_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::getModel() const {
    return m_model;
}
void OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::is_model_Set() const{
    return m_model_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::is_model_Valid() const{
    return m_model_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dataset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_migratable_resource.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
