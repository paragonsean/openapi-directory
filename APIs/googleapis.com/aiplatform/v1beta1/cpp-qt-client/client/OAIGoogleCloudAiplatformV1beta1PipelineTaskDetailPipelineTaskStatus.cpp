/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::~OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus() {}

void OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIGoogleRpcStatus OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::getError() const {
    return m_error;
}
void OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::setError(const OAIGoogleRpcStatus &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::is_error_Set() const{
    return m_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::is_error_Valid() const{
    return m_error_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::getState() const {
    return m_state;
}
void OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
