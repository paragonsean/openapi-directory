/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1GroundingAttribution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1GroundingAttribution::OAIGoogleCloudAiplatformV1beta1GroundingAttribution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1GroundingAttribution::OAIGoogleCloudAiplatformV1beta1GroundingAttribution() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1GroundingAttribution::~OAIGoogleCloudAiplatformV1beta1GroundingAttribution() {}

void OAIGoogleCloudAiplatformV1beta1GroundingAttribution::initializeModel() {

    m_confidence_score_isSet = false;
    m_confidence_score_isValid = false;

    m_segment_isSet = false;
    m_segment_isValid = false;

    m_web_isSet = false;
    m_web_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1GroundingAttribution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1GroundingAttribution::fromJsonObject(QJsonObject json) {

    m_confidence_score_isValid = ::OpenAPI::fromJsonValue(m_confidence_score, json[QString("confidenceScore")]);
    m_confidence_score_isSet = !json[QString("confidenceScore")].isNull() && m_confidence_score_isValid;

    m_segment_isValid = ::OpenAPI::fromJsonValue(m_segment, json[QString("segment")]);
    m_segment_isSet = !json[QString("segment")].isNull() && m_segment_isValid;

    m_web_isValid = ::OpenAPI::fromJsonValue(m_web, json[QString("web")]);
    m_web_isSet = !json[QString("web")].isNull() && m_web_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1GroundingAttribution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1GroundingAttribution::asJsonObject() const {
    QJsonObject obj;
    if (m_confidence_score_isSet) {
        obj.insert(QString("confidenceScore"), ::OpenAPI::toJsonValue(m_confidence_score));
    }
    if (m_segment.isSet()) {
        obj.insert(QString("segment"), ::OpenAPI::toJsonValue(m_segment));
    }
    if (m_web.isSet()) {
        obj.insert(QString("web"), ::OpenAPI::toJsonValue(m_web));
    }
    return obj;
}

float OAIGoogleCloudAiplatformV1beta1GroundingAttribution::getConfidenceScore() const {
    return m_confidence_score;
}
void OAIGoogleCloudAiplatformV1beta1GroundingAttribution::setConfidenceScore(const float &confidence_score) {
    m_confidence_score = confidence_score;
    m_confidence_score_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingAttribution::is_confidence_score_Set() const{
    return m_confidence_score_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingAttribution::is_confidence_score_Valid() const{
    return m_confidence_score_isValid;
}

OAIGoogleCloudAiplatformV1beta1Segment OAIGoogleCloudAiplatformV1beta1GroundingAttribution::getSegment() const {
    return m_segment;
}
void OAIGoogleCloudAiplatformV1beta1GroundingAttribution::setSegment(const OAIGoogleCloudAiplatformV1beta1Segment &segment) {
    m_segment = segment;
    m_segment_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingAttribution::is_segment_Set() const{
    return m_segment_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingAttribution::is_segment_Valid() const{
    return m_segment_isValid;
}

OAIGoogleCloudAiplatformV1beta1GroundingAttributionWeb OAIGoogleCloudAiplatformV1beta1GroundingAttribution::getWeb() const {
    return m_web;
}
void OAIGoogleCloudAiplatformV1beta1GroundingAttribution::setWeb(const OAIGoogleCloudAiplatformV1beta1GroundingAttributionWeb &web) {
    m_web = web;
    m_web_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingAttribution::is_web_Set() const{
    return m_web_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingAttribution::is_web_Valid() const{
    return m_web_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingAttribution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidence_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_web.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingAttribution::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
