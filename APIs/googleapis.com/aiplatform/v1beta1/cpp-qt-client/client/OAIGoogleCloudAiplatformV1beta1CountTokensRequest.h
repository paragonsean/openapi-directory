/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1CountTokensRequest.h
 *
 * Request message for PredictionService.CountTokens.
 */

#ifndef OAIGoogleCloudAiplatformV1beta1CountTokensRequest_H
#define OAIGoogleCloudAiplatformV1beta1CountTokensRequest_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1beta1Content.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1beta1Content;

class OAIGoogleCloudAiplatformV1beta1CountTokensRequest : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1CountTokensRequest();
    OAIGoogleCloudAiplatformV1beta1CountTokensRequest(QString json);
    ~OAIGoogleCloudAiplatformV1beta1CountTokensRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleCloudAiplatformV1beta1Content> getContents() const;
    void setContents(const QList<OAIGoogleCloudAiplatformV1beta1Content> &contents);
    bool is_contents_Set() const;
    bool is_contents_Valid() const;

    QList<QJsonValue> getInstances() const;
    void setInstances(const QList<QJsonValue> &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleCloudAiplatformV1beta1Content> m_contents;
    bool m_contents_isSet;
    bool m_contents_isValid;

    QList<QJsonValue> m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1CountTokensRequest)

#endif // OAIGoogleCloudAiplatformV1beta1CountTokensRequest_H
