/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::~OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel() {}

void OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::initializeModel() {

    m_artifact_uri_isSet = false;
    m_artifact_uri_isValid = false;

    m_container_spec_isSet = false;
    m_container_spec_isValid = false;

    m_predict_schemata_isSet = false;
    m_predict_schemata_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::fromJsonObject(QJsonObject json) {

    m_artifact_uri_isValid = ::OpenAPI::fromJsonValue(m_artifact_uri, json[QString("artifactUri")]);
    m_artifact_uri_isSet = !json[QString("artifactUri")].isNull() && m_artifact_uri_isValid;

    m_container_spec_isValid = ::OpenAPI::fromJsonValue(m_container_spec, json[QString("containerSpec")]);
    m_container_spec_isSet = !json[QString("containerSpec")].isNull() && m_container_spec_isValid;

    m_predict_schemata_isValid = ::OpenAPI::fromJsonValue(m_predict_schemata, json[QString("predictSchemata")]);
    m_predict_schemata_isSet = !json[QString("predictSchemata")].isNull() && m_predict_schemata_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::asJsonObject() const {
    QJsonObject obj;
    if (m_artifact_uri_isSet) {
        obj.insert(QString("artifactUri"), ::OpenAPI::toJsonValue(m_artifact_uri));
    }
    if (m_container_spec.isSet()) {
        obj.insert(QString("containerSpec"), ::OpenAPI::toJsonValue(m_container_spec));
    }
    if (m_predict_schemata.isSet()) {
        obj.insert(QString("predictSchemata"), ::OpenAPI::toJsonValue(m_predict_schemata));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::getArtifactUri() const {
    return m_artifact_uri;
}
void OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::setArtifactUri(const QString &artifact_uri) {
    m_artifact_uri = artifact_uri;
    m_artifact_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::is_artifact_uri_Set() const{
    return m_artifact_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::is_artifact_uri_Valid() const{
    return m_artifact_uri_isValid;
}

OAIGoogleCloudAiplatformV1beta1ModelContainerSpec OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::getContainerSpec() const {
    return m_container_spec;
}
void OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::setContainerSpec(const OAIGoogleCloudAiplatformV1beta1ModelContainerSpec &container_spec) {
    m_container_spec = container_spec;
    m_container_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::is_container_spec_Set() const{
    return m_container_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::is_container_spec_Valid() const{
    return m_container_spec_isValid;
}

OAIGoogleCloudAiplatformV1beta1PredictSchemata OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::getPredictSchemata() const {
    return m_predict_schemata;
}
void OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::setPredictSchemata(const OAIGoogleCloudAiplatformV1beta1PredictSchemata &predict_schemata) {
    m_predict_schemata = predict_schemata;
    m_predict_schemata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::is_predict_schemata_Set() const{
    return m_predict_schemata_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::is_predict_schemata_Valid() const{
    return m_predict_schemata_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_artifact_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_predict_schemata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1UnmanagedContainerModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
