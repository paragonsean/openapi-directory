/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1PublisherModelParent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1PublisherModelParent::OAIGoogleCloudAiplatformV1beta1PublisherModelParent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1PublisherModelParent::OAIGoogleCloudAiplatformV1beta1PublisherModelParent() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1PublisherModelParent::~OAIGoogleCloudAiplatformV1beta1PublisherModelParent() {}

void OAIGoogleCloudAiplatformV1beta1PublisherModelParent::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_reference_isSet = false;
    m_reference_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1PublisherModelParent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1PublisherModelParent::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_reference_isValid = ::OpenAPI::fromJsonValue(m_reference, json[QString("reference")]);
    m_reference_isSet = !json[QString("reference")].isNull() && m_reference_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PublisherModelParent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1PublisherModelParent::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_reference.isSet()) {
        obj.insert(QString("reference"), ::OpenAPI::toJsonValue(m_reference));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1PublisherModelParent::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1beta1PublisherModelParent::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelParent::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelParent::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudAiplatformV1beta1PublisherModelResourceReference OAIGoogleCloudAiplatformV1beta1PublisherModelParent::getReference() const {
    return m_reference;
}
void OAIGoogleCloudAiplatformV1beta1PublisherModelParent::setReference(const OAIGoogleCloudAiplatformV1beta1PublisherModelResourceReference &reference) {
    m_reference = reference;
    m_reference_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelParent::is_reference_Set() const{
    return m_reference_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelParent::is_reference_Valid() const{
    return m_reference_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelParent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1PublisherModelParent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
