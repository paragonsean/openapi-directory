/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::~OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore() {}

void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::initializeModel() {

    m_bigtable_isSet = false;
    m_bigtable_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_dedicated_serving_endpoint_isSet = false;
    m_dedicated_serving_endpoint_isValid = false;

    m_embedding_management_isSet = false;
    m_embedding_management_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_optimized_isSet = false;
    m_optimized_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::fromJsonObject(QJsonObject json) {

    m_bigtable_isValid = ::OpenAPI::fromJsonValue(m_bigtable, json[QString("bigtable")]);
    m_bigtable_isSet = !json[QString("bigtable")].isNull() && m_bigtable_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_dedicated_serving_endpoint_isValid = ::OpenAPI::fromJsonValue(m_dedicated_serving_endpoint, json[QString("dedicatedServingEndpoint")]);
    m_dedicated_serving_endpoint_isSet = !json[QString("dedicatedServingEndpoint")].isNull() && m_dedicated_serving_endpoint_isValid;

    m_embedding_management_isValid = ::OpenAPI::fromJsonValue(m_embedding_management, json[QString("embeddingManagement")]);
    m_embedding_management_isSet = !json[QString("embeddingManagement")].isNull() && m_embedding_management_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_optimized_isValid = ::OpenAPI::fromJsonValue(m_optimized, json[QString("optimized")]);
    m_optimized_isSet = !json[QString("optimized")].isNull() && m_optimized_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::asJsonObject() const {
    QJsonObject obj;
    if (m_bigtable.isSet()) {
        obj.insert(QString("bigtable"), ::OpenAPI::toJsonValue(m_bigtable));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_dedicated_serving_endpoint.isSet()) {
        obj.insert(QString("dedicatedServingEndpoint"), ::OpenAPI::toJsonValue(m_dedicated_serving_endpoint));
    }
    if (m_embedding_management.isSet()) {
        obj.insert(QString("embeddingManagement"), ::OpenAPI::toJsonValue(m_embedding_management));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_optimized_isSet) {
        obj.insert(QString("optimized"), ::OpenAPI::toJsonValue(m_optimized));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtable OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getBigtable() const {
    return m_bigtable;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setBigtable(const OAIGoogleCloudAiplatformV1beta1FeatureOnlineStoreBigtable &bigtable) {
    m_bigtable = bigtable;
    m_bigtable_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_bigtable_Set() const{
    return m_bigtable_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_bigtable_Valid() const{
    return m_bigtable_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpoint OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getDedicatedServingEndpoint() const {
    return m_dedicated_serving_endpoint;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setDedicatedServingEndpoint(const OAIGoogleCloudAiplatformV1beta1FeatureOnlineStoreDedicatedServingEndpoint &dedicated_serving_endpoint) {
    m_dedicated_serving_endpoint = dedicated_serving_endpoint;
    m_dedicated_serving_endpoint_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_dedicated_serving_endpoint_Set() const{
    return m_dedicated_serving_endpoint_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_dedicated_serving_endpoint_Valid() const{
    return m_dedicated_serving_endpoint_isValid;
}

OAIGoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagement OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getEmbeddingManagement() const {
    return m_embedding_management;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setEmbeddingManagement(const OAIGoogleCloudAiplatformV1beta1FeatureOnlineStoreEmbeddingManagement &embedding_management) {
    m_embedding_management = embedding_management;
    m_embedding_management_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_embedding_management_Set() const{
    return m_embedding_management_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_embedding_management_Valid() const{
    return m_embedding_management_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_etag_Valid() const{
    return m_etag_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_name_Valid() const{
    return m_name_isValid;
}

OAIObject OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getOptimized() const {
    return m_optimized;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setOptimized(const OAIObject &optimized) {
    m_optimized = optimized;
    m_optimized_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_optimized_Set() const{
    return m_optimized_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_optimized_Valid() const{
    return m_optimized_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getState() const {
    return m_state;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bigtable.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dedicated_serving_endpoint.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_embedding_management.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_optimized_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureOnlineStore::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
