/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1DataLabelingJob.h
 *
 * DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:
 */

#ifndef OAIGoogleCloudAiplatformV1beta1DataLabelingJob_H
#define OAIGoogleCloudAiplatformV1beta1DataLabelingJob_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig.h"
#include "OAIGoogleCloudAiplatformV1beta1EncryptionSpec.h"
#include "OAIGoogleRpcStatus.h"
#include "OAIGoogleTypeMoney.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig;
class OAIGoogleTypeMoney;
class OAIGoogleCloudAiplatformV1beta1EncryptionSpec;
class OAIGoogleRpcStatus;

class OAIGoogleCloudAiplatformV1beta1DataLabelingJob : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1DataLabelingJob();
    OAIGoogleCloudAiplatformV1beta1DataLabelingJob(QString json);
    ~OAIGoogleCloudAiplatformV1beta1DataLabelingJob() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig getActiveLearningConfig() const;
    void setActiveLearningConfig(const OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig &active_learning_config);
    bool is_active_learning_config_Set() const;
    bool is_active_learning_config_Valid() const;

    QMap<QString, QString> getAnnotationLabels() const;
    void setAnnotationLabels(const QMap<QString, QString> &annotation_labels);
    bool is_annotation_labels_Set() const;
    bool is_annotation_labels_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAIGoogleTypeMoney getCurrentSpend() const;
    void setCurrentSpend(const OAIGoogleTypeMoney &current_spend);
    bool is_current_spend_Set() const;
    bool is_current_spend_Valid() const;

    QList<QString> getDatasets() const;
    void setDatasets(const QList<QString> &datasets);
    bool is_datasets_Set() const;
    bool is_datasets_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    OAIGoogleCloudAiplatformV1beta1EncryptionSpec getEncryptionSpec() const;
    void setEncryptionSpec(const OAIGoogleCloudAiplatformV1beta1EncryptionSpec &encryption_spec);
    bool is_encryption_spec_Set() const;
    bool is_encryption_spec_Valid() const;

    OAIGoogleRpcStatus getError() const;
    void setError(const OAIGoogleRpcStatus &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QJsonValue getInputs() const;
    void setInputs(const QJsonValue &inputs);
    bool is_inputs_Set() const;
    bool is_inputs_Valid() const;

    QString getInputsSchemaUri() const;
    void setInputsSchemaUri(const QString &inputs_schema_uri);
    bool is_inputs_schema_uri_Set() const;
    bool is_inputs_schema_uri_Valid() const;

    QString getInstructionUri() const;
    void setInstructionUri(const QString &instruction_uri);
    bool is_instruction_uri_Set() const;
    bool is_instruction_uri_Valid() const;

    qint32 getLabelerCount() const;
    void setLabelerCount(const qint32 &labeler_count);
    bool is_labeler_count_Set() const;
    bool is_labeler_count_Valid() const;

    qint32 getLabelingProgress() const;
    void setLabelingProgress(const qint32 &labeling_progress);
    bool is_labeling_progress_Set() const;
    bool is_labeling_progress_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getSpecialistPools() const;
    void setSpecialistPools(const QList<QString> &specialist_pools);
    bool is_specialist_pools_Set() const;
    bool is_specialist_pools_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig m_active_learning_config;
    bool m_active_learning_config_isSet;
    bool m_active_learning_config_isValid;

    QMap<QString, QString> m_annotation_labels;
    bool m_annotation_labels_isSet;
    bool m_annotation_labels_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAIGoogleTypeMoney m_current_spend;
    bool m_current_spend_isSet;
    bool m_current_spend_isValid;

    QList<QString> m_datasets;
    bool m_datasets_isSet;
    bool m_datasets_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    OAIGoogleCloudAiplatformV1beta1EncryptionSpec m_encryption_spec;
    bool m_encryption_spec_isSet;
    bool m_encryption_spec_isValid;

    OAIGoogleRpcStatus m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QJsonValue m_inputs;
    bool m_inputs_isSet;
    bool m_inputs_isValid;

    QString m_inputs_schema_uri;
    bool m_inputs_schema_uri_isSet;
    bool m_inputs_schema_uri_isValid;

    QString m_instruction_uri;
    bool m_instruction_uri_isSet;
    bool m_instruction_uri_isValid;

    qint32 m_labeler_count;
    bool m_labeler_count_isSet;
    bool m_labeler_count_isValid;

    qint32 m_labeling_progress;
    bool m_labeling_progress_isSet;
    bool m_labeling_progress_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_specialist_pools;
    bool m_specialist_pools_isSet;
    bool m_specialist_pools_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1DataLabelingJob)

#endif // OAIGoogleCloudAiplatformV1beta1DataLabelingJob_H
