/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::~OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource() {}

void OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::initializeModel() {

    m_genie_source_isSet = false;
    m_genie_source_isValid = false;

    m_model_garden_source_isSet = false;
    m_model_garden_source_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::fromJsonObject(QJsonObject json) {

    m_genie_source_isValid = ::OpenAPI::fromJsonValue(m_genie_source, json[QString("genieSource")]);
    m_genie_source_isSet = !json[QString("genieSource")].isNull() && m_genie_source_isValid;

    m_model_garden_source_isValid = ::OpenAPI::fromJsonValue(m_model_garden_source, json[QString("modelGardenSource")]);
    m_model_garden_source_isSet = !json[QString("modelGardenSource")].isNull() && m_model_garden_source_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::asJsonObject() const {
    QJsonObject obj;
    if (m_genie_source.isSet()) {
        obj.insert(QString("genieSource"), ::OpenAPI::toJsonValue(m_genie_source));
    }
    if (m_model_garden_source.isSet()) {
        obj.insert(QString("modelGardenSource"), ::OpenAPI::toJsonValue(m_model_garden_source));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1GenieSource OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::getGenieSource() const {
    return m_genie_source;
}
void OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::setGenieSource(const OAIGoogleCloudAiplatformV1beta1GenieSource &genie_source) {
    m_genie_source = genie_source;
    m_genie_source_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::is_genie_source_Set() const{
    return m_genie_source_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::is_genie_source_Valid() const{
    return m_genie_source_isValid;
}

OAIGoogleCloudAiplatformV1beta1ModelGardenSource OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::getModelGardenSource() const {
    return m_model_garden_source;
}
void OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::setModelGardenSource(const OAIGoogleCloudAiplatformV1beta1ModelGardenSource &model_garden_source) {
    m_model_garden_source = model_garden_source;
    m_model_garden_source_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::is_model_garden_source_Set() const{
    return m_model_garden_source_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::is_model_garden_source_Valid() const{
    return m_model_garden_source_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_genie_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_garden_source.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1ModelBaseModelSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
