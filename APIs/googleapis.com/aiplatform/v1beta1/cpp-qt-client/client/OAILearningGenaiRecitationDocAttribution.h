/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILearningGenaiRecitationDocAttribution.h
 *
 * The proto defines the attribution information for a document using whatever fields are most applicable for that document&#39;s datasource. For example, a Wikipedia article&#39;s attribution is in the form of its article title, a website is in the form of a URL, and a Github repo is in the form of a repo name. Next id: 30
 */

#ifndef OAILearningGenaiRecitationDocAttribution_H
#define OAILearningGenaiRecitationDocAttribution_H

#include <QJsonObject>

#include "OAIGoogleTypeDate.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleTypeDate;

class OAILearningGenaiRecitationDocAttribution : public OAIObject {
public:
    OAILearningGenaiRecitationDocAttribution();
    OAILearningGenaiRecitationDocAttribution(QString json);
    ~OAILearningGenaiRecitationDocAttribution() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAmarnaId() const;
    void setAmarnaId(const QString &amarna_id);
    bool is_amarna_id_Set() const;
    bool is_amarna_id_Valid() const;

    QString getArxivId() const;
    void setArxivId(const QString &arxiv_id);
    bool is_arxiv_id_Set() const;
    bool is_arxiv_id_Valid() const;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getBibkey() const;
    void setBibkey(const QString &bibkey);
    bool is_bibkey_Set() const;
    bool is_bibkey_Valid() const;

    QString getBiorxivId() const;
    void setBiorxivId(const QString &biorxiv_id);
    bool is_biorxiv_id_Set() const;
    bool is_biorxiv_id_Valid() const;

    QString getBookTitle() const;
    void setBookTitle(const QString &book_title);
    bool is_book_title_Set() const;
    bool is_book_title_Valid() const;

    QString getBookVolumeId() const;
    void setBookVolumeId(const QString &book_volume_id);
    bool is_book_volume_id_Set() const;
    bool is_book_volume_id_Valid() const;

    QString getConversationId() const;
    void setConversationId(const QString &conversation_id);
    bool is_conversation_id_Set() const;
    bool is_conversation_id_Valid() const;

    QString getDataset() const;
    void setDataset(const QString &dataset);
    bool is_dataset_Set() const;
    bool is_dataset_Valid() const;

    QString getFilepath() const;
    void setFilepath(const QString &filepath);
    bool is_filepath_Set() const;
    bool is_filepath_Valid() const;

    QString getGeminiId() const;
    void setGeminiId(const QString &gemini_id);
    bool is_gemini_id_Set() const;
    bool is_gemini_id_Valid() const;

    QString getGnewsArticleTitle() const;
    void setGnewsArticleTitle(const QString &gnews_article_title);
    bool is_gnews_article_title_Set() const;
    bool is_gnews_article_title_Valid() const;

    QString getGoodallExampleId() const;
    void setGoodallExampleId(const QString &goodall_example_id);
    bool is_goodall_example_id_Set() const;
    bool is_goodall_example_id_Valid() const;

    bool isIsOptOut() const;
    void setIsOptOut(const bool &is_opt_out);
    bool is_is_opt_out_Set() const;
    bool is_is_opt_out_Valid() const;

    bool isIsPrompt() const;
    void setIsPrompt(const bool &is_prompt);
    bool is_is_prompt_Set() const;
    bool is_is_prompt_Valid() const;

    QString getLamdaExampleId() const;
    void setLamdaExampleId(const QString &lamda_example_id);
    bool is_lamda_example_id_Set() const;
    bool is_lamda_example_id_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getMeenaConversationId() const;
    void setMeenaConversationId(const QString &meena_conversation_id);
    bool is_meena_conversation_id_Set() const;
    bool is_meena_conversation_id_Valid() const;

    QString getNaturalLanguageCode() const;
    void setNaturalLanguageCode(const QString &natural_language_code);
    bool is_natural_language_code_Set() const;
    bool is_natural_language_code_Valid() const;

    bool isNoAttribution() const;
    void setNoAttribution(const bool &no_attribution);
    bool is_no_attribution_Set() const;
    bool is_no_attribution_Valid() const;

    QString getPodcastUtteranceId() const;
    void setPodcastUtteranceId(const QString &podcast_utterance_id);
    bool is_podcast_utterance_id_Set() const;
    bool is_podcast_utterance_id_Valid() const;

    OAIGoogleTypeDate getPublicationDate() const;
    void setPublicationDate(const OAIGoogleTypeDate &publication_date);
    bool is_publication_date_Set() const;
    bool is_publication_date_Valid() const;

    double getQualityScoreExperimentOnly() const;
    void setQualityScoreExperimentOnly(const double &quality_score_experiment_only);
    bool is_quality_score_experiment_only_Set() const;
    bool is_quality_score_experiment_only_Valid() const;

    QString getRepo() const;
    void setRepo(const QString &repo);
    bool is_repo_Set() const;
    bool is_repo_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getVolumeId() const;
    void setVolumeId(const QString &volume_id);
    bool is_volume_id_Set() const;
    bool is_volume_id_Valid() const;

    QString getWikipediaArticleTitle() const;
    void setWikipediaArticleTitle(const QString &wikipedia_article_title);
    bool is_wikipedia_article_title_Set() const;
    bool is_wikipedia_article_title_Valid() const;

    QString getYoutubeVideoId() const;
    void setYoutubeVideoId(const QString &youtube_video_id);
    bool is_youtube_video_id_Set() const;
    bool is_youtube_video_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_amarna_id;
    bool m_amarna_id_isSet;
    bool m_amarna_id_isValid;

    QString m_arxiv_id;
    bool m_arxiv_id_isSet;
    bool m_arxiv_id_isValid;

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_bibkey;
    bool m_bibkey_isSet;
    bool m_bibkey_isValid;

    QString m_biorxiv_id;
    bool m_biorxiv_id_isSet;
    bool m_biorxiv_id_isValid;

    QString m_book_title;
    bool m_book_title_isSet;
    bool m_book_title_isValid;

    QString m_book_volume_id;
    bool m_book_volume_id_isSet;
    bool m_book_volume_id_isValid;

    QString m_conversation_id;
    bool m_conversation_id_isSet;
    bool m_conversation_id_isValid;

    QString m_dataset;
    bool m_dataset_isSet;
    bool m_dataset_isValid;

    QString m_filepath;
    bool m_filepath_isSet;
    bool m_filepath_isValid;

    QString m_gemini_id;
    bool m_gemini_id_isSet;
    bool m_gemini_id_isValid;

    QString m_gnews_article_title;
    bool m_gnews_article_title_isSet;
    bool m_gnews_article_title_isValid;

    QString m_goodall_example_id;
    bool m_goodall_example_id_isSet;
    bool m_goodall_example_id_isValid;

    bool m_is_opt_out;
    bool m_is_opt_out_isSet;
    bool m_is_opt_out_isValid;

    bool m_is_prompt;
    bool m_is_prompt_isSet;
    bool m_is_prompt_isValid;

    QString m_lamda_example_id;
    bool m_lamda_example_id_isSet;
    bool m_lamda_example_id_isValid;

    QString m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString m_meena_conversation_id;
    bool m_meena_conversation_id_isSet;
    bool m_meena_conversation_id_isValid;

    QString m_natural_language_code;
    bool m_natural_language_code_isSet;
    bool m_natural_language_code_isValid;

    bool m_no_attribution;
    bool m_no_attribution_isSet;
    bool m_no_attribution_isValid;

    QString m_podcast_utterance_id;
    bool m_podcast_utterance_id_isSet;
    bool m_podcast_utterance_id_isValid;

    OAIGoogleTypeDate m_publication_date;
    bool m_publication_date_isSet;
    bool m_publication_date_isValid;

    double m_quality_score_experiment_only;
    bool m_quality_score_experiment_only_isSet;
    bool m_quality_score_experiment_only_isValid;

    QString m_repo;
    bool m_repo_isSet;
    bool m_repo_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_volume_id;
    bool m_volume_id_isSet;
    bool m_volume_id_isValid;

    QString m_wikipedia_article_title;
    bool m_wikipedia_article_title_isSet;
    bool m_wikipedia_article_title_isValid;

    QString m_youtube_video_id;
    bool m_youtube_video_id_isSet;
    bool m_youtube_video_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILearningGenaiRecitationDocAttribution)

#endif // OAILearningGenaiRecitationDocAttribution_H
