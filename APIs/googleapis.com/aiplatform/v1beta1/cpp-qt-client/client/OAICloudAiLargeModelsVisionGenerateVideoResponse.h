/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudAiLargeModelsVisionGenerateVideoResponse.h
 *
 * Generate video response.
 */

#ifndef OAICloudAiLargeModelsVisionGenerateVideoResponse_H
#define OAICloudAiLargeModelsVisionGenerateVideoResponse_H

#include <QJsonObject>

#include "OAICloudAiLargeModelsVisionFilteredText.h"
#include "OAICloudAiLargeModelsVisionMedia.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICloudAiLargeModelsVisionMedia;
class OAICloudAiLargeModelsVisionFilteredText;

class OAICloudAiLargeModelsVisionGenerateVideoResponse : public OAIObject {
public:
    OAICloudAiLargeModelsVisionGenerateVideoResponse();
    OAICloudAiLargeModelsVisionGenerateVideoResponse(QString json);
    ~OAICloudAiLargeModelsVisionGenerateVideoResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICloudAiLargeModelsVisionMedia> getGeneratedSamples() const;
    void setGeneratedSamples(const QList<OAICloudAiLargeModelsVisionMedia> &generated_samples);
    bool is_generated_samples_Set() const;
    bool is_generated_samples_Valid() const;

    qint32 getRaiMediaFilteredCount() const;
    void setRaiMediaFilteredCount(const qint32 &rai_media_filtered_count);
    bool is_rai_media_filtered_count_Set() const;
    bool is_rai_media_filtered_count_Valid() const;

    QList<QString> getRaiMediaFilteredReasons() const;
    void setRaiMediaFilteredReasons(const QList<QString> &rai_media_filtered_reasons);
    bool is_rai_media_filtered_reasons_Set() const;
    bool is_rai_media_filtered_reasons_Valid() const;

    OAICloudAiLargeModelsVisionFilteredText getRaiTextFilteredReason() const;
    void setRaiTextFilteredReason(const OAICloudAiLargeModelsVisionFilteredText &rai_text_filtered_reason);
    bool is_rai_text_filtered_reason_Set() const;
    bool is_rai_text_filtered_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICloudAiLargeModelsVisionMedia> m_generated_samples;
    bool m_generated_samples_isSet;
    bool m_generated_samples_isValid;

    qint32 m_rai_media_filtered_count;
    bool m_rai_media_filtered_count_isSet;
    bool m_rai_media_filtered_count_isValid;

    QList<QString> m_rai_media_filtered_reasons;
    bool m_rai_media_filtered_reasons_isSet;
    bool m_rai_media_filtered_reasons_isValid;

    OAICloudAiLargeModelsVisionFilteredText m_rai_text_filtered_reason;
    bool m_rai_text_filtered_reason_isSet;
    bool m_rai_text_filtered_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudAiLargeModelsVisionGenerateVideoResponse)

#endif // OAICloudAiLargeModelsVisionGenerateVideoResponse_H
