/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::~OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob() {}

void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::initializeModel() {

    m_analysis_instance_schema_uri_isSet = false;
    m_analysis_instance_schema_uri_isValid = false;

    m_bigquery_tables_isSet = false;
    m_bigquery_tables_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_enable_monitoring_pipeline_logs_isSet = false;
    m_enable_monitoring_pipeline_logs_isValid = false;

    m_encryption_spec_isSet = false;
    m_encryption_spec_isValid = false;

    m_endpoint_isSet = false;
    m_endpoint_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_latest_monitoring_pipeline_metadata_isSet = false;
    m_latest_monitoring_pipeline_metadata_isValid = false;

    m_log_ttl_isSet = false;
    m_log_ttl_isValid = false;

    m_logging_sampling_strategy_isSet = false;
    m_logging_sampling_strategy_isValid = false;

    m_model_deployment_monitoring_objective_configs_isSet = false;
    m_model_deployment_monitoring_objective_configs_isValid = false;

    m_model_deployment_monitoring_schedule_config_isSet = false;
    m_model_deployment_monitoring_schedule_config_isValid = false;

    m_model_monitoring_alert_config_isSet = false;
    m_model_monitoring_alert_config_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_next_schedule_time_isSet = false;
    m_next_schedule_time_isValid = false;

    m_predict_instance_schema_uri_isSet = false;
    m_predict_instance_schema_uri_isValid = false;

    m_sample_predict_instance_isSet = false;
    m_sample_predict_instance_isValid = false;

    m_schedule_state_isSet = false;
    m_schedule_state_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_stats_anomalies_base_directory_isSet = false;
    m_stats_anomalies_base_directory_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::fromJsonObject(QJsonObject json) {

    m_analysis_instance_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_analysis_instance_schema_uri, json[QString("analysisInstanceSchemaUri")]);
    m_analysis_instance_schema_uri_isSet = !json[QString("analysisInstanceSchemaUri")].isNull() && m_analysis_instance_schema_uri_isValid;

    m_bigquery_tables_isValid = ::OpenAPI::fromJsonValue(m_bigquery_tables, json[QString("bigqueryTables")]);
    m_bigquery_tables_isSet = !json[QString("bigqueryTables")].isNull() && m_bigquery_tables_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_enable_monitoring_pipeline_logs_isValid = ::OpenAPI::fromJsonValue(m_enable_monitoring_pipeline_logs, json[QString("enableMonitoringPipelineLogs")]);
    m_enable_monitoring_pipeline_logs_isSet = !json[QString("enableMonitoringPipelineLogs")].isNull() && m_enable_monitoring_pipeline_logs_isValid;

    m_encryption_spec_isValid = ::OpenAPI::fromJsonValue(m_encryption_spec, json[QString("encryptionSpec")]);
    m_encryption_spec_isSet = !json[QString("encryptionSpec")].isNull() && m_encryption_spec_isValid;

    m_endpoint_isValid = ::OpenAPI::fromJsonValue(m_endpoint, json[QString("endpoint")]);
    m_endpoint_isSet = !json[QString("endpoint")].isNull() && m_endpoint_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_latest_monitoring_pipeline_metadata_isValid = ::OpenAPI::fromJsonValue(m_latest_monitoring_pipeline_metadata, json[QString("latestMonitoringPipelineMetadata")]);
    m_latest_monitoring_pipeline_metadata_isSet = !json[QString("latestMonitoringPipelineMetadata")].isNull() && m_latest_monitoring_pipeline_metadata_isValid;

    m_log_ttl_isValid = ::OpenAPI::fromJsonValue(m_log_ttl, json[QString("logTtl")]);
    m_log_ttl_isSet = !json[QString("logTtl")].isNull() && m_log_ttl_isValid;

    m_logging_sampling_strategy_isValid = ::OpenAPI::fromJsonValue(m_logging_sampling_strategy, json[QString("loggingSamplingStrategy")]);
    m_logging_sampling_strategy_isSet = !json[QString("loggingSamplingStrategy")].isNull() && m_logging_sampling_strategy_isValid;

    m_model_deployment_monitoring_objective_configs_isValid = ::OpenAPI::fromJsonValue(m_model_deployment_monitoring_objective_configs, json[QString("modelDeploymentMonitoringObjectiveConfigs")]);
    m_model_deployment_monitoring_objective_configs_isSet = !json[QString("modelDeploymentMonitoringObjectiveConfigs")].isNull() && m_model_deployment_monitoring_objective_configs_isValid;

    m_model_deployment_monitoring_schedule_config_isValid = ::OpenAPI::fromJsonValue(m_model_deployment_monitoring_schedule_config, json[QString("modelDeploymentMonitoringScheduleConfig")]);
    m_model_deployment_monitoring_schedule_config_isSet = !json[QString("modelDeploymentMonitoringScheduleConfig")].isNull() && m_model_deployment_monitoring_schedule_config_isValid;

    m_model_monitoring_alert_config_isValid = ::OpenAPI::fromJsonValue(m_model_monitoring_alert_config, json[QString("modelMonitoringAlertConfig")]);
    m_model_monitoring_alert_config_isSet = !json[QString("modelMonitoringAlertConfig")].isNull() && m_model_monitoring_alert_config_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_next_schedule_time_isValid = ::OpenAPI::fromJsonValue(m_next_schedule_time, json[QString("nextScheduleTime")]);
    m_next_schedule_time_isSet = !json[QString("nextScheduleTime")].isNull() && m_next_schedule_time_isValid;

    m_predict_instance_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_predict_instance_schema_uri, json[QString("predictInstanceSchemaUri")]);
    m_predict_instance_schema_uri_isSet = !json[QString("predictInstanceSchemaUri")].isNull() && m_predict_instance_schema_uri_isValid;

    m_sample_predict_instance_isValid = ::OpenAPI::fromJsonValue(m_sample_predict_instance, json[QString("samplePredictInstance")]);
    m_sample_predict_instance_isSet = !json[QString("samplePredictInstance")].isNull() && m_sample_predict_instance_isValid;

    m_schedule_state_isValid = ::OpenAPI::fromJsonValue(m_schedule_state, json[QString("scheduleState")]);
    m_schedule_state_isSet = !json[QString("scheduleState")].isNull() && m_schedule_state_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_stats_anomalies_base_directory_isValid = ::OpenAPI::fromJsonValue(m_stats_anomalies_base_directory, json[QString("statsAnomaliesBaseDirectory")]);
    m_stats_anomalies_base_directory_isSet = !json[QString("statsAnomaliesBaseDirectory")].isNull() && m_stats_anomalies_base_directory_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::asJsonObject() const {
    QJsonObject obj;
    if (m_analysis_instance_schema_uri_isSet) {
        obj.insert(QString("analysisInstanceSchemaUri"), ::OpenAPI::toJsonValue(m_analysis_instance_schema_uri));
    }
    if (m_bigquery_tables.size() > 0) {
        obj.insert(QString("bigqueryTables"), ::OpenAPI::toJsonValue(m_bigquery_tables));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_enable_monitoring_pipeline_logs_isSet) {
        obj.insert(QString("enableMonitoringPipelineLogs"), ::OpenAPI::toJsonValue(m_enable_monitoring_pipeline_logs));
    }
    if (m_encryption_spec.isSet()) {
        obj.insert(QString("encryptionSpec"), ::OpenAPI::toJsonValue(m_encryption_spec));
    }
    if (m_endpoint_isSet) {
        obj.insert(QString("endpoint"), ::OpenAPI::toJsonValue(m_endpoint));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_latest_monitoring_pipeline_metadata.isSet()) {
        obj.insert(QString("latestMonitoringPipelineMetadata"), ::OpenAPI::toJsonValue(m_latest_monitoring_pipeline_metadata));
    }
    if (m_log_ttl_isSet) {
        obj.insert(QString("logTtl"), ::OpenAPI::toJsonValue(m_log_ttl));
    }
    if (m_logging_sampling_strategy.isSet()) {
        obj.insert(QString("loggingSamplingStrategy"), ::OpenAPI::toJsonValue(m_logging_sampling_strategy));
    }
    if (m_model_deployment_monitoring_objective_configs.size() > 0) {
        obj.insert(QString("modelDeploymentMonitoringObjectiveConfigs"), ::OpenAPI::toJsonValue(m_model_deployment_monitoring_objective_configs));
    }
    if (m_model_deployment_monitoring_schedule_config.isSet()) {
        obj.insert(QString("modelDeploymentMonitoringScheduleConfig"), ::OpenAPI::toJsonValue(m_model_deployment_monitoring_schedule_config));
    }
    if (m_model_monitoring_alert_config.isSet()) {
        obj.insert(QString("modelMonitoringAlertConfig"), ::OpenAPI::toJsonValue(m_model_monitoring_alert_config));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_next_schedule_time_isSet) {
        obj.insert(QString("nextScheduleTime"), ::OpenAPI::toJsonValue(m_next_schedule_time));
    }
    if (m_predict_instance_schema_uri_isSet) {
        obj.insert(QString("predictInstanceSchemaUri"), ::OpenAPI::toJsonValue(m_predict_instance_schema_uri));
    }
    if (m_sample_predict_instance_isSet) {
        obj.insert(QString("samplePredictInstance"), ::OpenAPI::toJsonValue(m_sample_predict_instance));
    }
    if (m_schedule_state_isSet) {
        obj.insert(QString("scheduleState"), ::OpenAPI::toJsonValue(m_schedule_state));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_stats_anomalies_base_directory.isSet()) {
        obj.insert(QString("statsAnomaliesBaseDirectory"), ::OpenAPI::toJsonValue(m_stats_anomalies_base_directory));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getAnalysisInstanceSchemaUri() const {
    return m_analysis_instance_schema_uri;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setAnalysisInstanceSchemaUri(const QString &analysis_instance_schema_uri) {
    m_analysis_instance_schema_uri = analysis_instance_schema_uri;
    m_analysis_instance_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_analysis_instance_schema_uri_Set() const{
    return m_analysis_instance_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_analysis_instance_schema_uri_Valid() const{
    return m_analysis_instance_schema_uri_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable> OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getBigqueryTables() const {
    return m_bigquery_tables;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setBigqueryTables(const QList<OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable> &bigquery_tables) {
    m_bigquery_tables = bigquery_tables;
    m_bigquery_tables_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_bigquery_tables_Set() const{
    return m_bigquery_tables_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_bigquery_tables_Valid() const{
    return m_bigquery_tables_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::isEnableMonitoringPipelineLogs() const {
    return m_enable_monitoring_pipeline_logs;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setEnableMonitoringPipelineLogs(const bool &enable_monitoring_pipeline_logs) {
    m_enable_monitoring_pipeline_logs = enable_monitoring_pipeline_logs;
    m_enable_monitoring_pipeline_logs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_enable_monitoring_pipeline_logs_Set() const{
    return m_enable_monitoring_pipeline_logs_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_enable_monitoring_pipeline_logs_Valid() const{
    return m_enable_monitoring_pipeline_logs_isValid;
}

OAIGoogleCloudAiplatformV1beta1EncryptionSpec OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getEncryptionSpec() const {
    return m_encryption_spec;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setEncryptionSpec(const OAIGoogleCloudAiplatformV1beta1EncryptionSpec &encryption_spec) {
    m_encryption_spec = encryption_spec;
    m_encryption_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_encryption_spec_Set() const{
    return m_encryption_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_encryption_spec_Valid() const{
    return m_encryption_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getEndpoint() const {
    return m_endpoint;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setEndpoint(const QString &endpoint) {
    m_endpoint = endpoint;
    m_endpoint_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_endpoint_Set() const{
    return m_endpoint_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_endpoint_Valid() const{
    return m_endpoint_isValid;
}

OAIGoogleRpcStatus OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getError() const {
    return m_error;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setError(const OAIGoogleRpcStatus &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_error_Set() const{
    return m_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_error_Valid() const{
    return m_error_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_labels_Valid() const{
    return m_labels_isValid;
}

OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getLatestMonitoringPipelineMetadata() const {
    return m_latest_monitoring_pipeline_metadata;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setLatestMonitoringPipelineMetadata(const OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata &latest_monitoring_pipeline_metadata) {
    m_latest_monitoring_pipeline_metadata = latest_monitoring_pipeline_metadata;
    m_latest_monitoring_pipeline_metadata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_latest_monitoring_pipeline_metadata_Set() const{
    return m_latest_monitoring_pipeline_metadata_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_latest_monitoring_pipeline_metadata_Valid() const{
    return m_latest_monitoring_pipeline_metadata_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getLogTtl() const {
    return m_log_ttl;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setLogTtl(const QString &log_ttl) {
    m_log_ttl = log_ttl;
    m_log_ttl_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_log_ttl_Set() const{
    return m_log_ttl_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_log_ttl_Valid() const{
    return m_log_ttl_isValid;
}

OAIGoogleCloudAiplatformV1beta1SamplingStrategy OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getLoggingSamplingStrategy() const {
    return m_logging_sampling_strategy;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setLoggingSamplingStrategy(const OAIGoogleCloudAiplatformV1beta1SamplingStrategy &logging_sampling_strategy) {
    m_logging_sampling_strategy = logging_sampling_strategy;
    m_logging_sampling_strategy_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_logging_sampling_strategy_Set() const{
    return m_logging_sampling_strategy_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_logging_sampling_strategy_Valid() const{
    return m_logging_sampling_strategy_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig> OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getModelDeploymentMonitoringObjectiveConfigs() const {
    return m_model_deployment_monitoring_objective_configs;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setModelDeploymentMonitoringObjectiveConfigs(const QList<OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig> &model_deployment_monitoring_objective_configs) {
    m_model_deployment_monitoring_objective_configs = model_deployment_monitoring_objective_configs;
    m_model_deployment_monitoring_objective_configs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_model_deployment_monitoring_objective_configs_Set() const{
    return m_model_deployment_monitoring_objective_configs_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_model_deployment_monitoring_objective_configs_Valid() const{
    return m_model_deployment_monitoring_objective_configs_isValid;
}

OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getModelDeploymentMonitoringScheduleConfig() const {
    return m_model_deployment_monitoring_schedule_config;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setModelDeploymentMonitoringScheduleConfig(const OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig &model_deployment_monitoring_schedule_config) {
    m_model_deployment_monitoring_schedule_config = model_deployment_monitoring_schedule_config;
    m_model_deployment_monitoring_schedule_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_model_deployment_monitoring_schedule_config_Set() const{
    return m_model_deployment_monitoring_schedule_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_model_deployment_monitoring_schedule_config_Valid() const{
    return m_model_deployment_monitoring_schedule_config_isValid;
}

OAIGoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getModelMonitoringAlertConfig() const {
    return m_model_monitoring_alert_config;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setModelMonitoringAlertConfig(const OAIGoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig &model_monitoring_alert_config) {
    m_model_monitoring_alert_config = model_monitoring_alert_config;
    m_model_monitoring_alert_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_model_monitoring_alert_config_Set() const{
    return m_model_monitoring_alert_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_model_monitoring_alert_config_Valid() const{
    return m_model_monitoring_alert_config_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getNextScheduleTime() const {
    return m_next_schedule_time;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setNextScheduleTime(const QString &next_schedule_time) {
    m_next_schedule_time = next_schedule_time;
    m_next_schedule_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_next_schedule_time_Set() const{
    return m_next_schedule_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_next_schedule_time_Valid() const{
    return m_next_schedule_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getPredictInstanceSchemaUri() const {
    return m_predict_instance_schema_uri;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setPredictInstanceSchemaUri(const QString &predict_instance_schema_uri) {
    m_predict_instance_schema_uri = predict_instance_schema_uri;
    m_predict_instance_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_predict_instance_schema_uri_Set() const{
    return m_predict_instance_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_predict_instance_schema_uri_Valid() const{
    return m_predict_instance_schema_uri_isValid;
}

QJsonValue OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getSamplePredictInstance() const {
    return m_sample_predict_instance;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setSamplePredictInstance(const QJsonValue &sample_predict_instance) {
    m_sample_predict_instance = sample_predict_instance;
    m_sample_predict_instance_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_sample_predict_instance_Set() const{
    return m_sample_predict_instance_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_sample_predict_instance_Valid() const{
    return m_sample_predict_instance_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getScheduleState() const {
    return m_schedule_state;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setScheduleState(const QString &schedule_state) {
    m_schedule_state = schedule_state;
    m_schedule_state_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_schedule_state_Set() const{
    return m_schedule_state_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_schedule_state_Valid() const{
    return m_schedule_state_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getState() const {
    return m_state;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_state_Valid() const{
    return m_state_isValid;
}

OAIGoogleCloudAiplatformV1beta1GcsDestination OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getStatsAnomaliesBaseDirectory() const {
    return m_stats_anomalies_base_directory;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setStatsAnomaliesBaseDirectory(const OAIGoogleCloudAiplatformV1beta1GcsDestination &stats_anomalies_base_directory) {
    m_stats_anomalies_base_directory = stats_anomalies_base_directory;
    m_stats_anomalies_base_directory_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_stats_anomalies_base_directory_Set() const{
    return m_stats_anomalies_base_directory_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_stats_anomalies_base_directory_Valid() const{
    return m_stats_anomalies_base_directory_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_analysis_instance_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigquery_tables.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_monitoring_pipeline_logs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_monitoring_pipeline_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_ttl_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_logging_sampling_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_deployment_monitoring_objective_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_deployment_monitoring_schedule_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_monitoring_alert_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_schedule_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predict_instance_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sample_predict_instance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stats_anomalies_base_directory.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
