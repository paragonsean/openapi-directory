/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILearningGenaiRootRoutingDecisionMetadataScoreBased.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILearningGenaiRootRoutingDecisionMetadataScoreBased::OAILearningGenaiRootRoutingDecisionMetadataScoreBased(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILearningGenaiRootRoutingDecisionMetadataScoreBased::OAILearningGenaiRootRoutingDecisionMetadataScoreBased() {
    this->initializeModel();
}

OAILearningGenaiRootRoutingDecisionMetadataScoreBased::~OAILearningGenaiRootRoutingDecisionMetadataScoreBased() {}

void OAILearningGenaiRootRoutingDecisionMetadataScoreBased::initializeModel() {

    m_matched_rule_isSet = false;
    m_matched_rule_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;

    m_used_default_fallback_isSet = false;
    m_used_default_fallback_isValid = false;
}

void OAILearningGenaiRootRoutingDecisionMetadataScoreBased::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILearningGenaiRootRoutingDecisionMetadataScoreBased::fromJsonObject(QJsonObject json) {

    m_matched_rule_isValid = ::OpenAPI::fromJsonValue(m_matched_rule, json[QString("matchedRule")]);
    m_matched_rule_isSet = !json[QString("matchedRule")].isNull() && m_matched_rule_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;

    m_used_default_fallback_isValid = ::OpenAPI::fromJsonValue(m_used_default_fallback, json[QString("usedDefaultFallback")]);
    m_used_default_fallback_isSet = !json[QString("usedDefaultFallback")].isNull() && m_used_default_fallback_isValid;
}

QString OAILearningGenaiRootRoutingDecisionMetadataScoreBased::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILearningGenaiRootRoutingDecisionMetadataScoreBased::asJsonObject() const {
    QJsonObject obj;
    if (m_matched_rule.isSet()) {
        obj.insert(QString("matchedRule"), ::OpenAPI::toJsonValue(m_matched_rule));
    }
    if (m_score.isSet()) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    if (m_used_default_fallback_isSet) {
        obj.insert(QString("usedDefaultFallback"), ::OpenAPI::toJsonValue(m_used_default_fallback));
    }
    return obj;
}

OAILearningGenaiRootScoreBasedRoutingConfigRule OAILearningGenaiRootRoutingDecisionMetadataScoreBased::getMatchedRule() const {
    return m_matched_rule;
}
void OAILearningGenaiRootRoutingDecisionMetadataScoreBased::setMatchedRule(const OAILearningGenaiRootScoreBasedRoutingConfigRule &matched_rule) {
    m_matched_rule = matched_rule;
    m_matched_rule_isSet = true;
}

bool OAILearningGenaiRootRoutingDecisionMetadataScoreBased::is_matched_rule_Set() const{
    return m_matched_rule_isSet;
}

bool OAILearningGenaiRootRoutingDecisionMetadataScoreBased::is_matched_rule_Valid() const{
    return m_matched_rule_isValid;
}

OAILearningGenaiRootScore OAILearningGenaiRootRoutingDecisionMetadataScoreBased::getScore() const {
    return m_score;
}
void OAILearningGenaiRootRoutingDecisionMetadataScoreBased::setScore(const OAILearningGenaiRootScore &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAILearningGenaiRootRoutingDecisionMetadataScoreBased::is_score_Set() const{
    return m_score_isSet;
}

bool OAILearningGenaiRootRoutingDecisionMetadataScoreBased::is_score_Valid() const{
    return m_score_isValid;
}

bool OAILearningGenaiRootRoutingDecisionMetadataScoreBased::isUsedDefaultFallback() const {
    return m_used_default_fallback;
}
void OAILearningGenaiRootRoutingDecisionMetadataScoreBased::setUsedDefaultFallback(const bool &used_default_fallback) {
    m_used_default_fallback = used_default_fallback;
    m_used_default_fallback_isSet = true;
}

bool OAILearningGenaiRootRoutingDecisionMetadataScoreBased::is_used_default_fallback_Set() const{
    return m_used_default_fallback_isSet;
}

bool OAILearningGenaiRootRoutingDecisionMetadataScoreBased::is_used_default_fallback_Valid() const{
    return m_used_default_fallback_isValid;
}

bool OAILearningGenaiRootRoutingDecisionMetadataScoreBased::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_matched_rule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_score.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_used_default_fallback_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILearningGenaiRootRoutingDecisionMetadataScoreBased::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
