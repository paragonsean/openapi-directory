/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::~OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult() {}

void OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::initializeModel() {

    m_classes_isSet = false;
    m_classes_isValid = false;

    m_scores_isSet = false;
    m_scores_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::fromJsonObject(QJsonObject json) {

    m_classes_isValid = ::OpenAPI::fromJsonValue(m_classes, json[QString("classes")]);
    m_classes_isSet = !json[QString("classes")].isNull() && m_classes_isValid;

    m_scores_isValid = ::OpenAPI::fromJsonValue(m_scores, json[QString("scores")]);
    m_scores_isSet = !json[QString("scores")].isNull() && m_scores_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_classes.size() > 0) {
        obj.insert(QString("classes"), ::OpenAPI::toJsonValue(m_classes));
    }
    if (m_scores.size() > 0) {
        obj.insert(QString("scores"), ::OpenAPI::toJsonValue(m_scores));
    }
    return obj;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::getClasses() const {
    return m_classes;
}
void OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::setClasses(const QList<QString> &classes) {
    m_classes = classes;
    m_classes_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::is_classes_Set() const{
    return m_classes_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::is_classes_Valid() const{
    return m_classes_isValid;
}

QList<float> OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::getScores() const {
    return m_scores;
}
void OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::setScores(const QList<float> &scores) {
    m_scores = scores;
    m_scores_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::is_scores_Set() const{
    return m_scores_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::is_scores_Valid() const{
    return m_scores_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_classes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_scores.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictPredictionTabularClassificationPredictionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
