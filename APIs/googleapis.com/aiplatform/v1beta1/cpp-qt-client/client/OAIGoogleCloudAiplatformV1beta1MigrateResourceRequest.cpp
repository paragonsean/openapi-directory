/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::~OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest() {}

void OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::initializeModel() {

    m_migrate_automl_dataset_config_isSet = false;
    m_migrate_automl_dataset_config_isValid = false;

    m_migrate_automl_model_config_isSet = false;
    m_migrate_automl_model_config_isValid = false;

    m_migrate_data_labeling_dataset_config_isSet = false;
    m_migrate_data_labeling_dataset_config_isValid = false;

    m_migrate_ml_engine_model_version_config_isSet = false;
    m_migrate_ml_engine_model_version_config_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::fromJsonObject(QJsonObject json) {

    m_migrate_automl_dataset_config_isValid = ::OpenAPI::fromJsonValue(m_migrate_automl_dataset_config, json[QString("migrateAutomlDatasetConfig")]);
    m_migrate_automl_dataset_config_isSet = !json[QString("migrateAutomlDatasetConfig")].isNull() && m_migrate_automl_dataset_config_isValid;

    m_migrate_automl_model_config_isValid = ::OpenAPI::fromJsonValue(m_migrate_automl_model_config, json[QString("migrateAutomlModelConfig")]);
    m_migrate_automl_model_config_isSet = !json[QString("migrateAutomlModelConfig")].isNull() && m_migrate_automl_model_config_isValid;

    m_migrate_data_labeling_dataset_config_isValid = ::OpenAPI::fromJsonValue(m_migrate_data_labeling_dataset_config, json[QString("migrateDataLabelingDatasetConfig")]);
    m_migrate_data_labeling_dataset_config_isSet = !json[QString("migrateDataLabelingDatasetConfig")].isNull() && m_migrate_data_labeling_dataset_config_isValid;

    m_migrate_ml_engine_model_version_config_isValid = ::OpenAPI::fromJsonValue(m_migrate_ml_engine_model_version_config, json[QString("migrateMlEngineModelVersionConfig")]);
    m_migrate_ml_engine_model_version_config_isSet = !json[QString("migrateMlEngineModelVersionConfig")].isNull() && m_migrate_ml_engine_model_version_config_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_migrate_automl_dataset_config.isSet()) {
        obj.insert(QString("migrateAutomlDatasetConfig"), ::OpenAPI::toJsonValue(m_migrate_automl_dataset_config));
    }
    if (m_migrate_automl_model_config.isSet()) {
        obj.insert(QString("migrateAutomlModelConfig"), ::OpenAPI::toJsonValue(m_migrate_automl_model_config));
    }
    if (m_migrate_data_labeling_dataset_config.isSet()) {
        obj.insert(QString("migrateDataLabelingDatasetConfig"), ::OpenAPI::toJsonValue(m_migrate_data_labeling_dataset_config));
    }
    if (m_migrate_ml_engine_model_version_config.isSet()) {
        obj.insert(QString("migrateMlEngineModelVersionConfig"), ::OpenAPI::toJsonValue(m_migrate_ml_engine_model_version_config));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::getMigrateAutomlDatasetConfig() const {
    return m_migrate_automl_dataset_config;
}
void OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::setMigrateAutomlDatasetConfig(const OAIGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlDatasetConfig &migrate_automl_dataset_config) {
    m_migrate_automl_dataset_config = migrate_automl_dataset_config;
    m_migrate_automl_dataset_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::is_migrate_automl_dataset_config_Set() const{
    return m_migrate_automl_dataset_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::is_migrate_automl_dataset_config_Valid() const{
    return m_migrate_automl_dataset_config_isValid;
}

OAIGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::getMigrateAutomlModelConfig() const {
    return m_migrate_automl_model_config;
}
void OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::setMigrateAutomlModelConfig(const OAIGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateAutomlModelConfig &migrate_automl_model_config) {
    m_migrate_automl_model_config = migrate_automl_model_config;
    m_migrate_automl_model_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::is_migrate_automl_model_config_Set() const{
    return m_migrate_automl_model_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::is_migrate_automl_model_config_Valid() const{
    return m_migrate_automl_model_config_isValid;
}

OAIGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::getMigrateDataLabelingDatasetConfig() const {
    return m_migrate_data_labeling_dataset_config;
}
void OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::setMigrateDataLabelingDatasetConfig(const OAIGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateDataLabelingDatasetConfig &migrate_data_labeling_dataset_config) {
    m_migrate_data_labeling_dataset_config = migrate_data_labeling_dataset_config;
    m_migrate_data_labeling_dataset_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::is_migrate_data_labeling_dataset_config_Set() const{
    return m_migrate_data_labeling_dataset_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::is_migrate_data_labeling_dataset_config_Valid() const{
    return m_migrate_data_labeling_dataset_config_isValid;
}

OAIGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::getMigrateMlEngineModelVersionConfig() const {
    return m_migrate_ml_engine_model_version_config;
}
void OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::setMigrateMlEngineModelVersionConfig(const OAIGoogleCloudAiplatformV1beta1MigrateResourceRequestMigrateMlEngineModelVersionConfig &migrate_ml_engine_model_version_config) {
    m_migrate_ml_engine_model_version_config = migrate_ml_engine_model_version_config;
    m_migrate_ml_engine_model_version_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::is_migrate_ml_engine_model_version_config_Set() const{
    return m_migrate_ml_engine_model_version_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::is_migrate_ml_engine_model_version_config_Valid() const{
    return m_migrate_ml_engine_model_version_config_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_migrate_automl_dataset_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_migrate_automl_model_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_migrate_data_labeling_dataset_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_migrate_ml_engine_model_version_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1MigrateResourceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
