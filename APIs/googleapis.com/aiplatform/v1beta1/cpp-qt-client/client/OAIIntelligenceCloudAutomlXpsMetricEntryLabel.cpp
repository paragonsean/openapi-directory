/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntelligenceCloudAutomlXpsMetricEntryLabel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntelligenceCloudAutomlXpsMetricEntryLabel::OAIIntelligenceCloudAutomlXpsMetricEntryLabel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntelligenceCloudAutomlXpsMetricEntryLabel::OAIIntelligenceCloudAutomlXpsMetricEntryLabel() {
    this->initializeModel();
}

OAIIntelligenceCloudAutomlXpsMetricEntryLabel::~OAIIntelligenceCloudAutomlXpsMetricEntryLabel() {}

void OAIIntelligenceCloudAutomlXpsMetricEntryLabel::initializeModel() {

    m_label_name_isSet = false;
    m_label_name_isValid = false;

    m_label_value_isSet = false;
    m_label_value_isValid = false;
}

void OAIIntelligenceCloudAutomlXpsMetricEntryLabel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntelligenceCloudAutomlXpsMetricEntryLabel::fromJsonObject(QJsonObject json) {

    m_label_name_isValid = ::OpenAPI::fromJsonValue(m_label_name, json[QString("labelName")]);
    m_label_name_isSet = !json[QString("labelName")].isNull() && m_label_name_isValid;

    m_label_value_isValid = ::OpenAPI::fromJsonValue(m_label_value, json[QString("labelValue")]);
    m_label_value_isSet = !json[QString("labelValue")].isNull() && m_label_value_isValid;
}

QString OAIIntelligenceCloudAutomlXpsMetricEntryLabel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntelligenceCloudAutomlXpsMetricEntryLabel::asJsonObject() const {
    QJsonObject obj;
    if (m_label_name_isSet) {
        obj.insert(QString("labelName"), ::OpenAPI::toJsonValue(m_label_name));
    }
    if (m_label_value_isSet) {
        obj.insert(QString("labelValue"), ::OpenAPI::toJsonValue(m_label_value));
    }
    return obj;
}

QString OAIIntelligenceCloudAutomlXpsMetricEntryLabel::getLabelName() const {
    return m_label_name;
}
void OAIIntelligenceCloudAutomlXpsMetricEntryLabel::setLabelName(const QString &label_name) {
    m_label_name = label_name;
    m_label_name_isSet = true;
}

bool OAIIntelligenceCloudAutomlXpsMetricEntryLabel::is_label_name_Set() const{
    return m_label_name_isSet;
}

bool OAIIntelligenceCloudAutomlXpsMetricEntryLabel::is_label_name_Valid() const{
    return m_label_name_isValid;
}

QString OAIIntelligenceCloudAutomlXpsMetricEntryLabel::getLabelValue() const {
    return m_label_value;
}
void OAIIntelligenceCloudAutomlXpsMetricEntryLabel::setLabelValue(const QString &label_value) {
    m_label_value = label_value;
    m_label_value_isSet = true;
}

bool OAIIntelligenceCloudAutomlXpsMetricEntryLabel::is_label_value_Set() const{
    return m_label_value_isSet;
}

bool OAIIntelligenceCloudAutomlXpsMetricEntryLabel::is_label_value_Valid() const{
    return m_label_value_isValid;
}

bool OAIIntelligenceCloudAutomlXpsMetricEntryLabel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_label_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntelligenceCloudAutomlXpsMetricEntryLabel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
