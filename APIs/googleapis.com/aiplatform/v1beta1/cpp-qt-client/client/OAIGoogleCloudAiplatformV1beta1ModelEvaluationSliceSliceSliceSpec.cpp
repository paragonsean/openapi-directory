/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::~OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec() {}

void OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::initializeModel() {

    m_configs_isSet = false;
    m_configs_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::fromJsonObject(QJsonObject json) {

    m_configs_isValid = ::OpenAPI::fromJsonValue(m_configs, json[QString("configs")]);
    m_configs_isSet = !json[QString("configs")].isNull() && m_configs_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_configs.size() > 0) {
        obj.insert(QString("configs"), ::OpenAPI::toJsonValue(m_configs));
    }
    return obj;
}

QMap<QString, OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfig> OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::getConfigs() const {
    return m_configs;
}
void OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::setConfigs(const QMap<QString, OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpecSliceConfig> &configs) {
    m_configs = configs;
    m_configs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::is_configs_Set() const{
    return m_configs_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::is_configs_Valid() const{
    return m_configs_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1ModelEvaluationSliceSliceSliceSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
