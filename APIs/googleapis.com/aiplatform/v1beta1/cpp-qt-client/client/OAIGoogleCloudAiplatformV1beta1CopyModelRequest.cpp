/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1CopyModelRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1CopyModelRequest::OAIGoogleCloudAiplatformV1beta1CopyModelRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1CopyModelRequest::OAIGoogleCloudAiplatformV1beta1CopyModelRequest() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1CopyModelRequest::~OAIGoogleCloudAiplatformV1beta1CopyModelRequest() {}

void OAIGoogleCloudAiplatformV1beta1CopyModelRequest::initializeModel() {

    m_encryption_spec_isSet = false;
    m_encryption_spec_isValid = false;

    m_model_id_isSet = false;
    m_model_id_isValid = false;

    m_parent_model_isSet = false;
    m_parent_model_isValid = false;

    m_source_model_isSet = false;
    m_source_model_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1CopyModelRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1CopyModelRequest::fromJsonObject(QJsonObject json) {

    m_encryption_spec_isValid = ::OpenAPI::fromJsonValue(m_encryption_spec, json[QString("encryptionSpec")]);
    m_encryption_spec_isSet = !json[QString("encryptionSpec")].isNull() && m_encryption_spec_isValid;

    m_model_id_isValid = ::OpenAPI::fromJsonValue(m_model_id, json[QString("modelId")]);
    m_model_id_isSet = !json[QString("modelId")].isNull() && m_model_id_isValid;

    m_parent_model_isValid = ::OpenAPI::fromJsonValue(m_parent_model, json[QString("parentModel")]);
    m_parent_model_isSet = !json[QString("parentModel")].isNull() && m_parent_model_isValid;

    m_source_model_isValid = ::OpenAPI::fromJsonValue(m_source_model, json[QString("sourceModel")]);
    m_source_model_isSet = !json[QString("sourceModel")].isNull() && m_source_model_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1CopyModelRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1CopyModelRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_encryption_spec.isSet()) {
        obj.insert(QString("encryptionSpec"), ::OpenAPI::toJsonValue(m_encryption_spec));
    }
    if (m_model_id_isSet) {
        obj.insert(QString("modelId"), ::OpenAPI::toJsonValue(m_model_id));
    }
    if (m_parent_model_isSet) {
        obj.insert(QString("parentModel"), ::OpenAPI::toJsonValue(m_parent_model));
    }
    if (m_source_model_isSet) {
        obj.insert(QString("sourceModel"), ::OpenAPI::toJsonValue(m_source_model));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1EncryptionSpec OAIGoogleCloudAiplatformV1beta1CopyModelRequest::getEncryptionSpec() const {
    return m_encryption_spec;
}
void OAIGoogleCloudAiplatformV1beta1CopyModelRequest::setEncryptionSpec(const OAIGoogleCloudAiplatformV1beta1EncryptionSpec &encryption_spec) {
    m_encryption_spec = encryption_spec;
    m_encryption_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::is_encryption_spec_Set() const{
    return m_encryption_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::is_encryption_spec_Valid() const{
    return m_encryption_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1CopyModelRequest::getModelId() const {
    return m_model_id;
}
void OAIGoogleCloudAiplatformV1beta1CopyModelRequest::setModelId(const QString &model_id) {
    m_model_id = model_id;
    m_model_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::is_model_id_Set() const{
    return m_model_id_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::is_model_id_Valid() const{
    return m_model_id_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1CopyModelRequest::getParentModel() const {
    return m_parent_model;
}
void OAIGoogleCloudAiplatformV1beta1CopyModelRequest::setParentModel(const QString &parent_model) {
    m_parent_model = parent_model;
    m_parent_model_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::is_parent_model_Set() const{
    return m_parent_model_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::is_parent_model_Valid() const{
    return m_parent_model_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1CopyModelRequest::getSourceModel() const {
    return m_source_model;
}
void OAIGoogleCloudAiplatformV1beta1CopyModelRequest::setSourceModel(const QString &source_model) {
    m_source_model = source_model;
    m_source_model_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::is_source_model_Set() const{
    return m_source_model_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::is_source_model_Valid() const{
    return m_source_model_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_encryption_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_model_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1CopyModelRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
