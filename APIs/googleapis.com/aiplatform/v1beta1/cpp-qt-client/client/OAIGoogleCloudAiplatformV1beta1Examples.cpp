/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1Examples.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1Examples::OAIGoogleCloudAiplatformV1beta1Examples(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1Examples::OAIGoogleCloudAiplatformV1beta1Examples() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1Examples::~OAIGoogleCloudAiplatformV1beta1Examples() {}

void OAIGoogleCloudAiplatformV1beta1Examples::initializeModel() {

    m_example_gcs_source_isSet = false;
    m_example_gcs_source_isValid = false;

    m_gcs_source_isSet = false;
    m_gcs_source_isValid = false;

    m_nearest_neighbor_search_config_isSet = false;
    m_nearest_neighbor_search_config_isValid = false;

    m_neighbor_count_isSet = false;
    m_neighbor_count_isValid = false;

    m_presets_isSet = false;
    m_presets_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1Examples::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1Examples::fromJsonObject(QJsonObject json) {

    m_example_gcs_source_isValid = ::OpenAPI::fromJsonValue(m_example_gcs_source, json[QString("exampleGcsSource")]);
    m_example_gcs_source_isSet = !json[QString("exampleGcsSource")].isNull() && m_example_gcs_source_isValid;

    m_gcs_source_isValid = ::OpenAPI::fromJsonValue(m_gcs_source, json[QString("gcsSource")]);
    m_gcs_source_isSet = !json[QString("gcsSource")].isNull() && m_gcs_source_isValid;

    m_nearest_neighbor_search_config_isValid = ::OpenAPI::fromJsonValue(m_nearest_neighbor_search_config, json[QString("nearestNeighborSearchConfig")]);
    m_nearest_neighbor_search_config_isSet = !json[QString("nearestNeighborSearchConfig")].isNull() && m_nearest_neighbor_search_config_isValid;

    m_neighbor_count_isValid = ::OpenAPI::fromJsonValue(m_neighbor_count, json[QString("neighborCount")]);
    m_neighbor_count_isSet = !json[QString("neighborCount")].isNull() && m_neighbor_count_isValid;

    m_presets_isValid = ::OpenAPI::fromJsonValue(m_presets, json[QString("presets")]);
    m_presets_isSet = !json[QString("presets")].isNull() && m_presets_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1Examples::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1Examples::asJsonObject() const {
    QJsonObject obj;
    if (m_example_gcs_source.isSet()) {
        obj.insert(QString("exampleGcsSource"), ::OpenAPI::toJsonValue(m_example_gcs_source));
    }
    if (m_gcs_source.isSet()) {
        obj.insert(QString("gcsSource"), ::OpenAPI::toJsonValue(m_gcs_source));
    }
    if (m_nearest_neighbor_search_config_isSet) {
        obj.insert(QString("nearestNeighborSearchConfig"), ::OpenAPI::toJsonValue(m_nearest_neighbor_search_config));
    }
    if (m_neighbor_count_isSet) {
        obj.insert(QString("neighborCount"), ::OpenAPI::toJsonValue(m_neighbor_count));
    }
    if (m_presets.isSet()) {
        obj.insert(QString("presets"), ::OpenAPI::toJsonValue(m_presets));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1ExamplesExampleGcsSource OAIGoogleCloudAiplatformV1beta1Examples::getExampleGcsSource() const {
    return m_example_gcs_source;
}
void OAIGoogleCloudAiplatformV1beta1Examples::setExampleGcsSource(const OAIGoogleCloudAiplatformV1beta1ExamplesExampleGcsSource &example_gcs_source) {
    m_example_gcs_source = example_gcs_source;
    m_example_gcs_source_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_example_gcs_source_Set() const{
    return m_example_gcs_source_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_example_gcs_source_Valid() const{
    return m_example_gcs_source_isValid;
}

OAIGoogleCloudAiplatformV1beta1GcsSource OAIGoogleCloudAiplatformV1beta1Examples::getGcsSource() const {
    return m_gcs_source;
}
void OAIGoogleCloudAiplatformV1beta1Examples::setGcsSource(const OAIGoogleCloudAiplatformV1beta1GcsSource &gcs_source) {
    m_gcs_source = gcs_source;
    m_gcs_source_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_gcs_source_Set() const{
    return m_gcs_source_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_gcs_source_Valid() const{
    return m_gcs_source_isValid;
}

QJsonValue OAIGoogleCloudAiplatformV1beta1Examples::getNearestNeighborSearchConfig() const {
    return m_nearest_neighbor_search_config;
}
void OAIGoogleCloudAiplatformV1beta1Examples::setNearestNeighborSearchConfig(const QJsonValue &nearest_neighbor_search_config) {
    m_nearest_neighbor_search_config = nearest_neighbor_search_config;
    m_nearest_neighbor_search_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_nearest_neighbor_search_config_Set() const{
    return m_nearest_neighbor_search_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_nearest_neighbor_search_config_Valid() const{
    return m_nearest_neighbor_search_config_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1Examples::getNeighborCount() const {
    return m_neighbor_count;
}
void OAIGoogleCloudAiplatformV1beta1Examples::setNeighborCount(const qint32 &neighbor_count) {
    m_neighbor_count = neighbor_count;
    m_neighbor_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_neighbor_count_Set() const{
    return m_neighbor_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_neighbor_count_Valid() const{
    return m_neighbor_count_isValid;
}

OAIGoogleCloudAiplatformV1beta1Presets OAIGoogleCloudAiplatformV1beta1Examples::getPresets() const {
    return m_presets;
}
void OAIGoogleCloudAiplatformV1beta1Examples::setPresets(const OAIGoogleCloudAiplatformV1beta1Presets &presets) {
    m_presets = presets;
    m_presets_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_presets_Set() const{
    return m_presets_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::is_presets_Valid() const{
    return m_presets_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_example_gcs_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_nearest_neighbor_search_config_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_neighbor_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_presets.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1Examples::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
