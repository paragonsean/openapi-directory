/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILearningGenaiRootTakedownResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILearningGenaiRootTakedownResult::OAILearningGenaiRootTakedownResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILearningGenaiRootTakedownResult::OAILearningGenaiRootTakedownResult() {
    this->initializeModel();
}

OAILearningGenaiRootTakedownResult::~OAILearningGenaiRootTakedownResult() {}

void OAILearningGenaiRootTakedownResult::initializeModel() {

    m_allowed_isSet = false;
    m_allowed_isValid = false;

    m_regex_takedown_result_isSet = false;
    m_regex_takedown_result_isValid = false;

    m_request_response_takedown_result_isSet = false;
    m_request_response_takedown_result_isValid = false;

    m_similarity_takedown_result_isSet = false;
    m_similarity_takedown_result_isValid = false;
}

void OAILearningGenaiRootTakedownResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILearningGenaiRootTakedownResult::fromJsonObject(QJsonObject json) {

    m_allowed_isValid = ::OpenAPI::fromJsonValue(m_allowed, json[QString("allowed")]);
    m_allowed_isSet = !json[QString("allowed")].isNull() && m_allowed_isValid;

    m_regex_takedown_result_isValid = ::OpenAPI::fromJsonValue(m_regex_takedown_result, json[QString("regexTakedownResult")]);
    m_regex_takedown_result_isSet = !json[QString("regexTakedownResult")].isNull() && m_regex_takedown_result_isValid;

    m_request_response_takedown_result_isValid = ::OpenAPI::fromJsonValue(m_request_response_takedown_result, json[QString("requestResponseTakedownResult")]);
    m_request_response_takedown_result_isSet = !json[QString("requestResponseTakedownResult")].isNull() && m_request_response_takedown_result_isValid;

    m_similarity_takedown_result_isValid = ::OpenAPI::fromJsonValue(m_similarity_takedown_result, json[QString("similarityTakedownResult")]);
    m_similarity_takedown_result_isSet = !json[QString("similarityTakedownResult")].isNull() && m_similarity_takedown_result_isValid;
}

QString OAILearningGenaiRootTakedownResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILearningGenaiRootTakedownResult::asJsonObject() const {
    QJsonObject obj;
    if (m_allowed_isSet) {
        obj.insert(QString("allowed"), ::OpenAPI::toJsonValue(m_allowed));
    }
    if (m_regex_takedown_result.isSet()) {
        obj.insert(QString("regexTakedownResult"), ::OpenAPI::toJsonValue(m_regex_takedown_result));
    }
    if (m_request_response_takedown_result.isSet()) {
        obj.insert(QString("requestResponseTakedownResult"), ::OpenAPI::toJsonValue(m_request_response_takedown_result));
    }
    if (m_similarity_takedown_result.isSet()) {
        obj.insert(QString("similarityTakedownResult"), ::OpenAPI::toJsonValue(m_similarity_takedown_result));
    }
    return obj;
}

bool OAILearningGenaiRootTakedownResult::isAllowed() const {
    return m_allowed;
}
void OAILearningGenaiRootTakedownResult::setAllowed(const bool &allowed) {
    m_allowed = allowed;
    m_allowed_isSet = true;
}

bool OAILearningGenaiRootTakedownResult::is_allowed_Set() const{
    return m_allowed_isSet;
}

bool OAILearningGenaiRootTakedownResult::is_allowed_Valid() const{
    return m_allowed_isValid;
}

OAILearningGenaiRootRegexTakedownResult OAILearningGenaiRootTakedownResult::getRegexTakedownResult() const {
    return m_regex_takedown_result;
}
void OAILearningGenaiRootTakedownResult::setRegexTakedownResult(const OAILearningGenaiRootRegexTakedownResult &regex_takedown_result) {
    m_regex_takedown_result = regex_takedown_result;
    m_regex_takedown_result_isSet = true;
}

bool OAILearningGenaiRootTakedownResult::is_regex_takedown_result_Set() const{
    return m_regex_takedown_result_isSet;
}

bool OAILearningGenaiRootTakedownResult::is_regex_takedown_result_Valid() const{
    return m_regex_takedown_result_isValid;
}

OAILearningGenaiRootRequestResponseTakedownResult OAILearningGenaiRootTakedownResult::getRequestResponseTakedownResult() const {
    return m_request_response_takedown_result;
}
void OAILearningGenaiRootTakedownResult::setRequestResponseTakedownResult(const OAILearningGenaiRootRequestResponseTakedownResult &request_response_takedown_result) {
    m_request_response_takedown_result = request_response_takedown_result;
    m_request_response_takedown_result_isSet = true;
}

bool OAILearningGenaiRootTakedownResult::is_request_response_takedown_result_Set() const{
    return m_request_response_takedown_result_isSet;
}

bool OAILearningGenaiRootTakedownResult::is_request_response_takedown_result_Valid() const{
    return m_request_response_takedown_result_isValid;
}

OAILearningGenaiRootSimilarityTakedownResult OAILearningGenaiRootTakedownResult::getSimilarityTakedownResult() const {
    return m_similarity_takedown_result;
}
void OAILearningGenaiRootTakedownResult::setSimilarityTakedownResult(const OAILearningGenaiRootSimilarityTakedownResult &similarity_takedown_result) {
    m_similarity_takedown_result = similarity_takedown_result;
    m_similarity_takedown_result_isSet = true;
}

bool OAILearningGenaiRootTakedownResult::is_similarity_takedown_result_Set() const{
    return m_similarity_takedown_result_isSet;
}

bool OAILearningGenaiRootTakedownResult::is_similarity_takedown_result_Valid() const{
    return m_similarity_takedown_result_isValid;
}

bool OAILearningGenaiRootTakedownResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allowed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_regex_takedown_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_response_takedown_result.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_similarity_takedown_result.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILearningGenaiRootTakedownResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
