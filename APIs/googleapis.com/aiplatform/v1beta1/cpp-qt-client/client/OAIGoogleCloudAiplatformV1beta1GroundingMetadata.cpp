/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1GroundingMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1GroundingMetadata::OAIGoogleCloudAiplatformV1beta1GroundingMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1GroundingMetadata::OAIGoogleCloudAiplatformV1beta1GroundingMetadata() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1GroundingMetadata::~OAIGoogleCloudAiplatformV1beta1GroundingMetadata() {}

void OAIGoogleCloudAiplatformV1beta1GroundingMetadata::initializeModel() {

    m_grounding_attributions_isSet = false;
    m_grounding_attributions_isValid = false;

    m_web_search_queries_isSet = false;
    m_web_search_queries_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1GroundingMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1GroundingMetadata::fromJsonObject(QJsonObject json) {

    m_grounding_attributions_isValid = ::OpenAPI::fromJsonValue(m_grounding_attributions, json[QString("groundingAttributions")]);
    m_grounding_attributions_isSet = !json[QString("groundingAttributions")].isNull() && m_grounding_attributions_isValid;

    m_web_search_queries_isValid = ::OpenAPI::fromJsonValue(m_web_search_queries, json[QString("webSearchQueries")]);
    m_web_search_queries_isSet = !json[QString("webSearchQueries")].isNull() && m_web_search_queries_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1GroundingMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1GroundingMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_grounding_attributions.size() > 0) {
        obj.insert(QString("groundingAttributions"), ::OpenAPI::toJsonValue(m_grounding_attributions));
    }
    if (m_web_search_queries.size() > 0) {
        obj.insert(QString("webSearchQueries"), ::OpenAPI::toJsonValue(m_web_search_queries));
    }
    return obj;
}

QList<OAIGoogleCloudAiplatformV1beta1GroundingAttribution> OAIGoogleCloudAiplatformV1beta1GroundingMetadata::getGroundingAttributions() const {
    return m_grounding_attributions;
}
void OAIGoogleCloudAiplatformV1beta1GroundingMetadata::setGroundingAttributions(const QList<OAIGoogleCloudAiplatformV1beta1GroundingAttribution> &grounding_attributions) {
    m_grounding_attributions = grounding_attributions;
    m_grounding_attributions_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingMetadata::is_grounding_attributions_Set() const{
    return m_grounding_attributions_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingMetadata::is_grounding_attributions_Valid() const{
    return m_grounding_attributions_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1GroundingMetadata::getWebSearchQueries() const {
    return m_web_search_queries;
}
void OAIGoogleCloudAiplatformV1beta1GroundingMetadata::setWebSearchQueries(const QList<QString> &web_search_queries) {
    m_web_search_queries = web_search_queries;
    m_web_search_queries_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingMetadata::is_web_search_queries_Set() const{
    return m_web_search_queries_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingMetadata::is_web_search_queries_Valid() const{
    return m_web_search_queries_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_grounding_attributions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_search_queries.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1GroundingMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
