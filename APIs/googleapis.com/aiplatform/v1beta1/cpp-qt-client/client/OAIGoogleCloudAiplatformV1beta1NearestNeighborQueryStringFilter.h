/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter.h
 *
 * String filter is used to search a subset of the entities by using boolean rules on string columns. For example: if a query specifies string filter with &#39;name &#x3D; color, allow_tokens &#x3D; {red, blue}, deny_tokens &#x3D; {purple}&#39;,&#39; then that query will match entities that are red or blue, but if those points are also purple, then they will be excluded even if they are red/blue. Only string filter is supported for now, numeric filter will be supported in the near future.
 */

#ifndef OAIGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter_H
#define OAIGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter();
    OAIGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter(QString json);
    ~OAIGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowTokens() const;
    void setAllowTokens(const QList<QString> &allow_tokens);
    bool is_allow_tokens_Set() const;
    bool is_allow_tokens_Valid() const;

    QList<QString> getDenyTokens() const;
    void setDenyTokens(const QList<QString> &deny_tokens);
    bool is_deny_tokens_Set() const;
    bool is_deny_tokens_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allow_tokens;
    bool m_allow_tokens_isSet;
    bool m_allow_tokens_isValid;

    QList<QString> m_deny_tokens;
    bool m_deny_tokens_isSet;
    bool m_deny_tokens_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter)

#endif // OAIGoogleCloudAiplatformV1beta1NearestNeighborQueryStringFilter_H
