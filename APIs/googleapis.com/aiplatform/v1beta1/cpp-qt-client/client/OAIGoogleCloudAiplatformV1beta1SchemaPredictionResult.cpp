/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::~OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult() {}

void OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;

    m_instance_isSet = false;
    m_instance_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_prediction_isSet = false;
    m_prediction_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_instance_isValid = ::OpenAPI::fromJsonValue(m_instance, json[QString("instance")]);
    m_instance_isSet = !json[QString("instance")].isNull() && m_instance_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_prediction_isValid = ::OpenAPI::fromJsonValue(m_prediction, json[QString("prediction")]);
    m_prediction_isSet = !json[QString("prediction")].isNull() && m_prediction_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_instance.size() > 0) {
        obj.insert(QString("instance"), ::OpenAPI::toJsonValue(m_instance));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_prediction_isSet) {
        obj.insert(QString("prediction"), ::OpenAPI::toJsonValue(m_prediction));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1SchemaPredictionResultError OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::getError() const {
    return m_error;
}
void OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::setError(const OAIGoogleCloudAiplatformV1beta1SchemaPredictionResultError &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::is_error_Set() const{
    return m_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::is_error_Valid() const{
    return m_error_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::getInstance() const {
    return m_instance;
}
void OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::setInstance(const QMap<QString, QJsonValue> &instance) {
    m_instance = instance;
    m_instance_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::is_instance_Set() const{
    return m_instance_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::is_instance_Valid() const{
    return m_instance_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::getKey() const {
    return m_key;
}
void OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::is_key_Set() const{
    return m_key_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::is_key_Valid() const{
    return m_key_isValid;
}

QJsonValue OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::getPrediction() const {
    return m_prediction;
}
void OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::setPrediction(const QJsonValue &prediction) {
    m_prediction = prediction;
    m_prediction_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::is_prediction_Set() const{
    return m_prediction_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::is_prediction_Valid() const{
    return m_prediction_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prediction_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaPredictionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
