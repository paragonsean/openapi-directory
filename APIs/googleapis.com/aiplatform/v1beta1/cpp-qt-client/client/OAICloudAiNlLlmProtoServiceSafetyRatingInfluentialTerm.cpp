/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm() {
    this->initializeModel();
}

OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::~OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm() {}

void OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::initializeModel() {

    m_begin_offset_isSet = false;
    m_begin_offset_isValid = false;

    m_confidence_isSet = false;
    m_confidence_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_term_isSet = false;
    m_term_isValid = false;
}

void OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::fromJsonObject(QJsonObject json) {

    m_begin_offset_isValid = ::OpenAPI::fromJsonValue(m_begin_offset, json[QString("beginOffset")]);
    m_begin_offset_isSet = !json[QString("beginOffset")].isNull() && m_begin_offset_isValid;

    m_confidence_isValid = ::OpenAPI::fromJsonValue(m_confidence, json[QString("confidence")]);
    m_confidence_isSet = !json[QString("confidence")].isNull() && m_confidence_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;

    m_term_isValid = ::OpenAPI::fromJsonValue(m_term, json[QString("term")]);
    m_term_isSet = !json[QString("term")].isNull() && m_term_isValid;
}

QString OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::asJsonObject() const {
    QJsonObject obj;
    if (m_begin_offset_isSet) {
        obj.insert(QString("beginOffset"), ::OpenAPI::toJsonValue(m_begin_offset));
    }
    if (m_confidence_isSet) {
        obj.insert(QString("confidence"), ::OpenAPI::toJsonValue(m_confidence));
    }
    if (m_source_isSet) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_term_isSet) {
        obj.insert(QString("term"), ::OpenAPI::toJsonValue(m_term));
    }
    return obj;
}

qint32 OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::getBeginOffset() const {
    return m_begin_offset;
}
void OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::setBeginOffset(const qint32 &begin_offset) {
    m_begin_offset = begin_offset;
    m_begin_offset_isSet = true;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::is_begin_offset_Set() const{
    return m_begin_offset_isSet;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::is_begin_offset_Valid() const{
    return m_begin_offset_isValid;
}

float OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::getConfidence() const {
    return m_confidence;
}
void OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::setConfidence(const float &confidence) {
    m_confidence = confidence;
    m_confidence_isSet = true;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::is_confidence_Set() const{
    return m_confidence_isSet;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::is_confidence_Valid() const{
    return m_confidence_isValid;
}

QString OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::getSource() const {
    return m_source;
}
void OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::is_source_Set() const{
    return m_source_isSet;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::is_source_Valid() const{
    return m_source_isValid;
}

QString OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::getTerm() const {
    return m_term;
}
void OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::setTerm(const QString &term) {
    m_term = term;
    m_term_isSet = true;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::is_term_Set() const{
    return m_term_isSet;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::is_term_Valid() const{
    return m_term_isValid;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_begin_offset_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_term_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
