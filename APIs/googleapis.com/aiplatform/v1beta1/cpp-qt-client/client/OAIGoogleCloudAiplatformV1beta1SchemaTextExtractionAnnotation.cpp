/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::~OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation() {}

void OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::initializeModel() {

    m_annotation_spec_id_isSet = false;
    m_annotation_spec_id_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_text_segment_isSet = false;
    m_text_segment_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::fromJsonObject(QJsonObject json) {

    m_annotation_spec_id_isValid = ::OpenAPI::fromJsonValue(m_annotation_spec_id, json[QString("annotationSpecId")]);
    m_annotation_spec_id_isSet = !json[QString("annotationSpecId")].isNull() && m_annotation_spec_id_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_text_segment_isValid = ::OpenAPI::fromJsonValue(m_text_segment, json[QString("textSegment")]);
    m_text_segment_isSet = !json[QString("textSegment")].isNull() && m_text_segment_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_spec_id_isSet) {
        obj.insert(QString("annotationSpecId"), ::OpenAPI::toJsonValue(m_annotation_spec_id));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_text_segment.isSet()) {
        obj.insert(QString("textSegment"), ::OpenAPI::toJsonValue(m_text_segment));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::getAnnotationSpecId() const {
    return m_annotation_spec_id;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::setAnnotationSpecId(const QString &annotation_spec_id) {
    m_annotation_spec_id = annotation_spec_id;
    m_annotation_spec_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::is_annotation_spec_id_Set() const{
    return m_annotation_spec_id_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::is_annotation_spec_id_Valid() const{
    return m_annotation_spec_id_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudAiplatformV1beta1SchemaTextSegment OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::getTextSegment() const {
    return m_text_segment;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::setTextSegment(const OAIGoogleCloudAiplatformV1beta1SchemaTextSegment &text_segment) {
    m_text_segment = text_segment;
    m_text_segment_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::is_text_segment_Set() const{
    return m_text_segment_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::is_text_segment_Valid() const{
    return m_text_segment_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_spec_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_segment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTextExtractionAnnotation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
