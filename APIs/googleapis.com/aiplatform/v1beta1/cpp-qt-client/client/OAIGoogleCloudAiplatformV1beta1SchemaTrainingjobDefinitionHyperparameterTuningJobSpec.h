/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec.h
 *
 * 
 */

#ifndef OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec_H
#define OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1beta1CustomJobSpec.h"
#include "OAIGoogleCloudAiplatformV1beta1StudySpec.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1beta1StudySpec;
class OAIGoogleCloudAiplatformV1beta1CustomJobSpec;

class OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec();
    OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec(QString json);
    ~OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxFailedTrialCount() const;
    void setMaxFailedTrialCount(const qint32 &max_failed_trial_count);
    bool is_max_failed_trial_count_Set() const;
    bool is_max_failed_trial_count_Valid() const;

    qint32 getMaxTrialCount() const;
    void setMaxTrialCount(const qint32 &max_trial_count);
    bool is_max_trial_count_Set() const;
    bool is_max_trial_count_Valid() const;

    qint32 getParallelTrialCount() const;
    void setParallelTrialCount(const qint32 &parallel_trial_count);
    bool is_parallel_trial_count_Set() const;
    bool is_parallel_trial_count_Valid() const;

    OAIGoogleCloudAiplatformV1beta1StudySpec getStudySpec() const;
    void setStudySpec(const OAIGoogleCloudAiplatformV1beta1StudySpec &study_spec);
    bool is_study_spec_Set() const;
    bool is_study_spec_Valid() const;

    OAIGoogleCloudAiplatformV1beta1CustomJobSpec getTrialJobSpec() const;
    void setTrialJobSpec(const OAIGoogleCloudAiplatformV1beta1CustomJobSpec &trial_job_spec);
    bool is_trial_job_spec_Set() const;
    bool is_trial_job_spec_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_failed_trial_count;
    bool m_max_failed_trial_count_isSet;
    bool m_max_failed_trial_count_isValid;

    qint32 m_max_trial_count;
    bool m_max_trial_count_isSet;
    bool m_max_trial_count_isValid;

    qint32 m_parallel_trial_count;
    bool m_parallel_trial_count_isSet;
    bool m_parallel_trial_count_isValid;

    OAIGoogleCloudAiplatformV1beta1StudySpec m_study_spec;
    bool m_study_spec_isSet;
    bool m_study_spec_isValid;

    OAIGoogleCloudAiplatformV1beta1CustomJobSpec m_trial_job_spec;
    bool m_trial_job_spec_isSet;
    bool m_trial_job_spec_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec)

#endif // OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHyperparameterTuningJobSpec_H
