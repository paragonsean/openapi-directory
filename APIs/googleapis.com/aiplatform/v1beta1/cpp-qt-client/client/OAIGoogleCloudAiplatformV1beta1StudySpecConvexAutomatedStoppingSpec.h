/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec.h
 *
 * Configuration for ConvexAutomatedStoppingSpec. When there are enough completed trials (configured by min_measurement_count), for pending trials with enough measurements and steps, the policy first computes an overestimate of the objective value at max_num_steps according to the slope of the incomplete objective value curve. No prediction can be made if the curve is completely flat. If the overestimation is worse than the best objective value of the completed trials, this pending trial will be early-stopped, but a last measurement will be added to the pending trial with max_num_steps and predicted objective value from the autoregression model.
 */

#ifndef OAIGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec_H
#define OAIGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec();
    OAIGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec(QString json);
    ~OAIGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLearningRateParameterName() const;
    void setLearningRateParameterName(const QString &learning_rate_parameter_name);
    bool is_learning_rate_parameter_name_Set() const;
    bool is_learning_rate_parameter_name_Valid() const;

    QString getMaxStepCount() const;
    void setMaxStepCount(const QString &max_step_count);
    bool is_max_step_count_Set() const;
    bool is_max_step_count_Valid() const;

    QString getMinMeasurementCount() const;
    void setMinMeasurementCount(const QString &min_measurement_count);
    bool is_min_measurement_count_Set() const;
    bool is_min_measurement_count_Valid() const;

    QString getMinStepCount() const;
    void setMinStepCount(const QString &min_step_count);
    bool is_min_step_count_Set() const;
    bool is_min_step_count_Valid() const;

    bool isUpdateAllStoppedTrials() const;
    void setUpdateAllStoppedTrials(const bool &update_all_stopped_trials);
    bool is_update_all_stopped_trials_Set() const;
    bool is_update_all_stopped_trials_Valid() const;

    bool isUseElapsedDuration() const;
    void setUseElapsedDuration(const bool &use_elapsed_duration);
    bool is_use_elapsed_duration_Set() const;
    bool is_use_elapsed_duration_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_learning_rate_parameter_name;
    bool m_learning_rate_parameter_name_isSet;
    bool m_learning_rate_parameter_name_isValid;

    QString m_max_step_count;
    bool m_max_step_count_isSet;
    bool m_max_step_count_isValid;

    QString m_min_measurement_count;
    bool m_min_measurement_count_isSet;
    bool m_min_measurement_count_isValid;

    QString m_min_step_count;
    bool m_min_step_count_isSet;
    bool m_min_step_count_isValid;

    bool m_update_all_stopped_trials;
    bool m_update_all_stopped_trials_isSet;
    bool m_update_all_stopped_trials_isValid;

    bool m_use_elapsed_duration;
    bool m_use_elapsed_duration_isSet;
    bool m_use_elapsed_duration_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec)

#endif // OAIGoogleCloudAiplatformV1beta1StudySpecConvexAutomatedStoppingSpec_H
