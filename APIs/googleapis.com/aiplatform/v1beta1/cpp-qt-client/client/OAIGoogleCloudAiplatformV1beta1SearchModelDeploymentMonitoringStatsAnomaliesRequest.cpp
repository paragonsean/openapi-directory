/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::~OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest() {}

void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::initializeModel() {

    m_deployed_model_id_isSet = false;
    m_deployed_model_id_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_feature_display_name_isSet = false;
    m_feature_display_name_isValid = false;

    m_objectives_isSet = false;
    m_objectives_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_page_token_isSet = false;
    m_page_token_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::fromJsonObject(QJsonObject json) {

    m_deployed_model_id_isValid = ::OpenAPI::fromJsonValue(m_deployed_model_id, json[QString("deployedModelId")]);
    m_deployed_model_id_isSet = !json[QString("deployedModelId")].isNull() && m_deployed_model_id_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_feature_display_name_isValid = ::OpenAPI::fromJsonValue(m_feature_display_name, json[QString("featureDisplayName")]);
    m_feature_display_name_isSet = !json[QString("featureDisplayName")].isNull() && m_feature_display_name_isValid;

    m_objectives_isValid = ::OpenAPI::fromJsonValue(m_objectives, json[QString("objectives")]);
    m_objectives_isSet = !json[QString("objectives")].isNull() && m_objectives_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_page_token_isValid = ::OpenAPI::fromJsonValue(m_page_token, json[QString("pageToken")]);
    m_page_token_isSet = !json[QString("pageToken")].isNull() && m_page_token_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_deployed_model_id_isSet) {
        obj.insert(QString("deployedModelId"), ::OpenAPI::toJsonValue(m_deployed_model_id));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_feature_display_name_isSet) {
        obj.insert(QString("featureDisplayName"), ::OpenAPI::toJsonValue(m_feature_display_name));
    }
    if (m_objectives.size() > 0) {
        obj.insert(QString("objectives"), ::OpenAPI::toJsonValue(m_objectives));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_page_token_isSet) {
        obj.insert(QString("pageToken"), ::OpenAPI::toJsonValue(m_page_token));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::getDeployedModelId() const {
    return m_deployed_model_id;
}
void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::setDeployedModelId(const QString &deployed_model_id) {
    m_deployed_model_id = deployed_model_id;
    m_deployed_model_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_deployed_model_id_Set() const{
    return m_deployed_model_id_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_deployed_model_id_Valid() const{
    return m_deployed_model_id_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::getFeatureDisplayName() const {
    return m_feature_display_name;
}
void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::setFeatureDisplayName(const QString &feature_display_name) {
    m_feature_display_name = feature_display_name;
    m_feature_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_feature_display_name_Set() const{
    return m_feature_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_feature_display_name_Valid() const{
    return m_feature_display_name_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective> OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::getObjectives() const {
    return m_objectives;
}
void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::setObjectives(const QList<OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequestStatsAnomaliesObjective> &objectives) {
    m_objectives = objectives;
    m_objectives_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_objectives_Set() const{
    return m_objectives_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_objectives_Valid() const{
    return m_objectives_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::getPageSize() const {
    return m_page_size;
}
void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::getPageToken() const {
    return m_page_token;
}
void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::setPageToken(const QString &page_token) {
    m_page_token = page_token;
    m_page_token_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_page_token_Set() const{
    return m_page_token_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_page_token_Valid() const{
    return m_page_token_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deployed_model_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_objectives.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
