/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::~OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput() {}

void OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::initializeModel() {

    m_search_trials_isSet = false;
    m_search_trials_isValid = false;

    m_train_trials_isSet = false;
    m_train_trials_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::fromJsonObject(QJsonObject json) {

    m_search_trials_isValid = ::OpenAPI::fromJsonValue(m_search_trials, json[QString("searchTrials")]);
    m_search_trials_isSet = !json[QString("searchTrials")].isNull() && m_search_trials_isValid;

    m_train_trials_isValid = ::OpenAPI::fromJsonValue(m_train_trials, json[QString("trainTrials")]);
    m_train_trials_isSet = !json[QString("trainTrials")].isNull() && m_train_trials_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_search_trials.size() > 0) {
        obj.insert(QString("searchTrials"), ::OpenAPI::toJsonValue(m_search_trials));
    }
    if (m_train_trials.size() > 0) {
        obj.insert(QString("trainTrials"), ::OpenAPI::toJsonValue(m_train_trials));
    }
    return obj;
}

QList<OAIGoogleCloudAiplatformV1beta1NasTrial> OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::getSearchTrials() const {
    return m_search_trials;
}
void OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::setSearchTrials(const QList<OAIGoogleCloudAiplatformV1beta1NasTrial> &search_trials) {
    m_search_trials = search_trials;
    m_search_trials_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::is_search_trials_Set() const{
    return m_search_trials_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::is_search_trials_Valid() const{
    return m_search_trials_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1NasTrial> OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::getTrainTrials() const {
    return m_train_trials;
}
void OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::setTrainTrials(const QList<OAIGoogleCloudAiplatformV1beta1NasTrial> &train_trials) {
    m_train_trials = train_trials;
    m_train_trials_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::is_train_trials_Set() const{
    return m_train_trials_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::is_train_trials_Valid() const{
    return m_train_trials_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_search_trials.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_train_trials.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1NasJobOutputMultiTrialJobOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
