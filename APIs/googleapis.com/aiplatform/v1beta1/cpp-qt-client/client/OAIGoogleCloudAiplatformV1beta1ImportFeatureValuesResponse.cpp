/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::~OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse() {}

void OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::initializeModel() {

    m_imported_entity_count_isSet = false;
    m_imported_entity_count_isValid = false;

    m_imported_feature_value_count_isSet = false;
    m_imported_feature_value_count_isValid = false;

    m_invalid_row_count_isSet = false;
    m_invalid_row_count_isValid = false;

    m_timestamp_outside_retention_rows_count_isSet = false;
    m_timestamp_outside_retention_rows_count_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::fromJsonObject(QJsonObject json) {

    m_imported_entity_count_isValid = ::OpenAPI::fromJsonValue(m_imported_entity_count, json[QString("importedEntityCount")]);
    m_imported_entity_count_isSet = !json[QString("importedEntityCount")].isNull() && m_imported_entity_count_isValid;

    m_imported_feature_value_count_isValid = ::OpenAPI::fromJsonValue(m_imported_feature_value_count, json[QString("importedFeatureValueCount")]);
    m_imported_feature_value_count_isSet = !json[QString("importedFeatureValueCount")].isNull() && m_imported_feature_value_count_isValid;

    m_invalid_row_count_isValid = ::OpenAPI::fromJsonValue(m_invalid_row_count, json[QString("invalidRowCount")]);
    m_invalid_row_count_isSet = !json[QString("invalidRowCount")].isNull() && m_invalid_row_count_isValid;

    m_timestamp_outside_retention_rows_count_isValid = ::OpenAPI::fromJsonValue(m_timestamp_outside_retention_rows_count, json[QString("timestampOutsideRetentionRowsCount")]);
    m_timestamp_outside_retention_rows_count_isSet = !json[QString("timestampOutsideRetentionRowsCount")].isNull() && m_timestamp_outside_retention_rows_count_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_imported_entity_count_isSet) {
        obj.insert(QString("importedEntityCount"), ::OpenAPI::toJsonValue(m_imported_entity_count));
    }
    if (m_imported_feature_value_count_isSet) {
        obj.insert(QString("importedFeatureValueCount"), ::OpenAPI::toJsonValue(m_imported_feature_value_count));
    }
    if (m_invalid_row_count_isSet) {
        obj.insert(QString("invalidRowCount"), ::OpenAPI::toJsonValue(m_invalid_row_count));
    }
    if (m_timestamp_outside_retention_rows_count_isSet) {
        obj.insert(QString("timestampOutsideRetentionRowsCount"), ::OpenAPI::toJsonValue(m_timestamp_outside_retention_rows_count));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::getImportedEntityCount() const {
    return m_imported_entity_count;
}
void OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::setImportedEntityCount(const QString &imported_entity_count) {
    m_imported_entity_count = imported_entity_count;
    m_imported_entity_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::is_imported_entity_count_Set() const{
    return m_imported_entity_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::is_imported_entity_count_Valid() const{
    return m_imported_entity_count_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::getImportedFeatureValueCount() const {
    return m_imported_feature_value_count;
}
void OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::setImportedFeatureValueCount(const QString &imported_feature_value_count) {
    m_imported_feature_value_count = imported_feature_value_count;
    m_imported_feature_value_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::is_imported_feature_value_count_Set() const{
    return m_imported_feature_value_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::is_imported_feature_value_count_Valid() const{
    return m_imported_feature_value_count_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::getInvalidRowCount() const {
    return m_invalid_row_count;
}
void OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::setInvalidRowCount(const QString &invalid_row_count) {
    m_invalid_row_count = invalid_row_count;
    m_invalid_row_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::is_invalid_row_count_Set() const{
    return m_invalid_row_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::is_invalid_row_count_Valid() const{
    return m_invalid_row_count_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::getTimestampOutsideRetentionRowsCount() const {
    return m_timestamp_outside_retention_rows_count;
}
void OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::setTimestampOutsideRetentionRowsCount(const QString &timestamp_outside_retention_rows_count) {
    m_timestamp_outside_retention_rows_count = timestamp_outside_retention_rows_count;
    m_timestamp_outside_retention_rows_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::is_timestamp_outside_retention_rows_count_Set() const{
    return m_timestamp_outside_retention_rows_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::is_timestamp_outside_retention_rows_count_Valid() const{
    return m_timestamp_outside_retention_rows_count_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_imported_entity_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_imported_feature_value_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invalid_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_outside_retention_rows_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1ImportFeatureValuesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
