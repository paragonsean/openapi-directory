/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1FeatureView.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1FeatureView::OAIGoogleCloudAiplatformV1beta1FeatureView(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1FeatureView::OAIGoogleCloudAiplatformV1beta1FeatureView() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1FeatureView::~OAIGoogleCloudAiplatformV1beta1FeatureView() {}

void OAIGoogleCloudAiplatformV1beta1FeatureView::initializeModel() {

    m_big_query_source_isSet = false;
    m_big_query_source_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_feature_registry_source_isSet = false;
    m_feature_registry_source_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_service_account_email_isSet = false;
    m_service_account_email_isValid = false;

    m_service_agent_type_isSet = false;
    m_service_agent_type_isValid = false;

    m_sync_config_isSet = false;
    m_sync_config_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_vector_search_config_isSet = false;
    m_vector_search_config_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1FeatureView::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1FeatureView::fromJsonObject(QJsonObject json) {

    m_big_query_source_isValid = ::OpenAPI::fromJsonValue(m_big_query_source, json[QString("bigQuerySource")]);
    m_big_query_source_isSet = !json[QString("bigQuerySource")].isNull() && m_big_query_source_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_feature_registry_source_isValid = ::OpenAPI::fromJsonValue(m_feature_registry_source, json[QString("featureRegistrySource")]);
    m_feature_registry_source_isSet = !json[QString("featureRegistrySource")].isNull() && m_feature_registry_source_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_service_account_email_isValid = ::OpenAPI::fromJsonValue(m_service_account_email, json[QString("serviceAccountEmail")]);
    m_service_account_email_isSet = !json[QString("serviceAccountEmail")].isNull() && m_service_account_email_isValid;

    m_service_agent_type_isValid = ::OpenAPI::fromJsonValue(m_service_agent_type, json[QString("serviceAgentType")]);
    m_service_agent_type_isSet = !json[QString("serviceAgentType")].isNull() && m_service_agent_type_isValid;

    m_sync_config_isValid = ::OpenAPI::fromJsonValue(m_sync_config, json[QString("syncConfig")]);
    m_sync_config_isSet = !json[QString("syncConfig")].isNull() && m_sync_config_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_vector_search_config_isValid = ::OpenAPI::fromJsonValue(m_vector_search_config, json[QString("vectorSearchConfig")]);
    m_vector_search_config_isSet = !json[QString("vectorSearchConfig")].isNull() && m_vector_search_config_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureView::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1FeatureView::asJsonObject() const {
    QJsonObject obj;
    if (m_big_query_source.isSet()) {
        obj.insert(QString("bigQuerySource"), ::OpenAPI::toJsonValue(m_big_query_source));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_feature_registry_source.isSet()) {
        obj.insert(QString("featureRegistrySource"), ::OpenAPI::toJsonValue(m_feature_registry_source));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_service_account_email_isSet) {
        obj.insert(QString("serviceAccountEmail"), ::OpenAPI::toJsonValue(m_service_account_email));
    }
    if (m_service_agent_type_isSet) {
        obj.insert(QString("serviceAgentType"), ::OpenAPI::toJsonValue(m_service_agent_type));
    }
    if (m_sync_config.isSet()) {
        obj.insert(QString("syncConfig"), ::OpenAPI::toJsonValue(m_sync_config));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_vector_search_config.isSet()) {
        obj.insert(QString("vectorSearchConfig"), ::OpenAPI::toJsonValue(m_vector_search_config));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1FeatureViewBigQuerySource OAIGoogleCloudAiplatformV1beta1FeatureView::getBigQuerySource() const {
    return m_big_query_source;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setBigQuerySource(const OAIGoogleCloudAiplatformV1beta1FeatureViewBigQuerySource &big_query_source) {
    m_big_query_source = big_query_source;
    m_big_query_source_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_big_query_source_Set() const{
    return m_big_query_source_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_big_query_source_Valid() const{
    return m_big_query_source_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureView::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureView::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIGoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource OAIGoogleCloudAiplatformV1beta1FeatureView::getFeatureRegistrySource() const {
    return m_feature_registry_source;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setFeatureRegistrySource(const OAIGoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource &feature_registry_source) {
    m_feature_registry_source = feature_registry_source;
    m_feature_registry_source_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_feature_registry_source_Set() const{
    return m_feature_registry_source_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_feature_registry_source_Valid() const{
    return m_feature_registry_source_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1beta1FeatureView::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureView::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureView::getServiceAccountEmail() const {
    return m_service_account_email;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setServiceAccountEmail(const QString &service_account_email) {
    m_service_account_email = service_account_email;
    m_service_account_email_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_service_account_email_Set() const{
    return m_service_account_email_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_service_account_email_Valid() const{
    return m_service_account_email_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureView::getServiceAgentType() const {
    return m_service_agent_type;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setServiceAgentType(const QString &service_agent_type) {
    m_service_agent_type = service_agent_type;
    m_service_agent_type_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_service_agent_type_Set() const{
    return m_service_agent_type_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_service_agent_type_Valid() const{
    return m_service_agent_type_isValid;
}

OAIGoogleCloudAiplatformV1beta1FeatureViewSyncConfig OAIGoogleCloudAiplatformV1beta1FeatureView::getSyncConfig() const {
    return m_sync_config;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setSyncConfig(const OAIGoogleCloudAiplatformV1beta1FeatureViewSyncConfig &sync_config) {
    m_sync_config = sync_config;
    m_sync_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_sync_config_Set() const{
    return m_sync_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_sync_config_Valid() const{
    return m_sync_config_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1FeatureView::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_update_time_Valid() const{
    return m_update_time_isValid;
}

OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig OAIGoogleCloudAiplatformV1beta1FeatureView::getVectorSearchConfig() const {
    return m_vector_search_config;
}
void OAIGoogleCloudAiplatformV1beta1FeatureView::setVectorSearchConfig(const OAIGoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig &vector_search_config) {
    m_vector_search_config = vector_search_config;
    m_vector_search_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_vector_search_config_Set() const{
    return m_vector_search_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::is_vector_search_config_Valid() const{
    return m_vector_search_config_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_big_query_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_registry_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_account_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_agent_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sync_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vector_search_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1FeatureView::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
