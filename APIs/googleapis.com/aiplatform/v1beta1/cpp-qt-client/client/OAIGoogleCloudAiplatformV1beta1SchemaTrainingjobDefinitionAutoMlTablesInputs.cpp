/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::~OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs() {}

void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::initializeModel() {

    m_additional_experiments_isSet = false;
    m_additional_experiments_isValid = false;

    m_disable_early_stopping_isSet = false;
    m_disable_early_stopping_isValid = false;

    m_export_evaluated_data_items_config_isSet = false;
    m_export_evaluated_data_items_config_isValid = false;

    m_optimization_objective_isSet = false;
    m_optimization_objective_isValid = false;

    m_optimization_objective_precision_value_isSet = false;
    m_optimization_objective_precision_value_isValid = false;

    m_optimization_objective_recall_value_isSet = false;
    m_optimization_objective_recall_value_isValid = false;

    m_prediction_type_isSet = false;
    m_prediction_type_isValid = false;

    m_target_column_isSet = false;
    m_target_column_isValid = false;

    m_train_budget_milli_node_hours_isSet = false;
    m_train_budget_milli_node_hours_isValid = false;

    m_transformations_isSet = false;
    m_transformations_isValid = false;

    m_weight_column_name_isSet = false;
    m_weight_column_name_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::fromJsonObject(QJsonObject json) {

    m_additional_experiments_isValid = ::OpenAPI::fromJsonValue(m_additional_experiments, json[QString("additionalExperiments")]);
    m_additional_experiments_isSet = !json[QString("additionalExperiments")].isNull() && m_additional_experiments_isValid;

    m_disable_early_stopping_isValid = ::OpenAPI::fromJsonValue(m_disable_early_stopping, json[QString("disableEarlyStopping")]);
    m_disable_early_stopping_isSet = !json[QString("disableEarlyStopping")].isNull() && m_disable_early_stopping_isValid;

    m_export_evaluated_data_items_config_isValid = ::OpenAPI::fromJsonValue(m_export_evaluated_data_items_config, json[QString("exportEvaluatedDataItemsConfig")]);
    m_export_evaluated_data_items_config_isSet = !json[QString("exportEvaluatedDataItemsConfig")].isNull() && m_export_evaluated_data_items_config_isValid;

    m_optimization_objective_isValid = ::OpenAPI::fromJsonValue(m_optimization_objective, json[QString("optimizationObjective")]);
    m_optimization_objective_isSet = !json[QString("optimizationObjective")].isNull() && m_optimization_objective_isValid;

    m_optimization_objective_precision_value_isValid = ::OpenAPI::fromJsonValue(m_optimization_objective_precision_value, json[QString("optimizationObjectivePrecisionValue")]);
    m_optimization_objective_precision_value_isSet = !json[QString("optimizationObjectivePrecisionValue")].isNull() && m_optimization_objective_precision_value_isValid;

    m_optimization_objective_recall_value_isValid = ::OpenAPI::fromJsonValue(m_optimization_objective_recall_value, json[QString("optimizationObjectiveRecallValue")]);
    m_optimization_objective_recall_value_isSet = !json[QString("optimizationObjectiveRecallValue")].isNull() && m_optimization_objective_recall_value_isValid;

    m_prediction_type_isValid = ::OpenAPI::fromJsonValue(m_prediction_type, json[QString("predictionType")]);
    m_prediction_type_isSet = !json[QString("predictionType")].isNull() && m_prediction_type_isValid;

    m_target_column_isValid = ::OpenAPI::fromJsonValue(m_target_column, json[QString("targetColumn")]);
    m_target_column_isSet = !json[QString("targetColumn")].isNull() && m_target_column_isValid;

    m_train_budget_milli_node_hours_isValid = ::OpenAPI::fromJsonValue(m_train_budget_milli_node_hours, json[QString("trainBudgetMilliNodeHours")]);
    m_train_budget_milli_node_hours_isSet = !json[QString("trainBudgetMilliNodeHours")].isNull() && m_train_budget_milli_node_hours_isValid;

    m_transformations_isValid = ::OpenAPI::fromJsonValue(m_transformations, json[QString("transformations")]);
    m_transformations_isSet = !json[QString("transformations")].isNull() && m_transformations_isValid;

    m_weight_column_name_isValid = ::OpenAPI::fromJsonValue(m_weight_column_name, json[QString("weightColumnName")]);
    m_weight_column_name_isSet = !json[QString("weightColumnName")].isNull() && m_weight_column_name_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_experiments.size() > 0) {
        obj.insert(QString("additionalExperiments"), ::OpenAPI::toJsonValue(m_additional_experiments));
    }
    if (m_disable_early_stopping_isSet) {
        obj.insert(QString("disableEarlyStopping"), ::OpenAPI::toJsonValue(m_disable_early_stopping));
    }
    if (m_export_evaluated_data_items_config.isSet()) {
        obj.insert(QString("exportEvaluatedDataItemsConfig"), ::OpenAPI::toJsonValue(m_export_evaluated_data_items_config));
    }
    if (m_optimization_objective_isSet) {
        obj.insert(QString("optimizationObjective"), ::OpenAPI::toJsonValue(m_optimization_objective));
    }
    if (m_optimization_objective_precision_value_isSet) {
        obj.insert(QString("optimizationObjectivePrecisionValue"), ::OpenAPI::toJsonValue(m_optimization_objective_precision_value));
    }
    if (m_optimization_objective_recall_value_isSet) {
        obj.insert(QString("optimizationObjectiveRecallValue"), ::OpenAPI::toJsonValue(m_optimization_objective_recall_value));
    }
    if (m_prediction_type_isSet) {
        obj.insert(QString("predictionType"), ::OpenAPI::toJsonValue(m_prediction_type));
    }
    if (m_target_column_isSet) {
        obj.insert(QString("targetColumn"), ::OpenAPI::toJsonValue(m_target_column));
    }
    if (m_train_budget_milli_node_hours_isSet) {
        obj.insert(QString("trainBudgetMilliNodeHours"), ::OpenAPI::toJsonValue(m_train_budget_milli_node_hours));
    }
    if (m_transformations.size() > 0) {
        obj.insert(QString("transformations"), ::OpenAPI::toJsonValue(m_transformations));
    }
    if (m_weight_column_name_isSet) {
        obj.insert(QString("weightColumnName"), ::OpenAPI::toJsonValue(m_weight_column_name));
    }
    return obj;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getAdditionalExperiments() const {
    return m_additional_experiments;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setAdditionalExperiments(const QList<QString> &additional_experiments) {
    m_additional_experiments = additional_experiments;
    m_additional_experiments_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_additional_experiments_Set() const{
    return m_additional_experiments_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_additional_experiments_Valid() const{
    return m_additional_experiments_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::isDisableEarlyStopping() const {
    return m_disable_early_stopping;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setDisableEarlyStopping(const bool &disable_early_stopping) {
    m_disable_early_stopping = disable_early_stopping;
    m_disable_early_stopping_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_disable_early_stopping_Set() const{
    return m_disable_early_stopping_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_disable_early_stopping_Valid() const{
    return m_disable_early_stopping_isValid;
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getExportEvaluatedDataItemsConfig() const {
    return m_export_evaluated_data_items_config;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setExportEvaluatedDataItemsConfig(const OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig &export_evaluated_data_items_config) {
    m_export_evaluated_data_items_config = export_evaluated_data_items_config;
    m_export_evaluated_data_items_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_export_evaluated_data_items_config_Set() const{
    return m_export_evaluated_data_items_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_export_evaluated_data_items_config_Valid() const{
    return m_export_evaluated_data_items_config_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getOptimizationObjective() const {
    return m_optimization_objective;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setOptimizationObjective(const QString &optimization_objective) {
    m_optimization_objective = optimization_objective;
    m_optimization_objective_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_optimization_objective_Set() const{
    return m_optimization_objective_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_optimization_objective_Valid() const{
    return m_optimization_objective_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getOptimizationObjectivePrecisionValue() const {
    return m_optimization_objective_precision_value;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setOptimizationObjectivePrecisionValue(const float &optimization_objective_precision_value) {
    m_optimization_objective_precision_value = optimization_objective_precision_value;
    m_optimization_objective_precision_value_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_optimization_objective_precision_value_Set() const{
    return m_optimization_objective_precision_value_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_optimization_objective_precision_value_Valid() const{
    return m_optimization_objective_precision_value_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getOptimizationObjectiveRecallValue() const {
    return m_optimization_objective_recall_value;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setOptimizationObjectiveRecallValue(const float &optimization_objective_recall_value) {
    m_optimization_objective_recall_value = optimization_objective_recall_value;
    m_optimization_objective_recall_value_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_optimization_objective_recall_value_Set() const{
    return m_optimization_objective_recall_value_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_optimization_objective_recall_value_Valid() const{
    return m_optimization_objective_recall_value_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getPredictionType() const {
    return m_prediction_type;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setPredictionType(const QString &prediction_type) {
    m_prediction_type = prediction_type;
    m_prediction_type_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_prediction_type_Set() const{
    return m_prediction_type_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_prediction_type_Valid() const{
    return m_prediction_type_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getTargetColumn() const {
    return m_target_column;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setTargetColumn(const QString &target_column) {
    m_target_column = target_column;
    m_target_column_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_target_column_Set() const{
    return m_target_column_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_target_column_Valid() const{
    return m_target_column_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getTrainBudgetMilliNodeHours() const {
    return m_train_budget_milli_node_hours;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setTrainBudgetMilliNodeHours(const QString &train_budget_milli_node_hours) {
    m_train_budget_milli_node_hours = train_budget_milli_node_hours;
    m_train_budget_milli_node_hours_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_train_budget_milli_node_hours_Set() const{
    return m_train_budget_milli_node_hours_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_train_budget_milli_node_hours_Valid() const{
    return m_train_budget_milli_node_hours_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getTransformations() const {
    return m_transformations;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setTransformations(const QList<OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputsTransformation> &transformations) {
    m_transformations = transformations;
    m_transformations_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_transformations_Set() const{
    return m_transformations_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_transformations_Valid() const{
    return m_transformations_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::getWeightColumnName() const {
    return m_weight_column_name;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::setWeightColumnName(const QString &weight_column_name) {
    m_weight_column_name = weight_column_name;
    m_weight_column_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_weight_column_name_Set() const{
    return m_weight_column_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::is_weight_column_name_Valid() const{
    return m_weight_column_name_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_experiments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_early_stopping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_evaluated_data_items_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_optimization_objective_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_optimization_objective_precision_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_optimization_objective_recall_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prediction_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_target_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_train_budget_milli_node_hours_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transformations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlTablesInputs::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
