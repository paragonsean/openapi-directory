/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1MigratableResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1MigratableResource::OAIGoogleCloudAiplatformV1beta1MigratableResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1MigratableResource::OAIGoogleCloudAiplatformV1beta1MigratableResource() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1MigratableResource::~OAIGoogleCloudAiplatformV1beta1MigratableResource() {}

void OAIGoogleCloudAiplatformV1beta1MigratableResource::initializeModel() {

    m_automl_dataset_isSet = false;
    m_automl_dataset_isValid = false;

    m_automl_model_isSet = false;
    m_automl_model_isValid = false;

    m_data_labeling_dataset_isSet = false;
    m_data_labeling_dataset_isValid = false;

    m_last_migrate_time_isSet = false;
    m_last_migrate_time_isValid = false;

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_ml_engine_model_version_isSet = false;
    m_ml_engine_model_version_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1MigratableResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1MigratableResource::fromJsonObject(QJsonObject json) {

    m_automl_dataset_isValid = ::OpenAPI::fromJsonValue(m_automl_dataset, json[QString("automlDataset")]);
    m_automl_dataset_isSet = !json[QString("automlDataset")].isNull() && m_automl_dataset_isValid;

    m_automl_model_isValid = ::OpenAPI::fromJsonValue(m_automl_model, json[QString("automlModel")]);
    m_automl_model_isSet = !json[QString("automlModel")].isNull() && m_automl_model_isValid;

    m_data_labeling_dataset_isValid = ::OpenAPI::fromJsonValue(m_data_labeling_dataset, json[QString("dataLabelingDataset")]);
    m_data_labeling_dataset_isSet = !json[QString("dataLabelingDataset")].isNull() && m_data_labeling_dataset_isValid;

    m_last_migrate_time_isValid = ::OpenAPI::fromJsonValue(m_last_migrate_time, json[QString("lastMigrateTime")]);
    m_last_migrate_time_isSet = !json[QString("lastMigrateTime")].isNull() && m_last_migrate_time_isValid;

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_ml_engine_model_version_isValid = ::OpenAPI::fromJsonValue(m_ml_engine_model_version, json[QString("mlEngineModelVersion")]);
    m_ml_engine_model_version_isSet = !json[QString("mlEngineModelVersion")].isNull() && m_ml_engine_model_version_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1MigratableResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1MigratableResource::asJsonObject() const {
    QJsonObject obj;
    if (m_automl_dataset.isSet()) {
        obj.insert(QString("automlDataset"), ::OpenAPI::toJsonValue(m_automl_dataset));
    }
    if (m_automl_model.isSet()) {
        obj.insert(QString("automlModel"), ::OpenAPI::toJsonValue(m_automl_model));
    }
    if (m_data_labeling_dataset.isSet()) {
        obj.insert(QString("dataLabelingDataset"), ::OpenAPI::toJsonValue(m_data_labeling_dataset));
    }
    if (m_last_migrate_time_isSet) {
        obj.insert(QString("lastMigrateTime"), ::OpenAPI::toJsonValue(m_last_migrate_time));
    }
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_ml_engine_model_version.isSet()) {
        obj.insert(QString("mlEngineModelVersion"), ::OpenAPI::toJsonValue(m_ml_engine_model_version));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1beta1MigratableResourceAutomlDataset OAIGoogleCloudAiplatformV1beta1MigratableResource::getAutomlDataset() const {
    return m_automl_dataset;
}
void OAIGoogleCloudAiplatformV1beta1MigratableResource::setAutomlDataset(const OAIGoogleCloudAiplatformV1beta1MigratableResourceAutomlDataset &automl_dataset) {
    m_automl_dataset = automl_dataset;
    m_automl_dataset_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_automl_dataset_Set() const{
    return m_automl_dataset_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_automl_dataset_Valid() const{
    return m_automl_dataset_isValid;
}

OAIGoogleCloudAiplatformV1beta1MigratableResourceAutomlModel OAIGoogleCloudAiplatformV1beta1MigratableResource::getAutomlModel() const {
    return m_automl_model;
}
void OAIGoogleCloudAiplatformV1beta1MigratableResource::setAutomlModel(const OAIGoogleCloudAiplatformV1beta1MigratableResourceAutomlModel &automl_model) {
    m_automl_model = automl_model;
    m_automl_model_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_automl_model_Set() const{
    return m_automl_model_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_automl_model_Valid() const{
    return m_automl_model_isValid;
}

OAIGoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDataset OAIGoogleCloudAiplatformV1beta1MigratableResource::getDataLabelingDataset() const {
    return m_data_labeling_dataset;
}
void OAIGoogleCloudAiplatformV1beta1MigratableResource::setDataLabelingDataset(const OAIGoogleCloudAiplatformV1beta1MigratableResourceDataLabelingDataset &data_labeling_dataset) {
    m_data_labeling_dataset = data_labeling_dataset;
    m_data_labeling_dataset_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_data_labeling_dataset_Set() const{
    return m_data_labeling_dataset_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_data_labeling_dataset_Valid() const{
    return m_data_labeling_dataset_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1MigratableResource::getLastMigrateTime() const {
    return m_last_migrate_time;
}
void OAIGoogleCloudAiplatformV1beta1MigratableResource::setLastMigrateTime(const QString &last_migrate_time) {
    m_last_migrate_time = last_migrate_time;
    m_last_migrate_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_last_migrate_time_Set() const{
    return m_last_migrate_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_last_migrate_time_Valid() const{
    return m_last_migrate_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1MigratableResource::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIGoogleCloudAiplatformV1beta1MigratableResource::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

OAIGoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersion OAIGoogleCloudAiplatformV1beta1MigratableResource::getMlEngineModelVersion() const {
    return m_ml_engine_model_version;
}
void OAIGoogleCloudAiplatformV1beta1MigratableResource::setMlEngineModelVersion(const OAIGoogleCloudAiplatformV1beta1MigratableResourceMlEngineModelVersion &ml_engine_model_version) {
    m_ml_engine_model_version = ml_engine_model_version;
    m_ml_engine_model_version_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_ml_engine_model_version_Set() const{
    return m_ml_engine_model_version_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::is_ml_engine_model_version_Valid() const{
    return m_ml_engine_model_version_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automl_dataset.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_automl_model.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_labeling_dataset.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_migrate_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ml_engine_model_version.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1MigratableResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
