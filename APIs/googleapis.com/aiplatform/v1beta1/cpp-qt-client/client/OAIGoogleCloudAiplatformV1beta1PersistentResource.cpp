/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1PersistentResource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1PersistentResource::OAIGoogleCloudAiplatformV1beta1PersistentResource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1PersistentResource::OAIGoogleCloudAiplatformV1beta1PersistentResource() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1PersistentResource::~OAIGoogleCloudAiplatformV1beta1PersistentResource() {}

void OAIGoogleCloudAiplatformV1beta1PersistentResource::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_encryption_spec_isSet = false;
    m_encryption_spec_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_reserved_ip_ranges_isSet = false;
    m_reserved_ip_ranges_isValid = false;

    m_resource_pools_isSet = false;
    m_resource_pools_isValid = false;

    m_resource_runtime_isSet = false;
    m_resource_runtime_isValid = false;

    m_resource_runtime_spec_isSet = false;
    m_resource_runtime_spec_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1PersistentResource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1PersistentResource::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_encryption_spec_isValid = ::OpenAPI::fromJsonValue(m_encryption_spec, json[QString("encryptionSpec")]);
    m_encryption_spec_isSet = !json[QString("encryptionSpec")].isNull() && m_encryption_spec_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_reserved_ip_ranges_isValid = ::OpenAPI::fromJsonValue(m_reserved_ip_ranges, json[QString("reservedIpRanges")]);
    m_reserved_ip_ranges_isSet = !json[QString("reservedIpRanges")].isNull() && m_reserved_ip_ranges_isValid;

    m_resource_pools_isValid = ::OpenAPI::fromJsonValue(m_resource_pools, json[QString("resourcePools")]);
    m_resource_pools_isSet = !json[QString("resourcePools")].isNull() && m_resource_pools_isValid;

    m_resource_runtime_isValid = ::OpenAPI::fromJsonValue(m_resource_runtime, json[QString("resourceRuntime")]);
    m_resource_runtime_isSet = !json[QString("resourceRuntime")].isNull() && m_resource_runtime_isValid;

    m_resource_runtime_spec_isValid = ::OpenAPI::fromJsonValue(m_resource_runtime_spec, json[QString("resourceRuntimeSpec")]);
    m_resource_runtime_spec_isSet = !json[QString("resourceRuntimeSpec")].isNull() && m_resource_runtime_spec_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PersistentResource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1PersistentResource::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_encryption_spec.isSet()) {
        obj.insert(QString("encryptionSpec"), ::OpenAPI::toJsonValue(m_encryption_spec));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_reserved_ip_ranges.size() > 0) {
        obj.insert(QString("reservedIpRanges"), ::OpenAPI::toJsonValue(m_reserved_ip_ranges));
    }
    if (m_resource_pools.size() > 0) {
        obj.insert(QString("resourcePools"), ::OpenAPI::toJsonValue(m_resource_pools));
    }
    if (m_resource_runtime.isSet()) {
        obj.insert(QString("resourceRuntime"), ::OpenAPI::toJsonValue(m_resource_runtime));
    }
    if (m_resource_runtime_spec.isSet()) {
        obj.insert(QString("resourceRuntimeSpec"), ::OpenAPI::toJsonValue(m_resource_runtime_spec));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1PersistentResource::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PersistentResource::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudAiplatformV1beta1EncryptionSpec OAIGoogleCloudAiplatformV1beta1PersistentResource::getEncryptionSpec() const {
    return m_encryption_spec;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setEncryptionSpec(const OAIGoogleCloudAiplatformV1beta1EncryptionSpec &encryption_spec) {
    m_encryption_spec = encryption_spec;
    m_encryption_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_encryption_spec_Set() const{
    return m_encryption_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_encryption_spec_Valid() const{
    return m_encryption_spec_isValid;
}

OAIGoogleRpcStatus OAIGoogleCloudAiplatformV1beta1PersistentResource::getError() const {
    return m_error;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setError(const OAIGoogleRpcStatus &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_error_Set() const{
    return m_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_error_Valid() const{
    return m_error_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1beta1PersistentResource::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PersistentResource::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PersistentResource::getNetwork() const {
    return m_network;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_network_Set() const{
    return m_network_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_network_Valid() const{
    return m_network_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1PersistentResource::getReservedIpRanges() const {
    return m_reserved_ip_ranges;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setReservedIpRanges(const QList<QString> &reserved_ip_ranges) {
    m_reserved_ip_ranges = reserved_ip_ranges;
    m_reserved_ip_ranges_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_reserved_ip_ranges_Set() const{
    return m_reserved_ip_ranges_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_reserved_ip_ranges_Valid() const{
    return m_reserved_ip_ranges_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1ResourcePool> OAIGoogleCloudAiplatformV1beta1PersistentResource::getResourcePools() const {
    return m_resource_pools;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setResourcePools(const QList<OAIGoogleCloudAiplatformV1beta1ResourcePool> &resource_pools) {
    m_resource_pools = resource_pools;
    m_resource_pools_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_resource_pools_Set() const{
    return m_resource_pools_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_resource_pools_Valid() const{
    return m_resource_pools_isValid;
}

OAIGoogleCloudAiplatformV1beta1ResourceRuntime OAIGoogleCloudAiplatformV1beta1PersistentResource::getResourceRuntime() const {
    return m_resource_runtime;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setResourceRuntime(const OAIGoogleCloudAiplatformV1beta1ResourceRuntime &resource_runtime) {
    m_resource_runtime = resource_runtime;
    m_resource_runtime_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_resource_runtime_Set() const{
    return m_resource_runtime_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_resource_runtime_Valid() const{
    return m_resource_runtime_isValid;
}

OAIGoogleCloudAiplatformV1beta1ResourceRuntimeSpec OAIGoogleCloudAiplatformV1beta1PersistentResource::getResourceRuntimeSpec() const {
    return m_resource_runtime_spec;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setResourceRuntimeSpec(const OAIGoogleCloudAiplatformV1beta1ResourceRuntimeSpec &resource_runtime_spec) {
    m_resource_runtime_spec = resource_runtime_spec;
    m_resource_runtime_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_resource_runtime_spec_Set() const{
    return m_resource_runtime_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_resource_runtime_spec_Valid() const{
    return m_resource_runtime_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PersistentResource::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PersistentResource::getState() const {
    return m_state;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PersistentResource::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1beta1PersistentResource::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reserved_ip_ranges.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_pools.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_runtime.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_runtime_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1PersistentResource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
