/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1EntityType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1EntityType::OAIGoogleCloudAiplatformV1beta1EntityType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1EntityType::OAIGoogleCloudAiplatformV1beta1EntityType() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1EntityType::~OAIGoogleCloudAiplatformV1beta1EntityType() {}

void OAIGoogleCloudAiplatformV1beta1EntityType::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_monitoring_config_isSet = false;
    m_monitoring_config_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_offline_storage_ttl_days_isSet = false;
    m_offline_storage_ttl_days_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1EntityType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1EntityType::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_monitoring_config_isValid = ::OpenAPI::fromJsonValue(m_monitoring_config, json[QString("monitoringConfig")]);
    m_monitoring_config_isSet = !json[QString("monitoringConfig")].isNull() && m_monitoring_config_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_offline_storage_ttl_days_isValid = ::OpenAPI::fromJsonValue(m_offline_storage_ttl_days, json[QString("offlineStorageTtlDays")]);
    m_offline_storage_ttl_days_isSet = !json[QString("offlineStorageTtlDays")].isNull() && m_offline_storage_ttl_days_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1EntityType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1EntityType::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_monitoring_config.isSet()) {
        obj.insert(QString("monitoringConfig"), ::OpenAPI::toJsonValue(m_monitoring_config));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_offline_storage_ttl_days_isSet) {
        obj.insert(QString("offlineStorageTtlDays"), ::OpenAPI::toJsonValue(m_offline_storage_ttl_days));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1EntityType::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1beta1EntityType::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1EntityType::getDescription() const {
    return m_description;
}
void OAIGoogleCloudAiplatformV1beta1EntityType::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1EntityType::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1beta1EntityType::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_etag_Valid() const{
    return m_etag_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1beta1EntityType::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1beta1EntityType::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_labels_Valid() const{
    return m_labels_isValid;
}

OAIGoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig OAIGoogleCloudAiplatformV1beta1EntityType::getMonitoringConfig() const {
    return m_monitoring_config;
}
void OAIGoogleCloudAiplatformV1beta1EntityType::setMonitoringConfig(const OAIGoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig &monitoring_config) {
    m_monitoring_config = monitoring_config;
    m_monitoring_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_monitoring_config_Set() const{
    return m_monitoring_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_monitoring_config_Valid() const{
    return m_monitoring_config_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1EntityType::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1beta1EntityType::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1EntityType::getOfflineStorageTtlDays() const {
    return m_offline_storage_ttl_days;
}
void OAIGoogleCloudAiplatformV1beta1EntityType::setOfflineStorageTtlDays(const qint32 &offline_storage_ttl_days) {
    m_offline_storage_ttl_days = offline_storage_ttl_days;
    m_offline_storage_ttl_days_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_offline_storage_ttl_days_Set() const{
    return m_offline_storage_ttl_days_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_offline_storage_ttl_days_Valid() const{
    return m_offline_storage_ttl_days_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1EntityType::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1beta1EntityType::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_offline_storage_ttl_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1EntityType::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
