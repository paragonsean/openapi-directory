/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::~OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig() {}

void OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::initializeModel() {

    m_failure_policy_isSet = false;
    m_failure_policy_isValid = false;

    m_gcs_output_directory_isSet = false;
    m_gcs_output_directory_isValid = false;

    m_input_artifacts_isSet = false;
    m_input_artifacts_isValid = false;

    m_parameter_values_isSet = false;
    m_parameter_values_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::fromJsonObject(QJsonObject json) {

    m_failure_policy_isValid = ::OpenAPI::fromJsonValue(m_failure_policy, json[QString("failurePolicy")]);
    m_failure_policy_isSet = !json[QString("failurePolicy")].isNull() && m_failure_policy_isValid;

    m_gcs_output_directory_isValid = ::OpenAPI::fromJsonValue(m_gcs_output_directory, json[QString("gcsOutputDirectory")]);
    m_gcs_output_directory_isSet = !json[QString("gcsOutputDirectory")].isNull() && m_gcs_output_directory_isValid;

    m_input_artifacts_isValid = ::OpenAPI::fromJsonValue(m_input_artifacts, json[QString("inputArtifacts")]);
    m_input_artifacts_isSet = !json[QString("inputArtifacts")].isNull() && m_input_artifacts_isValid;

    m_parameter_values_isValid = ::OpenAPI::fromJsonValue(m_parameter_values, json[QString("parameterValues")]);
    m_parameter_values_isSet = !json[QString("parameterValues")].isNull() && m_parameter_values_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_failure_policy_isSet) {
        obj.insert(QString("failurePolicy"), ::OpenAPI::toJsonValue(m_failure_policy));
    }
    if (m_gcs_output_directory_isSet) {
        obj.insert(QString("gcsOutputDirectory"), ::OpenAPI::toJsonValue(m_gcs_output_directory));
    }
    if (m_input_artifacts.size() > 0) {
        obj.insert(QString("inputArtifacts"), ::OpenAPI::toJsonValue(m_input_artifacts));
    }
    if (m_parameter_values.size() > 0) {
        obj.insert(QString("parameterValues"), ::OpenAPI::toJsonValue(m_parameter_values));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::getFailurePolicy() const {
    return m_failure_policy;
}
void OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::setFailurePolicy(const QString &failure_policy) {
    m_failure_policy = failure_policy;
    m_failure_policy_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_failure_policy_Set() const{
    return m_failure_policy_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_failure_policy_Valid() const{
    return m_failure_policy_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::getGcsOutputDirectory() const {
    return m_gcs_output_directory;
}
void OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::setGcsOutputDirectory(const QString &gcs_output_directory) {
    m_gcs_output_directory = gcs_output_directory;
    m_gcs_output_directory_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_gcs_output_directory_Set() const{
    return m_gcs_output_directory_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_gcs_output_directory_Valid() const{
    return m_gcs_output_directory_isValid;
}

QMap<QString, OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifact> OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::getInputArtifacts() const {
    return m_input_artifacts;
}
void OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::setInputArtifacts(const QMap<QString, OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfigInputArtifact> &input_artifacts) {
    m_input_artifacts = input_artifacts;
    m_input_artifacts_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_input_artifacts_Set() const{
    return m_input_artifacts_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_input_artifacts_Valid() const{
    return m_input_artifacts_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::getParameterValues() const {
    return m_parameter_values;
}
void OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::setParameterValues(const QMap<QString, QJsonValue> &parameter_values) {
    m_parameter_values = parameter_values;
    m_parameter_values_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_parameter_values_Set() const{
    return m_parameter_values_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_parameter_values_Valid() const{
    return m_parameter_values_isValid;
}

QMap<QString, OAIGoogleCloudAiplatformV1beta1Value> OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::setParameters(const QMap<QString, OAIGoogleCloudAiplatformV1beta1Value> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failure_policy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gcs_output_directory_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_artifacts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameter_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1PipelineJobRuntimeConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
