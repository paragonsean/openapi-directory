/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::~OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader() {}

void OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::initializeModel() {

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_feature_descriptors_isSet = false;
    m_feature_descriptors_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::fromJsonObject(QJsonObject json) {

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("entityType")]);
    m_entity_type_isSet = !json[QString("entityType")].isNull() && m_entity_type_isValid;

    m_feature_descriptors_isValid = ::OpenAPI::fromJsonValue(m_feature_descriptors, json[QString("featureDescriptors")]);
    m_feature_descriptors_isSet = !json[QString("featureDescriptors")].isNull() && m_feature_descriptors_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_type_isSet) {
        obj.insert(QString("entityType"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_feature_descriptors.size() > 0) {
        obj.insert(QString("featureDescriptors"), ::OpenAPI::toJsonValue(m_feature_descriptors));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::getEntityType() const {
    return m_entity_type;
}
void OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::setEntityType(const QString &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFeatureDescriptor> OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::getFeatureDescriptors() const {
    return m_feature_descriptors;
}
void OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::setFeatureDescriptors(const QList<OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseFeatureDescriptor> &feature_descriptors) {
    m_feature_descriptors = feature_descriptors;
    m_feature_descriptors_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::is_feature_descriptors_Set() const{
    return m_feature_descriptors_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::is_feature_descriptors_Valid() const{
    return m_feature_descriptors_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_descriptors.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1ReadFeatureValuesResponseHeader::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
