/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::~OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics() {}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::initializeModel() {

    m_mean_absolute_error_isSet = false;
    m_mean_absolute_error_isValid = false;

    m_mean_absolute_percentage_error_isSet = false;
    m_mean_absolute_percentage_error_isValid = false;

    m_quantile_metrics_isSet = false;
    m_quantile_metrics_isValid = false;

    m_r_squared_isSet = false;
    m_r_squared_isValid = false;

    m_root_mean_squared_error_isSet = false;
    m_root_mean_squared_error_isValid = false;

    m_root_mean_squared_log_error_isSet = false;
    m_root_mean_squared_log_error_isValid = false;

    m_root_mean_squared_percentage_error_isSet = false;
    m_root_mean_squared_percentage_error_isValid = false;

    m_weighted_absolute_percentage_error_isSet = false;
    m_weighted_absolute_percentage_error_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::fromJsonObject(QJsonObject json) {

    m_mean_absolute_error_isValid = ::OpenAPI::fromJsonValue(m_mean_absolute_error, json[QString("meanAbsoluteError")]);
    m_mean_absolute_error_isSet = !json[QString("meanAbsoluteError")].isNull() && m_mean_absolute_error_isValid;

    m_mean_absolute_percentage_error_isValid = ::OpenAPI::fromJsonValue(m_mean_absolute_percentage_error, json[QString("meanAbsolutePercentageError")]);
    m_mean_absolute_percentage_error_isSet = !json[QString("meanAbsolutePercentageError")].isNull() && m_mean_absolute_percentage_error_isValid;

    m_quantile_metrics_isValid = ::OpenAPI::fromJsonValue(m_quantile_metrics, json[QString("quantileMetrics")]);
    m_quantile_metrics_isSet = !json[QString("quantileMetrics")].isNull() && m_quantile_metrics_isValid;

    m_r_squared_isValid = ::OpenAPI::fromJsonValue(m_r_squared, json[QString("rSquared")]);
    m_r_squared_isSet = !json[QString("rSquared")].isNull() && m_r_squared_isValid;

    m_root_mean_squared_error_isValid = ::OpenAPI::fromJsonValue(m_root_mean_squared_error, json[QString("rootMeanSquaredError")]);
    m_root_mean_squared_error_isSet = !json[QString("rootMeanSquaredError")].isNull() && m_root_mean_squared_error_isValid;

    m_root_mean_squared_log_error_isValid = ::OpenAPI::fromJsonValue(m_root_mean_squared_log_error, json[QString("rootMeanSquaredLogError")]);
    m_root_mean_squared_log_error_isSet = !json[QString("rootMeanSquaredLogError")].isNull() && m_root_mean_squared_log_error_isValid;

    m_root_mean_squared_percentage_error_isValid = ::OpenAPI::fromJsonValue(m_root_mean_squared_percentage_error, json[QString("rootMeanSquaredPercentageError")]);
    m_root_mean_squared_percentage_error_isSet = !json[QString("rootMeanSquaredPercentageError")].isNull() && m_root_mean_squared_percentage_error_isValid;

    m_weighted_absolute_percentage_error_isValid = ::OpenAPI::fromJsonValue(m_weighted_absolute_percentage_error, json[QString("weightedAbsolutePercentageError")]);
    m_weighted_absolute_percentage_error_isSet = !json[QString("weightedAbsolutePercentageError")].isNull() && m_weighted_absolute_percentage_error_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_mean_absolute_error_isSet) {
        obj.insert(QString("meanAbsoluteError"), ::OpenAPI::toJsonValue(m_mean_absolute_error));
    }
    if (m_mean_absolute_percentage_error_isSet) {
        obj.insert(QString("meanAbsolutePercentageError"), ::OpenAPI::toJsonValue(m_mean_absolute_percentage_error));
    }
    if (m_quantile_metrics.size() > 0) {
        obj.insert(QString("quantileMetrics"), ::OpenAPI::toJsonValue(m_quantile_metrics));
    }
    if (m_r_squared_isSet) {
        obj.insert(QString("rSquared"), ::OpenAPI::toJsonValue(m_r_squared));
    }
    if (m_root_mean_squared_error_isSet) {
        obj.insert(QString("rootMeanSquaredError"), ::OpenAPI::toJsonValue(m_root_mean_squared_error));
    }
    if (m_root_mean_squared_log_error_isSet) {
        obj.insert(QString("rootMeanSquaredLogError"), ::OpenAPI::toJsonValue(m_root_mean_squared_log_error));
    }
    if (m_root_mean_squared_percentage_error_isSet) {
        obj.insert(QString("rootMeanSquaredPercentageError"), ::OpenAPI::toJsonValue(m_root_mean_squared_percentage_error));
    }
    if (m_weighted_absolute_percentage_error_isSet) {
        obj.insert(QString("weightedAbsolutePercentageError"), ::OpenAPI::toJsonValue(m_weighted_absolute_percentage_error));
    }
    return obj;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::getMeanAbsoluteError() const {
    return m_mean_absolute_error;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::setMeanAbsoluteError(const float &mean_absolute_error) {
    m_mean_absolute_error = mean_absolute_error;
    m_mean_absolute_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_mean_absolute_error_Set() const{
    return m_mean_absolute_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_mean_absolute_error_Valid() const{
    return m_mean_absolute_error_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::getMeanAbsolutePercentageError() const {
    return m_mean_absolute_percentage_error;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::setMeanAbsolutePercentageError(const float &mean_absolute_percentage_error) {
    m_mean_absolute_percentage_error = mean_absolute_percentage_error;
    m_mean_absolute_percentage_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_mean_absolute_percentage_error_Set() const{
    return m_mean_absolute_percentage_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_mean_absolute_percentage_error_Valid() const{
    return m_mean_absolute_percentage_error_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry> OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::getQuantileMetrics() const {
    return m_quantile_metrics;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::setQuantileMetrics(const QList<OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry> &quantile_metrics) {
    m_quantile_metrics = quantile_metrics;
    m_quantile_metrics_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_quantile_metrics_Set() const{
    return m_quantile_metrics_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_quantile_metrics_Valid() const{
    return m_quantile_metrics_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::getRSquared() const {
    return m_r_squared;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::setRSquared(const float &r_squared) {
    m_r_squared = r_squared;
    m_r_squared_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_r_squared_Set() const{
    return m_r_squared_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_r_squared_Valid() const{
    return m_r_squared_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::getRootMeanSquaredError() const {
    return m_root_mean_squared_error;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::setRootMeanSquaredError(const float &root_mean_squared_error) {
    m_root_mean_squared_error = root_mean_squared_error;
    m_root_mean_squared_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_root_mean_squared_error_Set() const{
    return m_root_mean_squared_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_root_mean_squared_error_Valid() const{
    return m_root_mean_squared_error_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::getRootMeanSquaredLogError() const {
    return m_root_mean_squared_log_error;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::setRootMeanSquaredLogError(const float &root_mean_squared_log_error) {
    m_root_mean_squared_log_error = root_mean_squared_log_error;
    m_root_mean_squared_log_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_root_mean_squared_log_error_Set() const{
    return m_root_mean_squared_log_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_root_mean_squared_log_error_Valid() const{
    return m_root_mean_squared_log_error_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::getRootMeanSquaredPercentageError() const {
    return m_root_mean_squared_percentage_error;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::setRootMeanSquaredPercentageError(const float &root_mean_squared_percentage_error) {
    m_root_mean_squared_percentage_error = root_mean_squared_percentage_error;
    m_root_mean_squared_percentage_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_root_mean_squared_percentage_error_Set() const{
    return m_root_mean_squared_percentage_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_root_mean_squared_percentage_error_Valid() const{
    return m_root_mean_squared_percentage_error_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::getWeightedAbsolutePercentageError() const {
    return m_weighted_absolute_percentage_error;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::setWeightedAbsolutePercentageError(const float &weighted_absolute_percentage_error) {
    m_weighted_absolute_percentage_error = weighted_absolute_percentage_error;
    m_weighted_absolute_percentage_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_weighted_absolute_percentage_error_Set() const{
    return m_weighted_absolute_percentage_error_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::is_weighted_absolute_percentage_error_Valid() const{
    return m_weighted_absolute_percentage_error_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mean_absolute_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mean_absolute_percentage_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantile_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_squared_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_root_mean_squared_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_root_mean_squared_log_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_root_mean_squared_percentage_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weighted_absolute_percentage_error_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsForecastingEvaluationMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
