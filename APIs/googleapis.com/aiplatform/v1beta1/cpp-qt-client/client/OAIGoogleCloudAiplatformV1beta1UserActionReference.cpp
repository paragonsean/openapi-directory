/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1UserActionReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1UserActionReference::OAIGoogleCloudAiplatformV1beta1UserActionReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1UserActionReference::OAIGoogleCloudAiplatformV1beta1UserActionReference() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1UserActionReference::~OAIGoogleCloudAiplatformV1beta1UserActionReference() {}

void OAIGoogleCloudAiplatformV1beta1UserActionReference::initializeModel() {

    m_data_labeling_job_isSet = false;
    m_data_labeling_job_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1UserActionReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1UserActionReference::fromJsonObject(QJsonObject json) {

    m_data_labeling_job_isValid = ::OpenAPI::fromJsonValue(m_data_labeling_job, json[QString("dataLabelingJob")]);
    m_data_labeling_job_isSet = !json[QString("dataLabelingJob")].isNull() && m_data_labeling_job_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1UserActionReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1UserActionReference::asJsonObject() const {
    QJsonObject obj;
    if (m_data_labeling_job_isSet) {
        obj.insert(QString("dataLabelingJob"), ::OpenAPI::toJsonValue(m_data_labeling_job));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1UserActionReference::getDataLabelingJob() const {
    return m_data_labeling_job;
}
void OAIGoogleCloudAiplatformV1beta1UserActionReference::setDataLabelingJob(const QString &data_labeling_job) {
    m_data_labeling_job = data_labeling_job;
    m_data_labeling_job_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1UserActionReference::is_data_labeling_job_Set() const{
    return m_data_labeling_job_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1UserActionReference::is_data_labeling_job_Valid() const{
    return m_data_labeling_job_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1UserActionReference::getMethod() const {
    return m_method;
}
void OAIGoogleCloudAiplatformV1beta1UserActionReference::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1UserActionReference::is_method_Set() const{
    return m_method_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1UserActionReference::is_method_Valid() const{
    return m_method_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1UserActionReference::getOperation() const {
    return m_operation;
}
void OAIGoogleCloudAiplatformV1beta1UserActionReference::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1UserActionReference::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1UserActionReference::is_operation_Valid() const{
    return m_operation_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1UserActionReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_labeling_job_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1UserActionReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
