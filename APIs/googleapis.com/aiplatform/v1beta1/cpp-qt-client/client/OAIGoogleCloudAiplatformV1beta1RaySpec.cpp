/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1RaySpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1RaySpec::OAIGoogleCloudAiplatformV1beta1RaySpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1RaySpec::OAIGoogleCloudAiplatformV1beta1RaySpec() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1RaySpec::~OAIGoogleCloudAiplatformV1beta1RaySpec() {}

void OAIGoogleCloudAiplatformV1beta1RaySpec::initializeModel() {

    m_head_node_resource_pool_id_isSet = false;
    m_head_node_resource_pool_id_isValid = false;

    m_image_uri_isSet = false;
    m_image_uri_isValid = false;

    m_ray_metric_spec_isSet = false;
    m_ray_metric_spec_isValid = false;

    m_resource_pool_images_isSet = false;
    m_resource_pool_images_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1RaySpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1RaySpec::fromJsonObject(QJsonObject json) {

    m_head_node_resource_pool_id_isValid = ::OpenAPI::fromJsonValue(m_head_node_resource_pool_id, json[QString("headNodeResourcePoolId")]);
    m_head_node_resource_pool_id_isSet = !json[QString("headNodeResourcePoolId")].isNull() && m_head_node_resource_pool_id_isValid;

    m_image_uri_isValid = ::OpenAPI::fromJsonValue(m_image_uri, json[QString("imageUri")]);
    m_image_uri_isSet = !json[QString("imageUri")].isNull() && m_image_uri_isValid;

    m_ray_metric_spec_isValid = ::OpenAPI::fromJsonValue(m_ray_metric_spec, json[QString("rayMetricSpec")]);
    m_ray_metric_spec_isSet = !json[QString("rayMetricSpec")].isNull() && m_ray_metric_spec_isValid;

    m_resource_pool_images_isValid = ::OpenAPI::fromJsonValue(m_resource_pool_images, json[QString("resourcePoolImages")]);
    m_resource_pool_images_isSet = !json[QString("resourcePoolImages")].isNull() && m_resource_pool_images_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1RaySpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1RaySpec::asJsonObject() const {
    QJsonObject obj;
    if (m_head_node_resource_pool_id_isSet) {
        obj.insert(QString("headNodeResourcePoolId"), ::OpenAPI::toJsonValue(m_head_node_resource_pool_id));
    }
    if (m_image_uri_isSet) {
        obj.insert(QString("imageUri"), ::OpenAPI::toJsonValue(m_image_uri));
    }
    if (m_ray_metric_spec.isSet()) {
        obj.insert(QString("rayMetricSpec"), ::OpenAPI::toJsonValue(m_ray_metric_spec));
    }
    if (m_resource_pool_images.size() > 0) {
        obj.insert(QString("resourcePoolImages"), ::OpenAPI::toJsonValue(m_resource_pool_images));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1RaySpec::getHeadNodeResourcePoolId() const {
    return m_head_node_resource_pool_id;
}
void OAIGoogleCloudAiplatformV1beta1RaySpec::setHeadNodeResourcePoolId(const QString &head_node_resource_pool_id) {
    m_head_node_resource_pool_id = head_node_resource_pool_id;
    m_head_node_resource_pool_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::is_head_node_resource_pool_id_Set() const{
    return m_head_node_resource_pool_id_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::is_head_node_resource_pool_id_Valid() const{
    return m_head_node_resource_pool_id_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1RaySpec::getImageUri() const {
    return m_image_uri;
}
void OAIGoogleCloudAiplatformV1beta1RaySpec::setImageUri(const QString &image_uri) {
    m_image_uri = image_uri;
    m_image_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::is_image_uri_Set() const{
    return m_image_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::is_image_uri_Valid() const{
    return m_image_uri_isValid;
}

OAIGoogleCloudAiplatformV1beta1RayMetricSpec OAIGoogleCloudAiplatformV1beta1RaySpec::getRayMetricSpec() const {
    return m_ray_metric_spec;
}
void OAIGoogleCloudAiplatformV1beta1RaySpec::setRayMetricSpec(const OAIGoogleCloudAiplatformV1beta1RayMetricSpec &ray_metric_spec) {
    m_ray_metric_spec = ray_metric_spec;
    m_ray_metric_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::is_ray_metric_spec_Set() const{
    return m_ray_metric_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::is_ray_metric_spec_Valid() const{
    return m_ray_metric_spec_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1beta1RaySpec::getResourcePoolImages() const {
    return m_resource_pool_images;
}
void OAIGoogleCloudAiplatformV1beta1RaySpec::setResourcePoolImages(const QMap<QString, QString> &resource_pool_images) {
    m_resource_pool_images = resource_pool_images;
    m_resource_pool_images_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::is_resource_pool_images_Set() const{
    return m_resource_pool_images_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::is_resource_pool_images_Valid() const{
    return m_resource_pool_images_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_head_node_resource_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ray_metric_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_pool_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1RaySpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
