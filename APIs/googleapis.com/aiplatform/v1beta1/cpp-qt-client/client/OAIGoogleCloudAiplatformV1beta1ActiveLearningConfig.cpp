/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::~OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig() {}

void OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::initializeModel() {

    m_max_data_item_count_isSet = false;
    m_max_data_item_count_isValid = false;

    m_max_data_item_percentage_isSet = false;
    m_max_data_item_percentage_isValid = false;

    m_sample_config_isSet = false;
    m_sample_config_isValid = false;

    m_training_config_isSet = false;
    m_training_config_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::fromJsonObject(QJsonObject json) {

    m_max_data_item_count_isValid = ::OpenAPI::fromJsonValue(m_max_data_item_count, json[QString("maxDataItemCount")]);
    m_max_data_item_count_isSet = !json[QString("maxDataItemCount")].isNull() && m_max_data_item_count_isValid;

    m_max_data_item_percentage_isValid = ::OpenAPI::fromJsonValue(m_max_data_item_percentage, json[QString("maxDataItemPercentage")]);
    m_max_data_item_percentage_isSet = !json[QString("maxDataItemPercentage")].isNull() && m_max_data_item_percentage_isValid;

    m_sample_config_isValid = ::OpenAPI::fromJsonValue(m_sample_config, json[QString("sampleConfig")]);
    m_sample_config_isSet = !json[QString("sampleConfig")].isNull() && m_sample_config_isValid;

    m_training_config_isValid = ::OpenAPI::fromJsonValue(m_training_config, json[QString("trainingConfig")]);
    m_training_config_isSet = !json[QString("trainingConfig")].isNull() && m_training_config_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_max_data_item_count_isSet) {
        obj.insert(QString("maxDataItemCount"), ::OpenAPI::toJsonValue(m_max_data_item_count));
    }
    if (m_max_data_item_percentage_isSet) {
        obj.insert(QString("maxDataItemPercentage"), ::OpenAPI::toJsonValue(m_max_data_item_percentage));
    }
    if (m_sample_config.isSet()) {
        obj.insert(QString("sampleConfig"), ::OpenAPI::toJsonValue(m_sample_config));
    }
    if (m_training_config.isSet()) {
        obj.insert(QString("trainingConfig"), ::OpenAPI::toJsonValue(m_training_config));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::getMaxDataItemCount() const {
    return m_max_data_item_count;
}
void OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::setMaxDataItemCount(const QString &max_data_item_count) {
    m_max_data_item_count = max_data_item_count;
    m_max_data_item_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::is_max_data_item_count_Set() const{
    return m_max_data_item_count_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::is_max_data_item_count_Valid() const{
    return m_max_data_item_count_isValid;
}

qint32 OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::getMaxDataItemPercentage() const {
    return m_max_data_item_percentage;
}
void OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::setMaxDataItemPercentage(const qint32 &max_data_item_percentage) {
    m_max_data_item_percentage = max_data_item_percentage;
    m_max_data_item_percentage_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::is_max_data_item_percentage_Set() const{
    return m_max_data_item_percentage_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::is_max_data_item_percentage_Valid() const{
    return m_max_data_item_percentage_isValid;
}

OAIGoogleCloudAiplatformV1beta1SampleConfig OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::getSampleConfig() const {
    return m_sample_config;
}
void OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::setSampleConfig(const OAIGoogleCloudAiplatformV1beta1SampleConfig &sample_config) {
    m_sample_config = sample_config;
    m_sample_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::is_sample_config_Set() const{
    return m_sample_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::is_sample_config_Valid() const{
    return m_sample_config_isValid;
}

OAIGoogleCloudAiplatformV1beta1TrainingConfig OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::getTrainingConfig() const {
    return m_training_config;
}
void OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::setTrainingConfig(const OAIGoogleCloudAiplatformV1beta1TrainingConfig &training_config) {
    m_training_config = training_config;
    m_training_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::is_training_config_Set() const{
    return m_training_config_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::is_training_config_Valid() const{
    return m_training_config_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_max_data_item_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_data_item_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sample_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1ActiveLearningConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
