/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::~OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig() {}

void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::initializeModel() {

    m_group_columns_isSet = false;
    m_group_columns_isValid = false;

    m_group_temporal_total_weight_isSet = false;
    m_group_temporal_total_weight_isValid = false;

    m_group_total_weight_isSet = false;
    m_group_total_weight_isValid = false;

    m_temporal_total_weight_isSet = false;
    m_temporal_total_weight_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::fromJsonObject(QJsonObject json) {

    m_group_columns_isValid = ::OpenAPI::fromJsonValue(m_group_columns, json[QString("groupColumns")]);
    m_group_columns_isSet = !json[QString("groupColumns")].isNull() && m_group_columns_isValid;

    m_group_temporal_total_weight_isValid = ::OpenAPI::fromJsonValue(m_group_temporal_total_weight, json[QString("groupTemporalTotalWeight")]);
    m_group_temporal_total_weight_isSet = !json[QString("groupTemporalTotalWeight")].isNull() && m_group_temporal_total_weight_isValid;

    m_group_total_weight_isValid = ::OpenAPI::fromJsonValue(m_group_total_weight, json[QString("groupTotalWeight")]);
    m_group_total_weight_isSet = !json[QString("groupTotalWeight")].isNull() && m_group_total_weight_isValid;

    m_temporal_total_weight_isValid = ::OpenAPI::fromJsonValue(m_temporal_total_weight, json[QString("temporalTotalWeight")]);
    m_temporal_total_weight_isSet = !json[QString("temporalTotalWeight")].isNull() && m_temporal_total_weight_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_group_columns.size() > 0) {
        obj.insert(QString("groupColumns"), ::OpenAPI::toJsonValue(m_group_columns));
    }
    if (m_group_temporal_total_weight_isSet) {
        obj.insert(QString("groupTemporalTotalWeight"), ::OpenAPI::toJsonValue(m_group_temporal_total_weight));
    }
    if (m_group_total_weight_isSet) {
        obj.insert(QString("groupTotalWeight"), ::OpenAPI::toJsonValue(m_group_total_weight));
    }
    if (m_temporal_total_weight_isSet) {
        obj.insert(QString("temporalTotalWeight"), ::OpenAPI::toJsonValue(m_temporal_total_weight));
    }
    return obj;
}

QList<QString> OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::getGroupColumns() const {
    return m_group_columns;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::setGroupColumns(const QList<QString> &group_columns) {
    m_group_columns = group_columns;
    m_group_columns_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::is_group_columns_Set() const{
    return m_group_columns_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::is_group_columns_Valid() const{
    return m_group_columns_isValid;
}

double OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::getGroupTemporalTotalWeight() const {
    return m_group_temporal_total_weight;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::setGroupTemporalTotalWeight(const double &group_temporal_total_weight) {
    m_group_temporal_total_weight = group_temporal_total_weight;
    m_group_temporal_total_weight_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::is_group_temporal_total_weight_Set() const{
    return m_group_temporal_total_weight_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::is_group_temporal_total_weight_Valid() const{
    return m_group_temporal_total_weight_isValid;
}

double OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::getGroupTotalWeight() const {
    return m_group_total_weight;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::setGroupTotalWeight(const double &group_total_weight) {
    m_group_total_weight = group_total_weight;
    m_group_total_weight_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::is_group_total_weight_Set() const{
    return m_group_total_weight_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::is_group_total_weight_Valid() const{
    return m_group_total_weight_isValid;
}

double OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::getTemporalTotalWeight() const {
    return m_temporal_total_weight;
}
void OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::setTemporalTotalWeight(const double &temporal_total_weight) {
    m_temporal_total_weight = temporal_total_weight;
    m_temporal_total_weight_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::is_temporal_total_weight_Set() const{
    return m_temporal_total_weight_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::is_temporal_total_weight_Valid() const{
    return m_temporal_total_weight_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_temporal_total_weight_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_total_weight_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_temporal_total_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionHierarchyConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
