/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILearningGenaiRootGroundingMetadataCitation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILearningGenaiRootGroundingMetadataCitation::OAILearningGenaiRootGroundingMetadataCitation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILearningGenaiRootGroundingMetadataCitation::OAILearningGenaiRootGroundingMetadataCitation() {
    this->initializeModel();
}

OAILearningGenaiRootGroundingMetadataCitation::~OAILearningGenaiRootGroundingMetadataCitation() {}

void OAILearningGenaiRootGroundingMetadataCitation::initializeModel() {

    m_end_index_isSet = false;
    m_end_index_isValid = false;

    m_fact_index_isSet = false;
    m_fact_index_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;

    m_start_index_isSet = false;
    m_start_index_isValid = false;
}

void OAILearningGenaiRootGroundingMetadataCitation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILearningGenaiRootGroundingMetadataCitation::fromJsonObject(QJsonObject json) {

    m_end_index_isValid = ::OpenAPI::fromJsonValue(m_end_index, json[QString("endIndex")]);
    m_end_index_isSet = !json[QString("endIndex")].isNull() && m_end_index_isValid;

    m_fact_index_isValid = ::OpenAPI::fromJsonValue(m_fact_index, json[QString("factIndex")]);
    m_fact_index_isSet = !json[QString("factIndex")].isNull() && m_fact_index_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;

    m_start_index_isValid = ::OpenAPI::fromJsonValue(m_start_index, json[QString("startIndex")]);
    m_start_index_isSet = !json[QString("startIndex")].isNull() && m_start_index_isValid;
}

QString OAILearningGenaiRootGroundingMetadataCitation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILearningGenaiRootGroundingMetadataCitation::asJsonObject() const {
    QJsonObject obj;
    if (m_end_index_isSet) {
        obj.insert(QString("endIndex"), ::OpenAPI::toJsonValue(m_end_index));
    }
    if (m_fact_index_isSet) {
        obj.insert(QString("factIndex"), ::OpenAPI::toJsonValue(m_fact_index));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    if (m_start_index_isSet) {
        obj.insert(QString("startIndex"), ::OpenAPI::toJsonValue(m_start_index));
    }
    return obj;
}

qint32 OAILearningGenaiRootGroundingMetadataCitation::getEndIndex() const {
    return m_end_index;
}
void OAILearningGenaiRootGroundingMetadataCitation::setEndIndex(const qint32 &end_index) {
    m_end_index = end_index;
    m_end_index_isSet = true;
}

bool OAILearningGenaiRootGroundingMetadataCitation::is_end_index_Set() const{
    return m_end_index_isSet;
}

bool OAILearningGenaiRootGroundingMetadataCitation::is_end_index_Valid() const{
    return m_end_index_isValid;
}

qint32 OAILearningGenaiRootGroundingMetadataCitation::getFactIndex() const {
    return m_fact_index;
}
void OAILearningGenaiRootGroundingMetadataCitation::setFactIndex(const qint32 &fact_index) {
    m_fact_index = fact_index;
    m_fact_index_isSet = true;
}

bool OAILearningGenaiRootGroundingMetadataCitation::is_fact_index_Set() const{
    return m_fact_index_isSet;
}

bool OAILearningGenaiRootGroundingMetadataCitation::is_fact_index_Valid() const{
    return m_fact_index_isValid;
}

double OAILearningGenaiRootGroundingMetadataCitation::getScore() const {
    return m_score;
}
void OAILearningGenaiRootGroundingMetadataCitation::setScore(const double &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAILearningGenaiRootGroundingMetadataCitation::is_score_Set() const{
    return m_score_isSet;
}

bool OAILearningGenaiRootGroundingMetadataCitation::is_score_Valid() const{
    return m_score_isValid;
}

qint32 OAILearningGenaiRootGroundingMetadataCitation::getStartIndex() const {
    return m_start_index;
}
void OAILearningGenaiRootGroundingMetadataCitation::setStartIndex(const qint32 &start_index) {
    m_start_index = start_index;
    m_start_index_isSet = true;
}

bool OAILearningGenaiRootGroundingMetadataCitation::is_start_index_Set() const{
    return m_start_index_isSet;
}

bool OAILearningGenaiRootGroundingMetadataCitation::is_start_index_Valid() const{
    return m_start_index_isValid;
}

bool OAILearningGenaiRootGroundingMetadataCitation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fact_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_index_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILearningGenaiRootGroundingMetadataCitation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
