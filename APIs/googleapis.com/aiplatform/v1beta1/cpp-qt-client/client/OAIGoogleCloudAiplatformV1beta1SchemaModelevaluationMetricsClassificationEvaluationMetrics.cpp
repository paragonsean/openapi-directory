/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::~OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics() {}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::initializeModel() {

    m_au_prc_isSet = false;
    m_au_prc_isValid = false;

    m_au_roc_isSet = false;
    m_au_roc_isValid = false;

    m_confidence_metrics_isSet = false;
    m_confidence_metrics_isValid = false;

    m_confusion_matrix_isSet = false;
    m_confusion_matrix_isValid = false;

    m_log_loss_isSet = false;
    m_log_loss_isValid = false;
}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::fromJsonObject(QJsonObject json) {

    m_au_prc_isValid = ::OpenAPI::fromJsonValue(m_au_prc, json[QString("auPrc")]);
    m_au_prc_isSet = !json[QString("auPrc")].isNull() && m_au_prc_isValid;

    m_au_roc_isValid = ::OpenAPI::fromJsonValue(m_au_roc, json[QString("auRoc")]);
    m_au_roc_isSet = !json[QString("auRoc")].isNull() && m_au_roc_isValid;

    m_confidence_metrics_isValid = ::OpenAPI::fromJsonValue(m_confidence_metrics, json[QString("confidenceMetrics")]);
    m_confidence_metrics_isSet = !json[QString("confidenceMetrics")].isNull() && m_confidence_metrics_isValid;

    m_confusion_matrix_isValid = ::OpenAPI::fromJsonValue(m_confusion_matrix, json[QString("confusionMatrix")]);
    m_confusion_matrix_isSet = !json[QString("confusionMatrix")].isNull() && m_confusion_matrix_isValid;

    m_log_loss_isValid = ::OpenAPI::fromJsonValue(m_log_loss, json[QString("logLoss")]);
    m_log_loss_isSet = !json[QString("logLoss")].isNull() && m_log_loss_isValid;
}

QString OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_au_prc_isSet) {
        obj.insert(QString("auPrc"), ::OpenAPI::toJsonValue(m_au_prc));
    }
    if (m_au_roc_isSet) {
        obj.insert(QString("auRoc"), ::OpenAPI::toJsonValue(m_au_roc));
    }
    if (m_confidence_metrics.size() > 0) {
        obj.insert(QString("confidenceMetrics"), ::OpenAPI::toJsonValue(m_confidence_metrics));
    }
    if (m_confusion_matrix.isSet()) {
        obj.insert(QString("confusionMatrix"), ::OpenAPI::toJsonValue(m_confusion_matrix));
    }
    if (m_log_loss_isSet) {
        obj.insert(QString("logLoss"), ::OpenAPI::toJsonValue(m_log_loss));
    }
    return obj;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::getAuPrc() const {
    return m_au_prc;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::setAuPrc(const float &au_prc) {
    m_au_prc = au_prc;
    m_au_prc_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_au_prc_Set() const{
    return m_au_prc_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_au_prc_Valid() const{
    return m_au_prc_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::getAuRoc() const {
    return m_au_roc;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::setAuRoc(const float &au_roc) {
    m_au_roc = au_roc;
    m_au_roc_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_au_roc_Set() const{
    return m_au_roc_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_au_roc_Valid() const{
    return m_au_roc_isValid;
}

QList<OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics> OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::getConfidenceMetrics() const {
    return m_confidence_metrics;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::setConfidenceMetrics(const QList<OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics> &confidence_metrics) {
    m_confidence_metrics = confidence_metrics;
    m_confidence_metrics_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_confidence_metrics_Set() const{
    return m_confidence_metrics_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_confidence_metrics_Valid() const{
    return m_confidence_metrics_isValid;
}

OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::getConfusionMatrix() const {
    return m_confusion_matrix;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::setConfusionMatrix(const OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsConfusionMatrix &confusion_matrix) {
    m_confusion_matrix = confusion_matrix;
    m_confusion_matrix_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_confusion_matrix_Set() const{
    return m_confusion_matrix_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_confusion_matrix_Valid() const{
    return m_confusion_matrix_isValid;
}

float OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::getLogLoss() const {
    return m_log_loss;
}
void OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::setLogLoss(const float &log_loss) {
    m_log_loss = log_loss;
    m_log_loss_isSet = true;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_log_loss_Set() const{
    return m_log_loss_isSet;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::is_log_loss_Valid() const{
    return m_log_loss_isValid;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_au_prc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_au_roc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_confusion_matrix.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_loss_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1beta1SchemaModelevaluationMetricsClassificationEvaluationMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
