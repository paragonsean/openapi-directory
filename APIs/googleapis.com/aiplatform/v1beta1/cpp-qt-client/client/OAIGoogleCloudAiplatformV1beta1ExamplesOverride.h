/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1beta1ExamplesOverride.h
 *
 * Overrides for example-based explanations.
 */

#ifndef OAIGoogleCloudAiplatformV1beta1ExamplesOverride_H
#define OAIGoogleCloudAiplatformV1beta1ExamplesOverride_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace;

class OAIGoogleCloudAiplatformV1beta1ExamplesOverride : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1beta1ExamplesOverride();
    OAIGoogleCloudAiplatformV1beta1ExamplesOverride(QString json);
    ~OAIGoogleCloudAiplatformV1beta1ExamplesOverride() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCrowdingCount() const;
    void setCrowdingCount(const qint32 &crowding_count);
    bool is_crowding_count_Set() const;
    bool is_crowding_count_Valid() const;

    QString getDataFormat() const;
    void setDataFormat(const QString &data_format);
    bool is_data_format_Set() const;
    bool is_data_format_Valid() const;

    qint32 getNeighborCount() const;
    void setNeighborCount(const qint32 &neighbor_count);
    bool is_neighbor_count_Set() const;
    bool is_neighbor_count_Valid() const;

    QList<OAIGoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace> getRestrictions() const;
    void setRestrictions(const QList<OAIGoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace> &restrictions);
    bool is_restrictions_Set() const;
    bool is_restrictions_Valid() const;

    bool isReturnEmbeddings() const;
    void setReturnEmbeddings(const bool &return_embeddings);
    bool is_return_embeddings_Set() const;
    bool is_return_embeddings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_crowding_count;
    bool m_crowding_count_isSet;
    bool m_crowding_count_isValid;

    QString m_data_format;
    bool m_data_format_isSet;
    bool m_data_format_isValid;

    qint32 m_neighbor_count;
    bool m_neighbor_count_isSet;
    bool m_neighbor_count_isValid;

    QList<OAIGoogleCloudAiplatformV1beta1ExamplesRestrictionsNamespace> m_restrictions;
    bool m_restrictions_isSet;
    bool m_restrictions_isValid;

    bool m_return_embeddings;
    bool m_return_embeddings_isSet;
    bool m_return_embeddings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1beta1ExamplesOverride)

#endif // OAIGoogleCloudAiplatformV1beta1ExamplesOverride_H
