/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1GcsDestination;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The model monitoring configuration used for Batch Prediction Job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1ModelMonitoringConfig {
  public static final String SERIALIZED_NAME_ALERT_CONFIG = "alertConfig";
  @SerializedName(SERIALIZED_NAME_ALERT_CONFIG)
  private GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig alertConfig;

  public static final String SERIALIZED_NAME_ANALYSIS_INSTANCE_SCHEMA_URI = "analysisInstanceSchemaUri";
  @SerializedName(SERIALIZED_NAME_ANALYSIS_INSTANCE_SCHEMA_URI)
  private String analysisInstanceSchemaUri;

  public static final String SERIALIZED_NAME_OBJECTIVE_CONFIGS = "objectiveConfigs";
  @SerializedName(SERIALIZED_NAME_OBJECTIVE_CONFIGS)
  private List<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig> objectiveConfigs = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATS_ANOMALIES_BASE_DIRECTORY = "statsAnomaliesBaseDirectory";
  @SerializedName(SERIALIZED_NAME_STATS_ANOMALIES_BASE_DIRECTORY)
  private GoogleCloudAiplatformV1beta1GcsDestination statsAnomaliesBaseDirectory;

  public GoogleCloudAiplatformV1beta1ModelMonitoringConfig() {
  }

  public GoogleCloudAiplatformV1beta1ModelMonitoringConfig alertConfig(GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig alertConfig) {
    this.alertConfig = alertConfig;
    return this;
  }

  /**
   * Get alertConfig
   * @return alertConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig getAlertConfig() {
    return alertConfig;
  }

  public void setAlertConfig(GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig alertConfig) {
    this.alertConfig = alertConfig;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringConfig analysisInstanceSchemaUri(String analysisInstanceSchemaUri) {
    this.analysisInstanceSchemaUri = analysisInstanceSchemaUri;
    return this;
  }

  /**
   * YAML schema file uri in Cloud Storage describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.
   * @return analysisInstanceSchemaUri
   */
  @javax.annotation.Nullable
  public String getAnalysisInstanceSchemaUri() {
    return analysisInstanceSchemaUri;
  }

  public void setAnalysisInstanceSchemaUri(String analysisInstanceSchemaUri) {
    this.analysisInstanceSchemaUri = analysisInstanceSchemaUri;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringConfig objectiveConfigs(List<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig> objectiveConfigs) {
    this.objectiveConfigs = objectiveConfigs;
    return this;
  }

  public GoogleCloudAiplatformV1beta1ModelMonitoringConfig addObjectiveConfigsItem(GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig objectiveConfigsItem) {
    if (this.objectiveConfigs == null) {
      this.objectiveConfigs = new ArrayList<>();
    }
    this.objectiveConfigs.add(objectiveConfigsItem);
    return this;
  }

  /**
   * Model monitoring objective config.
   * @return objectiveConfigs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig> getObjectiveConfigs() {
    return objectiveConfigs;
  }

  public void setObjectiveConfigs(List<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig> objectiveConfigs) {
    this.objectiveConfigs = objectiveConfigs;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringConfig statsAnomaliesBaseDirectory(GoogleCloudAiplatformV1beta1GcsDestination statsAnomaliesBaseDirectory) {
    this.statsAnomaliesBaseDirectory = statsAnomaliesBaseDirectory;
    return this;
  }

  /**
   * Get statsAnomaliesBaseDirectory
   * @return statsAnomaliesBaseDirectory
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1GcsDestination getStatsAnomaliesBaseDirectory() {
    return statsAnomaliesBaseDirectory;
  }

  public void setStatsAnomaliesBaseDirectory(GoogleCloudAiplatformV1beta1GcsDestination statsAnomaliesBaseDirectory) {
    this.statsAnomaliesBaseDirectory = statsAnomaliesBaseDirectory;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1ModelMonitoringConfig googleCloudAiplatformV1beta1ModelMonitoringConfig = (GoogleCloudAiplatformV1beta1ModelMonitoringConfig) o;
    return Objects.equals(this.alertConfig, googleCloudAiplatformV1beta1ModelMonitoringConfig.alertConfig) &&
        Objects.equals(this.analysisInstanceSchemaUri, googleCloudAiplatformV1beta1ModelMonitoringConfig.analysisInstanceSchemaUri) &&
        Objects.equals(this.objectiveConfigs, googleCloudAiplatformV1beta1ModelMonitoringConfig.objectiveConfigs) &&
        Objects.equals(this.statsAnomaliesBaseDirectory, googleCloudAiplatformV1beta1ModelMonitoringConfig.statsAnomaliesBaseDirectory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertConfig, analysisInstanceSchemaUri, objectiveConfigs, statsAnomaliesBaseDirectory);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1ModelMonitoringConfig {\n");
    sb.append("    alertConfig: ").append(toIndentedString(alertConfig)).append("\n");
    sb.append("    analysisInstanceSchemaUri: ").append(toIndentedString(analysisInstanceSchemaUri)).append("\n");
    sb.append("    objectiveConfigs: ").append(toIndentedString(objectiveConfigs)).append("\n");
    sb.append("    statsAnomaliesBaseDirectory: ").append(toIndentedString(statsAnomaliesBaseDirectory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alertConfig");
    openapiFields.add("analysisInstanceSchemaUri");
    openapiFields.add("objectiveConfigs");
    openapiFields.add("statsAnomaliesBaseDirectory");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1ModelMonitoringConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1ModelMonitoringConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1ModelMonitoringConfig is not found in the empty JSON string", GoogleCloudAiplatformV1beta1ModelMonitoringConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1ModelMonitoringConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1ModelMonitoringConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `alertConfig`
      if (jsonObj.get("alertConfig") != null && !jsonObj.get("alertConfig").isJsonNull()) {
        GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig.validateJsonElement(jsonObj.get("alertConfig"));
      }
      if ((jsonObj.get("analysisInstanceSchemaUri") != null && !jsonObj.get("analysisInstanceSchemaUri").isJsonNull()) && !jsonObj.get("analysisInstanceSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `analysisInstanceSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("analysisInstanceSchemaUri").toString()));
      }
      if (jsonObj.get("objectiveConfigs") != null && !jsonObj.get("objectiveConfigs").isJsonNull()) {
        JsonArray jsonArrayobjectiveConfigs = jsonObj.getAsJsonArray("objectiveConfigs");
        if (jsonArrayobjectiveConfigs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("objectiveConfigs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `objectiveConfigs` to be an array in the JSON string but got `%s`", jsonObj.get("objectiveConfigs").toString()));
          }

          // validate the optional field `objectiveConfigs` (array)
          for (int i = 0; i < jsonArrayobjectiveConfigs.size(); i++) {
            GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfig.validateJsonElement(jsonArrayobjectiveConfigs.get(i));
          };
        }
      }
      // validate the optional field `statsAnomaliesBaseDirectory`
      if (jsonObj.get("statsAnomaliesBaseDirectory") != null && !jsonObj.get("statsAnomaliesBaseDirectory").isJsonNull()) {
        GoogleCloudAiplatformV1beta1GcsDestination.validateJsonElement(jsonObj.get("statsAnomaliesBaseDirectory"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1ModelMonitoringConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1ModelMonitoringConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1ModelMonitoringConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1ModelMonitoringConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1ModelMonitoringConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1ModelMonitoringConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1ModelMonitoringConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1ModelMonitoringConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1ModelMonitoringConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1ModelMonitoringConfig
   */
  public static GoogleCloudAiplatformV1beta1ModelMonitoringConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1ModelMonitoringConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1ModelMonitoringConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

