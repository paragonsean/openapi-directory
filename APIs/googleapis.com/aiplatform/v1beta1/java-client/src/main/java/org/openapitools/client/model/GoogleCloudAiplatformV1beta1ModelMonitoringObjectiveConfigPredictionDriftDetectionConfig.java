/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ThresholdConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The config for Prediction data drift detection.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig {
  public static final String SERIALIZED_NAME_ATTRIBUTION_SCORE_DRIFT_THRESHOLDS = "attributionScoreDriftThresholds";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION_SCORE_DRIFT_THRESHOLDS)
  private Map<String, GoogleCloudAiplatformV1beta1ThresholdConfig> attributionScoreDriftThresholds = new HashMap<>();

  public static final String SERIALIZED_NAME_DEFAULT_DRIFT_THRESHOLD = "defaultDriftThreshold";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DRIFT_THRESHOLD)
  private GoogleCloudAiplatformV1beta1ThresholdConfig defaultDriftThreshold;

  public static final String SERIALIZED_NAME_DRIFT_THRESHOLDS = "driftThresholds";
  @SerializedName(SERIALIZED_NAME_DRIFT_THRESHOLDS)
  private Map<String, GoogleCloudAiplatformV1beta1ThresholdConfig> driftThresholds = new HashMap<>();

  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig() {
  }

  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig attributionScoreDriftThresholds(Map<String, GoogleCloudAiplatformV1beta1ThresholdConfig> attributionScoreDriftThresholds) {
    this.attributionScoreDriftThresholds = attributionScoreDriftThresholds;
    return this;
  }

  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig putAttributionScoreDriftThresholdsItem(String key, GoogleCloudAiplatformV1beta1ThresholdConfig attributionScoreDriftThresholdsItem) {
    if (this.attributionScoreDriftThresholds == null) {
      this.attributionScoreDriftThresholds = new HashMap<>();
    }
    this.attributionScoreDriftThresholds.put(key, attributionScoreDriftThresholdsItem);
    return this;
  }

  /**
   * Key is the feature name and value is the threshold. The threshold here is against attribution score distance between different time windows.
   * @return attributionScoreDriftThresholds
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudAiplatformV1beta1ThresholdConfig> getAttributionScoreDriftThresholds() {
    return attributionScoreDriftThresholds;
  }

  public void setAttributionScoreDriftThresholds(Map<String, GoogleCloudAiplatformV1beta1ThresholdConfig> attributionScoreDriftThresholds) {
    this.attributionScoreDriftThresholds = attributionScoreDriftThresholds;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig defaultDriftThreshold(GoogleCloudAiplatformV1beta1ThresholdConfig defaultDriftThreshold) {
    this.defaultDriftThreshold = defaultDriftThreshold;
    return this;
  }

  /**
   * Get defaultDriftThreshold
   * @return defaultDriftThreshold
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1ThresholdConfig getDefaultDriftThreshold() {
    return defaultDriftThreshold;
  }

  public void setDefaultDriftThreshold(GoogleCloudAiplatformV1beta1ThresholdConfig defaultDriftThreshold) {
    this.defaultDriftThreshold = defaultDriftThreshold;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig driftThresholds(Map<String, GoogleCloudAiplatformV1beta1ThresholdConfig> driftThresholds) {
    this.driftThresholds = driftThresholds;
    return this;
  }

  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig putDriftThresholdsItem(String key, GoogleCloudAiplatformV1beta1ThresholdConfig driftThresholdsItem) {
    if (this.driftThresholds == null) {
      this.driftThresholds = new HashMap<>();
    }
    this.driftThresholds.put(key, driftThresholdsItem);
    return this;
  }

  /**
   * Key is the feature name and value is the threshold. If a feature needs to be monitored for drift, a value threshold must be configured for that feature. The threshold here is against feature distribution distance between different time windws.
   * @return driftThresholds
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudAiplatformV1beta1ThresholdConfig> getDriftThresholds() {
    return driftThresholds;
  }

  public void setDriftThresholds(Map<String, GoogleCloudAiplatformV1beta1ThresholdConfig> driftThresholds) {
    this.driftThresholds = driftThresholds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig = (GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig) o;
    return Objects.equals(this.attributionScoreDriftThresholds, googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.attributionScoreDriftThresholds) &&
        Objects.equals(this.defaultDriftThreshold, googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.defaultDriftThreshold) &&
        Objects.equals(this.driftThresholds, googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.driftThresholds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributionScoreDriftThresholds, defaultDriftThreshold, driftThresholds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig {\n");
    sb.append("    attributionScoreDriftThresholds: ").append(toIndentedString(attributionScoreDriftThresholds)).append("\n");
    sb.append("    defaultDriftThreshold: ").append(toIndentedString(defaultDriftThreshold)).append("\n");
    sb.append("    driftThresholds: ").append(toIndentedString(driftThresholds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributionScoreDriftThresholds");
    openapiFields.add("defaultDriftThreshold");
    openapiFields.add("driftThresholds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig is not found in the empty JSON string", GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `defaultDriftThreshold`
      if (jsonObj.get("defaultDriftThreshold") != null && !jsonObj.get("defaultDriftThreshold").isJsonNull()) {
        GoogleCloudAiplatformV1beta1ThresholdConfig.validateJsonElement(jsonObj.get("defaultDriftThreshold"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig
   */
  public static GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

