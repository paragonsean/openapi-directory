/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1CustomJobSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represent spec for search trials.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec {
  public static final String SERIALIZED_NAME_MAX_FAILED_TRIAL_COUNT = "maxFailedTrialCount";
  @SerializedName(SERIALIZED_NAME_MAX_FAILED_TRIAL_COUNT)
  private Integer maxFailedTrialCount;

  public static final String SERIALIZED_NAME_MAX_PARALLEL_TRIAL_COUNT = "maxParallelTrialCount";
  @SerializedName(SERIALIZED_NAME_MAX_PARALLEL_TRIAL_COUNT)
  private Integer maxParallelTrialCount;

  public static final String SERIALIZED_NAME_MAX_TRIAL_COUNT = "maxTrialCount";
  @SerializedName(SERIALIZED_NAME_MAX_TRIAL_COUNT)
  private Integer maxTrialCount;

  public static final String SERIALIZED_NAME_SEARCH_TRIAL_JOB_SPEC = "searchTrialJobSpec";
  @SerializedName(SERIALIZED_NAME_SEARCH_TRIAL_JOB_SPEC)
  private GoogleCloudAiplatformV1beta1CustomJobSpec searchTrialJobSpec;

  public GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec() {
  }

  public GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec maxFailedTrialCount(Integer maxFailedTrialCount) {
    this.maxFailedTrialCount = maxFailedTrialCount;
    return this;
  }

  /**
   * The number of failed trials that need to be seen before failing the NasJob. If set to 0, Vertex AI decides how many trials must fail before the whole job fails.
   * @return maxFailedTrialCount
   */
  @javax.annotation.Nullable
  public Integer getMaxFailedTrialCount() {
    return maxFailedTrialCount;
  }

  public void setMaxFailedTrialCount(Integer maxFailedTrialCount) {
    this.maxFailedTrialCount = maxFailedTrialCount;
  }


  public GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec maxParallelTrialCount(Integer maxParallelTrialCount) {
    this.maxParallelTrialCount = maxParallelTrialCount;
    return this;
  }

  /**
   * Required. The maximum number of trials to run in parallel.
   * @return maxParallelTrialCount
   */
  @javax.annotation.Nullable
  public Integer getMaxParallelTrialCount() {
    return maxParallelTrialCount;
  }

  public void setMaxParallelTrialCount(Integer maxParallelTrialCount) {
    this.maxParallelTrialCount = maxParallelTrialCount;
  }


  public GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec maxTrialCount(Integer maxTrialCount) {
    this.maxTrialCount = maxTrialCount;
    return this;
  }

  /**
   * Required. The maximum number of Neural Architecture Search (NAS) trials to run.
   * @return maxTrialCount
   */
  @javax.annotation.Nullable
  public Integer getMaxTrialCount() {
    return maxTrialCount;
  }

  public void setMaxTrialCount(Integer maxTrialCount) {
    this.maxTrialCount = maxTrialCount;
  }


  public GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec searchTrialJobSpec(GoogleCloudAiplatformV1beta1CustomJobSpec searchTrialJobSpec) {
    this.searchTrialJobSpec = searchTrialJobSpec;
    return this;
  }

  /**
   * Get searchTrialJobSpec
   * @return searchTrialJobSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1CustomJobSpec getSearchTrialJobSpec() {
    return searchTrialJobSpec;
  }

  public void setSearchTrialJobSpec(GoogleCloudAiplatformV1beta1CustomJobSpec searchTrialJobSpec) {
    this.searchTrialJobSpec = searchTrialJobSpec;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec googleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec = (GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec) o;
    return Objects.equals(this.maxFailedTrialCount, googleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.maxFailedTrialCount) &&
        Objects.equals(this.maxParallelTrialCount, googleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.maxParallelTrialCount) &&
        Objects.equals(this.maxTrialCount, googleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.maxTrialCount) &&
        Objects.equals(this.searchTrialJobSpec, googleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.searchTrialJobSpec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxFailedTrialCount, maxParallelTrialCount, maxTrialCount, searchTrialJobSpec);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec {\n");
    sb.append("    maxFailedTrialCount: ").append(toIndentedString(maxFailedTrialCount)).append("\n");
    sb.append("    maxParallelTrialCount: ").append(toIndentedString(maxParallelTrialCount)).append("\n");
    sb.append("    maxTrialCount: ").append(toIndentedString(maxTrialCount)).append("\n");
    sb.append("    searchTrialJobSpec: ").append(toIndentedString(searchTrialJobSpec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("maxFailedTrialCount");
    openapiFields.add("maxParallelTrialCount");
    openapiFields.add("maxTrialCount");
    openapiFields.add("searchTrialJobSpec");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec is not found in the empty JSON string", GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `searchTrialJobSpec`
      if (jsonObj.get("searchTrialJobSpec") != null && !jsonObj.get("searchTrialJobSpec").isJsonNull()) {
        GoogleCloudAiplatformV1beta1CustomJobSpec.validateJsonElement(jsonObj.get("searchTrialJobSpec"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec
   */
  public static GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1NasJobSpecMultiTrialAlgorithmSpecSearchTrialSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

