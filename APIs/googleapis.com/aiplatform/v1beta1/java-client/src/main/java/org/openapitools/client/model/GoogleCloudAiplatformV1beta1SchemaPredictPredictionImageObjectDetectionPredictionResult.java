/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Prediction output format for Image Object Detection.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult {
  public static final String SERIALIZED_NAME_BBOXES = "bboxes";
  @SerializedName(SERIALIZED_NAME_BBOXES)
  private List<List<Object>> bboxes = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONFIDENCES = "confidences";
  @SerializedName(SERIALIZED_NAME_CONFIDENCES)
  private List<Float> confidences = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISPLAY_NAMES = "displayNames";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAMES)
  private List<String> displayNames = new ArrayList<>();

  public static final String SERIALIZED_NAME_IDS = "ids";
  @SerializedName(SERIALIZED_NAME_IDS)
  private List<String> ids = new ArrayList<>();

  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult() {
  }

  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult bboxes(List<List<Object>> bboxes) {
    this.bboxes = bboxes;
    return this;
  }

  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult addBboxesItem(List<Object> bboxesItem) {
    if (this.bboxes == null) {
      this.bboxes = new ArrayList<>();
    }
    this.bboxes.add(bboxesItem);
    return this;
  }

  /**
   * Bounding boxes, i.e. the rectangles over the image, that pinpoint the found AnnotationSpecs. Given in order that matches the IDs. Each bounding box is an array of 4 numbers &#x60;xMin&#x60;, &#x60;xMax&#x60;, &#x60;yMin&#x60;, and &#x60;yMax&#x60;, which represent the extremal coordinates of the box. They are relative to the image size, and the point 0,0 is in the top left of the image.
   * @return bboxes
   */
  @javax.annotation.Nullable
  public List<List<Object>> getBboxes() {
    return bboxes;
  }

  public void setBboxes(List<List<Object>> bboxes) {
    this.bboxes = bboxes;
  }


  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult confidences(List<Float> confidences) {
    this.confidences = confidences;
    return this;
  }

  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult addConfidencesItem(Float confidencesItem) {
    if (this.confidences == null) {
      this.confidences = new ArrayList<>();
    }
    this.confidences.add(confidencesItem);
    return this;
  }

  /**
   * The Model&#39;s confidences in correctness of the predicted IDs, higher value means higher confidence. Order matches the Ids.
   * @return confidences
   */
  @javax.annotation.Nullable
  public List<Float> getConfidences() {
    return confidences;
  }

  public void setConfidences(List<Float> confidences) {
    this.confidences = confidences;
  }


  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult displayNames(List<String> displayNames) {
    this.displayNames = displayNames;
    return this;
  }

  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult addDisplayNamesItem(String displayNamesItem) {
    if (this.displayNames == null) {
      this.displayNames = new ArrayList<>();
    }
    this.displayNames.add(displayNamesItem);
    return this;
  }

  /**
   * The display names of the AnnotationSpecs that had been identified, order matches the IDs.
   * @return displayNames
   */
  @javax.annotation.Nullable
  public List<String> getDisplayNames() {
    return displayNames;
  }

  public void setDisplayNames(List<String> displayNames) {
    this.displayNames = displayNames;
  }


  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult ids(List<String> ids) {
    this.ids = ids;
    return this;
  }

  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult addIdsItem(String idsItem) {
    if (this.ids == null) {
      this.ids = new ArrayList<>();
    }
    this.ids.add(idsItem);
    return this;
  }

  /**
   * The resource IDs of the AnnotationSpecs that had been identified, ordered by the confidence score descendingly.
   * @return ids
   */
  @javax.annotation.Nullable
  public List<String> getIds() {
    return ids;
  }

  public void setIds(List<String> ids) {
    this.ids = ids;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult googleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult = (GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult) o;
    return Objects.equals(this.bboxes, googleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.bboxes) &&
        Objects.equals(this.confidences, googleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.confidences) &&
        Objects.equals(this.displayNames, googleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.displayNames) &&
        Objects.equals(this.ids, googleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.ids);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bboxes, confidences, displayNames, ids);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult {\n");
    sb.append("    bboxes: ").append(toIndentedString(bboxes)).append("\n");
    sb.append("    confidences: ").append(toIndentedString(confidences)).append("\n");
    sb.append("    displayNames: ").append(toIndentedString(displayNames)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bboxes");
    openapiFields.add("confidences");
    openapiFields.add("displayNames");
    openapiFields.add("ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult is not found in the empty JSON string", GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("bboxes") != null && !jsonObj.get("bboxes").isJsonNull() && !jsonObj.get("bboxes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `bboxes` to be an array in the JSON string but got `%s`", jsonObj.get("bboxes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("confidences") != null && !jsonObj.get("confidences").isJsonNull() && !jsonObj.get("confidences").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `confidences` to be an array in the JSON string but got `%s`", jsonObj.get("confidences").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("displayNames") != null && !jsonObj.get("displayNames").isJsonNull() && !jsonObj.get("displayNames").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayNames` to be an array in the JSON string but got `%s`", jsonObj.get("displayNames").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("ids") != null && !jsonObj.get("ids").isJsonNull() && !jsonObj.get("ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `ids` to be an array in the JSON string but got `%s`", jsonObj.get("ids").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult
   */
  public static GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageObjectDetectionPredictionResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

