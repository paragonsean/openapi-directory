/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1StudyTimeConstraint;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The configuration (stopping conditions) for automated stopping of a Study. Conditions include trial budgets, time budgets, and convergence detection.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig {
  public static final String SERIALIZED_NAME_MAX_DURATION_NO_PROGRESS = "maxDurationNoProgress";
  @SerializedName(SERIALIZED_NAME_MAX_DURATION_NO_PROGRESS)
  private String maxDurationNoProgress;

  public static final String SERIALIZED_NAME_MAX_NUM_TRIALS = "maxNumTrials";
  @SerializedName(SERIALIZED_NAME_MAX_NUM_TRIALS)
  private Integer maxNumTrials;

  public static final String SERIALIZED_NAME_MAX_NUM_TRIALS_NO_PROGRESS = "maxNumTrialsNoProgress";
  @SerializedName(SERIALIZED_NAME_MAX_NUM_TRIALS_NO_PROGRESS)
  private Integer maxNumTrialsNoProgress;

  public static final String SERIALIZED_NAME_MAXIMUM_RUNTIME_CONSTRAINT = "maximumRuntimeConstraint";
  @SerializedName(SERIALIZED_NAME_MAXIMUM_RUNTIME_CONSTRAINT)
  private GoogleCloudAiplatformV1beta1StudyTimeConstraint maximumRuntimeConstraint;

  public static final String SERIALIZED_NAME_MIN_NUM_TRIALS = "minNumTrials";
  @SerializedName(SERIALIZED_NAME_MIN_NUM_TRIALS)
  private Integer minNumTrials;

  public static final String SERIALIZED_NAME_MINIMUM_RUNTIME_CONSTRAINT = "minimumRuntimeConstraint";
  @SerializedName(SERIALIZED_NAME_MINIMUM_RUNTIME_CONSTRAINT)
  private GoogleCloudAiplatformV1beta1StudyTimeConstraint minimumRuntimeConstraint;

  public static final String SERIALIZED_NAME_SHOULD_STOP_ASAP = "shouldStopAsap";
  @SerializedName(SERIALIZED_NAME_SHOULD_STOP_ASAP)
  private Boolean shouldStopAsap;

  public GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig() {
  }

  public GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig maxDurationNoProgress(String maxDurationNoProgress) {
    this.maxDurationNoProgress = maxDurationNoProgress;
    return this;
  }

  /**
   * If the objective value has not improved for this much time, stop the study. WARNING: Effective only for single-objective studies.
   * @return maxDurationNoProgress
   */
  @javax.annotation.Nullable
  public String getMaxDurationNoProgress() {
    return maxDurationNoProgress;
  }

  public void setMaxDurationNoProgress(String maxDurationNoProgress) {
    this.maxDurationNoProgress = maxDurationNoProgress;
  }


  public GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig maxNumTrials(Integer maxNumTrials) {
    this.maxNumTrials = maxNumTrials;
    return this;
  }

  /**
   * If there are more than this many trials, stop the study.
   * @return maxNumTrials
   */
  @javax.annotation.Nullable
  public Integer getMaxNumTrials() {
    return maxNumTrials;
  }

  public void setMaxNumTrials(Integer maxNumTrials) {
    this.maxNumTrials = maxNumTrials;
  }


  public GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig maxNumTrialsNoProgress(Integer maxNumTrialsNoProgress) {
    this.maxNumTrialsNoProgress = maxNumTrialsNoProgress;
    return this;
  }

  /**
   * If the objective value has not improved for this many consecutive trials, stop the study. WARNING: Effective only for single-objective studies.
   * @return maxNumTrialsNoProgress
   */
  @javax.annotation.Nullable
  public Integer getMaxNumTrialsNoProgress() {
    return maxNumTrialsNoProgress;
  }

  public void setMaxNumTrialsNoProgress(Integer maxNumTrialsNoProgress) {
    this.maxNumTrialsNoProgress = maxNumTrialsNoProgress;
  }


  public GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig maximumRuntimeConstraint(GoogleCloudAiplatformV1beta1StudyTimeConstraint maximumRuntimeConstraint) {
    this.maximumRuntimeConstraint = maximumRuntimeConstraint;
    return this;
  }

  /**
   * Get maximumRuntimeConstraint
   * @return maximumRuntimeConstraint
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1StudyTimeConstraint getMaximumRuntimeConstraint() {
    return maximumRuntimeConstraint;
  }

  public void setMaximumRuntimeConstraint(GoogleCloudAiplatformV1beta1StudyTimeConstraint maximumRuntimeConstraint) {
    this.maximumRuntimeConstraint = maximumRuntimeConstraint;
  }


  public GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig minNumTrials(Integer minNumTrials) {
    this.minNumTrials = minNumTrials;
    return this;
  }

  /**
   * If there are fewer than this many COMPLETED trials, do not stop the study.
   * @return minNumTrials
   */
  @javax.annotation.Nullable
  public Integer getMinNumTrials() {
    return minNumTrials;
  }

  public void setMinNumTrials(Integer minNumTrials) {
    this.minNumTrials = minNumTrials;
  }


  public GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig minimumRuntimeConstraint(GoogleCloudAiplatformV1beta1StudyTimeConstraint minimumRuntimeConstraint) {
    this.minimumRuntimeConstraint = minimumRuntimeConstraint;
    return this;
  }

  /**
   * Get minimumRuntimeConstraint
   * @return minimumRuntimeConstraint
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1StudyTimeConstraint getMinimumRuntimeConstraint() {
    return minimumRuntimeConstraint;
  }

  public void setMinimumRuntimeConstraint(GoogleCloudAiplatformV1beta1StudyTimeConstraint minimumRuntimeConstraint) {
    this.minimumRuntimeConstraint = minimumRuntimeConstraint;
  }


  public GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig shouldStopAsap(Boolean shouldStopAsap) {
    this.shouldStopAsap = shouldStopAsap;
    return this;
  }

  /**
   * If true, a Study enters STOPPING_ASAP whenever it would normally enters STOPPING state. The bottom line is: set to true if you want to interrupt on-going evaluations of Trials as soon as the study stopping condition is met. (Please see Study.State documentation for the source of truth).
   * @return shouldStopAsap
   */
  @javax.annotation.Nullable
  public Boolean getShouldStopAsap() {
    return shouldStopAsap;
  }

  public void setShouldStopAsap(Boolean shouldStopAsap) {
    this.shouldStopAsap = shouldStopAsap;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig googleCloudAiplatformV1beta1StudySpecStudyStoppingConfig = (GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig) o;
    return Objects.equals(this.maxDurationNoProgress, googleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.maxDurationNoProgress) &&
        Objects.equals(this.maxNumTrials, googleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.maxNumTrials) &&
        Objects.equals(this.maxNumTrialsNoProgress, googleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.maxNumTrialsNoProgress) &&
        Objects.equals(this.maximumRuntimeConstraint, googleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.maximumRuntimeConstraint) &&
        Objects.equals(this.minNumTrials, googleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.minNumTrials) &&
        Objects.equals(this.minimumRuntimeConstraint, googleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.minimumRuntimeConstraint) &&
        Objects.equals(this.shouldStopAsap, googleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.shouldStopAsap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxDurationNoProgress, maxNumTrials, maxNumTrialsNoProgress, maximumRuntimeConstraint, minNumTrials, minimumRuntimeConstraint, shouldStopAsap);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig {\n");
    sb.append("    maxDurationNoProgress: ").append(toIndentedString(maxDurationNoProgress)).append("\n");
    sb.append("    maxNumTrials: ").append(toIndentedString(maxNumTrials)).append("\n");
    sb.append("    maxNumTrialsNoProgress: ").append(toIndentedString(maxNumTrialsNoProgress)).append("\n");
    sb.append("    maximumRuntimeConstraint: ").append(toIndentedString(maximumRuntimeConstraint)).append("\n");
    sb.append("    minNumTrials: ").append(toIndentedString(minNumTrials)).append("\n");
    sb.append("    minimumRuntimeConstraint: ").append(toIndentedString(minimumRuntimeConstraint)).append("\n");
    sb.append("    shouldStopAsap: ").append(toIndentedString(shouldStopAsap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("maxDurationNoProgress");
    openapiFields.add("maxNumTrials");
    openapiFields.add("maxNumTrialsNoProgress");
    openapiFields.add("maximumRuntimeConstraint");
    openapiFields.add("minNumTrials");
    openapiFields.add("minimumRuntimeConstraint");
    openapiFields.add("shouldStopAsap");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig is not found in the empty JSON string", GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("maxDurationNoProgress") != null && !jsonObj.get("maxDurationNoProgress").isJsonNull()) && !jsonObj.get("maxDurationNoProgress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxDurationNoProgress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxDurationNoProgress").toString()));
      }
      // validate the optional field `maximumRuntimeConstraint`
      if (jsonObj.get("maximumRuntimeConstraint") != null && !jsonObj.get("maximumRuntimeConstraint").isJsonNull()) {
        GoogleCloudAiplatformV1beta1StudyTimeConstraint.validateJsonElement(jsonObj.get("maximumRuntimeConstraint"));
      }
      // validate the optional field `minimumRuntimeConstraint`
      if (jsonObj.get("minimumRuntimeConstraint") != null && !jsonObj.get("minimumRuntimeConstraint").isJsonNull()) {
        GoogleCloudAiplatformV1beta1StudyTimeConstraint.validateJsonElement(jsonObj.get("minimumRuntimeConstraint"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig
   */
  public static GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

