/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ExplanationSpecOverride;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for PredictionService.Explain.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1ExplainRequest {
  public static final String SERIALIZED_NAME_CONCURRENT_EXPLANATION_SPEC_OVERRIDE = "concurrentExplanationSpecOverride";
  @SerializedName(SERIALIZED_NAME_CONCURRENT_EXPLANATION_SPEC_OVERRIDE)
  private Map<String, GoogleCloudAiplatformV1beta1ExplanationSpecOverride> concurrentExplanationSpecOverride = new HashMap<>();

  public static final String SERIALIZED_NAME_DEPLOYED_MODEL_ID = "deployedModelId";
  @SerializedName(SERIALIZED_NAME_DEPLOYED_MODEL_ID)
  private String deployedModelId;

  public static final String SERIALIZED_NAME_EXPLANATION_SPEC_OVERRIDE = "explanationSpecOverride";
  @SerializedName(SERIALIZED_NAME_EXPLANATION_SPEC_OVERRIDE)
  private GoogleCloudAiplatformV1beta1ExplanationSpecOverride explanationSpecOverride;

  public static final String SERIALIZED_NAME_INSTANCES = "instances";
  @SerializedName(SERIALIZED_NAME_INSTANCES)
  private List<Object> instances = new ArrayList<>();

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Object parameters = null;

  public GoogleCloudAiplatformV1beta1ExplainRequest() {
  }

  public GoogleCloudAiplatformV1beta1ExplainRequest concurrentExplanationSpecOverride(Map<String, GoogleCloudAiplatformV1beta1ExplanationSpecOverride> concurrentExplanationSpecOverride) {
    this.concurrentExplanationSpecOverride = concurrentExplanationSpecOverride;
    return this;
  }

  public GoogleCloudAiplatformV1beta1ExplainRequest putConcurrentExplanationSpecOverrideItem(String key, GoogleCloudAiplatformV1beta1ExplanationSpecOverride concurrentExplanationSpecOverrideItem) {
    if (this.concurrentExplanationSpecOverride == null) {
      this.concurrentExplanationSpecOverride = new HashMap<>();
    }
    this.concurrentExplanationSpecOverride.put(key, concurrentExplanationSpecOverrideItem);
    return this;
  }

  /**
   * Optional. This field is the same as the one above, but supports multiple explanations to occur in parallel. The key can be any string. Each override will be run against the model, then its explanations will be grouped together. Note - these explanations are run **In Addition** to the default Explanation in the deployed model.
   * @return concurrentExplanationSpecOverride
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudAiplatformV1beta1ExplanationSpecOverride> getConcurrentExplanationSpecOverride() {
    return concurrentExplanationSpecOverride;
  }

  public void setConcurrentExplanationSpecOverride(Map<String, GoogleCloudAiplatformV1beta1ExplanationSpecOverride> concurrentExplanationSpecOverride) {
    this.concurrentExplanationSpecOverride = concurrentExplanationSpecOverride;
  }


  public GoogleCloudAiplatformV1beta1ExplainRequest deployedModelId(String deployedModelId) {
    this.deployedModelId = deployedModelId;
    return this;
  }

  /**
   * If specified, this ExplainRequest will be served by the chosen DeployedModel, overriding Endpoint.traffic_split.
   * @return deployedModelId
   */
  @javax.annotation.Nullable
  public String getDeployedModelId() {
    return deployedModelId;
  }

  public void setDeployedModelId(String deployedModelId) {
    this.deployedModelId = deployedModelId;
  }


  public GoogleCloudAiplatformV1beta1ExplainRequest explanationSpecOverride(GoogleCloudAiplatformV1beta1ExplanationSpecOverride explanationSpecOverride) {
    this.explanationSpecOverride = explanationSpecOverride;
    return this;
  }

  /**
   * Get explanationSpecOverride
   * @return explanationSpecOverride
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1ExplanationSpecOverride getExplanationSpecOverride() {
    return explanationSpecOverride;
  }

  public void setExplanationSpecOverride(GoogleCloudAiplatformV1beta1ExplanationSpecOverride explanationSpecOverride) {
    this.explanationSpecOverride = explanationSpecOverride;
  }


  public GoogleCloudAiplatformV1beta1ExplainRequest instances(List<Object> instances) {
    this.instances = instances;
    return this;
  }

  public GoogleCloudAiplatformV1beta1ExplainRequest addInstancesItem(Object instancesItem) {
    if (this.instances == null) {
      this.instances = new ArrayList<>();
    }
    this.instances.add(instancesItem);
    return this;
  }

  /**
   * Required. The instances that are the input to the explanation call. A DeployedModel may have an upper limit on the number of instances it supports per request, and when it is exceeded the explanation call errors in case of AutoML Models, or, in case of customer created Models, the behaviour is as documented by that Model. The schema of any single instance may be specified via Endpoint&#39;s DeployedModels&#39; Model&#39;s PredictSchemata&#39;s instance_schema_uri.
   * @return instances
   */
  @javax.annotation.Nullable
  public List<Object> getInstances() {
    return instances;
  }

  public void setInstances(List<Object> instances) {
    this.instances = instances;
  }


  public GoogleCloudAiplatformV1beta1ExplainRequest parameters(Object parameters) {
    this.parameters = parameters;
    return this;
  }

  /**
   * The parameters that govern the prediction. The schema of the parameters may be specified via Endpoint&#39;s DeployedModels&#39; Model&#39;s PredictSchemata&#39;s parameters_schema_uri.
   * @return parameters
   */
  @javax.annotation.Nullable
  public Object getParameters() {
    return parameters;
  }

  public void setParameters(Object parameters) {
    this.parameters = parameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1ExplainRequest googleCloudAiplatformV1beta1ExplainRequest = (GoogleCloudAiplatformV1beta1ExplainRequest) o;
    return Objects.equals(this.concurrentExplanationSpecOverride, googleCloudAiplatformV1beta1ExplainRequest.concurrentExplanationSpecOverride) &&
        Objects.equals(this.deployedModelId, googleCloudAiplatformV1beta1ExplainRequest.deployedModelId) &&
        Objects.equals(this.explanationSpecOverride, googleCloudAiplatformV1beta1ExplainRequest.explanationSpecOverride) &&
        Objects.equals(this.instances, googleCloudAiplatformV1beta1ExplainRequest.instances) &&
        Objects.equals(this.parameters, googleCloudAiplatformV1beta1ExplainRequest.parameters);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(concurrentExplanationSpecOverride, deployedModelId, explanationSpecOverride, instances, parameters);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1ExplainRequest {\n");
    sb.append("    concurrentExplanationSpecOverride: ").append(toIndentedString(concurrentExplanationSpecOverride)).append("\n");
    sb.append("    deployedModelId: ").append(toIndentedString(deployedModelId)).append("\n");
    sb.append("    explanationSpecOverride: ").append(toIndentedString(explanationSpecOverride)).append("\n");
    sb.append("    instances: ").append(toIndentedString(instances)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("concurrentExplanationSpecOverride");
    openapiFields.add("deployedModelId");
    openapiFields.add("explanationSpecOverride");
    openapiFields.add("instances");
    openapiFields.add("parameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1ExplainRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1ExplainRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1ExplainRequest is not found in the empty JSON string", GoogleCloudAiplatformV1beta1ExplainRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1ExplainRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1ExplainRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("deployedModelId") != null && !jsonObj.get("deployedModelId").isJsonNull()) && !jsonObj.get("deployedModelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deployedModelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deployedModelId").toString()));
      }
      // validate the optional field `explanationSpecOverride`
      if (jsonObj.get("explanationSpecOverride") != null && !jsonObj.get("explanationSpecOverride").isJsonNull()) {
        GoogleCloudAiplatformV1beta1ExplanationSpecOverride.validateJsonElement(jsonObj.get("explanationSpecOverride"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("instances") != null && !jsonObj.get("instances").isJsonNull() && !jsonObj.get("instances").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `instances` to be an array in the JSON string but got `%s`", jsonObj.get("instances").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1ExplainRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1ExplainRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1ExplainRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1ExplainRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1ExplainRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1ExplainRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1ExplainRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1ExplainRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1ExplainRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1ExplainRequest
   */
  public static GoogleCloudAiplatformV1beta1ExplainRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1ExplainRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1ExplainRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

