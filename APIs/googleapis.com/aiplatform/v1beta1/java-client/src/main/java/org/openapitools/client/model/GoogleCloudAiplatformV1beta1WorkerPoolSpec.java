/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ContainerSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DiskSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1MachineSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1NfsMount;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PythonPackageSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the spec of a worker pool in a job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1WorkerPoolSpec {
  public static final String SERIALIZED_NAME_CONTAINER_SPEC = "containerSpec";
  @SerializedName(SERIALIZED_NAME_CONTAINER_SPEC)
  private GoogleCloudAiplatformV1beta1ContainerSpec containerSpec;

  public static final String SERIALIZED_NAME_DISK_SPEC = "diskSpec";
  @SerializedName(SERIALIZED_NAME_DISK_SPEC)
  private GoogleCloudAiplatformV1beta1DiskSpec diskSpec;

  public static final String SERIALIZED_NAME_MACHINE_SPEC = "machineSpec";
  @SerializedName(SERIALIZED_NAME_MACHINE_SPEC)
  private GoogleCloudAiplatformV1beta1MachineSpec machineSpec;

  public static final String SERIALIZED_NAME_NFS_MOUNTS = "nfsMounts";
  @SerializedName(SERIALIZED_NAME_NFS_MOUNTS)
  private List<GoogleCloudAiplatformV1beta1NfsMount> nfsMounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_PYTHON_PACKAGE_SPEC = "pythonPackageSpec";
  @SerializedName(SERIALIZED_NAME_PYTHON_PACKAGE_SPEC)
  private GoogleCloudAiplatformV1beta1PythonPackageSpec pythonPackageSpec;

  public static final String SERIALIZED_NAME_REPLICA_COUNT = "replicaCount";
  @SerializedName(SERIALIZED_NAME_REPLICA_COUNT)
  private String replicaCount;

  public GoogleCloudAiplatformV1beta1WorkerPoolSpec() {
  }

  public GoogleCloudAiplatformV1beta1WorkerPoolSpec containerSpec(GoogleCloudAiplatformV1beta1ContainerSpec containerSpec) {
    this.containerSpec = containerSpec;
    return this;
  }

  /**
   * Get containerSpec
   * @return containerSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1ContainerSpec getContainerSpec() {
    return containerSpec;
  }

  public void setContainerSpec(GoogleCloudAiplatformV1beta1ContainerSpec containerSpec) {
    this.containerSpec = containerSpec;
  }


  public GoogleCloudAiplatformV1beta1WorkerPoolSpec diskSpec(GoogleCloudAiplatformV1beta1DiskSpec diskSpec) {
    this.diskSpec = diskSpec;
    return this;
  }

  /**
   * Get diskSpec
   * @return diskSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1DiskSpec getDiskSpec() {
    return diskSpec;
  }

  public void setDiskSpec(GoogleCloudAiplatformV1beta1DiskSpec diskSpec) {
    this.diskSpec = diskSpec;
  }


  public GoogleCloudAiplatformV1beta1WorkerPoolSpec machineSpec(GoogleCloudAiplatformV1beta1MachineSpec machineSpec) {
    this.machineSpec = machineSpec;
    return this;
  }

  /**
   * Get machineSpec
   * @return machineSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1MachineSpec getMachineSpec() {
    return machineSpec;
  }

  public void setMachineSpec(GoogleCloudAiplatformV1beta1MachineSpec machineSpec) {
    this.machineSpec = machineSpec;
  }


  public GoogleCloudAiplatformV1beta1WorkerPoolSpec nfsMounts(List<GoogleCloudAiplatformV1beta1NfsMount> nfsMounts) {
    this.nfsMounts = nfsMounts;
    return this;
  }

  public GoogleCloudAiplatformV1beta1WorkerPoolSpec addNfsMountsItem(GoogleCloudAiplatformV1beta1NfsMount nfsMountsItem) {
    if (this.nfsMounts == null) {
      this.nfsMounts = new ArrayList<>();
    }
    this.nfsMounts.add(nfsMountsItem);
    return this;
  }

  /**
   * Optional. List of NFS mount spec.
   * @return nfsMounts
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1NfsMount> getNfsMounts() {
    return nfsMounts;
  }

  public void setNfsMounts(List<GoogleCloudAiplatformV1beta1NfsMount> nfsMounts) {
    this.nfsMounts = nfsMounts;
  }


  public GoogleCloudAiplatformV1beta1WorkerPoolSpec pythonPackageSpec(GoogleCloudAiplatformV1beta1PythonPackageSpec pythonPackageSpec) {
    this.pythonPackageSpec = pythonPackageSpec;
    return this;
  }

  /**
   * Get pythonPackageSpec
   * @return pythonPackageSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1PythonPackageSpec getPythonPackageSpec() {
    return pythonPackageSpec;
  }

  public void setPythonPackageSpec(GoogleCloudAiplatformV1beta1PythonPackageSpec pythonPackageSpec) {
    this.pythonPackageSpec = pythonPackageSpec;
  }


  public GoogleCloudAiplatformV1beta1WorkerPoolSpec replicaCount(String replicaCount) {
    this.replicaCount = replicaCount;
    return this;
  }

  /**
   * Optional. The number of worker replicas to use for this worker pool.
   * @return replicaCount
   */
  @javax.annotation.Nullable
  public String getReplicaCount() {
    return replicaCount;
  }

  public void setReplicaCount(String replicaCount) {
    this.replicaCount = replicaCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1WorkerPoolSpec googleCloudAiplatformV1beta1WorkerPoolSpec = (GoogleCloudAiplatformV1beta1WorkerPoolSpec) o;
    return Objects.equals(this.containerSpec, googleCloudAiplatformV1beta1WorkerPoolSpec.containerSpec) &&
        Objects.equals(this.diskSpec, googleCloudAiplatformV1beta1WorkerPoolSpec.diskSpec) &&
        Objects.equals(this.machineSpec, googleCloudAiplatformV1beta1WorkerPoolSpec.machineSpec) &&
        Objects.equals(this.nfsMounts, googleCloudAiplatformV1beta1WorkerPoolSpec.nfsMounts) &&
        Objects.equals(this.pythonPackageSpec, googleCloudAiplatformV1beta1WorkerPoolSpec.pythonPackageSpec) &&
        Objects.equals(this.replicaCount, googleCloudAiplatformV1beta1WorkerPoolSpec.replicaCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containerSpec, diskSpec, machineSpec, nfsMounts, pythonPackageSpec, replicaCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1WorkerPoolSpec {\n");
    sb.append("    containerSpec: ").append(toIndentedString(containerSpec)).append("\n");
    sb.append("    diskSpec: ").append(toIndentedString(diskSpec)).append("\n");
    sb.append("    machineSpec: ").append(toIndentedString(machineSpec)).append("\n");
    sb.append("    nfsMounts: ").append(toIndentedString(nfsMounts)).append("\n");
    sb.append("    pythonPackageSpec: ").append(toIndentedString(pythonPackageSpec)).append("\n");
    sb.append("    replicaCount: ").append(toIndentedString(replicaCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("containerSpec");
    openapiFields.add("diskSpec");
    openapiFields.add("machineSpec");
    openapiFields.add("nfsMounts");
    openapiFields.add("pythonPackageSpec");
    openapiFields.add("replicaCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1WorkerPoolSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1WorkerPoolSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1WorkerPoolSpec is not found in the empty JSON string", GoogleCloudAiplatformV1beta1WorkerPoolSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1WorkerPoolSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1WorkerPoolSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `containerSpec`
      if (jsonObj.get("containerSpec") != null && !jsonObj.get("containerSpec").isJsonNull()) {
        GoogleCloudAiplatformV1beta1ContainerSpec.validateJsonElement(jsonObj.get("containerSpec"));
      }
      // validate the optional field `diskSpec`
      if (jsonObj.get("diskSpec") != null && !jsonObj.get("diskSpec").isJsonNull()) {
        GoogleCloudAiplatformV1beta1DiskSpec.validateJsonElement(jsonObj.get("diskSpec"));
      }
      // validate the optional field `machineSpec`
      if (jsonObj.get("machineSpec") != null && !jsonObj.get("machineSpec").isJsonNull()) {
        GoogleCloudAiplatformV1beta1MachineSpec.validateJsonElement(jsonObj.get("machineSpec"));
      }
      if (jsonObj.get("nfsMounts") != null && !jsonObj.get("nfsMounts").isJsonNull()) {
        JsonArray jsonArraynfsMounts = jsonObj.getAsJsonArray("nfsMounts");
        if (jsonArraynfsMounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("nfsMounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `nfsMounts` to be an array in the JSON string but got `%s`", jsonObj.get("nfsMounts").toString()));
          }

          // validate the optional field `nfsMounts` (array)
          for (int i = 0; i < jsonArraynfsMounts.size(); i++) {
            GoogleCloudAiplatformV1beta1NfsMount.validateJsonElement(jsonArraynfsMounts.get(i));
          };
        }
      }
      // validate the optional field `pythonPackageSpec`
      if (jsonObj.get("pythonPackageSpec") != null && !jsonObj.get("pythonPackageSpec").isJsonNull()) {
        GoogleCloudAiplatformV1beta1PythonPackageSpec.validateJsonElement(jsonObj.get("pythonPackageSpec"));
      }
      if ((jsonObj.get("replicaCount") != null && !jsonObj.get("replicaCount").isJsonNull()) && !jsonObj.get("replicaCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `replicaCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("replicaCount").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1WorkerPoolSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1WorkerPoolSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1WorkerPoolSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1WorkerPoolSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1WorkerPoolSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1WorkerPoolSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1WorkerPoolSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1WorkerPoolSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1WorkerPoolSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1WorkerPoolSpec
   */
  public static GoogleCloudAiplatformV1beta1WorkerPoolSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1WorkerPoolSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1WorkerPoolSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

