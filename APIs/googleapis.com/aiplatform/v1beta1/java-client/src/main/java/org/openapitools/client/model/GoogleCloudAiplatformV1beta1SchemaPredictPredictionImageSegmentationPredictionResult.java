/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Prediction output format for Image Segmentation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult {
  public static final String SERIALIZED_NAME_CATEGORY_MASK = "categoryMask";
  @SerializedName(SERIALIZED_NAME_CATEGORY_MASK)
  private String categoryMask;

  public static final String SERIALIZED_NAME_CONFIDENCE_MASK = "confidenceMask";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE_MASK)
  private String confidenceMask;

  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult() {
  }

  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult categoryMask(String categoryMask) {
    this.categoryMask = categoryMask;
    return this;
  }

  /**
   * A PNG image where each pixel in the mask represents the category in which the pixel in the original image was predicted to belong to. The size of this image will be the same as the original image. The mapping between the AnntoationSpec and the color can be found in model&#39;s metadata. The model will choose the most likely category and if none of the categories reach the confidence threshold, the pixel will be marked as background.
   * @return categoryMask
   */
  @javax.annotation.Nullable
  public String getCategoryMask() {
    return categoryMask;
  }

  public void setCategoryMask(String categoryMask) {
    this.categoryMask = categoryMask;
  }


  public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult confidenceMask(String confidenceMask) {
    this.confidenceMask = confidenceMask;
    return this;
  }

  /**
   * A one channel image which is encoded as an 8bit lossless PNG. The size of the image will be the same as the original image. For a specific pixel, darker color means less confidence in correctness of the cateogry in the categoryMask for the corresponding pixel. Black means no confidence and white means complete confidence.
   * @return confidenceMask
   */
  @javax.annotation.Nullable
  public String getConfidenceMask() {
    return confidenceMask;
  }

  public void setConfidenceMask(String confidenceMask) {
    this.confidenceMask = confidenceMask;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult googleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult = (GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult) o;
    return Objects.equals(this.categoryMask, googleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult.categoryMask) &&
        Objects.equals(this.confidenceMask, googleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult.confidenceMask);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryMask, confidenceMask);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult {\n");
    sb.append("    categoryMask: ").append(toIndentedString(categoryMask)).append("\n");
    sb.append("    confidenceMask: ").append(toIndentedString(confidenceMask)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categoryMask");
    openapiFields.add("confidenceMask");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult is not found in the empty JSON string", GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("categoryMask") != null && !jsonObj.get("categoryMask").isJsonNull()) && !jsonObj.get("categoryMask").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryMask` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryMask").toString()));
      }
      if ((jsonObj.get("confidenceMask") != null && !jsonObj.get("confidenceMask").isJsonNull()) && !jsonObj.get("confidenceMask").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `confidenceMask` to be a primitive type in the JSON string but got `%s`", jsonObj.get("confidenceMask").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult
   */
  public static GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1SchemaPredictPredictionImageSegmentationPredictionResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

