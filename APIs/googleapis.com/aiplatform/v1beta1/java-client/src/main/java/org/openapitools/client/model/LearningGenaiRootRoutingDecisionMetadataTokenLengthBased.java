/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata;
import org.openapitools.client.model.LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LearningGenaiRootRoutingDecisionMetadataTokenLengthBased {
  public static final String SERIALIZED_NAME_MODEL_INPUT_TOKEN_METADATA = "modelInputTokenMetadata";
  @SerializedName(SERIALIZED_NAME_MODEL_INPUT_TOKEN_METADATA)
  private List<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata> modelInputTokenMetadata = new ArrayList<>();

  public static final String SERIALIZED_NAME_MODEL_MAX_TOKEN_METADATA = "modelMaxTokenMetadata";
  @SerializedName(SERIALIZED_NAME_MODEL_MAX_TOKEN_METADATA)
  private List<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata> modelMaxTokenMetadata = new ArrayList<>();

  public LearningGenaiRootRoutingDecisionMetadataTokenLengthBased() {
  }

  public LearningGenaiRootRoutingDecisionMetadataTokenLengthBased modelInputTokenMetadata(List<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata> modelInputTokenMetadata) {
    this.modelInputTokenMetadata = modelInputTokenMetadata;
    return this;
  }

  public LearningGenaiRootRoutingDecisionMetadataTokenLengthBased addModelInputTokenMetadataItem(LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata modelInputTokenMetadataItem) {
    if (this.modelInputTokenMetadata == null) {
      this.modelInputTokenMetadata = new ArrayList<>();
    }
    this.modelInputTokenMetadata.add(modelInputTokenMetadataItem);
    return this;
  }

  /**
   * Get modelInputTokenMetadata
   * @return modelInputTokenMetadata
   */
  @javax.annotation.Nullable
  public List<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata> getModelInputTokenMetadata() {
    return modelInputTokenMetadata;
  }

  public void setModelInputTokenMetadata(List<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata> modelInputTokenMetadata) {
    this.modelInputTokenMetadata = modelInputTokenMetadata;
  }


  public LearningGenaiRootRoutingDecisionMetadataTokenLengthBased modelMaxTokenMetadata(List<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata> modelMaxTokenMetadata) {
    this.modelMaxTokenMetadata = modelMaxTokenMetadata;
    return this;
  }

  public LearningGenaiRootRoutingDecisionMetadataTokenLengthBased addModelMaxTokenMetadataItem(LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata modelMaxTokenMetadataItem) {
    if (this.modelMaxTokenMetadata == null) {
      this.modelMaxTokenMetadata = new ArrayList<>();
    }
    this.modelMaxTokenMetadata.add(modelMaxTokenMetadataItem);
    return this;
  }

  /**
   * Get modelMaxTokenMetadata
   * @return modelMaxTokenMetadata
   */
  @javax.annotation.Nullable
  public List<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata> getModelMaxTokenMetadata() {
    return modelMaxTokenMetadata;
  }

  public void setModelMaxTokenMetadata(List<LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata> modelMaxTokenMetadata) {
    this.modelMaxTokenMetadata = modelMaxTokenMetadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LearningGenaiRootRoutingDecisionMetadataTokenLengthBased learningGenaiRootRoutingDecisionMetadataTokenLengthBased = (LearningGenaiRootRoutingDecisionMetadataTokenLengthBased) o;
    return Objects.equals(this.modelInputTokenMetadata, learningGenaiRootRoutingDecisionMetadataTokenLengthBased.modelInputTokenMetadata) &&
        Objects.equals(this.modelMaxTokenMetadata, learningGenaiRootRoutingDecisionMetadataTokenLengthBased.modelMaxTokenMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(modelInputTokenMetadata, modelMaxTokenMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LearningGenaiRootRoutingDecisionMetadataTokenLengthBased {\n");
    sb.append("    modelInputTokenMetadata: ").append(toIndentedString(modelInputTokenMetadata)).append("\n");
    sb.append("    modelMaxTokenMetadata: ").append(toIndentedString(modelMaxTokenMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("modelInputTokenMetadata");
    openapiFields.add("modelMaxTokenMetadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LearningGenaiRootRoutingDecisionMetadataTokenLengthBased.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LearningGenaiRootRoutingDecisionMetadataTokenLengthBased is not found in the empty JSON string", LearningGenaiRootRoutingDecisionMetadataTokenLengthBased.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LearningGenaiRootRoutingDecisionMetadataTokenLengthBased.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LearningGenaiRootRoutingDecisionMetadataTokenLengthBased` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("modelInputTokenMetadata") != null && !jsonObj.get("modelInputTokenMetadata").isJsonNull()) {
        JsonArray jsonArraymodelInputTokenMetadata = jsonObj.getAsJsonArray("modelInputTokenMetadata");
        if (jsonArraymodelInputTokenMetadata != null) {
          // ensure the json data is an array
          if (!jsonObj.get("modelInputTokenMetadata").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `modelInputTokenMetadata` to be an array in the JSON string but got `%s`", jsonObj.get("modelInputTokenMetadata").toString()));
          }

          // validate the optional field `modelInputTokenMetadata` (array)
          for (int i = 0; i < jsonArraymodelInputTokenMetadata.size(); i++) {
            LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelInputTokenMetadata.validateJsonElement(jsonArraymodelInputTokenMetadata.get(i));
          };
        }
      }
      if (jsonObj.get("modelMaxTokenMetadata") != null && !jsonObj.get("modelMaxTokenMetadata").isJsonNull()) {
        JsonArray jsonArraymodelMaxTokenMetadata = jsonObj.getAsJsonArray("modelMaxTokenMetadata");
        if (jsonArraymodelMaxTokenMetadata != null) {
          // ensure the json data is an array
          if (!jsonObj.get("modelMaxTokenMetadata").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `modelMaxTokenMetadata` to be an array in the JSON string but got `%s`", jsonObj.get("modelMaxTokenMetadata").toString()));
          }

          // validate the optional field `modelMaxTokenMetadata` (array)
          for (int i = 0; i < jsonArraymodelMaxTokenMetadata.size(); i++) {
            LearningGenaiRootRoutingDecisionMetadataTokenLengthBasedModelMaxTokenMetadata.validateJsonElement(jsonArraymodelMaxTokenMetadata.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LearningGenaiRootRoutingDecisionMetadataTokenLengthBased.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LearningGenaiRootRoutingDecisionMetadataTokenLengthBased' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LearningGenaiRootRoutingDecisionMetadataTokenLengthBased> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LearningGenaiRootRoutingDecisionMetadataTokenLengthBased.class));

       return (TypeAdapter<T>) new TypeAdapter<LearningGenaiRootRoutingDecisionMetadataTokenLengthBased>() {
           @Override
           public void write(JsonWriter out, LearningGenaiRootRoutingDecisionMetadataTokenLengthBased value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LearningGenaiRootRoutingDecisionMetadataTokenLengthBased read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LearningGenaiRootRoutingDecisionMetadataTokenLengthBased given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
   * @throws IOException if the JSON string is invalid with respect to LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
   */
  public static LearningGenaiRootRoutingDecisionMetadataTokenLengthBased fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LearningGenaiRootRoutingDecisionMetadataTokenLengthBased.class);
  }

  /**
   * Convert an instance of LearningGenaiRootRoutingDecisionMetadataTokenLengthBased to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

