/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Execution;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The runtime detail of a task execution.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1PipelineTaskDetail {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private GoogleRpcStatus error;

  public static final String SERIALIZED_NAME_EXECUTION = "execution";
  @SerializedName(SERIALIZED_NAME_EXECUTION)
  private GoogleCloudAiplatformV1beta1Execution execution;

  public static final String SERIALIZED_NAME_EXECUTOR_DETAIL = "executorDetail";
  @SerializedName(SERIALIZED_NAME_EXECUTOR_DETAIL)
  private GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail executorDetail;

  public static final String SERIALIZED_NAME_INPUTS = "inputs";
  @SerializedName(SERIALIZED_NAME_INPUTS)
  private Map<String, GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList> inputs = new HashMap<>();

  public static final String SERIALIZED_NAME_OUTPUTS = "outputs";
  @SerializedName(SERIALIZED_NAME_OUTPUTS)
  private Map<String, GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList> outputs = new HashMap<>();

  public static final String SERIALIZED_NAME_PARENT_TASK_ID = "parentTaskId";
  @SerializedName(SERIALIZED_NAME_PARENT_TASK_ID)
  private String parentTaskId;

  public static final String SERIALIZED_NAME_PIPELINE_TASK_STATUS = "pipelineTaskStatus";
  @SerializedName(SERIALIZED_NAME_PIPELINE_TASK_STATUS)
  private List<GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus> pipelineTaskStatus = new ArrayList<>();

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * Output only. State of the task.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    STATE_UNSPECIFIED("STATE_UNSPECIFIED"),
    
    PENDING("PENDING"),
    
    RUNNING("RUNNING"),
    
    SUCCEEDED("SUCCEEDED"),
    
    CANCEL_PENDING("CANCEL_PENDING"),
    
    CANCELLING("CANCELLING"),
    
    CANCELLED("CANCELLED"),
    
    FAILED("FAILED"),
    
    SKIPPED("SKIPPED"),
    
    NOT_TRIGGERED("NOT_TRIGGERED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TASK_ID = "taskId";
  @SerializedName(SERIALIZED_NAME_TASK_ID)
  private String taskId;

  public static final String SERIALIZED_NAME_TASK_NAME = "taskName";
  @SerializedName(SERIALIZED_NAME_TASK_NAME)
  private String taskName;

  public GoogleCloudAiplatformV1beta1PipelineTaskDetail() {
  }

  public GoogleCloudAiplatformV1beta1PipelineTaskDetail(
     String createTime, 
     String endTime, 
     Map<String, GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList> inputs, 
     Map<String, GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList> outputs, 
     String parentTaskId, 
     List<GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus> pipelineTaskStatus, 
     String startTime, 
     StateEnum state, 
     String taskId, 
     String taskName
  ) {
    this();
    this.createTime = createTime;
    this.endTime = endTime;
    this.inputs = inputs;
    this.outputs = outputs;
    this.parentTaskId = parentTaskId;
    this.pipelineTaskStatus = pipelineTaskStatus;
    this.startTime = startTime;
    this.state = state;
    this.taskId = taskId;
    this.taskName = taskName;
  }

  /**
   * Output only. Task create time.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  /**
   * Output only. Task end time.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }



  public GoogleCloudAiplatformV1beta1PipelineTaskDetail error(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getError() {
    return error;
  }

  public void setError(GoogleRpcStatus error) {
    this.error = error;
  }


  public GoogleCloudAiplatformV1beta1PipelineTaskDetail execution(GoogleCloudAiplatformV1beta1Execution execution) {
    this.execution = execution;
    return this;
  }

  /**
   * Get execution
   * @return execution
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1Execution getExecution() {
    return execution;
  }

  public void setExecution(GoogleCloudAiplatformV1beta1Execution execution) {
    this.execution = execution;
  }


  public GoogleCloudAiplatformV1beta1PipelineTaskDetail executorDetail(GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail executorDetail) {
    this.executorDetail = executorDetail;
    return this;
  }

  /**
   * Get executorDetail
   * @return executorDetail
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail getExecutorDetail() {
    return executorDetail;
  }

  public void setExecutorDetail(GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail executorDetail) {
    this.executorDetail = executorDetail;
  }


  /**
   * Output only. The runtime input artifacts of the task.
   * @return inputs
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList> getInputs() {
    return inputs;
  }



  /**
   * Output only. The runtime output artifacts of the task.
   * @return outputs
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudAiplatformV1beta1PipelineTaskDetailArtifactList> getOutputs() {
    return outputs;
  }



  /**
   * Output only. The id of the parent task if the task is within a component scope. Empty if the task is at the root level.
   * @return parentTaskId
   */
  @javax.annotation.Nullable
  public String getParentTaskId() {
    return parentTaskId;
  }



  /**
   * Output only. A list of task status. This field keeps a record of task status evolving over time.
   * @return pipelineTaskStatus
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus> getPipelineTaskStatus() {
    return pipelineTaskStatus;
  }



  /**
   * Output only. Task start time.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }



  /**
   * Output only. State of the task.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  /**
   * Output only. The system generated ID of the task.
   * @return taskId
   */
  @javax.annotation.Nullable
  public String getTaskId() {
    return taskId;
  }



  /**
   * Output only. The user specified name of the task that is defined in pipeline_spec.
   * @return taskName
   */
  @javax.annotation.Nullable
  public String getTaskName() {
    return taskName;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1PipelineTaskDetail googleCloudAiplatformV1beta1PipelineTaskDetail = (GoogleCloudAiplatformV1beta1PipelineTaskDetail) o;
    return Objects.equals(this.createTime, googleCloudAiplatformV1beta1PipelineTaskDetail.createTime) &&
        Objects.equals(this.endTime, googleCloudAiplatformV1beta1PipelineTaskDetail.endTime) &&
        Objects.equals(this.error, googleCloudAiplatformV1beta1PipelineTaskDetail.error) &&
        Objects.equals(this.execution, googleCloudAiplatformV1beta1PipelineTaskDetail.execution) &&
        Objects.equals(this.executorDetail, googleCloudAiplatformV1beta1PipelineTaskDetail.executorDetail) &&
        Objects.equals(this.inputs, googleCloudAiplatformV1beta1PipelineTaskDetail.inputs) &&
        Objects.equals(this.outputs, googleCloudAiplatformV1beta1PipelineTaskDetail.outputs) &&
        Objects.equals(this.parentTaskId, googleCloudAiplatformV1beta1PipelineTaskDetail.parentTaskId) &&
        Objects.equals(this.pipelineTaskStatus, googleCloudAiplatformV1beta1PipelineTaskDetail.pipelineTaskStatus) &&
        Objects.equals(this.startTime, googleCloudAiplatformV1beta1PipelineTaskDetail.startTime) &&
        Objects.equals(this.state, googleCloudAiplatformV1beta1PipelineTaskDetail.state) &&
        Objects.equals(this.taskId, googleCloudAiplatformV1beta1PipelineTaskDetail.taskId) &&
        Objects.equals(this.taskName, googleCloudAiplatformV1beta1PipelineTaskDetail.taskName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, endTime, error, execution, executorDetail, inputs, outputs, parentTaskId, pipelineTaskStatus, startTime, state, taskId, taskName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1PipelineTaskDetail {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    execution: ").append(toIndentedString(execution)).append("\n");
    sb.append("    executorDetail: ").append(toIndentedString(executorDetail)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    parentTaskId: ").append(toIndentedString(parentTaskId)).append("\n");
    sb.append("    pipelineTaskStatus: ").append(toIndentedString(pipelineTaskStatus)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskName: ").append(toIndentedString(taskName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("endTime");
    openapiFields.add("error");
    openapiFields.add("execution");
    openapiFields.add("executorDetail");
    openapiFields.add("inputs");
    openapiFields.add("outputs");
    openapiFields.add("parentTaskId");
    openapiFields.add("pipelineTaskStatus");
    openapiFields.add("startTime");
    openapiFields.add("state");
    openapiFields.add("taskId");
    openapiFields.add("taskName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1PipelineTaskDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1PipelineTaskDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1PipelineTaskDetail is not found in the empty JSON string", GoogleCloudAiplatformV1beta1PipelineTaskDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1PipelineTaskDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1PipelineTaskDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("error"));
      }
      // validate the optional field `execution`
      if (jsonObj.get("execution") != null && !jsonObj.get("execution").isJsonNull()) {
        GoogleCloudAiplatformV1beta1Execution.validateJsonElement(jsonObj.get("execution"));
      }
      // validate the optional field `executorDetail`
      if (jsonObj.get("executorDetail") != null && !jsonObj.get("executorDetail").isJsonNull()) {
        GoogleCloudAiplatformV1beta1PipelineTaskExecutorDetail.validateJsonElement(jsonObj.get("executorDetail"));
      }
      if ((jsonObj.get("parentTaskId") != null && !jsonObj.get("parentTaskId").isJsonNull()) && !jsonObj.get("parentTaskId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentTaskId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentTaskId").toString()));
      }
      if (jsonObj.get("pipelineTaskStatus") != null && !jsonObj.get("pipelineTaskStatus").isJsonNull()) {
        JsonArray jsonArraypipelineTaskStatus = jsonObj.getAsJsonArray("pipelineTaskStatus");
        if (jsonArraypipelineTaskStatus != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pipelineTaskStatus").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pipelineTaskStatus` to be an array in the JSON string but got `%s`", jsonObj.get("pipelineTaskStatus").toString()));
          }

          // validate the optional field `pipelineTaskStatus` (array)
          for (int i = 0; i < jsonArraypipelineTaskStatus.size(); i++) {
            GoogleCloudAiplatformV1beta1PipelineTaskDetailPipelineTaskStatus.validateJsonElement(jsonArraypipelineTaskStatus.get(i));
          };
        }
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("taskId") != null && !jsonObj.get("taskId").isJsonNull()) && !jsonObj.get("taskId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taskId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taskId").toString()));
      }
      if ((jsonObj.get("taskName") != null && !jsonObj.get("taskName").isJsonNull()) && !jsonObj.get("taskName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taskName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taskName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1PipelineTaskDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1PipelineTaskDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1PipelineTaskDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1PipelineTaskDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1PipelineTaskDetail>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1PipelineTaskDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1PipelineTaskDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1PipelineTaskDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1PipelineTaskDetail
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1PipelineTaskDetail
   */
  public static GoogleCloudAiplatformV1beta1PipelineTaskDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1PipelineTaskDetail.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1PipelineTaskDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

