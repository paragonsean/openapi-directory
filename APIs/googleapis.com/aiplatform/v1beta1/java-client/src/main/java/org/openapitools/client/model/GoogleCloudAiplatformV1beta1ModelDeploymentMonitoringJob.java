/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1EncryptionSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1GcsDestination;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SamplingStrategy;
import org.openapitools.client.model.GoogleRpcStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a job that runs periodically to monitor the deployed models in an endpoint. It will analyze the logged training &amp; prediction data to detect any abnormal behaviors.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob {
  public static final String SERIALIZED_NAME_ANALYSIS_INSTANCE_SCHEMA_URI = "analysisInstanceSchemaUri";
  @SerializedName(SERIALIZED_NAME_ANALYSIS_INSTANCE_SCHEMA_URI)
  private String analysisInstanceSchemaUri;

  public static final String SERIALIZED_NAME_BIGQUERY_TABLES = "bigqueryTables";
  @SerializedName(SERIALIZED_NAME_BIGQUERY_TABLES)
  private List<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable> bigqueryTables = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_MONITORING_PIPELINE_LOGS = "enableMonitoringPipelineLogs";
  @SerializedName(SERIALIZED_NAME_ENABLE_MONITORING_PIPELINE_LOGS)
  private Boolean enableMonitoringPipelineLogs;

  public static final String SERIALIZED_NAME_ENCRYPTION_SPEC = "encryptionSpec";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_SPEC)
  private GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec;

  public static final String SERIALIZED_NAME_ENDPOINT = "endpoint";
  @SerializedName(SERIALIZED_NAME_ENDPOINT)
  private String endpoint;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private GoogleRpcStatus error;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_LATEST_MONITORING_PIPELINE_METADATA = "latestMonitoringPipelineMetadata";
  @SerializedName(SERIALIZED_NAME_LATEST_MONITORING_PIPELINE_METADATA)
  private GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata latestMonitoringPipelineMetadata;

  public static final String SERIALIZED_NAME_LOG_TTL = "logTtl";
  @SerializedName(SERIALIZED_NAME_LOG_TTL)
  private String logTtl;

  public static final String SERIALIZED_NAME_LOGGING_SAMPLING_STRATEGY = "loggingSamplingStrategy";
  @SerializedName(SERIALIZED_NAME_LOGGING_SAMPLING_STRATEGY)
  private GoogleCloudAiplatformV1beta1SamplingStrategy loggingSamplingStrategy;

  public static final String SERIALIZED_NAME_MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_CONFIGS = "modelDeploymentMonitoringObjectiveConfigs";
  @SerializedName(SERIALIZED_NAME_MODEL_DEPLOYMENT_MONITORING_OBJECTIVE_CONFIGS)
  private List<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig> modelDeploymentMonitoringObjectiveConfigs = new ArrayList<>();

  public static final String SERIALIZED_NAME_MODEL_DEPLOYMENT_MONITORING_SCHEDULE_CONFIG = "modelDeploymentMonitoringScheduleConfig";
  @SerializedName(SERIALIZED_NAME_MODEL_DEPLOYMENT_MONITORING_SCHEDULE_CONFIG)
  private GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig modelDeploymentMonitoringScheduleConfig;

  public static final String SERIALIZED_NAME_MODEL_MONITORING_ALERT_CONFIG = "modelMonitoringAlertConfig";
  @SerializedName(SERIALIZED_NAME_MODEL_MONITORING_ALERT_CONFIG)
  private GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig modelMonitoringAlertConfig;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEXT_SCHEDULE_TIME = "nextScheduleTime";
  @SerializedName(SERIALIZED_NAME_NEXT_SCHEDULE_TIME)
  private String nextScheduleTime;

  public static final String SERIALIZED_NAME_PREDICT_INSTANCE_SCHEMA_URI = "predictInstanceSchemaUri";
  @SerializedName(SERIALIZED_NAME_PREDICT_INSTANCE_SCHEMA_URI)
  private String predictInstanceSchemaUri;

  public static final String SERIALIZED_NAME_SAMPLE_PREDICT_INSTANCE = "samplePredictInstance";
  @SerializedName(SERIALIZED_NAME_SAMPLE_PREDICT_INSTANCE)
  private Object samplePredictInstance = null;

  /**
   * Output only. Schedule state when the monitoring job is in Running state.
   */
  @JsonAdapter(ScheduleStateEnum.Adapter.class)
  public enum ScheduleStateEnum {
    MONITORING_SCHEDULE_STATE_UNSPECIFIED("MONITORING_SCHEDULE_STATE_UNSPECIFIED"),
    
    PENDING("PENDING"),
    
    OFFLINE("OFFLINE"),
    
    RUNNING("RUNNING");

    private String value;

    ScheduleStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ScheduleStateEnum fromValue(String value) {
      for (ScheduleStateEnum b : ScheduleStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ScheduleStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ScheduleStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ScheduleStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ScheduleStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ScheduleStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SCHEDULE_STATE = "scheduleState";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_STATE)
  private ScheduleStateEnum scheduleState;

  /**
   * Output only. The detailed state of the monitoring job. When the job is still creating, the state will be &#39;PENDING&#39;. Once the job is successfully created, the state will be &#39;RUNNING&#39;. Pause the job, the state will be &#39;PAUSED&#39;. Resume the job, the state will return to &#39;RUNNING&#39;.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    UNSPECIFIED("JOB_STATE_UNSPECIFIED"),
    
    QUEUED("JOB_STATE_QUEUED"),
    
    PENDING("JOB_STATE_PENDING"),
    
    RUNNING("JOB_STATE_RUNNING"),
    
    SUCCEEDED("JOB_STATE_SUCCEEDED"),
    
    FAILED("JOB_STATE_FAILED"),
    
    CANCELLING("JOB_STATE_CANCELLING"),
    
    CANCELLED("JOB_STATE_CANCELLED"),
    
    PAUSED("JOB_STATE_PAUSED"),
    
    EXPIRED("JOB_STATE_EXPIRED"),
    
    UPDATING("JOB_STATE_UPDATING"),
    
    PARTIALLY_SUCCEEDED("JOB_STATE_PARTIALLY_SUCCEEDED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_STATS_ANOMALIES_BASE_DIRECTORY = "statsAnomaliesBaseDirectory";
  @SerializedName(SERIALIZED_NAME_STATS_ANOMALIES_BASE_DIRECTORY)
  private GoogleCloudAiplatformV1beta1GcsDestination statsAnomaliesBaseDirectory;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob() {
  }

  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob(
     List<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable> bigqueryTables, 
     String createTime, 
     String name, 
     String nextScheduleTime, 
     ScheduleStateEnum scheduleState, 
     StateEnum state, 
     String updateTime
  ) {
    this();
    this.bigqueryTables = bigqueryTables;
    this.createTime = createTime;
    this.name = name;
    this.nextScheduleTime = nextScheduleTime;
    this.scheduleState = scheduleState;
    this.state = state;
    this.updateTime = updateTime;
  }

  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob analysisInstanceSchemaUri(String analysisInstanceSchemaUri) {
    this.analysisInstanceSchemaUri = analysisInstanceSchemaUri;
    return this;
  }

  /**
   * YAML schema file uri describing the format of a single instance that you want Tensorflow Data Validation (TFDV) to analyze. If this field is empty, all the feature data types are inferred from predict_instance_schema_uri, meaning that TFDV will use the data in the exact format(data type) as prediction request/response. If there are any data type differences between predict instance and TFDV instance, this field can be used to override the schema. For models trained with Vertex AI, this field must be set as all the fields in predict instance formatted as string.
   * @return analysisInstanceSchemaUri
   */
  @javax.annotation.Nullable
  public String getAnalysisInstanceSchemaUri() {
    return analysisInstanceSchemaUri;
  }

  public void setAnalysisInstanceSchemaUri(String analysisInstanceSchemaUri) {
    this.analysisInstanceSchemaUri = analysisInstanceSchemaUri;
  }


  /**
   * Output only. The created bigquery tables for the job under customer project. Customer could do their own query &amp; analysis. There could be 4 log tables in maximum: 1. Training data logging predict request/response 2. Serving data logging predict request/response
   * @return bigqueryTables
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable> getBigqueryTables() {
    return bigqueryTables;
  }



  /**
   * Output only. Timestamp when this ModelDeploymentMonitoringJob was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The user-defined name of the ModelDeploymentMonitoringJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a ModelDeploymentMonitoringJob.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob enableMonitoringPipelineLogs(Boolean enableMonitoringPipelineLogs) {
    this.enableMonitoringPipelineLogs = enableMonitoringPipelineLogs;
    return this;
  }

  /**
   * If true, the scheduled monitoring pipeline logs are sent to Google Cloud Logging, including pipeline status and anomalies detected. Please note the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging#pricing).
   * @return enableMonitoringPipelineLogs
   */
  @javax.annotation.Nullable
  public Boolean getEnableMonitoringPipelineLogs() {
    return enableMonitoringPipelineLogs;
  }

  public void setEnableMonitoringPipelineLogs(Boolean enableMonitoringPipelineLogs) {
    this.enableMonitoringPipelineLogs = enableMonitoringPipelineLogs;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob encryptionSpec(GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Get encryptionSpec
   * @return encryptionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  public void setEncryptionSpec(GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob endpoint(String endpoint) {
    this.endpoint = endpoint;
    return this;
  }

  /**
   * Required. Endpoint resource name. Format: &#x60;projects/{project}/locations/{location}/endpoints/{endpoint}&#x60;
   * @return endpoint
   */
  @javax.annotation.Nullable
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob error(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getError() {
    return error;
  }

  public void setError(GoogleRpcStatus error) {
    this.error = error;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The labels with user-defined metadata to organize your ModelDeploymentMonitoringJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob latestMonitoringPipelineMetadata(GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata latestMonitoringPipelineMetadata) {
    this.latestMonitoringPipelineMetadata = latestMonitoringPipelineMetadata;
    return this;
  }

  /**
   * Get latestMonitoringPipelineMetadata
   * @return latestMonitoringPipelineMetadata
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata getLatestMonitoringPipelineMetadata() {
    return latestMonitoringPipelineMetadata;
  }

  public void setLatestMonitoringPipelineMetadata(GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata latestMonitoringPipelineMetadata) {
    this.latestMonitoringPipelineMetadata = latestMonitoringPipelineMetadata;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob logTtl(String logTtl) {
    this.logTtl = logTtl;
    return this;
  }

  /**
   * The TTL of BigQuery tables in user projects which stores logs. A day is the basic unit of the TTL and we take the ceil of TTL/86400(a day). e.g. { second: 3600} indicates ttl &#x3D; 1 day.
   * @return logTtl
   */
  @javax.annotation.Nullable
  public String getLogTtl() {
    return logTtl;
  }

  public void setLogTtl(String logTtl) {
    this.logTtl = logTtl;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob loggingSamplingStrategy(GoogleCloudAiplatformV1beta1SamplingStrategy loggingSamplingStrategy) {
    this.loggingSamplingStrategy = loggingSamplingStrategy;
    return this;
  }

  /**
   * Get loggingSamplingStrategy
   * @return loggingSamplingStrategy
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1SamplingStrategy getLoggingSamplingStrategy() {
    return loggingSamplingStrategy;
  }

  public void setLoggingSamplingStrategy(GoogleCloudAiplatformV1beta1SamplingStrategy loggingSamplingStrategy) {
    this.loggingSamplingStrategy = loggingSamplingStrategy;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob modelDeploymentMonitoringObjectiveConfigs(List<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig> modelDeploymentMonitoringObjectiveConfigs) {
    this.modelDeploymentMonitoringObjectiveConfigs = modelDeploymentMonitoringObjectiveConfigs;
    return this;
  }

  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob addModelDeploymentMonitoringObjectiveConfigsItem(GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig modelDeploymentMonitoringObjectiveConfigsItem) {
    if (this.modelDeploymentMonitoringObjectiveConfigs == null) {
      this.modelDeploymentMonitoringObjectiveConfigs = new ArrayList<>();
    }
    this.modelDeploymentMonitoringObjectiveConfigs.add(modelDeploymentMonitoringObjectiveConfigsItem);
    return this;
  }

  /**
   * Required. The config for monitoring objectives. This is a per DeployedModel config. Each DeployedModel needs to be configured separately.
   * @return modelDeploymentMonitoringObjectiveConfigs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig> getModelDeploymentMonitoringObjectiveConfigs() {
    return modelDeploymentMonitoringObjectiveConfigs;
  }

  public void setModelDeploymentMonitoringObjectiveConfigs(List<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig> modelDeploymentMonitoringObjectiveConfigs) {
    this.modelDeploymentMonitoringObjectiveConfigs = modelDeploymentMonitoringObjectiveConfigs;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob modelDeploymentMonitoringScheduleConfig(GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig modelDeploymentMonitoringScheduleConfig) {
    this.modelDeploymentMonitoringScheduleConfig = modelDeploymentMonitoringScheduleConfig;
    return this;
  }

  /**
   * Get modelDeploymentMonitoringScheduleConfig
   * @return modelDeploymentMonitoringScheduleConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig getModelDeploymentMonitoringScheduleConfig() {
    return modelDeploymentMonitoringScheduleConfig;
  }

  public void setModelDeploymentMonitoringScheduleConfig(GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig modelDeploymentMonitoringScheduleConfig) {
    this.modelDeploymentMonitoringScheduleConfig = modelDeploymentMonitoringScheduleConfig;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob modelMonitoringAlertConfig(GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig modelMonitoringAlertConfig) {
    this.modelMonitoringAlertConfig = modelMonitoringAlertConfig;
    return this;
  }

  /**
   * Get modelMonitoringAlertConfig
   * @return modelMonitoringAlertConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig getModelMonitoringAlertConfig() {
    return modelMonitoringAlertConfig;
  }

  public void setModelMonitoringAlertConfig(GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig modelMonitoringAlertConfig) {
    this.modelMonitoringAlertConfig = modelMonitoringAlertConfig;
  }


  /**
   * Output only. Resource name of a ModelDeploymentMonitoringJob.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  /**
   * Output only. Timestamp when this monitoring pipeline will be scheduled to run for the next round.
   * @return nextScheduleTime
   */
  @javax.annotation.Nullable
  public String getNextScheduleTime() {
    return nextScheduleTime;
  }



  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob predictInstanceSchemaUri(String predictInstanceSchemaUri) {
    this.predictInstanceSchemaUri = predictInstanceSchemaUri;
    return this;
  }

  /**
   * YAML schema file uri describing the format of a single instance, which are given to format this Endpoint&#39;s prediction (and explanation). If not set, we will generate predict schema from collected predict requests.
   * @return predictInstanceSchemaUri
   */
  @javax.annotation.Nullable
  public String getPredictInstanceSchemaUri() {
    return predictInstanceSchemaUri;
  }

  public void setPredictInstanceSchemaUri(String predictInstanceSchemaUri) {
    this.predictInstanceSchemaUri = predictInstanceSchemaUri;
  }


  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob samplePredictInstance(Object samplePredictInstance) {
    this.samplePredictInstance = samplePredictInstance;
    return this;
  }

  /**
   * Sample Predict instance, same format as PredictRequest.instances, this can be set as a replacement of ModelDeploymentMonitoringJob.predict_instance_schema_uri. If not set, we will generate predict schema from collected predict requests.
   * @return samplePredictInstance
   */
  @javax.annotation.Nullable
  public Object getSamplePredictInstance() {
    return samplePredictInstance;
  }

  public void setSamplePredictInstance(Object samplePredictInstance) {
    this.samplePredictInstance = samplePredictInstance;
  }


  /**
   * Output only. Schedule state when the monitoring job is in Running state.
   * @return scheduleState
   */
  @javax.annotation.Nullable
  public ScheduleStateEnum getScheduleState() {
    return scheduleState;
  }



  /**
   * Output only. The detailed state of the monitoring job. When the job is still creating, the state will be &#39;PENDING&#39;. Once the job is successfully created, the state will be &#39;RUNNING&#39;. Pause the job, the state will be &#39;PAUSED&#39;. Resume the job, the state will return to &#39;RUNNING&#39;.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob statsAnomaliesBaseDirectory(GoogleCloudAiplatformV1beta1GcsDestination statsAnomaliesBaseDirectory) {
    this.statsAnomaliesBaseDirectory = statsAnomaliesBaseDirectory;
    return this;
  }

  /**
   * Get statsAnomaliesBaseDirectory
   * @return statsAnomaliesBaseDirectory
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1GcsDestination getStatsAnomaliesBaseDirectory() {
    return statsAnomaliesBaseDirectory;
  }

  public void setStatsAnomaliesBaseDirectory(GoogleCloudAiplatformV1beta1GcsDestination statsAnomaliesBaseDirectory) {
    this.statsAnomaliesBaseDirectory = statsAnomaliesBaseDirectory;
  }


  /**
   * Output only. Timestamp when this ModelDeploymentMonitoringJob was updated most recently.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob = (GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob) o;
    return Objects.equals(this.analysisInstanceSchemaUri, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.analysisInstanceSchemaUri) &&
        Objects.equals(this.bigqueryTables, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.bigqueryTables) &&
        Objects.equals(this.createTime, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.createTime) &&
        Objects.equals(this.displayName, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.displayName) &&
        Objects.equals(this.enableMonitoringPipelineLogs, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.enableMonitoringPipelineLogs) &&
        Objects.equals(this.encryptionSpec, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.encryptionSpec) &&
        Objects.equals(this.endpoint, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.endpoint) &&
        Objects.equals(this.error, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.error) &&
        Objects.equals(this.labels, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.labels) &&
        Objects.equals(this.latestMonitoringPipelineMetadata, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.latestMonitoringPipelineMetadata) &&
        Objects.equals(this.logTtl, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.logTtl) &&
        Objects.equals(this.loggingSamplingStrategy, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.loggingSamplingStrategy) &&
        Objects.equals(this.modelDeploymentMonitoringObjectiveConfigs, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.modelDeploymentMonitoringObjectiveConfigs) &&
        Objects.equals(this.modelDeploymentMonitoringScheduleConfig, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.modelDeploymentMonitoringScheduleConfig) &&
        Objects.equals(this.modelMonitoringAlertConfig, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.modelMonitoringAlertConfig) &&
        Objects.equals(this.name, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.name) &&
        Objects.equals(this.nextScheduleTime, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.nextScheduleTime) &&
        Objects.equals(this.predictInstanceSchemaUri, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.predictInstanceSchemaUri) &&
        Objects.equals(this.samplePredictInstance, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.samplePredictInstance) &&
        Objects.equals(this.scheduleState, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.scheduleState) &&
        Objects.equals(this.state, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.state) &&
        Objects.equals(this.statsAnomaliesBaseDirectory, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.statsAnomaliesBaseDirectory) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.updateTime);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(analysisInstanceSchemaUri, bigqueryTables, createTime, displayName, enableMonitoringPipelineLogs, encryptionSpec, endpoint, error, labels, latestMonitoringPipelineMetadata, logTtl, loggingSamplingStrategy, modelDeploymentMonitoringObjectiveConfigs, modelDeploymentMonitoringScheduleConfig, modelMonitoringAlertConfig, name, nextScheduleTime, predictInstanceSchemaUri, samplePredictInstance, scheduleState, state, statsAnomaliesBaseDirectory, updateTime);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob {\n");
    sb.append("    analysisInstanceSchemaUri: ").append(toIndentedString(analysisInstanceSchemaUri)).append("\n");
    sb.append("    bigqueryTables: ").append(toIndentedString(bigqueryTables)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enableMonitoringPipelineLogs: ").append(toIndentedString(enableMonitoringPipelineLogs)).append("\n");
    sb.append("    encryptionSpec: ").append(toIndentedString(encryptionSpec)).append("\n");
    sb.append("    endpoint: ").append(toIndentedString(endpoint)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    latestMonitoringPipelineMetadata: ").append(toIndentedString(latestMonitoringPipelineMetadata)).append("\n");
    sb.append("    logTtl: ").append(toIndentedString(logTtl)).append("\n");
    sb.append("    loggingSamplingStrategy: ").append(toIndentedString(loggingSamplingStrategy)).append("\n");
    sb.append("    modelDeploymentMonitoringObjectiveConfigs: ").append(toIndentedString(modelDeploymentMonitoringObjectiveConfigs)).append("\n");
    sb.append("    modelDeploymentMonitoringScheduleConfig: ").append(toIndentedString(modelDeploymentMonitoringScheduleConfig)).append("\n");
    sb.append("    modelMonitoringAlertConfig: ").append(toIndentedString(modelMonitoringAlertConfig)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nextScheduleTime: ").append(toIndentedString(nextScheduleTime)).append("\n");
    sb.append("    predictInstanceSchemaUri: ").append(toIndentedString(predictInstanceSchemaUri)).append("\n");
    sb.append("    samplePredictInstance: ").append(toIndentedString(samplePredictInstance)).append("\n");
    sb.append("    scheduleState: ").append(toIndentedString(scheduleState)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    statsAnomaliesBaseDirectory: ").append(toIndentedString(statsAnomaliesBaseDirectory)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("analysisInstanceSchemaUri");
    openapiFields.add("bigqueryTables");
    openapiFields.add("createTime");
    openapiFields.add("displayName");
    openapiFields.add("enableMonitoringPipelineLogs");
    openapiFields.add("encryptionSpec");
    openapiFields.add("endpoint");
    openapiFields.add("error");
    openapiFields.add("labels");
    openapiFields.add("latestMonitoringPipelineMetadata");
    openapiFields.add("logTtl");
    openapiFields.add("loggingSamplingStrategy");
    openapiFields.add("modelDeploymentMonitoringObjectiveConfigs");
    openapiFields.add("modelDeploymentMonitoringScheduleConfig");
    openapiFields.add("modelMonitoringAlertConfig");
    openapiFields.add("name");
    openapiFields.add("nextScheduleTime");
    openapiFields.add("predictInstanceSchemaUri");
    openapiFields.add("samplePredictInstance");
    openapiFields.add("scheduleState");
    openapiFields.add("state");
    openapiFields.add("statsAnomaliesBaseDirectory");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob is not found in the empty JSON string", GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("analysisInstanceSchemaUri") != null && !jsonObj.get("analysisInstanceSchemaUri").isJsonNull()) && !jsonObj.get("analysisInstanceSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `analysisInstanceSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("analysisInstanceSchemaUri").toString()));
      }
      if (jsonObj.get("bigqueryTables") != null && !jsonObj.get("bigqueryTables").isJsonNull()) {
        JsonArray jsonArraybigqueryTables = jsonObj.getAsJsonArray("bigqueryTables");
        if (jsonArraybigqueryTables != null) {
          // ensure the json data is an array
          if (!jsonObj.get("bigqueryTables").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `bigqueryTables` to be an array in the JSON string but got `%s`", jsonObj.get("bigqueryTables").toString()));
          }

          // validate the optional field `bigqueryTables` (array)
          for (int i = 0; i < jsonArraybigqueryTables.size(); i++) {
            GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringBigQueryTable.validateJsonElement(jsonArraybigqueryTables.get(i));
          };
        }
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `encryptionSpec`
      if (jsonObj.get("encryptionSpec") != null && !jsonObj.get("encryptionSpec").isJsonNull()) {
        GoogleCloudAiplatformV1beta1EncryptionSpec.validateJsonElement(jsonObj.get("encryptionSpec"));
      }
      if ((jsonObj.get("endpoint") != null && !jsonObj.get("endpoint").isJsonNull()) && !jsonObj.get("endpoint").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("error"));
      }
      // validate the optional field `latestMonitoringPipelineMetadata`
      if (jsonObj.get("latestMonitoringPipelineMetadata") != null && !jsonObj.get("latestMonitoringPipelineMetadata").isJsonNull()) {
        GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJobLatestMonitoringPipelineMetadata.validateJsonElement(jsonObj.get("latestMonitoringPipelineMetadata"));
      }
      if ((jsonObj.get("logTtl") != null && !jsonObj.get("logTtl").isJsonNull()) && !jsonObj.get("logTtl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `logTtl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("logTtl").toString()));
      }
      // validate the optional field `loggingSamplingStrategy`
      if (jsonObj.get("loggingSamplingStrategy") != null && !jsonObj.get("loggingSamplingStrategy").isJsonNull()) {
        GoogleCloudAiplatformV1beta1SamplingStrategy.validateJsonElement(jsonObj.get("loggingSamplingStrategy"));
      }
      if (jsonObj.get("modelDeploymentMonitoringObjectiveConfigs") != null && !jsonObj.get("modelDeploymentMonitoringObjectiveConfigs").isJsonNull()) {
        JsonArray jsonArraymodelDeploymentMonitoringObjectiveConfigs = jsonObj.getAsJsonArray("modelDeploymentMonitoringObjectiveConfigs");
        if (jsonArraymodelDeploymentMonitoringObjectiveConfigs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("modelDeploymentMonitoringObjectiveConfigs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `modelDeploymentMonitoringObjectiveConfigs` to be an array in the JSON string but got `%s`", jsonObj.get("modelDeploymentMonitoringObjectiveConfigs").toString()));
          }

          // validate the optional field `modelDeploymentMonitoringObjectiveConfigs` (array)
          for (int i = 0; i < jsonArraymodelDeploymentMonitoringObjectiveConfigs.size(); i++) {
            GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringObjectiveConfig.validateJsonElement(jsonArraymodelDeploymentMonitoringObjectiveConfigs.get(i));
          };
        }
      }
      // validate the optional field `modelDeploymentMonitoringScheduleConfig`
      if (jsonObj.get("modelDeploymentMonitoringScheduleConfig") != null && !jsonObj.get("modelDeploymentMonitoringScheduleConfig").isJsonNull()) {
        GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringScheduleConfig.validateJsonElement(jsonObj.get("modelDeploymentMonitoringScheduleConfig"));
      }
      // validate the optional field `modelMonitoringAlertConfig`
      if (jsonObj.get("modelMonitoringAlertConfig") != null && !jsonObj.get("modelMonitoringAlertConfig").isJsonNull()) {
        GoogleCloudAiplatformV1beta1ModelMonitoringAlertConfig.validateJsonElement(jsonObj.get("modelMonitoringAlertConfig"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("nextScheduleTime") != null && !jsonObj.get("nextScheduleTime").isJsonNull()) && !jsonObj.get("nextScheduleTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextScheduleTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextScheduleTime").toString()));
      }
      if ((jsonObj.get("predictInstanceSchemaUri") != null && !jsonObj.get("predictInstanceSchemaUri").isJsonNull()) && !jsonObj.get("predictInstanceSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `predictInstanceSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("predictInstanceSchemaUri").toString()));
      }
      if ((jsonObj.get("scheduleState") != null && !jsonObj.get("scheduleState").isJsonNull()) && !jsonObj.get("scheduleState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scheduleState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scheduleState").toString()));
      }
      // validate the optional field `scheduleState`
      if (jsonObj.get("scheduleState") != null && !jsonObj.get("scheduleState").isJsonNull()) {
        ScheduleStateEnum.validateJsonElement(jsonObj.get("scheduleState"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `statsAnomaliesBaseDirectory`
      if (jsonObj.get("statsAnomaliesBaseDirectory") != null && !jsonObj.get("statsAnomaliesBaseDirectory").isJsonNull()) {
        GoogleCloudAiplatformV1beta1GcsDestination.validateJsonElement(jsonObj.get("statsAnomaliesBaseDirectory"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob
   */
  public static GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

