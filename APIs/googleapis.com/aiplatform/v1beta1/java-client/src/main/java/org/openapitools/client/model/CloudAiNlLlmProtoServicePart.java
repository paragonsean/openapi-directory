/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceFunctionCall;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceFunctionResponse;
import org.openapitools.client.model.CloudAiNlLlmProtoServicePartBlob;
import org.openapitools.client.model.CloudAiNlLlmProtoServicePartFileData;
import org.openapitools.client.model.CloudAiNlLlmProtoServicePartVideoMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A single part of a message.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CloudAiNlLlmProtoServicePart {
  public static final String SERIALIZED_NAME_FILE_DATA = "fileData";
  @SerializedName(SERIALIZED_NAME_FILE_DATA)
  private CloudAiNlLlmProtoServicePartFileData fileData;

  public static final String SERIALIZED_NAME_FUNCTION_CALL = "functionCall";
  @SerializedName(SERIALIZED_NAME_FUNCTION_CALL)
  private CloudAiNlLlmProtoServiceFunctionCall functionCall;

  public static final String SERIALIZED_NAME_FUNCTION_RESPONSE = "functionResponse";
  @SerializedName(SERIALIZED_NAME_FUNCTION_RESPONSE)
  private CloudAiNlLlmProtoServiceFunctionResponse functionResponse;

  public static final String SERIALIZED_NAME_INLINE_DATA = "inlineData";
  @SerializedName(SERIALIZED_NAME_INLINE_DATA)
  private CloudAiNlLlmProtoServicePartBlob inlineData;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_VIDEO_METADATA = "videoMetadata";
  @SerializedName(SERIALIZED_NAME_VIDEO_METADATA)
  private CloudAiNlLlmProtoServicePartVideoMetadata videoMetadata;

  public CloudAiNlLlmProtoServicePart() {
  }

  public CloudAiNlLlmProtoServicePart fileData(CloudAiNlLlmProtoServicePartFileData fileData) {
    this.fileData = fileData;
    return this;
  }

  /**
   * Get fileData
   * @return fileData
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServicePartFileData getFileData() {
    return fileData;
  }

  public void setFileData(CloudAiNlLlmProtoServicePartFileData fileData) {
    this.fileData = fileData;
  }


  public CloudAiNlLlmProtoServicePart functionCall(CloudAiNlLlmProtoServiceFunctionCall functionCall) {
    this.functionCall = functionCall;
    return this;
  }

  /**
   * Get functionCall
   * @return functionCall
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServiceFunctionCall getFunctionCall() {
    return functionCall;
  }

  public void setFunctionCall(CloudAiNlLlmProtoServiceFunctionCall functionCall) {
    this.functionCall = functionCall;
  }


  public CloudAiNlLlmProtoServicePart functionResponse(CloudAiNlLlmProtoServiceFunctionResponse functionResponse) {
    this.functionResponse = functionResponse;
    return this;
  }

  /**
   * Get functionResponse
   * @return functionResponse
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServiceFunctionResponse getFunctionResponse() {
    return functionResponse;
  }

  public void setFunctionResponse(CloudAiNlLlmProtoServiceFunctionResponse functionResponse) {
    this.functionResponse = functionResponse;
  }


  public CloudAiNlLlmProtoServicePart inlineData(CloudAiNlLlmProtoServicePartBlob inlineData) {
    this.inlineData = inlineData;
    return this;
  }

  /**
   * Get inlineData
   * @return inlineData
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServicePartBlob getInlineData() {
    return inlineData;
  }

  public void setInlineData(CloudAiNlLlmProtoServicePartBlob inlineData) {
    this.inlineData = inlineData;
  }


  public CloudAiNlLlmProtoServicePart text(String text) {
    this.text = text;
    return this;
  }

  /**
   * Text input.
   * @return text
   */
  @javax.annotation.Nullable
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  public CloudAiNlLlmProtoServicePart videoMetadata(CloudAiNlLlmProtoServicePartVideoMetadata videoMetadata) {
    this.videoMetadata = videoMetadata;
    return this;
  }

  /**
   * Get videoMetadata
   * @return videoMetadata
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServicePartVideoMetadata getVideoMetadata() {
    return videoMetadata;
  }

  public void setVideoMetadata(CloudAiNlLlmProtoServicePartVideoMetadata videoMetadata) {
    this.videoMetadata = videoMetadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudAiNlLlmProtoServicePart cloudAiNlLlmProtoServicePart = (CloudAiNlLlmProtoServicePart) o;
    return Objects.equals(this.fileData, cloudAiNlLlmProtoServicePart.fileData) &&
        Objects.equals(this.functionCall, cloudAiNlLlmProtoServicePart.functionCall) &&
        Objects.equals(this.functionResponse, cloudAiNlLlmProtoServicePart.functionResponse) &&
        Objects.equals(this.inlineData, cloudAiNlLlmProtoServicePart.inlineData) &&
        Objects.equals(this.text, cloudAiNlLlmProtoServicePart.text) &&
        Objects.equals(this.videoMetadata, cloudAiNlLlmProtoServicePart.videoMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileData, functionCall, functionResponse, inlineData, text, videoMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudAiNlLlmProtoServicePart {\n");
    sb.append("    fileData: ").append(toIndentedString(fileData)).append("\n");
    sb.append("    functionCall: ").append(toIndentedString(functionCall)).append("\n");
    sb.append("    functionResponse: ").append(toIndentedString(functionResponse)).append("\n");
    sb.append("    inlineData: ").append(toIndentedString(inlineData)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    videoMetadata: ").append(toIndentedString(videoMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("fileData");
    openapiFields.add("functionCall");
    openapiFields.add("functionResponse");
    openapiFields.add("inlineData");
    openapiFields.add("text");
    openapiFields.add("videoMetadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudAiNlLlmProtoServicePart
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudAiNlLlmProtoServicePart.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudAiNlLlmProtoServicePart is not found in the empty JSON string", CloudAiNlLlmProtoServicePart.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudAiNlLlmProtoServicePart.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudAiNlLlmProtoServicePart` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `fileData`
      if (jsonObj.get("fileData") != null && !jsonObj.get("fileData").isJsonNull()) {
        CloudAiNlLlmProtoServicePartFileData.validateJsonElement(jsonObj.get("fileData"));
      }
      // validate the optional field `functionCall`
      if (jsonObj.get("functionCall") != null && !jsonObj.get("functionCall").isJsonNull()) {
        CloudAiNlLlmProtoServiceFunctionCall.validateJsonElement(jsonObj.get("functionCall"));
      }
      // validate the optional field `functionResponse`
      if (jsonObj.get("functionResponse") != null && !jsonObj.get("functionResponse").isJsonNull()) {
        CloudAiNlLlmProtoServiceFunctionResponse.validateJsonElement(jsonObj.get("functionResponse"));
      }
      // validate the optional field `inlineData`
      if (jsonObj.get("inlineData") != null && !jsonObj.get("inlineData").isJsonNull()) {
        CloudAiNlLlmProtoServicePartBlob.validateJsonElement(jsonObj.get("inlineData"));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      // validate the optional field `videoMetadata`
      if (jsonObj.get("videoMetadata") != null && !jsonObj.get("videoMetadata").isJsonNull()) {
        CloudAiNlLlmProtoServicePartVideoMetadata.validateJsonElement(jsonObj.get("videoMetadata"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudAiNlLlmProtoServicePart.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudAiNlLlmProtoServicePart' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudAiNlLlmProtoServicePart> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudAiNlLlmProtoServicePart.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudAiNlLlmProtoServicePart>() {
           @Override
           public void write(JsonWriter out, CloudAiNlLlmProtoServicePart value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudAiNlLlmProtoServicePart read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudAiNlLlmProtoServicePart given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudAiNlLlmProtoServicePart
   * @throws IOException if the JSON string is invalid with respect to CloudAiNlLlmProtoServicePart
   */
  public static CloudAiNlLlmProtoServicePart fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudAiNlLlmProtoServicePart.class);
  }

  /**
   * Convert an instance of CloudAiNlLlmProtoServicePart to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

