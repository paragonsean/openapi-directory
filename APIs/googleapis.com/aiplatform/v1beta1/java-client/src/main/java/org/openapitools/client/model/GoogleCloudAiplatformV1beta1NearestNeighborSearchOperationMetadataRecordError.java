/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError {
  public static final String SERIALIZED_NAME_EMBEDDING_ID = "embeddingId";
  @SerializedName(SERIALIZED_NAME_EMBEDDING_ID)
  private String embeddingId;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "errorMessage";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  /**
   * The error type of this record.
   */
  @JsonAdapter(ErrorTypeEnum.Adapter.class)
  public enum ErrorTypeEnum {
    ERROR_TYPE_UNSPECIFIED("ERROR_TYPE_UNSPECIFIED"),
    
    EMPTY_LINE("EMPTY_LINE"),
    
    INVALID_JSON_SYNTAX("INVALID_JSON_SYNTAX"),
    
    INVALID_CSV_SYNTAX("INVALID_CSV_SYNTAX"),
    
    INVALID_AVRO_SYNTAX("INVALID_AVRO_SYNTAX"),
    
    INVALID_EMBEDDING_ID("INVALID_EMBEDDING_ID"),
    
    EMBEDDING_SIZE_MISMATCH("EMBEDDING_SIZE_MISMATCH"),
    
    NAMESPACE_MISSING("NAMESPACE_MISSING"),
    
    PARSING_ERROR("PARSING_ERROR"),
    
    DUPLICATE_NAMESPACE("DUPLICATE_NAMESPACE"),
    
    OP_IN_DATAPOINT("OP_IN_DATAPOINT"),
    
    MULTIPLE_VALUES("MULTIPLE_VALUES"),
    
    INVALID_NUMERIC_VALUE("INVALID_NUMERIC_VALUE"),
    
    INVALID_ENCODING("INVALID_ENCODING");

    private String value;

    ErrorTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ErrorTypeEnum fromValue(String value) {
      for (ErrorTypeEnum b : ErrorTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ErrorTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ErrorTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ErrorTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ErrorTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ErrorTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ERROR_TYPE = "errorType";
  @SerializedName(SERIALIZED_NAME_ERROR_TYPE)
  private ErrorTypeEnum errorType;

  public static final String SERIALIZED_NAME_RAW_RECORD = "rawRecord";
  @SerializedName(SERIALIZED_NAME_RAW_RECORD)
  private String rawRecord;

  public static final String SERIALIZED_NAME_SOURCE_GCS_URI = "sourceGcsUri";
  @SerializedName(SERIALIZED_NAME_SOURCE_GCS_URI)
  private String sourceGcsUri;

  public GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError() {
  }

  public GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError embeddingId(String embeddingId) {
    this.embeddingId = embeddingId;
    return this;
  }

  /**
   * Empty if the embedding id is failed to parse.
   * @return embeddingId
   */
  @javax.annotation.Nullable
  public String getEmbeddingId() {
    return embeddingId;
  }

  public void setEmbeddingId(String embeddingId) {
    this.embeddingId = embeddingId;
  }


  public GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * A human-readable message that is shown to the user to help them fix the error. Note that this message may change from time to time, your code should check against error_type as the source of truth.
   * @return errorMessage
   */
  @javax.annotation.Nullable
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError errorType(ErrorTypeEnum errorType) {
    this.errorType = errorType;
    return this;
  }

  /**
   * The error type of this record.
   * @return errorType
   */
  @javax.annotation.Nullable
  public ErrorTypeEnum getErrorType() {
    return errorType;
  }

  public void setErrorType(ErrorTypeEnum errorType) {
    this.errorType = errorType;
  }


  public GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError rawRecord(String rawRecord) {
    this.rawRecord = rawRecord;
    return this;
  }

  /**
   * The original content of this record.
   * @return rawRecord
   */
  @javax.annotation.Nullable
  public String getRawRecord() {
    return rawRecord;
  }

  public void setRawRecord(String rawRecord) {
    this.rawRecord = rawRecord;
  }


  public GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError sourceGcsUri(String sourceGcsUri) {
    this.sourceGcsUri = sourceGcsUri;
    return this;
  }

  /**
   * Cloud Storage URI pointing to the original file in user&#39;s bucket.
   * @return sourceGcsUri
   */
  @javax.annotation.Nullable
  public String getSourceGcsUri() {
    return sourceGcsUri;
  }

  public void setSourceGcsUri(String sourceGcsUri) {
    this.sourceGcsUri = sourceGcsUri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError googleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError = (GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError) o;
    return Objects.equals(this.embeddingId, googleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.embeddingId) &&
        Objects.equals(this.errorMessage, googleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.errorMessage) &&
        Objects.equals(this.errorType, googleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.errorType) &&
        Objects.equals(this.rawRecord, googleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.rawRecord) &&
        Objects.equals(this.sourceGcsUri, googleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.sourceGcsUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(embeddingId, errorMessage, errorType, rawRecord, sourceGcsUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError {\n");
    sb.append("    embeddingId: ").append(toIndentedString(embeddingId)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    errorType: ").append(toIndentedString(errorType)).append("\n");
    sb.append("    rawRecord: ").append(toIndentedString(rawRecord)).append("\n");
    sb.append("    sourceGcsUri: ").append(toIndentedString(sourceGcsUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("embeddingId");
    openapiFields.add("errorMessage");
    openapiFields.add("errorType");
    openapiFields.add("rawRecord");
    openapiFields.add("sourceGcsUri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError is not found in the empty JSON string", GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("embeddingId") != null && !jsonObj.get("embeddingId").isJsonNull()) && !jsonObj.get("embeddingId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `embeddingId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("embeddingId").toString()));
      }
      if ((jsonObj.get("errorMessage") != null && !jsonObj.get("errorMessage").isJsonNull()) && !jsonObj.get("errorMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `errorMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("errorMessage").toString()));
      }
      if ((jsonObj.get("errorType") != null && !jsonObj.get("errorType").isJsonNull()) && !jsonObj.get("errorType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `errorType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("errorType").toString()));
      }
      // validate the optional field `errorType`
      if (jsonObj.get("errorType") != null && !jsonObj.get("errorType").isJsonNull()) {
        ErrorTypeEnum.validateJsonElement(jsonObj.get("errorType"));
      }
      if ((jsonObj.get("rawRecord") != null && !jsonObj.get("rawRecord").isJsonNull()) && !jsonObj.get("rawRecord").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rawRecord` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rawRecord").toString()));
      }
      if ((jsonObj.get("sourceGcsUri") != null && !jsonObj.get("sourceGcsUri").isJsonNull()) && !jsonObj.get("sourceGcsUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceGcsUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceGcsUri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError
   */
  public static GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1NearestNeighborSearchOperationMetadataRecordError to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

