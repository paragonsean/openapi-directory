/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FunctionDeclaration;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1GoogleSearchRetrieval;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Retrieval;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Tool details that the model may use to generate response. A &#x60;Tool&#x60; is a piece of code that enables the system to interact with external systems to perform an action, or set of actions, outside of knowledge and scope of the model. A Tool object should contain exactly one type of Tool (e.g FunctionDeclaration, Retrieval or GoogleSearchRetrieval).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1Tool {
  public static final String SERIALIZED_NAME_FUNCTION_DECLARATIONS = "functionDeclarations";
  @SerializedName(SERIALIZED_NAME_FUNCTION_DECLARATIONS)
  private List<GoogleCloudAiplatformV1beta1FunctionDeclaration> functionDeclarations = new ArrayList<>();

  public static final String SERIALIZED_NAME_GOOGLE_SEARCH_RETRIEVAL = "googleSearchRetrieval";
  @SerializedName(SERIALIZED_NAME_GOOGLE_SEARCH_RETRIEVAL)
  private GoogleCloudAiplatformV1beta1GoogleSearchRetrieval googleSearchRetrieval;

  public static final String SERIALIZED_NAME_RETRIEVAL = "retrieval";
  @SerializedName(SERIALIZED_NAME_RETRIEVAL)
  private GoogleCloudAiplatformV1beta1Retrieval retrieval;

  public GoogleCloudAiplatformV1beta1Tool() {
  }

  public GoogleCloudAiplatformV1beta1Tool functionDeclarations(List<GoogleCloudAiplatformV1beta1FunctionDeclaration> functionDeclarations) {
    this.functionDeclarations = functionDeclarations;
    return this;
  }

  public GoogleCloudAiplatformV1beta1Tool addFunctionDeclarationsItem(GoogleCloudAiplatformV1beta1FunctionDeclaration functionDeclarationsItem) {
    if (this.functionDeclarations == null) {
      this.functionDeclarations = new ArrayList<>();
    }
    this.functionDeclarations.add(functionDeclarationsItem);
    return this;
  }

  /**
   * Optional. Function tool type. One or more function declarations to be passed to the model along with the current user query. Model may decide to call a subset of these functions by populating FunctionCall in the response. User should provide a FunctionResponse for each function call in the next turn. Based on the function responses, Model will generate the final response back to the user. Maximum 64 function declarations can be provided.
   * @return functionDeclarations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1FunctionDeclaration> getFunctionDeclarations() {
    return functionDeclarations;
  }

  public void setFunctionDeclarations(List<GoogleCloudAiplatformV1beta1FunctionDeclaration> functionDeclarations) {
    this.functionDeclarations = functionDeclarations;
  }


  public GoogleCloudAiplatformV1beta1Tool googleSearchRetrieval(GoogleCloudAiplatformV1beta1GoogleSearchRetrieval googleSearchRetrieval) {
    this.googleSearchRetrieval = googleSearchRetrieval;
    return this;
  }

  /**
   * Get googleSearchRetrieval
   * @return googleSearchRetrieval
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1GoogleSearchRetrieval getGoogleSearchRetrieval() {
    return googleSearchRetrieval;
  }

  public void setGoogleSearchRetrieval(GoogleCloudAiplatformV1beta1GoogleSearchRetrieval googleSearchRetrieval) {
    this.googleSearchRetrieval = googleSearchRetrieval;
  }


  public GoogleCloudAiplatformV1beta1Tool retrieval(GoogleCloudAiplatformV1beta1Retrieval retrieval) {
    this.retrieval = retrieval;
    return this;
  }

  /**
   * Get retrieval
   * @return retrieval
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1Retrieval getRetrieval() {
    return retrieval;
  }

  public void setRetrieval(GoogleCloudAiplatformV1beta1Retrieval retrieval) {
    this.retrieval = retrieval;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1Tool googleCloudAiplatformV1beta1Tool = (GoogleCloudAiplatformV1beta1Tool) o;
    return Objects.equals(this.functionDeclarations, googleCloudAiplatformV1beta1Tool.functionDeclarations) &&
        Objects.equals(this.googleSearchRetrieval, googleCloudAiplatformV1beta1Tool.googleSearchRetrieval) &&
        Objects.equals(this.retrieval, googleCloudAiplatformV1beta1Tool.retrieval);
  }

  @Override
  public int hashCode() {
    return Objects.hash(functionDeclarations, googleSearchRetrieval, retrieval);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1Tool {\n");
    sb.append("    functionDeclarations: ").append(toIndentedString(functionDeclarations)).append("\n");
    sb.append("    googleSearchRetrieval: ").append(toIndentedString(googleSearchRetrieval)).append("\n");
    sb.append("    retrieval: ").append(toIndentedString(retrieval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("functionDeclarations");
    openapiFields.add("googleSearchRetrieval");
    openapiFields.add("retrieval");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1Tool
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1Tool.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1Tool is not found in the empty JSON string", GoogleCloudAiplatformV1beta1Tool.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1Tool.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1Tool` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("functionDeclarations") != null && !jsonObj.get("functionDeclarations").isJsonNull()) {
        JsonArray jsonArrayfunctionDeclarations = jsonObj.getAsJsonArray("functionDeclarations");
        if (jsonArrayfunctionDeclarations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("functionDeclarations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `functionDeclarations` to be an array in the JSON string but got `%s`", jsonObj.get("functionDeclarations").toString()));
          }

          // validate the optional field `functionDeclarations` (array)
          for (int i = 0; i < jsonArrayfunctionDeclarations.size(); i++) {
            GoogleCloudAiplatformV1beta1FunctionDeclaration.validateJsonElement(jsonArrayfunctionDeclarations.get(i));
          };
        }
      }
      // validate the optional field `googleSearchRetrieval`
      if (jsonObj.get("googleSearchRetrieval") != null && !jsonObj.get("googleSearchRetrieval").isJsonNull()) {
        GoogleCloudAiplatformV1beta1GoogleSearchRetrieval.validateJsonElement(jsonObj.get("googleSearchRetrieval"));
      }
      // validate the optional field `retrieval`
      if (jsonObj.get("retrieval") != null && !jsonObj.get("retrieval").isJsonNull()) {
        GoogleCloudAiplatformV1beta1Retrieval.validateJsonElement(jsonObj.get("retrieval"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1Tool.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1Tool' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1Tool> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1Tool.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1Tool>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1Tool value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1Tool read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1Tool given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1Tool
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1Tool
   */
  public static GoogleCloudAiplatformV1beta1Tool fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1Tool.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1Tool to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

