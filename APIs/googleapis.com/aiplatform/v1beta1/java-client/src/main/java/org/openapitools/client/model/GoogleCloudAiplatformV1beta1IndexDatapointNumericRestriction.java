/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This field allows restricts to be based on numeric comparisons rather than categorical tokens.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction {
  public static final String SERIALIZED_NAME_NAMESPACE = "namespace";
  @SerializedName(SERIALIZED_NAME_NAMESPACE)
  private String namespace;

  /**
   * This MUST be specified for queries and must NOT be specified for datapoints.
   */
  @JsonAdapter(OpEnum.Adapter.class)
  public enum OpEnum {
    OPERATOR_UNSPECIFIED("OPERATOR_UNSPECIFIED"),
    
    LESS("LESS"),
    
    LESS_EQUAL("LESS_EQUAL"),
    
    EQUAL("EQUAL"),
    
    GREATER_EQUAL("GREATER_EQUAL"),
    
    GREATER("GREATER"),
    
    NOT_EQUAL("NOT_EQUAL");

    private String value;

    OpEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OpEnum fromValue(String value) {
      for (OpEnum b : OpEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OpEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OpEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OpEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OpEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OpEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OP = "op";
  @SerializedName(SERIALIZED_NAME_OP)
  private OpEnum op;

  public static final String SERIALIZED_NAME_VALUE_DOUBLE = "valueDouble";
  @SerializedName(SERIALIZED_NAME_VALUE_DOUBLE)
  private Double valueDouble;

  public static final String SERIALIZED_NAME_VALUE_FLOAT = "valueFloat";
  @SerializedName(SERIALIZED_NAME_VALUE_FLOAT)
  private Float valueFloat;

  public static final String SERIALIZED_NAME_VALUE_INT = "valueInt";
  @SerializedName(SERIALIZED_NAME_VALUE_INT)
  private String valueInt;

  public GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction() {
  }

  public GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

  /**
   * The namespace of this restriction. e.g.: cost.
   * @return namespace
   */
  @javax.annotation.Nullable
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }


  public GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction op(OpEnum op) {
    this.op = op;
    return this;
  }

  /**
   * This MUST be specified for queries and must NOT be specified for datapoints.
   * @return op
   */
  @javax.annotation.Nullable
  public OpEnum getOp() {
    return op;
  }

  public void setOp(OpEnum op) {
    this.op = op;
  }


  public GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction valueDouble(Double valueDouble) {
    this.valueDouble = valueDouble;
    return this;
  }

  /**
   * Represents 64 bit float.
   * @return valueDouble
   */
  @javax.annotation.Nullable
  public Double getValueDouble() {
    return valueDouble;
  }

  public void setValueDouble(Double valueDouble) {
    this.valueDouble = valueDouble;
  }


  public GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction valueFloat(Float valueFloat) {
    this.valueFloat = valueFloat;
    return this;
  }

  /**
   * Represents 32 bit float.
   * @return valueFloat
   */
  @javax.annotation.Nullable
  public Float getValueFloat() {
    return valueFloat;
  }

  public void setValueFloat(Float valueFloat) {
    this.valueFloat = valueFloat;
  }


  public GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction valueInt(String valueInt) {
    this.valueInt = valueInt;
    return this;
  }

  /**
   * Represents 64 bit integer.
   * @return valueInt
   */
  @javax.annotation.Nullable
  public String getValueInt() {
    return valueInt;
  }

  public void setValueInt(String valueInt) {
    this.valueInt = valueInt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction googleCloudAiplatformV1beta1IndexDatapointNumericRestriction = (GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction) o;
    return Objects.equals(this.namespace, googleCloudAiplatformV1beta1IndexDatapointNumericRestriction.namespace) &&
        Objects.equals(this.op, googleCloudAiplatformV1beta1IndexDatapointNumericRestriction.op) &&
        Objects.equals(this.valueDouble, googleCloudAiplatformV1beta1IndexDatapointNumericRestriction.valueDouble) &&
        Objects.equals(this.valueFloat, googleCloudAiplatformV1beta1IndexDatapointNumericRestriction.valueFloat) &&
        Objects.equals(this.valueInt, googleCloudAiplatformV1beta1IndexDatapointNumericRestriction.valueInt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(namespace, op, valueDouble, valueFloat, valueInt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction {\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    op: ").append(toIndentedString(op)).append("\n");
    sb.append("    valueDouble: ").append(toIndentedString(valueDouble)).append("\n");
    sb.append("    valueFloat: ").append(toIndentedString(valueFloat)).append("\n");
    sb.append("    valueInt: ").append(toIndentedString(valueInt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("namespace");
    openapiFields.add("op");
    openapiFields.add("valueDouble");
    openapiFields.add("valueFloat");
    openapiFields.add("valueInt");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction is not found in the empty JSON string", GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("namespace") != null && !jsonObj.get("namespace").isJsonNull()) && !jsonObj.get("namespace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `namespace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("namespace").toString()));
      }
      if ((jsonObj.get("op") != null && !jsonObj.get("op").isJsonNull()) && !jsonObj.get("op").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `op` to be a primitive type in the JSON string but got `%s`", jsonObj.get("op").toString()));
      }
      // validate the optional field `op`
      if (jsonObj.get("op") != null && !jsonObj.get("op").isJsonNull()) {
        OpEnum.validateJsonElement(jsonObj.get("op"));
      }
      if ((jsonObj.get("valueInt") != null && !jsonObj.get("valueInt").isJsonNull()) && !jsonObj.get("valueInt").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `valueInt` to be a primitive type in the JSON string but got `%s`", jsonObj.get("valueInt").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction
   */
  public static GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1IndexDatapointNumericRestriction to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

