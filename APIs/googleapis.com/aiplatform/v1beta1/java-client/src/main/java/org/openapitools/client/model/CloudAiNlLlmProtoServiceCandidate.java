/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceCitationMetadata;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceContent;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceSafetyRating;
import org.openapitools.client.model.LearningGenaiRootGroundingMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CloudAiNlLlmProtoServiceCandidate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CloudAiNlLlmProtoServiceCandidate {
  public static final String SERIALIZED_NAME_CITATION_METADATA = "citationMetadata";
  @SerializedName(SERIALIZED_NAME_CITATION_METADATA)
  private CloudAiNlLlmProtoServiceCitationMetadata citationMetadata;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private CloudAiNlLlmProtoServiceContent content;

  public static final String SERIALIZED_NAME_FINISH_MESSAGE = "finishMessage";
  @SerializedName(SERIALIZED_NAME_FINISH_MESSAGE)
  private String finishMessage;

  /**
   * The reason why the model stopped generating tokens.
   */
  @JsonAdapter(FinishReasonEnum.Adapter.class)
  public enum FinishReasonEnum {
    UNSPECIFIED("FINISH_REASON_UNSPECIFIED"),
    
    STOP("FINISH_REASON_STOP"),
    
    MAX_TOKENS("FINISH_REASON_MAX_TOKENS"),
    
    SAFETY("FINISH_REASON_SAFETY"),
    
    RECITATION("FINISH_REASON_RECITATION"),
    
    OTHER("FINISH_REASON_OTHER");

    private String value;

    FinishReasonEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FinishReasonEnum fromValue(String value) {
      for (FinishReasonEnum b : FinishReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FinishReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FinishReasonEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FinishReasonEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FinishReasonEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FinishReasonEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FINISH_REASON = "finishReason";
  @SerializedName(SERIALIZED_NAME_FINISH_REASON)
  private FinishReasonEnum finishReason;

  public static final String SERIALIZED_NAME_GROUNDING_METADATA = "groundingMetadata";
  @SerializedName(SERIALIZED_NAME_GROUNDING_METADATA)
  private LearningGenaiRootGroundingMetadata groundingMetadata;

  public static final String SERIALIZED_NAME_INDEX = "index";
  @SerializedName(SERIALIZED_NAME_INDEX)
  private Integer index;

  public static final String SERIALIZED_NAME_SAFETY_RATINGS = "safetyRatings";
  @SerializedName(SERIALIZED_NAME_SAFETY_RATINGS)
  private List<CloudAiNlLlmProtoServiceSafetyRating> safetyRatings = new ArrayList<>();

  public CloudAiNlLlmProtoServiceCandidate() {
  }

  public CloudAiNlLlmProtoServiceCandidate citationMetadata(CloudAiNlLlmProtoServiceCitationMetadata citationMetadata) {
    this.citationMetadata = citationMetadata;
    return this;
  }

  /**
   * Get citationMetadata
   * @return citationMetadata
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServiceCitationMetadata getCitationMetadata() {
    return citationMetadata;
  }

  public void setCitationMetadata(CloudAiNlLlmProtoServiceCitationMetadata citationMetadata) {
    this.citationMetadata = citationMetadata;
  }


  public CloudAiNlLlmProtoServiceCandidate content(CloudAiNlLlmProtoServiceContent content) {
    this.content = content;
    return this;
  }

  /**
   * Get content
   * @return content
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServiceContent getContent() {
    return content;
  }

  public void setContent(CloudAiNlLlmProtoServiceContent content) {
    this.content = content;
  }


  public CloudAiNlLlmProtoServiceCandidate finishMessage(String finishMessage) {
    this.finishMessage = finishMessage;
    return this;
  }

  /**
   * A string that describes the filtering behavior in more detail. Only filled when reason is set.
   * @return finishMessage
   */
  @javax.annotation.Nullable
  public String getFinishMessage() {
    return finishMessage;
  }

  public void setFinishMessage(String finishMessage) {
    this.finishMessage = finishMessage;
  }


  public CloudAiNlLlmProtoServiceCandidate finishReason(FinishReasonEnum finishReason) {
    this.finishReason = finishReason;
    return this;
  }

  /**
   * The reason why the model stopped generating tokens.
   * @return finishReason
   */
  @javax.annotation.Nullable
  public FinishReasonEnum getFinishReason() {
    return finishReason;
  }

  public void setFinishReason(FinishReasonEnum finishReason) {
    this.finishReason = finishReason;
  }


  public CloudAiNlLlmProtoServiceCandidate groundingMetadata(LearningGenaiRootGroundingMetadata groundingMetadata) {
    this.groundingMetadata = groundingMetadata;
    return this;
  }

  /**
   * Get groundingMetadata
   * @return groundingMetadata
   */
  @javax.annotation.Nullable
  public LearningGenaiRootGroundingMetadata getGroundingMetadata() {
    return groundingMetadata;
  }

  public void setGroundingMetadata(LearningGenaiRootGroundingMetadata groundingMetadata) {
    this.groundingMetadata = groundingMetadata;
  }


  public CloudAiNlLlmProtoServiceCandidate index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * Index of the candidate.
   * @return index
   */
  @javax.annotation.Nullable
  public Integer getIndex() {
    return index;
  }

  public void setIndex(Integer index) {
    this.index = index;
  }


  public CloudAiNlLlmProtoServiceCandidate safetyRatings(List<CloudAiNlLlmProtoServiceSafetyRating> safetyRatings) {
    this.safetyRatings = safetyRatings;
    return this;
  }

  public CloudAiNlLlmProtoServiceCandidate addSafetyRatingsItem(CloudAiNlLlmProtoServiceSafetyRating safetyRatingsItem) {
    if (this.safetyRatings == null) {
      this.safetyRatings = new ArrayList<>();
    }
    this.safetyRatings.add(safetyRatingsItem);
    return this;
  }

  /**
   * Safety ratings of the generated content.
   * @return safetyRatings
   */
  @javax.annotation.Nullable
  public List<CloudAiNlLlmProtoServiceSafetyRating> getSafetyRatings() {
    return safetyRatings;
  }

  public void setSafetyRatings(List<CloudAiNlLlmProtoServiceSafetyRating> safetyRatings) {
    this.safetyRatings = safetyRatings;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudAiNlLlmProtoServiceCandidate cloudAiNlLlmProtoServiceCandidate = (CloudAiNlLlmProtoServiceCandidate) o;
    return Objects.equals(this.citationMetadata, cloudAiNlLlmProtoServiceCandidate.citationMetadata) &&
        Objects.equals(this.content, cloudAiNlLlmProtoServiceCandidate.content) &&
        Objects.equals(this.finishMessage, cloudAiNlLlmProtoServiceCandidate.finishMessage) &&
        Objects.equals(this.finishReason, cloudAiNlLlmProtoServiceCandidate.finishReason) &&
        Objects.equals(this.groundingMetadata, cloudAiNlLlmProtoServiceCandidate.groundingMetadata) &&
        Objects.equals(this.index, cloudAiNlLlmProtoServiceCandidate.index) &&
        Objects.equals(this.safetyRatings, cloudAiNlLlmProtoServiceCandidate.safetyRatings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(citationMetadata, content, finishMessage, finishReason, groundingMetadata, index, safetyRatings);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudAiNlLlmProtoServiceCandidate {\n");
    sb.append("    citationMetadata: ").append(toIndentedString(citationMetadata)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    finishMessage: ").append(toIndentedString(finishMessage)).append("\n");
    sb.append("    finishReason: ").append(toIndentedString(finishReason)).append("\n");
    sb.append("    groundingMetadata: ").append(toIndentedString(groundingMetadata)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    safetyRatings: ").append(toIndentedString(safetyRatings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("citationMetadata");
    openapiFields.add("content");
    openapiFields.add("finishMessage");
    openapiFields.add("finishReason");
    openapiFields.add("groundingMetadata");
    openapiFields.add("index");
    openapiFields.add("safetyRatings");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudAiNlLlmProtoServiceCandidate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudAiNlLlmProtoServiceCandidate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudAiNlLlmProtoServiceCandidate is not found in the empty JSON string", CloudAiNlLlmProtoServiceCandidate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudAiNlLlmProtoServiceCandidate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudAiNlLlmProtoServiceCandidate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `citationMetadata`
      if (jsonObj.get("citationMetadata") != null && !jsonObj.get("citationMetadata").isJsonNull()) {
        CloudAiNlLlmProtoServiceCitationMetadata.validateJsonElement(jsonObj.get("citationMetadata"));
      }
      // validate the optional field `content`
      if (jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) {
        CloudAiNlLlmProtoServiceContent.validateJsonElement(jsonObj.get("content"));
      }
      if ((jsonObj.get("finishMessage") != null && !jsonObj.get("finishMessage").isJsonNull()) && !jsonObj.get("finishMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `finishMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("finishMessage").toString()));
      }
      if ((jsonObj.get("finishReason") != null && !jsonObj.get("finishReason").isJsonNull()) && !jsonObj.get("finishReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `finishReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("finishReason").toString()));
      }
      // validate the optional field `finishReason`
      if (jsonObj.get("finishReason") != null && !jsonObj.get("finishReason").isJsonNull()) {
        FinishReasonEnum.validateJsonElement(jsonObj.get("finishReason"));
      }
      // validate the optional field `groundingMetadata`
      if (jsonObj.get("groundingMetadata") != null && !jsonObj.get("groundingMetadata").isJsonNull()) {
        LearningGenaiRootGroundingMetadata.validateJsonElement(jsonObj.get("groundingMetadata"));
      }
      if (jsonObj.get("safetyRatings") != null && !jsonObj.get("safetyRatings").isJsonNull()) {
        JsonArray jsonArraysafetyRatings = jsonObj.getAsJsonArray("safetyRatings");
        if (jsonArraysafetyRatings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("safetyRatings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `safetyRatings` to be an array in the JSON string but got `%s`", jsonObj.get("safetyRatings").toString()));
          }

          // validate the optional field `safetyRatings` (array)
          for (int i = 0; i < jsonArraysafetyRatings.size(); i++) {
            CloudAiNlLlmProtoServiceSafetyRating.validateJsonElement(jsonArraysafetyRatings.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudAiNlLlmProtoServiceCandidate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudAiNlLlmProtoServiceCandidate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudAiNlLlmProtoServiceCandidate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudAiNlLlmProtoServiceCandidate.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudAiNlLlmProtoServiceCandidate>() {
           @Override
           public void write(JsonWriter out, CloudAiNlLlmProtoServiceCandidate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudAiNlLlmProtoServiceCandidate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudAiNlLlmProtoServiceCandidate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudAiNlLlmProtoServiceCandidate
   * @throws IOException if the JSON string is invalid with respect to CloudAiNlLlmProtoServiceCandidate
   */
  public static CloudAiNlLlmProtoServiceCandidate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudAiNlLlmProtoServiceCandidate.class);
  }

  /**
   * Convert an instance of CloudAiNlLlmProtoServiceCandidate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

