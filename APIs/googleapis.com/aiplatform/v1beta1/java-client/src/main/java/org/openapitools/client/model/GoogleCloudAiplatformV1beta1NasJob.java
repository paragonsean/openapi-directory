/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1EncryptionSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1NasJobOutput;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1NasJobSpec;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents a Neural Architecture Search (NAS) job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1NasJob {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENABLE_RESTRICTED_IMAGE_TRAINING = "enableRestrictedImageTraining";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_ENABLE_RESTRICTED_IMAGE_TRAINING)
  private Boolean enableRestrictedImageTraining;

  public static final String SERIALIZED_NAME_ENCRYPTION_SPEC = "encryptionSpec";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_SPEC)
  private GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private GoogleRpcStatus error;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAS_JOB_OUTPUT = "nasJobOutput";
  @SerializedName(SERIALIZED_NAME_NAS_JOB_OUTPUT)
  private GoogleCloudAiplatformV1beta1NasJobOutput nasJobOutput;

  public static final String SERIALIZED_NAME_NAS_JOB_SPEC = "nasJobSpec";
  @SerializedName(SERIALIZED_NAME_NAS_JOB_SPEC)
  private GoogleCloudAiplatformV1beta1NasJobSpec nasJobSpec;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * Output only. The detailed state of the job.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    UNSPECIFIED("JOB_STATE_UNSPECIFIED"),
    
    QUEUED("JOB_STATE_QUEUED"),
    
    PENDING("JOB_STATE_PENDING"),
    
    RUNNING("JOB_STATE_RUNNING"),
    
    SUCCEEDED("JOB_STATE_SUCCEEDED"),
    
    FAILED("JOB_STATE_FAILED"),
    
    CANCELLING("JOB_STATE_CANCELLING"),
    
    CANCELLED("JOB_STATE_CANCELLED"),
    
    PAUSED("JOB_STATE_PAUSED"),
    
    EXPIRED("JOB_STATE_EXPIRED"),
    
    UPDATING("JOB_STATE_UPDATING"),
    
    PARTIALLY_SUCCEEDED("JOB_STATE_PARTIALLY_SUCCEEDED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudAiplatformV1beta1NasJob() {
  }

  public GoogleCloudAiplatformV1beta1NasJob(
     String createTime, 
     String endTime, 
     String name, 
     String startTime, 
     StateEnum state, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.endTime = endTime;
    this.name = name;
    this.startTime = startTime;
    this.state = state;
    this.updateTime = updateTime;
  }

  /**
   * Output only. Time when the NasJob was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1beta1NasJob displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the NasJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  @Deprecated
  public GoogleCloudAiplatformV1beta1NasJob enableRestrictedImageTraining(Boolean enableRestrictedImageTraining) {
    this.enableRestrictedImageTraining = enableRestrictedImageTraining;
    return this;
  }

  /**
   * Optional. Enable a separation of Custom model training and restricted image training for tenant project.
   * @return enableRestrictedImageTraining
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getEnableRestrictedImageTraining() {
    return enableRestrictedImageTraining;
  }

  @Deprecated
  public void setEnableRestrictedImageTraining(Boolean enableRestrictedImageTraining) {
    this.enableRestrictedImageTraining = enableRestrictedImageTraining;
  }


  public GoogleCloudAiplatformV1beta1NasJob encryptionSpec(GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Get encryptionSpec
   * @return encryptionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  public void setEncryptionSpec(GoogleCloudAiplatformV1beta1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
  }


  /**
   * Output only. Time when the NasJob entered any of the following states: &#x60;JOB_STATE_SUCCEEDED&#x60;, &#x60;JOB_STATE_FAILED&#x60;, &#x60;JOB_STATE_CANCELLED&#x60;.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }



  public GoogleCloudAiplatformV1beta1NasJob error(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getError() {
    return error;
  }

  public void setError(GoogleRpcStatus error) {
    this.error = error;
  }


  public GoogleCloudAiplatformV1beta1NasJob labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudAiplatformV1beta1NasJob putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The labels with user-defined metadata to organize NasJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  /**
   * Output only. Resource name of the NasJob.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudAiplatformV1beta1NasJob nasJobOutput(GoogleCloudAiplatformV1beta1NasJobOutput nasJobOutput) {
    this.nasJobOutput = nasJobOutput;
    return this;
  }

  /**
   * Get nasJobOutput
   * @return nasJobOutput
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1NasJobOutput getNasJobOutput() {
    return nasJobOutput;
  }

  public void setNasJobOutput(GoogleCloudAiplatformV1beta1NasJobOutput nasJobOutput) {
    this.nasJobOutput = nasJobOutput;
  }


  public GoogleCloudAiplatformV1beta1NasJob nasJobSpec(GoogleCloudAiplatformV1beta1NasJobSpec nasJobSpec) {
    this.nasJobSpec = nasJobSpec;
    return this;
  }

  /**
   * Get nasJobSpec
   * @return nasJobSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1NasJobSpec getNasJobSpec() {
    return nasJobSpec;
  }

  public void setNasJobSpec(GoogleCloudAiplatformV1beta1NasJobSpec nasJobSpec) {
    this.nasJobSpec = nasJobSpec;
  }


  /**
   * Output only. Time when the NasJob for the first time entered the &#x60;JOB_STATE_RUNNING&#x60; state.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }



  /**
   * Output only. The detailed state of the job.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  /**
   * Output only. Time when the NasJob was most recently updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1NasJob googleCloudAiplatformV1beta1NasJob = (GoogleCloudAiplatformV1beta1NasJob) o;
    return Objects.equals(this.createTime, googleCloudAiplatformV1beta1NasJob.createTime) &&
        Objects.equals(this.displayName, googleCloudAiplatformV1beta1NasJob.displayName) &&
        Objects.equals(this.enableRestrictedImageTraining, googleCloudAiplatformV1beta1NasJob.enableRestrictedImageTraining) &&
        Objects.equals(this.encryptionSpec, googleCloudAiplatformV1beta1NasJob.encryptionSpec) &&
        Objects.equals(this.endTime, googleCloudAiplatformV1beta1NasJob.endTime) &&
        Objects.equals(this.error, googleCloudAiplatformV1beta1NasJob.error) &&
        Objects.equals(this.labels, googleCloudAiplatformV1beta1NasJob.labels) &&
        Objects.equals(this.name, googleCloudAiplatformV1beta1NasJob.name) &&
        Objects.equals(this.nasJobOutput, googleCloudAiplatformV1beta1NasJob.nasJobOutput) &&
        Objects.equals(this.nasJobSpec, googleCloudAiplatformV1beta1NasJob.nasJobSpec) &&
        Objects.equals(this.startTime, googleCloudAiplatformV1beta1NasJob.startTime) &&
        Objects.equals(this.state, googleCloudAiplatformV1beta1NasJob.state) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1beta1NasJob.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, displayName, enableRestrictedImageTraining, encryptionSpec, endTime, error, labels, name, nasJobOutput, nasJobSpec, startTime, state, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1NasJob {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    enableRestrictedImageTraining: ").append(toIndentedString(enableRestrictedImageTraining)).append("\n");
    sb.append("    encryptionSpec: ").append(toIndentedString(encryptionSpec)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nasJobOutput: ").append(toIndentedString(nasJobOutput)).append("\n");
    sb.append("    nasJobSpec: ").append(toIndentedString(nasJobSpec)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("displayName");
    openapiFields.add("enableRestrictedImageTraining");
    openapiFields.add("encryptionSpec");
    openapiFields.add("endTime");
    openapiFields.add("error");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("nasJobOutput");
    openapiFields.add("nasJobSpec");
    openapiFields.add("startTime");
    openapiFields.add("state");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1NasJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1NasJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1NasJob is not found in the empty JSON string", GoogleCloudAiplatformV1beta1NasJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1NasJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1NasJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `encryptionSpec`
      if (jsonObj.get("encryptionSpec") != null && !jsonObj.get("encryptionSpec").isJsonNull()) {
        GoogleCloudAiplatformV1beta1EncryptionSpec.validateJsonElement(jsonObj.get("encryptionSpec"));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("error"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `nasJobOutput`
      if (jsonObj.get("nasJobOutput") != null && !jsonObj.get("nasJobOutput").isJsonNull()) {
        GoogleCloudAiplatformV1beta1NasJobOutput.validateJsonElement(jsonObj.get("nasJobOutput"));
      }
      // validate the optional field `nasJobSpec`
      if (jsonObj.get("nasJobSpec") != null && !jsonObj.get("nasJobSpec").isJsonNull()) {
        GoogleCloudAiplatformV1beta1NasJobSpec.validateJsonElement(jsonObj.get("nasJobSpec"));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1NasJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1NasJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1NasJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1NasJob.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1NasJob>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1NasJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1NasJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1NasJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1NasJob
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1NasJob
   */
  public static GoogleCloudAiplatformV1beta1NasJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1NasJob.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1NasJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

