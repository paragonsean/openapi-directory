/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1RayMetricSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configuration information for the Ray cluster. For experimental launch, Ray cluster creation and Persistent cluster creation are 1:1 mapping: We will provision all the nodes within the Persistent cluster as Ray nodes.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1RaySpec {
  public static final String SERIALIZED_NAME_HEAD_NODE_RESOURCE_POOL_ID = "headNodeResourcePoolId";
  @SerializedName(SERIALIZED_NAME_HEAD_NODE_RESOURCE_POOL_ID)
  private String headNodeResourcePoolId;

  public static final String SERIALIZED_NAME_IMAGE_URI = "imageUri";
  @SerializedName(SERIALIZED_NAME_IMAGE_URI)
  private String imageUri;

  public static final String SERIALIZED_NAME_RAY_METRIC_SPEC = "rayMetricSpec";
  @SerializedName(SERIALIZED_NAME_RAY_METRIC_SPEC)
  private GoogleCloudAiplatformV1beta1RayMetricSpec rayMetricSpec;

  public static final String SERIALIZED_NAME_RESOURCE_POOL_IMAGES = "resourcePoolImages";
  @SerializedName(SERIALIZED_NAME_RESOURCE_POOL_IMAGES)
  private Map<String, String> resourcePoolImages = new HashMap<>();

  public GoogleCloudAiplatformV1beta1RaySpec() {
  }

  public GoogleCloudAiplatformV1beta1RaySpec headNodeResourcePoolId(String headNodeResourcePoolId) {
    this.headNodeResourcePoolId = headNodeResourcePoolId;
    return this;
  }

  /**
   * Optional. This will be used to indicate which resource pool will serve as the Ray head node(the first node within that pool). Will use the machine from the first workerpool as the head node by default if this field isn&#39;t set.
   * @return headNodeResourcePoolId
   */
  @javax.annotation.Nullable
  public String getHeadNodeResourcePoolId() {
    return headNodeResourcePoolId;
  }

  public void setHeadNodeResourcePoolId(String headNodeResourcePoolId) {
    this.headNodeResourcePoolId = headNodeResourcePoolId;
  }


  public GoogleCloudAiplatformV1beta1RaySpec imageUri(String imageUri) {
    this.imageUri = imageUri;
    return this;
  }

  /**
   * Optional. Default image for user to choose a preferred ML framework (for example, TensorFlow or Pytorch) by choosing from [Vertex prebuilt images](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). Either this or the resource_pool_images is required. Use this field if you need all the resource pools to have the same Ray image. Otherwise, use the {@code resource_pool_images} field.
   * @return imageUri
   */
  @javax.annotation.Nullable
  public String getImageUri() {
    return imageUri;
  }

  public void setImageUri(String imageUri) {
    this.imageUri = imageUri;
  }


  public GoogleCloudAiplatformV1beta1RaySpec rayMetricSpec(GoogleCloudAiplatformV1beta1RayMetricSpec rayMetricSpec) {
    this.rayMetricSpec = rayMetricSpec;
    return this;
  }

  /**
   * Get rayMetricSpec
   * @return rayMetricSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1RayMetricSpec getRayMetricSpec() {
    return rayMetricSpec;
  }

  public void setRayMetricSpec(GoogleCloudAiplatformV1beta1RayMetricSpec rayMetricSpec) {
    this.rayMetricSpec = rayMetricSpec;
  }


  public GoogleCloudAiplatformV1beta1RaySpec resourcePoolImages(Map<String, String> resourcePoolImages) {
    this.resourcePoolImages = resourcePoolImages;
    return this;
  }

  public GoogleCloudAiplatformV1beta1RaySpec putResourcePoolImagesItem(String key, String resourcePoolImagesItem) {
    if (this.resourcePoolImages == null) {
      this.resourcePoolImages = new HashMap<>();
    }
    this.resourcePoolImages.put(key, resourcePoolImagesItem);
    return this;
  }

  /**
   * Optional. Required if image_uri isn&#39;t set. A map of resource_pool_id to prebuild Ray image if user need to use different images for different head/worker pools. This map needs to cover all the resource pool ids. Example: { \&quot;ray_head_node_pool\&quot;: \&quot;head image\&quot; \&quot;ray_worker_node_pool1\&quot;: \&quot;worker image\&quot; \&quot;ray_worker_node_pool2\&quot;: \&quot;another worker image\&quot; }
   * @return resourcePoolImages
   */
  @javax.annotation.Nullable
  public Map<String, String> getResourcePoolImages() {
    return resourcePoolImages;
  }

  public void setResourcePoolImages(Map<String, String> resourcePoolImages) {
    this.resourcePoolImages = resourcePoolImages;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1RaySpec googleCloudAiplatformV1beta1RaySpec = (GoogleCloudAiplatformV1beta1RaySpec) o;
    return Objects.equals(this.headNodeResourcePoolId, googleCloudAiplatformV1beta1RaySpec.headNodeResourcePoolId) &&
        Objects.equals(this.imageUri, googleCloudAiplatformV1beta1RaySpec.imageUri) &&
        Objects.equals(this.rayMetricSpec, googleCloudAiplatformV1beta1RaySpec.rayMetricSpec) &&
        Objects.equals(this.resourcePoolImages, googleCloudAiplatformV1beta1RaySpec.resourcePoolImages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(headNodeResourcePoolId, imageUri, rayMetricSpec, resourcePoolImages);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1RaySpec {\n");
    sb.append("    headNodeResourcePoolId: ").append(toIndentedString(headNodeResourcePoolId)).append("\n");
    sb.append("    imageUri: ").append(toIndentedString(imageUri)).append("\n");
    sb.append("    rayMetricSpec: ").append(toIndentedString(rayMetricSpec)).append("\n");
    sb.append("    resourcePoolImages: ").append(toIndentedString(resourcePoolImages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("headNodeResourcePoolId");
    openapiFields.add("imageUri");
    openapiFields.add("rayMetricSpec");
    openapiFields.add("resourcePoolImages");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1RaySpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1RaySpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1RaySpec is not found in the empty JSON string", GoogleCloudAiplatformV1beta1RaySpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1RaySpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1RaySpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("headNodeResourcePoolId") != null && !jsonObj.get("headNodeResourcePoolId").isJsonNull()) && !jsonObj.get("headNodeResourcePoolId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `headNodeResourcePoolId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("headNodeResourcePoolId").toString()));
      }
      if ((jsonObj.get("imageUri") != null && !jsonObj.get("imageUri").isJsonNull()) && !jsonObj.get("imageUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageUri").toString()));
      }
      // validate the optional field `rayMetricSpec`
      if (jsonObj.get("rayMetricSpec") != null && !jsonObj.get("rayMetricSpec").isJsonNull()) {
        GoogleCloudAiplatformV1beta1RayMetricSpec.validateJsonElement(jsonObj.get("rayMetricSpec"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1RaySpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1RaySpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1RaySpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1RaySpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1RaySpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1RaySpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1RaySpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1RaySpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1RaySpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1RaySpec
   */
  public static GoogleCloudAiplatformV1beta1RaySpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1RaySpec.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1RaySpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

