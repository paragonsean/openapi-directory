/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Configuration for ConvexStopPolicy.
 * @deprecated
 */
@Deprecated
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig {
  public static final String SERIALIZED_NAME_AUTOREGRESSIVE_ORDER = "autoregressiveOrder";
  @SerializedName(SERIALIZED_NAME_AUTOREGRESSIVE_ORDER)
  private String autoregressiveOrder;

  public static final String SERIALIZED_NAME_LEARNING_RATE_PARAMETER_NAME = "learningRateParameterName";
  @SerializedName(SERIALIZED_NAME_LEARNING_RATE_PARAMETER_NAME)
  private String learningRateParameterName;

  public static final String SERIALIZED_NAME_MAX_NUM_STEPS = "maxNumSteps";
  @SerializedName(SERIALIZED_NAME_MAX_NUM_STEPS)
  private String maxNumSteps;

  public static final String SERIALIZED_NAME_MIN_NUM_STEPS = "minNumSteps";
  @SerializedName(SERIALIZED_NAME_MIN_NUM_STEPS)
  private String minNumSteps;

  public static final String SERIALIZED_NAME_USE_SECONDS = "useSeconds";
  @SerializedName(SERIALIZED_NAME_USE_SECONDS)
  private Boolean useSeconds;

  public GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig() {
  }

  public GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig autoregressiveOrder(String autoregressiveOrder) {
    this.autoregressiveOrder = autoregressiveOrder;
    return this;
  }

  /**
   * The number of Trial measurements used in autoregressive model for value prediction. A trial won&#39;t be considered early stopping if has fewer measurement points.
   * @return autoregressiveOrder
   */
  @javax.annotation.Nullable
  public String getAutoregressiveOrder() {
    return autoregressiveOrder;
  }

  public void setAutoregressiveOrder(String autoregressiveOrder) {
    this.autoregressiveOrder = autoregressiveOrder;
  }


  public GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig learningRateParameterName(String learningRateParameterName) {
    this.learningRateParameterName = learningRateParameterName;
    return this;
  }

  /**
   * The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial.
   * @return learningRateParameterName
   */
  @javax.annotation.Nullable
  public String getLearningRateParameterName() {
    return learningRateParameterName;
  }

  public void setLearningRateParameterName(String learningRateParameterName) {
    this.learningRateParameterName = learningRateParameterName;
  }


  public GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig maxNumSteps(String maxNumSteps) {
    this.maxNumSteps = maxNumSteps;
    return this;
  }

  /**
   * Steps used in predicting the final objective for early stopped trials. In general, it&#39;s set to be the same as the defined steps in training / tuning. When use_steps is false, this field is set to the maximum elapsed seconds.
   * @return maxNumSteps
   */
  @javax.annotation.Nullable
  public String getMaxNumSteps() {
    return maxNumSteps;
  }

  public void setMaxNumSteps(String maxNumSteps) {
    this.maxNumSteps = maxNumSteps;
  }


  public GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig minNumSteps(String minNumSteps) {
    this.minNumSteps = minNumSteps;
    return this;
  }

  /**
   * Minimum number of steps for a trial to complete. Trials which do not have a measurement with num_steps &gt; min_num_steps won&#39;t be considered for early stopping. It&#39;s ok to set it to 0, and a trial can be early stopped at any stage. By default, min_num_steps is set to be one-tenth of the max_num_steps. When use_steps is false, this field is set to the minimum elapsed seconds.
   * @return minNumSteps
   */
  @javax.annotation.Nullable
  public String getMinNumSteps() {
    return minNumSteps;
  }

  public void setMinNumSteps(String minNumSteps) {
    this.minNumSteps = minNumSteps;
  }


  public GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig useSeconds(Boolean useSeconds) {
    this.useSeconds = useSeconds;
    return this;
  }

  /**
   * This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_seconds&#x3D;&#x3D;false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_seconds&#x3D;&#x3D;true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds.
   * @return useSeconds
   */
  @javax.annotation.Nullable
  public Boolean getUseSeconds() {
    return useSeconds;
  }

  public void setUseSeconds(Boolean useSeconds) {
    this.useSeconds = useSeconds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig googleCloudAiplatformV1beta1StudySpecConvexStopConfig = (GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig) o;
    return Objects.equals(this.autoregressiveOrder, googleCloudAiplatformV1beta1StudySpecConvexStopConfig.autoregressiveOrder) &&
        Objects.equals(this.learningRateParameterName, googleCloudAiplatformV1beta1StudySpecConvexStopConfig.learningRateParameterName) &&
        Objects.equals(this.maxNumSteps, googleCloudAiplatformV1beta1StudySpecConvexStopConfig.maxNumSteps) &&
        Objects.equals(this.minNumSteps, googleCloudAiplatformV1beta1StudySpecConvexStopConfig.minNumSteps) &&
        Objects.equals(this.useSeconds, googleCloudAiplatformV1beta1StudySpecConvexStopConfig.useSeconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoregressiveOrder, learningRateParameterName, maxNumSteps, minNumSteps, useSeconds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig {\n");
    sb.append("    autoregressiveOrder: ").append(toIndentedString(autoregressiveOrder)).append("\n");
    sb.append("    learningRateParameterName: ").append(toIndentedString(learningRateParameterName)).append("\n");
    sb.append("    maxNumSteps: ").append(toIndentedString(maxNumSteps)).append("\n");
    sb.append("    minNumSteps: ").append(toIndentedString(minNumSteps)).append("\n");
    sb.append("    useSeconds: ").append(toIndentedString(useSeconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("autoregressiveOrder");
    openapiFields.add("learningRateParameterName");
    openapiFields.add("maxNumSteps");
    openapiFields.add("minNumSteps");
    openapiFields.add("useSeconds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig is not found in the empty JSON string", GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("autoregressiveOrder") != null && !jsonObj.get("autoregressiveOrder").isJsonNull()) && !jsonObj.get("autoregressiveOrder").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `autoregressiveOrder` to be a primitive type in the JSON string but got `%s`", jsonObj.get("autoregressiveOrder").toString()));
      }
      if ((jsonObj.get("learningRateParameterName") != null && !jsonObj.get("learningRateParameterName").isJsonNull()) && !jsonObj.get("learningRateParameterName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `learningRateParameterName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("learningRateParameterName").toString()));
      }
      if ((jsonObj.get("maxNumSteps") != null && !jsonObj.get("maxNumSteps").isJsonNull()) && !jsonObj.get("maxNumSteps").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxNumSteps` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxNumSteps").toString()));
      }
      if ((jsonObj.get("minNumSteps") != null && !jsonObj.get("minNumSteps").isJsonNull()) && !jsonObj.get("minNumSteps").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `minNumSteps` to be a primitive type in the JSON string but got `%s`", jsonObj.get("minNumSteps").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig
   */
  public static GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

