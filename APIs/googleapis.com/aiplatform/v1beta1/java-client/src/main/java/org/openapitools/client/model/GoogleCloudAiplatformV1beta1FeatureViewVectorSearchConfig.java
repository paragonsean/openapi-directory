/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Deprecated. Use IndexConfig instead.
 * @deprecated
 */
@Deprecated
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig {
  public static final String SERIALIZED_NAME_BRUTE_FORCE_CONFIG = "bruteForceConfig";
  @SerializedName(SERIALIZED_NAME_BRUTE_FORCE_CONFIG)
  private Object bruteForceConfig;

  public static final String SERIALIZED_NAME_CROWDING_COLUMN = "crowdingColumn";
  @SerializedName(SERIALIZED_NAME_CROWDING_COLUMN)
  private String crowdingColumn;

  /**
   * Optional. The distance measure used in nearest neighbor search.
   */
  @JsonAdapter(DistanceMeasureTypeEnum.Adapter.class)
  public enum DistanceMeasureTypeEnum {
    DISTANCE_MEASURE_TYPE_UNSPECIFIED("DISTANCE_MEASURE_TYPE_UNSPECIFIED"),
    
    SQUARED_L2_DISTANCE("SQUARED_L2_DISTANCE"),
    
    COSINE_DISTANCE("COSINE_DISTANCE"),
    
    DOT_PRODUCT_DISTANCE("DOT_PRODUCT_DISTANCE");

    private String value;

    DistanceMeasureTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DistanceMeasureTypeEnum fromValue(String value) {
      for (DistanceMeasureTypeEnum b : DistanceMeasureTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DistanceMeasureTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DistanceMeasureTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DistanceMeasureTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DistanceMeasureTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DistanceMeasureTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DISTANCE_MEASURE_TYPE = "distanceMeasureType";
  @SerializedName(SERIALIZED_NAME_DISTANCE_MEASURE_TYPE)
  private DistanceMeasureTypeEnum distanceMeasureType;

  public static final String SERIALIZED_NAME_EMBEDDING_COLUMN = "embeddingColumn";
  @SerializedName(SERIALIZED_NAME_EMBEDDING_COLUMN)
  private String embeddingColumn;

  public static final String SERIALIZED_NAME_EMBEDDING_DIMENSION = "embeddingDimension";
  @SerializedName(SERIALIZED_NAME_EMBEDDING_DIMENSION)
  private Integer embeddingDimension;

  public static final String SERIALIZED_NAME_FILTER_COLUMNS = "filterColumns";
  @SerializedName(SERIALIZED_NAME_FILTER_COLUMNS)
  private List<String> filterColumns = new ArrayList<>();

  public static final String SERIALIZED_NAME_TREE_AH_CONFIG = "treeAhConfig";
  @SerializedName(SERIALIZED_NAME_TREE_AH_CONFIG)
  private GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig treeAhConfig;

  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig() {
  }

  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig bruteForceConfig(Object bruteForceConfig) {
    this.bruteForceConfig = bruteForceConfig;
    return this;
  }

  /**
   * Get bruteForceConfig
   * @return bruteForceConfig
   */
  @javax.annotation.Nullable
  public Object getBruteForceConfig() {
    return bruteForceConfig;
  }

  public void setBruteForceConfig(Object bruteForceConfig) {
    this.bruteForceConfig = bruteForceConfig;
  }


  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig crowdingColumn(String crowdingColumn) {
    this.crowdingColumn = crowdingColumn;
    return this;
  }

  /**
   * Optional. Column of crowding. This column contains crowding attribute which is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k&#39; of the k neighbors returned have the same value of crowding_attribute.
   * @return crowdingColumn
   */
  @javax.annotation.Nullable
  public String getCrowdingColumn() {
    return crowdingColumn;
  }

  public void setCrowdingColumn(String crowdingColumn) {
    this.crowdingColumn = crowdingColumn;
  }


  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig distanceMeasureType(DistanceMeasureTypeEnum distanceMeasureType) {
    this.distanceMeasureType = distanceMeasureType;
    return this;
  }

  /**
   * Optional. The distance measure used in nearest neighbor search.
   * @return distanceMeasureType
   */
  @javax.annotation.Nullable
  public DistanceMeasureTypeEnum getDistanceMeasureType() {
    return distanceMeasureType;
  }

  public void setDistanceMeasureType(DistanceMeasureTypeEnum distanceMeasureType) {
    this.distanceMeasureType = distanceMeasureType;
  }


  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig embeddingColumn(String embeddingColumn) {
    this.embeddingColumn = embeddingColumn;
    return this;
  }

  /**
   * Optional. Column of embedding. This column contains the source data to create index for vector search. embedding_column must be set when using vector search.
   * @return embeddingColumn
   */
  @javax.annotation.Nullable
  public String getEmbeddingColumn() {
    return embeddingColumn;
  }

  public void setEmbeddingColumn(String embeddingColumn) {
    this.embeddingColumn = embeddingColumn;
  }


  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig embeddingDimension(Integer embeddingDimension) {
    this.embeddingDimension = embeddingDimension;
    return this;
  }

  /**
   * Optional. The number of dimensions of the input embedding.
   * @return embeddingDimension
   */
  @javax.annotation.Nullable
  public Integer getEmbeddingDimension() {
    return embeddingDimension;
  }

  public void setEmbeddingDimension(Integer embeddingDimension) {
    this.embeddingDimension = embeddingDimension;
  }


  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig filterColumns(List<String> filterColumns) {
    this.filterColumns = filterColumns;
    return this;
  }

  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig addFilterColumnsItem(String filterColumnsItem) {
    if (this.filterColumns == null) {
      this.filterColumns = new ArrayList<>();
    }
    this.filterColumns.add(filterColumnsItem);
    return this;
  }

  /**
   * Optional. Columns of features that&#39;re used to filter vector search results.
   * @return filterColumns
   */
  @javax.annotation.Nullable
  public List<String> getFilterColumns() {
    return filterColumns;
  }

  public void setFilterColumns(List<String> filterColumns) {
    this.filterColumns = filterColumns;
  }


  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig treeAhConfig(GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig treeAhConfig) {
    this.treeAhConfig = treeAhConfig;
    return this;
  }

  /**
   * Get treeAhConfig
   * @return treeAhConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig getTreeAhConfig() {
    return treeAhConfig;
  }

  public void setTreeAhConfig(GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig treeAhConfig) {
    this.treeAhConfig = treeAhConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig googleCloudAiplatformV1beta1FeatureViewVectorSearchConfig = (GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig) o;
    return Objects.equals(this.bruteForceConfig, googleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.bruteForceConfig) &&
        Objects.equals(this.crowdingColumn, googleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.crowdingColumn) &&
        Objects.equals(this.distanceMeasureType, googleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.distanceMeasureType) &&
        Objects.equals(this.embeddingColumn, googleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.embeddingColumn) &&
        Objects.equals(this.embeddingDimension, googleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.embeddingDimension) &&
        Objects.equals(this.filterColumns, googleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.filterColumns) &&
        Objects.equals(this.treeAhConfig, googleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.treeAhConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bruteForceConfig, crowdingColumn, distanceMeasureType, embeddingColumn, embeddingDimension, filterColumns, treeAhConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig {\n");
    sb.append("    bruteForceConfig: ").append(toIndentedString(bruteForceConfig)).append("\n");
    sb.append("    crowdingColumn: ").append(toIndentedString(crowdingColumn)).append("\n");
    sb.append("    distanceMeasureType: ").append(toIndentedString(distanceMeasureType)).append("\n");
    sb.append("    embeddingColumn: ").append(toIndentedString(embeddingColumn)).append("\n");
    sb.append("    embeddingDimension: ").append(toIndentedString(embeddingDimension)).append("\n");
    sb.append("    filterColumns: ").append(toIndentedString(filterColumns)).append("\n");
    sb.append("    treeAhConfig: ").append(toIndentedString(treeAhConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bruteForceConfig");
    openapiFields.add("crowdingColumn");
    openapiFields.add("distanceMeasureType");
    openapiFields.add("embeddingColumn");
    openapiFields.add("embeddingDimension");
    openapiFields.add("filterColumns");
    openapiFields.add("treeAhConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig is not found in the empty JSON string", GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("crowdingColumn") != null && !jsonObj.get("crowdingColumn").isJsonNull()) && !jsonObj.get("crowdingColumn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `crowdingColumn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("crowdingColumn").toString()));
      }
      if ((jsonObj.get("distanceMeasureType") != null && !jsonObj.get("distanceMeasureType").isJsonNull()) && !jsonObj.get("distanceMeasureType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distanceMeasureType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distanceMeasureType").toString()));
      }
      // validate the optional field `distanceMeasureType`
      if (jsonObj.get("distanceMeasureType") != null && !jsonObj.get("distanceMeasureType").isJsonNull()) {
        DistanceMeasureTypeEnum.validateJsonElement(jsonObj.get("distanceMeasureType"));
      }
      if ((jsonObj.get("embeddingColumn") != null && !jsonObj.get("embeddingColumn").isJsonNull()) && !jsonObj.get("embeddingColumn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `embeddingColumn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("embeddingColumn").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("filterColumns") != null && !jsonObj.get("filterColumns").isJsonNull() && !jsonObj.get("filterColumns").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterColumns` to be an array in the JSON string but got `%s`", jsonObj.get("filterColumns").toString()));
      }
      // validate the optional field `treeAhConfig`
      if (jsonObj.get("treeAhConfig") != null && !jsonObj.get("treeAhConfig").isJsonNull()) {
        GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig.validateJsonElement(jsonObj.get("treeAhConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig
   */
  public static GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

