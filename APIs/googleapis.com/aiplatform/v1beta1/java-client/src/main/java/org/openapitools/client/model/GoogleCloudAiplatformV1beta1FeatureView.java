/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureViewSyncConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FeatureView is representation of values that the FeatureOnlineStore will serve based on its syncConfig.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1FeatureView {
  public static final String SERIALIZED_NAME_BIG_QUERY_SOURCE = "bigQuerySource";
  @SerializedName(SERIALIZED_NAME_BIG_QUERY_SOURCE)
  private GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource bigQuerySource;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_FEATURE_REGISTRY_SOURCE = "featureRegistrySource";
  @SerializedName(SERIALIZED_NAME_FEATURE_REGISTRY_SOURCE)
  private GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource featureRegistrySource;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_EMAIL = "serviceAccountEmail";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_EMAIL)
  private String serviceAccountEmail;

  /**
   * Optional. Service agent type used during data sync. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureView within a project (https://cloud.google.com/vertex-ai/docs/featurestore/latest/resource-policy) a separate service account should be provisioned by setting this field to &#x60;SERVICE_AGENT_TYPE_FEATURE_VIEW&#x60;. This will generate a separate service account to access the BigQuery source table.
   */
  @JsonAdapter(ServiceAgentTypeEnum.Adapter.class)
  public enum ServiceAgentTypeEnum {
    UNSPECIFIED("SERVICE_AGENT_TYPE_UNSPECIFIED"),
    
    PROJECT("SERVICE_AGENT_TYPE_PROJECT"),
    
    FEATURE_VIEW("SERVICE_AGENT_TYPE_FEATURE_VIEW");

    private String value;

    ServiceAgentTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ServiceAgentTypeEnum fromValue(String value) {
      for (ServiceAgentTypeEnum b : ServiceAgentTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ServiceAgentTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ServiceAgentTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ServiceAgentTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ServiceAgentTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ServiceAgentTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SERVICE_AGENT_TYPE = "serviceAgentType";
  @SerializedName(SERIALIZED_NAME_SERVICE_AGENT_TYPE)
  private ServiceAgentTypeEnum serviceAgentType;

  public static final String SERIALIZED_NAME_SYNC_CONFIG = "syncConfig";
  @SerializedName(SERIALIZED_NAME_SYNC_CONFIG)
  private GoogleCloudAiplatformV1beta1FeatureViewSyncConfig syncConfig;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_VECTOR_SEARCH_CONFIG = "vectorSearchConfig";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_VECTOR_SEARCH_CONFIG)
  private GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig vectorSearchConfig;

  public GoogleCloudAiplatformV1beta1FeatureView() {
  }

  public GoogleCloudAiplatformV1beta1FeatureView(
     String createTime, 
     String serviceAccountEmail, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.serviceAccountEmail = serviceAccountEmail;
    this.updateTime = updateTime;
  }

  public GoogleCloudAiplatformV1beta1FeatureView bigQuerySource(GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
    return this;
  }

  /**
   * Get bigQuerySource
   * @return bigQuerySource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource getBigQuerySource() {
    return bigQuerySource;
  }

  public void setBigQuerySource(GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
  }


  /**
   * Output only. Timestamp when this FeatureView was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1beta1FeatureView etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. Used to perform consistent read-modify-write updates. If not set, a blind \&quot;overwrite\&quot; update happens.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudAiplatformV1beta1FeatureView featureRegistrySource(GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource featureRegistrySource) {
    this.featureRegistrySource = featureRegistrySource;
    return this;
  }

  /**
   * Get featureRegistrySource
   * @return featureRegistrySource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource getFeatureRegistrySource() {
    return featureRegistrySource;
  }

  public void setFeatureRegistrySource(GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource featureRegistrySource) {
    this.featureRegistrySource = featureRegistrySource;
  }


  public GoogleCloudAiplatformV1beta1FeatureView labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudAiplatformV1beta1FeatureView putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\&quot; System reserved label keys are prefixed with \&quot;aiplatform.googleapis.com/\&quot; and are immutable.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudAiplatformV1beta1FeatureView name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Identifier. Name of the FeatureView. Format: &#x60;projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  /**
   * Output only. A Service Account unique to this FeatureView. The role bigquery.dataViewer should be granted to this service account to allow Vertex AI Feature Store to sync data to the online store.
   * @return serviceAccountEmail
   */
  @javax.annotation.Nullable
  public String getServiceAccountEmail() {
    return serviceAccountEmail;
  }



  public GoogleCloudAiplatformV1beta1FeatureView serviceAgentType(ServiceAgentTypeEnum serviceAgentType) {
    this.serviceAgentType = serviceAgentType;
    return this;
  }

  /**
   * Optional. Service agent type used during data sync. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureView within a project (https://cloud.google.com/vertex-ai/docs/featurestore/latest/resource-policy) a separate service account should be provisioned by setting this field to &#x60;SERVICE_AGENT_TYPE_FEATURE_VIEW&#x60;. This will generate a separate service account to access the BigQuery source table.
   * @return serviceAgentType
   */
  @javax.annotation.Nullable
  public ServiceAgentTypeEnum getServiceAgentType() {
    return serviceAgentType;
  }

  public void setServiceAgentType(ServiceAgentTypeEnum serviceAgentType) {
    this.serviceAgentType = serviceAgentType;
  }


  public GoogleCloudAiplatformV1beta1FeatureView syncConfig(GoogleCloudAiplatformV1beta1FeatureViewSyncConfig syncConfig) {
    this.syncConfig = syncConfig;
    return this;
  }

  /**
   * Get syncConfig
   * @return syncConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1FeatureViewSyncConfig getSyncConfig() {
    return syncConfig;
  }

  public void setSyncConfig(GoogleCloudAiplatformV1beta1FeatureViewSyncConfig syncConfig) {
    this.syncConfig = syncConfig;
  }


  /**
   * Output only. Timestamp when this FeatureView was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  @Deprecated
  public GoogleCloudAiplatformV1beta1FeatureView vectorSearchConfig(GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig vectorSearchConfig) {
    this.vectorSearchConfig = vectorSearchConfig;
    return this;
  }

  /**
   * Get vectorSearchConfig
   * @return vectorSearchConfig
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig getVectorSearchConfig() {
    return vectorSearchConfig;
  }

  @Deprecated
  public void setVectorSearchConfig(GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig vectorSearchConfig) {
    this.vectorSearchConfig = vectorSearchConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1FeatureView googleCloudAiplatformV1beta1FeatureView = (GoogleCloudAiplatformV1beta1FeatureView) o;
    return Objects.equals(this.bigQuerySource, googleCloudAiplatformV1beta1FeatureView.bigQuerySource) &&
        Objects.equals(this.createTime, googleCloudAiplatformV1beta1FeatureView.createTime) &&
        Objects.equals(this.etag, googleCloudAiplatformV1beta1FeatureView.etag) &&
        Objects.equals(this.featureRegistrySource, googleCloudAiplatformV1beta1FeatureView.featureRegistrySource) &&
        Objects.equals(this.labels, googleCloudAiplatformV1beta1FeatureView.labels) &&
        Objects.equals(this.name, googleCloudAiplatformV1beta1FeatureView.name) &&
        Objects.equals(this.serviceAccountEmail, googleCloudAiplatformV1beta1FeatureView.serviceAccountEmail) &&
        Objects.equals(this.serviceAgentType, googleCloudAiplatformV1beta1FeatureView.serviceAgentType) &&
        Objects.equals(this.syncConfig, googleCloudAiplatformV1beta1FeatureView.syncConfig) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1beta1FeatureView.updateTime) &&
        Objects.equals(this.vectorSearchConfig, googleCloudAiplatformV1beta1FeatureView.vectorSearchConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigQuerySource, createTime, etag, featureRegistrySource, labels, name, serviceAccountEmail, serviceAgentType, syncConfig, updateTime, vectorSearchConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1FeatureView {\n");
    sb.append("    bigQuerySource: ").append(toIndentedString(bigQuerySource)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    featureRegistrySource: ").append(toIndentedString(featureRegistrySource)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    serviceAccountEmail: ").append(toIndentedString(serviceAccountEmail)).append("\n");
    sb.append("    serviceAgentType: ").append(toIndentedString(serviceAgentType)).append("\n");
    sb.append("    syncConfig: ").append(toIndentedString(syncConfig)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    vectorSearchConfig: ").append(toIndentedString(vectorSearchConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigQuerySource");
    openapiFields.add("createTime");
    openapiFields.add("etag");
    openapiFields.add("featureRegistrySource");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("serviceAccountEmail");
    openapiFields.add("serviceAgentType");
    openapiFields.add("syncConfig");
    openapiFields.add("updateTime");
    openapiFields.add("vectorSearchConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1FeatureView
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1FeatureView.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1FeatureView is not found in the empty JSON string", GoogleCloudAiplatformV1beta1FeatureView.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1FeatureView.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1FeatureView` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigQuerySource`
      if (jsonObj.get("bigQuerySource") != null && !jsonObj.get("bigQuerySource").isJsonNull()) {
        GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource.validateJsonElement(jsonObj.get("bigQuerySource"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      // validate the optional field `featureRegistrySource`
      if (jsonObj.get("featureRegistrySource") != null && !jsonObj.get("featureRegistrySource").isJsonNull()) {
        GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource.validateJsonElement(jsonObj.get("featureRegistrySource"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("serviceAccountEmail") != null && !jsonObj.get("serviceAccountEmail").isJsonNull()) && !jsonObj.get("serviceAccountEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccountEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccountEmail").toString()));
      }
      if ((jsonObj.get("serviceAgentType") != null && !jsonObj.get("serviceAgentType").isJsonNull()) && !jsonObj.get("serviceAgentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAgentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAgentType").toString()));
      }
      // validate the optional field `serviceAgentType`
      if (jsonObj.get("serviceAgentType") != null && !jsonObj.get("serviceAgentType").isJsonNull()) {
        ServiceAgentTypeEnum.validateJsonElement(jsonObj.get("serviceAgentType"));
      }
      // validate the optional field `syncConfig`
      if (jsonObj.get("syncConfig") != null && !jsonObj.get("syncConfig").isJsonNull()) {
        GoogleCloudAiplatformV1beta1FeatureViewSyncConfig.validateJsonElement(jsonObj.get("syncConfig"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      // validate the optional field `vectorSearchConfig`
      if (jsonObj.get("vectorSearchConfig") != null && !jsonObj.get("vectorSearchConfig").isJsonNull()) {
        GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.validateJsonElement(jsonObj.get("vectorSearchConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1FeatureView.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1FeatureView' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1FeatureView> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1FeatureView.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1FeatureView>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1FeatureView value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1FeatureView read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1FeatureView given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1FeatureView
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1FeatureView
   */
  public static GoogleCloudAiplatformV1beta1FeatureView fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1FeatureView.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1FeatureView to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

