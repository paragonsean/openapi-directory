/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for [InternalOsServiceStateInstance].
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance {
  /**
   * Required. internal service name.
   */
  @JsonAdapter(ServiceNameEnum.Adapter.class)
  public enum ServiceNameEnum {
    INTERNAL_OS_SERVICE_ENUM_UNSPECIFIED("INTERNAL_OS_SERVICE_ENUM_UNSPECIFIED"),
    
    DOCKER_SERVICE_STATE("DOCKER_SERVICE_STATE"),
    
    CONTROL_PLANE_API_DNS_STATE("CONTROL_PLANE_API_DNS_STATE"),
    
    PROXY_REGISTRATION_DNS_STATE("PROXY_REGISTRATION_DNS_STATE"),
    
    JUPYTER_STATE("JUPYTER_STATE"),
    
    JUPYTER_API_STATE("JUPYTER_API_STATE"),
    
    EUC_METADATA_API_STATE("EUC_METADATA_API_STATE"),
    
    EUC_AGENT_API_STATE("EUC_AGENT_API_STATE"),
    
    IDLE_SHUTDOWN_AGENT_STATE("IDLE_SHUTDOWN_AGENT_STATE"),
    
    PROXY_AGENT_STATE("PROXY_AGENT_STATE");

    private String value;

    ServiceNameEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ServiceNameEnum fromValue(String value) {
      for (ServiceNameEnum b : ServiceNameEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ServiceNameEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ServiceNameEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ServiceNameEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ServiceNameEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ServiceNameEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SERVICE_NAME = "serviceName";
  @SerializedName(SERIALIZED_NAME_SERVICE_NAME)
  private ServiceNameEnum serviceName;

  /**
   * Required. internal service state.
   */
  @JsonAdapter(ServiceStateEnum.Adapter.class)
  public enum ServiceStateEnum {
    UNKNOWN("UNKNOWN"),
    
    HEALTHY("HEALTHY"),
    
    UNHEALTHY("UNHEALTHY");

    private String value;

    ServiceStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ServiceStateEnum fromValue(String value) {
      for (ServiceStateEnum b : ServiceStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ServiceStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ServiceStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ServiceStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ServiceStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ServiceStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SERVICE_STATE = "serviceState";
  @SerializedName(SERIALIZED_NAME_SERVICE_STATE)
  private ServiceStateEnum serviceState;

  public GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance() {
  }

  public GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance serviceName(ServiceNameEnum serviceName) {
    this.serviceName = serviceName;
    return this;
  }

  /**
   * Required. internal service name.
   * @return serviceName
   */
  @javax.annotation.Nullable
  public ServiceNameEnum getServiceName() {
    return serviceName;
  }

  public void setServiceName(ServiceNameEnum serviceName) {
    this.serviceName = serviceName;
  }


  public GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance serviceState(ServiceStateEnum serviceState) {
    this.serviceState = serviceState;
    return this;
  }

  /**
   * Required. internal service state.
   * @return serviceState
   */
  @javax.annotation.Nullable
  public ServiceStateEnum getServiceState() {
    return serviceState;
  }

  public void setServiceState(ServiceStateEnum serviceState) {
    this.serviceState = serviceState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance googleCloudAiplatformV1beta1InternalOsServiceStateInstance = (GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance) o;
    return Objects.equals(this.serviceName, googleCloudAiplatformV1beta1InternalOsServiceStateInstance.serviceName) &&
        Objects.equals(this.serviceState, googleCloudAiplatformV1beta1InternalOsServiceStateInstance.serviceState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serviceName, serviceState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance {\n");
    sb.append("    serviceName: ").append(toIndentedString(serviceName)).append("\n");
    sb.append("    serviceState: ").append(toIndentedString(serviceState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("serviceName");
    openapiFields.add("serviceState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance is not found in the empty JSON string", GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("serviceName") != null && !jsonObj.get("serviceName").isJsonNull()) && !jsonObj.get("serviceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceName").toString()));
      }
      // validate the optional field `serviceName`
      if (jsonObj.get("serviceName") != null && !jsonObj.get("serviceName").isJsonNull()) {
        ServiceNameEnum.validateJsonElement(jsonObj.get("serviceName"));
      }
      if ((jsonObj.get("serviceState") != null && !jsonObj.get("serviceState").isJsonNull()) && !jsonObj.get("serviceState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceState").toString()));
      }
      // validate the optional field `serviceState`
      if (jsonObj.get("serviceState") != null && !jsonObj.get("serviceState").isJsonNull()) {
        ServiceStateEnum.validateJsonElement(jsonObj.get("serviceState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance
   */
  public static GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1InternalOsServiceStateInstance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

