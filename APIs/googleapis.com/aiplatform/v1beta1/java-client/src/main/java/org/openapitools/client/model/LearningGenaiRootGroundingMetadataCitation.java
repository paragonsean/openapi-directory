/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LearningGenaiRootGroundingMetadataCitation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LearningGenaiRootGroundingMetadataCitation {
  public static final String SERIALIZED_NAME_END_INDEX = "endIndex";
  @SerializedName(SERIALIZED_NAME_END_INDEX)
  private Integer endIndex;

  public static final String SERIALIZED_NAME_FACT_INDEX = "factIndex";
  @SerializedName(SERIALIZED_NAME_FACT_INDEX)
  private Integer factIndex;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Double score;

  public static final String SERIALIZED_NAME_START_INDEX = "startIndex";
  @SerializedName(SERIALIZED_NAME_START_INDEX)
  private Integer startIndex;

  public LearningGenaiRootGroundingMetadataCitation() {
  }

  public LearningGenaiRootGroundingMetadataCitation endIndex(Integer endIndex) {
    this.endIndex = endIndex;
    return this;
  }

  /**
   * Index in the prediction output where the citation ends (exclusive). Must be &gt; start_index and &lt; len(output).
   * @return endIndex
   */
  @javax.annotation.Nullable
  public Integer getEndIndex() {
    return endIndex;
  }

  public void setEndIndex(Integer endIndex) {
    this.endIndex = endIndex;
  }


  public LearningGenaiRootGroundingMetadataCitation factIndex(Integer factIndex) {
    this.factIndex = factIndex;
    return this;
  }

  /**
   * Index of the fact supporting this claim. Should be within the range of the &#x60;world_facts&#x60; in the GenerateResponse.
   * @return factIndex
   */
  @javax.annotation.Nullable
  public Integer getFactIndex() {
    return factIndex;
  }

  public void setFactIndex(Integer factIndex) {
    this.factIndex = factIndex;
  }


  public LearningGenaiRootGroundingMetadataCitation score(Double score) {
    this.score = score;
    return this;
  }

  /**
   * Confidence score of this entailment. Value is [0,1] with 1 is the most confidence.
   * @return score
   */
  @javax.annotation.Nullable
  public Double getScore() {
    return score;
  }

  public void setScore(Double score) {
    this.score = score;
  }


  public LearningGenaiRootGroundingMetadataCitation startIndex(Integer startIndex) {
    this.startIndex = startIndex;
    return this;
  }

  /**
   * Index in the prediction output where the citation starts (inclusive). Must be &gt;&#x3D; 0 and &lt; end_index.
   * @return startIndex
   */
  @javax.annotation.Nullable
  public Integer getStartIndex() {
    return startIndex;
  }

  public void setStartIndex(Integer startIndex) {
    this.startIndex = startIndex;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LearningGenaiRootGroundingMetadataCitation learningGenaiRootGroundingMetadataCitation = (LearningGenaiRootGroundingMetadataCitation) o;
    return Objects.equals(this.endIndex, learningGenaiRootGroundingMetadataCitation.endIndex) &&
        Objects.equals(this.factIndex, learningGenaiRootGroundingMetadataCitation.factIndex) &&
        Objects.equals(this.score, learningGenaiRootGroundingMetadataCitation.score) &&
        Objects.equals(this.startIndex, learningGenaiRootGroundingMetadataCitation.startIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endIndex, factIndex, score, startIndex);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LearningGenaiRootGroundingMetadataCitation {\n");
    sb.append("    endIndex: ").append(toIndentedString(endIndex)).append("\n");
    sb.append("    factIndex: ").append(toIndentedString(factIndex)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("endIndex");
    openapiFields.add("factIndex");
    openapiFields.add("score");
    openapiFields.add("startIndex");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LearningGenaiRootGroundingMetadataCitation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LearningGenaiRootGroundingMetadataCitation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LearningGenaiRootGroundingMetadataCitation is not found in the empty JSON string", LearningGenaiRootGroundingMetadataCitation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LearningGenaiRootGroundingMetadataCitation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LearningGenaiRootGroundingMetadataCitation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LearningGenaiRootGroundingMetadataCitation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LearningGenaiRootGroundingMetadataCitation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LearningGenaiRootGroundingMetadataCitation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LearningGenaiRootGroundingMetadataCitation.class));

       return (TypeAdapter<T>) new TypeAdapter<LearningGenaiRootGroundingMetadataCitation>() {
           @Override
           public void write(JsonWriter out, LearningGenaiRootGroundingMetadataCitation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LearningGenaiRootGroundingMetadataCitation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LearningGenaiRootGroundingMetadataCitation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LearningGenaiRootGroundingMetadataCitation
   * @throws IOException if the JSON string is invalid with respect to LearningGenaiRootGroundingMetadataCitation
   */
  public static LearningGenaiRootGroundingMetadataCitation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LearningGenaiRootGroundingMetadataCitation.class);
  }

  /**
   * Convert an instance of LearningGenaiRootGroundingMetadataCitation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

