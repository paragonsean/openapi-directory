/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1TimeSeriesData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for TensorboardService.WriteTensorboardRunData.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest {
  public static final String SERIALIZED_NAME_TENSORBOARD_RUN = "tensorboardRun";
  @SerializedName(SERIALIZED_NAME_TENSORBOARD_RUN)
  private String tensorboardRun;

  public static final String SERIALIZED_NAME_TIME_SERIES_DATA = "timeSeriesData";
  @SerializedName(SERIALIZED_NAME_TIME_SERIES_DATA)
  private List<GoogleCloudAiplatformV1beta1TimeSeriesData> timeSeriesData = new ArrayList<>();

  public GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest() {
  }

  public GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest tensorboardRun(String tensorboardRun) {
    this.tensorboardRun = tensorboardRun;
    return this;
  }

  /**
   * Required. The resource name of the TensorboardRun to write data to. Format: &#x60;projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}&#x60;
   * @return tensorboardRun
   */
  @javax.annotation.Nullable
  public String getTensorboardRun() {
    return tensorboardRun;
  }

  public void setTensorboardRun(String tensorboardRun) {
    this.tensorboardRun = tensorboardRun;
  }


  public GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest timeSeriesData(List<GoogleCloudAiplatformV1beta1TimeSeriesData> timeSeriesData) {
    this.timeSeriesData = timeSeriesData;
    return this;
  }

  public GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest addTimeSeriesDataItem(GoogleCloudAiplatformV1beta1TimeSeriesData timeSeriesDataItem) {
    if (this.timeSeriesData == null) {
      this.timeSeriesData = new ArrayList<>();
    }
    this.timeSeriesData.add(timeSeriesDataItem);
    return this;
  }

  /**
   * Required. The TensorboardTimeSeries data to write. Values with in a time series are indexed by their step value. Repeated writes to the same step will overwrite the existing value for that step. The upper limit of data points per write request is 5000.
   * @return timeSeriesData
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1TimeSeriesData> getTimeSeriesData() {
    return timeSeriesData;
  }

  public void setTimeSeriesData(List<GoogleCloudAiplatformV1beta1TimeSeriesData> timeSeriesData) {
    this.timeSeriesData = timeSeriesData;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest googleCloudAiplatformV1beta1WriteTensorboardRunDataRequest = (GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest) o;
    return Objects.equals(this.tensorboardRun, googleCloudAiplatformV1beta1WriteTensorboardRunDataRequest.tensorboardRun) &&
        Objects.equals(this.timeSeriesData, googleCloudAiplatformV1beta1WriteTensorboardRunDataRequest.timeSeriesData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tensorboardRun, timeSeriesData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest {\n");
    sb.append("    tensorboardRun: ").append(toIndentedString(tensorboardRun)).append("\n");
    sb.append("    timeSeriesData: ").append(toIndentedString(timeSeriesData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("tensorboardRun");
    openapiFields.add("timeSeriesData");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest is not found in the empty JSON string", GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("tensorboardRun") != null && !jsonObj.get("tensorboardRun").isJsonNull()) && !jsonObj.get("tensorboardRun").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tensorboardRun` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tensorboardRun").toString()));
      }
      if (jsonObj.get("timeSeriesData") != null && !jsonObj.get("timeSeriesData").isJsonNull()) {
        JsonArray jsonArraytimeSeriesData = jsonObj.getAsJsonArray("timeSeriesData");
        if (jsonArraytimeSeriesData != null) {
          // ensure the json data is an array
          if (!jsonObj.get("timeSeriesData").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `timeSeriesData` to be an array in the JSON string but got `%s`", jsonObj.get("timeSeriesData").toString()));
          }

          // validate the optional field `timeSeriesData` (array)
          for (int i = 0; i < jsonArraytimeSeriesData.size(); i++) {
            GoogleCloudAiplatformV1beta1TimeSeriesData.validateJsonElement(jsonArraytimeSeriesData.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest
   */
  public static GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

