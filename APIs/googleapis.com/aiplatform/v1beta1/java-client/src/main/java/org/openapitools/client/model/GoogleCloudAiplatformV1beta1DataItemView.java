/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Annotation;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DataItem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A container for a single DataItem and Annotations on it.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1DataItemView {
  public static final String SERIALIZED_NAME_ANNOTATIONS = "annotations";
  @SerializedName(SERIALIZED_NAME_ANNOTATIONS)
  private List<GoogleCloudAiplatformV1beta1Annotation> annotations = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATA_ITEM = "dataItem";
  @SerializedName(SERIALIZED_NAME_DATA_ITEM)
  private GoogleCloudAiplatformV1beta1DataItem dataItem;

  public static final String SERIALIZED_NAME_HAS_TRUNCATED_ANNOTATIONS = "hasTruncatedAnnotations";
  @SerializedName(SERIALIZED_NAME_HAS_TRUNCATED_ANNOTATIONS)
  private Boolean hasTruncatedAnnotations;

  public GoogleCloudAiplatformV1beta1DataItemView() {
  }

  public GoogleCloudAiplatformV1beta1DataItemView annotations(List<GoogleCloudAiplatformV1beta1Annotation> annotations) {
    this.annotations = annotations;
    return this;
  }

  public GoogleCloudAiplatformV1beta1DataItemView addAnnotationsItem(GoogleCloudAiplatformV1beta1Annotation annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

  /**
   * The Annotations on the DataItem. If too many Annotations should be returned for the DataItem, this field will be truncated per annotations_limit in request. If it was, then the has_truncated_annotations will be set to true.
   * @return annotations
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1Annotation> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(List<GoogleCloudAiplatformV1beta1Annotation> annotations) {
    this.annotations = annotations;
  }


  public GoogleCloudAiplatformV1beta1DataItemView dataItem(GoogleCloudAiplatformV1beta1DataItem dataItem) {
    this.dataItem = dataItem;
    return this;
  }

  /**
   * Get dataItem
   * @return dataItem
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1DataItem getDataItem() {
    return dataItem;
  }

  public void setDataItem(GoogleCloudAiplatformV1beta1DataItem dataItem) {
    this.dataItem = dataItem;
  }


  public GoogleCloudAiplatformV1beta1DataItemView hasTruncatedAnnotations(Boolean hasTruncatedAnnotations) {
    this.hasTruncatedAnnotations = hasTruncatedAnnotations;
    return this;
  }

  /**
   * True if and only if the Annotations field has been truncated. It happens if more Annotations for this DataItem met the request&#39;s annotation_filter than are allowed to be returned by annotations_limit. Note that if Annotations field is not being returned due to field mask, then this field will not be set to true no matter how many Annotations are there.
   * @return hasTruncatedAnnotations
   */
  @javax.annotation.Nullable
  public Boolean getHasTruncatedAnnotations() {
    return hasTruncatedAnnotations;
  }

  public void setHasTruncatedAnnotations(Boolean hasTruncatedAnnotations) {
    this.hasTruncatedAnnotations = hasTruncatedAnnotations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1DataItemView googleCloudAiplatformV1beta1DataItemView = (GoogleCloudAiplatformV1beta1DataItemView) o;
    return Objects.equals(this.annotations, googleCloudAiplatformV1beta1DataItemView.annotations) &&
        Objects.equals(this.dataItem, googleCloudAiplatformV1beta1DataItemView.dataItem) &&
        Objects.equals(this.hasTruncatedAnnotations, googleCloudAiplatformV1beta1DataItemView.hasTruncatedAnnotations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, dataItem, hasTruncatedAnnotations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1DataItemView {\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    dataItem: ").append(toIndentedString(dataItem)).append("\n");
    sb.append("    hasTruncatedAnnotations: ").append(toIndentedString(hasTruncatedAnnotations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotations");
    openapiFields.add("dataItem");
    openapiFields.add("hasTruncatedAnnotations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1DataItemView
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1DataItemView.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1DataItemView is not found in the empty JSON string", GoogleCloudAiplatformV1beta1DataItemView.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1DataItemView.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1DataItemView` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("annotations") != null && !jsonObj.get("annotations").isJsonNull()) {
        JsonArray jsonArrayannotations = jsonObj.getAsJsonArray("annotations");
        if (jsonArrayannotations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("annotations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `annotations` to be an array in the JSON string but got `%s`", jsonObj.get("annotations").toString()));
          }

          // validate the optional field `annotations` (array)
          for (int i = 0; i < jsonArrayannotations.size(); i++) {
            GoogleCloudAiplatformV1beta1Annotation.validateJsonElement(jsonArrayannotations.get(i));
          };
        }
      }
      // validate the optional field `dataItem`
      if (jsonObj.get("dataItem") != null && !jsonObj.get("dataItem").isJsonNull()) {
        GoogleCloudAiplatformV1beta1DataItem.validateJsonElement(jsonObj.get("dataItem"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1DataItemView.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1DataItemView' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1DataItemView> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1DataItemView.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1DataItemView>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1DataItemView value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1DataItemView read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1DataItemView given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1DataItemView
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1DataItemView
   */
  public static GoogleCloudAiplatformV1beta1DataItemView fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1DataItemView.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1DataItemView to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

