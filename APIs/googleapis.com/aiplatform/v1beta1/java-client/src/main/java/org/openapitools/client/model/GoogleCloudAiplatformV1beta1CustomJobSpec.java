/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1GcsDestination;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Scheduling;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1WorkerPoolSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the spec of a CustomJob.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1CustomJobSpec {
  public static final String SERIALIZED_NAME_BASE_OUTPUT_DIRECTORY = "baseOutputDirectory";
  @SerializedName(SERIALIZED_NAME_BASE_OUTPUT_DIRECTORY)
  private GoogleCloudAiplatformV1beta1GcsDestination baseOutputDirectory;

  public static final String SERIALIZED_NAME_ENABLE_DASHBOARD_ACCESS = "enableDashboardAccess";
  @SerializedName(SERIALIZED_NAME_ENABLE_DASHBOARD_ACCESS)
  private Boolean enableDashboardAccess;

  public static final String SERIALIZED_NAME_ENABLE_WEB_ACCESS = "enableWebAccess";
  @SerializedName(SERIALIZED_NAME_ENABLE_WEB_ACCESS)
  private Boolean enableWebAccess;

  public static final String SERIALIZED_NAME_EXPERIMENT = "experiment";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT)
  private String experiment;

  public static final String SERIALIZED_NAME_EXPERIMENT_RUN = "experimentRun";
  @SerializedName(SERIALIZED_NAME_EXPERIMENT_RUN)
  private String experimentRun;

  public static final String SERIALIZED_NAME_MODELS = "models";
  @SerializedName(SERIALIZED_NAME_MODELS)
  private List<String> models = new ArrayList<>();

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_PERSISTENT_RESOURCE_ID = "persistentResourceId";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_RESOURCE_ID)
  private String persistentResourceId;

  public static final String SERIALIZED_NAME_PROTECTED_ARTIFACT_LOCATION_ID = "protectedArtifactLocationId";
  @SerializedName(SERIALIZED_NAME_PROTECTED_ARTIFACT_LOCATION_ID)
  private String protectedArtifactLocationId;

  public static final String SERIALIZED_NAME_RESERVED_IP_RANGES = "reservedIpRanges";
  @SerializedName(SERIALIZED_NAME_RESERVED_IP_RANGES)
  private List<String> reservedIpRanges = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCHEDULING = "scheduling";
  @SerializedName(SERIALIZED_NAME_SCHEDULING)
  private GoogleCloudAiplatformV1beta1Scheduling scheduling;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT = "serviceAccount";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT)
  private String serviceAccount;

  public static final String SERIALIZED_NAME_TENSORBOARD = "tensorboard";
  @SerializedName(SERIALIZED_NAME_TENSORBOARD)
  private String tensorboard;

  public static final String SERIALIZED_NAME_WORKER_POOL_SPECS = "workerPoolSpecs";
  @SerializedName(SERIALIZED_NAME_WORKER_POOL_SPECS)
  private List<GoogleCloudAiplatformV1beta1WorkerPoolSpec> workerPoolSpecs = new ArrayList<>();

  public GoogleCloudAiplatformV1beta1CustomJobSpec() {
  }

  public GoogleCloudAiplatformV1beta1CustomJobSpec baseOutputDirectory(GoogleCloudAiplatformV1beta1GcsDestination baseOutputDirectory) {
    this.baseOutputDirectory = baseOutputDirectory;
    return this;
  }

  /**
   * Get baseOutputDirectory
   * @return baseOutputDirectory
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1GcsDestination getBaseOutputDirectory() {
    return baseOutputDirectory;
  }

  public void setBaseOutputDirectory(GoogleCloudAiplatformV1beta1GcsDestination baseOutputDirectory) {
    this.baseOutputDirectory = baseOutputDirectory;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec enableDashboardAccess(Boolean enableDashboardAccess) {
    this.enableDashboardAccess = enableDashboardAccess;
    return this;
  }

  /**
   * Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to &#x60;true&#x60;, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
   * @return enableDashboardAccess
   */
  @javax.annotation.Nullable
  public Boolean getEnableDashboardAccess() {
    return enableDashboardAccess;
  }

  public void setEnableDashboardAccess(Boolean enableDashboardAccess) {
    this.enableDashboardAccess = enableDashboardAccess;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec enableWebAccess(Boolean enableWebAccess) {
    this.enableWebAccess = enableWebAccess;
    return this;
  }

  /**
   * Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to &#x60;true&#x60;, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
   * @return enableWebAccess
   */
  @javax.annotation.Nullable
  public Boolean getEnableWebAccess() {
    return enableWebAccess;
  }

  public void setEnableWebAccess(Boolean enableWebAccess) {
    this.enableWebAccess = enableWebAccess;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec experiment(String experiment) {
    this.experiment = experiment;
    return this;
  }

  /**
   * Optional. The Experiment associated with this job. Format: &#x60;projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}&#x60;
   * @return experiment
   */
  @javax.annotation.Nullable
  public String getExperiment() {
    return experiment;
  }

  public void setExperiment(String experiment) {
    this.experiment = experiment;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec experimentRun(String experimentRun) {
    this.experimentRun = experimentRun;
    return this;
  }

  /**
   * Optional. The Experiment Run associated with this job. Format: &#x60;projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}&#x60;
   * @return experimentRun
   */
  @javax.annotation.Nullable
  public String getExperimentRun() {
    return experimentRun;
  }

  public void setExperimentRun(String experimentRun) {
    this.experimentRun = experimentRun;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec models(List<String> models) {
    this.models = models;
    return this;
  }

  public GoogleCloudAiplatformV1beta1CustomJobSpec addModelsItem(String modelsItem) {
    if (this.models == null) {
      this.models = new ArrayList<>();
    }
    this.models.add(modelsItem);
    return this;
  }

  /**
   * Optional. The name of the Model resources for which to generate a mapping to artifact URIs. Applicable only to some of the Google-provided custom jobs. Format: &#x60;projects/{project}/locations/{location}/models/{model}&#x60; In order to retrieve a specific version of the model, also provide the version ID or version alias. Example: &#x60;projects/{project}/locations/{location}/models/{model}@2&#x60; or &#x60;projects/{project}/locations/{location}/models/{model}@golden&#x60; If no version ID or alias is specified, the \&quot;default\&quot; version will be returned. The \&quot;default\&quot; version alias is created for the first version of the model, and can be moved to other versions later on. There will be exactly one default version.
   * @return models
   */
  @javax.annotation.Nullable
  public List<String> getModels() {
    return models;
  }

  public void setModels(List<String> models) {
    this.models = models;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec network(String network) {
    this.network = network;
    return this;
  }

  /**
   * Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, &#x60;projects/12345/global/networks/myVPC&#x60;. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form &#x60;projects/{project}/global/networks/{network}&#x60;. Where {project} is a project number, as in &#x60;12345&#x60;, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec persistentResourceId(String persistentResourceId) {
    this.persistentResourceId = persistentResourceId;
    return this;
  }

  /**
   * Optional. The ID of the PersistentResource in the same Project and Location which to run If this is specified, the job will be run on existing machines held by the PersistentResource instead of on-demand short-live machines. The network and CMEK configs on the job should be consistent with those on the PersistentResource, otherwise, the job will be rejected.
   * @return persistentResourceId
   */
  @javax.annotation.Nullable
  public String getPersistentResourceId() {
    return persistentResourceId;
  }

  public void setPersistentResourceId(String persistentResourceId) {
    this.persistentResourceId = persistentResourceId;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec protectedArtifactLocationId(String protectedArtifactLocationId) {
    this.protectedArtifactLocationId = protectedArtifactLocationId;
    return this;
  }

  /**
   * The ID of the location to store protected artifacts. e.g. us-central1. Populate only when the location is different than CustomJob location. List of supported locations: https://cloud.google.com/vertex-ai/docs/general/locations
   * @return protectedArtifactLocationId
   */
  @javax.annotation.Nullable
  public String getProtectedArtifactLocationId() {
    return protectedArtifactLocationId;
  }

  public void setProtectedArtifactLocationId(String protectedArtifactLocationId) {
    this.protectedArtifactLocationId = protectedArtifactLocationId;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec reservedIpRanges(List<String> reservedIpRanges) {
    this.reservedIpRanges = reservedIpRanges;
    return this;
  }

  public GoogleCloudAiplatformV1beta1CustomJobSpec addReservedIpRangesItem(String reservedIpRangesItem) {
    if (this.reservedIpRanges == null) {
      this.reservedIpRanges = new ArrayList<>();
    }
    this.reservedIpRanges.add(reservedIpRangesItem);
    return this;
  }

  /**
   * Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: [&#39;vertex-ai-ip-range&#39;].
   * @return reservedIpRanges
   */
  @javax.annotation.Nullable
  public List<String> getReservedIpRanges() {
    return reservedIpRanges;
  }

  public void setReservedIpRanges(List<String> reservedIpRanges) {
    this.reservedIpRanges = reservedIpRanges;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec scheduling(GoogleCloudAiplatformV1beta1Scheduling scheduling) {
    this.scheduling = scheduling;
    return this;
  }

  /**
   * Get scheduling
   * @return scheduling
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1Scheduling getScheduling() {
    return scheduling;
  }

  public void setScheduling(GoogleCloudAiplatformV1beta1Scheduling scheduling) {
    this.scheduling = scheduling;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec serviceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob&#39;s project is used.
   * @return serviceAccount
   */
  @javax.annotation.Nullable
  public String getServiceAccount() {
    return serviceAccount;
  }

  public void setServiceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec tensorboard(String tensorboard) {
    this.tensorboard = tensorboard;
    return this;
  }

  /**
   * Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: &#x60;projects/{project}/locations/{location}/tensorboards/{tensorboard}&#x60;
   * @return tensorboard
   */
  @javax.annotation.Nullable
  public String getTensorboard() {
    return tensorboard;
  }

  public void setTensorboard(String tensorboard) {
    this.tensorboard = tensorboard;
  }


  public GoogleCloudAiplatformV1beta1CustomJobSpec workerPoolSpecs(List<GoogleCloudAiplatformV1beta1WorkerPoolSpec> workerPoolSpecs) {
    this.workerPoolSpecs = workerPoolSpecs;
    return this;
  }

  public GoogleCloudAiplatformV1beta1CustomJobSpec addWorkerPoolSpecsItem(GoogleCloudAiplatformV1beta1WorkerPoolSpec workerPoolSpecsItem) {
    if (this.workerPoolSpecs == null) {
      this.workerPoolSpecs = new ArrayList<>();
    }
    this.workerPoolSpecs.add(workerPoolSpecsItem);
    return this;
  }

  /**
   * Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.
   * @return workerPoolSpecs
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1WorkerPoolSpec> getWorkerPoolSpecs() {
    return workerPoolSpecs;
  }

  public void setWorkerPoolSpecs(List<GoogleCloudAiplatformV1beta1WorkerPoolSpec> workerPoolSpecs) {
    this.workerPoolSpecs = workerPoolSpecs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1CustomJobSpec googleCloudAiplatformV1beta1CustomJobSpec = (GoogleCloudAiplatformV1beta1CustomJobSpec) o;
    return Objects.equals(this.baseOutputDirectory, googleCloudAiplatformV1beta1CustomJobSpec.baseOutputDirectory) &&
        Objects.equals(this.enableDashboardAccess, googleCloudAiplatformV1beta1CustomJobSpec.enableDashboardAccess) &&
        Objects.equals(this.enableWebAccess, googleCloudAiplatformV1beta1CustomJobSpec.enableWebAccess) &&
        Objects.equals(this.experiment, googleCloudAiplatformV1beta1CustomJobSpec.experiment) &&
        Objects.equals(this.experimentRun, googleCloudAiplatformV1beta1CustomJobSpec.experimentRun) &&
        Objects.equals(this.models, googleCloudAiplatformV1beta1CustomJobSpec.models) &&
        Objects.equals(this.network, googleCloudAiplatformV1beta1CustomJobSpec.network) &&
        Objects.equals(this.persistentResourceId, googleCloudAiplatformV1beta1CustomJobSpec.persistentResourceId) &&
        Objects.equals(this.protectedArtifactLocationId, googleCloudAiplatformV1beta1CustomJobSpec.protectedArtifactLocationId) &&
        Objects.equals(this.reservedIpRanges, googleCloudAiplatformV1beta1CustomJobSpec.reservedIpRanges) &&
        Objects.equals(this.scheduling, googleCloudAiplatformV1beta1CustomJobSpec.scheduling) &&
        Objects.equals(this.serviceAccount, googleCloudAiplatformV1beta1CustomJobSpec.serviceAccount) &&
        Objects.equals(this.tensorboard, googleCloudAiplatformV1beta1CustomJobSpec.tensorboard) &&
        Objects.equals(this.workerPoolSpecs, googleCloudAiplatformV1beta1CustomJobSpec.workerPoolSpecs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseOutputDirectory, enableDashboardAccess, enableWebAccess, experiment, experimentRun, models, network, persistentResourceId, protectedArtifactLocationId, reservedIpRanges, scheduling, serviceAccount, tensorboard, workerPoolSpecs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1CustomJobSpec {\n");
    sb.append("    baseOutputDirectory: ").append(toIndentedString(baseOutputDirectory)).append("\n");
    sb.append("    enableDashboardAccess: ").append(toIndentedString(enableDashboardAccess)).append("\n");
    sb.append("    enableWebAccess: ").append(toIndentedString(enableWebAccess)).append("\n");
    sb.append("    experiment: ").append(toIndentedString(experiment)).append("\n");
    sb.append("    experimentRun: ").append(toIndentedString(experimentRun)).append("\n");
    sb.append("    models: ").append(toIndentedString(models)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    persistentResourceId: ").append(toIndentedString(persistentResourceId)).append("\n");
    sb.append("    protectedArtifactLocationId: ").append(toIndentedString(protectedArtifactLocationId)).append("\n");
    sb.append("    reservedIpRanges: ").append(toIndentedString(reservedIpRanges)).append("\n");
    sb.append("    scheduling: ").append(toIndentedString(scheduling)).append("\n");
    sb.append("    serviceAccount: ").append(toIndentedString(serviceAccount)).append("\n");
    sb.append("    tensorboard: ").append(toIndentedString(tensorboard)).append("\n");
    sb.append("    workerPoolSpecs: ").append(toIndentedString(workerPoolSpecs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("baseOutputDirectory");
    openapiFields.add("enableDashboardAccess");
    openapiFields.add("enableWebAccess");
    openapiFields.add("experiment");
    openapiFields.add("experimentRun");
    openapiFields.add("models");
    openapiFields.add("network");
    openapiFields.add("persistentResourceId");
    openapiFields.add("protectedArtifactLocationId");
    openapiFields.add("reservedIpRanges");
    openapiFields.add("scheduling");
    openapiFields.add("serviceAccount");
    openapiFields.add("tensorboard");
    openapiFields.add("workerPoolSpecs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1CustomJobSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1CustomJobSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1CustomJobSpec is not found in the empty JSON string", GoogleCloudAiplatformV1beta1CustomJobSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1CustomJobSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1CustomJobSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `baseOutputDirectory`
      if (jsonObj.get("baseOutputDirectory") != null && !jsonObj.get("baseOutputDirectory").isJsonNull()) {
        GoogleCloudAiplatformV1beta1GcsDestination.validateJsonElement(jsonObj.get("baseOutputDirectory"));
      }
      if ((jsonObj.get("experiment") != null && !jsonObj.get("experiment").isJsonNull()) && !jsonObj.get("experiment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `experiment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("experiment").toString()));
      }
      if ((jsonObj.get("experimentRun") != null && !jsonObj.get("experimentRun").isJsonNull()) && !jsonObj.get("experimentRun").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `experimentRun` to be a primitive type in the JSON string but got `%s`", jsonObj.get("experimentRun").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("models") != null && !jsonObj.get("models").isJsonNull() && !jsonObj.get("models").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `models` to be an array in the JSON string but got `%s`", jsonObj.get("models").toString()));
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
      if ((jsonObj.get("persistentResourceId") != null && !jsonObj.get("persistentResourceId").isJsonNull()) && !jsonObj.get("persistentResourceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `persistentResourceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("persistentResourceId").toString()));
      }
      if ((jsonObj.get("protectedArtifactLocationId") != null && !jsonObj.get("protectedArtifactLocationId").isJsonNull()) && !jsonObj.get("protectedArtifactLocationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protectedArtifactLocationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protectedArtifactLocationId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("reservedIpRanges") != null && !jsonObj.get("reservedIpRanges").isJsonNull() && !jsonObj.get("reservedIpRanges").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `reservedIpRanges` to be an array in the JSON string but got `%s`", jsonObj.get("reservedIpRanges").toString()));
      }
      // validate the optional field `scheduling`
      if (jsonObj.get("scheduling") != null && !jsonObj.get("scheduling").isJsonNull()) {
        GoogleCloudAiplatformV1beta1Scheduling.validateJsonElement(jsonObj.get("scheduling"));
      }
      if ((jsonObj.get("serviceAccount") != null && !jsonObj.get("serviceAccount").isJsonNull()) && !jsonObj.get("serviceAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccount").toString()));
      }
      if ((jsonObj.get("tensorboard") != null && !jsonObj.get("tensorboard").isJsonNull()) && !jsonObj.get("tensorboard").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tensorboard` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tensorboard").toString()));
      }
      if (jsonObj.get("workerPoolSpecs") != null && !jsonObj.get("workerPoolSpecs").isJsonNull()) {
        JsonArray jsonArrayworkerPoolSpecs = jsonObj.getAsJsonArray("workerPoolSpecs");
        if (jsonArrayworkerPoolSpecs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("workerPoolSpecs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `workerPoolSpecs` to be an array in the JSON string but got `%s`", jsonObj.get("workerPoolSpecs").toString()));
          }

          // validate the optional field `workerPoolSpecs` (array)
          for (int i = 0; i < jsonArrayworkerPoolSpecs.size(); i++) {
            GoogleCloudAiplatformV1beta1WorkerPoolSpec.validateJsonElement(jsonArrayworkerPoolSpecs.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1CustomJobSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1CustomJobSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1CustomJobSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1CustomJobSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1CustomJobSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1CustomJobSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1CustomJobSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1CustomJobSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1CustomJobSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1CustomJobSpec
   */
  public static GoogleCloudAiplatformV1beta1CustomJobSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1CustomJobSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1CustomJobSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

