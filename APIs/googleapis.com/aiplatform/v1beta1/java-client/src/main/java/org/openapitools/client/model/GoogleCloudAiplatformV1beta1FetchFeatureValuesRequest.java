/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureViewDataKey;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for FeatureOnlineStoreService.FetchFeatureValues. All the features under the requested feature view will be returned.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest {
  /**
   * Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE will be used.
   */
  @JsonAdapter(DataFormatEnum.Adapter.class)
  public enum DataFormatEnum {
    FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED("FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED"),
    
    KEY_VALUE("KEY_VALUE"),
    
    PROTO_STRUCT("PROTO_STRUCT");

    private String value;

    DataFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DataFormatEnum fromValue(String value) {
      for (DataFormatEnum b : DataFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DataFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DataFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DataFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DataFormatEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DataFormatEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DATA_FORMAT = "dataFormat";
  @SerializedName(SERIALIZED_NAME_DATA_FORMAT)
  private DataFormatEnum dataFormat;

  public static final String SERIALIZED_NAME_DATA_KEY = "dataKey";
  @SerializedName(SERIALIZED_NAME_DATA_KEY)
  private GoogleCloudAiplatformV1beta1FeatureViewDataKey dataKey;

  /**
   * Specify response data format. If not set, KeyValue format will be used. Deprecated. Use FetchFeatureValuesRequest.data_format.
   */
  @JsonAdapter(FormatEnum.Adapter.class)
  public enum FormatEnum {
    FORMAT_UNSPECIFIED("FORMAT_UNSPECIFIED"),
    
    KEY_VALUE("KEY_VALUE"),
    
    PROTO_STRUCT("PROTO_STRUCT");

    private String value;

    FormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FormatEnum fromValue(String value) {
      for (FormatEnum b : FormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<FormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FormatEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      FormatEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private FormatEnum format;

  public static final String SERIALIZED_NAME_ID = "id";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest() {
  }

  public GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest dataFormat(DataFormatEnum dataFormat) {
    this.dataFormat = dataFormat;
    return this;
  }

  /**
   * Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE will be used.
   * @return dataFormat
   */
  @javax.annotation.Nullable
  public DataFormatEnum getDataFormat() {
    return dataFormat;
  }

  public void setDataFormat(DataFormatEnum dataFormat) {
    this.dataFormat = dataFormat;
  }


  public GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest dataKey(GoogleCloudAiplatformV1beta1FeatureViewDataKey dataKey) {
    this.dataKey = dataKey;
    return this;
  }

  /**
   * Get dataKey
   * @return dataKey
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1FeatureViewDataKey getDataKey() {
    return dataKey;
  }

  public void setDataKey(GoogleCloudAiplatformV1beta1FeatureViewDataKey dataKey) {
    this.dataKey = dataKey;
  }


  @Deprecated
  public GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest format(FormatEnum format) {
    this.format = format;
    return this;
  }

  /**
   * Specify response data format. If not set, KeyValue format will be used. Deprecated. Use FetchFeatureValuesRequest.data_format.
   * @return format
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public FormatEnum getFormat() {
    return format;
  }

  @Deprecated
  public void setFormat(FormatEnum format) {
    this.format = format;
  }


  @Deprecated
  public GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Simple ID. The whole string will be used as is to identify Entity to fetch feature values for.
   * @return id
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  @Deprecated
  public void setId(String id) {
    this.id = id;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest googleCloudAiplatformV1beta1FetchFeatureValuesRequest = (GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest) o;
    return Objects.equals(this.dataFormat, googleCloudAiplatformV1beta1FetchFeatureValuesRequest.dataFormat) &&
        Objects.equals(this.dataKey, googleCloudAiplatformV1beta1FetchFeatureValuesRequest.dataKey) &&
        Objects.equals(this.format, googleCloudAiplatformV1beta1FetchFeatureValuesRequest.format) &&
        Objects.equals(this.id, googleCloudAiplatformV1beta1FetchFeatureValuesRequest.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataFormat, dataKey, format, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest {\n");
    sb.append("    dataFormat: ").append(toIndentedString(dataFormat)).append("\n");
    sb.append("    dataKey: ").append(toIndentedString(dataKey)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataFormat");
    openapiFields.add("dataKey");
    openapiFields.add("format");
    openapiFields.add("id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest is not found in the empty JSON string", GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("dataFormat") != null && !jsonObj.get("dataFormat").isJsonNull()) && !jsonObj.get("dataFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataFormat").toString()));
      }
      // validate the optional field `dataFormat`
      if (jsonObj.get("dataFormat") != null && !jsonObj.get("dataFormat").isJsonNull()) {
        DataFormatEnum.validateJsonElement(jsonObj.get("dataFormat"));
      }
      // validate the optional field `dataKey`
      if (jsonObj.get("dataKey") != null && !jsonObj.get("dataKey").isJsonNull()) {
        GoogleCloudAiplatformV1beta1FeatureViewDataKey.validateJsonElement(jsonObj.get("dataKey"));
      }
      if ((jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) && !jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      // validate the optional field `format`
      if (jsonObj.get("format") != null && !jsonObj.get("format").isJsonNull()) {
        FormatEnum.validateJsonElement(jsonObj.get("format"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest
   */
  public static GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

