/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Attribution;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Neighbor;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Explanation of a prediction (provided in PredictResponse.predictions) produced by the Model on a given instance.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1Explanation {
  public static final String SERIALIZED_NAME_ATTRIBUTIONS = "attributions";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTIONS)
  private List<GoogleCloudAiplatformV1beta1Attribution> attributions = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEIGHBORS = "neighbors";
  @SerializedName(SERIALIZED_NAME_NEIGHBORS)
  private List<GoogleCloudAiplatformV1beta1Neighbor> neighbors = new ArrayList<>();

  public GoogleCloudAiplatformV1beta1Explanation() {
  }

  public GoogleCloudAiplatformV1beta1Explanation(
     List<GoogleCloudAiplatformV1beta1Attribution> attributions, 
     List<GoogleCloudAiplatformV1beta1Neighbor> neighbors
  ) {
    this();
    this.attributions = attributions;
    this.neighbors = neighbors;
  }

  /**
   * Output only. Feature attributions grouped by predicted outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. By default, we provide Shapley values for the predicted class. However, you can configure the explanation request to generate Shapley values for any other classes too. For example, if a model predicts a probability of &#x60;0.4&#x60; for approving a loan application, the model&#39;s decision is to reject the application since &#x60;p(reject) &#x3D; 0.6 &gt; p(approve) &#x3D; 0.4&#x60;, and the default Shapley values would be computed for rejection decision and not approval, even though the latter might be the positive class. If users set ExplanationParameters.top_k, the attributions are sorted by instance_output_value in descending order. If ExplanationParameters.output_indices is specified, the attributions are stored by Attribution.output_index in the same order as they appear in the output_indices.
   * @return attributions
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1Attribution> getAttributions() {
    return attributions;
  }



  /**
   * Output only. List of the nearest neighbors for example-based explanations. For models deployed with the examples explanations feature enabled, the attributions field is empty and instead the neighbors field is populated.
   * @return neighbors
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1Neighbor> getNeighbors() {
    return neighbors;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1Explanation googleCloudAiplatformV1beta1Explanation = (GoogleCloudAiplatformV1beta1Explanation) o;
    return Objects.equals(this.attributions, googleCloudAiplatformV1beta1Explanation.attributions) &&
        Objects.equals(this.neighbors, googleCloudAiplatformV1beta1Explanation.neighbors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributions, neighbors);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1Explanation {\n");
    sb.append("    attributions: ").append(toIndentedString(attributions)).append("\n");
    sb.append("    neighbors: ").append(toIndentedString(neighbors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributions");
    openapiFields.add("neighbors");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1Explanation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1Explanation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1Explanation is not found in the empty JSON string", GoogleCloudAiplatformV1beta1Explanation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1Explanation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1Explanation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("attributions") != null && !jsonObj.get("attributions").isJsonNull()) {
        JsonArray jsonArrayattributions = jsonObj.getAsJsonArray("attributions");
        if (jsonArrayattributions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributions` to be an array in the JSON string but got `%s`", jsonObj.get("attributions").toString()));
          }

          // validate the optional field `attributions` (array)
          for (int i = 0; i < jsonArrayattributions.size(); i++) {
            GoogleCloudAiplatformV1beta1Attribution.validateJsonElement(jsonArrayattributions.get(i));
          };
        }
      }
      if (jsonObj.get("neighbors") != null && !jsonObj.get("neighbors").isJsonNull()) {
        JsonArray jsonArrayneighbors = jsonObj.getAsJsonArray("neighbors");
        if (jsonArrayneighbors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("neighbors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `neighbors` to be an array in the JSON string but got `%s`", jsonObj.get("neighbors").toString()));
          }

          // validate the optional field `neighbors` (array)
          for (int i = 0; i < jsonArrayneighbors.size(); i++) {
            GoogleCloudAiplatformV1beta1Neighbor.validateJsonElement(jsonArrayneighbors.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1Explanation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1Explanation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1Explanation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1Explanation.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1Explanation>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1Explanation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1Explanation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1Explanation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1Explanation
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1Explanation
   */
  public static GoogleCloudAiplatformV1beta1Explanation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1Explanation.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1Explanation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

