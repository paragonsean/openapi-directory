/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BigQuerySource;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1GcsSource;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SamplingStrategy;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Training Dataset information.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset {
  public static final String SERIALIZED_NAME_BIGQUERY_SOURCE = "bigquerySource";
  @SerializedName(SERIALIZED_NAME_BIGQUERY_SOURCE)
  private GoogleCloudAiplatformV1beta1BigQuerySource bigquerySource;

  public static final String SERIALIZED_NAME_DATA_FORMAT = "dataFormat";
  @SerializedName(SERIALIZED_NAME_DATA_FORMAT)
  private String dataFormat;

  public static final String SERIALIZED_NAME_DATASET = "dataset";
  @SerializedName(SERIALIZED_NAME_DATASET)
  private String dataset;

  public static final String SERIALIZED_NAME_GCS_SOURCE = "gcsSource";
  @SerializedName(SERIALIZED_NAME_GCS_SOURCE)
  private GoogleCloudAiplatformV1beta1GcsSource gcsSource;

  public static final String SERIALIZED_NAME_LOGGING_SAMPLING_STRATEGY = "loggingSamplingStrategy";
  @SerializedName(SERIALIZED_NAME_LOGGING_SAMPLING_STRATEGY)
  private GoogleCloudAiplatformV1beta1SamplingStrategy loggingSamplingStrategy;

  public static final String SERIALIZED_NAME_TARGET_FIELD = "targetField";
  @SerializedName(SERIALIZED_NAME_TARGET_FIELD)
  private String targetField;

  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset() {
  }

  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset bigquerySource(GoogleCloudAiplatformV1beta1BigQuerySource bigquerySource) {
    this.bigquerySource = bigquerySource;
    return this;
  }

  /**
   * Get bigquerySource
   * @return bigquerySource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1BigQuerySource getBigquerySource() {
    return bigquerySource;
  }

  public void setBigquerySource(GoogleCloudAiplatformV1beta1BigQuerySource bigquerySource) {
    this.bigquerySource = bigquerySource;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset dataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
    return this;
  }

  /**
   * Data format of the dataset, only applicable if the input is from Google Cloud Storage. The possible formats are: \&quot;tf-record\&quot; The source file is a TFRecord file. \&quot;csv\&quot; The source file is a CSV file. \&quot;jsonl\&quot; The source file is a JSONL file.
   * @return dataFormat
   */
  @javax.annotation.Nullable
  public String getDataFormat() {
    return dataFormat;
  }

  public void setDataFormat(String dataFormat) {
    this.dataFormat = dataFormat;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset dataset(String dataset) {
    this.dataset = dataset;
    return this;
  }

  /**
   * The resource name of the Dataset used to train this Model.
   * @return dataset
   */
  @javax.annotation.Nullable
  public String getDataset() {
    return dataset;
  }

  public void setDataset(String dataset) {
    this.dataset = dataset;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset gcsSource(GoogleCloudAiplatformV1beta1GcsSource gcsSource) {
    this.gcsSource = gcsSource;
    return this;
  }

  /**
   * Get gcsSource
   * @return gcsSource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1GcsSource getGcsSource() {
    return gcsSource;
  }

  public void setGcsSource(GoogleCloudAiplatformV1beta1GcsSource gcsSource) {
    this.gcsSource = gcsSource;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset loggingSamplingStrategy(GoogleCloudAiplatformV1beta1SamplingStrategy loggingSamplingStrategy) {
    this.loggingSamplingStrategy = loggingSamplingStrategy;
    return this;
  }

  /**
   * Get loggingSamplingStrategy
   * @return loggingSamplingStrategy
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1SamplingStrategy getLoggingSamplingStrategy() {
    return loggingSamplingStrategy;
  }

  public void setLoggingSamplingStrategy(GoogleCloudAiplatformV1beta1SamplingStrategy loggingSamplingStrategy) {
    this.loggingSamplingStrategy = loggingSamplingStrategy;
  }


  public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset targetField(String targetField) {
    this.targetField = targetField;
    return this;
  }

  /**
   * The target field name the model is to predict. This field will be excluded when doing Predict and (or) Explain for the training data.
   * @return targetField
   */
  @javax.annotation.Nullable
  public String getTargetField() {
    return targetField;
  }

  public void setTargetField(String targetField) {
    this.targetField = targetField;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset = (GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset) o;
    return Objects.equals(this.bigquerySource, googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.bigquerySource) &&
        Objects.equals(this.dataFormat, googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.dataFormat) &&
        Objects.equals(this.dataset, googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.dataset) &&
        Objects.equals(this.gcsSource, googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.gcsSource) &&
        Objects.equals(this.loggingSamplingStrategy, googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.loggingSamplingStrategy) &&
        Objects.equals(this.targetField, googleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.targetField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigquerySource, dataFormat, dataset, gcsSource, loggingSamplingStrategy, targetField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset {\n");
    sb.append("    bigquerySource: ").append(toIndentedString(bigquerySource)).append("\n");
    sb.append("    dataFormat: ").append(toIndentedString(dataFormat)).append("\n");
    sb.append("    dataset: ").append(toIndentedString(dataset)).append("\n");
    sb.append("    gcsSource: ").append(toIndentedString(gcsSource)).append("\n");
    sb.append("    loggingSamplingStrategy: ").append(toIndentedString(loggingSamplingStrategy)).append("\n");
    sb.append("    targetField: ").append(toIndentedString(targetField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigquerySource");
    openapiFields.add("dataFormat");
    openapiFields.add("dataset");
    openapiFields.add("gcsSource");
    openapiFields.add("loggingSamplingStrategy");
    openapiFields.add("targetField");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset is not found in the empty JSON string", GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigquerySource`
      if (jsonObj.get("bigquerySource") != null && !jsonObj.get("bigquerySource").isJsonNull()) {
        GoogleCloudAiplatformV1beta1BigQuerySource.validateJsonElement(jsonObj.get("bigquerySource"));
      }
      if ((jsonObj.get("dataFormat") != null && !jsonObj.get("dataFormat").isJsonNull()) && !jsonObj.get("dataFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataFormat").toString()));
      }
      if ((jsonObj.get("dataset") != null && !jsonObj.get("dataset").isJsonNull()) && !jsonObj.get("dataset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dataset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dataset").toString()));
      }
      // validate the optional field `gcsSource`
      if (jsonObj.get("gcsSource") != null && !jsonObj.get("gcsSource").isJsonNull()) {
        GoogleCloudAiplatformV1beta1GcsSource.validateJsonElement(jsonObj.get("gcsSource"));
      }
      // validate the optional field `loggingSamplingStrategy`
      if (jsonObj.get("loggingSamplingStrategy") != null && !jsonObj.get("loggingSamplingStrategy").isJsonNull()) {
        GoogleCloudAiplatformV1beta1SamplingStrategy.validateJsonElement(jsonObj.get("loggingSamplingStrategy"));
      }
      if ((jsonObj.get("targetField") != null && !jsonObj.get("targetField").isJsonNull()) && !jsonObj.get("targetField").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetField` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetField").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset
   */
  public static GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1ModelMonitoringObjectiveConfigTrainingDataset to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

