/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata describing the Model&#39;s input and output for explanation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1ExplanationMetadata {
  public static final String SERIALIZED_NAME_FEATURE_ATTRIBUTIONS_SCHEMA_URI = "featureAttributionsSchemaUri";
  @SerializedName(SERIALIZED_NAME_FEATURE_ATTRIBUTIONS_SCHEMA_URI)
  private String featureAttributionsSchemaUri;

  public static final String SERIALIZED_NAME_INPUTS = "inputs";
  @SerializedName(SERIALIZED_NAME_INPUTS)
  private Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata> inputs = new HashMap<>();

  public static final String SERIALIZED_NAME_LATENT_SPACE_SOURCE = "latentSpaceSource";
  @SerializedName(SERIALIZED_NAME_LATENT_SPACE_SOURCE)
  private String latentSpaceSource;

  public static final String SERIALIZED_NAME_OUTPUTS = "outputs";
  @SerializedName(SERIALIZED_NAME_OUTPUTS)
  private Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata> outputs = new HashMap<>();

  public GoogleCloudAiplatformV1beta1ExplanationMetadata() {
  }

  public GoogleCloudAiplatformV1beta1ExplanationMetadata featureAttributionsSchemaUri(String featureAttributionsSchemaUri) {
    this.featureAttributionsSchemaUri = featureAttributionsSchemaUri;
    return this;
  }

  /**
   * Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
   * @return featureAttributionsSchemaUri
   */
  @javax.annotation.Nullable
  public String getFeatureAttributionsSchemaUri() {
    return featureAttributionsSchemaUri;
  }

  public void setFeatureAttributionsSchemaUri(String featureAttributionsSchemaUri) {
    this.featureAttributionsSchemaUri = featureAttributionsSchemaUri;
  }


  public GoogleCloudAiplatformV1beta1ExplanationMetadata inputs(Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata> inputs) {
    this.inputs = inputs;
    return this;
  }

  public GoogleCloudAiplatformV1beta1ExplanationMetadata putInputsItem(String key, GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata inputsItem) {
    if (this.inputs == null) {
      this.inputs = new HashMap<>();
    }
    this.inputs.put(key, inputsItem);
    return this;
  }

  /**
   * Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.
   * @return inputs
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata> getInputs() {
    return inputs;
  }

  public void setInputs(Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataInputMetadata> inputs) {
    this.inputs = inputs;
  }


  public GoogleCloudAiplatformV1beta1ExplanationMetadata latentSpaceSource(String latentSpaceSource) {
    this.latentSpaceSource = latentSpaceSource;
    return this;
  }

  /**
   * Name of the source to generate embeddings for example based explanations.
   * @return latentSpaceSource
   */
  @javax.annotation.Nullable
  public String getLatentSpaceSource() {
    return latentSpaceSource;
  }

  public void setLatentSpaceSource(String latentSpaceSource) {
    this.latentSpaceSource = latentSpaceSource;
  }


  public GoogleCloudAiplatformV1beta1ExplanationMetadata outputs(Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata> outputs) {
    this.outputs = outputs;
    return this;
  }

  public GoogleCloudAiplatformV1beta1ExplanationMetadata putOutputsItem(String key, GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata outputsItem) {
    if (this.outputs == null) {
      this.outputs = new HashMap<>();
    }
    this.outputs.put(key, outputsItem);
    return this;
  }

  /**
   * Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.
   * @return outputs
   */
  @javax.annotation.Nullable
  public Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata> getOutputs() {
    return outputs;
  }

  public void setOutputs(Map<String, GoogleCloudAiplatformV1beta1ExplanationMetadataOutputMetadata> outputs) {
    this.outputs = outputs;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1ExplanationMetadata googleCloudAiplatformV1beta1ExplanationMetadata = (GoogleCloudAiplatformV1beta1ExplanationMetadata) o;
    return Objects.equals(this.featureAttributionsSchemaUri, googleCloudAiplatformV1beta1ExplanationMetadata.featureAttributionsSchemaUri) &&
        Objects.equals(this.inputs, googleCloudAiplatformV1beta1ExplanationMetadata.inputs) &&
        Objects.equals(this.latentSpaceSource, googleCloudAiplatformV1beta1ExplanationMetadata.latentSpaceSource) &&
        Objects.equals(this.outputs, googleCloudAiplatformV1beta1ExplanationMetadata.outputs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(featureAttributionsSchemaUri, inputs, latentSpaceSource, outputs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1ExplanationMetadata {\n");
    sb.append("    featureAttributionsSchemaUri: ").append(toIndentedString(featureAttributionsSchemaUri)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    latentSpaceSource: ").append(toIndentedString(latentSpaceSource)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("featureAttributionsSchemaUri");
    openapiFields.add("inputs");
    openapiFields.add("latentSpaceSource");
    openapiFields.add("outputs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1ExplanationMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1ExplanationMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1ExplanationMetadata is not found in the empty JSON string", GoogleCloudAiplatformV1beta1ExplanationMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1ExplanationMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1ExplanationMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("featureAttributionsSchemaUri") != null && !jsonObj.get("featureAttributionsSchemaUri").isJsonNull()) && !jsonObj.get("featureAttributionsSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `featureAttributionsSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("featureAttributionsSchemaUri").toString()));
      }
      if ((jsonObj.get("latentSpaceSource") != null && !jsonObj.get("latentSpaceSource").isJsonNull()) && !jsonObj.get("latentSpaceSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latentSpaceSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latentSpaceSource").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1ExplanationMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1ExplanationMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1ExplanationMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1ExplanationMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1ExplanationMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1ExplanationMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1ExplanationMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1ExplanationMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1ExplanationMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1ExplanationMetadata
   */
  public static GoogleCloudAiplatformV1beta1ExplanationMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1ExplanationMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1ExplanationMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

