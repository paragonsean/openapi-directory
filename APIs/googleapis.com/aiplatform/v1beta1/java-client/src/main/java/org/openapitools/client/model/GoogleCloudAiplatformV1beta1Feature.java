/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureStatsAnomaly;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Feature Metadata information. For example, color is a feature that describes an apple.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:30.041358-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1beta1Feature {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISABLE_MONITORING = "disableMonitoring";
  @SerializedName(SERIALIZED_NAME_DISABLE_MONITORING)
  private Boolean disableMonitoring;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_MONITORING_CONFIG = "monitoringConfig";
  @SerializedName(SERIALIZED_NAME_MONITORING_CONFIG)
  private GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig monitoringConfig;

  public static final String SERIALIZED_NAME_MONITORING_STATS = "monitoringStats";
  @SerializedName(SERIALIZED_NAME_MONITORING_STATS)
  private List<GoogleCloudAiplatformV1beta1FeatureStatsAnomaly> monitoringStats = new ArrayList<>();

  public static final String SERIALIZED_NAME_MONITORING_STATS_ANOMALIES = "monitoringStatsAnomalies";
  @SerializedName(SERIALIZED_NAME_MONITORING_STATS_ANOMALIES)
  private List<GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly> monitoringStatsAnomalies = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POINT_OF_CONTACT = "pointOfContact";
  @SerializedName(SERIALIZED_NAME_POINT_OF_CONTACT)
  private String pointOfContact;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  /**
   * Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.
   */
  @JsonAdapter(ValueTypeEnum.Adapter.class)
  public enum ValueTypeEnum {
    VALUE_TYPE_UNSPECIFIED("VALUE_TYPE_UNSPECIFIED"),
    
    BOOL("BOOL"),
    
    BOOL_ARRAY("BOOL_ARRAY"),
    
    DOUBLE("DOUBLE"),
    
    DOUBLE_ARRAY("DOUBLE_ARRAY"),
    
    INT64("INT64"),
    
    INT64_ARRAY("INT64_ARRAY"),
    
    STRING("STRING"),
    
    STRING_ARRAY("STRING_ARRAY"),
    
    BYTES("BYTES");

    private String value;

    ValueTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValueTypeEnum fromValue(String value) {
      for (ValueTypeEnum b : ValueTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ValueTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValueTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValueTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ValueTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ValueTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VALUE_TYPE = "valueType";
  @SerializedName(SERIALIZED_NAME_VALUE_TYPE)
  private ValueTypeEnum valueType;

  public static final String SERIALIZED_NAME_VERSION_COLUMN_NAME = "versionColumnName";
  @SerializedName(SERIALIZED_NAME_VERSION_COLUMN_NAME)
  private String versionColumnName;

  public GoogleCloudAiplatformV1beta1Feature() {
  }

  public GoogleCloudAiplatformV1beta1Feature(
     String createTime, 
     List<GoogleCloudAiplatformV1beta1FeatureStatsAnomaly> monitoringStats, 
     List<GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly> monitoringStatsAnomalies, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.monitoringStats = monitoringStats;
    this.monitoringStatsAnomalies = monitoringStatsAnomalies;
    this.updateTime = updateTime;
  }

  /**
   * Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1beta1Feature description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the Feature.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudAiplatformV1beta1Feature disableMonitoring(Boolean disableMonitoring) {
    this.disableMonitoring = disableMonitoring;
    return this;
  }

  /**
   * Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.
   * @return disableMonitoring
   */
  @javax.annotation.Nullable
  public Boolean getDisableMonitoring() {
    return disableMonitoring;
  }

  public void setDisableMonitoring(Boolean disableMonitoring) {
    this.disableMonitoring = disableMonitoring;
  }


  public GoogleCloudAiplatformV1beta1Feature etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Used to perform a consistent read-modify-write updates. If not set, a blind \&quot;overwrite\&quot; update happens.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudAiplatformV1beta1Feature labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudAiplatformV1beta1Feature putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded).\&quot; System reserved label keys are prefixed with \&quot;aiplatform.googleapis.com/\&quot; and are immutable.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudAiplatformV1beta1Feature monitoringConfig(GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig monitoringConfig) {
    this.monitoringConfig = monitoringConfig;
    return this;
  }

  /**
   * Get monitoringConfig
   * @return monitoringConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig getMonitoringConfig() {
    return monitoringConfig;
  }

  public void setMonitoringConfig(GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig monitoringConfig) {
    this.monitoringConfig = monitoringConfig;
  }


  /**
   * Output only. Only applicable for Vertex AI Feature Store (Legacy). A list of historical SnapshotAnalysis stats requested by user, sorted by FeatureStatsAnomaly.start_time descending.
   * @return monitoringStats
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1FeatureStatsAnomaly> getMonitoringStats() {
    return monitoringStats;
  }



  /**
   * Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.
   * @return monitoringStatsAnomalies
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly> getMonitoringStatsAnomalies() {
    return monitoringStatsAnomalies;
  }



  public GoogleCloudAiplatformV1beta1Feature name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Immutable. Name of the Feature. Format: &#x60;projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}&#x60; &#x60;projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}&#x60; The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudAiplatformV1beta1Feature pointOfContact(String pointOfContact) {
    this.pointOfContact = pointOfContact;
    return this;
  }

  /**
   * Entity responsible for maintaining this feature. Can be comma separated list of email addresses or URIs.
   * @return pointOfContact
   */
  @javax.annotation.Nullable
  public String getPointOfContact() {
    return pointOfContact;
  }

  public void setPointOfContact(String pointOfContact) {
    this.pointOfContact = pointOfContact;
  }


  /**
   * Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  public GoogleCloudAiplatformV1beta1Feature valueType(ValueTypeEnum valueType) {
    this.valueType = valueType;
    return this;
  }

  /**
   * Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.
   * @return valueType
   */
  @javax.annotation.Nullable
  public ValueTypeEnum getValueType() {
    return valueType;
  }

  public void setValueType(ValueTypeEnum valueType) {
    this.valueType = valueType;
  }


  public GoogleCloudAiplatformV1beta1Feature versionColumnName(String versionColumnName) {
    this.versionColumnName = versionColumnName;
    return this;
  }

  /**
   * Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.
   * @return versionColumnName
   */
  @javax.annotation.Nullable
  public String getVersionColumnName() {
    return versionColumnName;
  }

  public void setVersionColumnName(String versionColumnName) {
    this.versionColumnName = versionColumnName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1beta1Feature googleCloudAiplatformV1beta1Feature = (GoogleCloudAiplatformV1beta1Feature) o;
    return Objects.equals(this.createTime, googleCloudAiplatformV1beta1Feature.createTime) &&
        Objects.equals(this.description, googleCloudAiplatformV1beta1Feature.description) &&
        Objects.equals(this.disableMonitoring, googleCloudAiplatformV1beta1Feature.disableMonitoring) &&
        Objects.equals(this.etag, googleCloudAiplatformV1beta1Feature.etag) &&
        Objects.equals(this.labels, googleCloudAiplatformV1beta1Feature.labels) &&
        Objects.equals(this.monitoringConfig, googleCloudAiplatformV1beta1Feature.monitoringConfig) &&
        Objects.equals(this.monitoringStats, googleCloudAiplatformV1beta1Feature.monitoringStats) &&
        Objects.equals(this.monitoringStatsAnomalies, googleCloudAiplatformV1beta1Feature.monitoringStatsAnomalies) &&
        Objects.equals(this.name, googleCloudAiplatformV1beta1Feature.name) &&
        Objects.equals(this.pointOfContact, googleCloudAiplatformV1beta1Feature.pointOfContact) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1beta1Feature.updateTime) &&
        Objects.equals(this.valueType, googleCloudAiplatformV1beta1Feature.valueType) &&
        Objects.equals(this.versionColumnName, googleCloudAiplatformV1beta1Feature.versionColumnName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, description, disableMonitoring, etag, labels, monitoringConfig, monitoringStats, monitoringStatsAnomalies, name, pointOfContact, updateTime, valueType, versionColumnName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1beta1Feature {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    disableMonitoring: ").append(toIndentedString(disableMonitoring)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    monitoringConfig: ").append(toIndentedString(monitoringConfig)).append("\n");
    sb.append("    monitoringStats: ").append(toIndentedString(monitoringStats)).append("\n");
    sb.append("    monitoringStatsAnomalies: ").append(toIndentedString(monitoringStatsAnomalies)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pointOfContact: ").append(toIndentedString(pointOfContact)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    valueType: ").append(toIndentedString(valueType)).append("\n");
    sb.append("    versionColumnName: ").append(toIndentedString(versionColumnName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("description");
    openapiFields.add("disableMonitoring");
    openapiFields.add("etag");
    openapiFields.add("labels");
    openapiFields.add("monitoringConfig");
    openapiFields.add("monitoringStats");
    openapiFields.add("monitoringStatsAnomalies");
    openapiFields.add("name");
    openapiFields.add("pointOfContact");
    openapiFields.add("updateTime");
    openapiFields.add("valueType");
    openapiFields.add("versionColumnName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1beta1Feature
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1beta1Feature.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1beta1Feature is not found in the empty JSON string", GoogleCloudAiplatformV1beta1Feature.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1beta1Feature.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1beta1Feature` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      // validate the optional field `monitoringConfig`
      if (jsonObj.get("monitoringConfig") != null && !jsonObj.get("monitoringConfig").isJsonNull()) {
        GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig.validateJsonElement(jsonObj.get("monitoringConfig"));
      }
      if (jsonObj.get("monitoringStats") != null && !jsonObj.get("monitoringStats").isJsonNull()) {
        JsonArray jsonArraymonitoringStats = jsonObj.getAsJsonArray("monitoringStats");
        if (jsonArraymonitoringStats != null) {
          // ensure the json data is an array
          if (!jsonObj.get("monitoringStats").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `monitoringStats` to be an array in the JSON string but got `%s`", jsonObj.get("monitoringStats").toString()));
          }

          // validate the optional field `monitoringStats` (array)
          for (int i = 0; i < jsonArraymonitoringStats.size(); i++) {
            GoogleCloudAiplatformV1beta1FeatureStatsAnomaly.validateJsonElement(jsonArraymonitoringStats.get(i));
          };
        }
      }
      if (jsonObj.get("monitoringStatsAnomalies") != null && !jsonObj.get("monitoringStatsAnomalies").isJsonNull()) {
        JsonArray jsonArraymonitoringStatsAnomalies = jsonObj.getAsJsonArray("monitoringStatsAnomalies");
        if (jsonArraymonitoringStatsAnomalies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("monitoringStatsAnomalies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `monitoringStatsAnomalies` to be an array in the JSON string but got `%s`", jsonObj.get("monitoringStatsAnomalies").toString()));
          }

          // validate the optional field `monitoringStatsAnomalies` (array)
          for (int i = 0; i < jsonArraymonitoringStatsAnomalies.size(); i++) {
            GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly.validateJsonElement(jsonArraymonitoringStatsAnomalies.get(i));
          };
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("pointOfContact") != null && !jsonObj.get("pointOfContact").isJsonNull()) && !jsonObj.get("pointOfContact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pointOfContact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pointOfContact").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      if ((jsonObj.get("valueType") != null && !jsonObj.get("valueType").isJsonNull()) && !jsonObj.get("valueType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `valueType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("valueType").toString()));
      }
      // validate the optional field `valueType`
      if (jsonObj.get("valueType") != null && !jsonObj.get("valueType").isJsonNull()) {
        ValueTypeEnum.validateJsonElement(jsonObj.get("valueType"));
      }
      if ((jsonObj.get("versionColumnName") != null && !jsonObj.get("versionColumnName").isJsonNull()) && !jsonObj.get("versionColumnName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionColumnName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionColumnName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1beta1Feature.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1beta1Feature' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1beta1Feature> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1beta1Feature.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1beta1Feature>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1beta1Feature value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1beta1Feature read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1beta1Feature given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1beta1Feature
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1beta1Feature
   */
  public static GoogleCloudAiplatformV1beta1Feature fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1beta1Feature.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1beta1Feature to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

