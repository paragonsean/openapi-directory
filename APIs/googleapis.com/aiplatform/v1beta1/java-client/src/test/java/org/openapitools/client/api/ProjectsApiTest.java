/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleApiHttpBody;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1AddContextChildrenRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1AddExecutionEventsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1AddTrialMeasurementRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Artifact;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchPredictionJob;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1CompleteTrialRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ComputeTokensRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ComputeTokensResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Context;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1CopyModelRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1CountTokensRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1CountTokensResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1CustomJob;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DataLabelingJob;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Dataset;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DatasetVersion;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DeployIndexRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DeployModelRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DeployedIndex;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DirectPredictRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DirectPredictResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DirectRawPredictRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1DirectRawPredictResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Endpoint;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1EntityType;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Execution;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ExplainRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ExplainResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ExportFeatureValuesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ExportModelRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Feature;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureGroup;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureOnlineStore;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FeatureView;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Featurestore;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FindNeighborsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1FindNeighborsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1GenerateAccessTokenRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1GenerateContentRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1GenerateContentResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1HyperparameterTuningJob;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ImportDataRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ImportModelEvaluationRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Index;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1IndexEndpoint;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1LineageSubgraph;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListAnnotationsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListArtifactsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListContextsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListCustomJobsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListDataItemsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListDatasetsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListEndpointsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListEntityTypesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListExecutionsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListFeatureViewsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListFeaturesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListFeaturestoresResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListIndexesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListMetadataStoresResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListModelVersionsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListNasJobsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListPipelineJobsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListSavedQueriesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListSchedulesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListStudiesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListTensorboardsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ListTrialsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1LookupStudyRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1MergeVersionAliasesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1MetadataSchema;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1MetadataStore;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Model;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ModelEvaluation;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1MutateDeployedModelRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1NasJob;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PersistentResource;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PipelineJob;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PredictRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PredictResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PurgeArtifactsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PurgeContextsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1PurgeExecutionsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1RawPredictRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReadFeatureValuesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1RemoveContextChildrenRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1RemoveDatapointsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1ResumeScheduleRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Schedule;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SearchDataItemsResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SearchFeaturesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SpecialistPool;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1StreamingPredictRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1StreamingPredictResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Study;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SuggestTrialsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1SyncFeatureViewResponse;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Tensorboard;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1TensorboardExperiment;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1TensorboardRun;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1TensorboardTimeSeries;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1TrainingPipeline;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1Trial;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1UndeployIndexRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1UndeployModelRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1UploadModelRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1UpsertDatapointsRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest;
import org.openapitools.client.model.GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest;
import org.openapitools.client.model.GoogleCloudLocationListLocationsResponse;
import org.openapitools.client.model.GoogleIamV1GetIamPolicyRequest;
import org.openapitools.client.model.GoogleIamV1Policy;
import org.openapitools.client.model.GoogleIamV1SetIamPolicyRequest;
import org.openapitools.client.model.GoogleIamV1TestIamPermissionsRequest;
import org.openapitools.client.model.GoogleIamV1TestIamPermissionsResponse;
import org.openapitools.client.model.GoogleLongrunningListOperationsResponse;
import org.openapitools.client.model.GoogleLongrunningOperation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsBatchPredictionJobsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1BatchPredictionJob googleCloudAiplatformV1beta1BatchPredictionJob = null;
        GoogleCloudAiplatformV1beta1BatchPredictionJob response = api.aiplatformProjectsLocationsBatchPredictionJobsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1BatchPredictionJob);
        // TODO: test validations
    }

    /**
     * Lists BatchPredictionJobs in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsBatchPredictionJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse response = api.aiplatformProjectsLocationsBatchPredictionJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Creates a CustomJob. A created CustomJob right away will be attempted to be run.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsCustomJobsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1CustomJob googleCloudAiplatformV1beta1CustomJob = null;
        GoogleCloudAiplatformV1beta1CustomJob response = api.aiplatformProjectsLocationsCustomJobsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1CustomJob);
        // TODO: test validations
    }

    /**
     * Lists CustomJobs in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsCustomJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListCustomJobsResponse response = api.aiplatformProjectsLocationsCustomJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Creates a DataLabelingJob.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDataLabelingJobsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1DataLabelingJob googleCloudAiplatformV1beta1DataLabelingJob = null;
        GoogleCloudAiplatformV1beta1DataLabelingJob response = api.aiplatformProjectsLocationsDataLabelingJobsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1DataLabelingJob);
        // TODO: test validations
    }

    /**
     * Lists DataLabelingJobs in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDataLabelingJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse response = api.aiplatformProjectsLocationsDataLabelingJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Creates a Dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1Dataset googleCloudAiplatformV1beta1Dataset = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsDatasetsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1Dataset);
        // TODO: test validations
    }

    /**
     * Lists Annotations belongs to a dataitem
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsDataItemsAnnotationsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListAnnotationsResponse response = api.aiplatformProjectsLocationsDatasetsDataItemsAnnotationsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Lists DataItems in a Dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsDataItemsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListDataItemsResponse response = api.aiplatformProjectsLocationsDatasetsDataItemsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Create a version from a Dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsDatasetVersionsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1DatasetVersion googleCloudAiplatformV1beta1DatasetVersion = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsDatasetsDatasetVersionsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1DatasetVersion);
        // TODO: test validations
    }

    /**
     * Lists DatasetVersions in a Dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsDatasetVersionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse response = api.aiplatformProjectsLocationsDatasetsDatasetVersionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Restores a dataset version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsDatasetVersionsRestoreTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsDatasetsDatasetVersionsRestore(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Imports data into a Dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsImportTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ImportDataRequest googleCloudAiplatformV1beta1ImportDataRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsDatasetsImport(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ImportDataRequest);
        // TODO: test validations
    }

    /**
     * Lists Datasets in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListDatasetsResponse response = api.aiplatformProjectsLocationsDatasetsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Lists SavedQueries in a Dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsSavedQueriesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListSavedQueriesResponse response = api.aiplatformProjectsLocationsDatasetsSavedQueriesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Searches DataItems in a Dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDatasetsSearchDataItemsTest() throws ApiException {
        String dataset = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        List<String> annotationFilters = null;
        String annotationsFilter = null;
        Integer annotationsLimit = null;
        String dataItemFilter = null;
        String dataLabelingJob = null;
        String fieldMask = null;
        String orderBy = null;
        String orderByAnnotationOrderBy = null;
        String orderByAnnotationSavedQuery = null;
        String orderByDataItem = null;
        Integer pageSize = null;
        String pageToken = null;
        String savedQuery = null;
        GoogleCloudAiplatformV1beta1SearchDataItemsResponse response = api.aiplatformProjectsLocationsDatasetsSearchDataItems(dataset, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, annotationFilters, annotationsFilter, annotationsLimit, dataItemFilter, dataLabelingJob, fieldMask, orderBy, orderByAnnotationOrderBy, orderByAnnotationSavedQuery, orderByDataItem, pageSize, pageToken, savedQuery);
        // TODO: test validations
    }

    /**
     * Create a DeploymentResourcePool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDeploymentResourcePoolsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest googleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsDeploymentResourcePoolsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest);
        // TODO: test validations
    }

    /**
     * List DeploymentResourcePools in a location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDeploymentResourcePoolsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse response = api.aiplatformProjectsLocationsDeploymentResourcePoolsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * List DeployedModels that have been deployed on this DeploymentResourcePool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsDeploymentResourcePoolsQueryDeployedModelsTest() throws ApiException {
        String deploymentResourcePool = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse response = api.aiplatformProjectsLocationsDeploymentResourcePoolsQueryDeployedModels(deploymentResourcePool, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates an Endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsEndpointsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String endpointId = null;
        GoogleCloudAiplatformV1beta1Endpoint googleCloudAiplatformV1beta1Endpoint = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsEndpointsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, endpointId, googleCloudAiplatformV1beta1Endpoint);
        // TODO: test validations
    }

    /**
     * Deploys a Model into this Endpoint, creating a DeployedModel within it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsEndpointsDeployModelTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1DeployModelRequest googleCloudAiplatformV1beta1DeployModelRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsEndpointsDeployModel(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1DeployModelRequest);
        // TODO: test validations
    }

    /**
     * Perform an unary online prediction request to a gRPC model server for Vertex first-party products and frameworks.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsEndpointsDirectPredictTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1DirectPredictRequest googleCloudAiplatformV1beta1DirectPredictRequest = null;
        GoogleCloudAiplatformV1beta1DirectPredictResponse response = api.aiplatformProjectsLocationsEndpointsDirectPredict(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1DirectPredictRequest);
        // TODO: test validations
    }

    /**
     * Perform an unary online prediction request to a gRPC model server for custom containers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsEndpointsDirectRawPredictTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1DirectRawPredictRequest googleCloudAiplatformV1beta1DirectRawPredictRequest = null;
        GoogleCloudAiplatformV1beta1DirectRawPredictResponse response = api.aiplatformProjectsLocationsEndpointsDirectRawPredict(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1DirectRawPredictRequest);
        // TODO: test validations
    }

    /**
     * Perform an online explanation. If deployed_model_id is specified, the corresponding DeployModel must have explanation_spec populated. If deployed_model_id is not specified, all DeployedModels must have explanation_spec populated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsEndpointsExplainTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ExplainRequest googleCloudAiplatformV1beta1ExplainRequest = null;
        GoogleCloudAiplatformV1beta1ExplainResponse response = api.aiplatformProjectsLocationsEndpointsExplain(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ExplainRequest);
        // TODO: test validations
    }

    /**
     * Lists Endpoints in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsEndpointsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListEndpointsResponse response = api.aiplatformProjectsLocationsEndpointsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Updates an existing deployed model. Updatable fields include &#x60;min_replica_count&#x60;, &#x60;max_replica_count&#x60;, &#x60;autoscaling_metric_specs&#x60;, &#x60;disable_container_logging&#x60; (v1 only), and &#x60;enable_container_logging&#x60; (v1beta1 only).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsEndpointsMutateDeployedModelTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1MutateDeployedModelRequest googleCloudAiplatformV1beta1MutateDeployedModelRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsEndpointsMutateDeployedModel(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1MutateDeployedModelRequest);
        // TODO: test validations
    }

    /**
     * Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources it&#39;s using.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsEndpointsUndeployModelTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1UndeployModelRequest googleCloudAiplatformV1beta1UndeployModelRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsEndpointsUndeployModel(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1UndeployModelRequest);
        // TODO: test validations
    }

    /**
     * Creates a new FeatureGroup in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureGroupsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String featureGroupId = null;
        GoogleCloudAiplatformV1beta1FeatureGroup googleCloudAiplatformV1beta1FeatureGroup = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeatureGroupsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, featureGroupId, googleCloudAiplatformV1beta1FeatureGroup);
        // TODO: test validations
    }

    /**
     * Lists FeatureGroups in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureGroupsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse response = api.aiplatformProjectsLocationsFeatureGroupsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a new FeatureOnlineStore in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureOnlineStoresCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String featureOnlineStoreId = null;
        GoogleCloudAiplatformV1beta1FeatureOnlineStore googleCloudAiplatformV1beta1FeatureOnlineStore = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeatureOnlineStoresCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, featureOnlineStoreId, googleCloudAiplatformV1beta1FeatureOnlineStore);
        // TODO: test validations
    }

    /**
     * Creates a new FeatureView in a given FeatureOnlineStore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String featureViewId = null;
        Boolean runSyncImmediately = null;
        GoogleCloudAiplatformV1beta1FeatureView googleCloudAiplatformV1beta1FeatureView = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, featureViewId, runSyncImmediately, googleCloudAiplatformV1beta1FeatureView);
        // TODO: test validations
    }

    /**
     * Lists FeatureViewSyncs in a given FeatureView.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse response = api.aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Fetch feature values under a FeatureView.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValuesTest() throws ApiException {
        String featureView = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest googleCloudAiplatformV1beta1FetchFeatureValuesRequest = null;
        GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse response = api.aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValues(featureView, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1FetchFeatureValuesRequest);
        // TODO: test validations
    }

    /**
     * Lists FeatureViews in a given FeatureOnlineStore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListFeatureViewsResponse response = api.aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Search the nearest entities under a FeatureView. Search only works for indexable feature view; if a feature view isn&#39;t indexable, returns Invalid argument response.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntitiesTest() throws ApiException {
        String featureView = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequest googleCloudAiplatformV1beta1SearchNearestEntitiesRequest = null;
        GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse response = api.aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntities(featureView, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1SearchNearestEntitiesRequest);
        // TODO: test validations
    }

    /**
     * Triggers on-demand sync for the FeatureView.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSyncTest() throws ApiException {
        String featureView = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleCloudAiplatformV1beta1SyncFeatureViewResponse response = api.aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSync(featureView, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Lists FeatureOnlineStores in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeatureOnlineStoresListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse response = api.aiplatformProjectsLocationsFeatureOnlineStoresList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Batch reads Feature values from a Featurestore. This API enables batch reading Feature values, where each read instance in the batch may read Feature values of entities from one or more EntityTypes. Point-in-time correctness is guaranteed for Feature values of each read instance as of each instance&#39;s read timestamp.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresBatchReadFeatureValuesTest() throws ApiException {
        String featurestore = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequest googleCloudAiplatformV1beta1BatchReadFeatureValuesRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeaturestoresBatchReadFeatureValues(featurestore, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1BatchReadFeatureValuesRequest);
        // TODO: test validations
    }

    /**
     * Creates a new Featurestore in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String featurestoreId = null;
        GoogleCloudAiplatformV1beta1Featurestore googleCloudAiplatformV1beta1Featurestore = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeaturestoresCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, featurestoreId, googleCloudAiplatformV1beta1Featurestore);
        // TODO: test validations
    }

    /**
     * Creates a new EntityType in a given Featurestore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String entityTypeId = null;
        GoogleCloudAiplatformV1beta1EntityType googleCloudAiplatformV1beta1EntityType = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, entityTypeId, googleCloudAiplatformV1beta1EntityType);
        // TODO: test validations
    }

    /**
     * Delete Feature values from Featurestore. The progress of the deletion is tracked by the returned operation. The deleted feature values are guaranteed to be invisible to subsequent read operations after the operation is marked as successfully done. If a delete feature values operation fails, the feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same delete request again and wait till the new operation returned is marked as successfully done.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValuesTest() throws ApiException {
        String entityType = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequest googleCloudAiplatformV1beta1DeleteFeatureValuesRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValues(entityType, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1DeleteFeatureValuesRequest);
        // TODO: test validations
    }

    /**
     * Exports Feature values from all the entities of a target EntityType.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesExportFeatureValuesTest() throws ApiException {
        String entityType = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ExportFeatureValuesRequest googleCloudAiplatformV1beta1ExportFeatureValuesRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesExportFeatureValues(entityType, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ExportFeatureValuesRequest);
        // TODO: test validations
    }

    /**
     * Creates a batch of Features in a given EntityType.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequest googleCloudAiplatformV1beta1BatchCreateFeaturesRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1BatchCreateFeaturesRequest);
        // TODO: test validations
    }

    /**
     * Creates a new Feature in a given EntityType.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String featureId = null;
        GoogleCloudAiplatformV1beta1Feature googleCloudAiplatformV1beta1Feature = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, featureId, googleCloudAiplatformV1beta1Feature);
        // TODO: test validations
    }

    /**
     * Lists Features in a given EntityType.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer latestStatsCount = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListFeaturesResponse response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, latestStatsCount, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Imports Feature values into the Featurestore from a source storage. The progress of the import is tracked by the returned operation. The imported features are guaranteed to be visible to subsequent read operations after the operation is marked as successfully done. If an import operation fails, the Feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same import request again and wait till the new operation returned is marked as successfully done. There are also scenarios where the caller can cause inconsistency. - Source data for import contains multiple distinct Feature values for the same entity ID and timestamp. - Source is modified during an import. This includes adding, updating, or removing source data and/or metadata. Examples of updating metadata include but are not limited to changing storage location, storage class, or retention policy. - Online serving cluster is under-provisioned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesImportFeatureValuesTest() throws ApiException {
        String entityType = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest googleCloudAiplatformV1beta1ImportFeatureValuesRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesImportFeatureValues(entityType, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ImportFeatureValuesRequest);
        // TODO: test validations
    }

    /**
     * Lists EntityTypes in a given Featurestore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListEntityTypesResponse response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Reads Feature values of a specific entity of an EntityType. For reading feature values of multiple entities of an EntityType, please use StreamingReadFeatureValues.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesReadFeatureValuesTest() throws ApiException {
        String entityType = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ReadFeatureValuesRequest googleCloudAiplatformV1beta1ReadFeatureValuesRequest = null;
        GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesReadFeatureValues(entityType, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ReadFeatureValuesRequest);
        // TODO: test validations
    }

    /**
     * Reads Feature values for multiple entities. Depending on their size, data for different entities may be broken up across multiple responses.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValuesTest() throws ApiException {
        String entityType = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest googleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest = null;
        GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValues(entityType, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest);
        // TODO: test validations
    }

    /**
     * Writes Feature values of one or more entities of an EntityType. The Feature values are merged into existing entities if any. The Feature values to be written must have timestamp within the online storage retention.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresEntityTypesWriteFeatureValuesTest() throws ApiException {
        String entityType = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest googleCloudAiplatformV1beta1WriteFeatureValuesRequest = null;
        Object response = api.aiplatformProjectsLocationsFeaturestoresEntityTypesWriteFeatureValues(entityType, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1WriteFeatureValuesRequest);
        // TODO: test validations
    }

    /**
     * Lists Featurestores in a given project and location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListFeaturestoresResponse response = api.aiplatformProjectsLocationsFeaturestoresList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Searches Features matching a query in a given project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsFeaturestoresSearchFeaturesTest() throws ApiException {
        String location = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String query = null;
        GoogleCloudAiplatformV1beta1SearchFeaturesResponse response = api.aiplatformProjectsLocationsFeaturestoresSearchFeatures(location, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, query);
        // TODO: test validations
    }

    /**
     * Creates a HyperparameterTuningJob
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsHyperparameterTuningJobsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1HyperparameterTuningJob googleCloudAiplatformV1beta1HyperparameterTuningJob = null;
        GoogleCloudAiplatformV1beta1HyperparameterTuningJob response = api.aiplatformProjectsLocationsHyperparameterTuningJobsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1HyperparameterTuningJob);
        // TODO: test validations
    }

    /**
     * Lists HyperparameterTuningJobs in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsHyperparameterTuningJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse response = api.aiplatformProjectsLocationsHyperparameterTuningJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Creates an IndexEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexEndpointsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1IndexEndpoint googleCloudAiplatformV1beta1IndexEndpoint = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsIndexEndpointsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1IndexEndpoint);
        // TODO: test validations
    }

    /**
     * Deploys an Index into this IndexEndpoint, creating a DeployedIndex within it. Only non-empty Indexes can be deployed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexEndpointsDeployIndexTest() throws ApiException {
        String indexEndpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1DeployIndexRequest googleCloudAiplatformV1beta1DeployIndexRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsIndexEndpointsDeployIndex(indexEndpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1DeployIndexRequest);
        // TODO: test validations
    }

    /**
     * Finds the nearest neighbors of each vector within the request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexEndpointsFindNeighborsTest() throws ApiException {
        String indexEndpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1FindNeighborsRequest googleCloudAiplatformV1beta1FindNeighborsRequest = null;
        GoogleCloudAiplatformV1beta1FindNeighborsResponse response = api.aiplatformProjectsLocationsIndexEndpointsFindNeighbors(indexEndpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1FindNeighborsRequest);
        // TODO: test validations
    }

    /**
     * Lists IndexEndpoints in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexEndpointsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse response = api.aiplatformProjectsLocationsIndexEndpointsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Update an existing DeployedIndex under an IndexEndpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexEndpointsMutateDeployedIndexTest() throws ApiException {
        String indexEndpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1DeployedIndex googleCloudAiplatformV1beta1DeployedIndex = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsIndexEndpointsMutateDeployedIndex(indexEndpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1DeployedIndex);
        // TODO: test validations
    }

    /**
     * Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints can be retrieved in a batch.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexEndpointsReadIndexDatapointsTest() throws ApiException {
        String indexEndpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequest googleCloudAiplatformV1beta1ReadIndexDatapointsRequest = null;
        GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse response = api.aiplatformProjectsLocationsIndexEndpointsReadIndexDatapoints(indexEndpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ReadIndexDatapointsRequest);
        // TODO: test validations
    }

    /**
     * Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it, and freeing all resources it&#39;s using.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexEndpointsUndeployIndexTest() throws ApiException {
        String indexEndpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1UndeployIndexRequest googleCloudAiplatformV1beta1UndeployIndexRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsIndexEndpointsUndeployIndex(indexEndpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1UndeployIndexRequest);
        // TODO: test validations
    }

    /**
     * Creates an Index.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1Index googleCloudAiplatformV1beta1Index = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsIndexesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1Index);
        // TODO: test validations
    }

    /**
     * Lists Indexes in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListIndexesResponse response = api.aiplatformProjectsLocationsIndexesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Remove Datapoints from an Index.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexesRemoveDatapointsTest() throws ApiException {
        String index = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1RemoveDatapointsRequest googleCloudAiplatformV1beta1RemoveDatapointsRequest = null;
        Object response = api.aiplatformProjectsLocationsIndexesRemoveDatapoints(index, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1RemoveDatapointsRequest);
        // TODO: test validations
    }

    /**
     * Add/update Datapoints into an Index.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsIndexesUpsertDatapointsTest() throws ApiException {
        String index = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1UpsertDatapointsRequest googleCloudAiplatformV1beta1UpsertDatapointsRequest = null;
        Object response = api.aiplatformProjectsLocationsIndexesUpsertDatapoints(index, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1UpsertDatapointsRequest);
        // TODO: test validations
    }

    /**
     * Lists information about the supported locations for this service.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudLocationListLocationsResponse response = api.aiplatformProjectsLocationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates an Artifact associated with a MetadataStore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresArtifactsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String artifactId = null;
        GoogleCloudAiplatformV1beta1Artifact googleCloudAiplatformV1beta1Artifact = null;
        GoogleCloudAiplatformV1beta1Artifact response = api.aiplatformProjectsLocationsMetadataStoresArtifactsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, artifactId, googleCloudAiplatformV1beta1Artifact);
        // TODO: test validations
    }

    /**
     * Lists Artifacts in the MetadataStore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresArtifactsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListArtifactsResponse response = api.aiplatformProjectsLocationsMetadataStoresArtifactsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Purges Artifacts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresArtifactsPurgeTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1PurgeArtifactsRequest googleCloudAiplatformV1beta1PurgeArtifactsRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsMetadataStoresArtifactsPurge(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1PurgeArtifactsRequest);
        // TODO: test validations
    }

    /**
     * Retrieves lineage of an Artifact represented through Artifacts and Executions connected by Event edges and returned as a LineageSubgraph.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraphTest() throws ApiException {
        String artifact = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer maxHops = null;
        GoogleCloudAiplatformV1beta1LineageSubgraph response = api.aiplatformProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraph(artifact, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, maxHops);
        // TODO: test validations
    }

    /**
     * Adds a set of Artifacts and Executions to a Context. If any of the Artifacts or Executions have already been added to a Context, they are simply skipped.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutionsTest() throws ApiException {
        String context = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest googleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest = null;
        Object response = api.aiplatformProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutions(context, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest);
        // TODO: test validations
    }

    /**
     * Adds a set of Contexts as children to a parent Context. If any of the child Contexts have already been added to the parent Context, they are simply skipped. If this call would create a cycle or cause any Context to have more than 10 parents, the request will fail with an INVALID_ARGUMENT error.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresContextsAddContextChildrenTest() throws ApiException {
        String context = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1AddContextChildrenRequest googleCloudAiplatformV1beta1AddContextChildrenRequest = null;
        Object response = api.aiplatformProjectsLocationsMetadataStoresContextsAddContextChildren(context, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1AddContextChildrenRequest);
        // TODO: test validations
    }

    /**
     * Creates a Context associated with a MetadataStore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresContextsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String contextId = null;
        GoogleCloudAiplatformV1beta1Context googleCloudAiplatformV1beta1Context = null;
        GoogleCloudAiplatformV1beta1Context response = api.aiplatformProjectsLocationsMetadataStoresContextsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, contextId, googleCloudAiplatformV1beta1Context);
        // TODO: test validations
    }

    /**
     * Lists Contexts on the MetadataStore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresContextsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListContextsResponse response = api.aiplatformProjectsLocationsMetadataStoresContextsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Purges Contexts.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresContextsPurgeTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1PurgeContextsRequest googleCloudAiplatformV1beta1PurgeContextsRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsMetadataStoresContextsPurge(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1PurgeContextsRequest);
        // TODO: test validations
    }

    /**
     * Retrieves Artifacts and Executions within the specified Context, connected by Event edges and returned as a LineageSubgraph.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraphTest() throws ApiException {
        String context = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1LineageSubgraph response = api.aiplatformProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraph(context, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Remove a set of children contexts from a parent Context. If any of the child Contexts were NOT added to the parent Context, they are simply skipped.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresContextsRemoveContextChildrenTest() throws ApiException {
        String context = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1RemoveContextChildrenRequest googleCloudAiplatformV1beta1RemoveContextChildrenRequest = null;
        Object response = api.aiplatformProjectsLocationsMetadataStoresContextsRemoveContextChildren(context, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1RemoveContextChildrenRequest);
        // TODO: test validations
    }

    /**
     * Initializes a MetadataStore, including allocation of resources.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String metadataStoreId = null;
        GoogleCloudAiplatformV1beta1MetadataStore googleCloudAiplatformV1beta1MetadataStore = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsMetadataStoresCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, metadataStoreId, googleCloudAiplatformV1beta1MetadataStore);
        // TODO: test validations
    }

    /**
     * Adds Events to the specified Execution. An Event indicates whether an Artifact was used as an input or output for an Execution. If an Event already exists between the Execution and the Artifact, the Event is skipped.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresExecutionsAddExecutionEventsTest() throws ApiException {
        String execution = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1AddExecutionEventsRequest googleCloudAiplatformV1beta1AddExecutionEventsRequest = null;
        Object response = api.aiplatformProjectsLocationsMetadataStoresExecutionsAddExecutionEvents(execution, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1AddExecutionEventsRequest);
        // TODO: test validations
    }

    /**
     * Creates an Execution associated with a MetadataStore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresExecutionsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String executionId = null;
        GoogleCloudAiplatformV1beta1Execution googleCloudAiplatformV1beta1Execution = null;
        GoogleCloudAiplatformV1beta1Execution response = api.aiplatformProjectsLocationsMetadataStoresExecutionsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, executionId, googleCloudAiplatformV1beta1Execution);
        // TODO: test validations
    }

    /**
     * Lists Executions in the MetadataStore.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresExecutionsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListExecutionsResponse response = api.aiplatformProjectsLocationsMetadataStoresExecutionsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Purges Executions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresExecutionsPurgeTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1PurgeExecutionsRequest googleCloudAiplatformV1beta1PurgeExecutionsRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsMetadataStoresExecutionsPurge(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1PurgeExecutionsRequest);
        // TODO: test validations
    }

    /**
     * Obtains the set of input and output Artifacts for this Execution, in the form of LineageSubgraph that also contains the Execution and connecting Events.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputsTest() throws ApiException {
        String execution = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1LineageSubgraph response = api.aiplatformProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputs(execution, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists MetadataStores for a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListMetadataStoresResponse response = api.aiplatformProjectsLocationsMetadataStoresList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a MetadataSchema.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresMetadataSchemasCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String metadataSchemaId = null;
        GoogleCloudAiplatformV1beta1MetadataSchema googleCloudAiplatformV1beta1MetadataSchema = null;
        GoogleCloudAiplatformV1beta1MetadataSchema response = api.aiplatformProjectsLocationsMetadataStoresMetadataSchemasCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, metadataSchemaId, googleCloudAiplatformV1beta1MetadataSchema);
        // TODO: test validations
    }

    /**
     * Lists MetadataSchemas.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMetadataStoresMetadataSchemasListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse response = api.aiplatformProjectsLocationsMetadataStoresMetadataSchemasList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and datalabeling.googleapis.com to Vertex AI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMigratableResourcesBatchMigrateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequest googleCloudAiplatformV1beta1BatchMigrateResourcesRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsMigratableResourcesBatchMigrate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1BatchMigrateResourcesRequest);
        // TODO: test validations
    }

    /**
     * Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com that can be migrated to Vertex AI&#39;s given location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsMigratableResourcesSearchTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequest googleCloudAiplatformV1beta1SearchMigratableResourcesRequest = null;
        GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse response = api.aiplatformProjectsLocationsMigratableResourcesSearch(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1SearchMigratableResourcesRequest);
        // TODO: test validations
    }

    /**
     * Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelDeploymentMonitoringJobsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob = null;
        GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob response = api.aiplatformProjectsLocationsModelDeploymentMonitoringJobsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob);
        // TODO: test validations
    }

    /**
     * Lists ModelDeploymentMonitoringJobs in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelDeploymentMonitoringJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse response = api.aiplatformProjectsLocationsModelDeploymentMonitoringJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Searches Model Monitoring Statistics generated within a given time window.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomaliesTest() throws ApiException {
        String modelDeploymentMonitoringJob = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest googleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest = null;
        GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse response = api.aiplatformProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomalies(modelDeploymentMonitoringJob, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest);
        // TODO: test validations
    }

    /**
     * Copies an already existing Vertex AI Model into the specified Location. The source Model must exist in the same Project. When copying custom Models, the users themselves are responsible for Model.metadata content to be region-agnostic, as well as making sure that any resources (e.g. files) it depends on remain accessible.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsCopyTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1CopyModelRequest googleCloudAiplatformV1beta1CopyModelRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsModelsCopy(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1CopyModelRequest);
        // TODO: test validations
    }

    /**
     * Deletes a Model version. Model version can only be deleted if there are no DeployedModels created from it. Deleting the only version in the Model is not allowed. Use DeleteModel for deleting the Model instead.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsDeleteVersionTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsModelsDeleteVersion(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Imports an externally generated ModelEvaluation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsEvaluationsImportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ImportModelEvaluationRequest googleCloudAiplatformV1beta1ImportModelEvaluationRequest = null;
        GoogleCloudAiplatformV1beta1ModelEvaluation response = api.aiplatformProjectsLocationsModelsEvaluationsImport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ImportModelEvaluationRequest);
        // TODO: test validations
    }

    /**
     * Lists ModelEvaluations in a Model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsEvaluationsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse response = api.aiplatformProjectsLocationsModelsEvaluationsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Imports a list of externally generated EvaluatedAnnotations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsEvaluationsSlicesBatchImportTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest googleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest = null;
        GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse response = api.aiplatformProjectsLocationsModelsEvaluationsSlicesBatchImport(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest);
        // TODO: test validations
    }

    /**
     * Lists ModelEvaluationSlices in a ModelEvaluation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsEvaluationsSlicesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse response = api.aiplatformProjectsLocationsModelsEvaluationsSlicesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Exports a trained, exportable Model to a location specified by the user. A Model is considered to be exportable if it has at least one supported export format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsExportTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ExportModelRequest googleCloudAiplatformV1beta1ExportModelRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsModelsExport(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ExportModelRequest);
        // TODO: test validations
    }

    /**
     * Lists versions of the specified model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsListVersionsTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListModelVersionsResponse response = api.aiplatformProjectsLocationsModelsListVersions(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Merges a set of aliases for a Model version.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsMergeVersionAliasesTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1MergeVersionAliasesRequest googleCloudAiplatformV1beta1MergeVersionAliasesRequest = null;
        GoogleCloudAiplatformV1beta1Model response = api.aiplatformProjectsLocationsModelsMergeVersionAliases(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1MergeVersionAliasesRequest);
        // TODO: test validations
    }

    /**
     * Incrementally update the dataset used for an examples model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsUpdateExplanationDatasetTest() throws ApiException {
        String model = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequest googleCloudAiplatformV1beta1UpdateExplanationDatasetRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsModelsUpdateExplanationDataset(model, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1UpdateExplanationDatasetRequest);
        // TODO: test validations
    }

    /**
     * Uploads a Model artifact into Vertex AI.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsModelsUploadTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1UploadModelRequest googleCloudAiplatformV1beta1UploadModelRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsModelsUpload(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1UploadModelRequest);
        // TODO: test validations
    }

    /**
     * Creates a NasJob
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNasJobsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1NasJob googleCloudAiplatformV1beta1NasJob = null;
        GoogleCloudAiplatformV1beta1NasJob response = api.aiplatformProjectsLocationsNasJobsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1NasJob);
        // TODO: test validations
    }

    /**
     * Lists NasJobs in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNasJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListNasJobsResponse response = api.aiplatformProjectsLocationsNasJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * List top NasTrialDetails of a NasJob.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNasJobsNasTrialDetailsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse response = api.aiplatformProjectsLocationsNasJobsNasTrialDetailsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Creates a NotebookRuntimeTemplate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimeTemplatesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String notebookRuntimeTemplateId = null;
        GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate googleCloudAiplatformV1beta1NotebookRuntimeTemplate = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsNotebookRuntimeTemplatesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, notebookRuntimeTemplateId, googleCloudAiplatformV1beta1NotebookRuntimeTemplate);
        // TODO: test validations
    }

    /**
     * Lists NotebookRuntimeTemplates in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimeTemplatesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse response = api.aiplatformProjectsLocationsNotebookRuntimeTemplatesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Sets the access control policy on the specified resource. Replaces any existing policy. Can return &#x60;NOT_FOUND&#x60;, &#x60;INVALID_ARGUMENT&#x60;, and &#x60;PERMISSION_DENIED&#x60; errors.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimeTemplatesSetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleIamV1SetIamPolicyRequest googleIamV1SetIamPolicyRequest = null;
        GoogleIamV1Policy response = api.aiplatformProjectsLocationsNotebookRuntimeTemplatesSetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleIamV1SetIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a &#x60;NOT_FOUND&#x60; error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \&quot;fail open\&quot; without warning.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimeTemplatesTestIamPermissionsTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        List<String> permissions = null;
        GoogleIamV1TestIamPermissionsRequest googleIamV1TestIamPermissionsRequest = null;
        GoogleIamV1TestIamPermissionsResponse response = api.aiplatformProjectsLocationsNotebookRuntimeTemplatesTestIamPermissions(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, permissions, googleIamV1TestIamPermissionsRequest);
        // TODO: test validations
    }

    /**
     * Assigns a NotebookRuntime to a user for a particular Notebook file. This method will either returns an existing assignment or generates a new one.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimesAssignTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequest googleCloudAiplatformV1beta1AssignNotebookRuntimeRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsNotebookRuntimesAssign(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1AssignNotebookRuntimeRequest);
        // TODO: test validations
    }

    /**
     * Internal only: Called from Compute Engine instance to obtain EUC for owner Anonymous access: authenticates caller using VM identity JWT. Design doc: go/colab-on-vertex-euc-dd
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimesGenerateAccessTokenTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1GenerateAccessTokenRequest googleCloudAiplatformV1beta1GenerateAccessTokenRequest = null;
        GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse response = api.aiplatformProjectsLocationsNotebookRuntimesGenerateAccessToken(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1GenerateAccessTokenRequest);
        // TODO: test validations
    }

    /**
     * Lists NotebookRuntimes in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse response = api.aiplatformProjectsLocationsNotebookRuntimesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimesReportEventTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest googleCloudAiplatformV1beta1ReportRuntimeEventRequest = null;
        GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse response = api.aiplatformProjectsLocationsNotebookRuntimesReportEvent(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ReportRuntimeEventRequest);
        // TODO: test validations
    }

    /**
     * Starts a NotebookRuntime.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimesStartTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsNotebookRuntimesStart(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Upgrades a NotebookRuntime.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsNotebookRuntimesUpgradeTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsNotebookRuntimesUpgrade(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Creates a PersistentResource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPersistentResourcesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String persistentResourceId = null;
        GoogleCloudAiplatformV1beta1PersistentResource googleCloudAiplatformV1beta1PersistentResource = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsPersistentResourcesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, persistentResourceId, googleCloudAiplatformV1beta1PersistentResource);
        // TODO: test validations
    }

    /**
     * Lists PersistentResources in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPersistentResourcesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse response = api.aiplatformProjectsLocationsPersistentResourcesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Batch cancel PipelineJobs. Firstly the server will check if all the jobs are in non-terminal states, and skip the jobs that are already terminated. If the operation failed, none of the pipeline jobs are cancelled. The server will poll the states of all the pipeline jobs periodically to check the cancellation status. This operation will return an LRO.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPipelineJobsBatchCancelTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest googleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsPipelineJobsBatchCancel(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest);
        // TODO: test validations
    }

    /**
     * Batch deletes PipelineJobs The Operation is atomic. If it fails, none of the PipelineJobs are deleted. If it succeeds, all of the PipelineJobs are deleted.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPipelineJobsBatchDeleteTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest googleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsPipelineJobsBatchDelete(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest);
        // TODO: test validations
    }

    /**
     * Creates a PipelineJob. A PipelineJob will run immediately when created.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPipelineJobsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String pipelineJobId = null;
        GoogleCloudAiplatformV1beta1PipelineJob googleCloudAiplatformV1beta1PipelineJob = null;
        GoogleCloudAiplatformV1beta1PipelineJob response = api.aiplatformProjectsLocationsPipelineJobsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pipelineJobId, googleCloudAiplatformV1beta1PipelineJob);
        // TODO: test validations
    }

    /**
     * Lists PipelineJobs in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPipelineJobsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListPipelineJobsResponse response = api.aiplatformProjectsLocationsPipelineJobsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Return a list of tokens based on the input text.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPublishersModelsComputeTokensTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ComputeTokensRequest googleCloudAiplatformV1beta1ComputeTokensRequest = null;
        GoogleCloudAiplatformV1beta1ComputeTokensResponse response = api.aiplatformProjectsLocationsPublishersModelsComputeTokens(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ComputeTokensRequest);
        // TODO: test validations
    }

    /**
     * Perform a token counting.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPublishersModelsCountTokensTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1CountTokensRequest googleCloudAiplatformV1beta1CountTokensRequest = null;
        GoogleCloudAiplatformV1beta1CountTokensResponse response = api.aiplatformProjectsLocationsPublishersModelsCountTokens(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1CountTokensRequest);
        // TODO: test validations
    }

    /**
     * Generate content with multimodal inputs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPublishersModelsGenerateContentTest() throws ApiException {
        String model = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1GenerateContentRequest googleCloudAiplatformV1beta1GenerateContentRequest = null;
        GoogleCloudAiplatformV1beta1GenerateContentResponse response = api.aiplatformProjectsLocationsPublishersModelsGenerateContent(model, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1GenerateContentRequest);
        // TODO: test validations
    }

    /**
     * Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPublishersModelsGetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer optionsRequestedPolicyVersion = null;
        GoogleIamV1GetIamPolicyRequest googleIamV1GetIamPolicyRequest = null;
        GoogleIamV1Policy response = api.aiplatformProjectsLocationsPublishersModelsGetIamPolicy(resource, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, optionsRequestedPolicyVersion, googleIamV1GetIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Perform an online prediction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPublishersModelsPredictTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1PredictRequest googleCloudAiplatformV1beta1PredictRequest = null;
        GoogleCloudAiplatformV1beta1PredictResponse response = api.aiplatformProjectsLocationsPublishersModelsPredict(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1PredictRequest);
        // TODO: test validations
    }

    /**
     * Perform an online prediction with an arbitrary HTTP payload. The response includes the following HTTP headers: * &#x60;X-Vertex-AI-Endpoint-Id&#x60;: ID of the Endpoint that served this prediction. * &#x60;X-Vertex-AI-Deployed-Model-Id&#x60;: ID of the Endpoint&#39;s DeployedModel that served this prediction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPublishersModelsRawPredictTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1RawPredictRequest googleCloudAiplatformV1beta1RawPredictRequest = null;
        GoogleApiHttpBody response = api.aiplatformProjectsLocationsPublishersModelsRawPredict(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1RawPredictRequest);
        // TODO: test validations
    }

    /**
     * Perform a server-side streaming online prediction request for Vertex LLM streaming.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPublishersModelsServerStreamingPredictTest() throws ApiException {
        String endpoint = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1StreamingPredictRequest googleCloudAiplatformV1beta1StreamingPredictRequest = null;
        GoogleCloudAiplatformV1beta1StreamingPredictResponse response = api.aiplatformProjectsLocationsPublishersModelsServerStreamingPredict(endpoint, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1StreamingPredictRequest);
        // TODO: test validations
    }

    /**
     * Generate content with multimodal inputs with streaming support.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsPublishersModelsStreamGenerateContentTest() throws ApiException {
        String model = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1GenerateContentRequest googleCloudAiplatformV1beta1GenerateContentRequest = null;
        GoogleCloudAiplatformV1beta1GenerateContentResponse response = api.aiplatformProjectsLocationsPublishersModelsStreamGenerateContent(model, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1GenerateContentRequest);
        // TODO: test validations
    }

    /**
     * Creates a Schedule.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsSchedulesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1Schedule googleCloudAiplatformV1beta1Schedule = null;
        GoogleCloudAiplatformV1beta1Schedule response = api.aiplatformProjectsLocationsSchedulesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1Schedule);
        // TODO: test validations
    }

    /**
     * Lists Schedules in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsSchedulesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListSchedulesResponse response = api.aiplatformProjectsLocationsSchedulesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Pauses a Schedule. Will mark Schedule.state to &#39;PAUSED&#39;. If the schedule is paused, no new runs will be created. Already created runs will NOT be paused or canceled.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsSchedulesPauseTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.aiplatformProjectsLocationsSchedulesPause(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Resumes a paused Schedule to start scheduling new runs. Will mark Schedule.state to &#39;ACTIVE&#39;. Only paused Schedule can be resumed. When the Schedule is resumed, new runs will be scheduled starting from the next execution time after the current time based on the time_specification in the Schedule. If Schedule.catchUp is set up true, all missed runs will be scheduled for backfill first.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsSchedulesResumeTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ResumeScheduleRequest googleCloudAiplatformV1beta1ResumeScheduleRequest = null;
        Object response = api.aiplatformProjectsLocationsSchedulesResume(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ResumeScheduleRequest);
        // TODO: test validations
    }

    /**
     * Creates a SpecialistPool.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsSpecialistPoolsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1SpecialistPool googleCloudAiplatformV1beta1SpecialistPool = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsSpecialistPoolsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1SpecialistPool);
        // TODO: test validations
    }

    /**
     * Lists SpecialistPools in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsSpecialistPoolsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse response = api.aiplatformProjectsLocationsSpecialistPoolsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Creates a Study. A resource name will be generated after creation of the Study.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1Study googleCloudAiplatformV1beta1Study = null;
        GoogleCloudAiplatformV1beta1Study response = api.aiplatformProjectsLocationsStudiesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1Study);
        // TODO: test validations
    }

    /**
     * Lists all the studies in a region for an associated project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListStudiesResponse response = api.aiplatformProjectsLocationsStudiesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Looks a study up using the user-defined display_name field instead of the fully qualified resource name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesLookupTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1LookupStudyRequest googleCloudAiplatformV1beta1LookupStudyRequest = null;
        GoogleCloudAiplatformV1beta1Study response = api.aiplatformProjectsLocationsStudiesLookup(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1LookupStudyRequest);
        // TODO: test validations
    }

    /**
     * Adds a measurement of the objective metrics to a Trial. This measurement is assumed to have been taken before the Trial is complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesTrialsAddTrialMeasurementTest() throws ApiException {
        String trialName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1AddTrialMeasurementRequest googleCloudAiplatformV1beta1AddTrialMeasurementRequest = null;
        GoogleCloudAiplatformV1beta1Trial response = api.aiplatformProjectsLocationsStudiesTrialsAddTrialMeasurement(trialName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1AddTrialMeasurementRequest);
        // TODO: test validations
    }

    /**
     * Checks whether a Trial should stop or not. Returns a long-running operation. When the operation is successful, it will contain a CheckTrialEarlyStoppingStateResponse.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingStateTest() throws ApiException {
        String trialName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingState(trialName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Marks a Trial as complete.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesTrialsCompleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1CompleteTrialRequest googleCloudAiplatformV1beta1CompleteTrialRequest = null;
        GoogleCloudAiplatformV1beta1Trial response = api.aiplatformProjectsLocationsStudiesTrialsComplete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1CompleteTrialRequest);
        // TODO: test validations
    }

    /**
     * Adds a user provided Trial to a Study.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesTrialsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1Trial googleCloudAiplatformV1beta1Trial = null;
        GoogleCloudAiplatformV1beta1Trial response = api.aiplatformProjectsLocationsStudiesTrialsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1Trial);
        // TODO: test validations
    }

    /**
     * Lists the Trials associated with a Study.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesTrialsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudAiplatformV1beta1ListTrialsResponse response = api.aiplatformProjectsLocationsStudiesTrialsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists the pareto-optimal Trials for multi-objective Study or the optimal Trials for single-objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesTrialsListOptimalTrialsTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse response = api.aiplatformProjectsLocationsStudiesTrialsListOptimalTrials(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Stops a Trial.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesTrialsStopTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        GoogleCloudAiplatformV1beta1Trial response = api.aiplatformProjectsLocationsStudiesTrialsStop(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Adds one or more Trials to a Study, with parameter values suggested by Vertex AI Vizier. Returns a long-running operation associated with the generation of Trial suggestions. When this long-running operation succeeds, it will contain a SuggestTrialsResponse.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsStudiesTrialsSuggestTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1SuggestTrialsRequest googleCloudAiplatformV1beta1SuggestTrialsRequest = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsStudiesTrialsSuggest(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1SuggestTrialsRequest);
        // TODO: test validations
    }

    /**
     * Reads multiple TensorboardTimeSeries&#39; data. The data point number limit is 1000 for scalars, 100 for tensors and blob references. If the number of data points stored is less than the limit, all data is returned. Otherwise, the number limit of data points is randomly selected from this time series and returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsBatchReadTest() throws ApiException {
        String tensorboard = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        List<String> timeSeries = null;
        GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse response = api.aiplatformProjectsLocationsTensorboardsBatchRead(tensorboard, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, timeSeries);
        // TODO: test validations
    }

    /**
     * Creates a Tensorboard.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1Tensorboard googleCloudAiplatformV1beta1Tensorboard = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsTensorboardsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1Tensorboard);
        // TODO: test validations
    }

    /**
     * Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsBatchCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest googleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest = null;
        GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse response = api.aiplatformProjectsLocationsTensorboardsExperimentsBatchCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest);
        // TODO: test validations
    }

    /**
     * Creates a TensorboardExperiment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String tensorboardExperimentId = null;
        GoogleCloudAiplatformV1beta1TensorboardExperiment googleCloudAiplatformV1beta1TensorboardExperiment = null;
        GoogleCloudAiplatformV1beta1TensorboardExperiment response = api.aiplatformProjectsLocationsTensorboardsExperimentsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, tensorboardExperimentId, googleCloudAiplatformV1beta1TensorboardExperiment);
        // TODO: test validations
    }

    /**
     * Lists TensorboardExperiments in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse response = api.aiplatformProjectsLocationsTensorboardsExperimentsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Batch create TensorboardRuns.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsBatchCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest googleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest = null;
        GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsBatchCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest);
        // TODO: test validations
    }

    /**
     * Creates a TensorboardRun.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String tensorboardRunId = null;
        GoogleCloudAiplatformV1beta1TensorboardRun googleCloudAiplatformV1beta1TensorboardRun = null;
        GoogleCloudAiplatformV1beta1TensorboardRun response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, tensorboardRunId, googleCloudAiplatformV1beta1TensorboardRun);
        // TODO: test validations
    }

    /**
     * Lists TensorboardRuns in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Creates a TensorboardTimeSeries.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String tensorboardTimeSeriesId = null;
        GoogleCloudAiplatformV1beta1TensorboardTimeSeries googleCloudAiplatformV1beta1TensorboardTimeSeries = null;
        GoogleCloudAiplatformV1beta1TensorboardTimeSeries response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, tensorboardTimeSeriesId, googleCloudAiplatformV1beta1TensorboardTimeSeries);
        // TODO: test validations
    }

    /**
     * Exports a TensorboardTimeSeries&#39; data. Data is returned in paginated responses.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeriesTest() throws ApiException {
        String tensorboardTimeSeries = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest googleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest = null;
        GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeries(tensorboardTimeSeries, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest);
        // TODO: test validations
    }

    /**
     * Lists TensorboardTimeSeries in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Updates a TensorboardTimeSeries.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatchTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String updateMask = null;
        GoogleCloudAiplatformV1beta1TensorboardTimeSeries googleCloudAiplatformV1beta1TensorboardTimeSeries = null;
        GoogleCloudAiplatformV1beta1TensorboardTimeSeries response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatch(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateMask, googleCloudAiplatformV1beta1TensorboardTimeSeries);
        // TODO: test validations
    }

    /**
     * Reads a TensorboardTimeSeries&#39; data. By default, if the number of data points stored is less than 1000, all data is returned. Otherwise, 1000 data points is randomly selected from this time series and returned. This value can be changed by changing max_data_points, which can&#39;t be greater than 10k.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadTest() throws ApiException {
        String tensorboardTimeSeries = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer maxDataPoints = null;
        GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesRead(tensorboardTimeSeries, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, maxDataPoints);
        // TODO: test validations
    }

    /**
     * Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in consumer project&#39;s Cloud Storage bucket without users having to obtain Cloud Storage access permission.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobDataTest() throws ApiException {
        String timeSeries = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        List<String> blobIds = null;
        GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobData(timeSeries, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, blobIds);
        // TODO: test validations
    }

    /**
     * Write time series data points into multiple TensorboardTimeSeries under a TensorboardRun. If any data fail to be ingested, an error is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsRunsWriteTest() throws ApiException {
        String tensorboardRun = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest googleCloudAiplatformV1beta1WriteTensorboardRunDataRequest = null;
        Object response = api.aiplatformProjectsLocationsTensorboardsExperimentsRunsWrite(tensorboardRun, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1WriteTensorboardRunDataRequest);
        // TODO: test validations
    }

    /**
     * Write time series data points of multiple TensorboardTimeSeries in multiple TensorboardRun&#39;s. If any data fail to be ingested, an error is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsExperimentsWriteTest() throws ApiException {
        String tensorboardExperiment = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest googleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest = null;
        Object response = api.aiplatformProjectsLocationsTensorboardsExperimentsWrite(tensorboardExperiment, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest);
        // TODO: test validations
    }

    /**
     * Lists Tensorboards in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        String orderBy = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListTensorboardsResponse response = api.aiplatformProjectsLocationsTensorboardsList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, orderBy, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Returns the storage size for a given TensorBoard instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsReadSizeTest() throws ApiException {
        String tensorboard = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse response = api.aiplatformProjectsLocationsTensorboardsReadSize(tensorboard, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Returns a list of monthly active users for a given TensorBoard instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTensorboardsReadUsageTest() throws ApiException {
        String tensorboard = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse response = api.aiplatformProjectsLocationsTensorboardsReadUsage(tensorboard, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTrainingPipelinesCreateTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleCloudAiplatformV1beta1TrainingPipeline googleCloudAiplatformV1beta1TrainingPipeline = null;
        GoogleCloudAiplatformV1beta1TrainingPipeline response = api.aiplatformProjectsLocationsTrainingPipelinesCreate(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleCloudAiplatformV1beta1TrainingPipeline);
        // TODO: test validations
    }

    /**
     * Lists TrainingPipelines in a Location.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTrainingPipelinesListTest() throws ApiException {
        String parent = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse response = api.aiplatformProjectsLocationsTrainingPipelinesList(parent, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn&#39;t support this method, it returns &#x60;google.rpc.Code.UNIMPLEMENTED&#x60;. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to &#x60;Code.CANCELLED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTrainingPipelinesOperationsCancelTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object body = null;
        Object response = api.aiplatformProjectsLocationsTrainingPipelinesOperationsCancel(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, body);
        // TODO: test validations
    }

    /**
     * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn&#39;t support this method, it returns &#x60;google.rpc.Code.UNIMPLEMENTED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTrainingPipelinesOperationsDeleteTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean force = null;
        Object response = api.aiplatformProjectsLocationsTrainingPipelinesOperationsDelete(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, force);
        // TODO: test validations
    }

    /**
     * Lists operations that match the specified filter in the request. If the server doesn&#39;t support this method, it returns &#x60;UNIMPLEMENTED&#x60;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTrainingPipelinesOperationsListTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleLongrunningListOperationsResponse response = api.aiplatformProjectsLocationsTrainingPipelinesOperationsList(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns &#x60;google.rpc.Code.UNIMPLEMENTED&#x60;. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aiplatformProjectsLocationsTrainingPipelinesOperationsWaitTest() throws ApiException {
        String name = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String timeout = null;
        GoogleLongrunningOperation response = api.aiplatformProjectsLocationsTrainingPipelinesOperationsWait(name, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, timeout);
        // TODO: test validations
    }

}
