/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource from './GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource';
import GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource from './GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource';
import GoogleCloudAiplatformV1beta1FeatureViewSyncConfig from './GoogleCloudAiplatformV1beta1FeatureViewSyncConfig';
import GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig from './GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig';

/**
 * The GoogleCloudAiplatformV1beta1FeatureView model module.
 * @module model/GoogleCloudAiplatformV1beta1FeatureView
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1FeatureView {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1FeatureView</code>.
     * FeatureView is representation of values that the FeatureOnlineStore will serve based on its syncConfig.
     * @alias module:model/GoogleCloudAiplatformV1beta1FeatureView
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1FeatureView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1FeatureView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1FeatureView} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1FeatureView} The populated <code>GoogleCloudAiplatformV1beta1FeatureView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1FeatureView();

            if (data.hasOwnProperty('bigQuerySource')) {
                obj['bigQuerySource'] = GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource.constructFromObject(data['bigQuerySource']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('featureRegistrySource')) {
                obj['featureRegistrySource'] = GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource.constructFromObject(data['featureRegistrySource']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('serviceAccountEmail')) {
                obj['serviceAccountEmail'] = ApiClient.convertToType(data['serviceAccountEmail'], 'String');
            }
            if (data.hasOwnProperty('serviceAgentType')) {
                obj['serviceAgentType'] = ApiClient.convertToType(data['serviceAgentType'], 'String');
            }
            if (data.hasOwnProperty('syncConfig')) {
                obj['syncConfig'] = GoogleCloudAiplatformV1beta1FeatureViewSyncConfig.constructFromObject(data['syncConfig']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('vectorSearchConfig')) {
                obj['vectorSearchConfig'] = GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.constructFromObject(data['vectorSearchConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1FeatureView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1FeatureView</code>.
     */
    static validateJSON(data) {
        // validate the optional field `bigQuerySource`
        if (data['bigQuerySource']) { // data not null
          GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource.validateJSON(data['bigQuerySource']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `featureRegistrySource`
        if (data['featureRegistrySource']) { // data not null
          GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource.validateJSON(data['featureRegistrySource']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['serviceAccountEmail'] && !(typeof data['serviceAccountEmail'] === 'string' || data['serviceAccountEmail'] instanceof String)) {
            throw new Error("Expected the field `serviceAccountEmail` to be a primitive type in the JSON string but got " + data['serviceAccountEmail']);
        }
        // ensure the json data is a string
        if (data['serviceAgentType'] && !(typeof data['serviceAgentType'] === 'string' || data['serviceAgentType'] instanceof String)) {
            throw new Error("Expected the field `serviceAgentType` to be a primitive type in the JSON string but got " + data['serviceAgentType']);
        }
        // validate the optional field `syncConfig`
        if (data['syncConfig']) { // data not null
          GoogleCloudAiplatformV1beta1FeatureViewSyncConfig.validateJSON(data['syncConfig']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // validate the optional field `vectorSearchConfig`
        if (data['vectorSearchConfig']) { // data not null
          GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.validateJSON(data['vectorSearchConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1beta1FeatureViewBigQuerySource} bigQuerySource
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['bigQuerySource'] = undefined;

/**
 * Output only. Timestamp when this FeatureView was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['createTime'] = undefined;

/**
 * Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.
 * @member {String} etag
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['etag'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1FeatureViewFeatureRegistrySource} featureRegistrySource
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['featureRegistrySource'] = undefined;

/**
 * Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.
 * @member {Object.<String, String>} labels
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['labels'] = undefined;

/**
 * Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
 * @member {String} name
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['name'] = undefined;

/**
 * Output only. A Service Account unique to this FeatureView. The role bigquery.dataViewer should be granted to this service account to allow Vertex AI Feature Store to sync data to the online store.
 * @member {String} serviceAccountEmail
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['serviceAccountEmail'] = undefined;

/**
 * Optional. Service agent type used during data sync. By default, the Vertex AI Service Agent is used. When using an IAM Policy to isolate this FeatureView within a project (https://cloud.google.com/vertex-ai/docs/featurestore/latest/resource-policy) a separate service account should be provisioned by setting this field to `SERVICE_AGENT_TYPE_FEATURE_VIEW`. This will generate a separate service account to access the BigQuery source table.
 * @member {module:model/GoogleCloudAiplatformV1beta1FeatureView.ServiceAgentTypeEnum} serviceAgentType
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['serviceAgentType'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1FeatureViewSyncConfig} syncConfig
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['syncConfig'] = undefined;

/**
 * Output only. Timestamp when this FeatureView was last updated.
 * @member {String} updateTime
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['updateTime'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig} vectorSearchConfig
 */
GoogleCloudAiplatformV1beta1FeatureView.prototype['vectorSearchConfig'] = undefined;





/**
 * Allowed values for the <code>serviceAgentType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1beta1FeatureView['ServiceAgentTypeEnum'] = {

    /**
     * value: "SERVICE_AGENT_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SERVICE_AGENT_TYPE_UNSPECIFIED",

    /**
     * value: "SERVICE_AGENT_TYPE_PROJECT"
     * @const
     */
    "PROJECT": "SERVICE_AGENT_TYPE_PROJECT",

    /**
     * value: "SERVICE_AGENT_TYPE_FEATURE_VIEW"
     * @const
     */
    "FEATURE_VIEW": "SERVICE_AGENT_TYPE_FEATURE_VIEW"
};



export default GoogleCloudAiplatformV1beta1FeatureView;

