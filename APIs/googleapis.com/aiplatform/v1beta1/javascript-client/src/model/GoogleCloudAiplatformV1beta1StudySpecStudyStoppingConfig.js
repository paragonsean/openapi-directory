/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1StudyTimeConstraint from './GoogleCloudAiplatformV1beta1StudyTimeConstraint';

/**
 * The GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig model module.
 * @module model/GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig</code>.
     * The configuration (stopping conditions) for automated stopping of a Study. Conditions include trial budgets, time budgets, and convergence detection.
     * @alias module:model/GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig} The populated <code>GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig();

            if (data.hasOwnProperty('maxDurationNoProgress')) {
                obj['maxDurationNoProgress'] = ApiClient.convertToType(data['maxDurationNoProgress'], 'String');
            }
            if (data.hasOwnProperty('maxNumTrials')) {
                obj['maxNumTrials'] = ApiClient.convertToType(data['maxNumTrials'], 'Number');
            }
            if (data.hasOwnProperty('maxNumTrialsNoProgress')) {
                obj['maxNumTrialsNoProgress'] = ApiClient.convertToType(data['maxNumTrialsNoProgress'], 'Number');
            }
            if (data.hasOwnProperty('maximumRuntimeConstraint')) {
                obj['maximumRuntimeConstraint'] = GoogleCloudAiplatformV1beta1StudyTimeConstraint.constructFromObject(data['maximumRuntimeConstraint']);
            }
            if (data.hasOwnProperty('minNumTrials')) {
                obj['minNumTrials'] = ApiClient.convertToType(data['minNumTrials'], 'Number');
            }
            if (data.hasOwnProperty('minimumRuntimeConstraint')) {
                obj['minimumRuntimeConstraint'] = GoogleCloudAiplatformV1beta1StudyTimeConstraint.constructFromObject(data['minimumRuntimeConstraint']);
            }
            if (data.hasOwnProperty('shouldStopAsap')) {
                obj['shouldStopAsap'] = ApiClient.convertToType(data['shouldStopAsap'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['maxDurationNoProgress'] && !(typeof data['maxDurationNoProgress'] === 'string' || data['maxDurationNoProgress'] instanceof String)) {
            throw new Error("Expected the field `maxDurationNoProgress` to be a primitive type in the JSON string but got " + data['maxDurationNoProgress']);
        }
        // validate the optional field `maximumRuntimeConstraint`
        if (data['maximumRuntimeConstraint']) { // data not null
          GoogleCloudAiplatformV1beta1StudyTimeConstraint.validateJSON(data['maximumRuntimeConstraint']);
        }
        // validate the optional field `minimumRuntimeConstraint`
        if (data['minimumRuntimeConstraint']) { // data not null
          GoogleCloudAiplatformV1beta1StudyTimeConstraint.validateJSON(data['minimumRuntimeConstraint']);
        }

        return true;
    }


}



/**
 * If the objective value has not improved for this much time, stop the study. WARNING: Effective only for single-objective studies.
 * @member {String} maxDurationNoProgress
 */
GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.prototype['maxDurationNoProgress'] = undefined;

/**
 * If there are more than this many trials, stop the study.
 * @member {Number} maxNumTrials
 */
GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.prototype['maxNumTrials'] = undefined;

/**
 * If the objective value has not improved for this many consecutive trials, stop the study. WARNING: Effective only for single-objective studies.
 * @member {Number} maxNumTrialsNoProgress
 */
GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.prototype['maxNumTrialsNoProgress'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1StudyTimeConstraint} maximumRuntimeConstraint
 */
GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.prototype['maximumRuntimeConstraint'] = undefined;

/**
 * If there are fewer than this many COMPLETED trials, do not stop the study.
 * @member {Number} minNumTrials
 */
GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.prototype['minNumTrials'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1StudyTimeConstraint} minimumRuntimeConstraint
 */
GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.prototype['minimumRuntimeConstraint'] = undefined;

/**
 * If true, a Study enters STOPPING_ASAP whenever it would normally enters STOPPING state. The bottom line is: set to true if you want to interrupt on-going evaluations of Trials as soon as the study stopping condition is met. (Please see Study.State documentation for the source of truth).
 * @member {Boolean} shouldStopAsap
 */
GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig.prototype['shouldStopAsap'] = undefined;






export default GoogleCloudAiplatformV1beta1StudySpecStudyStoppingConfig;

