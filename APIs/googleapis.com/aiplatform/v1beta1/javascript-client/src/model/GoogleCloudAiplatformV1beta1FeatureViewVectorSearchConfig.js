/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig from './GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig';

/**
 * The GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig model module.
 * @module model/GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig</code>.
     * Deprecated. Use IndexConfig instead.
     * @alias module:model/GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig} The populated <code>GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig();

            if (data.hasOwnProperty('bruteForceConfig')) {
                obj['bruteForceConfig'] = ApiClient.convertToType(data['bruteForceConfig'], Object);
            }
            if (data.hasOwnProperty('crowdingColumn')) {
                obj['crowdingColumn'] = ApiClient.convertToType(data['crowdingColumn'], 'String');
            }
            if (data.hasOwnProperty('distanceMeasureType')) {
                obj['distanceMeasureType'] = ApiClient.convertToType(data['distanceMeasureType'], 'String');
            }
            if (data.hasOwnProperty('embeddingColumn')) {
                obj['embeddingColumn'] = ApiClient.convertToType(data['embeddingColumn'], 'String');
            }
            if (data.hasOwnProperty('embeddingDimension')) {
                obj['embeddingDimension'] = ApiClient.convertToType(data['embeddingDimension'], 'Number');
            }
            if (data.hasOwnProperty('filterColumns')) {
                obj['filterColumns'] = ApiClient.convertToType(data['filterColumns'], ['String']);
            }
            if (data.hasOwnProperty('treeAhConfig')) {
                obj['treeAhConfig'] = GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig.constructFromObject(data['treeAhConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['crowdingColumn'] && !(typeof data['crowdingColumn'] === 'string' || data['crowdingColumn'] instanceof String)) {
            throw new Error("Expected the field `crowdingColumn` to be a primitive type in the JSON string but got " + data['crowdingColumn']);
        }
        // ensure the json data is a string
        if (data['distanceMeasureType'] && !(typeof data['distanceMeasureType'] === 'string' || data['distanceMeasureType'] instanceof String)) {
            throw new Error("Expected the field `distanceMeasureType` to be a primitive type in the JSON string but got " + data['distanceMeasureType']);
        }
        // ensure the json data is a string
        if (data['embeddingColumn'] && !(typeof data['embeddingColumn'] === 'string' || data['embeddingColumn'] instanceof String)) {
            throw new Error("Expected the field `embeddingColumn` to be a primitive type in the JSON string but got " + data['embeddingColumn']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['filterColumns'])) {
            throw new Error("Expected the field `filterColumns` to be an array in the JSON data but got " + data['filterColumns']);
        }
        // validate the optional field `treeAhConfig`
        if (data['treeAhConfig']) { // data not null
          GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig.validateJSON(data['treeAhConfig']);
        }

        return true;
    }


}



/**
 * @member {Object} bruteForceConfig
 */
GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.prototype['bruteForceConfig'] = undefined;

/**
 * Optional. Column of crowding. This column contains crowding attribute which is a constraint on a neighbor list produced by nearest neighbor search requiring that no more than some value k' of the k neighbors returned have the same value of crowding_attribute.
 * @member {String} crowdingColumn
 */
GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.prototype['crowdingColumn'] = undefined;

/**
 * Optional. The distance measure used in nearest neighbor search.
 * @member {module:model/GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.DistanceMeasureTypeEnum} distanceMeasureType
 */
GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.prototype['distanceMeasureType'] = undefined;

/**
 * Optional. Column of embedding. This column contains the source data to create index for vector search. embedding_column must be set when using vector search.
 * @member {String} embeddingColumn
 */
GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.prototype['embeddingColumn'] = undefined;

/**
 * Optional. The number of dimensions of the input embedding.
 * @member {Number} embeddingDimension
 */
GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.prototype['embeddingDimension'] = undefined;

/**
 * Optional. Columns of features that're used to filter vector search results.
 * @member {Array.<String>} filterColumns
 */
GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.prototype['filterColumns'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfigTreeAHConfig} treeAhConfig
 */
GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig.prototype['treeAhConfig'] = undefined;





/**
 * Allowed values for the <code>distanceMeasureType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig['DistanceMeasureTypeEnum'] = {

    /**
     * value: "DISTANCE_MEASURE_TYPE_UNSPECIFIED"
     * @const
     */
    "DISTANCE_MEASURE_TYPE_UNSPECIFIED": "DISTANCE_MEASURE_TYPE_UNSPECIFIED",

    /**
     * value: "SQUARED_L2_DISTANCE"
     * @const
     */
    "SQUARED_L2_DISTANCE": "SQUARED_L2_DISTANCE",

    /**
     * value: "COSINE_DISTANCE"
     * @const
     */
    "COSINE_DISTANCE": "COSINE_DISTANCE",

    /**
     * value: "DOT_PRODUCT_DISTANCE"
     * @const
     */
    "DOT_PRODUCT_DISTANCE": "DOT_PRODUCT_DISTANCE"
};



export default GoogleCloudAiplatformV1beta1FeatureViewVectorSearchConfig;

