/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1GcsSource from './GoogleCloudAiplatformV1beta1GcsSource';

/**
 * The GoogleCloudAiplatformV1beta1ImportDataConfig model module.
 * @module model/GoogleCloudAiplatformV1beta1ImportDataConfig
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1ImportDataConfig {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1ImportDataConfig</code>.
     * Describes the location from where we import data into a Dataset, together with the labels that will be applied to the DataItems and the Annotations.
     * @alias module:model/GoogleCloudAiplatformV1beta1ImportDataConfig
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1ImportDataConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1ImportDataConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1ImportDataConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1ImportDataConfig} The populated <code>GoogleCloudAiplatformV1beta1ImportDataConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1ImportDataConfig();

            if (data.hasOwnProperty('annotationLabels')) {
                obj['annotationLabels'] = ApiClient.convertToType(data['annotationLabels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('dataItemLabels')) {
                obj['dataItemLabels'] = ApiClient.convertToType(data['dataItemLabels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('gcsSource')) {
                obj['gcsSource'] = GoogleCloudAiplatformV1beta1GcsSource.constructFromObject(data['gcsSource']);
            }
            if (data.hasOwnProperty('importSchemaUri')) {
                obj['importSchemaUri'] = ApiClient.convertToType(data['importSchemaUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1ImportDataConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1ImportDataConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `gcsSource`
        if (data['gcsSource']) { // data not null
          GoogleCloudAiplatformV1beta1GcsSource.validateJSON(data['gcsSource']);
        }
        // ensure the json data is a string
        if (data['importSchemaUri'] && !(typeof data['importSchemaUri'] === 'string' || data['importSchemaUri'] instanceof String)) {
            throw new Error("Expected the field `importSchemaUri` to be a primitive type in the JSON string but got " + data['importSchemaUri']);
        }

        return true;
    }


}



/**
 * Labels that will be applied to newly imported Annotations. If two Annotations are identical, one of them will be deduped. Two Annotations are considered identical if their payload, payload_schema_uri and all of their labels are the same. These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.
 * @member {Object.<String, String>} annotationLabels
 */
GoogleCloudAiplatformV1beta1ImportDataConfig.prototype['annotationLabels'] = undefined;

/**
 * Labels that will be applied to newly imported DataItems. If an identical DataItem as one being imported already exists in the Dataset, then these labels will be appended to these of the already existing one, and if labels with identical key is imported before, the old label value will be overwritten. If two DataItems are identical in the same import data operation, the labels will be combined and if key collision happens in this case, one of the values will be picked randomly. Two DataItems are considered identical if their content bytes are identical (e.g. image bytes or pdf bytes). These labels will be overridden by Annotation labels specified inside index file referenced by import_schema_uri, e.g. jsonl file.
 * @member {Object.<String, String>} dataItemLabels
 */
GoogleCloudAiplatformV1beta1ImportDataConfig.prototype['dataItemLabels'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1GcsSource} gcsSource
 */
GoogleCloudAiplatformV1beta1ImportDataConfig.prototype['gcsSource'] = undefined;

/**
 * Required. Points to a YAML file stored on Google Cloud Storage describing the import format. Validation will be done against the schema. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 * @member {String} importSchemaUri
 */
GoogleCloudAiplatformV1beta1ImportDataConfig.prototype['importSchemaUri'] = undefined;






export default GoogleCloudAiplatformV1beta1ImportDataConfig;

