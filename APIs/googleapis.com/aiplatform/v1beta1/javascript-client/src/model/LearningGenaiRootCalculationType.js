/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LearningGenaiRootCalculationType model module.
 * @module model/LearningGenaiRootCalculationType
 * @version v1beta1
 */
class LearningGenaiRootCalculationType {
    /**
     * Constructs a new <code>LearningGenaiRootCalculationType</code>.
     * The type used for final weights calculation.
     * @alias module:model/LearningGenaiRootCalculationType
     */
    constructor() { 
        
        LearningGenaiRootCalculationType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootCalculationType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootCalculationType} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootCalculationType} The populated <code>LearningGenaiRootCalculationType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootCalculationType();

            if (data.hasOwnProperty('scoreType')) {
                obj['scoreType'] = ApiClient.convertToType(data['scoreType'], 'String');
            }
            if (data.hasOwnProperty('weights')) {
                obj['weights'] = ApiClient.convertToType(data['weights'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootCalculationType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootCalculationType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['scoreType'] && !(typeof data['scoreType'] === 'string' || data['scoreType'] instanceof String)) {
            throw new Error("Expected the field `scoreType` to be a primitive type in the JSON string but got " + data['scoreType']);
        }

        return true;
    }


}



/**
 * @member {module:model/LearningGenaiRootCalculationType.ScoreTypeEnum} scoreType
 */
LearningGenaiRootCalculationType.prototype['scoreType'] = undefined;

/**
 * @member {Number} weights
 */
LearningGenaiRootCalculationType.prototype['weights'] = undefined;





/**
 * Allowed values for the <code>scoreType</code> property.
 * @enum {String}
 * @readonly
 */
LearningGenaiRootCalculationType['ScoreTypeEnum'] = {

    /**
     * value: "TYPE_UNKNOWN"
     * @const
     */
    "UNKNOWN": "TYPE_UNKNOWN",

    /**
     * value: "TYPE_SAFE"
     * @const
     */
    "SAFE": "TYPE_SAFE",

    /**
     * value: "TYPE_POLICY"
     * @const
     */
    "POLICY": "TYPE_POLICY",

    /**
     * value: "TYPE_GENERATION"
     * @const
     */
    "GENERATION": "TYPE_GENERATION"
};



export default LearningGenaiRootCalculationType;

