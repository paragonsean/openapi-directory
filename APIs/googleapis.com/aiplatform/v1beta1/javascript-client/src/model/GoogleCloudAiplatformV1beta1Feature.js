/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly from './GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly';
import GoogleCloudAiplatformV1beta1FeatureStatsAnomaly from './GoogleCloudAiplatformV1beta1FeatureStatsAnomaly';
import GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig from './GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig';

/**
 * The GoogleCloudAiplatformV1beta1Feature model module.
 * @module model/GoogleCloudAiplatformV1beta1Feature
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1Feature {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1Feature</code>.
     * Feature Metadata information. For example, color is a feature that describes an apple.
     * @alias module:model/GoogleCloudAiplatformV1beta1Feature
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1Feature.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1Feature</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1Feature} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1Feature} The populated <code>GoogleCloudAiplatformV1beta1Feature</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1Feature();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('disableMonitoring')) {
                obj['disableMonitoring'] = ApiClient.convertToType(data['disableMonitoring'], 'Boolean');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('monitoringConfig')) {
                obj['monitoringConfig'] = GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig.constructFromObject(data['monitoringConfig']);
            }
            if (data.hasOwnProperty('monitoringStats')) {
                obj['monitoringStats'] = ApiClient.convertToType(data['monitoringStats'], [GoogleCloudAiplatformV1beta1FeatureStatsAnomaly]);
            }
            if (data.hasOwnProperty('monitoringStatsAnomalies')) {
                obj['monitoringStatsAnomalies'] = ApiClient.convertToType(data['monitoringStatsAnomalies'], [GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pointOfContact')) {
                obj['pointOfContact'] = ApiClient.convertToType(data['pointOfContact'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('valueType')) {
                obj['valueType'] = ApiClient.convertToType(data['valueType'], 'String');
            }
            if (data.hasOwnProperty('versionColumnName')) {
                obj['versionColumnName'] = ApiClient.convertToType(data['versionColumnName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1Feature</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1Feature</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `monitoringConfig`
        if (data['monitoringConfig']) { // data not null
          GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig.validateJSON(data['monitoringConfig']);
        }
        if (data['monitoringStats']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['monitoringStats'])) {
                throw new Error("Expected the field `monitoringStats` to be an array in the JSON data but got " + data['monitoringStats']);
            }
            // validate the optional field `monitoringStats` (array)
            for (const item of data['monitoringStats']) {
                GoogleCloudAiplatformV1beta1FeatureStatsAnomaly.validateJSON(item);
            };
        }
        if (data['monitoringStatsAnomalies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['monitoringStatsAnomalies'])) {
                throw new Error("Expected the field `monitoringStatsAnomalies` to be an array in the JSON data but got " + data['monitoringStatsAnomalies']);
            }
            // validate the optional field `monitoringStatsAnomalies` (array)
            for (const item of data['monitoringStatsAnomalies']) {
                GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['pointOfContact'] && !(typeof data['pointOfContact'] === 'string' || data['pointOfContact'] instanceof String)) {
            throw new Error("Expected the field `pointOfContact` to be a primitive type in the JSON string but got " + data['pointOfContact']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // ensure the json data is a string
        if (data['valueType'] && !(typeof data['valueType'] === 'string' || data['valueType'] instanceof String)) {
            throw new Error("Expected the field `valueType` to be a primitive type in the JSON string but got " + data['valueType']);
        }
        // ensure the json data is a string
        if (data['versionColumnName'] && !(typeof data['versionColumnName'] === 'string' || data['versionColumnName'] instanceof String)) {
            throw new Error("Expected the field `versionColumnName` to be a primitive type in the JSON string but got " + data['versionColumnName']);
        }

        return true;
    }


}



/**
 * Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1beta1Feature.prototype['createTime'] = undefined;

/**
 * Description of the Feature.
 * @member {String} description
 */
GoogleCloudAiplatformV1beta1Feature.prototype['description'] = undefined;

/**
 * Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.
 * @member {Boolean} disableMonitoring
 */
GoogleCloudAiplatformV1beta1Feature.prototype['disableMonitoring'] = undefined;

/**
 * Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.
 * @member {String} etag
 */
GoogleCloudAiplatformV1beta1Feature.prototype['etag'] = undefined;

/**
 * Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.
 * @member {Object.<String, String>} labels
 */
GoogleCloudAiplatformV1beta1Feature.prototype['labels'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1FeaturestoreMonitoringConfig} monitoringConfig
 */
GoogleCloudAiplatformV1beta1Feature.prototype['monitoringConfig'] = undefined;

/**
 * Output only. Only applicable for Vertex AI Feature Store (Legacy). A list of historical SnapshotAnalysis stats requested by user, sorted by FeatureStatsAnomaly.start_time descending.
 * @member {Array.<module:model/GoogleCloudAiplatformV1beta1FeatureStatsAnomaly>} monitoringStats
 */
GoogleCloudAiplatformV1beta1Feature.prototype['monitoringStats'] = undefined;

/**
 * Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.
 * @member {Array.<module:model/GoogleCloudAiplatformV1beta1FeatureMonitoringStatsAnomaly>} monitoringStatsAnomalies
 */
GoogleCloudAiplatformV1beta1Feature.prototype['monitoringStatsAnomalies'] = undefined;

/**
 * Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.
 * @member {String} name
 */
GoogleCloudAiplatformV1beta1Feature.prototype['name'] = undefined;

/**
 * Entity responsible for maintaining this feature. Can be comma separated list of email addresses or URIs.
 * @member {String} pointOfContact
 */
GoogleCloudAiplatformV1beta1Feature.prototype['pointOfContact'] = undefined;

/**
 * Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.
 * @member {String} updateTime
 */
GoogleCloudAiplatformV1beta1Feature.prototype['updateTime'] = undefined;

/**
 * Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.
 * @member {module:model/GoogleCloudAiplatformV1beta1Feature.ValueTypeEnum} valueType
 */
GoogleCloudAiplatformV1beta1Feature.prototype['valueType'] = undefined;

/**
 * Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.
 * @member {String} versionColumnName
 */
GoogleCloudAiplatformV1beta1Feature.prototype['versionColumnName'] = undefined;





/**
 * Allowed values for the <code>valueType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1beta1Feature['ValueTypeEnum'] = {

    /**
     * value: "VALUE_TYPE_UNSPECIFIED"
     * @const
     */
    "VALUE_TYPE_UNSPECIFIED": "VALUE_TYPE_UNSPECIFIED",

    /**
     * value: "BOOL"
     * @const
     */
    "BOOL": "BOOL",

    /**
     * value: "BOOL_ARRAY"
     * @const
     */
    "BOOL_ARRAY": "BOOL_ARRAY",

    /**
     * value: "DOUBLE"
     * @const
     */
    "DOUBLE": "DOUBLE",

    /**
     * value: "DOUBLE_ARRAY"
     * @const
     */
    "DOUBLE_ARRAY": "DOUBLE_ARRAY",

    /**
     * value: "INT64"
     * @const
     */
    "INT64": "INT64",

    /**
     * value: "INT64_ARRAY"
     * @const
     */
    "INT64_ARRAY": "INT64_ARRAY",

    /**
     * value: "STRING"
     * @const
     */
    "STRING": "STRING",

    /**
     * value: "STRING_ARRAY"
     * @const
     */
    "STRING_ARRAY": "STRING_ARRAY",

    /**
     * value: "BYTES"
     * @const
     */
    "BYTES": "BYTES"
};



export default GoogleCloudAiplatformV1beta1Feature;

