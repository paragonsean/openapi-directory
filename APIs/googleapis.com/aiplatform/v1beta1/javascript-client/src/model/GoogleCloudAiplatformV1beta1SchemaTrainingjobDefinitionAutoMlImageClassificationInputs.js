/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter from './GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter';

/**
 * The GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs model module.
 * @module model/GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs</code>.
     * @alias module:model/GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs} The populated <code>GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs();

            if (data.hasOwnProperty('baseModelId')) {
                obj['baseModelId'] = ApiClient.convertToType(data['baseModelId'], 'String');
            }
            if (data.hasOwnProperty('budgetMilliNodeHours')) {
                obj['budgetMilliNodeHours'] = ApiClient.convertToType(data['budgetMilliNodeHours'], 'String');
            }
            if (data.hasOwnProperty('disableEarlyStopping')) {
                obj['disableEarlyStopping'] = ApiClient.convertToType(data['disableEarlyStopping'], 'Boolean');
            }
            if (data.hasOwnProperty('modelType')) {
                obj['modelType'] = ApiClient.convertToType(data['modelType'], 'String');
            }
            if (data.hasOwnProperty('multiLabel')) {
                obj['multiLabel'] = ApiClient.convertToType(data['multiLabel'], 'Boolean');
            }
            if (data.hasOwnProperty('tunableParameter')) {
                obj['tunableParameter'] = GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.constructFromObject(data['tunableParameter']);
            }
            if (data.hasOwnProperty('uptrainBaseModelId')) {
                obj['uptrainBaseModelId'] = ApiClient.convertToType(data['uptrainBaseModelId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['baseModelId'] && !(typeof data['baseModelId'] === 'string' || data['baseModelId'] instanceof String)) {
            throw new Error("Expected the field `baseModelId` to be a primitive type in the JSON string but got " + data['baseModelId']);
        }
        // ensure the json data is a string
        if (data['budgetMilliNodeHours'] && !(typeof data['budgetMilliNodeHours'] === 'string' || data['budgetMilliNodeHours'] instanceof String)) {
            throw new Error("Expected the field `budgetMilliNodeHours` to be a primitive type in the JSON string but got " + data['budgetMilliNodeHours']);
        }
        // ensure the json data is a string
        if (data['modelType'] && !(typeof data['modelType'] === 'string' || data['modelType'] instanceof String)) {
            throw new Error("Expected the field `modelType` to be a primitive type in the JSON string but got " + data['modelType']);
        }
        // validate the optional field `tunableParameter`
        if (data['tunableParameter']) { // data not null
          GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.validateJSON(data['tunableParameter']);
        }
        // ensure the json data is a string
        if (data['uptrainBaseModelId'] && !(typeof data['uptrainBaseModelId'] === 'string' || data['uptrainBaseModelId'] instanceof String)) {
            throw new Error("Expected the field `uptrainBaseModelId` to be a primitive type in the JSON string but got " + data['uptrainBaseModelId']);
        }

        return true;
    }


}



/**
 * The ID of the `base` model. If it is specified, the new model will be trained based on the `base` model. Otherwise, the new model will be trained from scratch. The `base` model must be in the same Project and Location as the new Model to train, and have the same modelType.
 * @member {String} baseModelId
 */
GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.prototype['baseModelId'] = undefined;

/**
 * The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be `model-converged`. Note, node_hour = actual_hour * number_of_nodes_involved. For modelType `cloud`(default), the budget must be between 8,000 and 800,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time, considering 8 nodes are used. For model types `mobile-tf-low-latency-1`, `mobile-tf-versatile-1`, `mobile-tf-high-accuracy-1`, the training budget must be between 1,000 and 100,000 milli node hours, inclusive. The default value is 24,000 which represents one day in wall time on a single node that is used.
 * @member {String} budgetMilliNodeHours
 */
GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.prototype['budgetMilliNodeHours'] = undefined;

/**
 * Use the entire training budget. This disables the early stopping feature. When false the early stopping feature is enabled, which means that AutoML Image Classification might stop training before the entire training budget has been used.
 * @member {Boolean} disableEarlyStopping
 */
GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.prototype['disableEarlyStopping'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.ModelTypeEnum} modelType
 */
GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.prototype['modelType'] = undefined;

/**
 * If false, a single-label (multi-class) Model will be trained (i.e. assuming that for each image just up to one annotation may be applicable). If true, a multi-label Model will be trained (i.e. assuming that for each image multiple annotations may be applicable).
 * @member {Boolean} multiLabel
 */
GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.prototype['multiLabel'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter} tunableParameter
 */
GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.prototype['tunableParameter'] = undefined;

/**
 * The ID of `base` model for upTraining. If it is specified, the new model will be upTrained based on the `base` model for upTraining. Otherwise, the new model will be trained from scratch. The `base` model for upTraining must be in the same Project and Location as the new Model to train, and have the same modelType.
 * @member {String} uptrainBaseModelId
 */
GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs.prototype['uptrainBaseModelId'] = undefined;





/**
 * Allowed values for the <code>modelType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs['ModelTypeEnum'] = {

    /**
     * value: "MODEL_TYPE_UNSPECIFIED"
     * @const
     */
    "MODEL_TYPE_UNSPECIFIED": "MODEL_TYPE_UNSPECIFIED",

    /**
     * value: "CLOUD"
     * @const
     */
    "CLOUD": "CLOUD",

    /**
     * value: "CLOUD_1"
     * @const
     */
    "CLOUD_1": "CLOUD_1",

    /**
     * value: "MOBILE_TF_LOW_LATENCY_1"
     * @const
     */
    "MOBILE_TF_LOW_LATENCY_1": "MOBILE_TF_LOW_LATENCY_1",

    /**
     * value: "MOBILE_TF_VERSATILE_1"
     * @const
     */
    "MOBILE_TF_VERSATILE_1": "MOBILE_TF_VERSATILE_1",

    /**
     * value: "MOBILE_TF_HIGH_ACCURACY_1"
     * @const
     */
    "MOBILE_TF_HIGH_ACCURACY_1": "MOBILE_TF_HIGH_ACCURACY_1",

    /**
     * value: "EFFICIENTNET"
     * @const
     */
    "EFFICIENTNET": "EFFICIENTNET",

    /**
     * value: "MAXVIT"
     * @const
     */
    "MAXVIT": "MAXVIT",

    /**
     * value: "VIT"
     * @const
     */
    "VIT": "VIT",

    /**
     * value: "COCA"
     * @const
     */
    "COCA": "COCA"
};



export default GoogleCloudAiplatformV1beta1SchemaTrainingjobDefinitionAutoMlImageClassificationInputs;

