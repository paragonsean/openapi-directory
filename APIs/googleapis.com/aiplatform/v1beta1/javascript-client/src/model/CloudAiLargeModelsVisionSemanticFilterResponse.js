/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudAiLargeModelsVisionNamedBoundingBox from './CloudAiLargeModelsVisionNamedBoundingBox';

/**
 * The CloudAiLargeModelsVisionSemanticFilterResponse model module.
 * @module model/CloudAiLargeModelsVisionSemanticFilterResponse
 * @version v1beta1
 */
class CloudAiLargeModelsVisionSemanticFilterResponse {
    /**
     * Constructs a new <code>CloudAiLargeModelsVisionSemanticFilterResponse</code>.
     * @alias module:model/CloudAiLargeModelsVisionSemanticFilterResponse
     */
    constructor() { 
        
        CloudAiLargeModelsVisionSemanticFilterResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudAiLargeModelsVisionSemanticFilterResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudAiLargeModelsVisionSemanticFilterResponse} obj Optional instance to populate.
     * @return {module:model/CloudAiLargeModelsVisionSemanticFilterResponse} The populated <code>CloudAiLargeModelsVisionSemanticFilterResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudAiLargeModelsVisionSemanticFilterResponse();

            if (data.hasOwnProperty('namedBoundingBoxes')) {
                obj['namedBoundingBoxes'] = ApiClient.convertToType(data['namedBoundingBoxes'], [CloudAiLargeModelsVisionNamedBoundingBox]);
            }
            if (data.hasOwnProperty('passedSemanticFilter')) {
                obj['passedSemanticFilter'] = ApiClient.convertToType(data['passedSemanticFilter'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudAiLargeModelsVisionSemanticFilterResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudAiLargeModelsVisionSemanticFilterResponse</code>.
     */
    static validateJSON(data) {
        if (data['namedBoundingBoxes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['namedBoundingBoxes'])) {
                throw new Error("Expected the field `namedBoundingBoxes` to be an array in the JSON data but got " + data['namedBoundingBoxes']);
            }
            // validate the optional field `namedBoundingBoxes` (array)
            for (const item of data['namedBoundingBoxes']) {
                CloudAiLargeModelsVisionNamedBoundingBox.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Class labels of the bounding boxes that failed the semantic filtering. Bounding box coordinates.
 * @member {Array.<module:model/CloudAiLargeModelsVisionNamedBoundingBox>} namedBoundingBoxes
 */
CloudAiLargeModelsVisionSemanticFilterResponse.prototype['namedBoundingBoxes'] = undefined;

/**
 * This response is added when semantic filter config is turned on in EditConfig. It reports if this image is passed semantic filter response. If passed_semantic_filter is false, the bounding box information will be populated for user to check what caused the semantic filter to fail.
 * @member {Boolean} passedSemanticFilter
 */
CloudAiLargeModelsVisionSemanticFilterResponse.prototype['passedSemanticFilter'] = undefined;






export default CloudAiLargeModelsVisionSemanticFilterResponse;

