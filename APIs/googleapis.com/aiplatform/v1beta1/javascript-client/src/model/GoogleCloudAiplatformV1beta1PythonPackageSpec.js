/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1EnvVar from './GoogleCloudAiplatformV1beta1EnvVar';

/**
 * The GoogleCloudAiplatformV1beta1PythonPackageSpec model module.
 * @module model/GoogleCloudAiplatformV1beta1PythonPackageSpec
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1PythonPackageSpec {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1PythonPackageSpec</code>.
     * The spec of a Python packaged code.
     * @alias module:model/GoogleCloudAiplatformV1beta1PythonPackageSpec
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1PythonPackageSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1PythonPackageSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1PythonPackageSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1PythonPackageSpec} The populated <code>GoogleCloudAiplatformV1beta1PythonPackageSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1PythonPackageSpec();

            if (data.hasOwnProperty('args')) {
                obj['args'] = ApiClient.convertToType(data['args'], ['String']);
            }
            if (data.hasOwnProperty('env')) {
                obj['env'] = ApiClient.convertToType(data['env'], [GoogleCloudAiplatformV1beta1EnvVar]);
            }
            if (data.hasOwnProperty('executorImageUri')) {
                obj['executorImageUri'] = ApiClient.convertToType(data['executorImageUri'], 'String');
            }
            if (data.hasOwnProperty('packageUris')) {
                obj['packageUris'] = ApiClient.convertToType(data['packageUris'], ['String']);
            }
            if (data.hasOwnProperty('pythonModule')) {
                obj['pythonModule'] = ApiClient.convertToType(data['pythonModule'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1PythonPackageSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1PythonPackageSpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['args'])) {
            throw new Error("Expected the field `args` to be an array in the JSON data but got " + data['args']);
        }
        if (data['env']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['env'])) {
                throw new Error("Expected the field `env` to be an array in the JSON data but got " + data['env']);
            }
            // validate the optional field `env` (array)
            for (const item of data['env']) {
                GoogleCloudAiplatformV1beta1EnvVar.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['executorImageUri'] && !(typeof data['executorImageUri'] === 'string' || data['executorImageUri'] instanceof String)) {
            throw new Error("Expected the field `executorImageUri` to be a primitive type in the JSON string but got " + data['executorImageUri']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['packageUris'])) {
            throw new Error("Expected the field `packageUris` to be an array in the JSON data but got " + data['packageUris']);
        }
        // ensure the json data is a string
        if (data['pythonModule'] && !(typeof data['pythonModule'] === 'string' || data['pythonModule'] instanceof String)) {
            throw new Error("Expected the field `pythonModule` to be a primitive type in the JSON string but got " + data['pythonModule']);
        }

        return true;
    }


}



/**
 * Command line arguments to be passed to the Python task.
 * @member {Array.<String>} args
 */
GoogleCloudAiplatformV1beta1PythonPackageSpec.prototype['args'] = undefined;

/**
 * Environment variables to be passed to the python module. Maximum limit is 100.
 * @member {Array.<module:model/GoogleCloudAiplatformV1beta1EnvVar>} env
 */
GoogleCloudAiplatformV1beta1PythonPackageSpec.prototype['env'] = undefined;

/**
 * Required. The URI of a container image in Artifact Registry that will run the provided Python package. Vertex AI provides a wide range of executor images with pre-installed packages to meet users' various use cases. See the list of [pre-built containers for training](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). You must use an image from this list.
 * @member {String} executorImageUri
 */
GoogleCloudAiplatformV1beta1PythonPackageSpec.prototype['executorImageUri'] = undefined;

/**
 * Required. The Google Cloud Storage location of the Python package files which are the training program and its dependent packages. The maximum number of package URIs is 100.
 * @member {Array.<String>} packageUris
 */
GoogleCloudAiplatformV1beta1PythonPackageSpec.prototype['packageUris'] = undefined;

/**
 * Required. The Python module name to run after installing the packages.
 * @member {String} pythonModule
 */
GoogleCloudAiplatformV1beta1PythonPackageSpec.prototype['pythonModule'] = undefined;






export default GoogleCloudAiplatformV1beta1PythonPackageSpec;

