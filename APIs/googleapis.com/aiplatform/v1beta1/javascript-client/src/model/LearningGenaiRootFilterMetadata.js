/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LearningGenaiRootFilterMetadataFilterDebugInfo from './LearningGenaiRootFilterMetadataFilterDebugInfo';

/**
 * The LearningGenaiRootFilterMetadata model module.
 * @module model/LearningGenaiRootFilterMetadata
 * @version v1beta1
 */
class LearningGenaiRootFilterMetadata {
    /**
     * Constructs a new <code>LearningGenaiRootFilterMetadata</code>.
     * @alias module:model/LearningGenaiRootFilterMetadata
     */
    constructor() { 
        
        LearningGenaiRootFilterMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootFilterMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootFilterMetadata} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootFilterMetadata} The populated <code>LearningGenaiRootFilterMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootFilterMetadata();

            if (data.hasOwnProperty('confidence')) {
                obj['confidence'] = ApiClient.convertToType(data['confidence'], 'String');
            }
            if (data.hasOwnProperty('debugInfo')) {
                obj['debugInfo'] = LearningGenaiRootFilterMetadataFilterDebugInfo.constructFromObject(data['debugInfo']);
            }
            if (data.hasOwnProperty('fallback')) {
                obj['fallback'] = ApiClient.convertToType(data['fallback'], 'String');
            }
            if (data.hasOwnProperty('info')) {
                obj['info'] = ApiClient.convertToType(data['info'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootFilterMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootFilterMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['confidence'] && !(typeof data['confidence'] === 'string' || data['confidence'] instanceof String)) {
            throw new Error("Expected the field `confidence` to be a primitive type in the JSON string but got " + data['confidence']);
        }
        // validate the optional field `debugInfo`
        if (data['debugInfo']) { // data not null
          LearningGenaiRootFilterMetadataFilterDebugInfo.validateJSON(data['debugInfo']);
        }
        // ensure the json data is a string
        if (data['fallback'] && !(typeof data['fallback'] === 'string' || data['fallback'] instanceof String)) {
            throw new Error("Expected the field `fallback` to be a primitive type in the JSON string but got " + data['fallback']);
        }
        // ensure the json data is a string
        if (data['info'] && !(typeof data['info'] === 'string' || data['info'] instanceof String)) {
            throw new Error("Expected the field `info` to be a primitive type in the JSON string but got " + data['info']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }

        return true;
    }


}



/**
 * Filter confidence.
 * @member {module:model/LearningGenaiRootFilterMetadata.ConfidenceEnum} confidence
 */
LearningGenaiRootFilterMetadata.prototype['confidence'] = undefined;

/**
 * @member {module:model/LearningGenaiRootFilterMetadataFilterDebugInfo} debugInfo
 */
LearningGenaiRootFilterMetadata.prototype['debugInfo'] = undefined;

/**
 * A fallback message chosen by the applied filter.
 * @member {String} fallback
 */
LearningGenaiRootFilterMetadata.prototype['fallback'] = undefined;

/**
 * Additional info for the filter.
 * @member {String} info
 */
LearningGenaiRootFilterMetadata.prototype['info'] = undefined;

/**
 * Name of the filter that triggered.
 * @member {String} name
 */
LearningGenaiRootFilterMetadata.prototype['name'] = undefined;

/**
 * Filter reason.
 * @member {module:model/LearningGenaiRootFilterMetadata.ReasonEnum} reason
 */
LearningGenaiRootFilterMetadata.prototype['reason'] = undefined;

/**
 * The input query or generated response that is getting filtered.
 * @member {String} text
 */
LearningGenaiRootFilterMetadata.prototype['text'] = undefined;





/**
 * Allowed values for the <code>confidence</code> property.
 * @enum {String}
 * @readonly
 */
LearningGenaiRootFilterMetadata['ConfidenceEnum'] = {

    /**
     * value: "FILTER_CONFIDENCE_UNKNOWN"
     * @const
     */
    "UNKNOWN": "FILTER_CONFIDENCE_UNKNOWN",

    /**
     * value: "FILTER_CONFIDENCE_VERY_LOW"
     * @const
     */
    "VERY_LOW": "FILTER_CONFIDENCE_VERY_LOW",

    /**
     * value: "FILTER_CONFIDENCE_LOW"
     * @const
     */
    "LOW": "FILTER_CONFIDENCE_LOW",

    /**
     * value: "FILTER_CONFIDENCE_MEDIUM"
     * @const
     */
    "MEDIUM": "FILTER_CONFIDENCE_MEDIUM",

    /**
     * value: "FILTER_CONFIDENCE_HIGH"
     * @const
     */
    "HIGH": "FILTER_CONFIDENCE_HIGH",

    /**
     * value: "FILTER_CONFIDENCE_VERY_HIGH"
     * @const
     */
    "VERY_HIGH": "FILTER_CONFIDENCE_VERY_HIGH"
};


/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
LearningGenaiRootFilterMetadata['ReasonEnum'] = {

    /**
     * value: "FILTER_REASON_UNKNOWN"
     * @const
     */
    "UNKNOWN": "FILTER_REASON_UNKNOWN",

    /**
     * value: "FILTER_REASON_NOT_FILTERED"
     * @const
     */
    "NOT_FILTERED": "FILTER_REASON_NOT_FILTERED",

    /**
     * value: "FILTER_REASON_SENSITIVE"
     * @const
     */
    "SENSITIVE": "FILTER_REASON_SENSITIVE",

    /**
     * value: "FILTER_REASON_RECITATION"
     * @const
     */
    "RECITATION": "FILTER_REASON_RECITATION",

    /**
     * value: "FILTER_REASON_LANGUAGE"
     * @const
     */
    "LANGUAGE": "FILTER_REASON_LANGUAGE",

    /**
     * value: "FILTER_REASON_TAKEDOWN"
     * @const
     */
    "TAKEDOWN": "FILTER_REASON_TAKEDOWN",

    /**
     * value: "FILTER_REASON_CLASSIFIER"
     * @const
     */
    "CLASSIFIER": "FILTER_REASON_CLASSIFIER",

    /**
     * value: "FILTER_REASON_EMPTY_RESPONSE"
     * @const
     */
    "EMPTY_RESPONSE": "FILTER_REASON_EMPTY_RESPONSE",

    /**
     * value: "FILTER_REASON_SIMILARITY_TAKEDOWN"
     * @const
     */
    "SIMILARITY_TAKEDOWN": "FILTER_REASON_SIMILARITY_TAKEDOWN",

    /**
     * value: "FILTER_REASON_UNSAFE"
     * @const
     */
    "UNSAFE": "FILTER_REASON_UNSAFE",

    /**
     * value: "FILTER_REASON_PAIRWISE_CLASSIFIER"
     * @const
     */
    "PAIRWISE_CLASSIFIER": "FILTER_REASON_PAIRWISE_CLASSIFIER",

    /**
     * value: "FILTER_REASON_CODEY"
     * @const
     */
    "CODEY": "FILTER_REASON_CODEY",

    /**
     * value: "FILTER_REASON_URL"
     * @const
     */
    "URL": "FILTER_REASON_URL",

    /**
     * value: "FILTER_REASON_EMAIL"
     * @const
     */
    "EMAIL": "FILTER_REASON_EMAIL",

    /**
     * value: "FILTER_REASON_SAFETY_CAT"
     * @const
     */
    "SAFETY_CAT": "FILTER_REASON_SAFETY_CAT",

    /**
     * value: "FILTER_REASON_REQUEST_RESPONSE_TAKEDOWN"
     * @const
     */
    "REQUEST_RESPONSE_TAKEDOWN": "FILTER_REASON_REQUEST_RESPONSE_TAKEDOWN",

    /**
     * value: "FILTER_REASON_RAI_PQC"
     * @const
     */
    "RAI_PQC": "FILTER_REASON_RAI_PQC",

    /**
     * value: "FILTER_REASON_ATLAS"
     * @const
     */
    "ATLAS": "FILTER_REASON_ATLAS",

    /**
     * value: "FILTER_REASON_RAI_CSAM"
     * @const
     */
    "RAI_CSAM": "FILTER_REASON_RAI_CSAM",

    /**
     * value: "FILTER_REASON_RAI_FRINGE"
     * @const
     */
    "RAI_FRINGE": "FILTER_REASON_RAI_FRINGE",

    /**
     * value: "FILTER_REASON_RAI_SPII"
     * @const
     */
    "RAI_SPII": "FILTER_REASON_RAI_SPII",

    /**
     * value: "FILTER_REASON_RAI_IMAGE_VIOLENCE"
     * @const
     */
    "RAI_IMAGE_VIOLENCE": "FILTER_REASON_RAI_IMAGE_VIOLENCE",

    /**
     * value: "FILTER_REASON_RAI_IMAGE_PORN"
     * @const
     */
    "RAI_IMAGE_PORN": "FILTER_REASON_RAI_IMAGE_PORN",

    /**
     * value: "FILTER_REASON_RAI_IMAGE_CSAM"
     * @const
     */
    "RAI_IMAGE_CSAM": "FILTER_REASON_RAI_IMAGE_CSAM",

    /**
     * value: "FILTER_REASON_RAI_IMAGE_PEDO"
     * @const
     */
    "RAI_IMAGE_PEDO": "FILTER_REASON_RAI_IMAGE_PEDO",

    /**
     * value: "FILTER_REASON_RAI_VIDEO_FRAME_VIOLENCE"
     * @const
     */
    "RAI_VIDEO_FRAME_VIOLENCE": "FILTER_REASON_RAI_VIDEO_FRAME_VIOLENCE",

    /**
     * value: "FILTER_REASON_RAI_VIDEO_FRAME_PORN"
     * @const
     */
    "RAI_VIDEO_FRAME_PORN": "FILTER_REASON_RAI_VIDEO_FRAME_PORN",

    /**
     * value: "FILTER_REASON_RAI_VIDEO_FRAME_CSAM"
     * @const
     */
    "RAI_VIDEO_FRAME_CSAM": "FILTER_REASON_RAI_VIDEO_FRAME_CSAM",

    /**
     * value: "FILTER_REASON_RAI_VIDEO_FRAME_PEDO"
     * @const
     */
    "RAI_VIDEO_FRAME_PEDO": "FILTER_REASON_RAI_VIDEO_FRAME_PEDO",

    /**
     * value: "FILTER_REASON_RAI_CONTEXTUAL_DANGEROUS"
     * @const
     */
    "RAI_CONTEXTUAL_DANGEROUS": "FILTER_REASON_RAI_CONTEXTUAL_DANGEROUS",

    /**
     * value: "FILTER_REASON_RAI_GRAIL_TEXT"
     * @const
     */
    "RAI_GRAIL_TEXT": "FILTER_REASON_RAI_GRAIL_TEXT",

    /**
     * value: "FILTER_REASON_RAI_GRAIL_IMAGE"
     * @const
     */
    "RAI_GRAIL_IMAGE": "FILTER_REASON_RAI_GRAIL_IMAGE",

    /**
     * value: "FILTER_REASON_RAI_SAFETYCAT"
     * @const
     */
    "RAI_SAFETYCAT": "FILTER_REASON_RAI_SAFETYCAT",

    /**
     * value: "FILTER_REASON_TOXICITY"
     * @const
     */
    "TOXICITY": "FILTER_REASON_TOXICITY",

    /**
     * value: "FILTER_REASON_ATLAS_PRICING"
     * @const
     */
    "ATLAS_PRICING": "FILTER_REASON_ATLAS_PRICING",

    /**
     * value: "FILTER_REASON_ATLAS_BILLING"
     * @const
     */
    "ATLAS_BILLING": "FILTER_REASON_ATLAS_BILLING",

    /**
     * value: "FILTER_REASON_ATLAS_NON_ENGLISH_QUESTION"
     * @const
     */
    "ATLAS_NON_ENGLISH_QUESTION": "FILTER_REASON_ATLAS_NON_ENGLISH_QUESTION",

    /**
     * value: "FILTER_REASON_ATLAS_NOT_RELATED_TO_GCP"
     * @const
     */
    "ATLAS_NOT_RELATED_TO_GCP": "FILTER_REASON_ATLAS_NOT_RELATED_TO_GCP",

    /**
     * value: "FILTER_REASON_ATLAS_AWS_AZURE_RELATED"
     * @const
     */
    "ATLAS_AWS_AZURE_RELATED": "FILTER_REASON_ATLAS_AWS_AZURE_RELATED"
};



export default LearningGenaiRootFilterMetadata;

