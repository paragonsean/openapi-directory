/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1BatchDedicatedResources from './GoogleCloudAiplatformV1beta1BatchDedicatedResources';
import GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig from './GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig';
import GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig from './GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig';
import GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig from './GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig';
import GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo from './GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo';
import GoogleCloudAiplatformV1beta1CompletionStats from './GoogleCloudAiplatformV1beta1CompletionStats';
import GoogleCloudAiplatformV1beta1EncryptionSpec from './GoogleCloudAiplatformV1beta1EncryptionSpec';
import GoogleCloudAiplatformV1beta1ExplanationSpec from './GoogleCloudAiplatformV1beta1ExplanationSpec';
import GoogleCloudAiplatformV1beta1ManualBatchTuningParameters from './GoogleCloudAiplatformV1beta1ManualBatchTuningParameters';
import GoogleCloudAiplatformV1beta1ModelMonitoringConfig from './GoogleCloudAiplatformV1beta1ModelMonitoringConfig';
import GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies from './GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies';
import GoogleCloudAiplatformV1beta1ResourcesConsumed from './GoogleCloudAiplatformV1beta1ResourcesConsumed';
import GoogleCloudAiplatformV1beta1UnmanagedContainerModel from './GoogleCloudAiplatformV1beta1UnmanagedContainerModel';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudAiplatformV1beta1BatchPredictionJob model module.
 * @module model/GoogleCloudAiplatformV1beta1BatchPredictionJob
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1BatchPredictionJob {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1BatchPredictionJob</code>.
     * A job that uses a Model to produce predictions on multiple input instances. If predictions for significant portion of the instances fail, the job may finish without attempting predictions for all remaining instances.
     * @alias module:model/GoogleCloudAiplatformV1beta1BatchPredictionJob
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1BatchPredictionJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1BatchPredictionJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchPredictionJob} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1BatchPredictionJob} The populated <code>GoogleCloudAiplatformV1beta1BatchPredictionJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1BatchPredictionJob();

            if (data.hasOwnProperty('completionStats')) {
                obj['completionStats'] = GoogleCloudAiplatformV1beta1CompletionStats.constructFromObject(data['completionStats']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('dedicatedResources')) {
                obj['dedicatedResources'] = GoogleCloudAiplatformV1beta1BatchDedicatedResources.constructFromObject(data['dedicatedResources']);
            }
            if (data.hasOwnProperty('disableContainerLogging')) {
                obj['disableContainerLogging'] = ApiClient.convertToType(data['disableContainerLogging'], 'Boolean');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('encryptionSpec')) {
                obj['encryptionSpec'] = GoogleCloudAiplatformV1beta1EncryptionSpec.constructFromObject(data['encryptionSpec']);
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = GoogleRpcStatus.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('explanationSpec')) {
                obj['explanationSpec'] = GoogleCloudAiplatformV1beta1ExplanationSpec.constructFromObject(data['explanationSpec']);
            }
            if (data.hasOwnProperty('generateExplanation')) {
                obj['generateExplanation'] = ApiClient.convertToType(data['generateExplanation'], 'Boolean');
            }
            if (data.hasOwnProperty('inputConfig')) {
                obj['inputConfig'] = GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig.constructFromObject(data['inputConfig']);
            }
            if (data.hasOwnProperty('instanceConfig')) {
                obj['instanceConfig'] = GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig.constructFromObject(data['instanceConfig']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('manualBatchTuningParameters')) {
                obj['manualBatchTuningParameters'] = GoogleCloudAiplatformV1beta1ManualBatchTuningParameters.constructFromObject(data['manualBatchTuningParameters']);
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('modelMonitoringConfig')) {
                obj['modelMonitoringConfig'] = GoogleCloudAiplatformV1beta1ModelMonitoringConfig.constructFromObject(data['modelMonitoringConfig']);
            }
            if (data.hasOwnProperty('modelMonitoringStatsAnomalies')) {
                obj['modelMonitoringStatsAnomalies'] = ApiClient.convertToType(data['modelMonitoringStatsAnomalies'], [GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies]);
            }
            if (data.hasOwnProperty('modelMonitoringStatus')) {
                obj['modelMonitoringStatus'] = GoogleRpcStatus.constructFromObject(data['modelMonitoringStatus']);
            }
            if (data.hasOwnProperty('modelParameters')) {
                obj['modelParameters'] = ApiClient.convertToType(data['modelParameters'], Object);
            }
            if (data.hasOwnProperty('modelVersionId')) {
                obj['modelVersionId'] = ApiClient.convertToType(data['modelVersionId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('outputConfig')) {
                obj['outputConfig'] = GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig.constructFromObject(data['outputConfig']);
            }
            if (data.hasOwnProperty('outputInfo')) {
                obj['outputInfo'] = GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo.constructFromObject(data['outputInfo']);
            }
            if (data.hasOwnProperty('partialFailures')) {
                obj['partialFailures'] = ApiClient.convertToType(data['partialFailures'], [GoogleRpcStatus]);
            }
            if (data.hasOwnProperty('resourcesConsumed')) {
                obj['resourcesConsumed'] = GoogleCloudAiplatformV1beta1ResourcesConsumed.constructFromObject(data['resourcesConsumed']);
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('unmanagedContainerModel')) {
                obj['unmanagedContainerModel'] = GoogleCloudAiplatformV1beta1UnmanagedContainerModel.constructFromObject(data['unmanagedContainerModel']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1BatchPredictionJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1BatchPredictionJob</code>.
     */
    static validateJSON(data) {
        // validate the optional field `completionStats`
        if (data['completionStats']) { // data not null
          GoogleCloudAiplatformV1beta1CompletionStats.validateJSON(data['completionStats']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `dedicatedResources`
        if (data['dedicatedResources']) { // data not null
          GoogleCloudAiplatformV1beta1BatchDedicatedResources.validateJSON(data['dedicatedResources']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `encryptionSpec`
        if (data['encryptionSpec']) { // data not null
          GoogleCloudAiplatformV1beta1EncryptionSpec.validateJSON(data['encryptionSpec']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          GoogleRpcStatus.validateJSON(data['error']);
        }
        // validate the optional field `explanationSpec`
        if (data['explanationSpec']) { // data not null
          GoogleCloudAiplatformV1beta1ExplanationSpec.validateJSON(data['explanationSpec']);
        }
        // validate the optional field `inputConfig`
        if (data['inputConfig']) { // data not null
          GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig.validateJSON(data['inputConfig']);
        }
        // validate the optional field `instanceConfig`
        if (data['instanceConfig']) { // data not null
          GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig.validateJSON(data['instanceConfig']);
        }
        // validate the optional field `manualBatchTuningParameters`
        if (data['manualBatchTuningParameters']) { // data not null
          GoogleCloudAiplatformV1beta1ManualBatchTuningParameters.validateJSON(data['manualBatchTuningParameters']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // validate the optional field `modelMonitoringConfig`
        if (data['modelMonitoringConfig']) { // data not null
          GoogleCloudAiplatformV1beta1ModelMonitoringConfig.validateJSON(data['modelMonitoringConfig']);
        }
        if (data['modelMonitoringStatsAnomalies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['modelMonitoringStatsAnomalies'])) {
                throw new Error("Expected the field `modelMonitoringStatsAnomalies` to be an array in the JSON data but got " + data['modelMonitoringStatsAnomalies']);
            }
            // validate the optional field `modelMonitoringStatsAnomalies` (array)
            for (const item of data['modelMonitoringStatsAnomalies']) {
                GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies.validateJSON(item);
            };
        }
        // validate the optional field `modelMonitoringStatus`
        if (data['modelMonitoringStatus']) { // data not null
          GoogleRpcStatus.validateJSON(data['modelMonitoringStatus']);
        }
        // ensure the json data is a string
        if (data['modelVersionId'] && !(typeof data['modelVersionId'] === 'string' || data['modelVersionId'] instanceof String)) {
            throw new Error("Expected the field `modelVersionId` to be a primitive type in the JSON string but got " + data['modelVersionId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `outputConfig`
        if (data['outputConfig']) { // data not null
          GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig.validateJSON(data['outputConfig']);
        }
        // validate the optional field `outputInfo`
        if (data['outputInfo']) { // data not null
          GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo.validateJSON(data['outputInfo']);
        }
        if (data['partialFailures']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['partialFailures'])) {
                throw new Error("Expected the field `partialFailures` to be an array in the JSON data but got " + data['partialFailures']);
            }
            // validate the optional field `partialFailures` (array)
            for (const item of data['partialFailures']) {
                GoogleRpcStatus.validateJSON(item);
            };
        }
        // validate the optional field `resourcesConsumed`
        if (data['resourcesConsumed']) { // data not null
          GoogleCloudAiplatformV1beta1ResourcesConsumed.validateJSON(data['resourcesConsumed']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `unmanagedContainerModel`
        if (data['unmanagedContainerModel']) { // data not null
          GoogleCloudAiplatformV1beta1UnmanagedContainerModel.validateJSON(data['unmanagedContainerModel']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1beta1CompletionStats} completionStats
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['completionStats'] = undefined;

/**
 * Output only. Time when the BatchPredictionJob was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['createTime'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1BatchDedicatedResources} dedicatedResources
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['dedicatedResources'] = undefined;

/**
 * For custom-trained Models and AutoML Tabular Models, the container of the DeployedModel instances will send `stderr` and `stdout` streams to Cloud Logging by default. Please note that the logs incur cost, which are subject to [Cloud Logging pricing](https://cloud.google.com/logging/pricing). User can disable container logging by setting this flag to true.
 * @member {Boolean} disableContainerLogging
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['disableContainerLogging'] = undefined;

/**
 * Required. The user-defined name of this BatchPredictionJob.
 * @member {String} displayName
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1EncryptionSpec} encryptionSpec
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['encryptionSpec'] = undefined;

/**
 * Output only. Time when the BatchPredictionJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
 * @member {String} endTime
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['endTime'] = undefined;

/**
 * @member {module:model/GoogleRpcStatus} error
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['error'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1ExplanationSpec} explanationSpec
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['explanationSpec'] = undefined;

/**
 * Generate explanation with the batch prediction results. When set to `true`, the batch prediction output changes based on the `predictions_format` field of the BatchPredictionJob.output_config object: * `bigquery`: output includes a column named `explanation`. The value is a struct that conforms to the Explanation object. * `jsonl`: The JSON objects on each line include an additional entry keyed `explanation`. The value of the entry is a JSON object that conforms to the Explanation object. * `csv`: Generating explanations for CSV format is not supported. If this field is set to true, either the Model.explanation_spec or explanation_spec must be populated.
 * @member {Boolean} generateExplanation
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['generateExplanation'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1BatchPredictionJobInputConfig} inputConfig
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['inputConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1BatchPredictionJobInstanceConfig} instanceConfig
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['instanceConfig'] = undefined;

/**
 * The labels with user-defined metadata to organize BatchPredictionJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
 * @member {Object.<String, String>} labels
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['labels'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1ManualBatchTuningParameters} manualBatchTuningParameters
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['manualBatchTuningParameters'] = undefined;

/**
 * The name of the Model resource that produces the predictions via this job, must share the same ancestor Location. Starting this job has no impact on any existing deployments of the Model and their resources. Exactly one of model and unmanaged_container_model must be set. The model resource name may contain version id or version alias to specify the version. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` if no version is specified, the default version will be deployed. The model resource could also be a publisher model. Example: `publishers/{publisher}/models/{model}` or `projects/{project}/locations/{location}/publishers/{publisher}/models/{model}`
 * @member {String} model
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['model'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1ModelMonitoringConfig} modelMonitoringConfig
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['modelMonitoringConfig'] = undefined;

/**
 * Get batch prediction job monitoring statistics.
 * @member {Array.<module:model/GoogleCloudAiplatformV1beta1ModelMonitoringStatsAnomalies>} modelMonitoringStatsAnomalies
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['modelMonitoringStatsAnomalies'] = undefined;

/**
 * @member {module:model/GoogleRpcStatus} modelMonitoringStatus
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['modelMonitoringStatus'] = undefined;

/**
 * The parameters that govern the predictions. The schema of the parameters may be specified via the Model's PredictSchemata's parameters_schema_uri.
 * @member {Object} modelParameters
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['modelParameters'] = undefined;

/**
 * Output only. The version ID of the Model that produces the predictions via this job.
 * @member {String} modelVersionId
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['modelVersionId'] = undefined;

/**
 * Output only. Resource name of the BatchPredictionJob.
 * @member {String} name
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['name'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1BatchPredictionJobOutputConfig} outputConfig
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['outputConfig'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1BatchPredictionJobOutputInfo} outputInfo
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['outputInfo'] = undefined;

/**
 * Output only. Partial failures encountered. For example, single files that can't be read. This field never exceeds 20 entries. Status details fields contain standard Google Cloud error details.
 * @member {Array.<module:model/GoogleRpcStatus>} partialFailures
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['partialFailures'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1ResourcesConsumed} resourcesConsumed
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['resourcesConsumed'] = undefined;

/**
 * The service account that the DeployedModel's container runs as. If not specified, a system generated one will be used, which has minimal permissions and the custom container, if used, may not have enough permission to access other Google Cloud resources. Users deploying the Model must have the `iam.serviceAccounts.actAs` permission on this service account.
 * @member {String} serviceAccount
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['serviceAccount'] = undefined;

/**
 * Output only. Time when the BatchPredictionJob for the first time entered the `JOB_STATE_RUNNING` state.
 * @member {String} startTime
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['startTime'] = undefined;

/**
 * Output only. The detailed state of the job.
 * @member {module:model/GoogleCloudAiplatformV1beta1BatchPredictionJob.StateEnum} state
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['state'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1UnmanagedContainerModel} unmanagedContainerModel
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['unmanagedContainerModel'] = undefined;

/**
 * Output only. Time when the BatchPredictionJob was most recently updated.
 * @member {String} updateTime
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1beta1BatchPredictionJob['StateEnum'] = {

    /**
     * value: "JOB_STATE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "JOB_STATE_UNSPECIFIED",

    /**
     * value: "JOB_STATE_QUEUED"
     * @const
     */
    "QUEUED": "JOB_STATE_QUEUED",

    /**
     * value: "JOB_STATE_PENDING"
     * @const
     */
    "PENDING": "JOB_STATE_PENDING",

    /**
     * value: "JOB_STATE_RUNNING"
     * @const
     */
    "RUNNING": "JOB_STATE_RUNNING",

    /**
     * value: "JOB_STATE_SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "JOB_STATE_SUCCEEDED",

    /**
     * value: "JOB_STATE_FAILED"
     * @const
     */
    "FAILED": "JOB_STATE_FAILED",

    /**
     * value: "JOB_STATE_CANCELLING"
     * @const
     */
    "CANCELLING": "JOB_STATE_CANCELLING",

    /**
     * value: "JOB_STATE_CANCELLED"
     * @const
     */
    "CANCELLED": "JOB_STATE_CANCELLED",

    /**
     * value: "JOB_STATE_PAUSED"
     * @const
     */
    "PAUSED": "JOB_STATE_PAUSED",

    /**
     * value: "JOB_STATE_EXPIRED"
     * @const
     */
    "EXPIRED": "JOB_STATE_EXPIRED",

    /**
     * value: "JOB_STATE_UPDATING"
     * @const
     */
    "UPDATING": "JOB_STATE_UPDATING",

    /**
     * value: "JOB_STATE_PARTIALLY_SUCCEEDED"
     * @const
     */
    "PARTIALLY_SUCCEEDED": "JOB_STATE_PARTIALLY_SUCCEEDED"
};



export default GoogleCloudAiplatformV1beta1BatchPredictionJob;

