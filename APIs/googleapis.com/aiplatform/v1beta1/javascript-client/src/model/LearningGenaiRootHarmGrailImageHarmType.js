/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LearningGenaiRootHarmGrailImageHarmType model module.
 * @module model/LearningGenaiRootHarmGrailImageHarmType
 * @version v1beta1
 */
class LearningGenaiRootHarmGrailImageHarmType {
    /**
     * Constructs a new <code>LearningGenaiRootHarmGrailImageHarmType</code>.
     * Harm type for images
     * @alias module:model/LearningGenaiRootHarmGrailImageHarmType
     */
    constructor() { 
        
        LearningGenaiRootHarmGrailImageHarmType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootHarmGrailImageHarmType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootHarmGrailImageHarmType} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootHarmGrailImageHarmType} The populated <code>LearningGenaiRootHarmGrailImageHarmType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootHarmGrailImageHarmType();

            if (data.hasOwnProperty('imageHarmType')) {
                obj['imageHarmType'] = ApiClient.convertToType(data['imageHarmType'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootHarmGrailImageHarmType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootHarmGrailImageHarmType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['imageHarmType'])) {
            throw new Error("Expected the field `imageHarmType` to be an array in the JSON data but got " + data['imageHarmType']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/LearningGenaiRootHarmGrailImageHarmType.ImageHarmTypeEnum>} imageHarmType
 */
LearningGenaiRootHarmGrailImageHarmType.prototype['imageHarmType'] = undefined;





/**
 * Allowed values for the <code>imageHarmType</code> property.
 * @enum {String}
 * @readonly
 */
LearningGenaiRootHarmGrailImageHarmType['ImageHarmTypeEnum'] = {

    /**
     * value: "IMAGE_HARM_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "IMAGE_HARM_TYPE_UNSPECIFIED",

    /**
     * value: "IMAGE_HARM_TYPE_PORN"
     * @const
     */
    "PORN": "IMAGE_HARM_TYPE_PORN",

    /**
     * value: "IMAGE_HARM_TYPE_VIOLENCE"
     * @const
     */
    "VIOLENCE": "IMAGE_HARM_TYPE_VIOLENCE",

    /**
     * value: "IMAGE_HARM_TYPE_CSAI"
     * @const
     */
    "CSAI": "IMAGE_HARM_TYPE_CSAI",

    /**
     * value: "IMAGE_HARM_TYPE_PEDO"
     * @const
     */
    "PEDO": "IMAGE_HARM_TYPE_PEDO",

    /**
     * value: "IMAGE_HARM_TYPE_MINORS"
     * @const
     */
    "MINORS": "IMAGE_HARM_TYPE_MINORS",

    /**
     * value: "IMAGE_HARM_TYPE_DANGEROUS"
     * @const
     */
    "DANGEROUS": "IMAGE_HARM_TYPE_DANGEROUS",

    /**
     * value: "IMAGE_HARM_TYPE_MEDICAL"
     * @const
     */
    "MEDICAL": "IMAGE_HARM_TYPE_MEDICAL",

    /**
     * value: "IMAGE_HARM_TYPE_RACY"
     * @const
     */
    "RACY": "IMAGE_HARM_TYPE_RACY",

    /**
     * value: "IMAGE_HARM_TYPE_OBSCENE"
     * @const
     */
    "OBSCENE": "IMAGE_HARM_TYPE_OBSCENE",

    /**
     * value: "IMAGE_HARM_TYPE_MINOR_PRESENCE"
     * @const
     */
    "MINOR_PRESENCE": "IMAGE_HARM_TYPE_MINOR_PRESENCE",

    /**
     * value: "IMAGE_HARM_TYPE_GENERATIVE_MINOR_PRESENCE"
     * @const
     */
    "GENERATIVE_MINOR_PRESENCE": "IMAGE_HARM_TYPE_GENERATIVE_MINOR_PRESENCE",

    /**
     * value: "IMAGE_HARM_TYPE_GENERATIVE_REALISTIC_VISIBLE_FACE"
     * @const
     */
    "GENERATIVE_REALISTIC_VISIBLE_FACE": "IMAGE_HARM_TYPE_GENERATIVE_REALISTIC_VISIBLE_FACE"
};



export default LearningGenaiRootHarmGrailImageHarmType;

