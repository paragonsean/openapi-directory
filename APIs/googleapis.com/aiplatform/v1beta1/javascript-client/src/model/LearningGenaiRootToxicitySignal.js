/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LearningGenaiRootToxicitySignal model module.
 * @module model/LearningGenaiRootToxicitySignal
 * @version v1beta1
 */
class LearningGenaiRootToxicitySignal {
    /**
     * Constructs a new <code>LearningGenaiRootToxicitySignal</code>.
     * Proto to capture a signal generated by the toxicity model.
     * @alias module:model/LearningGenaiRootToxicitySignal
     */
    constructor() { 
        
        LearningGenaiRootToxicitySignal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootToxicitySignal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootToxicitySignal} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootToxicitySignal} The populated <code>LearningGenaiRootToxicitySignal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootToxicitySignal();

            if (data.hasOwnProperty('allowed')) {
                obj['allowed'] = ApiClient.convertToType(data['allowed'], 'Boolean');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootToxicitySignal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootToxicitySignal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }

        return true;
    }


}



/**
 * @member {Boolean} allowed
 */
LearningGenaiRootToxicitySignal.prototype['allowed'] = undefined;

/**
 * @member {module:model/LearningGenaiRootToxicitySignal.LabelEnum} label
 */
LearningGenaiRootToxicitySignal.prototype['label'] = undefined;

/**
 * @member {Number} score
 */
LearningGenaiRootToxicitySignal.prototype['score'] = undefined;





/**
 * Allowed values for the <code>label</code> property.
 * @enum {String}
 * @readonly
 */
LearningGenaiRootToxicitySignal['LabelEnum'] = {

    /**
     * value: "LABEL_UNSPECIFIED"
     * @const
     */
    "LABEL_UNSPECIFIED": "LABEL_UNSPECIFIED",

    /**
     * value: "NOT_SENSITIVE"
     * @const
     */
    "NOT_SENSITIVE": "NOT_SENSITIVE",

    /**
     * value: "SENSITIVE"
     * @const
     */
    "SENSITIVE": "SENSITIVE",

    /**
     * value: "ACCIDENTS_DISASTERS"
     * @const
     */
    "ACCIDENTS_DISASTERS": "ACCIDENTS_DISASTERS",

    /**
     * value: "ADULT"
     * @const
     */
    "ADULT": "ADULT",

    /**
     * value: "COMPUTER_SECURITY"
     * @const
     */
    "COMPUTER_SECURITY": "COMPUTER_SECURITY",

    /**
     * value: "CONTROVERSIAL_SOCIAL_ISSUES"
     * @const
     */
    "CONTROVERSIAL_SOCIAL_ISSUES": "CONTROVERSIAL_SOCIAL_ISSUES",

    /**
     * value: "DEATH_TRAGEDY"
     * @const
     */
    "DEATH_TRAGEDY": "DEATH_TRAGEDY",

    /**
     * value: "DRUGS"
     * @const
     */
    "DRUGS": "DRUGS",

    /**
     * value: "IDENTITY_ETHNICITY"
     * @const
     */
    "IDENTITY_ETHNICITY": "IDENTITY_ETHNICITY",

    /**
     * value: "FINANCIAL_HARDSHIP"
     * @const
     */
    "FINANCIAL_HARDSHIP": "FINANCIAL_HARDSHIP",

    /**
     * value: "FIREARMS_WEAPONS"
     * @const
     */
    "FIREARMS_WEAPONS": "FIREARMS_WEAPONS",

    /**
     * value: "HEALTH"
     * @const
     */
    "HEALTH": "HEALTH",

    /**
     * value: "INSULT"
     * @const
     */
    "INSULT": "INSULT",

    /**
     * value: "LEGAL"
     * @const
     */
    "LEGAL": "LEGAL",

    /**
     * value: "MENTAL_HEALTH"
     * @const
     */
    "MENTAL_HEALTH": "MENTAL_HEALTH",

    /**
     * value: "POLITICS"
     * @const
     */
    "POLITICS": "POLITICS",

    /**
     * value: "RELIGION_BELIEFS"
     * @const
     */
    "RELIGION_BELIEFS": "RELIGION_BELIEFS",

    /**
     * value: "SAFETY"
     * @const
     */
    "SAFETY": "SAFETY",

    /**
     * value: "SELF_HARM"
     * @const
     */
    "SELF_HARM": "SELF_HARM",

    /**
     * value: "SPECIAL_NEEDS"
     * @const
     */
    "SPECIAL_NEEDS": "SPECIAL_NEEDS",

    /**
     * value: "TERRORISM"
     * @const
     */
    "TERRORISM": "TERRORISM",

    /**
     * value: "TOXIC"
     * @const
     */
    "TOXIC": "TOXIC",

    /**
     * value: "TROUBLED_RELATIONSHIP"
     * @const
     */
    "TROUBLED_RELATIONSHIP": "TROUBLED_RELATIONSHIP",

    /**
     * value: "VIOLENCE_ABUSE"
     * @const
     */
    "VIOLENCE_ABUSE": "VIOLENCE_ABUSE",

    /**
     * value: "VULGAR"
     * @const
     */
    "VULGAR": "VULGAR",

    /**
     * value: "WAR_CONFLICT"
     * @const
     */
    "WAR_CONFLICT": "WAR_CONFLICT"
};



export default LearningGenaiRootToxicitySignal;

