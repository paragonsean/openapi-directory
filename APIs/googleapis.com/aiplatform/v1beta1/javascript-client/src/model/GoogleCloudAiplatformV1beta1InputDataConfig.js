/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1BigQueryDestination from './GoogleCloudAiplatformV1beta1BigQueryDestination';
import GoogleCloudAiplatformV1beta1FilterSplit from './GoogleCloudAiplatformV1beta1FilterSplit';
import GoogleCloudAiplatformV1beta1FractionSplit from './GoogleCloudAiplatformV1beta1FractionSplit';
import GoogleCloudAiplatformV1beta1GcsDestination from './GoogleCloudAiplatformV1beta1GcsDestination';
import GoogleCloudAiplatformV1beta1PredefinedSplit from './GoogleCloudAiplatformV1beta1PredefinedSplit';
import GoogleCloudAiplatformV1beta1StratifiedSplit from './GoogleCloudAiplatformV1beta1StratifiedSplit';
import GoogleCloudAiplatformV1beta1TimestampSplit from './GoogleCloudAiplatformV1beta1TimestampSplit';

/**
 * The GoogleCloudAiplatformV1beta1InputDataConfig model module.
 * @module model/GoogleCloudAiplatformV1beta1InputDataConfig
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1InputDataConfig {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1InputDataConfig</code>.
     * Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model.
     * @alias module:model/GoogleCloudAiplatformV1beta1InputDataConfig
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1InputDataConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1InputDataConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1InputDataConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1InputDataConfig} The populated <code>GoogleCloudAiplatformV1beta1InputDataConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1InputDataConfig();

            if (data.hasOwnProperty('annotationSchemaUri')) {
                obj['annotationSchemaUri'] = ApiClient.convertToType(data['annotationSchemaUri'], 'String');
            }
            if (data.hasOwnProperty('annotationsFilter')) {
                obj['annotationsFilter'] = ApiClient.convertToType(data['annotationsFilter'], 'String');
            }
            if (data.hasOwnProperty('bigqueryDestination')) {
                obj['bigqueryDestination'] = GoogleCloudAiplatformV1beta1BigQueryDestination.constructFromObject(data['bigqueryDestination']);
            }
            if (data.hasOwnProperty('datasetId')) {
                obj['datasetId'] = ApiClient.convertToType(data['datasetId'], 'String');
            }
            if (data.hasOwnProperty('filterSplit')) {
                obj['filterSplit'] = GoogleCloudAiplatformV1beta1FilterSplit.constructFromObject(data['filterSplit']);
            }
            if (data.hasOwnProperty('fractionSplit')) {
                obj['fractionSplit'] = GoogleCloudAiplatformV1beta1FractionSplit.constructFromObject(data['fractionSplit']);
            }
            if (data.hasOwnProperty('gcsDestination')) {
                obj['gcsDestination'] = GoogleCloudAiplatformV1beta1GcsDestination.constructFromObject(data['gcsDestination']);
            }
            if (data.hasOwnProperty('persistMlUseAssignment')) {
                obj['persistMlUseAssignment'] = ApiClient.convertToType(data['persistMlUseAssignment'], 'Boolean');
            }
            if (data.hasOwnProperty('predefinedSplit')) {
                obj['predefinedSplit'] = GoogleCloudAiplatformV1beta1PredefinedSplit.constructFromObject(data['predefinedSplit']);
            }
            if (data.hasOwnProperty('savedQueryId')) {
                obj['savedQueryId'] = ApiClient.convertToType(data['savedQueryId'], 'String');
            }
            if (data.hasOwnProperty('stratifiedSplit')) {
                obj['stratifiedSplit'] = GoogleCloudAiplatformV1beta1StratifiedSplit.constructFromObject(data['stratifiedSplit']);
            }
            if (data.hasOwnProperty('timestampSplit')) {
                obj['timestampSplit'] = GoogleCloudAiplatformV1beta1TimestampSplit.constructFromObject(data['timestampSplit']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1InputDataConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1InputDataConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['annotationSchemaUri'] && !(typeof data['annotationSchemaUri'] === 'string' || data['annotationSchemaUri'] instanceof String)) {
            throw new Error("Expected the field `annotationSchemaUri` to be a primitive type in the JSON string but got " + data['annotationSchemaUri']);
        }
        // ensure the json data is a string
        if (data['annotationsFilter'] && !(typeof data['annotationsFilter'] === 'string' || data['annotationsFilter'] instanceof String)) {
            throw new Error("Expected the field `annotationsFilter` to be a primitive type in the JSON string but got " + data['annotationsFilter']);
        }
        // validate the optional field `bigqueryDestination`
        if (data['bigqueryDestination']) { // data not null
          GoogleCloudAiplatformV1beta1BigQueryDestination.validateJSON(data['bigqueryDestination']);
        }
        // ensure the json data is a string
        if (data['datasetId'] && !(typeof data['datasetId'] === 'string' || data['datasetId'] instanceof String)) {
            throw new Error("Expected the field `datasetId` to be a primitive type in the JSON string but got " + data['datasetId']);
        }
        // validate the optional field `filterSplit`
        if (data['filterSplit']) { // data not null
          GoogleCloudAiplatformV1beta1FilterSplit.validateJSON(data['filterSplit']);
        }
        // validate the optional field `fractionSplit`
        if (data['fractionSplit']) { // data not null
          GoogleCloudAiplatformV1beta1FractionSplit.validateJSON(data['fractionSplit']);
        }
        // validate the optional field `gcsDestination`
        if (data['gcsDestination']) { // data not null
          GoogleCloudAiplatformV1beta1GcsDestination.validateJSON(data['gcsDestination']);
        }
        // validate the optional field `predefinedSplit`
        if (data['predefinedSplit']) { // data not null
          GoogleCloudAiplatformV1beta1PredefinedSplit.validateJSON(data['predefinedSplit']);
        }
        // ensure the json data is a string
        if (data['savedQueryId'] && !(typeof data['savedQueryId'] === 'string' || data['savedQueryId'] instanceof String)) {
            throw new Error("Expected the field `savedQueryId` to be a primitive type in the JSON string but got " + data['savedQueryId']);
        }
        // validate the optional field `stratifiedSplit`
        if (data['stratifiedSplit']) { // data not null
          GoogleCloudAiplatformV1beta1StratifiedSplit.validateJSON(data['stratifiedSplit']);
        }
        // validate the optional field `timestampSplit`
        if (data['timestampSplit']) { // data not null
          GoogleCloudAiplatformV1beta1TimestampSplit.validateJSON(data['timestampSplit']);
        }

        return true;
    }


}



/**
 * Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri.
 * @member {String} annotationSchemaUri
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['annotationSchemaUri'] = undefined;

/**
 * Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A filter with same syntax as the one used in ListAnnotations may be used, but note here it filters across all Annotations of the Dataset, and not just within a single DataItem.
 * @member {String} annotationsFilter
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['annotationsFilter'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1BigQueryDestination} bigqueryDestination
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['bigqueryDestination'] = undefined;

/**
 * Required. The ID of the Dataset in the same Project and Location which data will be used to train the Model. The Dataset must use schema compatible with Model being trained, and what is compatible should be described in the used TrainingPipeline's training_task_definition. For tabular Datasets, all their data is exported to training, to pick and choose from.
 * @member {String} datasetId
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['datasetId'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1FilterSplit} filterSplit
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['filterSplit'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1FractionSplit} fractionSplit
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['fractionSplit'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1GcsDestination} gcsDestination
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['gcsDestination'] = undefined;

/**
 * Whether to persist the ML use assignment to data item system labels.
 * @member {Boolean} persistMlUseAssignment
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['persistMlUseAssignment'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1PredefinedSplit} predefinedSplit
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['predefinedSplit'] = undefined;

/**
 * Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type.
 * @member {String} savedQueryId
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['savedQueryId'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1StratifiedSplit} stratifiedSplit
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['stratifiedSplit'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1TimestampSplit} timestampSplit
 */
GoogleCloudAiplatformV1beta1InputDataConfig.prototype['timestampSplit'] = undefined;






export default GoogleCloudAiplatformV1beta1InputDataConfig;

