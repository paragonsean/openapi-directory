/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1GcsDestination from './GoogleCloudAiplatformV1beta1GcsDestination';
import GoogleCloudAiplatformV1beta1Scheduling from './GoogleCloudAiplatformV1beta1Scheduling';
import GoogleCloudAiplatformV1beta1WorkerPoolSpec from './GoogleCloudAiplatformV1beta1WorkerPoolSpec';

/**
 * The GoogleCloudAiplatformV1beta1CustomJobSpec model module.
 * @module model/GoogleCloudAiplatformV1beta1CustomJobSpec
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1CustomJobSpec {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1CustomJobSpec</code>.
     * Represents the spec of a CustomJob.
     * @alias module:model/GoogleCloudAiplatformV1beta1CustomJobSpec
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1CustomJobSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1CustomJobSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1CustomJobSpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1CustomJobSpec} The populated <code>GoogleCloudAiplatformV1beta1CustomJobSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1CustomJobSpec();

            if (data.hasOwnProperty('baseOutputDirectory')) {
                obj['baseOutputDirectory'] = GoogleCloudAiplatformV1beta1GcsDestination.constructFromObject(data['baseOutputDirectory']);
            }
            if (data.hasOwnProperty('enableDashboardAccess')) {
                obj['enableDashboardAccess'] = ApiClient.convertToType(data['enableDashboardAccess'], 'Boolean');
            }
            if (data.hasOwnProperty('enableWebAccess')) {
                obj['enableWebAccess'] = ApiClient.convertToType(data['enableWebAccess'], 'Boolean');
            }
            if (data.hasOwnProperty('experiment')) {
                obj['experiment'] = ApiClient.convertToType(data['experiment'], 'String');
            }
            if (data.hasOwnProperty('experimentRun')) {
                obj['experimentRun'] = ApiClient.convertToType(data['experimentRun'], 'String');
            }
            if (data.hasOwnProperty('models')) {
                obj['models'] = ApiClient.convertToType(data['models'], ['String']);
            }
            if (data.hasOwnProperty('network')) {
                obj['network'] = ApiClient.convertToType(data['network'], 'String');
            }
            if (data.hasOwnProperty('persistentResourceId')) {
                obj['persistentResourceId'] = ApiClient.convertToType(data['persistentResourceId'], 'String');
            }
            if (data.hasOwnProperty('protectedArtifactLocationId')) {
                obj['protectedArtifactLocationId'] = ApiClient.convertToType(data['protectedArtifactLocationId'], 'String');
            }
            if (data.hasOwnProperty('reservedIpRanges')) {
                obj['reservedIpRanges'] = ApiClient.convertToType(data['reservedIpRanges'], ['String']);
            }
            if (data.hasOwnProperty('scheduling')) {
                obj['scheduling'] = GoogleCloudAiplatformV1beta1Scheduling.constructFromObject(data['scheduling']);
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('tensorboard')) {
                obj['tensorboard'] = ApiClient.convertToType(data['tensorboard'], 'String');
            }
            if (data.hasOwnProperty('workerPoolSpecs')) {
                obj['workerPoolSpecs'] = ApiClient.convertToType(data['workerPoolSpecs'], [GoogleCloudAiplatformV1beta1WorkerPoolSpec]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1CustomJobSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1CustomJobSpec</code>.
     */
    static validateJSON(data) {
        // validate the optional field `baseOutputDirectory`
        if (data['baseOutputDirectory']) { // data not null
          GoogleCloudAiplatformV1beta1GcsDestination.validateJSON(data['baseOutputDirectory']);
        }
        // ensure the json data is a string
        if (data['experiment'] && !(typeof data['experiment'] === 'string' || data['experiment'] instanceof String)) {
            throw new Error("Expected the field `experiment` to be a primitive type in the JSON string but got " + data['experiment']);
        }
        // ensure the json data is a string
        if (data['experimentRun'] && !(typeof data['experimentRun'] === 'string' || data['experimentRun'] instanceof String)) {
            throw new Error("Expected the field `experimentRun` to be a primitive type in the JSON string but got " + data['experimentRun']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['models'])) {
            throw new Error("Expected the field `models` to be an array in the JSON data but got " + data['models']);
        }
        // ensure the json data is a string
        if (data['network'] && !(typeof data['network'] === 'string' || data['network'] instanceof String)) {
            throw new Error("Expected the field `network` to be a primitive type in the JSON string but got " + data['network']);
        }
        // ensure the json data is a string
        if (data['persistentResourceId'] && !(typeof data['persistentResourceId'] === 'string' || data['persistentResourceId'] instanceof String)) {
            throw new Error("Expected the field `persistentResourceId` to be a primitive type in the JSON string but got " + data['persistentResourceId']);
        }
        // ensure the json data is a string
        if (data['protectedArtifactLocationId'] && !(typeof data['protectedArtifactLocationId'] === 'string' || data['protectedArtifactLocationId'] instanceof String)) {
            throw new Error("Expected the field `protectedArtifactLocationId` to be a primitive type in the JSON string but got " + data['protectedArtifactLocationId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reservedIpRanges'])) {
            throw new Error("Expected the field `reservedIpRanges` to be an array in the JSON data but got " + data['reservedIpRanges']);
        }
        // validate the optional field `scheduling`
        if (data['scheduling']) { // data not null
          GoogleCloudAiplatformV1beta1Scheduling.validateJSON(data['scheduling']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is a string
        if (data['tensorboard'] && !(typeof data['tensorboard'] === 'string' || data['tensorboard'] instanceof String)) {
            throw new Error("Expected the field `tensorboard` to be a primitive type in the JSON string but got " + data['tensorboard']);
        }
        if (data['workerPoolSpecs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['workerPoolSpecs'])) {
                throw new Error("Expected the field `workerPoolSpecs` to be an array in the JSON data but got " + data['workerPoolSpecs']);
            }
            // validate the optional field `workerPoolSpecs` (array)
            for (const item of data['workerPoolSpecs']) {
                GoogleCloudAiplatformV1beta1WorkerPoolSpec.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1beta1GcsDestination} baseOutputDirectory
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['baseOutputDirectory'] = undefined;

/**
 * Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
 * @member {Boolean} enableDashboardAccess
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['enableDashboardAccess'] = undefined;

/**
 * Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).
 * @member {Boolean} enableWebAccess
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['enableWebAccess'] = undefined;

/**
 * Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`
 * @member {String} experiment
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['experiment'] = undefined;

/**
 * Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`
 * @member {String} experimentRun
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['experimentRun'] = undefined;

/**
 * Optional. The name of the Model resources for which to generate a mapping to artifact URIs. Applicable only to some of the Google-provided custom jobs. Format: `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific version of the model, also provide the version ID or version alias. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias is specified, the \"default\" version will be returned. The \"default\" version alias is created for the first version of the model, and can be moved to other versions later on. There will be exactly one default version.
 * @member {Array.<String>} models
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['models'] = undefined;

/**
 * Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.
 * @member {String} network
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['network'] = undefined;

/**
 * Optional. The ID of the PersistentResource in the same Project and Location which to run If this is specified, the job will be run on existing machines held by the PersistentResource instead of on-demand short-live machines. The network and CMEK configs on the job should be consistent with those on the PersistentResource, otherwise, the job will be rejected.
 * @member {String} persistentResourceId
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['persistentResourceId'] = undefined;

/**
 * The ID of the location to store protected artifacts. e.g. us-central1. Populate only when the location is different than CustomJob location. List of supported locations: https://cloud.google.com/vertex-ai/docs/general/locations
 * @member {String} protectedArtifactLocationId
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['protectedArtifactLocationId'] = undefined;

/**
 * Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].
 * @member {Array.<String>} reservedIpRanges
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['reservedIpRanges'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1Scheduling} scheduling
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['scheduling'] = undefined;

/**
 * Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used.
 * @member {String} serviceAccount
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['serviceAccount'] = undefined;

/**
 * Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 * @member {String} tensorboard
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['tensorboard'] = undefined;

/**
 * Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.
 * @member {Array.<module:model/GoogleCloudAiplatformV1beta1WorkerPoolSpec>} workerPoolSpecs
 */
GoogleCloudAiplatformV1beta1CustomJobSpec.prototype['workerPoolSpecs'] = undefined;






export default GoogleCloudAiplatformV1beta1CustomJobSpec;

