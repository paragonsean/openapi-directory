/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig from './GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig';
import GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpec from './GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpec';
import GoogleCloudAiplatformV1beta1ModelExplanation from './GoogleCloudAiplatformV1beta1ModelExplanation';

/**
 * The GoogleCloudAiplatformV1beta1ModelEvaluation model module.
 * @module model/GoogleCloudAiplatformV1beta1ModelEvaluation
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1ModelEvaluation {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1ModelEvaluation</code>.
     * A collection of metrics calculated by comparing Model&#39;s predictions on all of the test data against annotations from the test data.
     * @alias module:model/GoogleCloudAiplatformV1beta1ModelEvaluation
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1ModelEvaluation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1ModelEvaluation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1ModelEvaluation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1ModelEvaluation} The populated <code>GoogleCloudAiplatformV1beta1ModelEvaluation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1ModelEvaluation();

            if (data.hasOwnProperty('biasConfigs')) {
                obj['biasConfigs'] = GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig.constructFromObject(data['biasConfigs']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('explanationSpecs')) {
                obj['explanationSpecs'] = ApiClient.convertToType(data['explanationSpecs'], [GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpec]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], Object);
            }
            if (data.hasOwnProperty('metricsSchemaUri')) {
                obj['metricsSchemaUri'] = ApiClient.convertToType(data['metricsSchemaUri'], 'String');
            }
            if (data.hasOwnProperty('modelExplanation')) {
                obj['modelExplanation'] = GoogleCloudAiplatformV1beta1ModelExplanation.constructFromObject(data['modelExplanation']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sliceDimensions')) {
                obj['sliceDimensions'] = ApiClient.convertToType(data['sliceDimensions'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1ModelEvaluation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1ModelEvaluation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `biasConfigs`
        if (data['biasConfigs']) { // data not null
          GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig.validateJSON(data['biasConfigs']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        if (data['explanationSpecs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['explanationSpecs'])) {
                throw new Error("Expected the field `explanationSpecs` to be an array in the JSON data but got " + data['explanationSpecs']);
            }
            // validate the optional field `explanationSpecs` (array)
            for (const item of data['explanationSpecs']) {
                GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpec.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['metricsSchemaUri'] && !(typeof data['metricsSchemaUri'] === 'string' || data['metricsSchemaUri'] instanceof String)) {
            throw new Error("Expected the field `metricsSchemaUri` to be a primitive type in the JSON string but got " + data['metricsSchemaUri']);
        }
        // validate the optional field `modelExplanation`
        if (data['modelExplanation']) { // data not null
          GoogleCloudAiplatformV1beta1ModelExplanation.validateJSON(data['modelExplanation']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sliceDimensions'])) {
            throw new Error("Expected the field `sliceDimensions` to be an array in the JSON data but got " + data['sliceDimensions']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1beta1ModelEvaluationBiasConfig} biasConfigs
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['biasConfigs'] = undefined;

/**
 * Output only. Timestamp when this ModelEvaluation was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['createTime'] = undefined;

/**
 * The display name of the ModelEvaluation.
 * @member {String} displayName
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['displayName'] = undefined;

/**
 * Describes the values of ExplanationSpec that are used for explaining the predicted values on the evaluated data.
 * @member {Array.<module:model/GoogleCloudAiplatformV1beta1ModelEvaluationModelEvaluationExplanationSpec>} explanationSpecs
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['explanationSpecs'] = undefined;

/**
 * The metadata of the ModelEvaluation. For the ModelEvaluation uploaded from Managed Pipeline, metadata contains a structured value with keys of \"pipeline_job_id\", \"evaluation_dataset_type\", \"evaluation_dataset_path\", \"row_based_metrics_path\".
 * @member {Object} metadata
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['metadata'] = undefined;

/**
 * Evaluation metrics of the Model. The schema of the metrics is stored in metrics_schema_uri
 * @member {Object} metrics
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['metrics'] = undefined;

/**
 * Points to a YAML file stored on Google Cloud Storage describing the metrics of this ModelEvaluation. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject).
 * @member {String} metricsSchemaUri
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['metricsSchemaUri'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1ModelExplanation} modelExplanation
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['modelExplanation'] = undefined;

/**
 * Output only. The resource name of the ModelEvaluation.
 * @member {String} name
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['name'] = undefined;

/**
 * All possible dimensions of ModelEvaluationSlices. The dimensions can be used as the filter of the ModelService.ListModelEvaluationSlices request, in the form of `slice.dimension = `.
 * @member {Array.<String>} sliceDimensions
 */
GoogleCloudAiplatformV1beta1ModelEvaluation.prototype['sliceDimensions'] = undefined;






export default GoogleCloudAiplatformV1beta1ModelEvaluation;

