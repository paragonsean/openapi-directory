/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1FeatureNoiseSigma from './GoogleCloudAiplatformV1beta1FeatureNoiseSigma';

/**
 * The GoogleCloudAiplatformV1beta1SmoothGradConfig model module.
 * @module model/GoogleCloudAiplatformV1beta1SmoothGradConfig
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1SmoothGradConfig {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1SmoothGradConfig</code>.
     * Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
     * @alias module:model/GoogleCloudAiplatformV1beta1SmoothGradConfig
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1SmoothGradConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1SmoothGradConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1SmoothGradConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1SmoothGradConfig} The populated <code>GoogleCloudAiplatformV1beta1SmoothGradConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1SmoothGradConfig();

            if (data.hasOwnProperty('featureNoiseSigma')) {
                obj['featureNoiseSigma'] = GoogleCloudAiplatformV1beta1FeatureNoiseSigma.constructFromObject(data['featureNoiseSigma']);
            }
            if (data.hasOwnProperty('noiseSigma')) {
                obj['noiseSigma'] = ApiClient.convertToType(data['noiseSigma'], 'Number');
            }
            if (data.hasOwnProperty('noisySampleCount')) {
                obj['noisySampleCount'] = ApiClient.convertToType(data['noisySampleCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1SmoothGradConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1SmoothGradConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `featureNoiseSigma`
        if (data['featureNoiseSigma']) { // data not null
          GoogleCloudAiplatformV1beta1FeatureNoiseSigma.validateJSON(data['featureNoiseSigma']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1beta1FeatureNoiseSigma} featureNoiseSigma
 */
GoogleCloudAiplatformV1beta1SmoothGradConfig.prototype['featureNoiseSigma'] = undefined;

/**
 * This is a single float value and will be used to add noise to all the features. Use this field when all features are normalized to have the same distribution: scale to range [0, 1], [-1, 1] or z-scoring, where features are normalized to have 0-mean and 1-variance. Learn more about [normalization](https://developers.google.com/machine-learning/data-prep/transform/normalization). For best results the recommended value is about 10% - 20% of the standard deviation of the input feature. Refer to section 3.2 of the SmoothGrad paper: https://arxiv.org/pdf/1706.03825.pdf. Defaults to 0.1. If the distribution is different per feature, set feature_noise_sigma instead for each feature.
 * @member {Number} noiseSigma
 */
GoogleCloudAiplatformV1beta1SmoothGradConfig.prototype['noiseSigma'] = undefined;

/**
 * The number of gradient samples to use for approximation. The higher this number, the more accurate the gradient is, but the runtime complexity increases by this factor as well. Valid range of its value is [1, 50]. Defaults to 3.
 * @member {Number} noisySampleCount
 */
GoogleCloudAiplatformV1beta1SmoothGradConfig.prototype['noisySampleCount'] = undefined;






export default GoogleCloudAiplatformV1beta1SmoothGradConfig;

