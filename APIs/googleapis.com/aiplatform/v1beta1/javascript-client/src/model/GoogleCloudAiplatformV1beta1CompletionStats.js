/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudAiplatformV1beta1CompletionStats model module.
 * @module model/GoogleCloudAiplatformV1beta1CompletionStats
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1CompletionStats {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1CompletionStats</code>.
     * Success and error statistics of processing multiple entities (for example, DataItems or structured data rows) in batch.
     * @alias module:model/GoogleCloudAiplatformV1beta1CompletionStats
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1CompletionStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1CompletionStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1CompletionStats} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1CompletionStats} The populated <code>GoogleCloudAiplatformV1beta1CompletionStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1CompletionStats();

            if (data.hasOwnProperty('failedCount')) {
                obj['failedCount'] = ApiClient.convertToType(data['failedCount'], 'String');
            }
            if (data.hasOwnProperty('incompleteCount')) {
                obj['incompleteCount'] = ApiClient.convertToType(data['incompleteCount'], 'String');
            }
            if (data.hasOwnProperty('successfulCount')) {
                obj['successfulCount'] = ApiClient.convertToType(data['successfulCount'], 'String');
            }
            if (data.hasOwnProperty('successfulForecastPointCount')) {
                obj['successfulForecastPointCount'] = ApiClient.convertToType(data['successfulForecastPointCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1CompletionStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1CompletionStats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['failedCount'] && !(typeof data['failedCount'] === 'string' || data['failedCount'] instanceof String)) {
            throw new Error("Expected the field `failedCount` to be a primitive type in the JSON string but got " + data['failedCount']);
        }
        // ensure the json data is a string
        if (data['incompleteCount'] && !(typeof data['incompleteCount'] === 'string' || data['incompleteCount'] instanceof String)) {
            throw new Error("Expected the field `incompleteCount` to be a primitive type in the JSON string but got " + data['incompleteCount']);
        }
        // ensure the json data is a string
        if (data['successfulCount'] && !(typeof data['successfulCount'] === 'string' || data['successfulCount'] instanceof String)) {
            throw new Error("Expected the field `successfulCount` to be a primitive type in the JSON string but got " + data['successfulCount']);
        }
        // ensure the json data is a string
        if (data['successfulForecastPointCount'] && !(typeof data['successfulForecastPointCount'] === 'string' || data['successfulForecastPointCount'] instanceof String)) {
            throw new Error("Expected the field `successfulForecastPointCount` to be a primitive type in the JSON string but got " + data['successfulForecastPointCount']);
        }

        return true;
    }


}



/**
 * Output only. The number of entities for which any error was encountered.
 * @member {String} failedCount
 */
GoogleCloudAiplatformV1beta1CompletionStats.prototype['failedCount'] = undefined;

/**
 * Output only. In cases when enough errors are encountered a job, pipeline, or operation may be failed as a whole. Below is the number of entities for which the processing had not been finished (either in successful or failed state). Set to -1 if the number is unknown (for example, the operation failed before the total entity number could be collected).
 * @member {String} incompleteCount
 */
GoogleCloudAiplatformV1beta1CompletionStats.prototype['incompleteCount'] = undefined;

/**
 * Output only. The number of entities that had been processed successfully.
 * @member {String} successfulCount
 */
GoogleCloudAiplatformV1beta1CompletionStats.prototype['successfulCount'] = undefined;

/**
 * Output only. The number of the successful forecast points that are generated by the forecasting model. This is ONLY used by the forecasting batch prediction.
 * @member {String} successfulForecastPointCount
 */
GoogleCloudAiplatformV1beta1CompletionStats.prototype['successfulForecastPointCount'] = undefined;






export default GoogleCloudAiplatformV1beta1CompletionStats;

