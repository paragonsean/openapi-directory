/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudAiplatformV1beta1MetadataSchema model module.
 * @module model/GoogleCloudAiplatformV1beta1MetadataSchema
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1MetadataSchema {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1MetadataSchema</code>.
     * Instance of a general MetadataSchema.
     * @alias module:model/GoogleCloudAiplatformV1beta1MetadataSchema
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1MetadataSchema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1MetadataSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1MetadataSchema} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1MetadataSchema} The populated <code>GoogleCloudAiplatformV1beta1MetadataSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1MetadataSchema();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], 'String');
            }
            if (data.hasOwnProperty('schemaType')) {
                obj['schemaType'] = ApiClient.convertToType(data['schemaType'], 'String');
            }
            if (data.hasOwnProperty('schemaVersion')) {
                obj['schemaVersion'] = ApiClient.convertToType(data['schemaVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1MetadataSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1MetadataSchema</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['schema'] && !(typeof data['schema'] === 'string' || data['schema'] instanceof String)) {
            throw new Error("Expected the field `schema` to be a primitive type in the JSON string but got " + data['schema']);
        }
        // ensure the json data is a string
        if (data['schemaType'] && !(typeof data['schemaType'] === 'string' || data['schemaType'] instanceof String)) {
            throw new Error("Expected the field `schemaType` to be a primitive type in the JSON string but got " + data['schemaType']);
        }
        // ensure the json data is a string
        if (data['schemaVersion'] && !(typeof data['schemaVersion'] === 'string' || data['schemaVersion'] instanceof String)) {
            throw new Error("Expected the field `schemaVersion` to be a primitive type in the JSON string but got " + data['schemaVersion']);
        }

        return true;
    }


}



/**
 * Output only. Timestamp when this MetadataSchema was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1beta1MetadataSchema.prototype['createTime'] = undefined;

/**
 * Description of the Metadata Schema
 * @member {String} description
 */
GoogleCloudAiplatformV1beta1MetadataSchema.prototype['description'] = undefined;

/**
 * Output only. The resource name of the MetadataSchema.
 * @member {String} name
 */
GoogleCloudAiplatformV1beta1MetadataSchema.prototype['name'] = undefined;

/**
 * Required. The raw YAML string representation of the MetadataSchema. The combination of [MetadataSchema.version] and the schema name given by `title` in [MetadataSchema.schema] must be unique within a MetadataStore. The schema is defined as an OpenAPI 3.0.2 [MetadataSchema Object](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#schemaObject)
 * @member {String} schema
 */
GoogleCloudAiplatformV1beta1MetadataSchema.prototype['schema'] = undefined;

/**
 * The type of the MetadataSchema. This is a property that identifies which metadata types will use the MetadataSchema.
 * @member {module:model/GoogleCloudAiplatformV1beta1MetadataSchema.SchemaTypeEnum} schemaType
 */
GoogleCloudAiplatformV1beta1MetadataSchema.prototype['schemaType'] = undefined;

/**
 * The version of the MetadataSchema. The version's format must match the following regular expression: `^[0-9]+.+.+$`, which would allow to order/compare different versions. Example: 1.0.0, 1.0.1, etc.
 * @member {String} schemaVersion
 */
GoogleCloudAiplatformV1beta1MetadataSchema.prototype['schemaVersion'] = undefined;





/**
 * Allowed values for the <code>schemaType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1beta1MetadataSchema['SchemaTypeEnum'] = {

    /**
     * value: "METADATA_SCHEMA_TYPE_UNSPECIFIED"
     * @const
     */
    "METADATA_SCHEMA_TYPE_UNSPECIFIED": "METADATA_SCHEMA_TYPE_UNSPECIFIED",

    /**
     * value: "ARTIFACT_TYPE"
     * @const
     */
    "ARTIFACT_TYPE": "ARTIFACT_TYPE",

    /**
     * value: "EXECUTION_TYPE"
     * @const
     */
    "EXECUTION_TYPE": "EXECUTION_TYPE",

    /**
     * value: "CONTEXT_TYPE"
     * @const
     */
    "CONTEXT_TYPE": "CONTEXT_TYPE"
};



export default GoogleCloudAiplatformV1beta1MetadataSchema;

