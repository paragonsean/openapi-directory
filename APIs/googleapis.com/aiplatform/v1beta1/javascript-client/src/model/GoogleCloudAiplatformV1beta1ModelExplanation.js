/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1Attribution from './GoogleCloudAiplatformV1beta1Attribution';

/**
 * The GoogleCloudAiplatformV1beta1ModelExplanation model module.
 * @module model/GoogleCloudAiplatformV1beta1ModelExplanation
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1ModelExplanation {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1ModelExplanation</code>.
     * Aggregated explanation metrics for a Model over a set of instances.
     * @alias module:model/GoogleCloudAiplatformV1beta1ModelExplanation
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1ModelExplanation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1ModelExplanation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1ModelExplanation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1ModelExplanation} The populated <code>GoogleCloudAiplatformV1beta1ModelExplanation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1ModelExplanation();

            if (data.hasOwnProperty('meanAttributions')) {
                obj['meanAttributions'] = ApiClient.convertToType(data['meanAttributions'], [GoogleCloudAiplatformV1beta1Attribution]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1ModelExplanation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1ModelExplanation</code>.
     */
    static validateJSON(data) {
        if (data['meanAttributions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['meanAttributions'])) {
                throw new Error("Expected the field `meanAttributions` to be an array in the JSON data but got " + data['meanAttributions']);
            }
            // validate the optional field `meanAttributions` (array)
            for (const item of data['meanAttributions']) {
                GoogleCloudAiplatformV1beta1Attribution.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. Aggregated attributions explaining the Model's prediction outputs over the set of instances. The attributions are grouped by outputs. For Models that predict only one output, such as regression Models that predict only one score, there is only one attibution that explains the predicted output. For Models that predict multiple outputs, such as multiclass Models that predict multiple classes, each element explains one specific item. Attribution.output_index can be used to identify which output this attribution is explaining. The baselineOutputValue, instanceOutputValue and featureAttributions fields are averaged over the test data. NOTE: Currently AutoML tabular classification Models produce only one attribution, which averages attributions over all the classes it predicts. Attribution.approximation_error is not populated.
 * @member {Array.<module:model/GoogleCloudAiplatformV1beta1Attribution>} meanAttributions
 */
GoogleCloudAiplatformV1beta1ModelExplanation.prototype['meanAttributions'] = undefined;






export default GoogleCloudAiplatformV1beta1ModelExplanation;

