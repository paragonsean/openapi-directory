/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1Trial from './GoogleCloudAiplatformV1beta1Trial';

/**
 * The GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse model module.
 * @module model/GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse</code>.
     * Response message for VizierService.ListOptimalTrials.
     * @alias module:model/GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse} The populated <code>GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse();

            if (data.hasOwnProperty('optimalTrials')) {
                obj['optimalTrials'] = ApiClient.convertToType(data['optimalTrials'], [GoogleCloudAiplatformV1beta1Trial]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse</code>.
     */
    static validateJSON(data) {
        if (data['optimalTrials']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['optimalTrials'])) {
                throw new Error("Expected the field `optimalTrials` to be an array in the JSON data but got " + data['optimalTrials']);
            }
            // validate the optional field `optimalTrials` (array)
            for (const item of data['optimalTrials']) {
                GoogleCloudAiplatformV1beta1Trial.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The pareto-optimal Trials for multiple objective Study or the optimal trial for single objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
 * @member {Array.<module:model/GoogleCloudAiplatformV1beta1Trial>} optimalTrials
 */
GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse.prototype['optimalTrials'] = undefined;






export default GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse;

