/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1beta1RayMetricSpec from './GoogleCloudAiplatformV1beta1RayMetricSpec';

/**
 * The GoogleCloudAiplatformV1beta1RaySpec model module.
 * @module model/GoogleCloudAiplatformV1beta1RaySpec
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1RaySpec {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1RaySpec</code>.
     * Configuration information for the Ray cluster. For experimental launch, Ray cluster creation and Persistent cluster creation are 1:1 mapping: We will provision all the nodes within the Persistent cluster as Ray nodes.
     * @alias module:model/GoogleCloudAiplatformV1beta1RaySpec
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1RaySpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1RaySpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1RaySpec} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1RaySpec} The populated <code>GoogleCloudAiplatformV1beta1RaySpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1RaySpec();

            if (data.hasOwnProperty('headNodeResourcePoolId')) {
                obj['headNodeResourcePoolId'] = ApiClient.convertToType(data['headNodeResourcePoolId'], 'String');
            }
            if (data.hasOwnProperty('imageUri')) {
                obj['imageUri'] = ApiClient.convertToType(data['imageUri'], 'String');
            }
            if (data.hasOwnProperty('rayMetricSpec')) {
                obj['rayMetricSpec'] = GoogleCloudAiplatformV1beta1RayMetricSpec.constructFromObject(data['rayMetricSpec']);
            }
            if (data.hasOwnProperty('resourcePoolImages')) {
                obj['resourcePoolImages'] = ApiClient.convertToType(data['resourcePoolImages'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1RaySpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1RaySpec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['headNodeResourcePoolId'] && !(typeof data['headNodeResourcePoolId'] === 'string' || data['headNodeResourcePoolId'] instanceof String)) {
            throw new Error("Expected the field `headNodeResourcePoolId` to be a primitive type in the JSON string but got " + data['headNodeResourcePoolId']);
        }
        // ensure the json data is a string
        if (data['imageUri'] && !(typeof data['imageUri'] === 'string' || data['imageUri'] instanceof String)) {
            throw new Error("Expected the field `imageUri` to be a primitive type in the JSON string but got " + data['imageUri']);
        }
        // validate the optional field `rayMetricSpec`
        if (data['rayMetricSpec']) { // data not null
          GoogleCloudAiplatformV1beta1RayMetricSpec.validateJSON(data['rayMetricSpec']);
        }

        return true;
    }


}



/**
 * Optional. This will be used to indicate which resource pool will serve as the Ray head node(the first node within that pool). Will use the machine from the first workerpool as the head node by default if this field isn't set.
 * @member {String} headNodeResourcePoolId
 */
GoogleCloudAiplatformV1beta1RaySpec.prototype['headNodeResourcePoolId'] = undefined;

/**
 * Optional. Default image for user to choose a preferred ML framework (for example, TensorFlow or Pytorch) by choosing from [Vertex prebuilt images](https://cloud.google.com/vertex-ai/docs/training/pre-built-containers). Either this or the resource_pool_images is required. Use this field if you need all the resource pools to have the same Ray image. Otherwise, use the {@code resource_pool_images} field.
 * @member {String} imageUri
 */
GoogleCloudAiplatformV1beta1RaySpec.prototype['imageUri'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1beta1RayMetricSpec} rayMetricSpec
 */
GoogleCloudAiplatformV1beta1RaySpec.prototype['rayMetricSpec'] = undefined;

/**
 * Optional. Required if image_uri isn't set. A map of resource_pool_id to prebuild Ray image if user need to use different images for different head/worker pools. This map needs to cover all the resource pool ids. Example: { \"ray_head_node_pool\": \"head image\" \"ray_worker_node_pool1\": \"worker image\" \"ray_worker_node_pool2\": \"another worker image\" }
 * @member {Object.<String, String>} resourcePoolImages
 */
GoogleCloudAiplatformV1beta1RaySpec.prototype['resourcePoolImages'] = undefined;






export default GoogleCloudAiplatformV1beta1RaySpec;

