/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudAiplatformV1beta1TimestampSplit model module.
 * @module model/GoogleCloudAiplatformV1beta1TimestampSplit
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1TimestampSplit {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1TimestampSplit</code>.
     * Assigns input data to training, validation, and test sets based on a provided timestamps. The youngest data pieces are assigned to training set, next to validation set, and the oldest to the test set. Supported only for tabular Datasets.
     * @alias module:model/GoogleCloudAiplatformV1beta1TimestampSplit
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1TimestampSplit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1TimestampSplit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1TimestampSplit} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1TimestampSplit} The populated <code>GoogleCloudAiplatformV1beta1TimestampSplit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1TimestampSplit();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('testFraction')) {
                obj['testFraction'] = ApiClient.convertToType(data['testFraction'], 'Number');
            }
            if (data.hasOwnProperty('trainingFraction')) {
                obj['trainingFraction'] = ApiClient.convertToType(data['trainingFraction'], 'Number');
            }
            if (data.hasOwnProperty('validationFraction')) {
                obj['validationFraction'] = ApiClient.convertToType(data['validationFraction'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1TimestampSplit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1TimestampSplit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }

        return true;
    }


}



/**
 * Required. The key is a name of one of the Dataset's data columns. The values of the key (the values in the column) must be in RFC 3339 `date-time` format, where `time-offset` = `\"Z\"` (e.g. 1985-04-12T23:20:50.52Z). If for a piece of data the key is not present or has an invalid value, that piece is ignored by the pipeline.
 * @member {String} key
 */
GoogleCloudAiplatformV1beta1TimestampSplit.prototype['key'] = undefined;

/**
 * The fraction of the input data that is to be used to evaluate the Model.
 * @member {Number} testFraction
 */
GoogleCloudAiplatformV1beta1TimestampSplit.prototype['testFraction'] = undefined;

/**
 * The fraction of the input data that is to be used to train the Model.
 * @member {Number} trainingFraction
 */
GoogleCloudAiplatformV1beta1TimestampSplit.prototype['trainingFraction'] = undefined;

/**
 * The fraction of the input data that is to be used to validate the Model.
 * @member {Number} validationFraction
 */
GoogleCloudAiplatformV1beta1TimestampSplit.prototype['validationFraction'] = undefined;






export default GoogleCloudAiplatformV1beta1TimestampSplit;

