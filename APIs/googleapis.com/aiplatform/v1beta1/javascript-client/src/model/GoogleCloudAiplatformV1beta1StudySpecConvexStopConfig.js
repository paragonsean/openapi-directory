/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig model module.
 * @module model/GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig
 * @version v1beta1
 */
class GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig</code>.
     * Configuration for ConvexStopPolicy.
     * @alias module:model/GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig
     */
    constructor() { 
        
        GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig} The populated <code>GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig();

            if (data.hasOwnProperty('autoregressiveOrder')) {
                obj['autoregressiveOrder'] = ApiClient.convertToType(data['autoregressiveOrder'], 'String');
            }
            if (data.hasOwnProperty('learningRateParameterName')) {
                obj['learningRateParameterName'] = ApiClient.convertToType(data['learningRateParameterName'], 'String');
            }
            if (data.hasOwnProperty('maxNumSteps')) {
                obj['maxNumSteps'] = ApiClient.convertToType(data['maxNumSteps'], 'String');
            }
            if (data.hasOwnProperty('minNumSteps')) {
                obj['minNumSteps'] = ApiClient.convertToType(data['minNumSteps'], 'String');
            }
            if (data.hasOwnProperty('useSeconds')) {
                obj['useSeconds'] = ApiClient.convertToType(data['useSeconds'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['autoregressiveOrder'] && !(typeof data['autoregressiveOrder'] === 'string' || data['autoregressiveOrder'] instanceof String)) {
            throw new Error("Expected the field `autoregressiveOrder` to be a primitive type in the JSON string but got " + data['autoregressiveOrder']);
        }
        // ensure the json data is a string
        if (data['learningRateParameterName'] && !(typeof data['learningRateParameterName'] === 'string' || data['learningRateParameterName'] instanceof String)) {
            throw new Error("Expected the field `learningRateParameterName` to be a primitive type in the JSON string but got " + data['learningRateParameterName']);
        }
        // ensure the json data is a string
        if (data['maxNumSteps'] && !(typeof data['maxNumSteps'] === 'string' || data['maxNumSteps'] instanceof String)) {
            throw new Error("Expected the field `maxNumSteps` to be a primitive type in the JSON string but got " + data['maxNumSteps']);
        }
        // ensure the json data is a string
        if (data['minNumSteps'] && !(typeof data['minNumSteps'] === 'string' || data['minNumSteps'] instanceof String)) {
            throw new Error("Expected the field `minNumSteps` to be a primitive type in the JSON string but got " + data['minNumSteps']);
        }

        return true;
    }


}



/**
 * The number of Trial measurements used in autoregressive model for value prediction. A trial won't be considered early stopping if has fewer measurement points.
 * @member {String} autoregressiveOrder
 */
GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.prototype['autoregressiveOrder'] = undefined;

/**
 * The hyper-parameter name used in the tuning job that stands for learning rate. Leave it blank if learning rate is not in a parameter in tuning. The learning_rate is used to estimate the objective value of the ongoing trial.
 * @member {String} learningRateParameterName
 */
GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.prototype['learningRateParameterName'] = undefined;

/**
 * Steps used in predicting the final objective for early stopped trials. In general, it's set to be the same as the defined steps in training / tuning. When use_steps is false, this field is set to the maximum elapsed seconds.
 * @member {String} maxNumSteps
 */
GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.prototype['maxNumSteps'] = undefined;

/**
 * Minimum number of steps for a trial to complete. Trials which do not have a measurement with num_steps > min_num_steps won't be considered for early stopping. It's ok to set it to 0, and a trial can be early stopped at any stage. By default, min_num_steps is set to be one-tenth of the max_num_steps. When use_steps is false, this field is set to the minimum elapsed seconds.
 * @member {String} minNumSteps
 */
GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.prototype['minNumSteps'] = undefined;

/**
 * This bool determines whether or not the rule is applied based on elapsed_secs or steps. If use_seconds==false, the early stopping decision is made according to the predicted objective values according to the target steps. If use_seconds==true, elapsed_secs is used instead of steps. Also, in this case, the parameters max_num_steps and min_num_steps are overloaded to contain max_elapsed_seconds and min_elapsed_seconds.
 * @member {Boolean} useSeconds
 */
GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig.prototype['useSeconds'] = undefined;






export default GoogleCloudAiplatformV1beta1StudySpecConvexStopConfig;

