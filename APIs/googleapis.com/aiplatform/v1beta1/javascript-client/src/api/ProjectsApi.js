/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleApiHttpBody from '../model/GoogleApiHttpBody';
import GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest from '../model/GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest';
import GoogleCloudAiplatformV1beta1AddContextChildrenRequest from '../model/GoogleCloudAiplatformV1beta1AddContextChildrenRequest';
import GoogleCloudAiplatformV1beta1AddExecutionEventsRequest from '../model/GoogleCloudAiplatformV1beta1AddExecutionEventsRequest';
import GoogleCloudAiplatformV1beta1AddTrialMeasurementRequest from '../model/GoogleCloudAiplatformV1beta1AddTrialMeasurementRequest';
import GoogleCloudAiplatformV1beta1Artifact from '../model/GoogleCloudAiplatformV1beta1Artifact';
import GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequest from '../model/GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequest';
import GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest from '../model/GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest';
import GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequest from '../model/GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequest';
import GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest from '../model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest';
import GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse from '../model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse';
import GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest from '../model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest';
import GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse from '../model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse';
import GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest from '../model/GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest';
import GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest from '../model/GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest';
import GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse from '../model/GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse';
import GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequest from '../model/GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequest';
import GoogleCloudAiplatformV1beta1BatchPredictionJob from '../model/GoogleCloudAiplatformV1beta1BatchPredictionJob';
import GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequest from '../model/GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequest';
import GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse from '../model/GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse';
import GoogleCloudAiplatformV1beta1CompleteTrialRequest from '../model/GoogleCloudAiplatformV1beta1CompleteTrialRequest';
import GoogleCloudAiplatformV1beta1ComputeTokensRequest from '../model/GoogleCloudAiplatformV1beta1ComputeTokensRequest';
import GoogleCloudAiplatformV1beta1ComputeTokensResponse from '../model/GoogleCloudAiplatformV1beta1ComputeTokensResponse';
import GoogleCloudAiplatformV1beta1Context from '../model/GoogleCloudAiplatformV1beta1Context';
import GoogleCloudAiplatformV1beta1CopyModelRequest from '../model/GoogleCloudAiplatformV1beta1CopyModelRequest';
import GoogleCloudAiplatformV1beta1CountTokensRequest from '../model/GoogleCloudAiplatformV1beta1CountTokensRequest';
import GoogleCloudAiplatformV1beta1CountTokensResponse from '../model/GoogleCloudAiplatformV1beta1CountTokensResponse';
import GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest from '../model/GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest';
import GoogleCloudAiplatformV1beta1CustomJob from '../model/GoogleCloudAiplatformV1beta1CustomJob';
import GoogleCloudAiplatformV1beta1DataLabelingJob from '../model/GoogleCloudAiplatformV1beta1DataLabelingJob';
import GoogleCloudAiplatformV1beta1Dataset from '../model/GoogleCloudAiplatformV1beta1Dataset';
import GoogleCloudAiplatformV1beta1DatasetVersion from '../model/GoogleCloudAiplatformV1beta1DatasetVersion';
import GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequest from '../model/GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequest';
import GoogleCloudAiplatformV1beta1DeployIndexRequest from '../model/GoogleCloudAiplatformV1beta1DeployIndexRequest';
import GoogleCloudAiplatformV1beta1DeployModelRequest from '../model/GoogleCloudAiplatformV1beta1DeployModelRequest';
import GoogleCloudAiplatformV1beta1DeployedIndex from '../model/GoogleCloudAiplatformV1beta1DeployedIndex';
import GoogleCloudAiplatformV1beta1DirectPredictRequest from '../model/GoogleCloudAiplatformV1beta1DirectPredictRequest';
import GoogleCloudAiplatformV1beta1DirectPredictResponse from '../model/GoogleCloudAiplatformV1beta1DirectPredictResponse';
import GoogleCloudAiplatformV1beta1DirectRawPredictRequest from '../model/GoogleCloudAiplatformV1beta1DirectRawPredictRequest';
import GoogleCloudAiplatformV1beta1DirectRawPredictResponse from '../model/GoogleCloudAiplatformV1beta1DirectRawPredictResponse';
import GoogleCloudAiplatformV1beta1Endpoint from '../model/GoogleCloudAiplatformV1beta1Endpoint';
import GoogleCloudAiplatformV1beta1EntityType from '../model/GoogleCloudAiplatformV1beta1EntityType';
import GoogleCloudAiplatformV1beta1Execution from '../model/GoogleCloudAiplatformV1beta1Execution';
import GoogleCloudAiplatformV1beta1ExplainRequest from '../model/GoogleCloudAiplatformV1beta1ExplainRequest';
import GoogleCloudAiplatformV1beta1ExplainResponse from '../model/GoogleCloudAiplatformV1beta1ExplainResponse';
import GoogleCloudAiplatformV1beta1ExportFeatureValuesRequest from '../model/GoogleCloudAiplatformV1beta1ExportFeatureValuesRequest';
import GoogleCloudAiplatformV1beta1ExportModelRequest from '../model/GoogleCloudAiplatformV1beta1ExportModelRequest';
import GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest from '../model/GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest';
import GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse from '../model/GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse';
import GoogleCloudAiplatformV1beta1Feature from '../model/GoogleCloudAiplatformV1beta1Feature';
import GoogleCloudAiplatformV1beta1FeatureGroup from '../model/GoogleCloudAiplatformV1beta1FeatureGroup';
import GoogleCloudAiplatformV1beta1FeatureOnlineStore from '../model/GoogleCloudAiplatformV1beta1FeatureOnlineStore';
import GoogleCloudAiplatformV1beta1FeatureView from '../model/GoogleCloudAiplatformV1beta1FeatureView';
import GoogleCloudAiplatformV1beta1Featurestore from '../model/GoogleCloudAiplatformV1beta1Featurestore';
import GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest from '../model/GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest';
import GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse from '../model/GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse';
import GoogleCloudAiplatformV1beta1FindNeighborsRequest from '../model/GoogleCloudAiplatformV1beta1FindNeighborsRequest';
import GoogleCloudAiplatformV1beta1FindNeighborsResponse from '../model/GoogleCloudAiplatformV1beta1FindNeighborsResponse';
import GoogleCloudAiplatformV1beta1GenerateAccessTokenRequest from '../model/GoogleCloudAiplatformV1beta1GenerateAccessTokenRequest';
import GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse from '../model/GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse';
import GoogleCloudAiplatformV1beta1GenerateContentRequest from '../model/GoogleCloudAiplatformV1beta1GenerateContentRequest';
import GoogleCloudAiplatformV1beta1GenerateContentResponse from '../model/GoogleCloudAiplatformV1beta1GenerateContentResponse';
import GoogleCloudAiplatformV1beta1HyperparameterTuningJob from '../model/GoogleCloudAiplatformV1beta1HyperparameterTuningJob';
import GoogleCloudAiplatformV1beta1ImportDataRequest from '../model/GoogleCloudAiplatformV1beta1ImportDataRequest';
import GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest from '../model/GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest';
import GoogleCloudAiplatformV1beta1ImportModelEvaluationRequest from '../model/GoogleCloudAiplatformV1beta1ImportModelEvaluationRequest';
import GoogleCloudAiplatformV1beta1Index from '../model/GoogleCloudAiplatformV1beta1Index';
import GoogleCloudAiplatformV1beta1IndexEndpoint from '../model/GoogleCloudAiplatformV1beta1IndexEndpoint';
import GoogleCloudAiplatformV1beta1LineageSubgraph from '../model/GoogleCloudAiplatformV1beta1LineageSubgraph';
import GoogleCloudAiplatformV1beta1ListAnnotationsResponse from '../model/GoogleCloudAiplatformV1beta1ListAnnotationsResponse';
import GoogleCloudAiplatformV1beta1ListArtifactsResponse from '../model/GoogleCloudAiplatformV1beta1ListArtifactsResponse';
import GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse from '../model/GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse';
import GoogleCloudAiplatformV1beta1ListContextsResponse from '../model/GoogleCloudAiplatformV1beta1ListContextsResponse';
import GoogleCloudAiplatformV1beta1ListCustomJobsResponse from '../model/GoogleCloudAiplatformV1beta1ListCustomJobsResponse';
import GoogleCloudAiplatformV1beta1ListDataItemsResponse from '../model/GoogleCloudAiplatformV1beta1ListDataItemsResponse';
import GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse from '../model/GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse';
import GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse from '../model/GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse';
import GoogleCloudAiplatformV1beta1ListDatasetsResponse from '../model/GoogleCloudAiplatformV1beta1ListDatasetsResponse';
import GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse from '../model/GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse';
import GoogleCloudAiplatformV1beta1ListEndpointsResponse from '../model/GoogleCloudAiplatformV1beta1ListEndpointsResponse';
import GoogleCloudAiplatformV1beta1ListEntityTypesResponse from '../model/GoogleCloudAiplatformV1beta1ListEntityTypesResponse';
import GoogleCloudAiplatformV1beta1ListExecutionsResponse from '../model/GoogleCloudAiplatformV1beta1ListExecutionsResponse';
import GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse from '../model/GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse';
import GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse from '../model/GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse';
import GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse from '../model/GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse';
import GoogleCloudAiplatformV1beta1ListFeatureViewsResponse from '../model/GoogleCloudAiplatformV1beta1ListFeatureViewsResponse';
import GoogleCloudAiplatformV1beta1ListFeaturesResponse from '../model/GoogleCloudAiplatformV1beta1ListFeaturesResponse';
import GoogleCloudAiplatformV1beta1ListFeaturestoresResponse from '../model/GoogleCloudAiplatformV1beta1ListFeaturestoresResponse';
import GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse from '../model/GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse';
import GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse from '../model/GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse';
import GoogleCloudAiplatformV1beta1ListIndexesResponse from '../model/GoogleCloudAiplatformV1beta1ListIndexesResponse';
import GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse from '../model/GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse';
import GoogleCloudAiplatformV1beta1ListMetadataStoresResponse from '../model/GoogleCloudAiplatformV1beta1ListMetadataStoresResponse';
import GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse from '../model/GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse';
import GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse from '../model/GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse';
import GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse from '../model/GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse';
import GoogleCloudAiplatformV1beta1ListModelVersionsResponse from '../model/GoogleCloudAiplatformV1beta1ListModelVersionsResponse';
import GoogleCloudAiplatformV1beta1ListNasJobsResponse from '../model/GoogleCloudAiplatformV1beta1ListNasJobsResponse';
import GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse from '../model/GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse';
import GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse from '../model/GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse';
import GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse from '../model/GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse';
import GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse from '../model/GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse';
import GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse from '../model/GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse';
import GoogleCloudAiplatformV1beta1ListPipelineJobsResponse from '../model/GoogleCloudAiplatformV1beta1ListPipelineJobsResponse';
import GoogleCloudAiplatformV1beta1ListSavedQueriesResponse from '../model/GoogleCloudAiplatformV1beta1ListSavedQueriesResponse';
import GoogleCloudAiplatformV1beta1ListSchedulesResponse from '../model/GoogleCloudAiplatformV1beta1ListSchedulesResponse';
import GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse from '../model/GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse';
import GoogleCloudAiplatformV1beta1ListStudiesResponse from '../model/GoogleCloudAiplatformV1beta1ListStudiesResponse';
import GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse from '../model/GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse';
import GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse from '../model/GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse';
import GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse from '../model/GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse';
import GoogleCloudAiplatformV1beta1ListTensorboardsResponse from '../model/GoogleCloudAiplatformV1beta1ListTensorboardsResponse';
import GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse from '../model/GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse';
import GoogleCloudAiplatformV1beta1ListTrialsResponse from '../model/GoogleCloudAiplatformV1beta1ListTrialsResponse';
import GoogleCloudAiplatformV1beta1LookupStudyRequest from '../model/GoogleCloudAiplatformV1beta1LookupStudyRequest';
import GoogleCloudAiplatformV1beta1MergeVersionAliasesRequest from '../model/GoogleCloudAiplatformV1beta1MergeVersionAliasesRequest';
import GoogleCloudAiplatformV1beta1MetadataSchema from '../model/GoogleCloudAiplatformV1beta1MetadataSchema';
import GoogleCloudAiplatformV1beta1MetadataStore from '../model/GoogleCloudAiplatformV1beta1MetadataStore';
import GoogleCloudAiplatformV1beta1Model from '../model/GoogleCloudAiplatformV1beta1Model';
import GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob from '../model/GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob';
import GoogleCloudAiplatformV1beta1ModelEvaluation from '../model/GoogleCloudAiplatformV1beta1ModelEvaluation';
import GoogleCloudAiplatformV1beta1MutateDeployedModelRequest from '../model/GoogleCloudAiplatformV1beta1MutateDeployedModelRequest';
import GoogleCloudAiplatformV1beta1NasJob from '../model/GoogleCloudAiplatformV1beta1NasJob';
import GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate from '../model/GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate';
import GoogleCloudAiplatformV1beta1PersistentResource from '../model/GoogleCloudAiplatformV1beta1PersistentResource';
import GoogleCloudAiplatformV1beta1PipelineJob from '../model/GoogleCloudAiplatformV1beta1PipelineJob';
import GoogleCloudAiplatformV1beta1PredictRequest from '../model/GoogleCloudAiplatformV1beta1PredictRequest';
import GoogleCloudAiplatformV1beta1PredictResponse from '../model/GoogleCloudAiplatformV1beta1PredictResponse';
import GoogleCloudAiplatformV1beta1PurgeArtifactsRequest from '../model/GoogleCloudAiplatformV1beta1PurgeArtifactsRequest';
import GoogleCloudAiplatformV1beta1PurgeContextsRequest from '../model/GoogleCloudAiplatformV1beta1PurgeContextsRequest';
import GoogleCloudAiplatformV1beta1PurgeExecutionsRequest from '../model/GoogleCloudAiplatformV1beta1PurgeExecutionsRequest';
import GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse from '../model/GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse';
import GoogleCloudAiplatformV1beta1RawPredictRequest from '../model/GoogleCloudAiplatformV1beta1RawPredictRequest';
import GoogleCloudAiplatformV1beta1ReadFeatureValuesRequest from '../model/GoogleCloudAiplatformV1beta1ReadFeatureValuesRequest';
import GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse from '../model/GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse';
import GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequest from '../model/GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequest';
import GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse from '../model/GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse';
import GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse from '../model/GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse';
import GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse from '../model/GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse';
import GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse from '../model/GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse';
import GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse from '../model/GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse';
import GoogleCloudAiplatformV1beta1RemoveContextChildrenRequest from '../model/GoogleCloudAiplatformV1beta1RemoveContextChildrenRequest';
import GoogleCloudAiplatformV1beta1RemoveDatapointsRequest from '../model/GoogleCloudAiplatformV1beta1RemoveDatapointsRequest';
import GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest from '../model/GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest';
import GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse from '../model/GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse';
import GoogleCloudAiplatformV1beta1ResumeScheduleRequest from '../model/GoogleCloudAiplatformV1beta1ResumeScheduleRequest';
import GoogleCloudAiplatformV1beta1Schedule from '../model/GoogleCloudAiplatformV1beta1Schedule';
import GoogleCloudAiplatformV1beta1SearchDataItemsResponse from '../model/GoogleCloudAiplatformV1beta1SearchDataItemsResponse';
import GoogleCloudAiplatformV1beta1SearchFeaturesResponse from '../model/GoogleCloudAiplatformV1beta1SearchFeaturesResponse';
import GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequest from '../model/GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequest';
import GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse from '../model/GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse';
import GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest from '../model/GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest';
import GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse from '../model/GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse';
import GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequest from '../model/GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequest';
import GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse from '../model/GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse';
import GoogleCloudAiplatformV1beta1SpecialistPool from '../model/GoogleCloudAiplatformV1beta1SpecialistPool';
import GoogleCloudAiplatformV1beta1StreamingPredictRequest from '../model/GoogleCloudAiplatformV1beta1StreamingPredictRequest';
import GoogleCloudAiplatformV1beta1StreamingPredictResponse from '../model/GoogleCloudAiplatformV1beta1StreamingPredictResponse';
import GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest from '../model/GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest';
import GoogleCloudAiplatformV1beta1Study from '../model/GoogleCloudAiplatformV1beta1Study';
import GoogleCloudAiplatformV1beta1SuggestTrialsRequest from '../model/GoogleCloudAiplatformV1beta1SuggestTrialsRequest';
import GoogleCloudAiplatformV1beta1SyncFeatureViewResponse from '../model/GoogleCloudAiplatformV1beta1SyncFeatureViewResponse';
import GoogleCloudAiplatformV1beta1Tensorboard from '../model/GoogleCloudAiplatformV1beta1Tensorboard';
import GoogleCloudAiplatformV1beta1TensorboardExperiment from '../model/GoogleCloudAiplatformV1beta1TensorboardExperiment';
import GoogleCloudAiplatformV1beta1TensorboardRun from '../model/GoogleCloudAiplatformV1beta1TensorboardRun';
import GoogleCloudAiplatformV1beta1TensorboardTimeSeries from '../model/GoogleCloudAiplatformV1beta1TensorboardTimeSeries';
import GoogleCloudAiplatformV1beta1TrainingPipeline from '../model/GoogleCloudAiplatformV1beta1TrainingPipeline';
import GoogleCloudAiplatformV1beta1Trial from '../model/GoogleCloudAiplatformV1beta1Trial';
import GoogleCloudAiplatformV1beta1UndeployIndexRequest from '../model/GoogleCloudAiplatformV1beta1UndeployIndexRequest';
import GoogleCloudAiplatformV1beta1UndeployModelRequest from '../model/GoogleCloudAiplatformV1beta1UndeployModelRequest';
import GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequest from '../model/GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequest';
import GoogleCloudAiplatformV1beta1UploadModelRequest from '../model/GoogleCloudAiplatformV1beta1UploadModelRequest';
import GoogleCloudAiplatformV1beta1UpsertDatapointsRequest from '../model/GoogleCloudAiplatformV1beta1UpsertDatapointsRequest';
import GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest from '../model/GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest';
import GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest from '../model/GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest';
import GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest from '../model/GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest';
import GoogleCloudLocationListLocationsResponse from '../model/GoogleCloudLocationListLocationsResponse';
import GoogleIamV1GetIamPolicyRequest from '../model/GoogleIamV1GetIamPolicyRequest';
import GoogleIamV1Policy from '../model/GoogleIamV1Policy';
import GoogleIamV1SetIamPolicyRequest from '../model/GoogleIamV1SetIamPolicyRequest';
import GoogleIamV1TestIamPermissionsRequest from '../model/GoogleIamV1TestIamPermissionsRequest';
import GoogleIamV1TestIamPermissionsResponse from '../model/GoogleIamV1TestIamPermissionsResponse';
import GoogleLongrunningListOperationsResponse from '../model/GoogleLongrunningListOperationsResponse';
import GoogleLongrunningOperation from '../model/GoogleLongrunningOperation';

/**
* Projects service.
* @module api/ProjectsApi
* @version v1beta1
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsBatchPredictionJobsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsBatchPredictionJobsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchPredictionJob} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a BatchPredictionJob. A BatchPredictionJob once created will right away be attempted to start.
     * @param {String} parent Required. The resource name of the Location to create the BatchPredictionJob in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchPredictionJob} [googleCloudAiplatformV1beta1BatchPredictionJob] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsBatchPredictionJobsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1BatchPredictionJob}
     */
    aiplatformProjectsLocationsBatchPredictionJobsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1BatchPredictionJob'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsBatchPredictionJobsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1BatchPredictionJob;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/batchPredictionJobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsBatchPredictionJobsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsBatchPredictionJobsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists BatchPredictionJobs in a Location.
     * @param {String} parent Required. The resource name of the Location to list the BatchPredictionJobs from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `model_display_name` supports `=`, `!=` comparisons. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListBatchPredictionJobsResponse.next_page_token of the previous JobService.ListBatchPredictionJobs call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsBatchPredictionJobsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse}
     */
    aiplatformProjectsLocationsBatchPredictionJobsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsBatchPredictionJobsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListBatchPredictionJobsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/batchPredictionJobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsCustomJobsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsCustomJobsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1CustomJob} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a CustomJob. A created CustomJob right away will be attempted to be run.
     * @param {String} parent Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1CustomJob} [googleCloudAiplatformV1beta1CustomJob] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsCustomJobsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1CustomJob}
     */
    aiplatformProjectsLocationsCustomJobsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1CustomJob'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsCustomJobsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1CustomJob;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/customJobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsCustomJobsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsCustomJobsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListCustomJobsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists CustomJobs in a Location.
     * @param {String} parent Required. The resource name of the Location to list the CustomJobs from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListCustomJobsResponse.next_page_token of the previous JobService.ListCustomJobs call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsCustomJobsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListCustomJobsResponse}
     */
    aiplatformProjectsLocationsCustomJobsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsCustomJobsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListCustomJobsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/customJobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDataLabelingJobsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDataLabelingJobsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1DataLabelingJob} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a DataLabelingJob.
     * @param {String} parent Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1DataLabelingJob} [googleCloudAiplatformV1beta1DataLabelingJob] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDataLabelingJobsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1DataLabelingJob}
     */
    aiplatformProjectsLocationsDataLabelingJobsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1DataLabelingJob'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDataLabelingJobsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1DataLabelingJob;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/dataLabelingJobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDataLabelingJobsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDataLabelingJobsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists DataLabelingJobs in a Location.
     * @param {String} parent Required. The parent of the DataLabelingJob. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order by default. Use `desc` after a field name for descending.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {String} [readMask] Mask specifying which fields to read. FieldMask represents a set of symbolic field paths. For example, the mask can be `paths: \"name\"`. The \"name\" here is a field in DataLabelingJob. If this field is not set, all fields of the DataLabelingJob are returned.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDataLabelingJobsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse}
     */
    aiplatformProjectsLocationsDataLabelingJobsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDataLabelingJobsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListDataLabelingJobsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/dataLabelingJobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Dataset.
     * @param {String} parent Required. The resource name of the Location to create the Dataset in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1Dataset} [googleCloudAiplatformV1beta1Dataset] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsDatasetsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Dataset'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDatasetsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/datasets', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsDataItemsAnnotationsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDataItemsAnnotationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListAnnotationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Annotations belongs to a dataitem
     * @param {String} parent Required. The resource name of the DataItem to list Annotations from. Format: `projects/{project}/locations/{location}/datasets/{dataset}/dataItems/{data_item}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter.
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDataItemsAnnotationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListAnnotationsResponse}
     */
    aiplatformProjectsLocationsDatasetsDataItemsAnnotationsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDatasetsDataItemsAnnotationsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListAnnotationsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/annotations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsDataItemsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDataItemsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListDataItemsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists DataItems in a Dataset.
     * @param {String} parent Required. The resource name of the Dataset to list DataItems from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter.
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDataItemsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListDataItemsResponse}
     */
    aiplatformProjectsLocationsDatasetsDataItemsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDatasetsDataItemsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListDataItemsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/dataItems', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsDatasetVersionsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDatasetVersionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a version from a Dataset.
     * @param {String} parent Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1DatasetVersion} [googleCloudAiplatformV1beta1DatasetVersion] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDatasetVersionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsDatasetsDatasetVersionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1DatasetVersion'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDatasetsDatasetVersionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/datasetVersions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsDatasetVersionsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDatasetVersionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists DatasetVersions in a Dataset.
     * @param {String} parent Required. The resource name of the Dataset to list DatasetVersions from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. The standard list filter.
     * @param {String} [orderBy] Optional. A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.
     * @param {Number} [pageSize] Optional. The standard list page size.
     * @param {String} [pageToken] Optional. The standard list page token.
     * @param {String} [readMask] Optional. Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDatasetVersionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse}
     */
    aiplatformProjectsLocationsDatasetsDatasetVersionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDatasetsDatasetVersionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListDatasetVersionsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/datasetVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsDatasetVersionsRestore operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDatasetVersionsRestoreCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Restores a dataset version.
     * @param {String} name Required. The name of the DatasetVersion resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}/datasetVersions/{dataset_version}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsDatasetVersionsRestoreCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsDatasetsDatasetVersionsRestore(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsDatasetsDatasetVersionsRestore");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{name}:restore', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsImport operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsImportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Imports data into a Dataset.
     * @param {String} name Required. The name of the Dataset resource. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ImportDataRequest} [googleCloudAiplatformV1beta1ImportDataRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsImportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsDatasetsImport(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ImportDataRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsDatasetsImport");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{name}:import', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListDatasetsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Datasets in a Location.
     * @param {String} parent Required. The name of the Dataset's parent resource. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `display_name`: supports = and != * `metadata_schema_uri`: supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"`
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time`
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListDatasetsResponse}
     */
    aiplatformProjectsLocationsDatasetsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDatasetsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListDatasetsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/datasets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsSavedQueriesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsSavedQueriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListSavedQueriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists SavedQueries in a Dataset.
     * @param {String} parent Required. The resource name of the Dataset to list SavedQueries from. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter.
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsSavedQueriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListSavedQueriesResponse}
     */
    aiplatformProjectsLocationsDatasetsSavedQueriesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDatasetsSavedQueriesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListSavedQueriesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/savedQueries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDatasetsSearchDataItems operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsSearchDataItemsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1SearchDataItemsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Searches DataItems in a Dataset.
     * @param {String} dataset Required. The resource name of the Dataset from which to search DataItems. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Array.<String>} [annotationFilters] An expression that specifies what Annotations will be returned per DataItem. Annotations satisfied either of the conditions will be returned. * `annotation_spec_id` - for = or !=. Must specify `saved_query_id=` - saved query id that annotations should belong to.
     * @param {String} [annotationsFilter] An expression for filtering the Annotations that will be returned per DataItem. * `annotation_spec_id` - for = or !=.
     * @param {Number} [annotationsLimit] If set, only up to this many of Annotations will be returned per DataItemView. The maximum value is 1000. If not set, the maximum value will be used.
     * @param {String} [dataItemFilter] An expression for filtering the DataItem that will be returned. * `data_item_id` - for = or !=. * `labeled` - for = or !=. * `has_annotation(ANNOTATION_SPEC_ID)` - true only for DataItem that have at least one annotation with annotation_spec_id = `ANNOTATION_SPEC_ID` in the context of SavedQuery or DataLabelingJob. For example: * `data_item=1` * `has_annotation(5)`
     * @param {String} [dataLabelingJob] The resource name of a DataLabelingJob. Format: `projects/{project}/locations/{location}/dataLabelingJobs/{data_labeling_job}` If this field is set, all of the search will be done in the context of this DataLabelingJob.
     * @param {String} [fieldMask] Mask specifying which fields of DataItemView to read.
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.
     * @param {String} [orderByAnnotationOrderBy] A comma-separated list of annotation fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Must also specify saved_query.
     * @param {String} [orderByAnnotationSavedQuery] Required. Saved query of the Annotation. Only Annotations belong to this saved query will be considered for ordering.
     * @param {String} [orderByDataItem] A comma-separated list of data item fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending.
     * @param {Number} [pageSize] Requested page size. Server may return fewer results than requested. Default and maximum page size is 100.
     * @param {String} [pageToken] A token identifying a page of results for the server to return Typically obtained via SearchDataItemsResponse.next_page_token of the previous DatasetService.SearchDataItems call.
     * @param {String} [savedQuery] The resource name of a SavedQuery(annotation set in UI). Format: `projects/{project}/locations/{location}/datasets/{dataset}/savedQueries/{saved_query}` All of the search will be done in the context of this SavedQuery.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDatasetsSearchDataItemsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1SearchDataItemsResponse}
     */
    aiplatformProjectsLocationsDatasetsSearchDataItems(dataset, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling aiplatformProjectsLocationsDatasetsSearchDataItems");
      }

      let pathParams = {
        'dataset': dataset
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'annotationFilters': this.apiClient.buildCollectionParam(opts['annotationFilters'], 'multi'),
        'annotationsFilter': opts['annotationsFilter'],
        'annotationsLimit': opts['annotationsLimit'],
        'dataItemFilter': opts['dataItemFilter'],
        'dataLabelingJob': opts['dataLabelingJob'],
        'fieldMask': opts['fieldMask'],
        'orderBy': opts['orderBy'],
        'orderByAnnotation.orderBy': opts['orderByAnnotationOrderBy'],
        'orderByAnnotation.savedQuery': opts['orderByAnnotationSavedQuery'],
        'orderByDataItem': opts['orderByDataItem'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'savedQuery': opts['savedQuery']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1SearchDataItemsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{dataset}:searchDataItems', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDeploymentResourcePoolsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDeploymentResourcePoolsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a DeploymentResourcePool.
     * @param {String} parent Required. The parent location resource where this DeploymentResourcePool will be created. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest} [googleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDeploymentResourcePoolsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsDeploymentResourcePoolsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1CreateDeploymentResourcePoolRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDeploymentResourcePoolsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/deploymentResourcePools', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDeploymentResourcePoolsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDeploymentResourcePoolsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List DeploymentResourcePools in a location.
     * @param {String} parent Required. The parent Location which owns this collection of DeploymentResourcePools. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of DeploymentResourcePools to return. The service may return fewer than this value.
     * @param {String} [pageToken] A page token, received from a previous `ListDeploymentResourcePools` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListDeploymentResourcePools` must match the call that provided the page token.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDeploymentResourcePoolsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse}
     */
    aiplatformProjectsLocationsDeploymentResourcePoolsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsDeploymentResourcePoolsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListDeploymentResourcePoolsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/deploymentResourcePools', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsDeploymentResourcePoolsQueryDeployedModels operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsDeploymentResourcePoolsQueryDeployedModelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List DeployedModels that have been deployed on this DeploymentResourcePool.
     * @param {String} deploymentResourcePool Required. The name of the target DeploymentResourcePool to query. Format: `projects/{project}/locations/{location}/deploymentResourcePools/{deployment_resource_pool}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of DeployedModels to return. The service may return fewer than this value.
     * @param {String} [pageToken] A page token, received from a previous `QueryDeployedModels` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `QueryDeployedModels` must match the call that provided the page token.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsDeploymentResourcePoolsQueryDeployedModelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse}
     */
    aiplatformProjectsLocationsDeploymentResourcePoolsQueryDeployedModels(deploymentResourcePool, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'deploymentResourcePool' is set
      if (deploymentResourcePool === undefined || deploymentResourcePool === null) {
        throw new Error("Missing the required parameter 'deploymentResourcePool' when calling aiplatformProjectsLocationsDeploymentResourcePoolsQueryDeployedModels");
      }

      let pathParams = {
        'deploymentResourcePool': deploymentResourcePool
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1QueryDeployedModelsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{deploymentResourcePool}:queryDeployedModels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsEndpointsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Endpoint.
     * @param {String} parent Required. The resource name of the Location to create the Endpoint in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [endpointId] Immutable. The ID to use for endpoint, which will become the final component of the endpoint resource name. If not provided, Vertex AI will generate a value for this ID. If the first character is a letter, this value may be up to 63 characters, and valid characters are `[a-z0-9-]`. The last character must be a letter or number. If the first character is a number, this value may be up to 9 characters, and valid characters are `[0-9]` with no leading zeros. When using HTTP/JSON, this field is populated based on a query string argument, such as `?endpoint_id=12345`. This is the fallback for fields that are not included in either the URI or the body.
     * @param {module:model/GoogleCloudAiplatformV1beta1Endpoint} [googleCloudAiplatformV1beta1Endpoint] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsEndpointsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Endpoint'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsEndpointsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'endpointId': opts['endpointId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/endpoints', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsEndpointsDeployModel operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsDeployModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deploys a Model into this Endpoint, creating a DeployedModel within it.
     * @param {String} endpoint Required. The name of the Endpoint resource into which to deploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1DeployModelRequest} [googleCloudAiplatformV1beta1DeployModelRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsDeployModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsEndpointsDeployModel(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1DeployModelRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsEndpointsDeployModel");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:deployModel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsEndpointsDirectPredict operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsDirectPredictCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1DirectPredictResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform an unary online prediction request to a gRPC model server for Vertex first-party products and frameworks.
     * @param {String} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1DirectPredictRequest} [googleCloudAiplatformV1beta1DirectPredictRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsDirectPredictCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1DirectPredictResponse}
     */
    aiplatformProjectsLocationsEndpointsDirectPredict(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1DirectPredictRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsEndpointsDirectPredict");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1DirectPredictResponse;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:directPredict', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsEndpointsDirectRawPredict operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsDirectRawPredictCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1DirectRawPredictResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform an unary online prediction request to a gRPC model server for custom containers.
     * @param {String} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1DirectRawPredictRequest} [googleCloudAiplatformV1beta1DirectRawPredictRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsDirectRawPredictCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1DirectRawPredictResponse}
     */
    aiplatformProjectsLocationsEndpointsDirectRawPredict(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1DirectRawPredictRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsEndpointsDirectRawPredict");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1DirectRawPredictResponse;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:directRawPredict', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsEndpointsExplain operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsExplainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ExplainResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform an online explanation. If deployed_model_id is specified, the corresponding DeployModel must have explanation_spec populated. If deployed_model_id is not specified, all DeployedModels must have explanation_spec populated.
     * @param {String} endpoint Required. The name of the Endpoint requested to serve the explanation. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ExplainRequest} [googleCloudAiplatformV1beta1ExplainRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsExplainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ExplainResponse}
     */
    aiplatformProjectsLocationsEndpointsExplain(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ExplainRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsEndpointsExplain");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ExplainResponse;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:explain', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsEndpointsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListEndpointsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Endpoints in a Location.
     * @param {String} parent Required. The resource name of the Location from which to list the Endpoints. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `endpoint` supports = and !=. `endpoint` represents the Endpoint ID, i.e. the last segment of the Endpoint's resource name. * `display_name` supports = and, != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `endpoint=1` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"`
     * @param {Number} [pageSize] Optional. The standard list page size.
     * @param {String} [pageToken] Optional. The standard list page token. Typically obtained via ListEndpointsResponse.next_page_token of the previous EndpointService.ListEndpoints call.
     * @param {String} [readMask] Optional. Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListEndpointsResponse}
     */
    aiplatformProjectsLocationsEndpointsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsEndpointsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListEndpointsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/endpoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsEndpointsMutateDeployedModel operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsMutateDeployedModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing deployed model. Updatable fields include `min_replica_count`, `max_replica_count`, `autoscaling_metric_specs`, `disable_container_logging` (v1 only), and `enable_container_logging` (v1beta1 only).
     * @param {String} endpoint Required. The name of the Endpoint resource into which to mutate a DeployedModel. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1MutateDeployedModelRequest} [googleCloudAiplatformV1beta1MutateDeployedModelRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsMutateDeployedModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsEndpointsMutateDeployedModel(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1MutateDeployedModelRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsEndpointsMutateDeployedModel");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:mutateDeployedModel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsEndpointsUndeployModel operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsUndeployModelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Undeploys a Model from an Endpoint, removing a DeployedModel from it, and freeing all resources it's using.
     * @param {String} endpoint Required. The name of the Endpoint resource from which to undeploy a Model. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1UndeployModelRequest} [googleCloudAiplatformV1beta1UndeployModelRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsEndpointsUndeployModelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsEndpointsUndeployModel(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1UndeployModelRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsEndpointsUndeployModel");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:undeployModel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureGroupsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureGroupsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new FeatureGroup in a given project and location.
     * @param {String} parent Required. The resource name of the Location to create FeatureGroups. Format: `projects/{project}/locations/{location}'`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [featureGroupId] Required. The ID to use for this FeatureGroup, which will become the final component of the FeatureGroup's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
     * @param {module:model/GoogleCloudAiplatformV1beta1FeatureGroup} [googleCloudAiplatformV1beta1FeatureGroup] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureGroupsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeatureGroupsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1FeatureGroup'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeatureGroupsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'featureGroupId': opts['featureGroupId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/featureGroups', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureGroupsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureGroupsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists FeatureGroups in a given project and location.
     * @param {String} parent Required. The resource name of the Location to list FeatureGroups. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the FeatureGroups that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > \"2020-01-01\" OR update_time > \"2020-01-01\"` FeatureGroups created or updated after 2020-01-01. * `labels.env = \"prod\"` FeatureGroups with label \"env\" set to \"prod\".
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported Fields: * `create_time` * `update_time`
     * @param {Number} [pageSize] The maximum number of FeatureGroups to return. The service may return fewer than this value. If unspecified, at most 100 FeatureGroups will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
     * @param {String} [pageToken] A page token, received from a previous FeatureGroupAdminService.ListFeatureGroups call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureGroupAdminService.ListFeatureGroups must match the call that provided the page token.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureGroupsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse}
     */
    aiplatformProjectsLocationsFeatureGroupsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeatureGroupsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListFeatureGroupsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/featureGroups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureOnlineStoresCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new FeatureOnlineStore in a given project and location.
     * @param {String} parent Required. The resource name of the Location to create FeatureOnlineStores. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [featureOnlineStoreId] Required. The ID to use for this FeatureOnlineStore, which will become the final component of the FeatureOnlineStore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
     * @param {module:model/GoogleCloudAiplatformV1beta1FeatureOnlineStore} [googleCloudAiplatformV1beta1FeatureOnlineStore] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeatureOnlineStoresCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1FeatureOnlineStore'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeatureOnlineStoresCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'featureOnlineStoreId': opts['featureOnlineStoreId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/featureOnlineStores', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new FeatureView in a given FeatureOnlineStore.
     * @param {String} parent Required. The resource name of the FeatureOnlineStore to create FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [featureViewId] Required. The ID to use for the FeatureView, which will become the final component of the FeatureView's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a FeatureOnlineStore.
     * @param {Boolean} [runSyncImmediately] Immutable. If set to true, one on demand sync will be run immediately, regardless whether the FeatureView.sync_config is configured or not.
     * @param {module:model/GoogleCloudAiplatformV1beta1FeatureView} [googleCloudAiplatformV1beta1FeatureView] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1FeatureView'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'featureViewId': opts['featureViewId'],
        'runSyncImmediately': opts['runSyncImmediately']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/featureViews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists FeatureViewSyncs in a given FeatureView.
     * @param {String} parent Required. The resource name of the FeatureView to list FeatureViewSyncs. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the FeatureViewSyncs that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. Examples: * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> FeatureViewSyncs created after 2020-01-31T15:30:00.000000Z.
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `create_time`
     * @param {Number} [pageSize] The maximum number of FeatureViewSyncs to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViewSyncs will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViewSyncs call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViewSyncs must match the call that provided the page token.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse}
     */
    aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFeatureViewSyncsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListFeatureViewSyncsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/featureViewSyncs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValues operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fetch feature values under a FeatureView.
     * @param {String} featureView Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1FetchFeatureValuesRequest} [googleCloudAiplatformV1beta1FetchFeatureValuesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse}
     */
    aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValues(featureView, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1FetchFeatureValuesRequest'];
      // verify the required parameter 'featureView' is set
      if (featureView === undefined || featureView === null) {
        throw new Error("Missing the required parameter 'featureView' when calling aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsFetchFeatureValues");
      }

      let pathParams = {
        'featureView': featureView
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1FetchFeatureValuesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{featureView}:fetchFeatureValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListFeatureViewsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists FeatureViews in a given FeatureOnlineStore.
     * @param {String} parent Required. The resource name of the FeatureOnlineStore to list FeatureViews. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the FeatureViews that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> FeatureViews created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> FeatureViews having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any FeatureView which has a label with 'env' as the key.
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `feature_view_id` * `create_time` * `update_time`
     * @param {Number} [pageSize] The maximum number of FeatureViews to return. The service may return fewer than this value. If unspecified, at most 1000 FeatureViews will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureViews call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureViews must match the call that provided the page token.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListFeatureViewsResponse}
     */
    aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListFeatureViewsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/featureViews', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntities operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntitiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search the nearest entities under a FeatureView. Search only works for indexable feature view; if a feature view isn't indexable, returns Invalid argument response.
     * @param {String} featureView Required. FeatureView resource format `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}/featureViews/{featureView}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1SearchNearestEntitiesRequest} [googleCloudAiplatformV1beta1SearchNearestEntitiesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntitiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse}
     */
    aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntities(featureView, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1SearchNearestEntitiesRequest'];
      // verify the required parameter 'featureView' is set
      if (featureView === undefined || featureView === null) {
        throw new Error("Missing the required parameter 'featureView' when calling aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSearchNearestEntities");
      }

      let pathParams = {
        'featureView': featureView
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1SearchNearestEntitiesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{featureView}:searchNearestEntities', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSync operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSyncCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1SyncFeatureViewResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Triggers on-demand sync for the FeatureView.
     * @param {String} featureView Required. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSyncCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1SyncFeatureViewResponse}
     */
    aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSync(featureView, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'featureView' is set
      if (featureView === undefined || featureView === null) {
        throw new Error("Missing the required parameter 'featureView' when calling aiplatformProjectsLocationsFeatureOnlineStoresFeatureViewsSync");
      }

      let pathParams = {
        'featureView': featureView
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1SyncFeatureViewResponse;
      return this.apiClient.callApi(
        '/v1beta1/{featureView}:sync', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeatureOnlineStoresList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists FeatureOnlineStores in a given project and location.
     * @param {String} parent Required. The resource name of the Location to list FeatureOnlineStores. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the FeatureOnlineStores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > \"2020-01-01\" OR update_time > \"2020-01-01\"` FeatureOnlineStores created or updated after 2020-01-01. * `labels.env = \"prod\"` FeatureOnlineStores with label \"env\" set to \"prod\".
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported Fields: * `create_time` * `update_time`
     * @param {Number} [pageSize] The maximum number of FeatureOnlineStores to return. The service may return fewer than this value. If unspecified, at most 100 FeatureOnlineStores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
     * @param {String} [pageToken] A page token, received from a previous FeatureOnlineStoreAdminService.ListFeatureOnlineStores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeatureOnlineStoreAdminService.ListFeatureOnlineStores must match the call that provided the page token.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeatureOnlineStoresListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse}
     */
    aiplatformProjectsLocationsFeatureOnlineStoresList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeatureOnlineStoresList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListFeatureOnlineStoresResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/featureOnlineStores', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresBatchReadFeatureValues operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresBatchReadFeatureValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Batch reads Feature values from a Featurestore. This API enables batch reading Feature values, where each read instance in the batch may read Feature values of entities from one or more EntityTypes. Point-in-time correctness is guaranteed for Feature values of each read instance as of each instance's read timestamp.
     * @param {String} featurestore Required. The resource name of the Featurestore from which to query Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchReadFeatureValuesRequest} [googleCloudAiplatformV1beta1BatchReadFeatureValuesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresBatchReadFeatureValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeaturestoresBatchReadFeatureValues(featurestore, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1BatchReadFeatureValuesRequest'];
      // verify the required parameter 'featurestore' is set
      if (featurestore === undefined || featurestore === null) {
        throw new Error("Missing the required parameter 'featurestore' when calling aiplatformProjectsLocationsFeaturestoresBatchReadFeatureValues");
      }

      let pathParams = {
        'featurestore': featurestore
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{featurestore}:batchReadFeatureValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Featurestore in a given project and location.
     * @param {String} parent Required. The resource name of the Location to create Featurestores. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [featurestoreId] Required. The ID to use for this Featurestore, which will become the final component of the Featurestore's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within the project and location.
     * @param {module:model/GoogleCloudAiplatformV1beta1Featurestore} [googleCloudAiplatformV1beta1Featurestore] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeaturestoresCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Featurestore'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeaturestoresCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'featurestoreId': opts['featurestoreId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/featurestores', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new EntityType in a given Featurestore.
     * @param {String} parent Required. The resource name of the Featurestore to create EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [entityTypeId] Required. The ID to use for the EntityType, which will become the final component of the EntityType's resource name. This value may be up to 60 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within a featurestore.
     * @param {module:model/GoogleCloudAiplatformV1beta1EntityType} [googleCloudAiplatformV1beta1EntityType] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1EntityType'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'entityTypeId': opts['entityTypeId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/entityTypes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValues operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Feature values from Featurestore. The progress of the deletion is tracked by the returned operation. The deleted feature values are guaranteed to be invisible to subsequent read operations after the operation is marked as successfully done. If a delete feature values operation fails, the feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same delete request again and wait till the new operation returned is marked as successfully done.
     * @param {String} entityType Required. The resource name of the EntityType grouping the Features for which values are being deleted from. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1DeleteFeatureValuesRequest} [googleCloudAiplatformV1beta1DeleteFeatureValuesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValues(entityType, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1DeleteFeatureValuesRequest'];
      // verify the required parameter 'entityType' is set
      if (entityType === undefined || entityType === null) {
        throw new Error("Missing the required parameter 'entityType' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesDeleteFeatureValues");
      }

      let pathParams = {
        'entityType': entityType
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{entityType}:deleteFeatureValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesExportFeatureValues operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesExportFeatureValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Exports Feature values from all the entities of a target EntityType.
     * @param {String} entityType Required. The resource name of the EntityType from which to export Feature values. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ExportFeatureValuesRequest} [googleCloudAiplatformV1beta1ExportFeatureValuesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesExportFeatureValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesExportFeatureValues(entityType, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ExportFeatureValuesRequest'];
      // verify the required parameter 'entityType' is set
      if (entityType === undefined || entityType === null) {
        throw new Error("Missing the required parameter 'entityType' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesExportFeatureValues");
      }

      let pathParams = {
        'entityType': entityType
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{entityType}:exportFeatureValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a batch of Features in a given EntityType.
     * @param {String} parent Required. The resource name of the EntityType to create the batch of Features under. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchCreateFeaturesRequest} [googleCloudAiplatformV1beta1BatchCreateFeaturesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1BatchCreateFeaturesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesBatchCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/features:batchCreate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Feature in a given EntityType.
     * @param {String} parent Required. The resource name of the EntityType or FeatureGroup to create a Feature. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [featureId] Required. The ID to use for the Feature, which will become the final component of the Feature's resource name. This value may be up to 128 characters, and valid characters are `[a-z0-9_]`. The first character cannot be a number. The value must be unique within an EntityType/FeatureGroup.
     * @param {module:model/GoogleCloudAiplatformV1beta1Feature} [googleCloudAiplatformV1beta1Feature] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Feature'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'featureId': opts['featureId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/features', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListFeaturesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Features in a given EntityType.
     * @param {String} parent Required. The resource name of the Location to list Features. Format for entity_type as parent: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}` Format for feature_group as parent: `projects/{project}/locations/{location}/featureGroups/{feature_group}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the Features that match the filter expression. The following filters are supported: * `value_type`: Supports = and != comparisons. * `create_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `update_time`: Supports =, !=, <, >, >=, and <= comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with 'env' as the key.
     * @param {Number} [latestStatsCount] Only applicable for Vertex AI Feature Store (Legacy). If set, return the most recent ListFeaturesRequest.latest_stats_count of stats for each Feature in response. Valid value is [0, 10]. If number of stats exists < ListFeaturesRequest.latest_stats_count, return all existing stats.
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `feature_id` * `value_type` (Not supported for FeatureRegistry Feature) * `create_time` * `update_time`
     * @param {Number} [pageSize] The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 1000 Features will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous FeaturestoreService.ListFeatures call or FeatureRegistryService.ListFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeatures or FeatureRegistryService.ListFeatures must match the call that provided the page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListFeaturesResponse}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesFeaturesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'latestStatsCount': opts['latestStatsCount'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListFeaturesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/features', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesImportFeatureValues operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesImportFeatureValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Imports Feature values into the Featurestore from a source storage. The progress of the import is tracked by the returned operation. The imported features are guaranteed to be visible to subsequent read operations after the operation is marked as successfully done. If an import operation fails, the Feature values returned from reads and exports may be inconsistent. If consistency is required, the caller must retry the same import request again and wait till the new operation returned is marked as successfully done. There are also scenarios where the caller can cause inconsistency. - Source data for import contains multiple distinct Feature values for the same entity ID and timestamp. - Source is modified during an import. This includes adding, updating, or removing source data and/or metadata. Examples of updating metadata include but are not limited to changing storage location, storage class, or retention policy. - Online serving cluster is under-provisioned.
     * @param {String} entityType Required. The resource name of the EntityType grouping the Features for which values are being imported. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ImportFeatureValuesRequest} [googleCloudAiplatformV1beta1ImportFeatureValuesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesImportFeatureValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesImportFeatureValues(entityType, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ImportFeatureValuesRequest'];
      // verify the required parameter 'entityType' is set
      if (entityType === undefined || entityType === null) {
        throw new Error("Missing the required parameter 'entityType' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesImportFeatureValues");
      }

      let pathParams = {
        'entityType': entityType
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{entityType}:importFeatureValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListEntityTypesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists EntityTypes in a given Featurestore.
     * @param {String} parent Required. The resource name of the Featurestore to list EntityTypes. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the EntityTypes that match the filter expression. The following filters are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `>=`, and `<=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality as well as key presence. Examples: * `create_time > \\\"2020-01-31T15:30:00.000000Z\\\" OR update_time > \\\"2020-01-31T15:30:00.000000Z\\\"` --> EntityTypes created or updated after 2020-01-31T15:30:00.000000Z. * `labels.active = yes AND labels.env = prod` --> EntityTypes having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any EntityType which has a label with 'env' as the key.
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `entity_type_id` * `create_time` * `update_time`
     * @param {Number} [pageSize] The maximum number of EntityTypes to return. The service may return fewer than this value. If unspecified, at most 1000 EntityTypes will be returned. The maximum value is 1000; any value greater than 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous FeaturestoreService.ListEntityTypes call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListEntityTypes must match the call that provided the page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListEntityTypesResponse}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListEntityTypesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/entityTypes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesReadFeatureValues operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesReadFeatureValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reads Feature values of a specific entity of an EntityType. For reading feature values of multiple entities of an EntityType, please use StreamingReadFeatureValues.
     * @param {String} entityType Required. The resource name of the EntityType for the entity being read. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ReadFeatureValuesRequest} [googleCloudAiplatformV1beta1ReadFeatureValuesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesReadFeatureValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesReadFeatureValues(entityType, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ReadFeatureValuesRequest'];
      // verify the required parameter 'entityType' is set
      if (entityType === undefined || entityType === null) {
        throw new Error("Missing the required parameter 'entityType' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesReadFeatureValues");
      }

      let pathParams = {
        'entityType': entityType
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{entityType}:readFeatureValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValues operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reads Feature values for multiple entities. Depending on their size, data for different entities may be broken up across multiple responses.
     * @param {String} entityType Required. The resource name of the entities' type. Value format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest} [googleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValues(entityType, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1StreamingReadFeatureValuesRequest'];
      // verify the required parameter 'entityType' is set
      if (entityType === undefined || entityType === null) {
        throw new Error("Missing the required parameter 'entityType' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesStreamingReadFeatureValues");
      }

      let pathParams = {
        'entityType': entityType
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ReadFeatureValuesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{entityType}:streamingReadFeatureValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresEntityTypesWriteFeatureValues operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesWriteFeatureValuesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Writes Feature values of one or more entities of an EntityType. The Feature values are merged into existing entities if any. The Feature values to be written must have timestamp within the online storage retention.
     * @param {String} entityType Required. The resource name of the EntityType for the entities being written. Value format: `projects/{project}/locations/{location}/featurestores/ {featurestore}/entityTypes/{entityType}`. For example, for a machine learning model predicting user clicks on a website, an EntityType ID could be `user`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1WriteFeatureValuesRequest} [googleCloudAiplatformV1beta1WriteFeatureValuesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresEntityTypesWriteFeatureValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsFeaturestoresEntityTypesWriteFeatureValues(entityType, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1WriteFeatureValuesRequest'];
      // verify the required parameter 'entityType' is set
      if (entityType === undefined || entityType === null) {
        throw new Error("Missing the required parameter 'entityType' when calling aiplatformProjectsLocationsFeaturestoresEntityTypesWriteFeatureValues");
      }

      let pathParams = {
        'entityType': entityType
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{entityType}:writeFeatureValues', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListFeaturestoresResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Featurestores in a given project and location.
     * @param {String} parent Required. The resource name of the Location to list Featurestores. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the featurestores that match the filter expression. The following fields are supported: * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `online_serving_config.fixed_node_count`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. * `labels`: Supports key-value equality and key presence. Examples: * `create_time > \"2020-01-01\" OR update_time > \"2020-01-01\"` Featurestores created or updated after 2020-01-01. * `labels.env = \"prod\"` Featurestores with label \"env\" set to \"prod\".
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported Fields: * `create_time` * `update_time` * `online_serving_config.fixed_node_count`
     * @param {Number} [pageSize] The maximum number of Featurestores to return. The service may return fewer than this value. If unspecified, at most 100 Featurestores will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
     * @param {String} [pageToken] A page token, received from a previous FeaturestoreService.ListFeaturestores call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.ListFeaturestores must match the call that provided the page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListFeaturestoresResponse}
     */
    aiplatformProjectsLocationsFeaturestoresList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsFeaturestoresList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListFeaturestoresResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/featurestores', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsFeaturestoresSearchFeatures operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresSearchFeaturesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1SearchFeaturesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Searches Features matching a query in a given project.
     * @param {String} location Required. The resource name of the Location to search Features. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of Features to return. The service may return fewer than this value. If unspecified, at most 100 Features will be returned. The maximum value is 100; any value greater than 100 will be coerced to 100.
     * @param {String} [pageToken] A page token, received from a previous FeaturestoreService.SearchFeatures call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to FeaturestoreService.SearchFeatures, except `page_size`, must match the call that provided the page token.
     * @param {String} [query] Query string that is a conjunction of field-restricted queries and/or field-restricted filters. Field-restricted queries and filters can be combined using `AND` to form a conjunction. A field query is in the form FIELD:QUERY. This implicitly checks if QUERY exists as a substring within Feature's FIELD. The QUERY and the FIELD are converted to a sequence of words (i.e. tokens) for comparison. This is done by: * Removing leading/trailing whitespace and tokenizing the search value. Characters that are not one of alphanumeric `[a-zA-Z0-9]`, underscore `_`, or asterisk `*` are treated as delimiters for tokens. `*` is treated as a wildcard that matches characters within a token. * Ignoring case. * Prepending an asterisk to the first and appending an asterisk to the last token in QUERY. A QUERY must be either a singular token or a phrase. A phrase is one or multiple words enclosed in double quotation marks (\"). With phrases, the order of the words is important. Words in the phrase must be matching in order and consecutively. Supported FIELDs for field-restricted queries: * `feature_id` * `description` * `entity_type_id` Examples: * `feature_id: foo` --> Matches a Feature with ID containing the substring `foo` (eg. `foo`, `foofeature`, `barfoo`). * `feature_id: foo*feature` --> Matches a Feature with ID containing the substring `foo*feature` (eg. `foobarfeature`). * `feature_id: foo AND description: bar` --> Matches a Feature with ID containing the substring `foo` and description containing the substring `bar`. Besides field queries, the following exact-match filters are supported. The exact-match filters do not support wildcards. Unlike field-restricted queries, exact-match filters are case-sensitive. * `feature_id`: Supports = comparisons. * `description`: Supports = comparisons. Multi-token filters should be enclosed in quotes. * `entity_type_id`: Supports = comparisons. * `value_type`: Supports = and != comparisons. * `labels`: Supports key-value equality as well as key presence. * `featurestore_id`: Supports = comparisons. Examples: * `description = \"foo bar\"` --> Any Feature with description exactly equal to `foo bar` * `value_type = DOUBLE` --> Features whose type is DOUBLE. * `labels.active = yes AND labels.env = prod` --> Features having both (active: yes) and (env: prod) labels. * `labels.env: *` --> Any Feature which has a label with `env` as the key.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsFeaturestoresSearchFeaturesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1SearchFeaturesResponse}
     */
    aiplatformProjectsLocationsFeaturestoresSearchFeatures(location, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'location' is set
      if (location === undefined || location === null) {
        throw new Error("Missing the required parameter 'location' when calling aiplatformProjectsLocationsFeaturestoresSearchFeatures");
      }

      let pathParams = {
        'location': location
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'query': opts['query']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1SearchFeaturesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{location}/featurestores:searchFeatures', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsHyperparameterTuningJobsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsHyperparameterTuningJobsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1HyperparameterTuningJob} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a HyperparameterTuningJob
     * @param {String} parent Required. The resource name of the Location to create the HyperparameterTuningJob in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1HyperparameterTuningJob} [googleCloudAiplatformV1beta1HyperparameterTuningJob] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsHyperparameterTuningJobsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1HyperparameterTuningJob}
     */
    aiplatformProjectsLocationsHyperparameterTuningJobsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1HyperparameterTuningJob'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsHyperparameterTuningJobsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1HyperparameterTuningJob;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/hyperparameterTuningJobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsHyperparameterTuningJobsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsHyperparameterTuningJobsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists HyperparameterTuningJobs in a Location.
     * @param {String} parent Required. The resource name of the Location to list the HyperparameterTuningJobs from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListHyperparameterTuningJobsResponse.next_page_token of the previous JobService.ListHyperparameterTuningJobs call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsHyperparameterTuningJobsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse}
     */
    aiplatformProjectsLocationsHyperparameterTuningJobsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsHyperparameterTuningJobsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListHyperparameterTuningJobsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/hyperparameterTuningJobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexEndpointsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an IndexEndpoint.
     * @param {String} parent Required. The resource name of the Location to create the IndexEndpoint in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1IndexEndpoint} [googleCloudAiplatformV1beta1IndexEndpoint] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsIndexEndpointsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1IndexEndpoint'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsIndexEndpointsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/indexEndpoints', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexEndpointsDeployIndex operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsDeployIndexCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deploys an Index into this IndexEndpoint, creating a DeployedIndex within it. Only non-empty Indexes can be deployed.
     * @param {String} indexEndpoint Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1DeployIndexRequest} [googleCloudAiplatformV1beta1DeployIndexRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsDeployIndexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsIndexEndpointsDeployIndex(indexEndpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1DeployIndexRequest'];
      // verify the required parameter 'indexEndpoint' is set
      if (indexEndpoint === undefined || indexEndpoint === null) {
        throw new Error("Missing the required parameter 'indexEndpoint' when calling aiplatformProjectsLocationsIndexEndpointsDeployIndex");
      }

      let pathParams = {
        'indexEndpoint': indexEndpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{indexEndpoint}:deployIndex', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexEndpointsFindNeighbors operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsFindNeighborsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1FindNeighborsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Finds the nearest neighbors of each vector within the request.
     * @param {String} indexEndpoint Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1FindNeighborsRequest} [googleCloudAiplatformV1beta1FindNeighborsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsFindNeighborsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1FindNeighborsResponse}
     */
    aiplatformProjectsLocationsIndexEndpointsFindNeighbors(indexEndpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1FindNeighborsRequest'];
      // verify the required parameter 'indexEndpoint' is set
      if (indexEndpoint === undefined || indexEndpoint === null) {
        throw new Error("Missing the required parameter 'indexEndpoint' when calling aiplatformProjectsLocationsIndexEndpointsFindNeighbors");
      }

      let pathParams = {
        'indexEndpoint': indexEndpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1FindNeighborsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{indexEndpoint}:findNeighbors', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexEndpointsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists IndexEndpoints in a Location.
     * @param {String} parent Required. The resource name of the Location from which to list the IndexEndpoints. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `index_endpoint` supports = and !=. `index_endpoint` represents the IndexEndpoint ID, ie. the last segment of the IndexEndpoint's resourcename. * `display_name` supports =, != and regex() (uses [re2](https://github.com/google/re2/wiki/Syntax) syntax) * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* or labels:key - key existence A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `index_endpoint=\"1\"` * `display_name=\"myDisplayName\"` * `regex(display_name, \"^A\") -> The display name starts with an A. * `labels.myKey=\"myValue\"`
     * @param {Number} [pageSize] Optional. The standard list page size.
     * @param {String} [pageToken] Optional. The standard list page token. Typically obtained via ListIndexEndpointsResponse.next_page_token of the previous IndexEndpointService.ListIndexEndpoints call.
     * @param {String} [readMask] Optional. Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse}
     */
    aiplatformProjectsLocationsIndexEndpointsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsIndexEndpointsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListIndexEndpointsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/indexEndpoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexEndpointsMutateDeployedIndex operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsMutateDeployedIndexCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an existing DeployedIndex under an IndexEndpoint.
     * @param {String} indexEndpoint Required. The name of the IndexEndpoint resource into which to deploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1DeployedIndex} [googleCloudAiplatformV1beta1DeployedIndex] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsMutateDeployedIndexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsIndexEndpointsMutateDeployedIndex(indexEndpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1DeployedIndex'];
      // verify the required parameter 'indexEndpoint' is set
      if (indexEndpoint === undefined || indexEndpoint === null) {
        throw new Error("Missing the required parameter 'indexEndpoint' when calling aiplatformProjectsLocationsIndexEndpointsMutateDeployedIndex");
      }

      let pathParams = {
        'indexEndpoint': indexEndpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{indexEndpoint}:mutateDeployedIndex', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexEndpointsReadIndexDatapoints operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsReadIndexDatapointsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reads the datapoints/vectors of the given IDs. A maximum of 1000 datapoints can be retrieved in a batch.
     * @param {String} indexEndpoint Required. The name of the index endpoint. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ReadIndexDatapointsRequest} [googleCloudAiplatformV1beta1ReadIndexDatapointsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsReadIndexDatapointsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse}
     */
    aiplatformProjectsLocationsIndexEndpointsReadIndexDatapoints(indexEndpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ReadIndexDatapointsRequest'];
      // verify the required parameter 'indexEndpoint' is set
      if (indexEndpoint === undefined || indexEndpoint === null) {
        throw new Error("Missing the required parameter 'indexEndpoint' when calling aiplatformProjectsLocationsIndexEndpointsReadIndexDatapoints");
      }

      let pathParams = {
        'indexEndpoint': indexEndpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ReadIndexDatapointsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{indexEndpoint}:readIndexDatapoints', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexEndpointsUndeployIndex operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsUndeployIndexCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Undeploys an Index from an IndexEndpoint, removing a DeployedIndex from it, and freeing all resources it's using.
     * @param {String} indexEndpoint Required. The name of the IndexEndpoint resource from which to undeploy an Index. Format: `projects/{project}/locations/{location}/indexEndpoints/{index_endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1UndeployIndexRequest} [googleCloudAiplatformV1beta1UndeployIndexRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexEndpointsUndeployIndexCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsIndexEndpointsUndeployIndex(indexEndpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1UndeployIndexRequest'];
      // verify the required parameter 'indexEndpoint' is set
      if (indexEndpoint === undefined || indexEndpoint === null) {
        throw new Error("Missing the required parameter 'indexEndpoint' when calling aiplatformProjectsLocationsIndexEndpointsUndeployIndex");
      }

      let pathParams = {
        'indexEndpoint': indexEndpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{indexEndpoint}:undeployIndex', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexesCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Index.
     * @param {String} parent Required. The resource name of the Location to create the Index in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1Index} [googleCloudAiplatformV1beta1Index] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsIndexesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Index'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsIndexesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/indexes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListIndexesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Indexes in a Location.
     * @param {String} parent Required. The resource name of the Location from which to list the Indexes. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListIndexesResponse.next_page_token of the previous IndexService.ListIndexes call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListIndexesResponse}
     */
    aiplatformProjectsLocationsIndexesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsIndexesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListIndexesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/indexes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexesRemoveDatapoints operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexesRemoveDatapointsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove Datapoints from an Index.
     * @param {String} index Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1RemoveDatapointsRequest} [googleCloudAiplatformV1beta1RemoveDatapointsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexesRemoveDatapointsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsIndexesRemoveDatapoints(index, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1RemoveDatapointsRequest'];
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling aiplatformProjectsLocationsIndexesRemoveDatapoints");
      }

      let pathParams = {
        'index': index
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{index}:removeDatapoints', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsIndexesUpsertDatapoints operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsIndexesUpsertDatapointsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add/update Datapoints into an Index.
     * @param {String} index Required. The name of the Index resource to be updated. Format: `projects/{project}/locations/{location}/indexes/{index}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1UpsertDatapointsRequest} [googleCloudAiplatformV1beta1UpsertDatapointsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsIndexesUpsertDatapointsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsIndexesUpsertDatapoints(index, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1UpsertDatapointsRequest'];
      // verify the required parameter 'index' is set
      if (index === undefined || index === null) {
        throw new Error("Missing the required parameter 'index' when calling aiplatformProjectsLocationsIndexesUpsertDatapoints");
      }

      let pathParams = {
        'index': index
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{index}:upsertDatapoints', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudLocationListLocationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists information about the supported locations for this service.
     * @param {String} name The resource that owns the locations collection, if applicable.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
     * @param {Number} [pageSize] The maximum number of results to return. If not set, the service selects a default.
     * @param {String} [pageToken] A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudLocationListLocationsResponse}
     */
    aiplatformProjectsLocationsList(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsList");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudLocationListLocationsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{name}/locations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresArtifactsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresArtifactsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Artifact} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Artifact associated with a MetadataStore.
     * @param {String} parent Required. The resource name of the MetadataStore where the Artifact should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [artifactId] The {artifact} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` If not provided, the Artifact's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Artifacts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Artifact.)
     * @param {module:model/GoogleCloudAiplatformV1beta1Artifact} [googleCloudAiplatformV1beta1Artifact] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresArtifactsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Artifact}
     */
    aiplatformProjectsLocationsMetadataStoresArtifactsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Artifact'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresArtifactsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'artifactId': opts['artifactId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Artifact;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/artifacts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresArtifactsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresArtifactsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListArtifactsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Artifacts in the MetadataStore.
     * @param {String} parent Required. The MetadataStore whose Artifacts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = \"test\"`. Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = \"2020-11-19T11:30:00-04:00\"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata.\"field:1\".number_value = 10.0` * **Context based filtering**: To filter Artifacts based on the contexts to which they belong, use the function operator with the full resource name `in_context()`. For example: `in_context(\"projects//locations//metadataStores//contexts/\")` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = \"test\" AND metadata.field1.bool_value = true`.
     * @param {String} [orderBy] How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a \" desc\" suffix; for example: \"foo desc, bar\". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.
     * @param {Number} [pageSize] The maximum number of Artifacts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
     * @param {String} [pageToken] A page token, received from a previous MetadataService.ListArtifacts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresArtifactsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListArtifactsResponse}
     */
    aiplatformProjectsLocationsMetadataStoresArtifactsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresArtifactsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListArtifactsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/artifacts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresArtifactsPurge operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresArtifactsPurgeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Purges Artifacts.
     * @param {String} parent Required. The metadata store to purge Artifacts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1PurgeArtifactsRequest} [googleCloudAiplatformV1beta1PurgeArtifactsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresArtifactsPurgeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsMetadataStoresArtifactsPurge(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1PurgeArtifactsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresArtifactsPurge");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/artifacts:purge', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraph operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraphCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1LineageSubgraph} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves lineage of an Artifact represented through Artifacts and Executions connected by Event edges and returned as a LineageSubgraph.
     * @param {String} artifact Required. The resource name of the Artifact whose Lineage needs to be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/artifacts/{artifact}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Filter specifying the boolean condition for the Artifacts to satisfy in order to be part of the Lineage Subgraph. The syntax to define filter query is based on https://google.aip.dev/160. The supported set of filters include the following: * **Attribute filtering**: For example: `display_name = \"test\"` Supported fields include: `name`, `display_name`, `uri`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = \"2020-11-19T11:30:00-04:00\"` * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata.\"field:1\".number_value = 10.0` Each of the above supported filter types can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = \"test\" AND metadata.field1.bool_value = true`.
     * @param {Number} [maxHops] Specifies the size of the lineage graph in terms of number of hops from the specified artifact. Negative Value: INVALID_ARGUMENT error is returned 0: Only input artifact is returned. No value: Transitive closure is performed to return the complete graph.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraphCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1LineageSubgraph}
     */
    aiplatformProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraph(artifact, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'artifact' is set
      if (artifact === undefined || artifact === null) {
        throw new Error("Missing the required parameter 'artifact' when calling aiplatformProjectsLocationsMetadataStoresArtifactsQueryArtifactLineageSubgraph");
      }

      let pathParams = {
        'artifact': artifact
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'maxHops': opts['maxHops']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1LineageSubgraph;
      return this.apiClient.callApi(
        '/v1beta1/{artifact}:queryArtifactLineageSubgraph', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutions operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutionsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a set of Artifacts and Executions to a Context. If any of the Artifacts or Executions have already been added to a Context, they are simply skipped.
     * @param {String} context Required. The resource name of the Context that the Artifacts and Executions belong to. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest} [googleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutions(context, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1AddContextArtifactsAndExecutionsRequest'];
      // verify the required parameter 'context' is set
      if (context === undefined || context === null) {
        throw new Error("Missing the required parameter 'context' when calling aiplatformProjectsLocationsMetadataStoresContextsAddContextArtifactsAndExecutions");
      }

      let pathParams = {
        'context': context
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{context}:addContextArtifactsAndExecutions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresContextsAddContextChildren operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsAddContextChildrenCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a set of Contexts as children to a parent Context. If any of the child Contexts have already been added to the parent Context, they are simply skipped. If this call would create a cycle or cause any Context to have more than 10 parents, the request will fail with an INVALID_ARGUMENT error.
     * @param {String} context Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1AddContextChildrenRequest} [googleCloudAiplatformV1beta1AddContextChildrenRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsAddContextChildrenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsMetadataStoresContextsAddContextChildren(context, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1AddContextChildrenRequest'];
      // verify the required parameter 'context' is set
      if (context === undefined || context === null) {
        throw new Error("Missing the required parameter 'context' when calling aiplatformProjectsLocationsMetadataStoresContextsAddContextChildren");
      }

      let pathParams = {
        'context': context
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{context}:addContextChildren', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresContextsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Context} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Context associated with a MetadataStore.
     * @param {String} parent Required. The resource name of the MetadataStore where the Context should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [contextId] The {context} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`. If not provided, the Context's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Contexts in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Context.)
     * @param {module:model/GoogleCloudAiplatformV1beta1Context} [googleCloudAiplatformV1beta1Context] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Context}
     */
    aiplatformProjectsLocationsMetadataStoresContextsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Context'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresContextsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'contextId': opts['contextId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Context;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/contexts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresContextsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListContextsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Contexts on the MetadataStore.
     * @param {String} parent Required. The MetadataStore whose Contexts should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Filter specifying the boolean condition for the Contexts to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = \"test\"`. Supported fields include: `name`, `display_name`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = \"2020-11-19T11:30:00-04:00\"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..`. For example: `metadata.field_1.number_value = 10.0`. In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata.\"field:1\".number_value = 10.0` * **Parent Child filtering**: To filter Contexts based on parent-child relationship use the HAS operator as follows: ``` parent_contexts: \"projects//locations//metadataStores//contexts/\" child_contexts: \"projects//locations//metadataStores//contexts/\" ``` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = \"test\" AND metadata.field1.bool_value = true`.
     * @param {String} [orderBy] How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a \" desc\" suffix; for example: \"foo desc, bar\". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.
     * @param {Number} [pageSize] The maximum number of Contexts to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
     * @param {String} [pageToken] A page token, received from a previous MetadataService.ListContexts call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListContextsResponse}
     */
    aiplatformProjectsLocationsMetadataStoresContextsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresContextsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListContextsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/contexts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresContextsPurge operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsPurgeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Purges Contexts.
     * @param {String} parent Required. The metadata store to purge Contexts from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1PurgeContextsRequest} [googleCloudAiplatformV1beta1PurgeContextsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsPurgeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsMetadataStoresContextsPurge(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1PurgeContextsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresContextsPurge");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/contexts:purge', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraph operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraphCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1LineageSubgraph} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves Artifacts and Executions within the specified Context, connected by Event edges and returned as a LineageSubgraph.
     * @param {String} context Required. The resource name of the Context whose Artifacts and Executions should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}` The request may error with FAILED_PRECONDITION if the number of Artifacts, the number of Executions, or the number of Events that would be returned for the Context exceeds 1000.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraphCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1LineageSubgraph}
     */
    aiplatformProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraph(context, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'context' is set
      if (context === undefined || context === null) {
        throw new Error("Missing the required parameter 'context' when calling aiplatformProjectsLocationsMetadataStoresContextsQueryContextLineageSubgraph");
      }

      let pathParams = {
        'context': context
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1LineageSubgraph;
      return this.apiClient.callApi(
        '/v1beta1/{context}:queryContextLineageSubgraph', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresContextsRemoveContextChildren operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsRemoveContextChildrenCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a set of children contexts from a parent Context. If any of the child Contexts were NOT added to the parent Context, they are simply skipped.
     * @param {String} context Required. The resource name of the parent Context. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/contexts/{context}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1RemoveContextChildrenRequest} [googleCloudAiplatformV1beta1RemoveContextChildrenRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresContextsRemoveContextChildrenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsMetadataStoresContextsRemoveContextChildren(context, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1RemoveContextChildrenRequest'];
      // verify the required parameter 'context' is set
      if (context === undefined || context === null) {
        throw new Error("Missing the required parameter 'context' when calling aiplatformProjectsLocationsMetadataStoresContextsRemoveContextChildren");
      }

      let pathParams = {
        'context': context
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{context}:removeContextChildren', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Initializes a MetadataStore, including allocation of resources.
     * @param {String} parent Required. The resource name of the Location where the MetadataStore should be created. Format: `projects/{project}/locations/{location}/`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [metadataStoreId] The {metadatastore} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataStores in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataStore.)
     * @param {module:model/GoogleCloudAiplatformV1beta1MetadataStore} [googleCloudAiplatformV1beta1MetadataStore] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsMetadataStoresCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1MetadataStore'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'metadataStoreId': opts['metadataStoreId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/metadataStores', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresExecutionsAddExecutionEvents operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsAddExecutionEventsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds Events to the specified Execution. An Event indicates whether an Artifact was used as an input or output for an Execution. If an Event already exists between the Execution and the Artifact, the Event is skipped.
     * @param {String} execution Required. The resource name of the Execution that the Events connect Artifacts with. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1AddExecutionEventsRequest} [googleCloudAiplatformV1beta1AddExecutionEventsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsAddExecutionEventsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsMetadataStoresExecutionsAddExecutionEvents(execution, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1AddExecutionEventsRequest'];
      // verify the required parameter 'execution' is set
      if (execution === undefined || execution === null) {
        throw new Error("Missing the required parameter 'execution' when calling aiplatformProjectsLocationsMetadataStoresExecutionsAddExecutionEvents");
      }

      let pathParams = {
        'execution': execution
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{execution}:addExecutionEvents', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresExecutionsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Execution} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates an Execution associated with a MetadataStore.
     * @param {String} parent Required. The resource name of the MetadataStore where the Execution should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [executionId] The {execution} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}` If not provided, the Execution's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all Executions in the parent MetadataStore. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting Execution.)
     * @param {module:model/GoogleCloudAiplatformV1beta1Execution} [googleCloudAiplatformV1beta1Execution] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Execution}
     */
    aiplatformProjectsLocationsMetadataStoresExecutionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Execution'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresExecutionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'executionId': opts['executionId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Execution;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/executions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresExecutionsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListExecutionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Executions in the MetadataStore.
     * @param {String} parent Required. The MetadataStore whose Executions should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Filter specifying the boolean condition for the Executions to satisfy in order to be part of the result set. The syntax to define filter query is based on https://google.aip.dev/160. Following are the supported set of filters: * **Attribute filtering**: For example: `display_name = \"test\"`. Supported fields include: `name`, `display_name`, `state`, `schema_title`, `create_time`, and `update_time`. Time fields, such as `create_time` and `update_time`, require values specified in RFC-3339 format. For example: `create_time = \"2020-11-19T11:30:00-04:00\"`. * **Metadata field**: To filter on metadata fields use traversal operation as follows: `metadata..` For example: `metadata.field_1.number_value = 10.0` In case the field name contains special characters (such as colon), one can embed it inside double quote. For example: `metadata.\"field:1\".number_value = 10.0` * **Context based filtering**: To filter Executions based on the contexts to which they belong use the function operator with the full resource name: `in_context()`. For example: `in_context(\"projects//locations//metadataStores//contexts/\")` Each of the above supported filters can be combined together using logical operators (`AND` & `OR`). Maximum nested expression depth allowed is 5. For example: `display_name = \"test\" AND metadata.field1.bool_value = true`.
     * @param {String} [orderBy] How the list of messages is ordered. Specify the values to order by and an ordering operation. The default sorting order is ascending. To specify descending order for a field, users append a \" desc\" suffix; for example: \"foo desc, bar\". Subfields are specified with a `.` character, such as foo.bar. see https://google.aip.dev/132#ordering for more details.
     * @param {Number} [pageSize] The maximum number of Executions to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
     * @param {String} [pageToken] A page token, received from a previous MetadataService.ListExecutions call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with an INVALID_ARGUMENT error.)
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListExecutionsResponse}
     */
    aiplatformProjectsLocationsMetadataStoresExecutionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresExecutionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListExecutionsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/executions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresExecutionsPurge operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsPurgeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Purges Executions.
     * @param {String} parent Required. The metadata store to purge Executions from. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1PurgeExecutionsRequest} [googleCloudAiplatformV1beta1PurgeExecutionsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsPurgeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsMetadataStoresExecutionsPurge(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1PurgeExecutionsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresExecutionsPurge");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/executions:purge', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputs operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1LineageSubgraph} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtains the set of input and output Artifacts for this Execution, in the form of LineageSubgraph that also contains the Execution and connecting Events.
     * @param {String} execution Required. The resource name of the Execution whose input and output Artifacts should be retrieved as a LineageSubgraph. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/executions/{execution}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1LineageSubgraph}
     */
    aiplatformProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputs(execution, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'execution' is set
      if (execution === undefined || execution === null) {
        throw new Error("Missing the required parameter 'execution' when calling aiplatformProjectsLocationsMetadataStoresExecutionsQueryExecutionInputsAndOutputs");
      }

      let pathParams = {
        'execution': execution
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1LineageSubgraph;
      return this.apiClient.callApi(
        '/v1beta1/{execution}:queryExecutionInputsAndOutputs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListMetadataStoresResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists MetadataStores for a Location.
     * @param {String} parent Required. The Location whose MetadataStores should be listed. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The maximum number of Metadata Stores to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
     * @param {String} [pageToken] A page token, received from a previous MetadataService.ListMetadataStores call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListMetadataStoresResponse}
     */
    aiplatformProjectsLocationsMetadataStoresList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListMetadataStoresResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/metadataStores', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresMetadataSchemasCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresMetadataSchemasCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1MetadataSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a MetadataSchema.
     * @param {String} parent Required. The resource name of the MetadataStore where the MetadataSchema should be created. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [metadataSchemaId] The {metadata_schema} portion of the resource name with the format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}/metadataSchemas/{metadataschema}` If not provided, the MetadataStore's ID will be a UUID generated by the service. Must be 4-128 characters in length. Valid characters are `/a-z-/`. Must be unique across all MetadataSchemas in the parent Location. (Otherwise the request will fail with ALREADY_EXISTS, or PERMISSION_DENIED if the caller can't view the preexisting MetadataSchema.)
     * @param {module:model/GoogleCloudAiplatformV1beta1MetadataSchema} [googleCloudAiplatformV1beta1MetadataSchema] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresMetadataSchemasCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1MetadataSchema}
     */
    aiplatformProjectsLocationsMetadataStoresMetadataSchemasCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1MetadataSchema'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresMetadataSchemasCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'metadataSchemaId': opts['metadataSchemaId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1MetadataSchema;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/metadataSchemas', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMetadataStoresMetadataSchemasList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresMetadataSchemasListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists MetadataSchemas.
     * @param {String} parent Required. The MetadataStore whose MetadataSchemas should be listed. Format: `projects/{project}/locations/{location}/metadataStores/{metadatastore}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] A query to filter available MetadataSchemas for matching results.
     * @param {Number} [pageSize] The maximum number of MetadataSchemas to return. The service may return fewer. Must be in range 1-1000, inclusive. Defaults to 100.
     * @param {String} [pageToken] A page token, received from a previous MetadataService.ListMetadataSchemas call. Provide this to retrieve the next page. When paginating, all other provided parameters must match the call that provided the page token. (Otherwise the request will fail with INVALID_ARGUMENT error.)
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMetadataStoresMetadataSchemasListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse}
     */
    aiplatformProjectsLocationsMetadataStoresMetadataSchemasList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMetadataStoresMetadataSchemasList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListMetadataSchemasResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/metadataSchemas', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMigratableResourcesBatchMigrate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMigratableResourcesBatchMigrateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Batch migrates resources from ml.googleapis.com, automl.googleapis.com, and datalabeling.googleapis.com to Vertex AI.
     * @param {String} parent Required. The location of the migrated resource will live in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchMigrateResourcesRequest} [googleCloudAiplatformV1beta1BatchMigrateResourcesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMigratableResourcesBatchMigrateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsMigratableResourcesBatchMigrate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1BatchMigrateResourcesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMigratableResourcesBatchMigrate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/migratableResources:batchMigrate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsMigratableResourcesSearch operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsMigratableResourcesSearchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Searches all of the resources in automl.googleapis.com, datalabeling.googleapis.com and ml.googleapis.com that can be migrated to Vertex AI's given location.
     * @param {String} parent Required. The location that the migratable resources should be searched from. It's the Vertex AI location that the resources can be migrated to, not the resources' original location. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1SearchMigratableResourcesRequest} [googleCloudAiplatformV1beta1SearchMigratableResourcesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsMigratableResourcesSearchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse}
     */
    aiplatformProjectsLocationsMigratableResourcesSearch(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1SearchMigratableResourcesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsMigratableResourcesSearch");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1SearchMigratableResourcesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/migratableResources:search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelDeploymentMonitoringJobsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelDeploymentMonitoringJobsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a ModelDeploymentMonitoringJob. It will run periodically on a configured interval.
     * @param {String} parent Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob} [googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelDeploymentMonitoringJobsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob}
     */
    aiplatformProjectsLocationsModelDeploymentMonitoringJobsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ModelDeploymentMonitoringJob'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsModelDeploymentMonitoringJobsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ModelDeploymentMonitoringJob;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/modelDeploymentMonitoringJobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelDeploymentMonitoringJobsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelDeploymentMonitoringJobsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists ModelDeploymentMonitoringJobs in a Location.
     * @param {String} parent Required. The parent of the ModelDeploymentMonitoringJob. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {String} [readMask] Mask specifying which fields to read
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelDeploymentMonitoringJobsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse}
     */
    aiplatformProjectsLocationsModelDeploymentMonitoringJobsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsModelDeploymentMonitoringJobsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListModelDeploymentMonitoringJobsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/modelDeploymentMonitoringJobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomalies operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomaliesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Searches Model Monitoring Statistics generated within a given time window.
     * @param {String} modelDeploymentMonitoringJob Required. ModelDeploymentMonitoring Job resource name. Format: `projects/{project}/locations/{location}/modelDeploymentMonitoringJobs/{model_deployment_monitoring_job}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest} [googleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomaliesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse}
     */
    aiplatformProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomalies(modelDeploymentMonitoringJob, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesRequest'];
      // verify the required parameter 'modelDeploymentMonitoringJob' is set
      if (modelDeploymentMonitoringJob === undefined || modelDeploymentMonitoringJob === null) {
        throw new Error("Missing the required parameter 'modelDeploymentMonitoringJob' when calling aiplatformProjectsLocationsModelDeploymentMonitoringJobsSearchModelDeploymentMonitoringStatsAnomalies");
      }

      let pathParams = {
        'modelDeploymentMonitoringJob': modelDeploymentMonitoringJob
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1SearchModelDeploymentMonitoringStatsAnomaliesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{modelDeploymentMonitoringJob}:searchModelDeploymentMonitoringStatsAnomalies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsCopy operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsCopyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Copies an already existing Vertex AI Model into the specified Location. The source Model must exist in the same Project. When copying custom Models, the users themselves are responsible for Model.metadata content to be region-agnostic, as well as making sure that any resources (e.g. files) it depends on remain accessible.
     * @param {String} parent Required. The resource name of the Location into which to copy the Model. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1CopyModelRequest} [googleCloudAiplatformV1beta1CopyModelRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsCopyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsModelsCopy(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1CopyModelRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsModelsCopy");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/models:copy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsDeleteVersion operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsDeleteVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Model version. Model version can only be deleted if there are no DeployedModels created from it. Deleting the only version in the Model is not allowed. Use DeleteModel for deleting the Model instead.
     * @param {String} name Required. The name of the model version to be deleted, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsDeleteVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsModelsDeleteVersion(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsModelsDeleteVersion");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{name}:deleteVersion', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsEvaluationsImport operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsEvaluationsImportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ModelEvaluation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Imports an externally generated ModelEvaluation.
     * @param {String} parent Required. The name of the parent model resource. Format: `projects/{project}/locations/{location}/models/{model}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ImportModelEvaluationRequest} [googleCloudAiplatformV1beta1ImportModelEvaluationRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsEvaluationsImportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ModelEvaluation}
     */
    aiplatformProjectsLocationsModelsEvaluationsImport(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ImportModelEvaluationRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsModelsEvaluationsImport");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ModelEvaluation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/evaluations:import', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsEvaluationsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsEvaluationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists ModelEvaluations in a Model.
     * @param {String} parent Required. The resource name of the Model to list the ModelEvaluations from. Format: `projects/{project}/locations/{location}/models/{model}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListModelEvaluationsResponse.next_page_token of the previous ModelService.ListModelEvaluations call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsEvaluationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse}
     */
    aiplatformProjectsLocationsModelsEvaluationsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsModelsEvaluationsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListModelEvaluationsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/evaluations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsEvaluationsSlicesBatchImport operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsEvaluationsSlicesBatchImportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Imports a list of externally generated EvaluatedAnnotations.
     * @param {String} parent Required. The name of the parent ModelEvaluationSlice resource. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}/slices/{slice}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest} [googleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsEvaluationsSlicesBatchImportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse}
     */
    aiplatformProjectsLocationsModelsEvaluationsSlicesBatchImport(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsModelsEvaluationsSlicesBatchImport");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1BatchImportEvaluatedAnnotationsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}:batchImport', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsEvaluationsSlicesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsEvaluationsSlicesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists ModelEvaluationSlices in a ModelEvaluation.
     * @param {String} parent Required. The resource name of the ModelEvaluation to list the ModelEvaluationSlices from. Format: `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter. * `slice.dimension` - for =.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListModelEvaluationSlicesResponse.next_page_token of the previous ModelService.ListModelEvaluationSlices call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsEvaluationsSlicesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse}
     */
    aiplatformProjectsLocationsModelsEvaluationsSlicesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsModelsEvaluationsSlicesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListModelEvaluationSlicesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/slices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsExport operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsExportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Exports a trained, exportable Model to a location specified by the user. A Model is considered to be exportable if it has at least one supported export format.
     * @param {String} name Required. The resource name of the Model to export. The resource name may contain version id or version alias to specify the version, if no version is specified, the default version will be exported.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ExportModelRequest} [googleCloudAiplatformV1beta1ExportModelRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsModelsExport(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ExportModelRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsModelsExport");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{name}:export', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsListVersions operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsListVersionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListModelVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists versions of the specified model.
     * @param {String} name Required. The name of the model to list versions for.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. Some examples: * `labels.myKey=\"myValue\"`
     * @param {String} [orderBy] A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `create_time` * `update_time` Example: `update_time asc, create_time desc`.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via next_page_token of the previous ListModelVersions call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsListVersionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListModelVersionsResponse}
     */
    aiplatformProjectsLocationsModelsListVersions(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsModelsListVersions");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListModelVersionsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{name}:listVersions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsMergeVersionAliases operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsMergeVersionAliasesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Model} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Merges a set of aliases for a Model version.
     * @param {String} name Required. The name of the model version to merge aliases, with a version ID explicitly included. Example: `projects/{project}/locations/{location}/models/{model}@1234`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1MergeVersionAliasesRequest} [googleCloudAiplatformV1beta1MergeVersionAliasesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsMergeVersionAliasesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Model}
     */
    aiplatformProjectsLocationsModelsMergeVersionAliases(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1MergeVersionAliasesRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsModelsMergeVersionAliases");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Model;
      return this.apiClient.callApi(
        '/v1beta1/{name}:mergeVersionAliases', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsUpdateExplanationDataset operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsUpdateExplanationDatasetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Incrementally update the dataset used for an examples model.
     * @param {String} model Required. The resource name of the Model to update. Format: `projects/{project}/locations/{location}/models/{model}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1UpdateExplanationDatasetRequest} [googleCloudAiplatformV1beta1UpdateExplanationDatasetRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsUpdateExplanationDatasetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsModelsUpdateExplanationDataset(model, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1UpdateExplanationDatasetRequest'];
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling aiplatformProjectsLocationsModelsUpdateExplanationDataset");
      }

      let pathParams = {
        'model': model
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{model}:updateExplanationDataset', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsModelsUpload operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsModelsUploadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Uploads a Model artifact into Vertex AI.
     * @param {String} parent Required. The resource name of the Location into which to upload the Model. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1UploadModelRequest} [googleCloudAiplatformV1beta1UploadModelRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsModelsUploadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsModelsUpload(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1UploadModelRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsModelsUpload");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/models:upload', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNasJobsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNasJobsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1NasJob} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a NasJob
     * @param {String} parent Required. The resource name of the Location to create the NasJob in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1NasJob} [googleCloudAiplatformV1beta1NasJob] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNasJobsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1NasJob}
     */
    aiplatformProjectsLocationsNasJobsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1NasJob'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsNasJobsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1NasJob;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/nasJobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNasJobsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNasJobsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListNasJobsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists NasJobs in a Location.
     * @param {String} parent Required. The resource name of the Location to list the NasJobs from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"JOB_STATE_SUCCEEDED\" AND display_name:\"my_job_*\"` * `state!=\"JOB_STATE_FAILED\" OR display_name=\"my_job\"` * `NOT display_name=\"my_job\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `labels.keyA=valueA` * `labels.keyB:*`
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListNasJobsResponse.next_page_token of the previous JobService.ListNasJobs call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNasJobsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListNasJobsResponse}
     */
    aiplatformProjectsLocationsNasJobsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsNasJobsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListNasJobsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/nasJobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNasJobsNasTrialDetailsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNasJobsNasTrialDetailsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List top NasTrialDetails of a NasJob.
     * @param {String} parent Required. The name of the NasJob resource. Format: `projects/{project}/locations/{location}/nasJobs/{nas_job}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListNasTrialDetailsResponse.next_page_token of the previous JobService.ListNasTrialDetails call.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNasJobsNasTrialDetailsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse}
     */
    aiplatformProjectsLocationsNasJobsNasTrialDetailsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsNasJobsNasTrialDetailsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListNasTrialDetailsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/nasTrialDetails', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimeTemplatesCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimeTemplatesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a NotebookRuntimeTemplate.
     * @param {String} parent Required. The resource name of the Location to create the NotebookRuntimeTemplate. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [notebookRuntimeTemplateId] Optional. User specified ID for the notebook runtime template.
     * @param {module:model/GoogleCloudAiplatformV1beta1NotebookRuntimeTemplate} [googleCloudAiplatformV1beta1NotebookRuntimeTemplate] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimeTemplatesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsNotebookRuntimeTemplatesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1NotebookRuntimeTemplate'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsNotebookRuntimeTemplatesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'notebookRuntimeTemplateId': opts['notebookRuntimeTemplateId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/notebookRuntimeTemplates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimeTemplatesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimeTemplatesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists NotebookRuntimeTemplates in a Location.
     * @param {String} parent Required. The resource name of the Location from which to list the NotebookRuntimeTemplates. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `display_name` supports = and != * `labels` supports general map functions that is: * `labels.key=value` - key:value equality * `labels.key:* or labels:key - key existence * A key including a space must be quoted. `labels.\"a key\"`. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: * `notebookRuntimeTemplate=notebookRuntimeTemplate123` * `displayName=\"myDisplayName\"` * `labels.myKey=\"myValue\"` * `notebookRuntimeType=USER_DEFINED`
     * @param {String} [orderBy] Optional. A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.
     * @param {Number} [pageSize] Optional. The standard list page size.
     * @param {String} [pageToken] Optional. The standard list page token. Typically obtained via ListNotebookRuntimeTemplatesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimeTemplates call.
     * @param {String} [readMask] Optional. Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimeTemplatesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse}
     */
    aiplatformProjectsLocationsNotebookRuntimeTemplatesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsNotebookRuntimeTemplatesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListNotebookRuntimeTemplatesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/notebookRuntimeTemplates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimeTemplatesSetIamPolicy operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimeTemplatesSetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
     * @param {String} resource REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleIamV1SetIamPolicyRequest} [googleIamV1SetIamPolicyRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimeTemplatesSetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1Policy}
     */
    aiplatformProjectsLocationsNotebookRuntimeTemplatesSetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1SetIamPolicyRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling aiplatformProjectsLocationsNotebookRuntimeTemplatesSetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleIamV1Policy;
      return this.apiClient.callApi(
        '/v1beta1/{resource}:setIamPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimeTemplatesTestIamPermissions operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimeTemplatesTestIamPermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1TestIamPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.
     * @param {String} resource REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Array.<String>} [permissions] The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
     * @param {module:model/GoogleIamV1TestIamPermissionsRequest} [googleIamV1TestIamPermissionsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimeTemplatesTestIamPermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1TestIamPermissionsResponse}
     */
    aiplatformProjectsLocationsNotebookRuntimeTemplatesTestIamPermissions(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1TestIamPermissionsRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling aiplatformProjectsLocationsNotebookRuntimeTemplatesTestIamPermissions");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'permissions': this.apiClient.buildCollectionParam(opts['permissions'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleIamV1TestIamPermissionsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{resource}:testIamPermissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimesAssign operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesAssignCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Assigns a NotebookRuntime to a user for a particular Notebook file. This method will either returns an existing assignment or generates a new one.
     * @param {String} parent Required. The resource name of the Location to get the NotebookRuntime assignment. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1AssignNotebookRuntimeRequest} [googleCloudAiplatformV1beta1AssignNotebookRuntimeRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesAssignCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsNotebookRuntimesAssign(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1AssignNotebookRuntimeRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsNotebookRuntimesAssign");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/notebookRuntimes:assign', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimesGenerateAccessToken operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesGenerateAccessTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Internal only: Called from Compute Engine instance to obtain EUC for owner Anonymous access: authenticates caller using VM identity JWT. Design doc: go/colab-on-vertex-euc-dd
     * @param {String} name Required. The name of the resource requesting the OAuth2 token. Format: `projects/{project}/locations/{location}/notebookRuntimes/{notebook_runtime}` `projects/{project}/locations/{location}/notebookExecutionJobs/{notebook_execution_job}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1GenerateAccessTokenRequest} [googleCloudAiplatformV1beta1GenerateAccessTokenRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesGenerateAccessTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse}
     */
    aiplatformProjectsLocationsNotebookRuntimesGenerateAccessToken(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1GenerateAccessTokenRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsNotebookRuntimesGenerateAccessToken");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1GenerateAccessTokenResponse;
      return this.apiClient.callApi(
        '/v1beta1/{name}:generateAccessToken', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists NotebookRuntimes in a Location.
     * @param {String} parent Required. The resource name of the Location from which to list the NotebookRuntimes. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Optional. An expression for filtering the results of the request. For field names both snake_case and camelCase are supported. * `notebookRuntime` supports = and !=. `notebookRuntime` represents the NotebookRuntime ID, i.e. the last segment of the NotebookRuntime's resource name. * `displayName` supports = and != and regex. * `notebookRuntimeTemplate` supports = and !=. `notebookRuntimeTemplate` represents the NotebookRuntimeTemplate ID, i.e. the last segment of the NotebookRuntimeTemplate's resource name. * `healthState` supports = and !=. healthState enum: [HEALTHY, UNHEALTHY, HEALTH_STATE_UNSPECIFIED]. * `runtimeState` supports = and !=. runtimeState enum: [RUNTIME_STATE_UNSPECIFIED, RUNNING, BEING_STARTED, BEING_STOPPED, STOPPED, BEING_UPGRADED]. * `runtimeUser` supports = and !=. * API version is UI only: `uiState` supports = and !=. uiState enum: [UI_RESOURCE_STATE_UNSPECIFIED, UI_RESOURCE_STATE_BEING_CREATED, UI_RESOURCE_STATE_ACTIVE, UI_RESOURCE_STATE_BEING_DELETED, UI_RESOURCE_STATE_CREATION_FAILED]. * `notebookRuntimeType` supports = and !=. notebookRuntimeType enum: [USER_DEFINED, ONE_CLICK]. Some examples: * `notebookRuntime=\"notebookRuntime123\"` * `displayName=\"myDisplayName\"` and `displayName=~\"myDisplayNameRegex\"` * `notebookRuntimeTemplate=\"notebookRuntimeTemplate321\"` * `healthState=HEALTHY` * `runtimeState=RUNNING` * `runtimeUser=\"test@google.com\"` * `uiState=UI_RESOURCE_STATE_BEING_DELETED` * `notebookRuntimeType=USER_DEFINED`
     * @param {String} [orderBy] Optional. A comma-separated list of fields to order by, sorted in ascending order. Use \"desc\" after a field name for descending. Supported fields: * `display_name` * `create_time` * `update_time` Example: `display_name, create_time desc`.
     * @param {Number} [pageSize] Optional. The standard list page size.
     * @param {String} [pageToken] Optional. The standard list page token. Typically obtained via ListNotebookRuntimesResponse.next_page_token of the previous NotebookService.ListNotebookRuntimes call.
     * @param {String} [readMask] Optional. Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse}
     */
    aiplatformProjectsLocationsNotebookRuntimesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsNotebookRuntimesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListNotebookRuntimesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/notebookRuntimes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimesReportEvent operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesReportEventCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * 
     * @param {String} name Required. The name of the NotebookRuntime resource. Format: `projects/{project}/locations/{location}/notebookRuntimes/{notebook_runtime}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ReportRuntimeEventRequest} [googleCloudAiplatformV1beta1ReportRuntimeEventRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesReportEventCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse}
     */
    aiplatformProjectsLocationsNotebookRuntimesReportEvent(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ReportRuntimeEventRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsNotebookRuntimesReportEvent");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ReportRuntimeEventResponse;
      return this.apiClient.callApi(
        '/v1beta1/{name}:reportEvent', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimesStart operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesStartCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts a NotebookRuntime.
     * @param {String} name Required. The name of the NotebookRuntime resource to be started. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesStartCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsNotebookRuntimesStart(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsNotebookRuntimesStart");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{name}:start', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsNotebookRuntimesUpgrade operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesUpgradeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upgrades a NotebookRuntime.
     * @param {String} name Required. The name of the NotebookRuntime resource to be upgrade. Instead of checking whether the name is in valid NotebookRuntime resource name format, directly throw NotFound exception if there is no such NotebookRuntime in spanner.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsNotebookRuntimesUpgradeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsNotebookRuntimesUpgrade(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsNotebookRuntimesUpgrade");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{name}:upgrade', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPersistentResourcesCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPersistentResourcesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a PersistentResource.
     * @param {String} parent Required. The resource name of the Location to create the PersistentResource in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [persistentResourceId] Required. The ID to use for the PersistentResource, which become the final component of the PersistentResource's resource name. The maximum length is 63 characters, and valid characters are `/^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$/`.
     * @param {module:model/GoogleCloudAiplatformV1beta1PersistentResource} [googleCloudAiplatformV1beta1PersistentResource] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPersistentResourcesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsPersistentResourcesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1PersistentResource'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsPersistentResourcesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'persistentResourceId': opts['persistentResourceId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/persistentResources', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPersistentResourcesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPersistentResourcesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists PersistentResources in a Location.
     * @param {String} parent Required. The resource name of the Location to list the PersistentResources from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The standard list page size.
     * @param {String} [pageToken] Optional. The standard list page token. Typically obtained via ListPersistentResourceResponse.next_page_token of the previous PersistentResourceService.ListPersistentResource call.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPersistentResourcesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse}
     */
    aiplatformProjectsLocationsPersistentResourcesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsPersistentResourcesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListPersistentResourcesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/persistentResources', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPipelineJobsBatchCancel operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPipelineJobsBatchCancelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Batch cancel PipelineJobs. Firstly the server will check if all the jobs are in non-terminal states, and skip the jobs that are already terminated. If the operation failed, none of the pipeline jobs are cancelled. The server will poll the states of all the pipeline jobs periodically to check the cancellation status. This operation will return an LRO.
     * @param {String} parent Required. The name of the PipelineJobs' parent resource. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest} [googleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPipelineJobsBatchCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsPipelineJobsBatchCancel(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1BatchCancelPipelineJobsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsPipelineJobsBatchCancel");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/pipelineJobs:batchCancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPipelineJobsBatchDelete operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPipelineJobsBatchDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Batch deletes PipelineJobs The Operation is atomic. If it fails, none of the PipelineJobs are deleted. If it succeeds, all of the PipelineJobs are deleted.
     * @param {String} parent Required. The name of the PipelineJobs' parent resource. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest} [googleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPipelineJobsBatchDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsPipelineJobsBatchDelete(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1BatchDeletePipelineJobsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsPipelineJobsBatchDelete");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/pipelineJobs:batchDelete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPipelineJobsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPipelineJobsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1PipelineJob} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a PipelineJob. A PipelineJob will run immediately when created.
     * @param {String} parent Required. The resource name of the Location to create the PipelineJob in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [pipelineJobId] The ID to use for the PipelineJob, which will become the final component of the PipelineJob name. If not provided, an ID will be automatically generated. This value should be less than 128 characters, and valid characters are `/a-z-/`.
     * @param {module:model/GoogleCloudAiplatformV1beta1PipelineJob} [googleCloudAiplatformV1beta1PipelineJob] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPipelineJobsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1PipelineJob}
     */
    aiplatformProjectsLocationsPipelineJobsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1PipelineJob'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsPipelineJobsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pipelineJobId': opts['pipelineJobId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1PipelineJob;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/pipelineJobs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPipelineJobsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPipelineJobsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListPipelineJobsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists PipelineJobs in a Location.
     * @param {String} parent Required. The resource name of the Location to list the PipelineJobs from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the PipelineJobs that match the filter expression. The following fields are supported: * `pipeline_name`: Supports `=` and `!=` comparisons. * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `pipeline_job_user_id`: Supports `=`, `!=` comparisons, and `:` wildcard. for example, can check if pipeline's display_name contains *step* by doing display_name:\\\"*step*\\\" * `state`: Supports `=` and `!=` comparisons. * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `update_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `labels`: Supports key-value equality and key presence. * `template_uri`: Supports `=`, `!=` comparisons, and `:` wildcard. * `template_metadata.version`: Supports `=`, `!=` comparisons, and `:` wildcard. Filter expressions can be combined together using logical operators (`AND` & `OR`). For example: `pipeline_name=\"test\" AND create_time>\"2020-05-18T13:30:00Z\"`. The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `create_time>\"2021-05-18T00:00:00Z\" OR update_time>\"2020-05-18T00:00:00Z\"` PipelineJobs created or updated after 2020-05-18 00:00:00 UTC. * `labels.env = \"prod\"` PipelineJobs with label \"env\" set to \"prod\".
     * @param {String} [orderBy] A comma-separated list of fields to order by. The default sort order is in ascending order. Use \"desc\" after a field name for descending. You can have multiple order_by fields provided e.g. \"create_time desc, end_time\", \"end_time, start_time, update_time\" For example, using \"create_time desc, end_time\" will order results by create time in descending order, and if there are multiple jobs having the same create time, order them by the end time in ascending order. if order_by is not specified, it will order by default order is create time in descending order. Supported fields: * `create_time` * `update_time` * `end_time` * `start_time`
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListPipelineJobsResponse.next_page_token of the previous PipelineService.ListPipelineJobs call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPipelineJobsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListPipelineJobsResponse}
     */
    aiplatformProjectsLocationsPipelineJobsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsPipelineJobsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListPipelineJobsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/pipelineJobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPublishersModelsComputeTokens operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsComputeTokensCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ComputeTokensResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a list of tokens based on the input text.
     * @param {String} endpoint Required. The name of the Endpoint requested to get lists of tokens and token ids.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ComputeTokensRequest} [googleCloudAiplatformV1beta1ComputeTokensRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsComputeTokensCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ComputeTokensResponse}
     */
    aiplatformProjectsLocationsPublishersModelsComputeTokens(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ComputeTokensRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsPublishersModelsComputeTokens");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ComputeTokensResponse;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:computeTokens', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPublishersModelsCountTokens operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsCountTokensCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1CountTokensResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform a token counting.
     * @param {String} endpoint Required. The name of the Endpoint requested to perform token counting. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1CountTokensRequest} [googleCloudAiplatformV1beta1CountTokensRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsCountTokensCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1CountTokensResponse}
     */
    aiplatformProjectsLocationsPublishersModelsCountTokens(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1CountTokensRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsPublishersModelsCountTokens");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1CountTokensResponse;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:countTokens', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPublishersModelsGenerateContent operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsGenerateContentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1GenerateContentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate content with multimodal inputs.
     * @param {String} model Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/_*_/models/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1GenerateContentRequest} [googleCloudAiplatformV1beta1GenerateContentRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsGenerateContentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1GenerateContentResponse}
     */
    aiplatformProjectsLocationsPublishersModelsGenerateContent(model, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1GenerateContentRequest'];
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling aiplatformProjectsLocationsPublishersModelsGenerateContent");
      }

      let pathParams = {
        'model': model
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1GenerateContentResponse;
      return this.apiClient.callApi(
        '/v1beta1/{model}:generateContent', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPublishersModelsGetIamPolicy operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsGetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleIamV1Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
     * @param {String} resource REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [optionsRequestedPolicyVersion] Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     * @param {module:model/GoogleIamV1GetIamPolicyRequest} [googleIamV1GetIamPolicyRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsGetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleIamV1Policy}
     */
    aiplatformProjectsLocationsPublishersModelsGetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleIamV1GetIamPolicyRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling aiplatformProjectsLocationsPublishersModelsGetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'options.requestedPolicyVersion': opts['optionsRequestedPolicyVersion']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleIamV1Policy;
      return this.apiClient.callApi(
        '/v1beta1/{resource}:getIamPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPublishersModelsPredict operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsPredictCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1PredictResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform an online prediction.
     * @param {String} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1PredictRequest} [googleCloudAiplatformV1beta1PredictRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsPredictCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1PredictResponse}
     */
    aiplatformProjectsLocationsPublishersModelsPredict(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1PredictRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsPublishersModelsPredict");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1PredictResponse;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:predict', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPublishersModelsRawPredict operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsRawPredictCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleApiHttpBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform an online prediction with an arbitrary HTTP payload. The response includes the following HTTP headers: * `X-Vertex-AI-Endpoint-Id`: ID of the Endpoint that served this prediction. * `X-Vertex-AI-Deployed-Model-Id`: ID of the Endpoint's DeployedModel that served this prediction.
     * @param {String} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1RawPredictRequest} [googleCloudAiplatformV1beta1RawPredictRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsRawPredictCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleApiHttpBody}
     */
    aiplatformProjectsLocationsPublishersModelsRawPredict(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1RawPredictRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsPublishersModelsRawPredict");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleApiHttpBody;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:rawPredict', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPublishersModelsServerStreamingPredict operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsServerStreamingPredictCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1StreamingPredictResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform a server-side streaming online prediction request for Vertex LLM streaming.
     * @param {String} endpoint Required. The name of the Endpoint requested to serve the prediction. Format: `projects/{project}/locations/{location}/endpoints/{endpoint}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1StreamingPredictRequest} [googleCloudAiplatformV1beta1StreamingPredictRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsServerStreamingPredictCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1StreamingPredictResponse}
     */
    aiplatformProjectsLocationsPublishersModelsServerStreamingPredict(endpoint, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1StreamingPredictRequest'];
      // verify the required parameter 'endpoint' is set
      if (endpoint === undefined || endpoint === null) {
        throw new Error("Missing the required parameter 'endpoint' when calling aiplatformProjectsLocationsPublishersModelsServerStreamingPredict");
      }

      let pathParams = {
        'endpoint': endpoint
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1StreamingPredictResponse;
      return this.apiClient.callApi(
        '/v1beta1/{endpoint}:serverStreamingPredict', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsPublishersModelsStreamGenerateContent operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsStreamGenerateContentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1GenerateContentResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate content with multimodal inputs with streaming support.
     * @param {String} model Required. The name of the publisher model requested to serve the prediction. Format: `projects/{project}/locations/{location}/publishers/_*_/models/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1GenerateContentRequest} [googleCloudAiplatformV1beta1GenerateContentRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsPublishersModelsStreamGenerateContentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1GenerateContentResponse}
     */
    aiplatformProjectsLocationsPublishersModelsStreamGenerateContent(model, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1GenerateContentRequest'];
      // verify the required parameter 'model' is set
      if (model === undefined || model === null) {
        throw new Error("Missing the required parameter 'model' when calling aiplatformProjectsLocationsPublishersModelsStreamGenerateContent");
      }

      let pathParams = {
        'model': model
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1GenerateContentResponse;
      return this.apiClient.callApi(
        '/v1beta1/{model}:streamGenerateContent', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsSchedulesCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsSchedulesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Schedule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Schedule.
     * @param {String} parent Required. The resource name of the Location to create the Schedule in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1Schedule} [googleCloudAiplatformV1beta1Schedule] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsSchedulesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Schedule}
     */
    aiplatformProjectsLocationsSchedulesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Schedule'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsSchedulesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Schedule;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/schedules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsSchedulesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsSchedulesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListSchedulesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Schedules in a Location.
     * @param {String} parent Required. The resource name of the Location to list the Schedules from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the Schedules that match the filter expression. The following fields are supported: * `display_name`: Supports `=`, `!=` comparisons, and `:` wildcard. * `state`: Supports `=` and `!=` comparisons. * `request`: Supports existence of the check. (e.g. `create_pipeline_job_request:*` --> Schedule has create_pipeline_job_request). * `create_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `start_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. * `end_time`: Supports `=`, `!=`, `<`, `>`, `<=`, `>=` comparisons and `:*` existence check. Values must be in RFC 3339 format. * `next_run_time`: Supports `=`, `!=`, `<`, `>`, `<=`, and `>=` comparisons. Values must be in RFC 3339 format. Filter expressions can be combined together using logical operators (`NOT`, `AND` & `OR`). The syntax to define filter expression is based on https://google.aip.dev/160. Examples: * `state=\"ACTIVE\" AND display_name:\"my_schedule_*\"` * `NOT display_name=\"my_schedule\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `end_time>\"2021-05-18T00:00:00Z\" OR NOT end_time:*` * `create_pipeline_job_request:*`
     * @param {String} [orderBy] A comma-separated list of fields to order by. The default sort order is in ascending order. Use \"desc\" after a field name for descending. You can have multiple order_by fields provided. For example, using \"create_time desc, end_time\" will order results by create time in descending order, and if there are multiple schedules having the same create time, order them by the end time in ascending order. If order_by is not specified, it will order by default with create_time in descending order. Supported fields: * `create_time` * `start_time` * `end_time` * `next_run_time`
     * @param {Number} [pageSize] The standard list page size. Default to 100 if not specified.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListSchedulesResponse.next_page_token of the previous ScheduleService.ListSchedules call.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsSchedulesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListSchedulesResponse}
     */
    aiplatformProjectsLocationsSchedulesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsSchedulesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListSchedulesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/schedules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsSchedulesPause operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsSchedulesPauseCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Pauses a Schedule. Will mark Schedule.state to 'PAUSED'. If the schedule is paused, no new runs will be created. Already created runs will NOT be paused or canceled.
     * @param {String} name Required. The name of the Schedule resource to be paused. Format: `projects/{project}/locations/{location}/schedules/{schedule}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsSchedulesPauseCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsSchedulesPause(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsSchedulesPause");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{name}:pause', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsSchedulesResume operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsSchedulesResumeCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resumes a paused Schedule to start scheduling new runs. Will mark Schedule.state to 'ACTIVE'. Only paused Schedule can be resumed. When the Schedule is resumed, new runs will be scheduled starting from the next execution time after the current time based on the time_specification in the Schedule. If Schedule.catchUp is set up true, all missed runs will be scheduled for backfill first.
     * @param {String} name Required. The name of the Schedule resource to be resumed. Format: `projects/{project}/locations/{location}/schedules/{schedule}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ResumeScheduleRequest} [googleCloudAiplatformV1beta1ResumeScheduleRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsSchedulesResumeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsSchedulesResume(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ResumeScheduleRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsSchedulesResume");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{name}:resume', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsSpecialistPoolsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsSpecialistPoolsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a SpecialistPool.
     * @param {String} parent Required. The parent Project name for the new SpecialistPool. The form is `projects/{project}/locations/{location}`.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1SpecialistPool} [googleCloudAiplatformV1beta1SpecialistPool] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsSpecialistPoolsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsSpecialistPoolsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1SpecialistPool'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsSpecialistPoolsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/specialistPools', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsSpecialistPoolsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsSpecialistPoolsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists SpecialistPools in a Location.
     * @param {String} parent Required. The name of the SpecialistPool's parent resource. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained by ListSpecialistPoolsResponse.next_page_token of the previous SpecialistPoolService.ListSpecialistPools call. Return first page if empty.
     * @param {String} [readMask] Mask specifying which fields to read. FieldMask represents a set of
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsSpecialistPoolsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse}
     */
    aiplatformProjectsLocationsSpecialistPoolsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsSpecialistPoolsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListSpecialistPoolsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/specialistPools', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Study} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Study. A resource name will be generated after creation of the Study.
     * @param {String} parent Required. The resource name of the Location to create the CustomJob in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1Study} [googleCloudAiplatformV1beta1Study] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Study}
     */
    aiplatformProjectsLocationsStudiesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Study'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsStudiesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Study;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/studies', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListStudiesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the studies in a region for an associated project.
     * @param {String} parent Required. The resource name of the Location to list the Study from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The maximum number of studies to return per \"page\" of results. If unspecified, service will pick an appropriate default.
     * @param {String} [pageToken] Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListStudiesResponse}
     */
    aiplatformProjectsLocationsStudiesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsStudiesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListStudiesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/studies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesLookup operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesLookupCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Study} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Looks a study up using the user-defined display_name field instead of the fully qualified resource name.
     * @param {String} parent Required. The resource name of the Location to get the Study from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1LookupStudyRequest} [googleCloudAiplatformV1beta1LookupStudyRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesLookupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Study}
     */
    aiplatformProjectsLocationsStudiesLookup(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1LookupStudyRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsStudiesLookup");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Study;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/studies:lookup', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesTrialsAddTrialMeasurement operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsAddTrialMeasurementCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Trial} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a measurement of the objective metrics to a Trial. This measurement is assumed to have been taken before the Trial is complete.
     * @param {String} trialName Required. The name of the trial to add measurement. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1AddTrialMeasurementRequest} [googleCloudAiplatformV1beta1AddTrialMeasurementRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsAddTrialMeasurementCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Trial}
     */
    aiplatformProjectsLocationsStudiesTrialsAddTrialMeasurement(trialName, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1AddTrialMeasurementRequest'];
      // verify the required parameter 'trialName' is set
      if (trialName === undefined || trialName === null) {
        throw new Error("Missing the required parameter 'trialName' when calling aiplatformProjectsLocationsStudiesTrialsAddTrialMeasurement");
      }

      let pathParams = {
        'trialName': trialName
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Trial;
      return this.apiClient.callApi(
        '/v1beta1/{trialName}:addTrialMeasurement', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingState operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingStateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks whether a Trial should stop or not. Returns a long-running operation. When the operation is successful, it will contain a CheckTrialEarlyStoppingStateResponse.
     * @param {String} trialName Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingStateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingState(trialName, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'trialName' is set
      if (trialName === undefined || trialName === null) {
        throw new Error("Missing the required parameter 'trialName' when calling aiplatformProjectsLocationsStudiesTrialsCheckTrialEarlyStoppingState");
      }

      let pathParams = {
        'trialName': trialName
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{trialName}:checkTrialEarlyStoppingState', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesTrialsComplete operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsCompleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Trial} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Marks a Trial as complete.
     * @param {String} name Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1CompleteTrialRequest} [googleCloudAiplatformV1beta1CompleteTrialRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsCompleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Trial}
     */
    aiplatformProjectsLocationsStudiesTrialsComplete(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1CompleteTrialRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsStudiesTrialsComplete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Trial;
      return this.apiClient.callApi(
        '/v1beta1/{name}:complete', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesTrialsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Trial} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a user provided Trial to a Study.
     * @param {String} parent Required. The resource name of the Study to create the Trial in. Format: `projects/{project}/locations/{location}/studies/{study}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1Trial} [googleCloudAiplatformV1beta1Trial] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Trial}
     */
    aiplatformProjectsLocationsStudiesTrialsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Trial'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsStudiesTrialsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Trial;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/trials', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesTrialsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListTrialsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the Trials associated with a Study.
     * @param {String} parent Required. The resource name of the Study to list the Trial from. Format: `projects/{project}/locations/{location}/studies/{study}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [pageSize] Optional. The number of Trials to retrieve per \"page\" of results. If unspecified, the service will pick an appropriate default.
     * @param {String} [pageToken] Optional. A page token to request the next page of results. If unspecified, there are no subsequent pages.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListTrialsResponse}
     */
    aiplatformProjectsLocationsStudiesTrialsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsStudiesTrialsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListTrialsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/trials', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesTrialsListOptimalTrials operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsListOptimalTrialsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists the pareto-optimal Trials for multi-objective Study or the optimal Trials for single-objective Study. The definition of pareto-optimal can be checked in wiki page. https://en.wikipedia.org/wiki/Pareto_efficiency
     * @param {String} parent Required. The name of the Study that the optimal Trial belongs to.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsListOptimalTrialsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse}
     */
    aiplatformProjectsLocationsStudiesTrialsListOptimalTrials(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsStudiesTrialsListOptimalTrials");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListOptimalTrialsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/trials:listOptimalTrials', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesTrialsStop operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsStopCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1Trial} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Stops a Trial.
     * @param {String} name Required. The Trial's name. Format: `projects/{project}/locations/{location}/studies/{study}/trials/{trial}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsStopCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1Trial}
     */
    aiplatformProjectsLocationsStudiesTrialsStop(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsStudiesTrialsStop");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1Trial;
      return this.apiClient.callApi(
        '/v1beta1/{name}:stop', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsStudiesTrialsSuggest operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsSuggestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds one or more Trials to a Study, with parameter values suggested by Vertex AI Vizier. Returns a long-running operation associated with the generation of Trial suggestions. When this long-running operation succeeds, it will contain a SuggestTrialsResponse.
     * @param {String} parent Required. The project and location that the Study belongs to. Format: `projects/{project}/locations/{location}/studies/{study}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1SuggestTrialsRequest} [googleCloudAiplatformV1beta1SuggestTrialsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsStudiesTrialsSuggestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsStudiesTrialsSuggest(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1SuggestTrialsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsStudiesTrialsSuggest");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/trials:suggest', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsBatchRead operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsBatchReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reads multiple TensorboardTimeSeries' data. The data point number limit is 1000 for scalars, 100 for tensors and blob references. If the number of data points stored is less than the limit, all data is returned. Otherwise, the number limit of data points is randomly selected from this time series and returned.
     * @param {String} tensorboard Required. The resource name of the Tensorboard containing TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`. The TensorboardTimeSeries referenced by time_series must be sub resources of this Tensorboard.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Array.<String>} [timeSeries] Required. The resource names of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsBatchReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse}
     */
    aiplatformProjectsLocationsTensorboardsBatchRead(tensorboard, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'tensorboard' is set
      if (tensorboard === undefined || tensorboard === null) {
        throw new Error("Missing the required parameter 'tensorboard' when calling aiplatformProjectsLocationsTensorboardsBatchRead");
      }

      let pathParams = {
        'tensorboard': tensorboard
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'timeSeries': this.apiClient.buildCollectionParam(opts['timeSeries'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1BatchReadTensorboardTimeSeriesDataResponse;
      return this.apiClient.callApi(
        '/v1beta1/{tensorboard}:batchRead', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a Tensorboard.
     * @param {String} parent Required. The resource name of the Location to create the Tensorboard in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1Tensorboard} [googleCloudAiplatformV1beta1Tensorboard] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsTensorboardsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1Tensorboard'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/tensorboards', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsBatchCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsBatchCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Batch create TensorboardTimeSeries that belong to a TensorboardExperiment.
     * @param {String} parent Required. The resource name of the TensorboardExperiment to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The TensorboardRuns referenced by the parent fields in the CreateTensorboardTimeSeriesRequest messages must be sub resources of this TensorboardExperiment.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest} [googleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsBatchCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsBatchCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsExperimentsBatchCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1BatchCreateTensorboardTimeSeriesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}:batchCreate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1TensorboardExperiment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TensorboardExperiment.
     * @param {String} parent Required. The resource name of the Tensorboard to create the TensorboardExperiment in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [tensorboardExperimentId] Required. The ID to use for the Tensorboard experiment, which becomes the final component of the Tensorboard experiment's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
     * @param {module:model/GoogleCloudAiplatformV1beta1TensorboardExperiment} [googleCloudAiplatformV1beta1TensorboardExperiment] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1TensorboardExperiment}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1TensorboardExperiment'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsExperimentsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'tensorboardExperimentId': opts['tensorboardExperimentId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1TensorboardExperiment;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/experiments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists TensorboardExperiments in a Location.
     * @param {String} parent Required. The resource name of the Tensorboard to list TensorboardExperiments. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the TensorboardExperiments that match the filter expression.
     * @param {String} [orderBy] Field to use to sort the list.
     * @param {Number} [pageSize] The maximum number of TensorboardExperiments to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardExperiments are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous TensorboardService.ListTensorboardExperiments call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardExperiments must match the call that provided the page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsExperimentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListTensorboardExperimentsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/experiments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsBatchCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsBatchCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Batch create TensorboardRuns.
     * @param {String} parent Required. The resource name of the TensorboardExperiment to create the TensorboardRuns in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}` The parent field in the CreateTensorboardRunRequest messages must match this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest} [googleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsBatchCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsBatchCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1BatchCreateTensorboardRunsRequest'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsBatchCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1BatchCreateTensorboardRunsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/runs:batchCreate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1TensorboardRun} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TensorboardRun.
     * @param {String} parent Required. The resource name of the TensorboardExperiment to create the TensorboardRun in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [tensorboardRunId] Required. The ID to use for the Tensorboard run, which becomes the final component of the Tensorboard run's resource name. This value should be 1-128 characters, and valid characters are `/a-z-/`.
     * @param {module:model/GoogleCloudAiplatformV1beta1TensorboardRun} [googleCloudAiplatformV1beta1TensorboardRun] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1TensorboardRun}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1TensorboardRun'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'tensorboardRunId': opts['tensorboardRunId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1TensorboardRun;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/runs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists TensorboardRuns in a Location.
     * @param {String} parent Required. The resource name of the TensorboardExperiment to list TensorboardRuns. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the TensorboardRuns that match the filter expression.
     * @param {String} [orderBy] Field to use to sort the list.
     * @param {Number} [pageSize] The maximum number of TensorboardRuns to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardRuns are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous TensorboardService.ListTensorboardRuns call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardRuns must match the call that provided the page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListTensorboardRunsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/runs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1TensorboardTimeSeries} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TensorboardTimeSeries.
     * @param {String} parent Required. The resource name of the TensorboardRun to create the TensorboardTimeSeries in. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [tensorboardTimeSeriesId] Optional. The user specified unique ID to use for the TensorboardTimeSeries, which becomes the final component of the TensorboardTimeSeries's resource name. This value should match \"a-z0-9{0, 127}\"
     * @param {module:model/GoogleCloudAiplatformV1beta1TensorboardTimeSeries} [googleCloudAiplatformV1beta1TensorboardTimeSeries] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1TensorboardTimeSeries}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1TensorboardTimeSeries'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'tensorboardTimeSeriesId': opts['tensorboardTimeSeriesId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1TensorboardTimeSeries;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/timeSeries', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeries operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Exports a TensorboardTimeSeries' data. Data is returned in paginated responses.
     * @param {String} tensorboardTimeSeries Required. The resource name of the TensorboardTimeSeries to export data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest} [googleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeries(tensorboardTimeSeries, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataRequest'];
      // verify the required parameter 'tensorboardTimeSeries' is set
      if (tensorboardTimeSeries === undefined || tensorboardTimeSeries === null) {
        throw new Error("Missing the required parameter 'tensorboardTimeSeries' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesExportTensorboardTimeSeries");
      }

      let pathParams = {
        'tensorboardTimeSeries': tensorboardTimeSeries
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ExportTensorboardTimeSeriesDataResponse;
      return this.apiClient.callApi(
        '/v1beta1/{tensorboardTimeSeries}:exportTensorboardTimeSeries', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists TensorboardTimeSeries in a Location.
     * @param {String} parent Required. The resource name of the TensorboardRun to list TensorboardTimeSeries. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the TensorboardTimeSeries that match the filter expression.
     * @param {String} [orderBy] Field to use to sort the list.
     * @param {Number} [pageSize] The maximum number of TensorboardTimeSeries to return. The service may return fewer than this value. If unspecified, at most 50 TensorboardTimeSeries are returned. The maximum value is 1000; values above 1000 are coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous TensorboardService.ListTensorboardTimeSeries call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboardTimeSeries must match the call that provided the page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListTensorboardTimeSeriesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/timeSeries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatch operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1TensorboardTimeSeries} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a TensorboardTimeSeries.
     * @param {String} name Output only. Name of the TensorboardTimeSeries.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [updateMask] Required. Field mask is used to specify the fields to be overwritten in the TensorboardTimeSeries resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field is overwritten if it's in the mask. If the user does not provide a mask then all fields are overwritten if new values are specified.
     * @param {module:model/GoogleCloudAiplatformV1beta1TensorboardTimeSeries} [googleCloudAiplatformV1beta1TensorboardTimeSeries] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1TensorboardTimeSeries}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatch(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1TensorboardTimeSeries'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesPatch");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'updateMask': opts['updateMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1TensorboardTimeSeries;
      return this.apiClient.callApi(
        '/v1beta1/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesRead operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reads a TensorboardTimeSeries' data. By default, if the number of data points stored is less than 1000, all data is returned. Otherwise, 1000 data points is randomly selected from this time series and returned. This value can be changed by changing max_data_points, which can't be greater than 10k.
     * @param {String} tensorboardTimeSeries Required. The resource name of the TensorboardTimeSeries to read data from. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Reads the TensorboardTimeSeries' data that match the filter expression.
     * @param {Number} [maxDataPoints] The maximum number of TensorboardTimeSeries' data to return. This value should be a positive integer. This value can be set to -1 to return all data.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesRead(tensorboardTimeSeries, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'tensorboardTimeSeries' is set
      if (tensorboardTimeSeries === undefined || tensorboardTimeSeries === null) {
        throw new Error("Missing the required parameter 'tensorboardTimeSeries' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesRead");
      }

      let pathParams = {
        'tensorboardTimeSeries': tensorboardTimeSeries
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'maxDataPoints': opts['maxDataPoints']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ReadTensorboardTimeSeriesDataResponse;
      return this.apiClient.callApi(
        '/v1beta1/{tensorboardTimeSeries}:read', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobData operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobDataCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets bytes of TensorboardBlobs. This is to allow reading blob data stored in consumer project's Cloud Storage bucket without users having to obtain Cloud Storage access permission.
     * @param {String} timeSeries Required. The resource name of the TensorboardTimeSeries to list Blobs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}/timeSeries/{time_series}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Array.<String>} [blobIds] IDs of the blobs to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobDataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobData(timeSeries, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'timeSeries' is set
      if (timeSeries === undefined || timeSeries === null) {
        throw new Error("Missing the required parameter 'timeSeries' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsTimeSeriesReadBlobData");
      }

      let pathParams = {
        'timeSeries': timeSeries
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'blobIds': this.apiClient.buildCollectionParam(opts['blobIds'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ReadTensorboardBlobDataResponse;
      return this.apiClient.callApi(
        '/v1beta1/{timeSeries}:readBlobData', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsRunsWrite operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsWriteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Write time series data points into multiple TensorboardTimeSeries under a TensorboardRun. If any data fail to be ingested, an error is returned.
     * @param {String} tensorboardRun Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1WriteTensorboardRunDataRequest} [googleCloudAiplatformV1beta1WriteTensorboardRunDataRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsRunsWriteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsRunsWrite(tensorboardRun, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1WriteTensorboardRunDataRequest'];
      // verify the required parameter 'tensorboardRun' is set
      if (tensorboardRun === undefined || tensorboardRun === null) {
        throw new Error("Missing the required parameter 'tensorboardRun' when calling aiplatformProjectsLocationsTensorboardsExperimentsRunsWrite");
      }

      let pathParams = {
        'tensorboardRun': tensorboardRun
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{tensorboardRun}:write', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsExperimentsWrite operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsWriteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Write time series data points of multiple TensorboardTimeSeries in multiple TensorboardRun's. If any data fail to be ingested, an error is returned.
     * @param {String} tensorboardExperiment Required. The resource name of the TensorboardExperiment to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest} [googleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsExperimentsWriteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsTensorboardsExperimentsWrite(tensorboardExperiment, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1WriteTensorboardExperimentDataRequest'];
      // verify the required parameter 'tensorboardExperiment' is set
      if (tensorboardExperiment === undefined || tensorboardExperiment === null) {
        throw new Error("Missing the required parameter 'tensorboardExperiment' when calling aiplatformProjectsLocationsTensorboardsExperimentsWrite");
      }

      let pathParams = {
        'tensorboardExperiment': tensorboardExperiment
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{tensorboardExperiment}:write', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListTensorboardsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists Tensorboards in a Location.
     * @param {String} parent Required. The resource name of the Location to list Tensorboards. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] Lists the Tensorboards that match the filter expression.
     * @param {String} [orderBy] Field to use to sort the list.
     * @param {Number} [pageSize] The maximum number of Tensorboards to return. The service may return fewer than this value. If unspecified, at most 100 Tensorboards are returned. The maximum value is 100; values above 100 are coerced to 100.
     * @param {String} [pageToken] A page token, received from a previous TensorboardService.ListTensorboards call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to TensorboardService.ListTensorboards must match the call that provided the page token.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListTensorboardsResponse}
     */
    aiplatformProjectsLocationsTensorboardsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTensorboardsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListTensorboardsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/tensorboards', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsReadSize operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsReadSizeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the storage size for a given TensorBoard instance.
     * @param {String} tensorboard Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsReadSizeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse}
     */
    aiplatformProjectsLocationsTensorboardsReadSize(tensorboard, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'tensorboard' is set
      if (tensorboard === undefined || tensorboard === null) {
        throw new Error("Missing the required parameter 'tensorboard' when calling aiplatformProjectsLocationsTensorboardsReadSize");
      }

      let pathParams = {
        'tensorboard': tensorboard
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ReadTensorboardSizeResponse;
      return this.apiClient.callApi(
        '/v1beta1/{tensorboard}:readSize', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTensorboardsReadUsage operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsReadUsageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of monthly active users for a given TensorBoard instance.
     * @param {String} tensorboard Required. The name of the Tensorboard resource. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTensorboardsReadUsageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse}
     */
    aiplatformProjectsLocationsTensorboardsReadUsage(tensorboard, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'tensorboard' is set
      if (tensorboard === undefined || tensorboard === null) {
        throw new Error("Missing the required parameter 'tensorboard' when calling aiplatformProjectsLocationsTensorboardsReadUsage");
      }

      let pathParams = {
        'tensorboard': tensorboard
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ReadTensorboardUsageResponse;
      return this.apiClient.callApi(
        '/v1beta1/{tensorboard}:readUsage', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTrainingPipelinesCreate operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1TrainingPipeline} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a TrainingPipeline. A created TrainingPipeline right away will be attempted to be run.
     * @param {String} parent Required. The resource name of the Location to create the TrainingPipeline in. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/GoogleCloudAiplatformV1beta1TrainingPipeline} [googleCloudAiplatformV1beta1TrainingPipeline] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1TrainingPipeline}
     */
    aiplatformProjectsLocationsTrainingPipelinesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudAiplatformV1beta1TrainingPipeline'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTrainingPipelinesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1TrainingPipeline;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/trainingPipelines', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTrainingPipelinesList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists TrainingPipelines in a Location.
     * @param {String} parent Required. The resource name of the Location to list the TrainingPipelines from. Format: `projects/{project}/locations/{location}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter. Supported fields: * `display_name` supports `=`, `!=` comparisons, and `:` wildcard. * `state` supports `=`, `!=` comparisons. * `training_task_definition` `=`, `!=` comparisons, and `:` wildcard. * `create_time` supports `=`, `!=`,`<`, `<=`,`>`, `>=` comparisons. `create_time` must be in RFC 3339 format. * `labels` supports general map functions that is: `labels.key=value` - key:value equality `labels.key:* - key existence Some examples of using the filter are: * `state=\"PIPELINE_STATE_SUCCEEDED\" AND display_name:\"my_pipeline_*\"` * `state!=\"PIPELINE_STATE_FAILED\" OR display_name=\"my_pipeline\"` * `NOT display_name=\"my_pipeline\"` * `create_time>\"2021-05-18T00:00:00Z\"` * `training_task_definition:\"*automl_text_classification*\"`
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token. Typically obtained via ListTrainingPipelinesResponse.next_page_token of the previous PipelineService.ListTrainingPipelines call.
     * @param {String} [readMask] Mask specifying which fields to read.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse}
     */
    aiplatformProjectsLocationsTrainingPipelinesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling aiplatformProjectsLocationsTrainingPipelinesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken'],
        'readMask': opts['readMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleCloudAiplatformV1beta1ListTrainingPipelinesResponse;
      return this.apiClient.callApi(
        '/v1beta1/{parent}/trainingPipelines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTrainingPipelinesOperationsCancel operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesOperationsCancelCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
     * @param {String} name The name of the operation resource to be cancelled.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesOperationsCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsTrainingPipelinesOperationsCancel(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsTrainingPipelinesOperationsCancel");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{name}:cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTrainingPipelinesOperationsDelete operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesOperationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
     * @param {String} name The name of the operation resource to be deleted.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [force] If set to true, any specialist managers in this SpecialistPool will also be deleted. (Otherwise, the request will only work if the SpecialistPool has no specialist managers.)
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesOperationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    aiplatformProjectsLocationsTrainingPipelinesOperationsDelete(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsTrainingPipelinesOperationsDelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'force': opts['force']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1beta1/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTrainingPipelinesOperationsList operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesOperationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningListOperationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
     * @param {String} name The name of the operation's parent resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesOperationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningListOperationsResponse}
     */
    aiplatformProjectsLocationsTrainingPipelinesOperationsList(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsTrainingPipelinesOperationsList");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningListOperationsResponse;
      return this.apiClient.callApi(
        '/v1beta1/{name}/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the aiplatformProjectsLocationsTrainingPipelinesOperationsWait operation.
     * @callback module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesOperationsWaitCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleLongrunningOperation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Waits until the specified long-running operation is done or reaches at most a specified timeout, returning the latest state. If the operation is already done, the latest state is immediately returned. If the timeout specified is greater than the default HTTP/RPC timeout, the HTTP/RPC timeout is used. If the server does not support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Note that this method is on a best-effort basis. It may return the latest state before the specified timeout (including immediately), meaning even an immediate response is no guarantee that the operation is done.
     * @param {String} name The name of the operation resource to wait on.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [timeout] The maximum duration to wait before timing out. If left blank, the wait will be at most the time permitted by the underlying HTTP/RPC protocol. If RPC context deadline is also specified, the shorter one will be used.
     * @param {module:api/ProjectsApi~aiplatformProjectsLocationsTrainingPipelinesOperationsWaitCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleLongrunningOperation}
     */
    aiplatformProjectsLocationsTrainingPipelinesOperationsWait(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling aiplatformProjectsLocationsTrainingPipelinesOperationsWait");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'timeout': opts['timeout']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GoogleLongrunningOperation;
      return this.apiClient.callApi(
        '/v1beta1/{name}:wait', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
