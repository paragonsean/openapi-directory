# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1SampledShapleyAttribution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path_count: int=None):
        """GoogleCloudAiplatformV1SampledShapleyAttribution - a model defined in OpenAPI

        :param path_count: The path_count of this GoogleCloudAiplatformV1SampledShapleyAttribution.
        """
        self.openapi_types = {
            'path_count': int
        }

        self.attribute_map = {
            'path_count': 'pathCount'
        }

        self._path_count = path_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1SampledShapleyAttribution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1SampledShapleyAttribution of this GoogleCloudAiplatformV1SampledShapleyAttribution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path_count(self):
        """Gets the path_count of this GoogleCloudAiplatformV1SampledShapleyAttribution.

        Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.

        :return: The path_count of this GoogleCloudAiplatformV1SampledShapleyAttribution.
        :rtype: int
        """
        return self._path_count

    @path_count.setter
    def path_count(self, path_count):
        """Sets the path_count of this GoogleCloudAiplatformV1SampledShapleyAttribution.

        Required. The number of feature permutations to consider when approximating the Shapley values. Valid range of its value is [1, 50], inclusively.

        :param path_count: The path_count of this GoogleCloudAiplatformV1SampledShapleyAttribution.
        :type path_count: int
        """

        self._path_count = path_count
