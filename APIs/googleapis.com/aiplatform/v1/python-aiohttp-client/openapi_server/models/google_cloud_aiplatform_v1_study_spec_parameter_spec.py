# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_parameter_spec_categorical_value_spec import GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_parameter_spec_conditional_parameter_spec import GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_parameter_spec_discrete_value_spec import GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_parameter_spec_double_value_spec import GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_parameter_spec_integer_value_spec import GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec
from openapi_server import util


class GoogleCloudAiplatformV1StudySpecParameterSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categorical_value_spec: GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec=None, conditional_parameter_specs: List[GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec]=None, discrete_value_spec: GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec=None, double_value_spec: GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec=None, integer_value_spec: GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec=None, parameter_id: str=None, scale_type: str=None):
        """GoogleCloudAiplatformV1StudySpecParameterSpec - a model defined in OpenAPI

        :param categorical_value_spec: The categorical_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :param conditional_parameter_specs: The conditional_parameter_specs of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :param discrete_value_spec: The discrete_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :param double_value_spec: The double_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :param integer_value_spec: The integer_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :param parameter_id: The parameter_id of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :param scale_type: The scale_type of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        """
        self.openapi_types = {
            'categorical_value_spec': GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec,
            'conditional_parameter_specs': List[GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec],
            'discrete_value_spec': GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec,
            'double_value_spec': GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec,
            'integer_value_spec': GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec,
            'parameter_id': str,
            'scale_type': str
        }

        self.attribute_map = {
            'categorical_value_spec': 'categoricalValueSpec',
            'conditional_parameter_specs': 'conditionalParameterSpecs',
            'discrete_value_spec': 'discreteValueSpec',
            'double_value_spec': 'doubleValueSpec',
            'integer_value_spec': 'integerValueSpec',
            'parameter_id': 'parameterId',
            'scale_type': 'scaleType'
        }

        self._categorical_value_spec = categorical_value_spec
        self._conditional_parameter_specs = conditional_parameter_specs
        self._discrete_value_spec = discrete_value_spec
        self._double_value_spec = double_value_spec
        self._integer_value_spec = integer_value_spec
        self._parameter_id = parameter_id
        self._scale_type = scale_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1StudySpecParameterSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1StudySpecParameterSpec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categorical_value_spec(self):
        """Gets the categorical_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.


        :return: The categorical_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :rtype: GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec
        """
        return self._categorical_value_spec

    @categorical_value_spec.setter
    def categorical_value_spec(self, categorical_value_spec):
        """Sets the categorical_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.


        :param categorical_value_spec: The categorical_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :type categorical_value_spec: GoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec
        """

        self._categorical_value_spec = categorical_value_spec

    @property
    def conditional_parameter_specs(self):
        """Gets the conditional_parameter_specs of this GoogleCloudAiplatformV1StudySpecParameterSpec.

        A conditional parameter node is active if the parameter's value matches the conditional node's parent_value_condition. If two items in conditional_parameter_specs have the same name, they must have disjoint parent_value_condition.

        :return: The conditional_parameter_specs of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :rtype: List[GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec]
        """
        return self._conditional_parameter_specs

    @conditional_parameter_specs.setter
    def conditional_parameter_specs(self, conditional_parameter_specs):
        """Sets the conditional_parameter_specs of this GoogleCloudAiplatformV1StudySpecParameterSpec.

        A conditional parameter node is active if the parameter's value matches the conditional node's parent_value_condition. If two items in conditional_parameter_specs have the same name, they must have disjoint parent_value_condition.

        :param conditional_parameter_specs: The conditional_parameter_specs of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :type conditional_parameter_specs: List[GoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec]
        """

        self._conditional_parameter_specs = conditional_parameter_specs

    @property
    def discrete_value_spec(self):
        """Gets the discrete_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.


        :return: The discrete_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :rtype: GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec
        """
        return self._discrete_value_spec

    @discrete_value_spec.setter
    def discrete_value_spec(self, discrete_value_spec):
        """Sets the discrete_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.


        :param discrete_value_spec: The discrete_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :type discrete_value_spec: GoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec
        """

        self._discrete_value_spec = discrete_value_spec

    @property
    def double_value_spec(self):
        """Gets the double_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.


        :return: The double_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :rtype: GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec
        """
        return self._double_value_spec

    @double_value_spec.setter
    def double_value_spec(self, double_value_spec):
        """Sets the double_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.


        :param double_value_spec: The double_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :type double_value_spec: GoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec
        """

        self._double_value_spec = double_value_spec

    @property
    def integer_value_spec(self):
        """Gets the integer_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.


        :return: The integer_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :rtype: GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec
        """
        return self._integer_value_spec

    @integer_value_spec.setter
    def integer_value_spec(self, integer_value_spec):
        """Sets the integer_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.


        :param integer_value_spec: The integer_value_spec of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :type integer_value_spec: GoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec
        """

        self._integer_value_spec = integer_value_spec

    @property
    def parameter_id(self):
        """Gets the parameter_id of this GoogleCloudAiplatformV1StudySpecParameterSpec.

        Required. The ID of the parameter. Must not contain whitespaces and must be unique amongst all ParameterSpecs.

        :return: The parameter_id of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :rtype: str
        """
        return self._parameter_id

    @parameter_id.setter
    def parameter_id(self, parameter_id):
        """Sets the parameter_id of this GoogleCloudAiplatformV1StudySpecParameterSpec.

        Required. The ID of the parameter. Must not contain whitespaces and must be unique amongst all ParameterSpecs.

        :param parameter_id: The parameter_id of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :type parameter_id: str
        """

        self._parameter_id = parameter_id

    @property
    def scale_type(self):
        """Gets the scale_type of this GoogleCloudAiplatformV1StudySpecParameterSpec.

        How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters.

        :return: The scale_type of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :rtype: str
        """
        return self._scale_type

    @scale_type.setter
    def scale_type(self, scale_type):
        """Sets the scale_type of this GoogleCloudAiplatformV1StudySpecParameterSpec.

        How the parameter should be scaled. Leave unset for `CATEGORICAL` parameters.

        :param scale_type: The scale_type of this GoogleCloudAiplatformV1StudySpecParameterSpec.
        :type scale_type: str
        """
        allowed_values = ["SCALE_TYPE_UNSPECIFIED", "UNIT_LINEAR_SCALE", "UNIT_LOG_SCALE", "UNIT_REVERSE_LOG_SCALE"]  # noqa: E501
        if scale_type not in allowed_values:
            raise ValueError(
                "Invalid value for `scale_type` ({0}), must be one of {1}"
                .format(scale_type, allowed_values)
            )

        self._scale_type = scale_type
