# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_ai_large_models_vision_named_bounding_box import CloudAiLargeModelsVisionNamedBoundingBox
from openapi_server import util


class CloudAiLargeModelsVisionSemanticFilterResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, named_bounding_boxes: List[CloudAiLargeModelsVisionNamedBoundingBox]=None, passed_semantic_filter: bool=None):
        """CloudAiLargeModelsVisionSemanticFilterResponse - a model defined in OpenAPI

        :param named_bounding_boxes: The named_bounding_boxes of this CloudAiLargeModelsVisionSemanticFilterResponse.
        :param passed_semantic_filter: The passed_semantic_filter of this CloudAiLargeModelsVisionSemanticFilterResponse.
        """
        self.openapi_types = {
            'named_bounding_boxes': List[CloudAiLargeModelsVisionNamedBoundingBox],
            'passed_semantic_filter': bool
        }

        self.attribute_map = {
            'named_bounding_boxes': 'namedBoundingBoxes',
            'passed_semantic_filter': 'passedSemanticFilter'
        }

        self._named_bounding_boxes = named_bounding_boxes
        self._passed_semantic_filter = passed_semantic_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudAiLargeModelsVisionSemanticFilterResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudAiLargeModelsVisionSemanticFilterResponse of this CloudAiLargeModelsVisionSemanticFilterResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def named_bounding_boxes(self):
        """Gets the named_bounding_boxes of this CloudAiLargeModelsVisionSemanticFilterResponse.

        Class labels of the bounding boxes that failed the semantic filtering. Bounding box coordinates.

        :return: The named_bounding_boxes of this CloudAiLargeModelsVisionSemanticFilterResponse.
        :rtype: List[CloudAiLargeModelsVisionNamedBoundingBox]
        """
        return self._named_bounding_boxes

    @named_bounding_boxes.setter
    def named_bounding_boxes(self, named_bounding_boxes):
        """Sets the named_bounding_boxes of this CloudAiLargeModelsVisionSemanticFilterResponse.

        Class labels of the bounding boxes that failed the semantic filtering. Bounding box coordinates.

        :param named_bounding_boxes: The named_bounding_boxes of this CloudAiLargeModelsVisionSemanticFilterResponse.
        :type named_bounding_boxes: List[CloudAiLargeModelsVisionNamedBoundingBox]
        """

        self._named_bounding_boxes = named_bounding_boxes

    @property
    def passed_semantic_filter(self):
        """Gets the passed_semantic_filter of this CloudAiLargeModelsVisionSemanticFilterResponse.

        This response is added when semantic filter config is turned on in EditConfig. It reports if this image is passed semantic filter response. If passed_semantic_filter is false, the bounding box information will be populated for user to check what caused the semantic filter to fail.

        :return: The passed_semantic_filter of this CloudAiLargeModelsVisionSemanticFilterResponse.
        :rtype: bool
        """
        return self._passed_semantic_filter

    @passed_semantic_filter.setter
    def passed_semantic_filter(self, passed_semantic_filter):
        """Sets the passed_semantic_filter of this CloudAiLargeModelsVisionSemanticFilterResponse.

        This response is added when semantic filter config is turned on in EditConfig. It reports if this image is passed semantic filter response. If passed_semantic_filter is false, the bounding box information will be populated for user to check what caused the semantic filter to fail.

        :param passed_semantic_filter: The passed_semantic_filter of this CloudAiLargeModelsVisionSemanticFilterResponse.
        :type passed_semantic_filter: bool
        """

        self._passed_semantic_filter = passed_semantic_filter
