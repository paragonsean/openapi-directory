# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_pipeline_job_runtime_config_input_artifact import GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact
from openapi_server.models.google_cloud_aiplatform_v1_value import GoogleCloudAiplatformV1Value
from openapi_server import util


class GoogleCloudAiplatformV1PipelineJobRuntimeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failure_policy: str=None, gcs_output_directory: str=None, input_artifacts: Dict[str, GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact]=None, parameter_values: Dict[str, object]=None, parameters: Dict[str, GoogleCloudAiplatformV1Value]=None):
        """GoogleCloudAiplatformV1PipelineJobRuntimeConfig - a model defined in OpenAPI

        :param failure_policy: The failure_policy of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :param gcs_output_directory: The gcs_output_directory of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :param input_artifacts: The input_artifacts of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :param parameter_values: The parameter_values of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :param parameters: The parameters of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        """
        self.openapi_types = {
            'failure_policy': str,
            'gcs_output_directory': str,
            'input_artifacts': Dict[str, GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact],
            'parameter_values': Dict[str, object],
            'parameters': Dict[str, GoogleCloudAiplatformV1Value]
        }

        self.attribute_map = {
            'failure_policy': 'failurePolicy',
            'gcs_output_directory': 'gcsOutputDirectory',
            'input_artifacts': 'inputArtifacts',
            'parameter_values': 'parameterValues',
            'parameters': 'parameters'
        }

        self._failure_policy = failure_policy
        self._gcs_output_directory = gcs_output_directory
        self._input_artifacts = input_artifacts
        self._parameter_values = parameter_values
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1PipelineJobRuntimeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1PipelineJobRuntimeConfig of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failure_policy(self):
        """Gets the failure_policy of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        Represents the failure policy of a pipeline. Currently, the default of a pipeline is that the pipeline will continue to run until no more tasks can be executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling any new tasks when a task has failed. Any scheduled tasks will continue to completion.

        :return: The failure_policy of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :rtype: str
        """
        return self._failure_policy

    @failure_policy.setter
    def failure_policy(self, failure_policy):
        """Sets the failure_policy of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        Represents the failure policy of a pipeline. Currently, the default of a pipeline is that the pipeline will continue to run until no more tasks can be executed, also known as PIPELINE_FAILURE_POLICY_FAIL_SLOW. However, if a pipeline is set to PIPELINE_FAILURE_POLICY_FAIL_FAST, it will stop scheduling any new tasks when a task has failed. Any scheduled tasks will continue to completion.

        :param failure_policy: The failure_policy of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :type failure_policy: str
        """
        allowed_values = ["PIPELINE_FAILURE_POLICY_UNSPECIFIED", "PIPELINE_FAILURE_POLICY_FAIL_SLOW", "PIPELINE_FAILURE_POLICY_FAIL_FAST"]  # noqa: E501
        if failure_policy not in allowed_values:
            raise ValueError(
                "Invalid value for `failure_policy` ({0}), must be one of {1}"
                .format(failure_policy, allowed_values)
            )

        self._failure_policy = failure_policy

    @property
    def gcs_output_directory(self):
        """Gets the gcs_output_directory of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        Required. A path in a Cloud Storage bucket, which will be treated as the root output directory of the pipeline. It is used by the system to generate the paths of output artifacts. The artifact paths are generated with a sub-path pattern `{job_id}/{task_id}/{output_key}` under the specified output directory. The service account specified in this pipeline must have the `storage.objects.get` and `storage.objects.create` permissions for this bucket.

        :return: The gcs_output_directory of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :rtype: str
        """
        return self._gcs_output_directory

    @gcs_output_directory.setter
    def gcs_output_directory(self, gcs_output_directory):
        """Sets the gcs_output_directory of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        Required. A path in a Cloud Storage bucket, which will be treated as the root output directory of the pipeline. It is used by the system to generate the paths of output artifacts. The artifact paths are generated with a sub-path pattern `{job_id}/{task_id}/{output_key}` under the specified output directory. The service account specified in this pipeline must have the `storage.objects.get` and `storage.objects.create` permissions for this bucket.

        :param gcs_output_directory: The gcs_output_directory of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :type gcs_output_directory: str
        """

        self._gcs_output_directory = gcs_output_directory

    @property
    def input_artifacts(self):
        """Gets the input_artifacts of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        The runtime artifacts of the PipelineJob. The key will be the input artifact name and the value would be one of the InputArtifact.

        :return: The input_artifacts of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :rtype: Dict[str, GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact]
        """
        return self._input_artifacts

    @input_artifacts.setter
    def input_artifacts(self, input_artifacts):
        """Sets the input_artifacts of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        The runtime artifacts of the PipelineJob. The key will be the input artifact name and the value would be one of the InputArtifact.

        :param input_artifacts: The input_artifacts of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :type input_artifacts: Dict[str, GoogleCloudAiplatformV1PipelineJobRuntimeConfigInputArtifact]
        """

        self._input_artifacts = input_artifacts

    @property
    def parameter_values(self):
        """Gets the parameter_values of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines built using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL.

        :return: The parameter_values of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :rtype: Dict[str, object]
        """
        return self._parameter_values

    @parameter_values.setter
    def parameter_values(self, parameter_values):
        """Sets the parameter_values of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.1.0, such as pipelines built using Kubeflow Pipelines SDK 1.9 or higher and the v2 DSL.

        :param parameter_values: The parameter_values of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :type parameter_values: Dict[str, object]
        """

        self._parameter_values = parameter_values

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        Deprecated. Use RuntimeConfig.parameter_values instead. The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.0.0 or lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or lower.

        :return: The parameters of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :rtype: Dict[str, GoogleCloudAiplatformV1Value]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.

        Deprecated. Use RuntimeConfig.parameter_values instead. The runtime parameters of the PipelineJob. The parameters will be passed into PipelineJob.pipeline_spec to replace the placeholders at runtime. This field is used by pipelines built using `PipelineJob.pipeline_spec.schema_version` 2.0.0 or lower, such as pipelines built using Kubeflow Pipelines SDK 1.8 or lower.

        :param parameters: The parameters of this GoogleCloudAiplatformV1PipelineJobRuntimeConfig.
        :type parameters: Dict[str, GoogleCloudAiplatformV1Value]
        """

        self._parameters = parameters
