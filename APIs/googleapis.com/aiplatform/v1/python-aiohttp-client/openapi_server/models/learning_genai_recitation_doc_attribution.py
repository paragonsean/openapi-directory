# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_date import GoogleTypeDate
from openapi_server import util


class LearningGenaiRecitationDocAttribution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amarna_id: str=None, arxiv_id: str=None, author: str=None, bibkey: str=None, biorxiv_id: str=None, book_title: str=None, book_volume_id: str=None, conversation_id: str=None, dataset: str=None, filepath: str=None, gemini_id: str=None, gnews_article_title: str=None, goodall_example_id: str=None, is_opt_out: bool=None, is_prompt: bool=None, lamda_example_id: str=None, license: str=None, meena_conversation_id: str=None, natural_language_code: str=None, no_attribution: bool=None, podcast_utterance_id: str=None, publication_date: GoogleTypeDate=None, quality_score_experiment_only: float=None, repo: str=None, url: str=None, volume_id: str=None, wikipedia_article_title: str=None, youtube_video_id: str=None):
        """LearningGenaiRecitationDocAttribution - a model defined in OpenAPI

        :param amarna_id: The amarna_id of this LearningGenaiRecitationDocAttribution.
        :param arxiv_id: The arxiv_id of this LearningGenaiRecitationDocAttribution.
        :param author: The author of this LearningGenaiRecitationDocAttribution.
        :param bibkey: The bibkey of this LearningGenaiRecitationDocAttribution.
        :param biorxiv_id: The biorxiv_id of this LearningGenaiRecitationDocAttribution.
        :param book_title: The book_title of this LearningGenaiRecitationDocAttribution.
        :param book_volume_id: The book_volume_id of this LearningGenaiRecitationDocAttribution.
        :param conversation_id: The conversation_id of this LearningGenaiRecitationDocAttribution.
        :param dataset: The dataset of this LearningGenaiRecitationDocAttribution.
        :param filepath: The filepath of this LearningGenaiRecitationDocAttribution.
        :param gemini_id: The gemini_id of this LearningGenaiRecitationDocAttribution.
        :param gnews_article_title: The gnews_article_title of this LearningGenaiRecitationDocAttribution.
        :param goodall_example_id: The goodall_example_id of this LearningGenaiRecitationDocAttribution.
        :param is_opt_out: The is_opt_out of this LearningGenaiRecitationDocAttribution.
        :param is_prompt: The is_prompt of this LearningGenaiRecitationDocAttribution.
        :param lamda_example_id: The lamda_example_id of this LearningGenaiRecitationDocAttribution.
        :param license: The license of this LearningGenaiRecitationDocAttribution.
        :param meena_conversation_id: The meena_conversation_id of this LearningGenaiRecitationDocAttribution.
        :param natural_language_code: The natural_language_code of this LearningGenaiRecitationDocAttribution.
        :param no_attribution: The no_attribution of this LearningGenaiRecitationDocAttribution.
        :param podcast_utterance_id: The podcast_utterance_id of this LearningGenaiRecitationDocAttribution.
        :param publication_date: The publication_date of this LearningGenaiRecitationDocAttribution.
        :param quality_score_experiment_only: The quality_score_experiment_only of this LearningGenaiRecitationDocAttribution.
        :param repo: The repo of this LearningGenaiRecitationDocAttribution.
        :param url: The url of this LearningGenaiRecitationDocAttribution.
        :param volume_id: The volume_id of this LearningGenaiRecitationDocAttribution.
        :param wikipedia_article_title: The wikipedia_article_title of this LearningGenaiRecitationDocAttribution.
        :param youtube_video_id: The youtube_video_id of this LearningGenaiRecitationDocAttribution.
        """
        self.openapi_types = {
            'amarna_id': str,
            'arxiv_id': str,
            'author': str,
            'bibkey': str,
            'biorxiv_id': str,
            'book_title': str,
            'book_volume_id': str,
            'conversation_id': str,
            'dataset': str,
            'filepath': str,
            'gemini_id': str,
            'gnews_article_title': str,
            'goodall_example_id': str,
            'is_opt_out': bool,
            'is_prompt': bool,
            'lamda_example_id': str,
            'license': str,
            'meena_conversation_id': str,
            'natural_language_code': str,
            'no_attribution': bool,
            'podcast_utterance_id': str,
            'publication_date': GoogleTypeDate,
            'quality_score_experiment_only': float,
            'repo': str,
            'url': str,
            'volume_id': str,
            'wikipedia_article_title': str,
            'youtube_video_id': str
        }

        self.attribute_map = {
            'amarna_id': 'amarnaId',
            'arxiv_id': 'arxivId',
            'author': 'author',
            'bibkey': 'bibkey',
            'biorxiv_id': 'biorxivId',
            'book_title': 'bookTitle',
            'book_volume_id': 'bookVolumeId',
            'conversation_id': 'conversationId',
            'dataset': 'dataset',
            'filepath': 'filepath',
            'gemini_id': 'geminiId',
            'gnews_article_title': 'gnewsArticleTitle',
            'goodall_example_id': 'goodallExampleId',
            'is_opt_out': 'isOptOut',
            'is_prompt': 'isPrompt',
            'lamda_example_id': 'lamdaExampleId',
            'license': 'license',
            'meena_conversation_id': 'meenaConversationId',
            'natural_language_code': 'naturalLanguageCode',
            'no_attribution': 'noAttribution',
            'podcast_utterance_id': 'podcastUtteranceId',
            'publication_date': 'publicationDate',
            'quality_score_experiment_only': 'qualityScoreExperimentOnly',
            'repo': 'repo',
            'url': 'url',
            'volume_id': 'volumeId',
            'wikipedia_article_title': 'wikipediaArticleTitle',
            'youtube_video_id': 'youtubeVideoId'
        }

        self._amarna_id = amarna_id
        self._arxiv_id = arxiv_id
        self._author = author
        self._bibkey = bibkey
        self._biorxiv_id = biorxiv_id
        self._book_title = book_title
        self._book_volume_id = book_volume_id
        self._conversation_id = conversation_id
        self._dataset = dataset
        self._filepath = filepath
        self._gemini_id = gemini_id
        self._gnews_article_title = gnews_article_title
        self._goodall_example_id = goodall_example_id
        self._is_opt_out = is_opt_out
        self._is_prompt = is_prompt
        self._lamda_example_id = lamda_example_id
        self._license = license
        self._meena_conversation_id = meena_conversation_id
        self._natural_language_code = natural_language_code
        self._no_attribution = no_attribution
        self._podcast_utterance_id = podcast_utterance_id
        self._publication_date = publication_date
        self._quality_score_experiment_only = quality_score_experiment_only
        self._repo = repo
        self._url = url
        self._volume_id = volume_id
        self._wikipedia_article_title = wikipedia_article_title
        self._youtube_video_id = youtube_video_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRecitationDocAttribution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRecitationDocAttribution of this LearningGenaiRecitationDocAttribution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amarna_id(self):
        """Gets the amarna_id of this LearningGenaiRecitationDocAttribution.


        :return: The amarna_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._amarna_id

    @amarna_id.setter
    def amarna_id(self, amarna_id):
        """Sets the amarna_id of this LearningGenaiRecitationDocAttribution.


        :param amarna_id: The amarna_id of this LearningGenaiRecitationDocAttribution.
        :type amarna_id: str
        """

        self._amarna_id = amarna_id

    @property
    def arxiv_id(self):
        """Gets the arxiv_id of this LearningGenaiRecitationDocAttribution.


        :return: The arxiv_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._arxiv_id

    @arxiv_id.setter
    def arxiv_id(self, arxiv_id):
        """Sets the arxiv_id of this LearningGenaiRecitationDocAttribution.


        :param arxiv_id: The arxiv_id of this LearningGenaiRecitationDocAttribution.
        :type arxiv_id: str
        """

        self._arxiv_id = arxiv_id

    @property
    def author(self):
        """Gets the author of this LearningGenaiRecitationDocAttribution.


        :return: The author of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this LearningGenaiRecitationDocAttribution.


        :param author: The author of this LearningGenaiRecitationDocAttribution.
        :type author: str
        """

        self._author = author

    @property
    def bibkey(self):
        """Gets the bibkey of this LearningGenaiRecitationDocAttribution.


        :return: The bibkey of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._bibkey

    @bibkey.setter
    def bibkey(self, bibkey):
        """Sets the bibkey of this LearningGenaiRecitationDocAttribution.


        :param bibkey: The bibkey of this LearningGenaiRecitationDocAttribution.
        :type bibkey: str
        """

        self._bibkey = bibkey

    @property
    def biorxiv_id(self):
        """Gets the biorxiv_id of this LearningGenaiRecitationDocAttribution.

        ID of the paper in bioarxiv like ddoi.org/{biorxiv_id} eg: https://doi.org/10.1101/343517

        :return: The biorxiv_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._biorxiv_id

    @biorxiv_id.setter
    def biorxiv_id(self, biorxiv_id):
        """Sets the biorxiv_id of this LearningGenaiRecitationDocAttribution.

        ID of the paper in bioarxiv like ddoi.org/{biorxiv_id} eg: https://doi.org/10.1101/343517

        :param biorxiv_id: The biorxiv_id of this LearningGenaiRecitationDocAttribution.
        :type biorxiv_id: str
        """

        self._biorxiv_id = biorxiv_id

    @property
    def book_title(self):
        """Gets the book_title of this LearningGenaiRecitationDocAttribution.


        :return: The book_title of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._book_title

    @book_title.setter
    def book_title(self, book_title):
        """Sets the book_title of this LearningGenaiRecitationDocAttribution.


        :param book_title: The book_title of this LearningGenaiRecitationDocAttribution.
        :type book_title: str
        """

        self._book_title = book_title

    @property
    def book_volume_id(self):
        """Gets the book_volume_id of this LearningGenaiRecitationDocAttribution.

        The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set.

        :return: The book_volume_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._book_volume_id

    @book_volume_id.setter
    def book_volume_id(self, book_volume_id):
        """Sets the book_volume_id of this LearningGenaiRecitationDocAttribution.

        The Oceanographers full-view books dataset uses a 'volume id' as the unique ID of a book. There is a deterministic function from a volume id to a URL under the books.google.com domain. Marked as 'optional' since a volume ID of zero is potentially possible and we want to distinguish that from the volume ID not being set.

        :param book_volume_id: The book_volume_id of this LearningGenaiRecitationDocAttribution.
        :type book_volume_id: str
        """

        self._book_volume_id = book_volume_id

    @property
    def conversation_id(self):
        """Gets the conversation_id of this LearningGenaiRecitationDocAttribution.


        :return: The conversation_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id):
        """Sets the conversation_id of this LearningGenaiRecitationDocAttribution.


        :param conversation_id: The conversation_id of this LearningGenaiRecitationDocAttribution.
        :type conversation_id: str
        """

        self._conversation_id = conversation_id

    @property
    def dataset(self):
        """Gets the dataset of this LearningGenaiRecitationDocAttribution.

        The dataset this document comes from.

        :return: The dataset of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._dataset

    @dataset.setter
    def dataset(self, dataset):
        """Sets the dataset of this LearningGenaiRecitationDocAttribution.

        The dataset this document comes from.

        :param dataset: The dataset of this LearningGenaiRecitationDocAttribution.
        :type dataset: str
        """
        allowed_values = ["DATASET_UNSPECIFIED", "WIKIPEDIA", "WEBDOCS", "WEBDOCS_FINETUNE", "GITHUB_MIRROR", "BOOKS_FULL_VIEW", "BOOKS_PRIVATE", "GNEWS", "ULM_DOCJOINS", "ULM_DOCJOINS_DEDUPED", "MEENA_FC", "PODCAST", "AQUA", "WEB_ASR", "BARD_GOLDEN", "COMMON_SENSE_REASONING", "MATH", "MATH_REASONING", "CLEAN_ARXIV", "LAMDA_FACTUALITY_E2E_QUERY_GENERATION", "LAMDA_FACTUALITY_E2E_RESPONSE_GENERATION", "MASSIVE_FORUM_THREAD_SCORED_BARD", "MASSIVE_FORUM_THREAD_SCORED_LONG_200", "MASSIVE_FORUM_THREAD_SCORED_LONG_500", "DOCUMENT_CHUNKS", "MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN", "MEENA_RESEARCH_PHASE_GOOGLERS", "MEENA_RESPONSE_SAFETY_HUMAN_GEN", "MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST", "MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2", "MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST", "LAMDA_FACTUALITY_TRIGGER", "LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST", "LAMDA_SSI_DISCRIMINATIVE", "ASSISTANT_PERSONALITY_SAFETY", "PODCAST_FINETUNE_DIALOG", "WORLD_QUERY_GENERATOR", "C4_JOINED_DOCJOINS", "HOL4_THEORIES", "HOL_LIGHT_THEORIES", "HOLSTEPS", "ISABELLE_STEP", "ISABELLE_THEORIES", "LEAN_MATHLIB_THEORIES", "LEAN_STEP", "MIZAR_THEORIES", "COQ_STEP", "COQ_THEORIES", "AMPS_KHAN", "AMPS_MATHEMATICA", "CODEY_CODE", "CODE_QA_SE", "CODE_QA_SO", "CODE_QA_FT_FORMAT", "CODE_QA_FT_KNOWLEDGE", "CODE_QA_GITHUB_FILTERED_CODE", "BARD_PERSONALITY_GOLDEN", "ULM_DOCJOINS_WITH_URLS_EN", "ULM_DOCJOINS_WITH_URLS_I18N", "GOODALL_MTV5_GITHUB", "GOODALL_MTV5_BOOKS", "GOODALL_MTV5_C4", "GOODALL_MTV5_WIKIPEDIA", "GOODALL_MW_TOP_100B", "GOODALL_MW_STACK_EXCHANGE", "GOODALL_MW_TOP_0_10B", "GOODALL_MW_TOP_10B_20B", "CODEY_NOTEBOOK_LM_PRETRAINING", "VERTEX_SAFE_FLAN", "GITHUB_MIRROR_V1_0_1", "GITHUB_MIRROR_V2_1_0", "CMS_WIKIPEDIA_LANG_FILTERED", "CMS_STACKOVERFLOW_MULTILINGUAL", "CMS_STACKEXCHANGE", "PUBMED", "GEMINI_DOCJOINS_EN_TOP10B_GCC", "GEMINI_DOCJOINS_EN_TOP10B_TOP20B_GCC", "GEMINI_DOCJOINS_EN_TOP20B_TOP100B_GCC", "GEMINI_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC", "GEMINI_DOCJOINS_I18N_TOP10B_GCC", "GEMINI_DOCJOINS_I18N_TOP10B_TOP20B_GCC", "GEMINI_DOCJOINS_I18N_TOP20B_TOP100B_GCC", "SIMPLIFIED_HTML_V1_GCC", "GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC", "CMS_GITHUB_V4", "GITHUB_HTML_V4", "GITHUB_OTHER_V4", "GITHUB_LONG_TAIL_V4", "CMS_GITHUB_MULTIFILE_V4", "GITHUB_DIFFS_WITH_COMMIT_MESSAGE", "ULM_ARXIV", "NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY", "NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY", "QUORA", "PODCASTS_ROBOTSTXT", "COMBINED_REDDIT", "CANARIES_SHUFFLED", "CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX", "TECHDOCS_DATA_SOURCE", "SCIENCE_PDF_70M_DOCS_FILTERED", "GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED", "GEMINI_V1_WIKIPEDIA_DIFFS", "GEMINI_V1_DOCJOINS_EN_TOP10B_GCC_NODEDUP_050523", "GEMINI_V1_DOCJOINS_EN_TOP10B_TOP20B_GCC_NODEDUP_050523", "GEMINI_V1_DOCJOINS_EN_TOP20B_TOP100B_GCC_NODEDUP_050523", "GEMINI_V1_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC_NODEDUP_050523", "GEMINI_V1_DOCJOINS_I18N_TOP10B_GCC_050523", "GEMINI_V1_DOCJOINS_I18N_TOP10B_TOP20B_GCC_050523", "GEMINI_V1_DOCJOINS_I18N_TOP20B_TOP100B_GCC_050523", "GEMINI_V1_SIMPLIFIED_HTML_V2_GCC", "GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2", "GEMINI_V1_CMS_STACKEXCHANGE_DECONT", "GEMINI_V1_QUORA", "GEMINI_V1_COMBINED_REDDIT", "GEMINI_V1_DOCJOIN_100B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS", "GEMINI_V1_PUBMED", "GEMINI_V1_WEB_MATH_V2", "GEMINI_V1_CMS_GITHUB_V7", "GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7", "GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2", "GEMINI_V1_GITHUB_HTML_CSS_XML_V4", "GEMINI_V1_GITHUB_OTHER_V4", "GEMINI_V1_GITHUB_LONG_TAIL_V4", "GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE", "GEMINI_V1_ULM_ARXIV_SSTABLE", "GEMINI_V1_PODCASTS_ROBOTSTXT", "GEMINI_V1_SCIENCE_PDF_68M_HQ_DOCS_GCC", "GEMINI_V1_GITHUB_TECHDOCS_V2", "GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN", "GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN", "GEMINI_V1_STEM_BOOKS_650K_TEXT", "GEMINI_V1_VQCOCA_1B_MULTIRES_M3W_V2_FILTERED", "GEMINI_V1_VQCOCA_1B_MULTIRES_WEBLI_EN_V4_350M_PREFIXED_FILTERED_IMAGE2TEXT", "GEMINI_V1_VQCOCA_1B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2TEXT", "GEMINI_V1_VQCOCA_1B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2TEXT", "GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_EN_PREFIXED_IMAGE2TEXT", "GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_I18N_PREFIXED_IMAGE2TEXT", "GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2TEXT", "GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2TEXT", "GEMINI_V1_VQCOCA_1B_MULTIRES_VTP_4F_VIDEO2TEXT_PREFIX", "GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR", "GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX", "GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE", "DUET_CLOUD_SECURITY_DOCS", "DUET_GITHUB_CODE_SNIPPETS", "DUET_GITHUB_FILES", "DUET_GOBYEXAMPLE", "DUET_GOLANG_DOCS", "DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES", "DUET_DEVSITE_DOCS", "DUET_CLOUD_BLOG_POSTS", "DUET_CLOUD_PODCAST_EPISODES", "DUET_YOUTUBE_VIDEOS", "DUET_CLOUD_SKILLS_BOOST", "DUET_CLOUD_DOCS", "DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED", "DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN", "DUET_GOOGLESQL_GENERATION", "DUET_CLOUD_IX_PROMPTS", "DUET_RAD", "BARD_ARCADE_GITHUB", "MOBILE_ASSISTANT_MAGI_FILTERED_0825_373K", "MOBILE_ASSISTANT_PALM24B_FILTERED_400K", "GENESIS_NEWS_INSIGHTS", "LABS_AQA_DSCOUT", "LABS_AQA_TAILWIND", "LABS_AQA_DELEWARE", "GEMINI_MULTIMODAL_FT_URL", "GEMINI_MULTIMODAL_FT_YT", "GEMINI_MULTIMODAL_FT_SHUTTERSTOCK", "GEMINI_MULTIMODAL_FT_NONE", "GEMINI_MULTIMODAL_FT_OTHER", "GEMINI_MULTIMODAL_FT_INK", "GEMINI_MULTIMODAL_IT", "GEMINI_IT_SHUTTERSTOCK", "GEMINI_IT_M3W", "GEMINI_IT_HEDGING", "GEMINI_IT_DSCOUT_FACTUALITY", "GEMINI_IT_AQUAMUSE", "GEMINI_IT_SHOTGUN", "GEMINI_IT_ACI_BENCH", "GEMINI_IT_SPIDER_FILTERED", "GEMINI_IT_TAB_SUM_BQ", "GEMINI_IT_QA_WITH_URL", "GEMINI_IT_CODE_INSTRUCT", "GEMINI_IT_MED_PALM", "GEMINI_IT_TASK_ORIENTED_DIALOG", "GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT", "GEMINI_IT_EITL_GEN", "GEMINI_IT_HITL_GEN", "GEMINI_IT_MECH", "GEMINI_IT_TABLE_GEN", "GEMINI_IT_NIMBUS_DECIBEL", "GEMINI_IT_CLOUD_CODE_IF", "GEMINI_IT_CLOUD_EUR_LEX_JSON", "GEMINI_IT_CLOUD_OASST", "GEMINI_IT_CLOUD_SELF_INSTRUCT", "GEMINI_IT_CLOUD_UCS_AQUAMUSE", "GEMIT_BRIDGE_SUFFIX_FT", "CLOUD_SECURITY_PRETRAINING", "CLOUD_SECURITY_FINETUNING", "CLOUD_SECURITY_RAG_CISA", "GEMINI_GOOSE_PUBLIC", "GEMINI_GOOSE_SILOED", "GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII", "GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT", "GEMINI_V2_ENGLISH_ARTICLES_TOP10B_211123_PII_FILTERED", "GEMINI_V2_ENGLISH_NONARTICLES_TOP10B_211123_PII_FILTERED", "GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT", "GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT", "GEMINI_V2_ENGLISH_ARTICLES_TOP20B_211123_PII_FILTERED", "GEMINI_V2_ENGLISH_NONARTICLES_TOP20B_211123_PII_FILTERED", "GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT", "GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT", "GEMINI_V2_ENGLISH_ARTICLES_TOP100B_211123_PII_FILTERED", "GEMINI_V2_ENGLISH_NONARTICLES_TOP100B_211123_PII_FILTERED", "GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT", "GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT", "GEMINI_V2_ENGLISH_ARTICLES_TOP500B_211123_PII_FILTERED", "GEMINI_V2_ENGLISH_NONARTICLES_TOP500B_211123_PII_FILTERED", "GEMINI_V2_QUORA_COMPLIANT", "GEMINI_V2_FORUMS_V2_COMPLIANT", "GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT", "GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT", "GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT", "GEMINI_V2_CODEWEB_V1_COMPLIANT", "GEMINI_V2_LEETCODE_GCC_PII", "GEMINI_V2_CODE_CONTESTS_COMPLIANT", "GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS", "GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT", "GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT", "GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT", "GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT", "GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT", "GEMINI_V2_GITHUB_DIFFS_COMPLIANT", "GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT", "GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2", "GEMINI_V2_SCIENCE_PDF_68M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX", "GEMINI_V2_ARXIV_2023_COMPLIANT", "GEMINI_V2_FORMAL_COMPLIANT", "GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT", "GEMINI_V2_PUBMED_COMPLIANT", "GEMINI_V2_WEB_MATH_V3_COMPLIANT", "GEMINI_V2_SCIENCEWEB_V0_GCC_PII", "GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT", "GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2", "GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2", "GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2", "GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2", "GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2", "GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2", "GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2", "GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2", "GEMINI_V2_CHESS_COMPLIANT", "GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT", "GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT", "GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT", "GEMINI_V2_PODCASTS_COMPLIANT", "GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46M_DOCS_COMPLIANT", "GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT", "GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT", "GEMINI_V2_STEM_BOOKS_318K_TEXT_COMPLIANT", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_T2I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_I18N_680M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_FULL_HTML_75M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_DOC_240M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M4W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_ALT_TEXT_NONEN_500M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_3D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_3D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CC3M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_IM2SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PLOT2TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_2D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_EQ2LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_CACHED_VQCOCA_MMFT_17T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED", "GEMINI_V2_USM2B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_YT_ASR_1P5M_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_YT_ASR_4M_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_YT_TTS_1P5M_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_YT_TTS_4M_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_I18N_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_I18N_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_1P5M_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_HEAD_4M_GEMBAGZ_V2_COMPLIANT", "GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX", "GEMINI_V2_NTL_NTLV4A_MONOLINGUAL_DEDUP_N5", "GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5", "GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5", "GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5", "GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5", "GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT", "CLOUD_GEMIT_CLOUD_FACTUALITY_GROUNDING_MAGI", "CLOUD_GEMIT_MT_DIALGUE_LMSYS", "CLOUD_GEMIT_MTS_DIALOGUE_V3", "CLOUD_GEMIT_COMMIT_MSG_GEN_V3", "CLOUD_GEMIT_CODE_IF_V1", "CLOUD_GEMIT_CODE_SELF_REPAIR", "CLOUD_GEMIT_IDENTITY", "CLOUD_GEMIT_SEARCH_AUGMENTED_RESPONSE_GENERATION", "CLOUD_GEMIT_AMPS", "CLOUD_GEMIT_AQUA", "CLOUD_GEMIT_COMMON_SENSE_REASONING_SCHEMA", "CLOUD_GEMIT_GSM8K_SCHEMA"]  # noqa: E501
        if dataset not in allowed_values:
            raise ValueError(
                "Invalid value for `dataset` ({0}), must be one of {1}"
                .format(dataset, allowed_values)
            )

        self._dataset = dataset

    @property
    def filepath(self):
        """Gets the filepath of this LearningGenaiRecitationDocAttribution.


        :return: The filepath of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._filepath

    @filepath.setter
    def filepath(self, filepath):
        """Sets the filepath of this LearningGenaiRecitationDocAttribution.


        :param filepath: The filepath of this LearningGenaiRecitationDocAttribution.
        :type filepath: str
        """

        self._filepath = filepath

    @property
    def gemini_id(self):
        """Gets the gemini_id of this LearningGenaiRecitationDocAttribution.


        :return: The gemini_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._gemini_id

    @gemini_id.setter
    def gemini_id(self, gemini_id):
        """Sets the gemini_id of this LearningGenaiRecitationDocAttribution.


        :param gemini_id: The gemini_id of this LearningGenaiRecitationDocAttribution.
        :type gemini_id: str
        """

        self._gemini_id = gemini_id

    @property
    def gnews_article_title(self):
        """Gets the gnews_article_title of this LearningGenaiRecitationDocAttribution.


        :return: The gnews_article_title of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._gnews_article_title

    @gnews_article_title.setter
    def gnews_article_title(self, gnews_article_title):
        """Sets the gnews_article_title of this LearningGenaiRecitationDocAttribution.


        :param gnews_article_title: The gnews_article_title of this LearningGenaiRecitationDocAttribution.
        :type gnews_article_title: str
        """

        self._gnews_article_title = gnews_article_title

    @property
    def goodall_example_id(self):
        """Gets the goodall_example_id of this LearningGenaiRecitationDocAttribution.


        :return: The goodall_example_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._goodall_example_id

    @goodall_example_id.setter
    def goodall_example_id(self, goodall_example_id):
        """Sets the goodall_example_id of this LearningGenaiRecitationDocAttribution.


        :param goodall_example_id: The goodall_example_id of this LearningGenaiRecitationDocAttribution.
        :type goodall_example_id: str
        """

        self._goodall_example_id = goodall_example_id

    @property
    def is_opt_out(self):
        """Gets the is_opt_out of this LearningGenaiRecitationDocAttribution.

        Whether the document is opted out.

        :return: The is_opt_out of this LearningGenaiRecitationDocAttribution.
        :rtype: bool
        """
        return self._is_opt_out

    @is_opt_out.setter
    def is_opt_out(self, is_opt_out):
        """Sets the is_opt_out of this LearningGenaiRecitationDocAttribution.

        Whether the document is opted out.

        :param is_opt_out: The is_opt_out of this LearningGenaiRecitationDocAttribution.
        :type is_opt_out: bool
        """

        self._is_opt_out = is_opt_out

    @property
    def is_prompt(self):
        """Gets the is_prompt of this LearningGenaiRecitationDocAttribution.

        When true, this attribution came from the user's prompt.

        :return: The is_prompt of this LearningGenaiRecitationDocAttribution.
        :rtype: bool
        """
        return self._is_prompt

    @is_prompt.setter
    def is_prompt(self, is_prompt):
        """Sets the is_prompt of this LearningGenaiRecitationDocAttribution.

        When true, this attribution came from the user's prompt.

        :param is_prompt: The is_prompt of this LearningGenaiRecitationDocAttribution.
        :type is_prompt: bool
        """

        self._is_prompt = is_prompt

    @property
    def lamda_example_id(self):
        """Gets the lamda_example_id of this LearningGenaiRecitationDocAttribution.


        :return: The lamda_example_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._lamda_example_id

    @lamda_example_id.setter
    def lamda_example_id(self, lamda_example_id):
        """Sets the lamda_example_id of this LearningGenaiRecitationDocAttribution.


        :param lamda_example_id: The lamda_example_id of this LearningGenaiRecitationDocAttribution.
        :type lamda_example_id: str
        """

        self._lamda_example_id = lamda_example_id

    @property
    def license(self):
        """Gets the license of this LearningGenaiRecitationDocAttribution.


        :return: The license of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license):
        """Sets the license of this LearningGenaiRecitationDocAttribution.


        :param license: The license of this LearningGenaiRecitationDocAttribution.
        :type license: str
        """

        self._license = license

    @property
    def meena_conversation_id(self):
        """Gets the meena_conversation_id of this LearningGenaiRecitationDocAttribution.


        :return: The meena_conversation_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._meena_conversation_id

    @meena_conversation_id.setter
    def meena_conversation_id(self, meena_conversation_id):
        """Sets the meena_conversation_id of this LearningGenaiRecitationDocAttribution.


        :param meena_conversation_id: The meena_conversation_id of this LearningGenaiRecitationDocAttribution.
        :type meena_conversation_id: str
        """

        self._meena_conversation_id = meena_conversation_id

    @property
    def natural_language_code(self):
        """Gets the natural_language_code of this LearningGenaiRecitationDocAttribution.

        Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii.

        :return: The natural_language_code of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._natural_language_code

    @natural_language_code.setter
    def natural_language_code(self, natural_language_code):
        """Sets the natural_language_code of this LearningGenaiRecitationDocAttribution.

        Natural (not programming) language of the document. Language code as defined by http://www.unicode.org/reports/tr35/#Identifiers and https://tools.ietf.org/html/bcp47. Currently applicable to full-view books. Use docinfo-util.h to set & read language fields. See go/iii.

        :param natural_language_code: The natural_language_code of this LearningGenaiRecitationDocAttribution.
        :type natural_language_code: str
        """

        self._natural_language_code = natural_language_code

    @property
    def no_attribution(self):
        """Gets the no_attribution of this LearningGenaiRecitationDocAttribution.

        True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available.

        :return: The no_attribution of this LearningGenaiRecitationDocAttribution.
        :rtype: bool
        """
        return self._no_attribution

    @no_attribution.setter
    def no_attribution(self, no_attribution):
        """Sets the no_attribution of this LearningGenaiRecitationDocAttribution.

        True if this doc has no attribution information available. We use an explicit field for this instead of just implicitly leaving all the DocAttribution fields blank to distinguish a case where a bug/oversight has left the attribution information empty vs when we really have no attribution information available.

        :param no_attribution: The no_attribution of this LearningGenaiRecitationDocAttribution.
        :type no_attribution: bool
        """

        self._no_attribution = no_attribution

    @property
    def podcast_utterance_id(self):
        """Gets the podcast_utterance_id of this LearningGenaiRecitationDocAttribution.


        :return: The podcast_utterance_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._podcast_utterance_id

    @podcast_utterance_id.setter
    def podcast_utterance_id(self, podcast_utterance_id):
        """Sets the podcast_utterance_id of this LearningGenaiRecitationDocAttribution.


        :param podcast_utterance_id: The podcast_utterance_id of this LearningGenaiRecitationDocAttribution.
        :type podcast_utterance_id: str
        """

        self._podcast_utterance_id = podcast_utterance_id

    @property
    def publication_date(self):
        """Gets the publication_date of this LearningGenaiRecitationDocAttribution.


        :return: The publication_date of this LearningGenaiRecitationDocAttribution.
        :rtype: GoogleTypeDate
        """
        return self._publication_date

    @publication_date.setter
    def publication_date(self, publication_date):
        """Sets the publication_date of this LearningGenaiRecitationDocAttribution.


        :param publication_date: The publication_date of this LearningGenaiRecitationDocAttribution.
        :type publication_date: GoogleTypeDate
        """

        self._publication_date = publication_date

    @property
    def quality_score_experiment_only(self):
        """Gets the quality_score_experiment_only of this LearningGenaiRecitationDocAttribution.

        This field is for opt-out experiment only, MUST never be used during actual production/serving. 

        :return: The quality_score_experiment_only of this LearningGenaiRecitationDocAttribution.
        :rtype: float
        """
        return self._quality_score_experiment_only

    @quality_score_experiment_only.setter
    def quality_score_experiment_only(self, quality_score_experiment_only):
        """Sets the quality_score_experiment_only of this LearningGenaiRecitationDocAttribution.

        This field is for opt-out experiment only, MUST never be used during actual production/serving. 

        :param quality_score_experiment_only: The quality_score_experiment_only of this LearningGenaiRecitationDocAttribution.
        :type quality_score_experiment_only: float
        """

        self._quality_score_experiment_only = quality_score_experiment_only

    @property
    def repo(self):
        """Gets the repo of this LearningGenaiRecitationDocAttribution.

        Github repository

        :return: The repo of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._repo

    @repo.setter
    def repo(self, repo):
        """Sets the repo of this LearningGenaiRecitationDocAttribution.

        Github repository

        :param repo: The repo of this LearningGenaiRecitationDocAttribution.
        :type repo: str
        """

        self._repo = repo

    @property
    def url(self):
        """Gets the url of this LearningGenaiRecitationDocAttribution.

        URL of a webdoc

        :return: The url of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this LearningGenaiRecitationDocAttribution.

        URL of a webdoc

        :param url: The url of this LearningGenaiRecitationDocAttribution.
        :type url: str
        """

        self._url = url

    @property
    def volume_id(self):
        """Gets the volume_id of this LearningGenaiRecitationDocAttribution.


        :return: The volume_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._volume_id

    @volume_id.setter
    def volume_id(self, volume_id):
        """Sets the volume_id of this LearningGenaiRecitationDocAttribution.


        :param volume_id: The volume_id of this LearningGenaiRecitationDocAttribution.
        :type volume_id: str
        """

        self._volume_id = volume_id

    @property
    def wikipedia_article_title(self):
        """Gets the wikipedia_article_title of this LearningGenaiRecitationDocAttribution.

        Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset.

        :return: The wikipedia_article_title of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._wikipedia_article_title

    @wikipedia_article_title.setter
    def wikipedia_article_title(self, wikipedia_article_title):
        """Sets the wikipedia_article_title of this LearningGenaiRecitationDocAttribution.

        Wikipedia article title. The Wikipedia TFDS dataset includes article titles but not URLs. While a URL is to the best of our knowledge a deterministic function of the title, we store the original title to reflect the information in the original dataset.

        :param wikipedia_article_title: The wikipedia_article_title of this LearningGenaiRecitationDocAttribution.
        :type wikipedia_article_title: str
        """

        self._wikipedia_article_title = wikipedia_article_title

    @property
    def youtube_video_id(self):
        """Gets the youtube_video_id of this LearningGenaiRecitationDocAttribution.


        :return: The youtube_video_id of this LearningGenaiRecitationDocAttribution.
        :rtype: str
        """
        return self._youtube_video_id

    @youtube_video_id.setter
    def youtube_video_id(self, youtube_video_id):
        """Sets the youtube_video_id of this LearningGenaiRecitationDocAttribution.


        :param youtube_video_id: The youtube_video_id of this LearningGenaiRecitationDocAttribution.
        :type youtube_video_id: str
        """

        self._youtube_video_id = youtube_video_id
