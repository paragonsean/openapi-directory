# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disabled: bool=None, monitoring_interval_days: int=None, staleness_days: int=None):
        """GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis - a model defined in OpenAPI

        :param disabled: The disabled of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        :param monitoring_interval_days: The monitoring_interval_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        :param staleness_days: The staleness_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        """
        self.openapi_types = {
            'disabled': bool,
            'monitoring_interval_days': int,
            'staleness_days': int
        }

        self.attribute_map = {
            'disabled': 'disabled',
            'monitoring_interval_days': 'monitoringIntervalDays',
            'staleness_days': 'stalenessDays'
        }

        self._disabled = disabled
        self._monitoring_interval_days = monitoring_interval_days
        self._staleness_days = staleness_days

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disabled(self):
        """Gets the disabled of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.

        The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoring_interval for Features under it. Feature-level config: disabled = true indicates disabled regardless of the EntityType-level config; unset monitoring_interval indicates going with EntityType-level config; otherwise run snapshot analysis monitoring with monitoring_interval regardless of the EntityType-level config. Explicitly Disable the snapshot analysis based monitoring.

        :return: The disabled of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.

        The monitoring schedule for snapshot analysis. For EntityType-level config: unset / disabled = true indicates disabled by default for Features under it; otherwise by default enable snapshot analysis monitoring with monitoring_interval for Features under it. Feature-level config: disabled = true indicates disabled regardless of the EntityType-level config; unset monitoring_interval indicates going with EntityType-level config; otherwise run snapshot analysis monitoring with monitoring_interval regardless of the EntityType-level config. Explicitly Disable the snapshot analysis based monitoring.

        :param disabled: The disabled of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def monitoring_interval_days(self):
        """Gets the monitoring_interval_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.

        Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days.

        :return: The monitoring_interval_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        :rtype: int
        """
        return self._monitoring_interval_days

    @monitoring_interval_days.setter
    def monitoring_interval_days(self, monitoring_interval_days):
        """Sets the monitoring_interval_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.

        Configuration of the snapshot analysis based monitoring pipeline running interval. The value indicates number of days.

        :param monitoring_interval_days: The monitoring_interval_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        :type monitoring_interval_days: int
        """

        self._monitoring_interval_days = monitoring_interval_days

    @property
    def staleness_days(self):
        """Gets the staleness_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.

        Customized export features time window for snapshot analysis. Unit is one day. Default value is 3 weeks. Minimum value is 1 day. Maximum value is 4000 days.

        :return: The staleness_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        :rtype: int
        """
        return self._staleness_days

    @staleness_days.setter
    def staleness_days(self, staleness_days):
        """Sets the staleness_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.

        Customized export features time window for snapshot analysis. Unit is one day. Default value is 3 weeks. Minimum value is 1 day. Maximum value is 4000 days.

        :param staleness_days: The staleness_days of this GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis.
        :type staleness_days: int
        """

        self._staleness_days = staleness_days
