# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1AddContextChildrenRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, child_contexts: List[str]=None):
        """GoogleCloudAiplatformV1AddContextChildrenRequest - a model defined in OpenAPI

        :param child_contexts: The child_contexts of this GoogleCloudAiplatformV1AddContextChildrenRequest.
        """
        self.openapi_types = {
            'child_contexts': List[str]
        }

        self.attribute_map = {
            'child_contexts': 'childContexts'
        }

        self._child_contexts = child_contexts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1AddContextChildrenRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1AddContextChildrenRequest of this GoogleCloudAiplatformV1AddContextChildrenRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def child_contexts(self):
        """Gets the child_contexts of this GoogleCloudAiplatformV1AddContextChildrenRequest.

        The resource names of the child Contexts.

        :return: The child_contexts of this GoogleCloudAiplatformV1AddContextChildrenRequest.
        :rtype: List[str]
        """
        return self._child_contexts

    @child_contexts.setter
    def child_contexts(self, child_contexts):
        """Sets the child_contexts of this GoogleCloudAiplatformV1AddContextChildrenRequest.

        The resource names of the child Contexts.

        :param child_contexts: The child_contexts of this GoogleCloudAiplatformV1AddContextChildrenRequest.
        :type child_contexts: List[str]
        """

        self._child_contexts = child_contexts
