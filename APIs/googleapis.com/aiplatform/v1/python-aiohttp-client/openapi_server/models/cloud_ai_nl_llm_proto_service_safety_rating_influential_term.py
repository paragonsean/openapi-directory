# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin_offset: int=None, confidence: float=None, source: str=None, term: str=None):
        """CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm - a model defined in OpenAPI

        :param begin_offset: The begin_offset of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :param confidence: The confidence of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :param source: The source of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :param term: The term of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        """
        self.openapi_types = {
            'begin_offset': int,
            'confidence': float,
            'source': str,
            'term': str
        }

        self.attribute_map = {
            'begin_offset': 'beginOffset',
            'confidence': 'confidence',
            'source': 'source',
            'term': 'term'
        }

        self._begin_offset = begin_offset
        self._confidence = confidence
        self._source = source
        self._term = term

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin_offset(self):
        """Gets the begin_offset of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.

        The beginning offset of the influential term.

        :return: The begin_offset of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :rtype: int
        """
        return self._begin_offset

    @begin_offset.setter
    def begin_offset(self, begin_offset):
        """Sets the begin_offset of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.

        The beginning offset of the influential term.

        :param begin_offset: The begin_offset of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :type begin_offset: int
        """

        self._begin_offset = begin_offset

    @property
    def confidence(self):
        """Gets the confidence of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.

        The confidence score of the influential term.

        :return: The confidence of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :rtype: float
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.

        The confidence score of the influential term.

        :param confidence: The confidence of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :type confidence: float
        """

        self._confidence = confidence

    @property
    def source(self):
        """Gets the source of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.

        The source of the influential term, prompt or response.

        :return: The source of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.

        The source of the influential term, prompt or response.

        :param source: The source of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :type source: str
        """
        allowed_values = ["SOURCE_UNSPECIFIED", "PROMPT", "RESPONSE"]  # noqa: E501
        if source not in allowed_values:
            raise ValueError(
                "Invalid value for `source` ({0}), must be one of {1}"
                .format(source, allowed_values)
            )

        self._source = source

    @property
    def term(self):
        """Gets the term of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.

        The influential term.

        :return: The term of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term):
        """Sets the term of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.

        The influential term.

        :param term: The term of this CloudAiNlLlmProtoServiceSafetyRatingInfluentialTerm.
        :type term: str
        """

        self._term = term
