# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_measurement_metric import GoogleCloudAiplatformV1MeasurementMetric
from openapi_server import util


class GoogleCloudAiplatformV1Measurement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, elapsed_duration: str=None, metrics: List[GoogleCloudAiplatformV1MeasurementMetric]=None, step_count: str=None):
        """GoogleCloudAiplatformV1Measurement - a model defined in OpenAPI

        :param elapsed_duration: The elapsed_duration of this GoogleCloudAiplatformV1Measurement.
        :param metrics: The metrics of this GoogleCloudAiplatformV1Measurement.
        :param step_count: The step_count of this GoogleCloudAiplatformV1Measurement.
        """
        self.openapi_types = {
            'elapsed_duration': str,
            'metrics': List[GoogleCloudAiplatformV1MeasurementMetric],
            'step_count': str
        }

        self.attribute_map = {
            'elapsed_duration': 'elapsedDuration',
            'metrics': 'metrics',
            'step_count': 'stepCount'
        }

        self._elapsed_duration = elapsed_duration
        self._metrics = metrics
        self._step_count = step_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1Measurement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1Measurement of this GoogleCloudAiplatformV1Measurement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def elapsed_duration(self):
        """Gets the elapsed_duration of this GoogleCloudAiplatformV1Measurement.

        Output only. Time that the Trial has been running at the point of this Measurement.

        :return: The elapsed_duration of this GoogleCloudAiplatformV1Measurement.
        :rtype: str
        """
        return self._elapsed_duration

    @elapsed_duration.setter
    def elapsed_duration(self, elapsed_duration):
        """Sets the elapsed_duration of this GoogleCloudAiplatformV1Measurement.

        Output only. Time that the Trial has been running at the point of this Measurement.

        :param elapsed_duration: The elapsed_duration of this GoogleCloudAiplatformV1Measurement.
        :type elapsed_duration: str
        """

        self._elapsed_duration = elapsed_duration

    @property
    def metrics(self):
        """Gets the metrics of this GoogleCloudAiplatformV1Measurement.

        Output only. A list of metrics got by evaluating the objective functions using suggested Parameter values.

        :return: The metrics of this GoogleCloudAiplatformV1Measurement.
        :rtype: List[GoogleCloudAiplatformV1MeasurementMetric]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this GoogleCloudAiplatformV1Measurement.

        Output only. A list of metrics got by evaluating the objective functions using suggested Parameter values.

        :param metrics: The metrics of this GoogleCloudAiplatformV1Measurement.
        :type metrics: List[GoogleCloudAiplatformV1MeasurementMetric]
        """

        self._metrics = metrics

    @property
    def step_count(self):
        """Gets the step_count of this GoogleCloudAiplatformV1Measurement.

        Output only. The number of steps the machine learning model has been trained for. Must be non-negative.

        :return: The step_count of this GoogleCloudAiplatformV1Measurement.
        :rtype: str
        """
        return self._step_count

    @step_count.setter
    def step_count(self, step_count):
        """Sets the step_count of this GoogleCloudAiplatformV1Measurement.

        Output only. The number of steps the machine learning model has been trained for. Must be non-negative.

        :param step_count: The step_count of this GoogleCloudAiplatformV1Measurement.
        :type step_count: str
        """

        self._step_count = step_count
