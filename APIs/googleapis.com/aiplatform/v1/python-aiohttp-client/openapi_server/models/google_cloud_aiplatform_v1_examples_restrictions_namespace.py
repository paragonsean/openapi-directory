# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1ExamplesRestrictionsNamespace(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow: List[str]=None, deny: List[str]=None, namespace_name: str=None):
        """GoogleCloudAiplatformV1ExamplesRestrictionsNamespace - a model defined in OpenAPI

        :param allow: The allow of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        :param deny: The deny of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        :param namespace_name: The namespace_name of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        """
        self.openapi_types = {
            'allow': List[str],
            'deny': List[str],
            'namespace_name': str
        }

        self.attribute_map = {
            'allow': 'allow',
            'deny': 'deny',
            'namespace_name': 'namespaceName'
        }

        self._allow = allow
        self._deny = deny
        self._namespace_name = namespace_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1ExamplesRestrictionsNamespace':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1ExamplesRestrictionsNamespace of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow(self):
        """Gets the allow of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.

        The list of allowed tags.

        :return: The allow of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        :rtype: List[str]
        """
        return self._allow

    @allow.setter
    def allow(self, allow):
        """Sets the allow of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.

        The list of allowed tags.

        :param allow: The allow of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        :type allow: List[str]
        """

        self._allow = allow

    @property
    def deny(self):
        """Gets the deny of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.

        The list of deny tags.

        :return: The deny of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        :rtype: List[str]
        """
        return self._deny

    @deny.setter
    def deny(self, deny):
        """Sets the deny of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.

        The list of deny tags.

        :param deny: The deny of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        :type deny: List[str]
        """

        self._deny = deny

    @property
    def namespace_name(self):
        """Gets the namespace_name of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.

        The namespace name.

        :return: The namespace_name of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        :rtype: str
        """
        return self._namespace_name

    @namespace_name.setter
    def namespace_name(self, namespace_name):
        """Sets the namespace_name of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.

        The namespace name.

        :param namespace_name: The namespace_name of this GoogleCloudAiplatformV1ExamplesRestrictionsNamespace.
        :type namespace_name: str
        """

        self._namespace_name = namespace_name
