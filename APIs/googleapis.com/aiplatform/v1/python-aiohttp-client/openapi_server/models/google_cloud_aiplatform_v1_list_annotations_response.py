# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_annotation import GoogleCloudAiplatformV1Annotation
from openapi_server import util


class GoogleCloudAiplatformV1ListAnnotationsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: List[GoogleCloudAiplatformV1Annotation]=None, next_page_token: str=None):
        """GoogleCloudAiplatformV1ListAnnotationsResponse - a model defined in OpenAPI

        :param annotations: The annotations of this GoogleCloudAiplatformV1ListAnnotationsResponse.
        :param next_page_token: The next_page_token of this GoogleCloudAiplatformV1ListAnnotationsResponse.
        """
        self.openapi_types = {
            'annotations': List[GoogleCloudAiplatformV1Annotation],
            'next_page_token': str
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'next_page_token': 'nextPageToken'
        }

        self._annotations = annotations
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1ListAnnotationsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1ListAnnotationsResponse of this GoogleCloudAiplatformV1ListAnnotationsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this GoogleCloudAiplatformV1ListAnnotationsResponse.

        A list of Annotations that matches the specified filter in the request.

        :return: The annotations of this GoogleCloudAiplatformV1ListAnnotationsResponse.
        :rtype: List[GoogleCloudAiplatformV1Annotation]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this GoogleCloudAiplatformV1ListAnnotationsResponse.

        A list of Annotations that matches the specified filter in the request.

        :param annotations: The annotations of this GoogleCloudAiplatformV1ListAnnotationsResponse.
        :type annotations: List[GoogleCloudAiplatformV1Annotation]
        """

        self._annotations = annotations

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleCloudAiplatformV1ListAnnotationsResponse.

        The standard List next-page token.

        :return: The next_page_token of this GoogleCloudAiplatformV1ListAnnotationsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleCloudAiplatformV1ListAnnotationsResponse.

        The standard List next-page token.

        :param next_page_token: The next_page_token of this GoogleCloudAiplatformV1ListAnnotationsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
