# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_encryption_spec import GoogleCloudAiplatformV1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1_metadata_store_metadata_store_state import GoogleCloudAiplatformV1MetadataStoreMetadataStoreState
from openapi_server import util


class GoogleCloudAiplatformV1MetadataStore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, encryption_spec: GoogleCloudAiplatformV1EncryptionSpec=None, name: str=None, state: GoogleCloudAiplatformV1MetadataStoreMetadataStoreState=None, update_time: str=None):
        """GoogleCloudAiplatformV1MetadataStore - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1MetadataStore.
        :param description: The description of this GoogleCloudAiplatformV1MetadataStore.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1MetadataStore.
        :param name: The name of this GoogleCloudAiplatformV1MetadataStore.
        :param state: The state of this GoogleCloudAiplatformV1MetadataStore.
        :param update_time: The update_time of this GoogleCloudAiplatformV1MetadataStore.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'encryption_spec': GoogleCloudAiplatformV1EncryptionSpec,
            'name': str,
            'state': GoogleCloudAiplatformV1MetadataStoreMetadataStoreState,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'encryption_spec': 'encryptionSpec',
            'name': 'name',
            'state': 'state',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._description = description
        self._encryption_spec = encryption_spec
        self._name = name
        self._state = state
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1MetadataStore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1MetadataStore of this GoogleCloudAiplatformV1MetadataStore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1MetadataStore.

        Output only. Timestamp when this MetadataStore was created.

        :return: The create_time of this GoogleCloudAiplatformV1MetadataStore.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1MetadataStore.

        Output only. Timestamp when this MetadataStore was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1MetadataStore.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1MetadataStore.

        Description of the MetadataStore.

        :return: The description of this GoogleCloudAiplatformV1MetadataStore.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1MetadataStore.

        Description of the MetadataStore.

        :param description: The description of this GoogleCloudAiplatformV1MetadataStore.
        :type description: str
        """

        self._description = description

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1MetadataStore.


        :return: The encryption_spec of this GoogleCloudAiplatformV1MetadataStore.
        :rtype: GoogleCloudAiplatformV1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1MetadataStore.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1MetadataStore.
        :type encryption_spec: GoogleCloudAiplatformV1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1MetadataStore.

        Output only. The resource name of the MetadataStore instance.

        :return: The name of this GoogleCloudAiplatformV1MetadataStore.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1MetadataStore.

        Output only. The resource name of the MetadataStore instance.

        :param name: The name of this GoogleCloudAiplatformV1MetadataStore.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1MetadataStore.


        :return: The state of this GoogleCloudAiplatformV1MetadataStore.
        :rtype: GoogleCloudAiplatformV1MetadataStoreMetadataStoreState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1MetadataStore.


        :param state: The state of this GoogleCloudAiplatformV1MetadataStore.
        :type state: GoogleCloudAiplatformV1MetadataStoreMetadataStoreState
        """

        self._state = state

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1MetadataStore.

        Output only. Timestamp when this MetadataStore was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1MetadataStore.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1MetadataStore.

        Output only. Timestamp when this MetadataStore was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1MetadataStore.
        :type update_time: str
        """

        self._update_time = update_time
