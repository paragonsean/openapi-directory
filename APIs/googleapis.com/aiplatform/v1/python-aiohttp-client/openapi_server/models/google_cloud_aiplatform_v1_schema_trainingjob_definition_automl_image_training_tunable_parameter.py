# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_study_spec import GoogleCloudAiplatformV1StudySpec
from openapi_server import util


class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, checkpoint_name: str=None, dataset_config: Dict[str, str]=None, study_spec: GoogleCloudAiplatformV1StudySpec=None, trainer_config: Dict[str, str]=None, trainer_type: str=None):
        """GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter - a model defined in OpenAPI

        :param checkpoint_name: The checkpoint_name of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :param dataset_config: The dataset_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :param study_spec: The study_spec of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :param trainer_config: The trainer_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :param trainer_type: The trainer_type of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        """
        self.openapi_types = {
            'checkpoint_name': str,
            'dataset_config': Dict[str, str],
            'study_spec': GoogleCloudAiplatformV1StudySpec,
            'trainer_config': Dict[str, str],
            'trainer_type': str
        }

        self.attribute_map = {
            'checkpoint_name': 'checkpointName',
            'dataset_config': 'datasetConfig',
            'study_spec': 'studySpec',
            'trainer_config': 'trainerConfig',
            'trainer_type': 'trainerType'
        }

        self._checkpoint_name = checkpoint_name
        self._dataset_config = dataset_config
        self._study_spec = study_spec
        self._trainer_config = trainer_config
        self._trainer_type = trainer_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def checkpoint_name(self):
        """Gets the checkpoint_name of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.

        Optional. An unique name of pretrained model checkpoint provided in model garden, it will be mapped to a GCS location internally.

        :return: The checkpoint_name of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :rtype: str
        """
        return self._checkpoint_name

    @checkpoint_name.setter
    def checkpoint_name(self, checkpoint_name):
        """Sets the checkpoint_name of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.

        Optional. An unique name of pretrained model checkpoint provided in model garden, it will be mapped to a GCS location internally.

        :param checkpoint_name: The checkpoint_name of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :type checkpoint_name: str
        """

        self._checkpoint_name = checkpoint_name

    @property
    def dataset_config(self):
        """Gets the dataset_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.

        Customizable dataset settings, used in the `model_garden_trainer`.

        :return: The dataset_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :rtype: Dict[str, str]
        """
        return self._dataset_config

    @dataset_config.setter
    def dataset_config(self, dataset_config):
        """Sets the dataset_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.

        Customizable dataset settings, used in the `model_garden_trainer`.

        :param dataset_config: The dataset_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :type dataset_config: Dict[str, str]
        """

        self._dataset_config = dataset_config

    @property
    def study_spec(self):
        """Gets the study_spec of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.


        :return: The study_spec of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :rtype: GoogleCloudAiplatformV1StudySpec
        """
        return self._study_spec

    @study_spec.setter
    def study_spec(self, study_spec):
        """Sets the study_spec of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.


        :param study_spec: The study_spec of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :type study_spec: GoogleCloudAiplatformV1StudySpec
        """

        self._study_spec = study_spec

    @property
    def trainer_config(self):
        """Gets the trainer_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.

        Customizable trainer settings, used in the `model_garden_trainer`.

        :return: The trainer_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :rtype: Dict[str, str]
        """
        return self._trainer_config

    @trainer_config.setter
    def trainer_config(self, trainer_config):
        """Sets the trainer_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.

        Customizable trainer settings, used in the `model_garden_trainer`.

        :param trainer_config: The trainer_config of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :type trainer_config: Dict[str, str]
        """

        self._trainer_config = trainer_config

    @property
    def trainer_type(self):
        """Gets the trainer_type of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.


        :return: The trainer_type of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :rtype: str
        """
        return self._trainer_type

    @trainer_type.setter
    def trainer_type(self, trainer_type):
        """Sets the trainer_type of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.


        :param trainer_type: The trainer_type of this GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutomlImageTrainingTunableParameter.
        :type trainer_type: str
        """
        allowed_values = ["TRAINER_TYPE_UNSPECIFIED", "AUTOML_TRAINER", "MODEL_GARDEN_TRAINER"]  # noqa: E501
        if trainer_type not in allowed_values:
            raise ValueError(
                "Invalid value for `trainer_type` ({0}), must be one of {1}"
                .format(trainer_type, allowed_values)
            )

        self._trainer_type = trainer_type
