# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LearningGenaiRootSimilarityTakedownPhrase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocked_phrase: str=None):
        """LearningGenaiRootSimilarityTakedownPhrase - a model defined in OpenAPI

        :param blocked_phrase: The blocked_phrase of this LearningGenaiRootSimilarityTakedownPhrase.
        """
        self.openapi_types = {
            'blocked_phrase': str
        }

        self.attribute_map = {
            'blocked_phrase': 'blockedPhrase'
        }

        self._blocked_phrase = blocked_phrase

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootSimilarityTakedownPhrase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootSimilarityTakedownPhrase of this LearningGenaiRootSimilarityTakedownPhrase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocked_phrase(self):
        """Gets the blocked_phrase of this LearningGenaiRootSimilarityTakedownPhrase.


        :return: The blocked_phrase of this LearningGenaiRootSimilarityTakedownPhrase.
        :rtype: str
        """
        return self._blocked_phrase

    @blocked_phrase.setter
    def blocked_phrase(self, blocked_phrase):
        """Sets the blocked_phrase of this LearningGenaiRootSimilarityTakedownPhrase.


        :param blocked_phrase: The blocked_phrase of this LearningGenaiRootSimilarityTakedownPhrase.
        :type blocked_phrase: str
        """

        self._blocked_phrase = blocked_phrase
