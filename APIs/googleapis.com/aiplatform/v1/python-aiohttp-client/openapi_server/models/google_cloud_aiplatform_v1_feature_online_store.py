# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_feature_online_store_bigtable import GoogleCloudAiplatformV1FeatureOnlineStoreBigtable
from openapi_server import util


class GoogleCloudAiplatformV1FeatureOnlineStore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bigtable: GoogleCloudAiplatformV1FeatureOnlineStoreBigtable=None, create_time: str=None, etag: str=None, labels: Dict[str, str]=None, name: str=None, state: str=None, update_time: str=None):
        """GoogleCloudAiplatformV1FeatureOnlineStore - a model defined in OpenAPI

        :param bigtable: The bigtable of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :param create_time: The create_time of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :param etag: The etag of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :param labels: The labels of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :param name: The name of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :param state: The state of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :param update_time: The update_time of this GoogleCloudAiplatformV1FeatureOnlineStore.
        """
        self.openapi_types = {
            'bigtable': GoogleCloudAiplatformV1FeatureOnlineStoreBigtable,
            'create_time': str,
            'etag': str,
            'labels': Dict[str, str],
            'name': str,
            'state': str,
            'update_time': str
        }

        self.attribute_map = {
            'bigtable': 'bigtable',
            'create_time': 'createTime',
            'etag': 'etag',
            'labels': 'labels',
            'name': 'name',
            'state': 'state',
            'update_time': 'updateTime'
        }

        self._bigtable = bigtable
        self._create_time = create_time
        self._etag = etag
        self._labels = labels
        self._name = name
        self._state = state
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1FeatureOnlineStore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1FeatureOnlineStore of this GoogleCloudAiplatformV1FeatureOnlineStore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bigtable(self):
        """Gets the bigtable of this GoogleCloudAiplatformV1FeatureOnlineStore.


        :return: The bigtable of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :rtype: GoogleCloudAiplatformV1FeatureOnlineStoreBigtable
        """
        return self._bigtable

    @bigtable.setter
    def bigtable(self, bigtable):
        """Sets the bigtable of this GoogleCloudAiplatformV1FeatureOnlineStore.


        :param bigtable: The bigtable of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :type bigtable: GoogleCloudAiplatformV1FeatureOnlineStoreBigtable
        """

        self._bigtable = bigtable

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Output only. Timestamp when this FeatureOnlineStore was created.

        :return: The create_time of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Output only. Timestamp when this FeatureOnlineStore was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :type etag: str
        """

        self._etag = etag

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :return: The labels of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Optional. The labels with user-defined metadata to organize your FeatureOnlineStore. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :param labels: The labels of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`

        :return: The name of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Identifier. Name of the FeatureOnlineStore. Format: `projects/{project}/locations/{location}/featureOnlineStores/{featureOnlineStore}`

        :param name: The name of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Output only. State of the featureOnlineStore.

        :return: The state of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Output only. State of the featureOnlineStore.

        :param state: The state of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "STABLE", "UPDATING"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Output only. Timestamp when this FeatureOnlineStore was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1FeatureOnlineStore.

        Output only. Timestamp when this FeatureOnlineStore was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1FeatureOnlineStore.
        :type update_time: str
        """

        self._update_time = update_time
