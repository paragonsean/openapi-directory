# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_encryption_spec import GoogleCloudAiplatformV1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1_saved_query import GoogleCloudAiplatformV1SavedQuery
from openapi_server import util


class GoogleCloudAiplatformV1Dataset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, data_item_count: str=None, description: str=None, display_name: str=None, encryption_spec: GoogleCloudAiplatformV1EncryptionSpec=None, etag: str=None, labels: Dict[str, str]=None, metadata: object=None, metadata_artifact: str=None, metadata_schema_uri: str=None, name: str=None, saved_queries: List[GoogleCloudAiplatformV1SavedQuery]=None, update_time: str=None):
        """GoogleCloudAiplatformV1Dataset - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1Dataset.
        :param data_item_count: The data_item_count of this GoogleCloudAiplatformV1Dataset.
        :param description: The description of this GoogleCloudAiplatformV1Dataset.
        :param display_name: The display_name of this GoogleCloudAiplatformV1Dataset.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1Dataset.
        :param etag: The etag of this GoogleCloudAiplatformV1Dataset.
        :param labels: The labels of this GoogleCloudAiplatformV1Dataset.
        :param metadata: The metadata of this GoogleCloudAiplatformV1Dataset.
        :param metadata_artifact: The metadata_artifact of this GoogleCloudAiplatformV1Dataset.
        :param metadata_schema_uri: The metadata_schema_uri of this GoogleCloudAiplatformV1Dataset.
        :param name: The name of this GoogleCloudAiplatformV1Dataset.
        :param saved_queries: The saved_queries of this GoogleCloudAiplatformV1Dataset.
        :param update_time: The update_time of this GoogleCloudAiplatformV1Dataset.
        """
        self.openapi_types = {
            'create_time': str,
            'data_item_count': str,
            'description': str,
            'display_name': str,
            'encryption_spec': GoogleCloudAiplatformV1EncryptionSpec,
            'etag': str,
            'labels': Dict[str, str],
            'metadata': object,
            'metadata_artifact': str,
            'metadata_schema_uri': str,
            'name': str,
            'saved_queries': List[GoogleCloudAiplatformV1SavedQuery],
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'data_item_count': 'dataItemCount',
            'description': 'description',
            'display_name': 'displayName',
            'encryption_spec': 'encryptionSpec',
            'etag': 'etag',
            'labels': 'labels',
            'metadata': 'metadata',
            'metadata_artifact': 'metadataArtifact',
            'metadata_schema_uri': 'metadataSchemaUri',
            'name': 'name',
            'saved_queries': 'savedQueries',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._data_item_count = data_item_count
        self._description = description
        self._display_name = display_name
        self._encryption_spec = encryption_spec
        self._etag = etag
        self._labels = labels
        self._metadata = metadata
        self._metadata_artifact = metadata_artifact
        self._metadata_schema_uri = metadata_schema_uri
        self._name = name
        self._saved_queries = saved_queries
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1Dataset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1Dataset of this GoogleCloudAiplatformV1Dataset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1Dataset.

        Output only. Timestamp when this Dataset was created.

        :return: The create_time of this GoogleCloudAiplatformV1Dataset.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1Dataset.

        Output only. Timestamp when this Dataset was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1Dataset.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def data_item_count(self):
        """Gets the data_item_count of this GoogleCloudAiplatformV1Dataset.

        Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.

        :return: The data_item_count of this GoogleCloudAiplatformV1Dataset.
        :rtype: str
        """
        return self._data_item_count

    @data_item_count.setter
    def data_item_count(self, data_item_count):
        """Sets the data_item_count of this GoogleCloudAiplatformV1Dataset.

        Output only. The number of DataItems in this Dataset. Only apply for non-structured Dataset.

        :param data_item_count: The data_item_count of this GoogleCloudAiplatformV1Dataset.
        :type data_item_count: str
        """

        self._data_item_count = data_item_count

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1Dataset.

        The description of the Dataset.

        :return: The description of this GoogleCloudAiplatformV1Dataset.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1Dataset.

        The description of the Dataset.

        :param description: The description of this GoogleCloudAiplatformV1Dataset.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1Dataset.

        Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :return: The display_name of this GoogleCloudAiplatformV1Dataset.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1Dataset.

        Required. The user-defined name of the Dataset. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :param display_name: The display_name of this GoogleCloudAiplatformV1Dataset.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1Dataset.


        :return: The encryption_spec of this GoogleCloudAiplatformV1Dataset.
        :rtype: GoogleCloudAiplatformV1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1Dataset.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1Dataset.
        :type encryption_spec: GoogleCloudAiplatformV1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1Dataset.

        Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1Dataset.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1Dataset.

        Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1Dataset.
        :type etag: str
        """

        self._etag = etag

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1Dataset.

        The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Dataset: * \"aiplatform.googleapis.com/dataset_metadata_schema\": output only, its value is the metadata_schema's title.

        :return: The labels of this GoogleCloudAiplatformV1Dataset.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1Dataset.

        The labels with user-defined metadata to organize your Datasets. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Dataset (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Dataset: * \"aiplatform.googleapis.com/dataset_metadata_schema\": output only, its value is the metadata_schema's title.

        :param labels: The labels of this GoogleCloudAiplatformV1Dataset.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudAiplatformV1Dataset.

        Required. Additional information about the Dataset.

        :return: The metadata of this GoogleCloudAiplatformV1Dataset.
        :rtype: object
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudAiplatformV1Dataset.

        Required. Additional information about the Dataset.

        :param metadata: The metadata of this GoogleCloudAiplatformV1Dataset.
        :type metadata: object
        """

        self._metadata = metadata

    @property
    def metadata_artifact(self):
        """Gets the metadata_artifact of this GoogleCloudAiplatformV1Dataset.

        Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.

        :return: The metadata_artifact of this GoogleCloudAiplatformV1Dataset.
        :rtype: str
        """
        return self._metadata_artifact

    @metadata_artifact.setter
    def metadata_artifact(self, metadata_artifact):
        """Sets the metadata_artifact of this GoogleCloudAiplatformV1Dataset.

        Output only. The resource name of the Artifact that was created in MetadataStore when creating the Dataset. The Artifact resource name pattern is `projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}`.

        :param metadata_artifact: The metadata_artifact of this GoogleCloudAiplatformV1Dataset.
        :type metadata_artifact: str
        """

        self._metadata_artifact = metadata_artifact

    @property
    def metadata_schema_uri(self):
        """Gets the metadata_schema_uri of this GoogleCloudAiplatformV1Dataset.

        Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.

        :return: The metadata_schema_uri of this GoogleCloudAiplatformV1Dataset.
        :rtype: str
        """
        return self._metadata_schema_uri

    @metadata_schema_uri.setter
    def metadata_schema_uri(self, metadata_schema_uri):
        """Sets the metadata_schema_uri of this GoogleCloudAiplatformV1Dataset.

        Required. Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.

        :param metadata_schema_uri: The metadata_schema_uri of this GoogleCloudAiplatformV1Dataset.
        :type metadata_schema_uri: str
        """

        self._metadata_schema_uri = metadata_schema_uri

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1Dataset.

        Output only. The resource name of the Dataset.

        :return: The name of this GoogleCloudAiplatformV1Dataset.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1Dataset.

        Output only. The resource name of the Dataset.

        :param name: The name of this GoogleCloudAiplatformV1Dataset.
        :type name: str
        """

        self._name = name

    @property
    def saved_queries(self):
        """Gets the saved_queries of this GoogleCloudAiplatformV1Dataset.

        All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.

        :return: The saved_queries of this GoogleCloudAiplatformV1Dataset.
        :rtype: List[GoogleCloudAiplatformV1SavedQuery]
        """
        return self._saved_queries

    @saved_queries.setter
    def saved_queries(self, saved_queries):
        """Sets the saved_queries of this GoogleCloudAiplatformV1Dataset.

        All SavedQueries belong to the Dataset will be returned in List/Get Dataset response. The annotation_specs field will not be populated except for UI cases which will only use annotation_spec_count. In CreateDataset request, a SavedQuery is created together if this field is set, up to one SavedQuery can be set in CreateDatasetRequest. The SavedQuery should not contain any AnnotationSpec.

        :param saved_queries: The saved_queries of this GoogleCloudAiplatformV1Dataset.
        :type saved_queries: List[GoogleCloudAiplatformV1SavedQuery]
        """

        self._saved_queries = saved_queries

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1Dataset.

        Output only. Timestamp when this Dataset was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1Dataset.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1Dataset.

        Output only. Timestamp when this Dataset was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1Dataset.
        :type update_time: str
        """

        self._update_time = update_time
