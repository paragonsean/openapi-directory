# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.learning_genai_root_routing_decision_metadata import LearningGenaiRootRoutingDecisionMetadata
from openapi_server import util


class LearningGenaiRootRoutingDecision(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metadata: LearningGenaiRootRoutingDecisionMetadata=None, model_config_id: str=None):
        """LearningGenaiRootRoutingDecision - a model defined in OpenAPI

        :param metadata: The metadata of this LearningGenaiRootRoutingDecision.
        :param model_config_id: The model_config_id of this LearningGenaiRootRoutingDecision.
        """
        self.openapi_types = {
            'metadata': LearningGenaiRootRoutingDecisionMetadata,
            'model_config_id': str
        }

        self.attribute_map = {
            'metadata': 'metadata',
            'model_config_id': 'modelConfigId'
        }

        self._metadata = metadata
        self._model_config_id = model_config_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootRoutingDecision':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootRoutingDecision of this LearningGenaiRootRoutingDecision.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metadata(self):
        """Gets the metadata of this LearningGenaiRootRoutingDecision.


        :return: The metadata of this LearningGenaiRootRoutingDecision.
        :rtype: LearningGenaiRootRoutingDecisionMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this LearningGenaiRootRoutingDecision.


        :param metadata: The metadata of this LearningGenaiRootRoutingDecision.
        :type metadata: LearningGenaiRootRoutingDecisionMetadata
        """

        self._metadata = metadata

    @property
    def model_config_id(self):
        """Gets the model_config_id of this LearningGenaiRootRoutingDecision.

        The selected model to route traffic to.

        :return: The model_config_id of this LearningGenaiRootRoutingDecision.
        :rtype: str
        """
        return self._model_config_id

    @model_config_id.setter
    def model_config_id(self, model_config_id):
        """Sets the model_config_id of this LearningGenaiRootRoutingDecision.

        The selected model to route traffic to.

        :param model_config_id: The model_config_id of this LearningGenaiRootRoutingDecision.
        :type model_config_id: str
        """

        self._model_config_id = model_config_id
