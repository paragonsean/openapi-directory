# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_ai_nl_llm_proto_service_rai_signal import CloudAiNlLlmProtoServiceRaiSignal
from openapi_server.models.language_labs_aida_trust_recitation_proto_recitation_result import LanguageLabsAidaTrustRecitationProtoRecitationResult
from openapi_server.models.learning_genai_root_language_filter_result import LearningGenaiRootLanguageFilterResult
from openapi_server import util


class CloudAiNlLlmProtoServiceRaiResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aida_recitation_result: LanguageLabsAidaTrustRecitationProtoRecitationResult=None, blocked: bool=None, error_codes: List[int]=None, filtered: bool=None, language_filter_result: LearningGenaiRootLanguageFilterResult=None, rai_signals: List[CloudAiNlLlmProtoServiceRaiSignal]=None, triggered_blocklist: bool=None, triggered_recitation: bool=None, triggered_safety_filter: bool=None):
        """CloudAiNlLlmProtoServiceRaiResult - a model defined in OpenAPI

        :param aida_recitation_result: The aida_recitation_result of this CloudAiNlLlmProtoServiceRaiResult.
        :param blocked: The blocked of this CloudAiNlLlmProtoServiceRaiResult.
        :param error_codes: The error_codes of this CloudAiNlLlmProtoServiceRaiResult.
        :param filtered: The filtered of this CloudAiNlLlmProtoServiceRaiResult.
        :param language_filter_result: The language_filter_result of this CloudAiNlLlmProtoServiceRaiResult.
        :param rai_signals: The rai_signals of this CloudAiNlLlmProtoServiceRaiResult.
        :param triggered_blocklist: The triggered_blocklist of this CloudAiNlLlmProtoServiceRaiResult.
        :param triggered_recitation: The triggered_recitation of this CloudAiNlLlmProtoServiceRaiResult.
        :param triggered_safety_filter: The triggered_safety_filter of this CloudAiNlLlmProtoServiceRaiResult.
        """
        self.openapi_types = {
            'aida_recitation_result': LanguageLabsAidaTrustRecitationProtoRecitationResult,
            'blocked': bool,
            'error_codes': List[int],
            'filtered': bool,
            'language_filter_result': LearningGenaiRootLanguageFilterResult,
            'rai_signals': List[CloudAiNlLlmProtoServiceRaiSignal],
            'triggered_blocklist': bool,
            'triggered_recitation': bool,
            'triggered_safety_filter': bool
        }

        self.attribute_map = {
            'aida_recitation_result': 'aidaRecitationResult',
            'blocked': 'blocked',
            'error_codes': 'errorCodes',
            'filtered': 'filtered',
            'language_filter_result': 'languageFilterResult',
            'rai_signals': 'raiSignals',
            'triggered_blocklist': 'triggeredBlocklist',
            'triggered_recitation': 'triggeredRecitation',
            'triggered_safety_filter': 'triggeredSafetyFilter'
        }

        self._aida_recitation_result = aida_recitation_result
        self._blocked = blocked
        self._error_codes = error_codes
        self._filtered = filtered
        self._language_filter_result = language_filter_result
        self._rai_signals = rai_signals
        self._triggered_blocklist = triggered_blocklist
        self._triggered_recitation = triggered_recitation
        self._triggered_safety_filter = triggered_safety_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudAiNlLlmProtoServiceRaiResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudAiNlLlmProtoServiceRaiResult of this CloudAiNlLlmProtoServiceRaiResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aida_recitation_result(self):
        """Gets the aida_recitation_result of this CloudAiNlLlmProtoServiceRaiResult.


        :return: The aida_recitation_result of this CloudAiNlLlmProtoServiceRaiResult.
        :rtype: LanguageLabsAidaTrustRecitationProtoRecitationResult
        """
        return self._aida_recitation_result

    @aida_recitation_result.setter
    def aida_recitation_result(self, aida_recitation_result):
        """Sets the aida_recitation_result of this CloudAiNlLlmProtoServiceRaiResult.


        :param aida_recitation_result: The aida_recitation_result of this CloudAiNlLlmProtoServiceRaiResult.
        :type aida_recitation_result: LanguageLabsAidaTrustRecitationProtoRecitationResult
        """

        self._aida_recitation_result = aida_recitation_result

    @property
    def blocked(self):
        """Gets the blocked of this CloudAiNlLlmProtoServiceRaiResult.

        Use `triggered_blocklist`.

        :return: The blocked of this CloudAiNlLlmProtoServiceRaiResult.
        :rtype: bool
        """
        return self._blocked

    @blocked.setter
    def blocked(self, blocked):
        """Sets the blocked of this CloudAiNlLlmProtoServiceRaiResult.

        Use `triggered_blocklist`.

        :param blocked: The blocked of this CloudAiNlLlmProtoServiceRaiResult.
        :type blocked: bool
        """

        self._blocked = blocked

    @property
    def error_codes(self):
        """Gets the error_codes of this CloudAiNlLlmProtoServiceRaiResult.

        The error codes indicate which RAI filters block the response.

        :return: The error_codes of this CloudAiNlLlmProtoServiceRaiResult.
        :rtype: List[int]
        """
        return self._error_codes

    @error_codes.setter
    def error_codes(self, error_codes):
        """Sets the error_codes of this CloudAiNlLlmProtoServiceRaiResult.

        The error codes indicate which RAI filters block the response.

        :param error_codes: The error_codes of this CloudAiNlLlmProtoServiceRaiResult.
        :type error_codes: List[int]
        """

        self._error_codes = error_codes

    @property
    def filtered(self):
        """Gets the filtered of this CloudAiNlLlmProtoServiceRaiResult.

        Whether the text should be filtered and not shown to the end user. This is determined based on a combination of `triggered_recitation`, `triggered_blocklist`, `language_filter_result`, and `triggered_safety_filter`.

        :return: The filtered of this CloudAiNlLlmProtoServiceRaiResult.
        :rtype: bool
        """
        return self._filtered

    @filtered.setter
    def filtered(self, filtered):
        """Sets the filtered of this CloudAiNlLlmProtoServiceRaiResult.

        Whether the text should be filtered and not shown to the end user. This is determined based on a combination of `triggered_recitation`, `triggered_blocklist`, `language_filter_result`, and `triggered_safety_filter`.

        :param filtered: The filtered of this CloudAiNlLlmProtoServiceRaiResult.
        :type filtered: bool
        """

        self._filtered = filtered

    @property
    def language_filter_result(self):
        """Gets the language_filter_result of this CloudAiNlLlmProtoServiceRaiResult.


        :return: The language_filter_result of this CloudAiNlLlmProtoServiceRaiResult.
        :rtype: LearningGenaiRootLanguageFilterResult
        """
        return self._language_filter_result

    @language_filter_result.setter
    def language_filter_result(self, language_filter_result):
        """Sets the language_filter_result of this CloudAiNlLlmProtoServiceRaiResult.


        :param language_filter_result: The language_filter_result of this CloudAiNlLlmProtoServiceRaiResult.
        :type language_filter_result: LearningGenaiRootLanguageFilterResult
        """

        self._language_filter_result = language_filter_result

    @property
    def rai_signals(self):
        """Gets the rai_signals of this CloudAiNlLlmProtoServiceRaiResult.

        The RAI signals for the text.

        :return: The rai_signals of this CloudAiNlLlmProtoServiceRaiResult.
        :rtype: List[CloudAiNlLlmProtoServiceRaiSignal]
        """
        return self._rai_signals

    @rai_signals.setter
    def rai_signals(self, rai_signals):
        """Sets the rai_signals of this CloudAiNlLlmProtoServiceRaiResult.

        The RAI signals for the text.

        :param rai_signals: The rai_signals of this CloudAiNlLlmProtoServiceRaiResult.
        :type rai_signals: List[CloudAiNlLlmProtoServiceRaiSignal]
        """

        self._rai_signals = rai_signals

    @property
    def triggered_blocklist(self):
        """Gets the triggered_blocklist of this CloudAiNlLlmProtoServiceRaiResult.

        Whether the text triggered the blocklist.

        :return: The triggered_blocklist of this CloudAiNlLlmProtoServiceRaiResult.
        :rtype: bool
        """
        return self._triggered_blocklist

    @triggered_blocklist.setter
    def triggered_blocklist(self, triggered_blocklist):
        """Sets the triggered_blocklist of this CloudAiNlLlmProtoServiceRaiResult.

        Whether the text triggered the blocklist.

        :param triggered_blocklist: The triggered_blocklist of this CloudAiNlLlmProtoServiceRaiResult.
        :type triggered_blocklist: bool
        """

        self._triggered_blocklist = triggered_blocklist

    @property
    def triggered_recitation(self):
        """Gets the triggered_recitation of this CloudAiNlLlmProtoServiceRaiResult.

        Whether the text should be blocked by the recitation result from Aida recitation checker. It is determined from aida_recitation_result.

        :return: The triggered_recitation of this CloudAiNlLlmProtoServiceRaiResult.
        :rtype: bool
        """
        return self._triggered_recitation

    @triggered_recitation.setter
    def triggered_recitation(self, triggered_recitation):
        """Sets the triggered_recitation of this CloudAiNlLlmProtoServiceRaiResult.

        Whether the text should be blocked by the recitation result from Aida recitation checker. It is determined from aida_recitation_result.

        :param triggered_recitation: The triggered_recitation of this CloudAiNlLlmProtoServiceRaiResult.
        :type triggered_recitation: bool
        """

        self._triggered_recitation = triggered_recitation

    @property
    def triggered_safety_filter(self):
        """Gets the triggered_safety_filter of this CloudAiNlLlmProtoServiceRaiResult.

        Whether the text triggered the safety filter. Currently, this is due to CSAI triggering or one of four categories (derogatory, sexual, toxic, violent) having a score over the filter threshold.

        :return: The triggered_safety_filter of this CloudAiNlLlmProtoServiceRaiResult.
        :rtype: bool
        """
        return self._triggered_safety_filter

    @triggered_safety_filter.setter
    def triggered_safety_filter(self, triggered_safety_filter):
        """Sets the triggered_safety_filter of this CloudAiNlLlmProtoServiceRaiResult.

        Whether the text triggered the safety filter. Currently, this is due to CSAI triggering or one of four categories (derogatory, sexual, toxic, violent) having a score over the filter threshold.

        :param triggered_safety_filter: The triggered_safety_filter of this CloudAiNlLlmProtoServiceRaiResult.
        :type triggered_safety_filter: bool
        """

        self._triggered_safety_filter = triggered_safety_filter
