# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, excluded_fields: List[str]=None, included_fields: List[str]=None, instance_type: str=None, key_field: str=None):
        """GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig - a model defined in OpenAPI

        :param excluded_fields: The excluded_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :param included_fields: The included_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :param instance_type: The instance_type of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :param key_field: The key_field of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        """
        self.openapi_types = {
            'excluded_fields': List[str],
            'included_fields': List[str],
            'instance_type': str,
            'key_field': str
        }

        self.attribute_map = {
            'excluded_fields': 'excludedFields',
            'included_fields': 'includedFields',
            'instance_type': 'instanceType',
            'key_field': 'keyField'
        }

        self._excluded_fields = excluded_fields
        self._included_fields = included_fields
        self._instance_type = instance_type
        self._key_field = key_field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def excluded_fields(self):
        """Gets the excluded_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.

        Fields that will be excluded in the prediction instance that is sent to the Model. Excluded will be attached to the batch prediction output if key_field is not specified. When excluded_fields is populated, included_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord.

        :return: The excluded_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :rtype: List[str]
        """
        return self._excluded_fields

    @excluded_fields.setter
    def excluded_fields(self, excluded_fields):
        """Sets the excluded_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.

        Fields that will be excluded in the prediction instance that is sent to the Model. Excluded will be attached to the batch prediction output if key_field is not specified. When excluded_fields is populated, included_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord.

        :param excluded_fields: The excluded_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :type excluded_fields: List[str]
        """

        self._excluded_fields = excluded_fields

    @property
    def included_fields(self):
        """Gets the included_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.

        Fields that will be included in the prediction instance that is sent to the Model. If instance_type is `array`, the order of field names in included_fields also determines the order of the values in the array. When included_fields is populated, excluded_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord.

        :return: The included_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :rtype: List[str]
        """
        return self._included_fields

    @included_fields.setter
    def included_fields(self, included_fields):
        """Sets the included_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.

        Fields that will be included in the prediction instance that is sent to the Model. If instance_type is `array`, the order of field names in included_fields also determines the order of the values in the array. When included_fields is populated, excluded_fields must be empty. The input must be JSONL with objects at each line, BigQuery or TfRecord.

        :param included_fields: The included_fields of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :type included_fields: List[str]
        """

        self._included_fields = included_fields

    @property
    def instance_type(self):
        """Gets the instance_type of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.

        The format of the instance that the Model accepts. Vertex AI will convert compatible batch prediction input instance formats to the specified format. Supported values are: * `object`: Each input is converted to JSON object format. * For `bigquery`, each row is converted to an object. * For `jsonl`, each line of the JSONL input must be an object. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. * `array`: Each input is converted to JSON array format. * For `bigquery`, each row is converted to an array. The order of columns is determined by the BigQuery column order, unless included_fields is populated. included_fields must be populated for specifying field orders. * For `jsonl`, if each line of the JSONL input is an object, included_fields must be populated for specifying field orders. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. If not specified, Vertex AI converts the batch prediction input as follows: * For `bigquery` and `csv`, the behavior is the same as `array`. The order of columns is the same as defined in the file or table, unless included_fields is populated. * For `jsonl`, the prediction instance format is determined by each line of the input. * For `tf-record`/`tf-record-gzip`, each record will be converted to an object in the format of `{\"b64\": }`, where `` is the Base64-encoded string of the content of the record. * For `file-list`, each file in the list will be converted to an object in the format of `{\"b64\": }`, where `` is the Base64-encoded string of the content of the file.

        :return: The instance_type of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :rtype: str
        """
        return self._instance_type

    @instance_type.setter
    def instance_type(self, instance_type):
        """Sets the instance_type of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.

        The format of the instance that the Model accepts. Vertex AI will convert compatible batch prediction input instance formats to the specified format. Supported values are: * `object`: Each input is converted to JSON object format. * For `bigquery`, each row is converted to an object. * For `jsonl`, each line of the JSONL input must be an object. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. * `array`: Each input is converted to JSON array format. * For `bigquery`, each row is converted to an array. The order of columns is determined by the BigQuery column order, unless included_fields is populated. included_fields must be populated for specifying field orders. * For `jsonl`, if each line of the JSONL input is an object, included_fields must be populated for specifying field orders. * Does not apply to `csv`, `file-list`, `tf-record`, or `tf-record-gzip`. If not specified, Vertex AI converts the batch prediction input as follows: * For `bigquery` and `csv`, the behavior is the same as `array`. The order of columns is the same as defined in the file or table, unless included_fields is populated. * For `jsonl`, the prediction instance format is determined by each line of the input. * For `tf-record`/`tf-record-gzip`, each record will be converted to an object in the format of `{\"b64\": }`, where `` is the Base64-encoded string of the content of the record. * For `file-list`, each file in the list will be converted to an object in the format of `{\"b64\": }`, where `` is the Base64-encoded string of the content of the file.

        :param instance_type: The instance_type of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :type instance_type: str
        """

        self._instance_type = instance_type

    @property
    def key_field(self):
        """Gets the key_field of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.

        The name of the field that is considered as a key. The values identified by the key field is not included in the transformed instances that is sent to the Model. This is similar to specifying this name of the field in excluded_fields. In addition, the batch prediction output will not include the instances. Instead the output will only include the value of the key field, in a field named `key` in the output: * For `jsonl` output format, the output will have a `key` field instead of the `instance` field. * For `csv`/`bigquery` output format, the output will have have a `key` column instead of the instance feature columns. The input must be JSONL with objects at each line, CSV, BigQuery or TfRecord.

        :return: The key_field of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :rtype: str
        """
        return self._key_field

    @key_field.setter
    def key_field(self, key_field):
        """Sets the key_field of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.

        The name of the field that is considered as a key. The values identified by the key field is not included in the transformed instances that is sent to the Model. This is similar to specifying this name of the field in excluded_fields. In addition, the batch prediction output will not include the instances. Instead the output will only include the value of the key field, in a field named `key` in the output: * For `jsonl` output format, the output will have a `key` field instead of the `instance` field. * For `csv`/`bigquery` output format, the output will have have a `key` column instead of the instance feature columns. The input must be JSONL with objects at each line, CSV, BigQuery or TfRecord.

        :param key_field: The key_field of this GoogleCloudAiplatformV1BatchPredictionJobInstanceConfig.
        :type key_field: str
        """

        self._key_field = key_field
