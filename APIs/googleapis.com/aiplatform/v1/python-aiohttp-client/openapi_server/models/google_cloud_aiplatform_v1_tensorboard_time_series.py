# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_tensorboard_time_series_metadata import GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata
from openapi_server import util


class GoogleCloudAiplatformV1TensorboardTimeSeries(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, display_name: str=None, etag: str=None, metadata: GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata=None, name: str=None, plugin_data: str=None, plugin_name: str=None, update_time: str=None, value_type: str=None):
        """GoogleCloudAiplatformV1TensorboardTimeSeries - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :param description: The description of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :param display_name: The display_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :param etag: The etag of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :param metadata: The metadata of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :param name: The name of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :param plugin_data: The plugin_data of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :param plugin_name: The plugin_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :param update_time: The update_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :param value_type: The value_type of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'display_name': str,
            'etag': str,
            'metadata': GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata,
            'name': str,
            'plugin_data': str,
            'plugin_name': str,
            'update_time': str,
            'value_type': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'display_name': 'displayName',
            'etag': 'etag',
            'metadata': 'metadata',
            'name': 'name',
            'plugin_data': 'pluginData',
            'plugin_name': 'pluginName',
            'update_time': 'updateTime',
            'value_type': 'valueType'
        }

        self._create_time = create_time
        self._description = description
        self._display_name = display_name
        self._etag = etag
        self._metadata = metadata
        self._name = name
        self._plugin_data = plugin_data
        self._plugin_name = plugin_name
        self._update_time = update_time
        self._value_type = value_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1TensorboardTimeSeries':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1TensorboardTimeSeries of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Output only. Timestamp when this TensorboardTimeSeries was created.

        :return: The create_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Output only. Timestamp when this TensorboardTimeSeries was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Description of this TensorboardTimeSeries.

        :return: The description of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Description of this TensorboardTimeSeries.

        :param description: The description of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).

        :return: The display_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).

        :param display_name: The display_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type etag: str
        """

        self._etag = etag

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudAiplatformV1TensorboardTimeSeries.


        :return: The metadata of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudAiplatformV1TensorboardTimeSeries.


        :param metadata: The metadata of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type metadata: GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata
        """

        self._metadata = metadata

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Output only. Name of the TensorboardTimeSeries.

        :return: The name of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Output only. Name of the TensorboardTimeSeries.

        :param name: The name of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type name: str
        """

        self._name = name

    @property
    def plugin_data(self):
        """Gets the plugin_data of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Data of the current plugin, with the size limited to 65KB.

        :return: The plugin_data of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: str
        """
        return self._plugin_data

    @plugin_data.setter
    def plugin_data(self, plugin_data):
        """Sets the plugin_data of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Data of the current plugin, with the size limited to 65KB.

        :param plugin_data: The plugin_data of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type plugin_data: str
        """

        self._plugin_data = plugin_data

    @property
    def plugin_name(self):
        """Gets the plugin_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob

        :return: The plugin_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: str
        """
        return self._plugin_name

    @plugin_name.setter
    def plugin_name(self, plugin_name):
        """Sets the plugin_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob

        :param plugin_name: The plugin_name of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type plugin_name: str
        """

        self._plugin_name = plugin_name

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Output only. Timestamp when this TensorboardTimeSeries was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Output only. Timestamp when this TensorboardTimeSeries was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def value_type(self):
        """Gets the value_type of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Required. Immutable. Type of TensorboardTimeSeries value.

        :return: The value_type of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :rtype: str
        """
        return self._value_type

    @value_type.setter
    def value_type(self, value_type):
        """Sets the value_type of this GoogleCloudAiplatformV1TensorboardTimeSeries.

        Required. Immutable. Type of TensorboardTimeSeries value.

        :param value_type: The value_type of this GoogleCloudAiplatformV1TensorboardTimeSeries.
        :type value_type: str
        """
        allowed_values = ["VALUE_TYPE_UNSPECIFIED", "SCALAR", "TENSOR", "BLOB_SEQUENCE"]  # noqa: E501
        if value_type not in allowed_values:
            raise ValueError(
                "Invalid value for `value_type` ({0}), must be one of {1}"
                .format(value_type, allowed_values)
            )

        self._value_type = value_type
