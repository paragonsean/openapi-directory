# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LearningGenaiRootScoredToken(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_token_score: float=None, score: float=None, token: str=None):
        """LearningGenaiRootScoredToken - a model defined in OpenAPI

        :param end_token_score: The end_token_score of this LearningGenaiRootScoredToken.
        :param score: The score of this LearningGenaiRootScoredToken.
        :param token: The token of this LearningGenaiRootScoredToken.
        """
        self.openapi_types = {
            'end_token_score': float,
            'score': float,
            'token': str
        }

        self.attribute_map = {
            'end_token_score': 'endTokenScore',
            'score': 'score',
            'token': 'token'
        }

        self._end_token_score = end_token_score
        self._score = score
        self._token = token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootScoredToken':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootScoredToken of this LearningGenaiRootScoredToken.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_token_score(self):
        """Gets the end_token_score of this LearningGenaiRootScoredToken.

        Each end_token_score is a logprob for how well the completion would end at a particular token. See http://google3/labs/language/aida/config/proto/model_config.proto;l=376;rcl=573039459

        :return: The end_token_score of this LearningGenaiRootScoredToken.
        :rtype: float
        """
        return self._end_token_score

    @end_token_score.setter
    def end_token_score(self, end_token_score):
        """Sets the end_token_score of this LearningGenaiRootScoredToken.

        Each end_token_score is a logprob for how well the completion would end at a particular token. See http://google3/labs/language/aida/config/proto/model_config.proto;l=376;rcl=573039459

        :param end_token_score: The end_token_score of this LearningGenaiRootScoredToken.
        :type end_token_score: float
        """

        self._end_token_score = end_token_score

    @property
    def score(self):
        """Gets the score of this LearningGenaiRootScoredToken.

        Each score is the logprob for the token in model response.

        :return: The score of this LearningGenaiRootScoredToken.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this LearningGenaiRootScoredToken.

        Each score is the logprob for the token in model response.

        :param score: The score of this LearningGenaiRootScoredToken.
        :type score: float
        """

        self._score = score

    @property
    def token(self):
        """Gets the token of this LearningGenaiRootScoredToken.


        :return: The token of this LearningGenaiRootScoredToken.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this LearningGenaiRootScoredToken.


        :param token: The token of this LearningGenaiRootScoredToken.
        :type token: str
        """

        self._token = token
