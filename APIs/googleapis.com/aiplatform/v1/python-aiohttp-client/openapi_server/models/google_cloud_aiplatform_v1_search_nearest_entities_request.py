# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_nearest_neighbor_query import GoogleCloudAiplatformV1NearestNeighborQuery
from openapi_server import util


class GoogleCloudAiplatformV1SearchNearestEntitiesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query: GoogleCloudAiplatformV1NearestNeighborQuery=None, return_full_entity: bool=None):
        """GoogleCloudAiplatformV1SearchNearestEntitiesRequest - a model defined in OpenAPI

        :param query: The query of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.
        :param return_full_entity: The return_full_entity of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.
        """
        self.openapi_types = {
            'query': GoogleCloudAiplatformV1NearestNeighborQuery,
            'return_full_entity': bool
        }

        self.attribute_map = {
            'query': 'query',
            'return_full_entity': 'returnFullEntity'
        }

        self._query = query
        self._return_full_entity = return_full_entity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1SearchNearestEntitiesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1SearchNearestEntitiesRequest of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query(self):
        """Gets the query of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.


        :return: The query of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.
        :rtype: GoogleCloudAiplatformV1NearestNeighborQuery
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.


        :param query: The query of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.
        :type query: GoogleCloudAiplatformV1NearestNeighborQuery
        """

        self._query = query

    @property
    def return_full_entity(self):
        """Gets the return_full_entity of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.

        Optional. If set to true, the full entities (including all vector values and metadata) of the nearest neighbors are returned; otherwise only entity id of the nearest neighbors will be returned. Note that returning full entities will significantly increase the latency and cost of the query.

        :return: The return_full_entity of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.
        :rtype: bool
        """
        return self._return_full_entity

    @return_full_entity.setter
    def return_full_entity(self, return_full_entity):
        """Sets the return_full_entity of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.

        Optional. If set to true, the full entities (including all vector values and metadata) of the nearest neighbors are returned; otherwise only entity id of the nearest neighbors will be returned. Note that returning full entities will significantly increase the latency and cost of the query.

        :param return_full_entity: The return_full_entity of this GoogleCloudAiplatformV1SearchNearestEntitiesRequest.
        :type return_full_entity: bool
        """

        self._return_full_entity = return_full_entity
