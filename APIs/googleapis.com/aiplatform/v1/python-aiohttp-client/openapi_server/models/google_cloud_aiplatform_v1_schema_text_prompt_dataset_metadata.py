# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_schema_predict_params_grounding_config import GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig
from openapi_server import util


class GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, candidate_count: str=None, gcs_uri: str=None, grounding_config: GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig=None, max_output_tokens: str=None, note: str=None, prompt_type: str=None, stop_sequences: List[str]=None, temperature: float=None, text: str=None, top_k: str=None, top_p: float=None):
        """GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata - a model defined in OpenAPI

        :param candidate_count: The candidate_count of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param gcs_uri: The gcs_uri of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param grounding_config: The grounding_config of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param max_output_tokens: The max_output_tokens of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param note: The note of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param prompt_type: The prompt_type of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param stop_sequences: The stop_sequences of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param temperature: The temperature of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param text: The text of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param top_k: The top_k of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :param top_p: The top_p of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        """
        self.openapi_types = {
            'candidate_count': str,
            'gcs_uri': str,
            'grounding_config': GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig,
            'max_output_tokens': str,
            'note': str,
            'prompt_type': str,
            'stop_sequences': List[str],
            'temperature': float,
            'text': str,
            'top_k': str,
            'top_p': float
        }

        self.attribute_map = {
            'candidate_count': 'candidateCount',
            'gcs_uri': 'gcsUri',
            'grounding_config': 'groundingConfig',
            'max_output_tokens': 'maxOutputTokens',
            'note': 'note',
            'prompt_type': 'promptType',
            'stop_sequences': 'stopSequences',
            'temperature': 'temperature',
            'text': 'text',
            'top_k': 'topK',
            'top_p': 'topP'
        }

        self._candidate_count = candidate_count
        self._gcs_uri = gcs_uri
        self._grounding_config = grounding_config
        self._max_output_tokens = max_output_tokens
        self._note = note
        self._prompt_type = prompt_type
        self._stop_sequences = stop_sequences
        self._temperature = temperature
        self._text = text
        self._top_k = top_k
        self._top_p = top_p

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def candidate_count(self):
        """Gets the candidate_count of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Number of candidates.

        :return: The candidate_count of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: str
        """
        return self._candidate_count

    @candidate_count.setter
    def candidate_count(self, candidate_count):
        """Sets the candidate_count of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Number of candidates.

        :param candidate_count: The candidate_count of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type candidate_count: str
        """

        self._candidate_count = candidate_count

    @property
    def gcs_uri(self):
        """Gets the gcs_uri of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        The Google Cloud Storage URI that stores the prompt data.

        :return: The gcs_uri of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: str
        """
        return self._gcs_uri

    @gcs_uri.setter
    def gcs_uri(self, gcs_uri):
        """Sets the gcs_uri of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        The Google Cloud Storage URI that stores the prompt data.

        :param gcs_uri: The gcs_uri of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type gcs_uri: str
        """

        self._gcs_uri = gcs_uri

    @property
    def grounding_config(self):
        """Gets the grounding_config of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.


        :return: The grounding_config of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig
        """
        return self._grounding_config

    @grounding_config.setter
    def grounding_config(self, grounding_config):
        """Sets the grounding_config of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.


        :param grounding_config: The grounding_config of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type grounding_config: GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig
        """

        self._grounding_config = grounding_config

    @property
    def max_output_tokens(self):
        """Gets the max_output_tokens of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Value of the maximum number of tokens generated set when the dataset was saved.

        :return: The max_output_tokens of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: str
        """
        return self._max_output_tokens

    @max_output_tokens.setter
    def max_output_tokens(self, max_output_tokens):
        """Sets the max_output_tokens of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Value of the maximum number of tokens generated set when the dataset was saved.

        :param max_output_tokens: The max_output_tokens of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type max_output_tokens: str
        """

        self._max_output_tokens = max_output_tokens

    @property
    def note(self):
        """Gets the note of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        User-created prompt note. Note size limit is 2KB.

        :return: The note of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        User-created prompt note. Note size limit is 2KB.

        :param note: The note of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type note: str
        """

        self._note = note

    @property
    def prompt_type(self):
        """Gets the prompt_type of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Type of the prompt dataset.

        :return: The prompt_type of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: str
        """
        return self._prompt_type

    @prompt_type.setter
    def prompt_type(self, prompt_type):
        """Sets the prompt_type of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Type of the prompt dataset.

        :param prompt_type: The prompt_type of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type prompt_type: str
        """

        self._prompt_type = prompt_type

    @property
    def stop_sequences(self):
        """Gets the stop_sequences of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Customized stop sequences.

        :return: The stop_sequences of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: List[str]
        """
        return self._stop_sequences

    @stop_sequences.setter
    def stop_sequences(self, stop_sequences):
        """Sets the stop_sequences of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Customized stop sequences.

        :param stop_sequences: The stop_sequences of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type stop_sequences: List[str]
        """

        self._stop_sequences = stop_sequences

    @property
    def temperature(self):
        """Gets the temperature of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Temperature value used for sampling set when the dataset was saved. This value is used to tune the degree of randomness.

        :return: The temperature of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: float
        """
        return self._temperature

    @temperature.setter
    def temperature(self, temperature):
        """Sets the temperature of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Temperature value used for sampling set when the dataset was saved. This value is used to tune the degree of randomness.

        :param temperature: The temperature of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type temperature: float
        """

        self._temperature = temperature

    @property
    def text(self):
        """Gets the text of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        The content of the prompt dataset.

        :return: The text of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        The content of the prompt dataset.

        :param text: The text of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type text: str
        """

        self._text = text

    @property
    def top_k(self):
        """Gets the top_k of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Top K value set when the dataset was saved. This value determines how many candidates with highest probability from the vocab would be selected for each decoding step.

        :return: The top_k of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: str
        """
        return self._top_k

    @top_k.setter
    def top_k(self, top_k):
        """Sets the top_k of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Top K value set when the dataset was saved. This value determines how many candidates with highest probability from the vocab would be selected for each decoding step.

        :param top_k: The top_k of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type top_k: str
        """

        self._top_k = top_k

    @property
    def top_p(self):
        """Gets the top_p of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Top P value set when the dataset was saved. Given topK tokens for decoding, top candidates will be selected until the sum of their probabilities is topP.

        :return: The top_p of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :rtype: float
        """
        return self._top_p

    @top_p.setter
    def top_p(self, top_p):
        """Sets the top_p of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.

        Top P value set when the dataset was saved. Given topK tokens for decoding, top candidates will be selected until the sum of their probabilities is topP.

        :param top_p: The top_p of this GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.
        :type top_p: float
        """

        self._top_p = top_p
