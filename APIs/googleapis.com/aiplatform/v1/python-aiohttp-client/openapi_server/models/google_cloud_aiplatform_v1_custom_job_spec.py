# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_gcs_destination import GoogleCloudAiplatformV1GcsDestination
from openapi_server.models.google_cloud_aiplatform_v1_scheduling import GoogleCloudAiplatformV1Scheduling
from openapi_server.models.google_cloud_aiplatform_v1_worker_pool_spec import GoogleCloudAiplatformV1WorkerPoolSpec
from openapi_server import util


class GoogleCloudAiplatformV1CustomJobSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_output_directory: GoogleCloudAiplatformV1GcsDestination=None, enable_dashboard_access: bool=None, enable_web_access: bool=None, experiment: str=None, experiment_run: str=None, models: List[str]=None, network: str=None, protected_artifact_location_id: str=None, reserved_ip_ranges: List[str]=None, scheduling: GoogleCloudAiplatformV1Scheduling=None, service_account: str=None, tensorboard: str=None, worker_pool_specs: List[GoogleCloudAiplatformV1WorkerPoolSpec]=None):
        """GoogleCloudAiplatformV1CustomJobSpec - a model defined in OpenAPI

        :param base_output_directory: The base_output_directory of this GoogleCloudAiplatformV1CustomJobSpec.
        :param enable_dashboard_access: The enable_dashboard_access of this GoogleCloudAiplatformV1CustomJobSpec.
        :param enable_web_access: The enable_web_access of this GoogleCloudAiplatformV1CustomJobSpec.
        :param experiment: The experiment of this GoogleCloudAiplatformV1CustomJobSpec.
        :param experiment_run: The experiment_run of this GoogleCloudAiplatformV1CustomJobSpec.
        :param models: The models of this GoogleCloudAiplatformV1CustomJobSpec.
        :param network: The network of this GoogleCloudAiplatformV1CustomJobSpec.
        :param protected_artifact_location_id: The protected_artifact_location_id of this GoogleCloudAiplatformV1CustomJobSpec.
        :param reserved_ip_ranges: The reserved_ip_ranges of this GoogleCloudAiplatformV1CustomJobSpec.
        :param scheduling: The scheduling of this GoogleCloudAiplatformV1CustomJobSpec.
        :param service_account: The service_account of this GoogleCloudAiplatformV1CustomJobSpec.
        :param tensorboard: The tensorboard of this GoogleCloudAiplatformV1CustomJobSpec.
        :param worker_pool_specs: The worker_pool_specs of this GoogleCloudAiplatformV1CustomJobSpec.
        """
        self.openapi_types = {
            'base_output_directory': GoogleCloudAiplatformV1GcsDestination,
            'enable_dashboard_access': bool,
            'enable_web_access': bool,
            'experiment': str,
            'experiment_run': str,
            'models': List[str],
            'network': str,
            'protected_artifact_location_id': str,
            'reserved_ip_ranges': List[str],
            'scheduling': GoogleCloudAiplatformV1Scheduling,
            'service_account': str,
            'tensorboard': str,
            'worker_pool_specs': List[GoogleCloudAiplatformV1WorkerPoolSpec]
        }

        self.attribute_map = {
            'base_output_directory': 'baseOutputDirectory',
            'enable_dashboard_access': 'enableDashboardAccess',
            'enable_web_access': 'enableWebAccess',
            'experiment': 'experiment',
            'experiment_run': 'experimentRun',
            'models': 'models',
            'network': 'network',
            'protected_artifact_location_id': 'protectedArtifactLocationId',
            'reserved_ip_ranges': 'reservedIpRanges',
            'scheduling': 'scheduling',
            'service_account': 'serviceAccount',
            'tensorboard': 'tensorboard',
            'worker_pool_specs': 'workerPoolSpecs'
        }

        self._base_output_directory = base_output_directory
        self._enable_dashboard_access = enable_dashboard_access
        self._enable_web_access = enable_web_access
        self._experiment = experiment
        self._experiment_run = experiment_run
        self._models = models
        self._network = network
        self._protected_artifact_location_id = protected_artifact_location_id
        self._reserved_ip_ranges = reserved_ip_ranges
        self._scheduling = scheduling
        self._service_account = service_account
        self._tensorboard = tensorboard
        self._worker_pool_specs = worker_pool_specs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1CustomJobSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1CustomJobSpec of this GoogleCloudAiplatformV1CustomJobSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_output_directory(self):
        """Gets the base_output_directory of this GoogleCloudAiplatformV1CustomJobSpec.


        :return: The base_output_directory of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: GoogleCloudAiplatformV1GcsDestination
        """
        return self._base_output_directory

    @base_output_directory.setter
    def base_output_directory(self, base_output_directory):
        """Sets the base_output_directory of this GoogleCloudAiplatformV1CustomJobSpec.


        :param base_output_directory: The base_output_directory of this GoogleCloudAiplatformV1CustomJobSpec.
        :type base_output_directory: GoogleCloudAiplatformV1GcsDestination
        """

        self._base_output_directory = base_output_directory

    @property
    def enable_dashboard_access(self):
        """Gets the enable_dashboard_access of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).

        :return: The enable_dashboard_access of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: bool
        """
        return self._enable_dashboard_access

    @enable_dashboard_access.setter
    def enable_dashboard_access(self, enable_dashboard_access):
        """Sets the enable_dashboard_access of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. Whether you want Vertex AI to enable access to the customized dashboard in training chief container. If set to `true`, you can access the dashboard at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).

        :param enable_dashboard_access: The enable_dashboard_access of this GoogleCloudAiplatformV1CustomJobSpec.
        :type enable_dashboard_access: bool
        """

        self._enable_dashboard_access = enable_dashboard_access

    @property
    def enable_web_access(self):
        """Gets the enable_web_access of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).

        :return: The enable_web_access of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: bool
        """
        return self._enable_web_access

    @enable_web_access.setter
    def enable_web_access(self, enable_web_access):
        """Sets the enable_web_access of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. Whether you want Vertex AI to enable [interactive shell access](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) to training containers. If set to `true`, you can access interactive shells at the URIs given by CustomJob.web_access_uris or Trial.web_access_uris (within HyperparameterTuningJob.trials).

        :param enable_web_access: The enable_web_access of this GoogleCloudAiplatformV1CustomJobSpec.
        :type enable_web_access: bool
        """

        self._enable_web_access = enable_web_access

    @property
    def experiment(self):
        """Gets the experiment of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`

        :return: The experiment of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: str
        """
        return self._experiment

    @experiment.setter
    def experiment(self, experiment):
        """Sets the experiment of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The Experiment associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}`

        :param experiment: The experiment of this GoogleCloudAiplatformV1CustomJobSpec.
        :type experiment: str
        """

        self._experiment = experiment

    @property
    def experiment_run(self):
        """Gets the experiment_run of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`

        :return: The experiment_run of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: str
        """
        return self._experiment_run

    @experiment_run.setter
    def experiment_run(self, experiment_run):
        """Sets the experiment_run of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The Experiment Run associated with this job. Format: `projects/{project}/locations/{location}/metadataStores/{metadataStores}/contexts/{experiment-name}-{experiment-run-name}`

        :param experiment_run: The experiment_run of this GoogleCloudAiplatformV1CustomJobSpec.
        :type experiment_run: str
        """

        self._experiment_run = experiment_run

    @property
    def models(self):
        """Gets the models of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The name of the Model resources for which to generate a mapping to artifact URIs. Applicable only to some of the Google-provided custom jobs. Format: `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific version of the model, also provide the version ID or version alias. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias is specified, the \"default\" version will be returned. The \"default\" version alias is created for the first version of the model, and can be moved to other versions later on. There will be exactly one default version.

        :return: The models of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: List[str]
        """
        return self._models

    @models.setter
    def models(self, models):
        """Sets the models of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The name of the Model resources for which to generate a mapping to artifact URIs. Applicable only to some of the Google-provided custom jobs. Format: `projects/{project}/locations/{location}/models/{model}` In order to retrieve a specific version of the model, also provide the version ID or version alias. Example: `projects/{project}/locations/{location}/models/{model}@2` or `projects/{project}/locations/{location}/models/{model}@golden` If no version ID or alias is specified, the \"default\" version will be returned. The \"default\" version alias is created for the first version of the model, and can be moved to other versions later on. There will be exactly one default version.

        :param models: The models of this GoogleCloudAiplatformV1CustomJobSpec.
        :type models: List[str]
        """

        self._models = models

    @property
    def network(self):
        """Gets the network of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.

        :return: The network of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Job should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. To specify this field, you must have already [configured VPC Network Peering for Vertex AI](https://cloud.google.com/vertex-ai/docs/general/vpc-peering). If this field is left unspecified, the job is not peered with any network.

        :param network: The network of this GoogleCloudAiplatformV1CustomJobSpec.
        :type network: str
        """

        self._network = network

    @property
    def protected_artifact_location_id(self):
        """Gets the protected_artifact_location_id of this GoogleCloudAiplatformV1CustomJobSpec.

        The ID of the location to store protected artifacts. e.g. us-central1. Populate only when the location is different than CustomJob location. List of supported locations: https://cloud.google.com/vertex-ai/docs/general/locations

        :return: The protected_artifact_location_id of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: str
        """
        return self._protected_artifact_location_id

    @protected_artifact_location_id.setter
    def protected_artifact_location_id(self, protected_artifact_location_id):
        """Sets the protected_artifact_location_id of this GoogleCloudAiplatformV1CustomJobSpec.

        The ID of the location to store protected artifacts. e.g. us-central1. Populate only when the location is different than CustomJob location. List of supported locations: https://cloud.google.com/vertex-ai/docs/general/locations

        :param protected_artifact_location_id: The protected_artifact_location_id of this GoogleCloudAiplatformV1CustomJobSpec.
        :type protected_artifact_location_id: str
        """

        self._protected_artifact_location_id = protected_artifact_location_id

    @property
    def reserved_ip_ranges(self):
        """Gets the reserved_ip_ranges of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].

        :return: The reserved_ip_ranges of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: List[str]
        """
        return self._reserved_ip_ranges

    @reserved_ip_ranges.setter
    def reserved_ip_ranges(self, reserved_ip_ranges):
        """Sets the reserved_ip_ranges of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. A list of names for the reserved ip ranges under the VPC network that can be used for this job. If set, we will deploy the job within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].

        :param reserved_ip_ranges: The reserved_ip_ranges of this GoogleCloudAiplatformV1CustomJobSpec.
        :type reserved_ip_ranges: List[str]
        """

        self._reserved_ip_ranges = reserved_ip_ranges

    @property
    def scheduling(self):
        """Gets the scheduling of this GoogleCloudAiplatformV1CustomJobSpec.


        :return: The scheduling of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: GoogleCloudAiplatformV1Scheduling
        """
        return self._scheduling

    @scheduling.setter
    def scheduling(self, scheduling):
        """Sets the scheduling of this GoogleCloudAiplatformV1CustomJobSpec.


        :param scheduling: The scheduling of this GoogleCloudAiplatformV1CustomJobSpec.
        :type scheduling: GoogleCloudAiplatformV1Scheduling
        """

        self._scheduling = scheduling

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudAiplatformV1CustomJobSpec.

        Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used.

        :return: The service_account of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudAiplatformV1CustomJobSpec.

        Specifies the service account for workload run-as account. Users submitting jobs must have act-as permission on this run-as account. If unspecified, the [Vertex AI Custom Code Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) for the CustomJob's project is used.

        :param service_account: The service_account of this GoogleCloudAiplatformV1CustomJobSpec.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def tensorboard(self):
        """Gets the tensorboard of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`

        :return: The tensorboard of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: str
        """
        return self._tensorboard

    @tensorboard.setter
    def tensorboard(self, tensorboard):
        """Sets the tensorboard of this GoogleCloudAiplatformV1CustomJobSpec.

        Optional. The name of a Vertex AI Tensorboard resource to which this CustomJob will upload Tensorboard logs. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`

        :param tensorboard: The tensorboard of this GoogleCloudAiplatformV1CustomJobSpec.
        :type tensorboard: str
        """

        self._tensorboard = tensorboard

    @property
    def worker_pool_specs(self):
        """Gets the worker_pool_specs of this GoogleCloudAiplatformV1CustomJobSpec.

        Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.

        :return: The worker_pool_specs of this GoogleCloudAiplatformV1CustomJobSpec.
        :rtype: List[GoogleCloudAiplatformV1WorkerPoolSpec]
        """
        return self._worker_pool_specs

    @worker_pool_specs.setter
    def worker_pool_specs(self, worker_pool_specs):
        """Sets the worker_pool_specs of this GoogleCloudAiplatformV1CustomJobSpec.

        Required. The spec of the worker pools including machine type and Docker image. All worker pools except the first one are optional and can be skipped by providing an empty value.

        :param worker_pool_specs: The worker_pool_specs of this GoogleCloudAiplatformV1CustomJobSpec.
        :type worker_pool_specs: List[GoogleCloudAiplatformV1WorkerPoolSpec]
        """

        self._worker_pool_specs = worker_pool_specs
