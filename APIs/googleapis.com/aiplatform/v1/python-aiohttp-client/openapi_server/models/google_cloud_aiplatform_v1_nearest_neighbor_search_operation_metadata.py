# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_nearest_neighbor_search_operation_metadata_content_validation_stats import GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats
from openapi_server import util


class GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_validation_stats: List[GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats]=None, data_bytes_count: str=None):
        """GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata - a model defined in OpenAPI

        :param content_validation_stats: The content_validation_stats of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.
        :param data_bytes_count: The data_bytes_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.
        """
        self.openapi_types = {
            'content_validation_stats': List[GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats],
            'data_bytes_count': str
        }

        self.attribute_map = {
            'content_validation_stats': 'contentValidationStats',
            'data_bytes_count': 'dataBytesCount'
        }

        self._content_validation_stats = content_validation_stats
        self._data_bytes_count = data_bytes_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_validation_stats(self):
        """Gets the content_validation_stats of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.

        The validation stats of the content (per file) to be inserted or updated on the Matching Engine Index resource. Populated if contentsDeltaUri is provided as part of Index.metadata. Please note that, currently for those files that are broken or has unsupported file format, we will not have the stats for those files.

        :return: The content_validation_stats of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.
        :rtype: List[GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats]
        """
        return self._content_validation_stats

    @content_validation_stats.setter
    def content_validation_stats(self, content_validation_stats):
        """Sets the content_validation_stats of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.

        The validation stats of the content (per file) to be inserted or updated on the Matching Engine Index resource. Populated if contentsDeltaUri is provided as part of Index.metadata. Please note that, currently for those files that are broken or has unsupported file format, we will not have the stats for those files.

        :param content_validation_stats: The content_validation_stats of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.
        :type content_validation_stats: List[GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats]
        """

        self._content_validation_stats = content_validation_stats

    @property
    def data_bytes_count(self):
        """Gets the data_bytes_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.

        The ingested data size in bytes.

        :return: The data_bytes_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.
        :rtype: str
        """
        return self._data_bytes_count

    @data_bytes_count.setter
    def data_bytes_count(self, data_bytes_count):
        """Sets the data_bytes_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.

        The ingested data size in bytes.

        :param data_bytes_count: The data_bytes_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadata.
        :type data_bytes_count: str
        """

        self._data_bytes_count = data_bytes_count
