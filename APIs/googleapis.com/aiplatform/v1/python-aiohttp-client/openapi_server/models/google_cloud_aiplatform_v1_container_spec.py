# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_env_var import GoogleCloudAiplatformV1EnvVar
from openapi_server import util


class GoogleCloudAiplatformV1ContainerSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, args: List[str]=None, command: List[str]=None, env: List[GoogleCloudAiplatformV1EnvVar]=None, image_uri: str=None):
        """GoogleCloudAiplatformV1ContainerSpec - a model defined in OpenAPI

        :param args: The args of this GoogleCloudAiplatformV1ContainerSpec.
        :param command: The command of this GoogleCloudAiplatformV1ContainerSpec.
        :param env: The env of this GoogleCloudAiplatformV1ContainerSpec.
        :param image_uri: The image_uri of this GoogleCloudAiplatformV1ContainerSpec.
        """
        self.openapi_types = {
            'args': List[str],
            'command': List[str],
            'env': List[GoogleCloudAiplatformV1EnvVar],
            'image_uri': str
        }

        self.attribute_map = {
            'args': 'args',
            'command': 'command',
            'env': 'env',
            'image_uri': 'imageUri'
        }

        self._args = args
        self._command = command
        self._env = env
        self._image_uri = image_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1ContainerSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1ContainerSpec of this GoogleCloudAiplatformV1ContainerSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def args(self):
        """Gets the args of this GoogleCloudAiplatformV1ContainerSpec.

        The arguments to be passed when starting the container.

        :return: The args of this GoogleCloudAiplatformV1ContainerSpec.
        :rtype: List[str]
        """
        return self._args

    @args.setter
    def args(self, args):
        """Sets the args of this GoogleCloudAiplatformV1ContainerSpec.

        The arguments to be passed when starting the container.

        :param args: The args of this GoogleCloudAiplatformV1ContainerSpec.
        :type args: List[str]
        """

        self._args = args

    @property
    def command(self):
        """Gets the command of this GoogleCloudAiplatformV1ContainerSpec.

        The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.

        :return: The command of this GoogleCloudAiplatformV1ContainerSpec.
        :rtype: List[str]
        """
        return self._command

    @command.setter
    def command(self, command):
        """Sets the command of this GoogleCloudAiplatformV1ContainerSpec.

        The command to be invoked when the container is started. It overrides the entrypoint instruction in Dockerfile when provided.

        :param command: The command of this GoogleCloudAiplatformV1ContainerSpec.
        :type command: List[str]
        """

        self._command = command

    @property
    def env(self):
        """Gets the env of this GoogleCloudAiplatformV1ContainerSpec.

        Environment variables to be passed to the container. Maximum limit is 100.

        :return: The env of this GoogleCloudAiplatformV1ContainerSpec.
        :rtype: List[GoogleCloudAiplatformV1EnvVar]
        """
        return self._env

    @env.setter
    def env(self, env):
        """Sets the env of this GoogleCloudAiplatformV1ContainerSpec.

        Environment variables to be passed to the container. Maximum limit is 100.

        :param env: The env of this GoogleCloudAiplatformV1ContainerSpec.
        :type env: List[GoogleCloudAiplatformV1EnvVar]
        """

        self._env = env

    @property
    def image_uri(self):
        """Gets the image_uri of this GoogleCloudAiplatformV1ContainerSpec.

        Required. The URI of a container image in the Container Registry that is to be run on each worker replica.

        :return: The image_uri of this GoogleCloudAiplatformV1ContainerSpec.
        :rtype: str
        """
        return self._image_uri

    @image_uri.setter
    def image_uri(self, image_uri):
        """Sets the image_uri of this GoogleCloudAiplatformV1ContainerSpec.

        Required. The URI of a container image in the Container Registry that is to be run on each worker replica.

        :param image_uri: The image_uri of this GoogleCloudAiplatformV1ContainerSpec.
        :type image_uri: str
        """

        self._image_uri = image_uri
