# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_study_spec import GoogleCloudAiplatformV1StudySpec
from openapi_server import util


class GoogleCloudAiplatformV1Study(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, inactive_reason: str=None, name: str=None, state: str=None, study_spec: GoogleCloudAiplatformV1StudySpec=None):
        """GoogleCloudAiplatformV1Study - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1Study.
        :param display_name: The display_name of this GoogleCloudAiplatformV1Study.
        :param inactive_reason: The inactive_reason of this GoogleCloudAiplatformV1Study.
        :param name: The name of this GoogleCloudAiplatformV1Study.
        :param state: The state of this GoogleCloudAiplatformV1Study.
        :param study_spec: The study_spec of this GoogleCloudAiplatformV1Study.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'inactive_reason': str,
            'name': str,
            'state': str,
            'study_spec': GoogleCloudAiplatformV1StudySpec
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'inactive_reason': 'inactiveReason',
            'name': 'name',
            'state': 'state',
            'study_spec': 'studySpec'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._inactive_reason = inactive_reason
        self._name = name
        self._state = state
        self._study_spec = study_spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1Study':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1Study of this GoogleCloudAiplatformV1Study.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1Study.

        Output only. Time at which the study was created.

        :return: The create_time of this GoogleCloudAiplatformV1Study.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1Study.

        Output only. Time at which the study was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1Study.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1Study.

        Required. Describes the Study, default value is empty string.

        :return: The display_name of this GoogleCloudAiplatformV1Study.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1Study.

        Required. Describes the Study, default value is empty string.

        :param display_name: The display_name of this GoogleCloudAiplatformV1Study.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def inactive_reason(self):
        """Gets the inactive_reason of this GoogleCloudAiplatformV1Study.

        Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.

        :return: The inactive_reason of this GoogleCloudAiplatformV1Study.
        :rtype: str
        """
        return self._inactive_reason

    @inactive_reason.setter
    def inactive_reason(self, inactive_reason):
        """Sets the inactive_reason of this GoogleCloudAiplatformV1Study.

        Output only. A human readable reason why the Study is inactive. This should be empty if a study is ACTIVE or COMPLETED.

        :param inactive_reason: The inactive_reason of this GoogleCloudAiplatformV1Study.
        :type inactive_reason: str
        """

        self._inactive_reason = inactive_reason

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1Study.

        Output only. The name of a study. The study's globally unique identifier. Format: `projects/{project}/locations/{location}/studies/{study}`

        :return: The name of this GoogleCloudAiplatformV1Study.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1Study.

        Output only. The name of a study. The study's globally unique identifier. Format: `projects/{project}/locations/{location}/studies/{study}`

        :param name: The name of this GoogleCloudAiplatformV1Study.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1Study.

        Output only. The detailed state of a Study.

        :return: The state of this GoogleCloudAiplatformV1Study.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1Study.

        Output only. The detailed state of a Study.

        :param state: The state of this GoogleCloudAiplatformV1Study.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "ACTIVE", "INACTIVE", "COMPLETED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def study_spec(self):
        """Gets the study_spec of this GoogleCloudAiplatformV1Study.


        :return: The study_spec of this GoogleCloudAiplatformV1Study.
        :rtype: GoogleCloudAiplatformV1StudySpec
        """
        return self._study_spec

    @study_spec.setter
    def study_spec(self, study_spec):
        """Sets the study_spec of this GoogleCloudAiplatformV1Study.


        :param study_spec: The study_spec of this GoogleCloudAiplatformV1Study.
        :type study_spec: GoogleCloudAiplatformV1StudySpec
        """

        self._study_spec = study_spec
