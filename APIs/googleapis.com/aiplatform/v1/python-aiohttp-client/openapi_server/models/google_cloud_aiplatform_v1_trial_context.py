# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_trial_parameter import GoogleCloudAiplatformV1TrialParameter
from openapi_server import util


class GoogleCloudAiplatformV1TrialContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, parameters: List[GoogleCloudAiplatformV1TrialParameter]=None):
        """GoogleCloudAiplatformV1TrialContext - a model defined in OpenAPI

        :param description: The description of this GoogleCloudAiplatformV1TrialContext.
        :param parameters: The parameters of this GoogleCloudAiplatformV1TrialContext.
        """
        self.openapi_types = {
            'description': str,
            'parameters': List[GoogleCloudAiplatformV1TrialParameter]
        }

        self.attribute_map = {
            'description': 'description',
            'parameters': 'parameters'
        }

        self._description = description
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1TrialContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1TrialContext of this GoogleCloudAiplatformV1TrialContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1TrialContext.

        A human-readable field which can store a description of this context. This will become part of the resulting Trial's description field.

        :return: The description of this GoogleCloudAiplatformV1TrialContext.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1TrialContext.

        A human-readable field which can store a description of this context. This will become part of the resulting Trial's description field.

        :param description: The description of this GoogleCloudAiplatformV1TrialContext.
        :type description: str
        """

        self._description = description

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudAiplatformV1TrialContext.

        If/when a Trial is generated or selected from this Context, its Parameters will match any parameters specified here. (I.e. if this context specifies parameter name:'a' int_value:3, then a resulting Trial will have int_value:3 for its parameter named 'a'.) Note that we first attempt to match existing REQUESTED Trials with contexts, and if there are no matches, we generate suggestions in the subspace defined by the parameters specified here. NOTE: a Context without any Parameters matches the entire feasible search space.

        :return: The parameters of this GoogleCloudAiplatformV1TrialContext.
        :rtype: List[GoogleCloudAiplatformV1TrialParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudAiplatformV1TrialContext.

        If/when a Trial is generated or selected from this Context, its Parameters will match any parameters specified here. (I.e. if this context specifies parameter name:'a' int_value:3, then a resulting Trial will have int_value:3 for its parameter named 'a'.) Note that we first attempt to match existing REQUESTED Trials with contexts, and if there are no matches, we generate suggestions in the subspace defined by the parameters specified here. NOTE: a Context without any Parameters matches the entire feasible search space.

        :param parameters: The parameters of this GoogleCloudAiplatformV1TrialContext.
        :type parameters: List[GoogleCloudAiplatformV1TrialParameter]
        """

        self._parameters = parameters
