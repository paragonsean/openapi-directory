# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_encryption_spec import GoogleCloudAiplatformV1EncryptionSpec
from openapi_server.models.google_cloud_aiplatform_v1_pipeline_job_detail import GoogleCloudAiplatformV1PipelineJobDetail
from openapi_server.models.google_cloud_aiplatform_v1_pipeline_job_runtime_config import GoogleCloudAiplatformV1PipelineJobRuntimeConfig
from openapi_server.models.google_cloud_aiplatform_v1_pipeline_template_metadata import GoogleCloudAiplatformV1PipelineTemplateMetadata
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudAiplatformV1PipelineJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, encryption_spec: GoogleCloudAiplatformV1EncryptionSpec=None, end_time: str=None, error: GoogleRpcStatus=None, job_detail: GoogleCloudAiplatformV1PipelineJobDetail=None, labels: Dict[str, str]=None, name: str=None, network: str=None, pipeline_spec: Dict[str, object]=None, reserved_ip_ranges: List[str]=None, runtime_config: GoogleCloudAiplatformV1PipelineJobRuntimeConfig=None, schedule_name: str=None, service_account: str=None, start_time: str=None, state: str=None, template_metadata: GoogleCloudAiplatformV1PipelineTemplateMetadata=None, template_uri: str=None, update_time: str=None):
        """GoogleCloudAiplatformV1PipelineJob - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1PipelineJob.
        :param display_name: The display_name of this GoogleCloudAiplatformV1PipelineJob.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1PipelineJob.
        :param end_time: The end_time of this GoogleCloudAiplatformV1PipelineJob.
        :param error: The error of this GoogleCloudAiplatformV1PipelineJob.
        :param job_detail: The job_detail of this GoogleCloudAiplatformV1PipelineJob.
        :param labels: The labels of this GoogleCloudAiplatformV1PipelineJob.
        :param name: The name of this GoogleCloudAiplatformV1PipelineJob.
        :param network: The network of this GoogleCloudAiplatformV1PipelineJob.
        :param pipeline_spec: The pipeline_spec of this GoogleCloudAiplatformV1PipelineJob.
        :param reserved_ip_ranges: The reserved_ip_ranges of this GoogleCloudAiplatformV1PipelineJob.
        :param runtime_config: The runtime_config of this GoogleCloudAiplatformV1PipelineJob.
        :param schedule_name: The schedule_name of this GoogleCloudAiplatformV1PipelineJob.
        :param service_account: The service_account of this GoogleCloudAiplatformV1PipelineJob.
        :param start_time: The start_time of this GoogleCloudAiplatformV1PipelineJob.
        :param state: The state of this GoogleCloudAiplatformV1PipelineJob.
        :param template_metadata: The template_metadata of this GoogleCloudAiplatformV1PipelineJob.
        :param template_uri: The template_uri of this GoogleCloudAiplatformV1PipelineJob.
        :param update_time: The update_time of this GoogleCloudAiplatformV1PipelineJob.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'encryption_spec': GoogleCloudAiplatformV1EncryptionSpec,
            'end_time': str,
            'error': GoogleRpcStatus,
            'job_detail': GoogleCloudAiplatformV1PipelineJobDetail,
            'labels': Dict[str, str],
            'name': str,
            'network': str,
            'pipeline_spec': Dict[str, object],
            'reserved_ip_ranges': List[str],
            'runtime_config': GoogleCloudAiplatformV1PipelineJobRuntimeConfig,
            'schedule_name': str,
            'service_account': str,
            'start_time': str,
            'state': str,
            'template_metadata': GoogleCloudAiplatformV1PipelineTemplateMetadata,
            'template_uri': str,
            'update_time': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'encryption_spec': 'encryptionSpec',
            'end_time': 'endTime',
            'error': 'error',
            'job_detail': 'jobDetail',
            'labels': 'labels',
            'name': 'name',
            'network': 'network',
            'pipeline_spec': 'pipelineSpec',
            'reserved_ip_ranges': 'reservedIpRanges',
            'runtime_config': 'runtimeConfig',
            'schedule_name': 'scheduleName',
            'service_account': 'serviceAccount',
            'start_time': 'startTime',
            'state': 'state',
            'template_metadata': 'templateMetadata',
            'template_uri': 'templateUri',
            'update_time': 'updateTime'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._encryption_spec = encryption_spec
        self._end_time = end_time
        self._error = error
        self._job_detail = job_detail
        self._labels = labels
        self._name = name
        self._network = network
        self._pipeline_spec = pipeline_spec
        self._reserved_ip_ranges = reserved_ip_ranges
        self._runtime_config = runtime_config
        self._schedule_name = schedule_name
        self._service_account = service_account
        self._start_time = start_time
        self._state = state
        self._template_metadata = template_metadata
        self._template_uri = template_uri
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1PipelineJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1PipelineJob of this GoogleCloudAiplatformV1PipelineJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1PipelineJob.

        Output only. Pipeline creation time.

        :return: The create_time of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1PipelineJob.

        Output only. Pipeline creation time.

        :param create_time: The create_time of this GoogleCloudAiplatformV1PipelineJob.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1PipelineJob.

        The display name of the Pipeline. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :return: The display_name of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1PipelineJob.

        The display name of the Pipeline. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :param display_name: The display_name of this GoogleCloudAiplatformV1PipelineJob.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1PipelineJob.


        :return: The encryption_spec of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: GoogleCloudAiplatformV1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1PipelineJob.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1PipelineJob.
        :type encryption_spec: GoogleCloudAiplatformV1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudAiplatformV1PipelineJob.

        Output only. Pipeline end time.

        :return: The end_time of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudAiplatformV1PipelineJob.

        Output only. Pipeline end time.

        :param end_time: The end_time of this GoogleCloudAiplatformV1PipelineJob.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def error(self):
        """Gets the error of this GoogleCloudAiplatformV1PipelineJob.


        :return: The error of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: GoogleRpcStatus
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GoogleCloudAiplatformV1PipelineJob.


        :param error: The error of this GoogleCloudAiplatformV1PipelineJob.
        :type error: GoogleRpcStatus
        """

        self._error = error

    @property
    def job_detail(self):
        """Gets the job_detail of this GoogleCloudAiplatformV1PipelineJob.


        :return: The job_detail of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: GoogleCloudAiplatformV1PipelineJobDetail
        """
        return self._job_detail

    @job_detail.setter
    def job_detail(self, job_detail):
        """Sets the job_detail of this GoogleCloudAiplatformV1PipelineJob.


        :param job_detail: The job_detail of this GoogleCloudAiplatformV1PipelineJob.
        :type job_detail: GoogleCloudAiplatformV1PipelineJobDetail
        """

        self._job_detail = job_detail

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1PipelineJob.

        The labels with user-defined metadata to organize PipelineJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. Note there is some reserved label key for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set value will get overrided.

        :return: The labels of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1PipelineJob.

        The labels with user-defined metadata to organize PipelineJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. Note there is some reserved label key for Vertex AI Pipelines. - `vertex-ai-pipelines-run-billing-id`, user set value will get overrided.

        :param labels: The labels of this GoogleCloudAiplatformV1PipelineJob.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1PipelineJob.

        Output only. The resource name of the PipelineJob.

        :return: The name of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1PipelineJob.

        Output only. The resource name of the PipelineJob.

        :param name: The name of this GoogleCloudAiplatformV1PipelineJob.
        :type name: str
        """

        self._name = name

    @property
    def network(self):
        """Gets the network of this GoogleCloudAiplatformV1PipelineJob.

        The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Pipeline Job's workload should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. Pipeline job will apply the network configuration to the Google Cloud resources being launched, if applied, such as Vertex AI Training or Dataflow job. If left unspecified, the workload is not peered with any network.

        :return: The network of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GoogleCloudAiplatformV1PipelineJob.

        The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Pipeline Job's workload should be peered. For example, `projects/12345/global/networks/myVPC`. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form `projects/{project}/global/networks/{network}`. Where {project} is a project number, as in `12345`, and {network} is a network name. Private services access must already be configured for the network. Pipeline job will apply the network configuration to the Google Cloud resources being launched, if applied, such as Vertex AI Training or Dataflow job. If left unspecified, the workload is not peered with any network.

        :param network: The network of this GoogleCloudAiplatformV1PipelineJob.
        :type network: str
        """

        self._network = network

    @property
    def pipeline_spec(self):
        """Gets the pipeline_spec of this GoogleCloudAiplatformV1PipelineJob.

        The spec of the pipeline.

        :return: The pipeline_spec of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: Dict[str, object]
        """
        return self._pipeline_spec

    @pipeline_spec.setter
    def pipeline_spec(self, pipeline_spec):
        """Sets the pipeline_spec of this GoogleCloudAiplatformV1PipelineJob.

        The spec of the pipeline.

        :param pipeline_spec: The pipeline_spec of this GoogleCloudAiplatformV1PipelineJob.
        :type pipeline_spec: Dict[str, object]
        """

        self._pipeline_spec = pipeline_spec

    @property
    def reserved_ip_ranges(self):
        """Gets the reserved_ip_ranges of this GoogleCloudAiplatformV1PipelineJob.

        A list of names for the reserved ip ranges under the VPC network that can be used for this Pipeline Job's workload. If set, we will deploy the Pipeline Job's workload within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].

        :return: The reserved_ip_ranges of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: List[str]
        """
        return self._reserved_ip_ranges

    @reserved_ip_ranges.setter
    def reserved_ip_ranges(self, reserved_ip_ranges):
        """Sets the reserved_ip_ranges of this GoogleCloudAiplatformV1PipelineJob.

        A list of names for the reserved ip ranges under the VPC network that can be used for this Pipeline Job's workload. If set, we will deploy the Pipeline Job's workload within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: ['vertex-ai-ip-range'].

        :param reserved_ip_ranges: The reserved_ip_ranges of this GoogleCloudAiplatformV1PipelineJob.
        :type reserved_ip_ranges: List[str]
        """

        self._reserved_ip_ranges = reserved_ip_ranges

    @property
    def runtime_config(self):
        """Gets the runtime_config of this GoogleCloudAiplatformV1PipelineJob.


        :return: The runtime_config of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: GoogleCloudAiplatformV1PipelineJobRuntimeConfig
        """
        return self._runtime_config

    @runtime_config.setter
    def runtime_config(self, runtime_config):
        """Sets the runtime_config of this GoogleCloudAiplatformV1PipelineJob.


        :param runtime_config: The runtime_config of this GoogleCloudAiplatformV1PipelineJob.
        :type runtime_config: GoogleCloudAiplatformV1PipelineJobRuntimeConfig
        """

        self._runtime_config = runtime_config

    @property
    def schedule_name(self):
        """Gets the schedule_name of this GoogleCloudAiplatformV1PipelineJob.

        Output only. The schedule resource name. Only returned if the Pipeline is created by Schedule API.

        :return: The schedule_name of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._schedule_name

    @schedule_name.setter
    def schedule_name(self, schedule_name):
        """Sets the schedule_name of this GoogleCloudAiplatformV1PipelineJob.

        Output only. The schedule resource name. Only returned if the Pipeline is created by Schedule API.

        :param schedule_name: The schedule_name of this GoogleCloudAiplatformV1PipelineJob.
        :type schedule_name: str
        """

        self._schedule_name = schedule_name

    @property
    def service_account(self):
        """Gets the service_account of this GoogleCloudAiplatformV1PipelineJob.

        The service account that the pipeline workload runs as. If not specified, the Compute Engine default service account in the project will be used. See https://cloud.google.com/compute/docs/access/service-accounts#default_service_account Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account.

        :return: The service_account of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._service_account

    @service_account.setter
    def service_account(self, service_account):
        """Sets the service_account of this GoogleCloudAiplatformV1PipelineJob.

        The service account that the pipeline workload runs as. If not specified, the Compute Engine default service account in the project will be used. See https://cloud.google.com/compute/docs/access/service-accounts#default_service_account Users starting the pipeline must have the `iam.serviceAccounts.actAs` permission on this service account.

        :param service_account: The service_account of this GoogleCloudAiplatformV1PipelineJob.
        :type service_account: str
        """

        self._service_account = service_account

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudAiplatformV1PipelineJob.

        Output only. Pipeline start time.

        :return: The start_time of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudAiplatformV1PipelineJob.

        Output only. Pipeline start time.

        :param start_time: The start_time of this GoogleCloudAiplatformV1PipelineJob.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1PipelineJob.

        Output only. The detailed state of the job.

        :return: The state of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1PipelineJob.

        Output only. The detailed state of the job.

        :param state: The state of this GoogleCloudAiplatformV1PipelineJob.
        :type state: str
        """
        allowed_values = ["PIPELINE_STATE_UNSPECIFIED", "PIPELINE_STATE_QUEUED", "PIPELINE_STATE_PENDING", "PIPELINE_STATE_RUNNING", "PIPELINE_STATE_SUCCEEDED", "PIPELINE_STATE_FAILED", "PIPELINE_STATE_CANCELLING", "PIPELINE_STATE_CANCELLED", "PIPELINE_STATE_PAUSED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def template_metadata(self):
        """Gets the template_metadata of this GoogleCloudAiplatformV1PipelineJob.


        :return: The template_metadata of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: GoogleCloudAiplatformV1PipelineTemplateMetadata
        """
        return self._template_metadata

    @template_metadata.setter
    def template_metadata(self, template_metadata):
        """Sets the template_metadata of this GoogleCloudAiplatformV1PipelineJob.


        :param template_metadata: The template_metadata of this GoogleCloudAiplatformV1PipelineJob.
        :type template_metadata: GoogleCloudAiplatformV1PipelineTemplateMetadata
        """

        self._template_metadata = template_metadata

    @property
    def template_uri(self):
        """Gets the template_uri of this GoogleCloudAiplatformV1PipelineJob.

        A template uri from where the PipelineJob.pipeline_spec, if empty, will be downloaded. Currently, only uri from Vertex Template Registry & Gallery is supported. Reference to https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template.

        :return: The template_uri of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._template_uri

    @template_uri.setter
    def template_uri(self, template_uri):
        """Sets the template_uri of this GoogleCloudAiplatformV1PipelineJob.

        A template uri from where the PipelineJob.pipeline_spec, if empty, will be downloaded. Currently, only uri from Vertex Template Registry & Gallery is supported. Reference to https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template.

        :param template_uri: The template_uri of this GoogleCloudAiplatformV1PipelineJob.
        :type template_uri: str
        """

        self._template_uri = template_uri

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1PipelineJob.

        Output only. Timestamp when this PipelineJob was most recently updated.

        :return: The update_time of this GoogleCloudAiplatformV1PipelineJob.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1PipelineJob.

        Output only. Timestamp when this PipelineJob was most recently updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1PipelineJob.
        :type update_time: str
        """

        self._update_time = update_time
