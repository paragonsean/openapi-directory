# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1ModelExportFormat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exportable_contents: List[str]=None, id: str=None):
        """GoogleCloudAiplatformV1ModelExportFormat - a model defined in OpenAPI

        :param exportable_contents: The exportable_contents of this GoogleCloudAiplatformV1ModelExportFormat.
        :param id: The id of this GoogleCloudAiplatformV1ModelExportFormat.
        """
        self.openapi_types = {
            'exportable_contents': List[str],
            'id': str
        }

        self.attribute_map = {
            'exportable_contents': 'exportableContents',
            'id': 'id'
        }

        self._exportable_contents = exportable_contents
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1ModelExportFormat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1ModelExportFormat of this GoogleCloudAiplatformV1ModelExportFormat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exportable_contents(self):
        """Gets the exportable_contents of this GoogleCloudAiplatformV1ModelExportFormat.

        Output only. The content of this Model that may be exported.

        :return: The exportable_contents of this GoogleCloudAiplatformV1ModelExportFormat.
        :rtype: List[str]
        """
        return self._exportable_contents

    @exportable_contents.setter
    def exportable_contents(self, exportable_contents):
        """Sets the exportable_contents of this GoogleCloudAiplatformV1ModelExportFormat.

        Output only. The content of this Model that may be exported.

        :param exportable_contents: The exportable_contents of this GoogleCloudAiplatformV1ModelExportFormat.
        :type exportable_contents: List[str]
        """
        allowed_values = ["EXPORTABLE_CONTENT_UNSPECIFIED", "ARTIFACT", "IMAGE"]  # noqa: E501
        if not set(exportable_contents).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `exportable_contents` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(exportable_contents) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._exportable_contents = exportable_contents

    @property
    def id(self):
        """Gets the id of this GoogleCloudAiplatformV1ModelExportFormat.

        Output only. The ID of the export format. The possible format IDs are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js` A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was uploaded or trained by custom code.

        :return: The id of this GoogleCloudAiplatformV1ModelExportFormat.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudAiplatformV1ModelExportFormat.

        Output only. The ID of the export format. The possible format IDs are: * `tflite` Used for Android mobile devices. * `edgetpu-tflite` Used for [Edge TPU](https://cloud.google.com/edge-tpu/) devices. * `tf-saved-model` A tensorflow model in SavedModel format. * `tf-js` A [TensorFlow.js](https://www.tensorflow.org/js) model that can be used in the browser and in Node.js using JavaScript. * `core-ml` Used for iOS mobile devices. * `custom-trained` A Model that was uploaded or trained by custom code.

        :param id: The id of this GoogleCloudAiplatformV1ModelExportFormat.
        :type id: str
        """

        self._id = id
