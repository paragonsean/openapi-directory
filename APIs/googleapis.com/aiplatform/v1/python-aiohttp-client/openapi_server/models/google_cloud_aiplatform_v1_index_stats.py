# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1IndexStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shards_count: int=None, vectors_count: str=None):
        """GoogleCloudAiplatformV1IndexStats - a model defined in OpenAPI

        :param shards_count: The shards_count of this GoogleCloudAiplatformV1IndexStats.
        :param vectors_count: The vectors_count of this GoogleCloudAiplatformV1IndexStats.
        """
        self.openapi_types = {
            'shards_count': int,
            'vectors_count': str
        }

        self.attribute_map = {
            'shards_count': 'shardsCount',
            'vectors_count': 'vectorsCount'
        }

        self._shards_count = shards_count
        self._vectors_count = vectors_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1IndexStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1IndexStats of this GoogleCloudAiplatformV1IndexStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shards_count(self):
        """Gets the shards_count of this GoogleCloudAiplatformV1IndexStats.

        Output only. The number of shards in the Index.

        :return: The shards_count of this GoogleCloudAiplatformV1IndexStats.
        :rtype: int
        """
        return self._shards_count

    @shards_count.setter
    def shards_count(self, shards_count):
        """Sets the shards_count of this GoogleCloudAiplatformV1IndexStats.

        Output only. The number of shards in the Index.

        :param shards_count: The shards_count of this GoogleCloudAiplatformV1IndexStats.
        :type shards_count: int
        """

        self._shards_count = shards_count

    @property
    def vectors_count(self):
        """Gets the vectors_count of this GoogleCloudAiplatformV1IndexStats.

        Output only. The number of vectors in the Index.

        :return: The vectors_count of this GoogleCloudAiplatformV1IndexStats.
        :rtype: str
        """
        return self._vectors_count

    @vectors_count.setter
    def vectors_count(self, vectors_count):
        """Sets the vectors_count of this GoogleCloudAiplatformV1IndexStats.

        Output only. The number of vectors in the Index.

        :param vectors_count: The vectors_count of this GoogleCloudAiplatformV1IndexStats.
        :type vectors_count: str
        """

        self._vectors_count = vectors_count
