# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_notebook_runtime import GoogleCloudAiplatformV1NotebookRuntime
from openapi_server import util


class GoogleCloudAiplatformV1AssignNotebookRuntimeRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notebook_runtime: GoogleCloudAiplatformV1NotebookRuntime=None, notebook_runtime_id: str=None, notebook_runtime_template: str=None):
        """GoogleCloudAiplatformV1AssignNotebookRuntimeRequest - a model defined in OpenAPI

        :param notebook_runtime: The notebook_runtime of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        :param notebook_runtime_id: The notebook_runtime_id of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        :param notebook_runtime_template: The notebook_runtime_template of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        """
        self.openapi_types = {
            'notebook_runtime': GoogleCloudAiplatformV1NotebookRuntime,
            'notebook_runtime_id': str,
            'notebook_runtime_template': str
        }

        self.attribute_map = {
            'notebook_runtime': 'notebookRuntime',
            'notebook_runtime_id': 'notebookRuntimeId',
            'notebook_runtime_template': 'notebookRuntimeTemplate'
        }

        self._notebook_runtime = notebook_runtime
        self._notebook_runtime_id = notebook_runtime_id
        self._notebook_runtime_template = notebook_runtime_template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1AssignNotebookRuntimeRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1AssignNotebookRuntimeRequest of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notebook_runtime(self):
        """Gets the notebook_runtime of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.


        :return: The notebook_runtime of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        :rtype: GoogleCloudAiplatformV1NotebookRuntime
        """
        return self._notebook_runtime

    @notebook_runtime.setter
    def notebook_runtime(self, notebook_runtime):
        """Sets the notebook_runtime of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.


        :param notebook_runtime: The notebook_runtime of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        :type notebook_runtime: GoogleCloudAiplatformV1NotebookRuntime
        """

        self._notebook_runtime = notebook_runtime

    @property
    def notebook_runtime_id(self):
        """Gets the notebook_runtime_id of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.

        Optional. User specified ID for the notebook runtime.

        :return: The notebook_runtime_id of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        :rtype: str
        """
        return self._notebook_runtime_id

    @notebook_runtime_id.setter
    def notebook_runtime_id(self, notebook_runtime_id):
        """Sets the notebook_runtime_id of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.

        Optional. User specified ID for the notebook runtime.

        :param notebook_runtime_id: The notebook_runtime_id of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        :type notebook_runtime_id: str
        """

        self._notebook_runtime_id = notebook_runtime_id

    @property
    def notebook_runtime_template(self):
        """Gets the notebook_runtime_template of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.

        Required. The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be assigned (reuse or create a new one).

        :return: The notebook_runtime_template of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        :rtype: str
        """
        return self._notebook_runtime_template

    @notebook_runtime_template.setter
    def notebook_runtime_template(self, notebook_runtime_template):
        """Sets the notebook_runtime_template of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.

        Required. The resource name of the NotebookRuntimeTemplate based on which a NotebookRuntime will be assigned (reuse or create a new one).

        :param notebook_runtime_template: The notebook_runtime_template of this GoogleCloudAiplatformV1AssignNotebookRuntimeRequest.
        :type notebook_runtime_template: str
        """

        self._notebook_runtime_template = notebook_runtime_template
