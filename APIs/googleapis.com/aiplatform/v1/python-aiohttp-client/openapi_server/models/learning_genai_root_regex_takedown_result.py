# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LearningGenaiRootRegexTakedownResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed: bool=None, takedown_regex: str=None):
        """LearningGenaiRootRegexTakedownResult - a model defined in OpenAPI

        :param allowed: The allowed of this LearningGenaiRootRegexTakedownResult.
        :param takedown_regex: The takedown_regex of this LearningGenaiRootRegexTakedownResult.
        """
        self.openapi_types = {
            'allowed': bool,
            'takedown_regex': str
        }

        self.attribute_map = {
            'allowed': 'allowed',
            'takedown_regex': 'takedownRegex'
        }

        self._allowed = allowed
        self._takedown_regex = takedown_regex

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootRegexTakedownResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootRegexTakedownResult of this LearningGenaiRootRegexTakedownResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed(self):
        """Gets the allowed of this LearningGenaiRootRegexTakedownResult.

        False when query or response should be taken down due to match with a blocked regex, true otherwise.

        :return: The allowed of this LearningGenaiRootRegexTakedownResult.
        :rtype: bool
        """
        return self._allowed

    @allowed.setter
    def allowed(self, allowed):
        """Sets the allowed of this LearningGenaiRootRegexTakedownResult.

        False when query or response should be taken down due to match with a blocked regex, true otherwise.

        :param allowed: The allowed of this LearningGenaiRootRegexTakedownResult.
        :type allowed: bool
        """

        self._allowed = allowed

    @property
    def takedown_regex(self):
        """Gets the takedown_regex of this LearningGenaiRootRegexTakedownResult.

        Regex used to decide that query or response should be taken down. Empty when query or response is kept.

        :return: The takedown_regex of this LearningGenaiRootRegexTakedownResult.
        :rtype: str
        """
        return self._takedown_regex

    @takedown_regex.setter
    def takedown_regex(self, takedown_regex):
        """Sets the takedown_regex of this LearningGenaiRootRegexTakedownResult.

        Regex used to decide that query or response should be taken down. Empty when query or response is kept.

        :param takedown_regex: The takedown_regex of this LearningGenaiRootRegexTakedownResult.
        :type takedown_regex: str
        """

        self._takedown_regex = takedown_regex
