# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mean_absolute_error: float=None, mean_absolute_percentage_error: float=None, r_squared: float=None, root_mean_squared_error: float=None, root_mean_squared_log_error: float=None):
        """GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics - a model defined in OpenAPI

        :param mean_absolute_error: The mean_absolute_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :param mean_absolute_percentage_error: The mean_absolute_percentage_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :param r_squared: The r_squared of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :param root_mean_squared_error: The root_mean_squared_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :param root_mean_squared_log_error: The root_mean_squared_log_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        """
        self.openapi_types = {
            'mean_absolute_error': float,
            'mean_absolute_percentage_error': float,
            'r_squared': float,
            'root_mean_squared_error': float,
            'root_mean_squared_log_error': float
        }

        self.attribute_map = {
            'mean_absolute_error': 'meanAbsoluteError',
            'mean_absolute_percentage_error': 'meanAbsolutePercentageError',
            'r_squared': 'rSquared',
            'root_mean_squared_error': 'rootMeanSquaredError',
            'root_mean_squared_log_error': 'rootMeanSquaredLogError'
        }

        self._mean_absolute_error = mean_absolute_error
        self._mean_absolute_percentage_error = mean_absolute_percentage_error
        self._r_squared = r_squared
        self._root_mean_squared_error = root_mean_squared_error
        self._root_mean_squared_log_error = root_mean_squared_log_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mean_absolute_error(self):
        """Gets the mean_absolute_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Mean Absolute Error (MAE).

        :return: The mean_absolute_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :rtype: float
        """
        return self._mean_absolute_error

    @mean_absolute_error.setter
    def mean_absolute_error(self, mean_absolute_error):
        """Sets the mean_absolute_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Mean Absolute Error (MAE).

        :param mean_absolute_error: The mean_absolute_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :type mean_absolute_error: float
        """

        self._mean_absolute_error = mean_absolute_error

    @property
    def mean_absolute_percentage_error(self):
        """Gets the mean_absolute_percentage_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Mean absolute percentage error. Infinity when there are zeros in the ground truth.

        :return: The mean_absolute_percentage_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :rtype: float
        """
        return self._mean_absolute_percentage_error

    @mean_absolute_percentage_error.setter
    def mean_absolute_percentage_error(self, mean_absolute_percentage_error):
        """Sets the mean_absolute_percentage_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Mean absolute percentage error. Infinity when there are zeros in the ground truth.

        :param mean_absolute_percentage_error: The mean_absolute_percentage_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :type mean_absolute_percentage_error: float
        """

        self._mean_absolute_percentage_error = mean_absolute_percentage_error

    @property
    def r_squared(self):
        """Gets the r_squared of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.

        :return: The r_squared of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :rtype: float
        """
        return self._r_squared

    @r_squared.setter
    def r_squared(self, r_squared):
        """Sets the r_squared of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.

        :param r_squared: The r_squared of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :type r_squared: float
        """

        self._r_squared = r_squared

    @property
    def root_mean_squared_error(self):
        """Gets the root_mean_squared_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Root Mean Squared Error (RMSE).

        :return: The root_mean_squared_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :rtype: float
        """
        return self._root_mean_squared_error

    @root_mean_squared_error.setter
    def root_mean_squared_error(self, root_mean_squared_error):
        """Sets the root_mean_squared_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Root Mean Squared Error (RMSE).

        :param root_mean_squared_error: The root_mean_squared_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :type root_mean_squared_error: float
        """

        self._root_mean_squared_error = root_mean_squared_error

    @property
    def root_mean_squared_log_error(self):
        """Gets the root_mean_squared_log_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Root mean squared log error. Undefined when there are negative ground truth values or predictions.

        :return: The root_mean_squared_log_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :rtype: float
        """
        return self._root_mean_squared_log_error

    @root_mean_squared_log_error.setter
    def root_mean_squared_log_error(self, root_mean_squared_log_error):
        """Sets the root_mean_squared_log_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.

        Root mean squared log error. Undefined when there are negative ground truth values or predictions.

        :param root_mean_squared_log_error: The root_mean_squared_log_error of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsRegressionEvaluationMetrics.
        :type root_mean_squared_log_error: float
        """

        self._root_mean_squared_log_error = root_mean_squared_log_error
