# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.learning_genai_root_score import LearningGenaiRootScore
from openapi_server import util


class LearningGenaiRootScoreBasedRoutingConfigRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, equal_or_greater_than: LearningGenaiRootScore=None, less_than: LearningGenaiRootScore=None, model_config_id: str=None):
        """LearningGenaiRootScoreBasedRoutingConfigRule - a model defined in OpenAPI

        :param equal_or_greater_than: The equal_or_greater_than of this LearningGenaiRootScoreBasedRoutingConfigRule.
        :param less_than: The less_than of this LearningGenaiRootScoreBasedRoutingConfigRule.
        :param model_config_id: The model_config_id of this LearningGenaiRootScoreBasedRoutingConfigRule.
        """
        self.openapi_types = {
            'equal_or_greater_than': LearningGenaiRootScore,
            'less_than': LearningGenaiRootScore,
            'model_config_id': str
        }

        self.attribute_map = {
            'equal_or_greater_than': 'equalOrGreaterThan',
            'less_than': 'lessThan',
            'model_config_id': 'modelConfigId'
        }

        self._equal_or_greater_than = equal_or_greater_than
        self._less_than = less_than
        self._model_config_id = model_config_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootScoreBasedRoutingConfigRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootScoreBasedRoutingConfigRule of this LearningGenaiRootScoreBasedRoutingConfigRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def equal_or_greater_than(self):
        """Gets the equal_or_greater_than of this LearningGenaiRootScoreBasedRoutingConfigRule.


        :return: The equal_or_greater_than of this LearningGenaiRootScoreBasedRoutingConfigRule.
        :rtype: LearningGenaiRootScore
        """
        return self._equal_or_greater_than

    @equal_or_greater_than.setter
    def equal_or_greater_than(self, equal_or_greater_than):
        """Sets the equal_or_greater_than of this LearningGenaiRootScoreBasedRoutingConfigRule.


        :param equal_or_greater_than: The equal_or_greater_than of this LearningGenaiRootScoreBasedRoutingConfigRule.
        :type equal_or_greater_than: LearningGenaiRootScore
        """

        self._equal_or_greater_than = equal_or_greater_than

    @property
    def less_than(self):
        """Gets the less_than of this LearningGenaiRootScoreBasedRoutingConfigRule.


        :return: The less_than of this LearningGenaiRootScoreBasedRoutingConfigRule.
        :rtype: LearningGenaiRootScore
        """
        return self._less_than

    @less_than.setter
    def less_than(self, less_than):
        """Sets the less_than of this LearningGenaiRootScoreBasedRoutingConfigRule.


        :param less_than: The less_than of this LearningGenaiRootScoreBasedRoutingConfigRule.
        :type less_than: LearningGenaiRootScore
        """

        self._less_than = less_than

    @property
    def model_config_id(self):
        """Gets the model_config_id of this LearningGenaiRootScoreBasedRoutingConfigRule.

        This model_config_id points to ModelConfig::id which allows us to find the ModelConfig to route to. This is part of the banks specified in the ModelBankConfig.

        :return: The model_config_id of this LearningGenaiRootScoreBasedRoutingConfigRule.
        :rtype: str
        """
        return self._model_config_id

    @model_config_id.setter
    def model_config_id(self, model_config_id):
        """Sets the model_config_id of this LearningGenaiRootScoreBasedRoutingConfigRule.

        This model_config_id points to ModelConfig::id which allows us to find the ModelConfig to route to. This is part of the banks specified in the ModelBankConfig.

        :param model_config_id: The model_config_id of this LearningGenaiRootScoreBasedRoutingConfigRule.
        :type model_config_id: str
        """

        self._model_config_id = model_config_id
