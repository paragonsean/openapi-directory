# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1IndexDatapointRestriction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_list: List[str]=None, deny_list: List[str]=None, namespace: str=None):
        """GoogleCloudAiplatformV1IndexDatapointRestriction - a model defined in OpenAPI

        :param allow_list: The allow_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        :param deny_list: The deny_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        :param namespace: The namespace of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        """
        self.openapi_types = {
            'allow_list': List[str],
            'deny_list': List[str],
            'namespace': str
        }

        self.attribute_map = {
            'allow_list': 'allowList',
            'deny_list': 'denyList',
            'namespace': 'namespace'
        }

        self._allow_list = allow_list
        self._deny_list = deny_list
        self._namespace = namespace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1IndexDatapointRestriction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1IndexDatapointRestriction of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_list(self):
        """Gets the allow_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.

        The attributes to allow in this namespace. e.g.: 'red'

        :return: The allow_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        :rtype: List[str]
        """
        return self._allow_list

    @allow_list.setter
    def allow_list(self, allow_list):
        """Sets the allow_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.

        The attributes to allow in this namespace. e.g.: 'red'

        :param allow_list: The allow_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        :type allow_list: List[str]
        """

        self._allow_list = allow_list

    @property
    def deny_list(self):
        """Gets the deny_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.

        The attributes to deny in this namespace. e.g.: 'blue'

        :return: The deny_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        :rtype: List[str]
        """
        return self._deny_list

    @deny_list.setter
    def deny_list(self, deny_list):
        """Sets the deny_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.

        The attributes to deny in this namespace. e.g.: 'blue'

        :param deny_list: The deny_list of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        :type deny_list: List[str]
        """

        self._deny_list = deny_list

    @property
    def namespace(self):
        """Gets the namespace of this GoogleCloudAiplatformV1IndexDatapointRestriction.

        The namespace of this restriction. e.g.: color.

        :return: The namespace of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this GoogleCloudAiplatformV1IndexDatapointRestriction.

        The namespace of this restriction. e.g.: color.

        :param namespace: The namespace of this GoogleCloudAiplatformV1IndexDatapointRestriction.
        :type namespace: str
        """

        self._namespace = namespace
