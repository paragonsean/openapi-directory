# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_convex_automated_stopping_spec import GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_decay_curve_automated_stopping_spec import GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_median_automated_stopping_spec import GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_metric_spec import GoogleCloudAiplatformV1StudySpecMetricSpec
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_parameter_spec import GoogleCloudAiplatformV1StudySpecParameterSpec
from openapi_server.models.google_cloud_aiplatform_v1_study_spec_study_stopping_config import GoogleCloudAiplatformV1StudySpecStudyStoppingConfig
from openapi_server import util


class GoogleCloudAiplatformV1StudySpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, algorithm: str=None, convex_automated_stopping_spec: GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec=None, decay_curve_stopping_spec: GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec=None, measurement_selection_type: str=None, median_automated_stopping_spec: GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec=None, metrics: List[GoogleCloudAiplatformV1StudySpecMetricSpec]=None, observation_noise: str=None, parameters: List[GoogleCloudAiplatformV1StudySpecParameterSpec]=None, study_stopping_config: GoogleCloudAiplatformV1StudySpecStudyStoppingConfig=None):
        """GoogleCloudAiplatformV1StudySpec - a model defined in OpenAPI

        :param algorithm: The algorithm of this GoogleCloudAiplatformV1StudySpec.
        :param convex_automated_stopping_spec: The convex_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.
        :param decay_curve_stopping_spec: The decay_curve_stopping_spec of this GoogleCloudAiplatformV1StudySpec.
        :param measurement_selection_type: The measurement_selection_type of this GoogleCloudAiplatformV1StudySpec.
        :param median_automated_stopping_spec: The median_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.
        :param metrics: The metrics of this GoogleCloudAiplatformV1StudySpec.
        :param observation_noise: The observation_noise of this GoogleCloudAiplatformV1StudySpec.
        :param parameters: The parameters of this GoogleCloudAiplatformV1StudySpec.
        :param study_stopping_config: The study_stopping_config of this GoogleCloudAiplatformV1StudySpec.
        """
        self.openapi_types = {
            'algorithm': str,
            'convex_automated_stopping_spec': GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec,
            'decay_curve_stopping_spec': GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec,
            'measurement_selection_type': str,
            'median_automated_stopping_spec': GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec,
            'metrics': List[GoogleCloudAiplatformV1StudySpecMetricSpec],
            'observation_noise': str,
            'parameters': List[GoogleCloudAiplatformV1StudySpecParameterSpec],
            'study_stopping_config': GoogleCloudAiplatformV1StudySpecStudyStoppingConfig
        }

        self.attribute_map = {
            'algorithm': 'algorithm',
            'convex_automated_stopping_spec': 'convexAutomatedStoppingSpec',
            'decay_curve_stopping_spec': 'decayCurveStoppingSpec',
            'measurement_selection_type': 'measurementSelectionType',
            'median_automated_stopping_spec': 'medianAutomatedStoppingSpec',
            'metrics': 'metrics',
            'observation_noise': 'observationNoise',
            'parameters': 'parameters',
            'study_stopping_config': 'studyStoppingConfig'
        }

        self._algorithm = algorithm
        self._convex_automated_stopping_spec = convex_automated_stopping_spec
        self._decay_curve_stopping_spec = decay_curve_stopping_spec
        self._measurement_selection_type = measurement_selection_type
        self._median_automated_stopping_spec = median_automated_stopping_spec
        self._metrics = metrics
        self._observation_noise = observation_noise
        self._parameters = parameters
        self._study_stopping_config = study_stopping_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1StudySpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1StudySpec of this GoogleCloudAiplatformV1StudySpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def algorithm(self):
        """Gets the algorithm of this GoogleCloudAiplatformV1StudySpec.

        The search algorithm specified for the Study.

        :return: The algorithm of this GoogleCloudAiplatformV1StudySpec.
        :rtype: str
        """
        return self._algorithm

    @algorithm.setter
    def algorithm(self, algorithm):
        """Sets the algorithm of this GoogleCloudAiplatformV1StudySpec.

        The search algorithm specified for the Study.

        :param algorithm: The algorithm of this GoogleCloudAiplatformV1StudySpec.
        :type algorithm: str
        """
        allowed_values = ["ALGORITHM_UNSPECIFIED", "GRID_SEARCH", "RANDOM_SEARCH"]  # noqa: E501
        if algorithm not in allowed_values:
            raise ValueError(
                "Invalid value for `algorithm` ({0}), must be one of {1}"
                .format(algorithm, allowed_values)
            )

        self._algorithm = algorithm

    @property
    def convex_automated_stopping_spec(self):
        """Gets the convex_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.


        :return: The convex_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.
        :rtype: GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec
        """
        return self._convex_automated_stopping_spec

    @convex_automated_stopping_spec.setter
    def convex_automated_stopping_spec(self, convex_automated_stopping_spec):
        """Sets the convex_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.


        :param convex_automated_stopping_spec: The convex_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.
        :type convex_automated_stopping_spec: GoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec
        """

        self._convex_automated_stopping_spec = convex_automated_stopping_spec

    @property
    def decay_curve_stopping_spec(self):
        """Gets the decay_curve_stopping_spec of this GoogleCloudAiplatformV1StudySpec.


        :return: The decay_curve_stopping_spec of this GoogleCloudAiplatformV1StudySpec.
        :rtype: GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec
        """
        return self._decay_curve_stopping_spec

    @decay_curve_stopping_spec.setter
    def decay_curve_stopping_spec(self, decay_curve_stopping_spec):
        """Sets the decay_curve_stopping_spec of this GoogleCloudAiplatformV1StudySpec.


        :param decay_curve_stopping_spec: The decay_curve_stopping_spec of this GoogleCloudAiplatformV1StudySpec.
        :type decay_curve_stopping_spec: GoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec
        """

        self._decay_curve_stopping_spec = decay_curve_stopping_spec

    @property
    def measurement_selection_type(self):
        """Gets the measurement_selection_type of this GoogleCloudAiplatformV1StudySpec.

        Describe which measurement selection type will be used

        :return: The measurement_selection_type of this GoogleCloudAiplatformV1StudySpec.
        :rtype: str
        """
        return self._measurement_selection_type

    @measurement_selection_type.setter
    def measurement_selection_type(self, measurement_selection_type):
        """Sets the measurement_selection_type of this GoogleCloudAiplatformV1StudySpec.

        Describe which measurement selection type will be used

        :param measurement_selection_type: The measurement_selection_type of this GoogleCloudAiplatformV1StudySpec.
        :type measurement_selection_type: str
        """
        allowed_values = ["MEASUREMENT_SELECTION_TYPE_UNSPECIFIED", "LAST_MEASUREMENT", "BEST_MEASUREMENT"]  # noqa: E501
        if measurement_selection_type not in allowed_values:
            raise ValueError(
                "Invalid value for `measurement_selection_type` ({0}), must be one of {1}"
                .format(measurement_selection_type, allowed_values)
            )

        self._measurement_selection_type = measurement_selection_type

    @property
    def median_automated_stopping_spec(self):
        """Gets the median_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.


        :return: The median_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.
        :rtype: GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec
        """
        return self._median_automated_stopping_spec

    @median_automated_stopping_spec.setter
    def median_automated_stopping_spec(self, median_automated_stopping_spec):
        """Sets the median_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.


        :param median_automated_stopping_spec: The median_automated_stopping_spec of this GoogleCloudAiplatformV1StudySpec.
        :type median_automated_stopping_spec: GoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec
        """

        self._median_automated_stopping_spec = median_automated_stopping_spec

    @property
    def metrics(self):
        """Gets the metrics of this GoogleCloudAiplatformV1StudySpec.

        Required. Metric specs for the Study.

        :return: The metrics of this GoogleCloudAiplatformV1StudySpec.
        :rtype: List[GoogleCloudAiplatformV1StudySpecMetricSpec]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this GoogleCloudAiplatformV1StudySpec.

        Required. Metric specs for the Study.

        :param metrics: The metrics of this GoogleCloudAiplatformV1StudySpec.
        :type metrics: List[GoogleCloudAiplatformV1StudySpecMetricSpec]
        """

        self._metrics = metrics

    @property
    def observation_noise(self):
        """Gets the observation_noise of this GoogleCloudAiplatformV1StudySpec.

        The observation noise level of the study. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.

        :return: The observation_noise of this GoogleCloudAiplatformV1StudySpec.
        :rtype: str
        """
        return self._observation_noise

    @observation_noise.setter
    def observation_noise(self, observation_noise):
        """Sets the observation_noise of this GoogleCloudAiplatformV1StudySpec.

        The observation noise level of the study. Currently only supported by the Vertex AI Vizier service. Not supported by HyperparameterTuningJob or TrainingPipeline.

        :param observation_noise: The observation_noise of this GoogleCloudAiplatformV1StudySpec.
        :type observation_noise: str
        """
        allowed_values = ["OBSERVATION_NOISE_UNSPECIFIED", "LOW", "HIGH"]  # noqa: E501
        if observation_noise not in allowed_values:
            raise ValueError(
                "Invalid value for `observation_noise` ({0}), must be one of {1}"
                .format(observation_noise, allowed_values)
            )

        self._observation_noise = observation_noise

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudAiplatformV1StudySpec.

        Required. The set of parameters to tune.

        :return: The parameters of this GoogleCloudAiplatformV1StudySpec.
        :rtype: List[GoogleCloudAiplatformV1StudySpecParameterSpec]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudAiplatformV1StudySpec.

        Required. The set of parameters to tune.

        :param parameters: The parameters of this GoogleCloudAiplatformV1StudySpec.
        :type parameters: List[GoogleCloudAiplatformV1StudySpecParameterSpec]
        """

        self._parameters = parameters

    @property
    def study_stopping_config(self):
        """Gets the study_stopping_config of this GoogleCloudAiplatformV1StudySpec.


        :return: The study_stopping_config of this GoogleCloudAiplatformV1StudySpec.
        :rtype: GoogleCloudAiplatformV1StudySpecStudyStoppingConfig
        """
        return self._study_stopping_config

    @study_stopping_config.setter
    def study_stopping_config(self, study_stopping_config):
        """Sets the study_stopping_config of this GoogleCloudAiplatformV1StudySpec.


        :param study_stopping_config: The study_stopping_config of this GoogleCloudAiplatformV1StudySpec.
        :type study_stopping_config: GoogleCloudAiplatformV1StudySpecStudyStoppingConfig
        """

        self._study_stopping_config = study_stopping_config
