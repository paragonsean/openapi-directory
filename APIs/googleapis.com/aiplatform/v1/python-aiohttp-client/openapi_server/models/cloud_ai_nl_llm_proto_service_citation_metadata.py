# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_ai_nl_llm_proto_service_citation import CloudAiNlLlmProtoServiceCitation
from openapi_server import util


class CloudAiNlLlmProtoServiceCitationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, citations: List[CloudAiNlLlmProtoServiceCitation]=None):
        """CloudAiNlLlmProtoServiceCitationMetadata - a model defined in OpenAPI

        :param citations: The citations of this CloudAiNlLlmProtoServiceCitationMetadata.
        """
        self.openapi_types = {
            'citations': List[CloudAiNlLlmProtoServiceCitation]
        }

        self.attribute_map = {
            'citations': 'citations'
        }

        self._citations = citations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudAiNlLlmProtoServiceCitationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudAiNlLlmProtoServiceCitationMetadata of this CloudAiNlLlmProtoServiceCitationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def citations(self):
        """Gets the citations of this CloudAiNlLlmProtoServiceCitationMetadata.

        List of citations.

        :return: The citations of this CloudAiNlLlmProtoServiceCitationMetadata.
        :rtype: List[CloudAiNlLlmProtoServiceCitation]
        """
        return self._citations

    @citations.setter
    def citations(self, citations):
        """Sets the citations of this CloudAiNlLlmProtoServiceCitationMetadata.

        List of citations.

        :param citations: The citations of this CloudAiNlLlmProtoServiceCitationMetadata.
        :type citations: List[CloudAiNlLlmProtoServiceCitation]
        """

        self._citations = citations
