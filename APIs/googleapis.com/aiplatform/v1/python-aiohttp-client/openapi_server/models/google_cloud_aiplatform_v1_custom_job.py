# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_custom_job_spec import GoogleCloudAiplatformV1CustomJobSpec
from openapi_server.models.google_cloud_aiplatform_v1_encryption_spec import GoogleCloudAiplatformV1EncryptionSpec
from openapi_server.models.google_rpc_status import GoogleRpcStatus
from openapi_server import util


class GoogleCloudAiplatformV1CustomJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, display_name: str=None, encryption_spec: GoogleCloudAiplatformV1EncryptionSpec=None, end_time: str=None, error: GoogleRpcStatus=None, job_spec: GoogleCloudAiplatformV1CustomJobSpec=None, labels: Dict[str, str]=None, name: str=None, start_time: str=None, state: str=None, update_time: str=None, web_access_uris: Dict[str, str]=None):
        """GoogleCloudAiplatformV1CustomJob - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1CustomJob.
        :param display_name: The display_name of this GoogleCloudAiplatformV1CustomJob.
        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1CustomJob.
        :param end_time: The end_time of this GoogleCloudAiplatformV1CustomJob.
        :param error: The error of this GoogleCloudAiplatformV1CustomJob.
        :param job_spec: The job_spec of this GoogleCloudAiplatformV1CustomJob.
        :param labels: The labels of this GoogleCloudAiplatformV1CustomJob.
        :param name: The name of this GoogleCloudAiplatformV1CustomJob.
        :param start_time: The start_time of this GoogleCloudAiplatformV1CustomJob.
        :param state: The state of this GoogleCloudAiplatformV1CustomJob.
        :param update_time: The update_time of this GoogleCloudAiplatformV1CustomJob.
        :param web_access_uris: The web_access_uris of this GoogleCloudAiplatformV1CustomJob.
        """
        self.openapi_types = {
            'create_time': str,
            'display_name': str,
            'encryption_spec': GoogleCloudAiplatformV1EncryptionSpec,
            'end_time': str,
            'error': GoogleRpcStatus,
            'job_spec': GoogleCloudAiplatformV1CustomJobSpec,
            'labels': Dict[str, str],
            'name': str,
            'start_time': str,
            'state': str,
            'update_time': str,
            'web_access_uris': Dict[str, str]
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'display_name': 'displayName',
            'encryption_spec': 'encryptionSpec',
            'end_time': 'endTime',
            'error': 'error',
            'job_spec': 'jobSpec',
            'labels': 'labels',
            'name': 'name',
            'start_time': 'startTime',
            'state': 'state',
            'update_time': 'updateTime',
            'web_access_uris': 'webAccessUris'
        }

        self._create_time = create_time
        self._display_name = display_name
        self._encryption_spec = encryption_spec
        self._end_time = end_time
        self._error = error
        self._job_spec = job_spec
        self._labels = labels
        self._name = name
        self._start_time = start_time
        self._state = state
        self._update_time = update_time
        self._web_access_uris = web_access_uris

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1CustomJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1CustomJob of this GoogleCloudAiplatformV1CustomJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1CustomJob.

        Output only. Time when the CustomJob was created.

        :return: The create_time of this GoogleCloudAiplatformV1CustomJob.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1CustomJob.

        Output only. Time when the CustomJob was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1CustomJob.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def display_name(self):
        """Gets the display_name of this GoogleCloudAiplatformV1CustomJob.

        Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :return: The display_name of this GoogleCloudAiplatformV1CustomJob.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this GoogleCloudAiplatformV1CustomJob.

        Required. The display name of the CustomJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.

        :param display_name: The display_name of this GoogleCloudAiplatformV1CustomJob.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def encryption_spec(self):
        """Gets the encryption_spec of this GoogleCloudAiplatformV1CustomJob.


        :return: The encryption_spec of this GoogleCloudAiplatformV1CustomJob.
        :rtype: GoogleCloudAiplatformV1EncryptionSpec
        """
        return self._encryption_spec

    @encryption_spec.setter
    def encryption_spec(self, encryption_spec):
        """Sets the encryption_spec of this GoogleCloudAiplatformV1CustomJob.


        :param encryption_spec: The encryption_spec of this GoogleCloudAiplatformV1CustomJob.
        :type encryption_spec: GoogleCloudAiplatformV1EncryptionSpec
        """

        self._encryption_spec = encryption_spec

    @property
    def end_time(self):
        """Gets the end_time of this GoogleCloudAiplatformV1CustomJob.

        Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.

        :return: The end_time of this GoogleCloudAiplatformV1CustomJob.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this GoogleCloudAiplatformV1CustomJob.

        Output only. Time when the CustomJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.

        :param end_time: The end_time of this GoogleCloudAiplatformV1CustomJob.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def error(self):
        """Gets the error of this GoogleCloudAiplatformV1CustomJob.


        :return: The error of this GoogleCloudAiplatformV1CustomJob.
        :rtype: GoogleRpcStatus
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this GoogleCloudAiplatformV1CustomJob.


        :param error: The error of this GoogleCloudAiplatformV1CustomJob.
        :type error: GoogleRpcStatus
        """

        self._error = error

    @property
    def job_spec(self):
        """Gets the job_spec of this GoogleCloudAiplatformV1CustomJob.


        :return: The job_spec of this GoogleCloudAiplatformV1CustomJob.
        :rtype: GoogleCloudAiplatformV1CustomJobSpec
        """
        return self._job_spec

    @job_spec.setter
    def job_spec(self, job_spec):
        """Sets the job_spec of this GoogleCloudAiplatformV1CustomJob.


        :param job_spec: The job_spec of this GoogleCloudAiplatformV1CustomJob.
        :type job_spec: GoogleCloudAiplatformV1CustomJobSpec
        """

        self._job_spec = job_spec

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1CustomJob.

        The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :return: The labels of this GoogleCloudAiplatformV1CustomJob.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1CustomJob.

        The labels with user-defined metadata to organize CustomJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.

        :param labels: The labels of this GoogleCloudAiplatformV1CustomJob.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1CustomJob.

        Output only. Resource name of a CustomJob.

        :return: The name of this GoogleCloudAiplatformV1CustomJob.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1CustomJob.

        Output only. Resource name of a CustomJob.

        :param name: The name of this GoogleCloudAiplatformV1CustomJob.
        :type name: str
        """

        self._name = name

    @property
    def start_time(self):
        """Gets the start_time of this GoogleCloudAiplatformV1CustomJob.

        Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.

        :return: The start_time of this GoogleCloudAiplatformV1CustomJob.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this GoogleCloudAiplatformV1CustomJob.

        Output only. Time when the CustomJob for the first time entered the `JOB_STATE_RUNNING` state.

        :param start_time: The start_time of this GoogleCloudAiplatformV1CustomJob.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def state(self):
        """Gets the state of this GoogleCloudAiplatformV1CustomJob.

        Output only. The detailed state of the job.

        :return: The state of this GoogleCloudAiplatformV1CustomJob.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GoogleCloudAiplatformV1CustomJob.

        Output only. The detailed state of the job.

        :param state: The state of this GoogleCloudAiplatformV1CustomJob.
        :type state: str
        """
        allowed_values = ["JOB_STATE_UNSPECIFIED", "JOB_STATE_QUEUED", "JOB_STATE_PENDING", "JOB_STATE_RUNNING", "JOB_STATE_SUCCEEDED", "JOB_STATE_FAILED", "JOB_STATE_CANCELLING", "JOB_STATE_CANCELLED", "JOB_STATE_PAUSED", "JOB_STATE_EXPIRED", "JOB_STATE_UPDATING", "JOB_STATE_PARTIALLY_SUCCEEDED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1CustomJob.

        Output only. Time when the CustomJob was most recently updated.

        :return: The update_time of this GoogleCloudAiplatformV1CustomJob.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1CustomJob.

        Output only. Time when the CustomJob was most recently updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1CustomJob.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def web_access_uris(self):
        """Gets the web_access_uris of this GoogleCloudAiplatformV1CustomJob.

        Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.

        :return: The web_access_uris of this GoogleCloudAiplatformV1CustomJob.
        :rtype: Dict[str, str]
        """
        return self._web_access_uris

    @web_access_uris.setter
    def web_access_uris(self, web_access_uris):
        """Sets the web_access_uris of this GoogleCloudAiplatformV1CustomJob.

        Output only. URIs for accessing [interactive shells](https://cloud.google.com/vertex-ai/docs/training/monitor-debug-interactive-shell) (one URI for each training node). Only available if job_spec.enable_web_access is `true`. The keys are names of each node in the training job; for example, `workerpool0-0` for the primary node, `workerpool1-0` for the first node in the second worker pool, and `workerpool1-1` for the second node in the second worker pool. The values are the URIs for each node's interactive shell.

        :param web_access_uris: The web_access_uris of this GoogleCloudAiplatformV1CustomJob.
        :type web_access_uris: Dict[str, str]
        """

        self._web_access_uris = web_access_uris
