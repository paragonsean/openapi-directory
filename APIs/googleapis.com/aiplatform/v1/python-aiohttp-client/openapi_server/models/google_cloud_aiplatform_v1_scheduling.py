# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1Scheduling(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_retries: bool=None, restart_job_on_worker_restart: bool=None, timeout: str=None):
        """GoogleCloudAiplatformV1Scheduling - a model defined in OpenAPI

        :param disable_retries: The disable_retries of this GoogleCloudAiplatformV1Scheduling.
        :param restart_job_on_worker_restart: The restart_job_on_worker_restart of this GoogleCloudAiplatformV1Scheduling.
        :param timeout: The timeout of this GoogleCloudAiplatformV1Scheduling.
        """
        self.openapi_types = {
            'disable_retries': bool,
            'restart_job_on_worker_restart': bool,
            'timeout': str
        }

        self.attribute_map = {
            'disable_retries': 'disableRetries',
            'restart_job_on_worker_restart': 'restartJobOnWorkerRestart',
            'timeout': 'timeout'
        }

        self._disable_retries = disable_retries
        self._restart_job_on_worker_restart = restart_job_on_worker_restart
        self._timeout = timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1Scheduling':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1Scheduling of this GoogleCloudAiplatformV1Scheduling.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_retries(self):
        """Gets the disable_retries of this GoogleCloudAiplatformV1Scheduling.

        Optional. Indicates if the job should retry for internal errors after the job starts running. If true, overrides `Scheduling.restart_job_on_worker_restart` to false.

        :return: The disable_retries of this GoogleCloudAiplatformV1Scheduling.
        :rtype: bool
        """
        return self._disable_retries

    @disable_retries.setter
    def disable_retries(self, disable_retries):
        """Sets the disable_retries of this GoogleCloudAiplatformV1Scheduling.

        Optional. Indicates if the job should retry for internal errors after the job starts running. If true, overrides `Scheduling.restart_job_on_worker_restart` to false.

        :param disable_retries: The disable_retries of this GoogleCloudAiplatformV1Scheduling.
        :type disable_retries: bool
        """

        self._disable_retries = disable_retries

    @property
    def restart_job_on_worker_restart(self):
        """Gets the restart_job_on_worker_restart of this GoogleCloudAiplatformV1Scheduling.

        Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.

        :return: The restart_job_on_worker_restart of this GoogleCloudAiplatformV1Scheduling.
        :rtype: bool
        """
        return self._restart_job_on_worker_restart

    @restart_job_on_worker_restart.setter
    def restart_job_on_worker_restart(self, restart_job_on_worker_restart):
        """Sets the restart_job_on_worker_restart of this GoogleCloudAiplatformV1Scheduling.

        Restarts the entire CustomJob if a worker gets restarted. This feature can be used by distributed training jobs that are not resilient to workers leaving and joining a job.

        :param restart_job_on_worker_restart: The restart_job_on_worker_restart of this GoogleCloudAiplatformV1Scheduling.
        :type restart_job_on_worker_restart: bool
        """

        self._restart_job_on_worker_restart = restart_job_on_worker_restart

    @property
    def timeout(self):
        """Gets the timeout of this GoogleCloudAiplatformV1Scheduling.

        The maximum job running time. The default is 7 days.

        :return: The timeout of this GoogleCloudAiplatformV1Scheduling.
        :rtype: str
        """
        return self._timeout

    @timeout.setter
    def timeout(self, timeout):
        """Sets the timeout of this GoogleCloudAiplatformV1Scheduling.

        The maximum job running time. The default is 7 days.

        :param timeout: The timeout of this GoogleCloudAiplatformV1Scheduling.
        :type timeout: str
        """

        self._timeout = timeout
