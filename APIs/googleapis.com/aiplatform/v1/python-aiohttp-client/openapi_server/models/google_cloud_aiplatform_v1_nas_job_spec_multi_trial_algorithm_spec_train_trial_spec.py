# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_custom_job_spec import GoogleCloudAiplatformV1CustomJobSpec
from openapi_server import util


class GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, frequency: int=None, max_parallel_trial_count: int=None, train_trial_job_spec: GoogleCloudAiplatformV1CustomJobSpec=None):
        """GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec - a model defined in OpenAPI

        :param frequency: The frequency of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        :param max_parallel_trial_count: The max_parallel_trial_count of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        :param train_trial_job_spec: The train_trial_job_spec of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        """
        self.openapi_types = {
            'frequency': int,
            'max_parallel_trial_count': int,
            'train_trial_job_spec': GoogleCloudAiplatformV1CustomJobSpec
        }

        self.attribute_map = {
            'frequency': 'frequency',
            'max_parallel_trial_count': 'maxParallelTrialCount',
            'train_trial_job_spec': 'trainTrialJobSpec'
        }

        self._frequency = frequency
        self._max_parallel_trial_count = max_parallel_trial_count
        self._train_trial_job_spec = train_trial_job_spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def frequency(self):
        """Gets the frequency of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.

        Required. Frequency of search trials to start train stage. Top N [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for every M [TrainTrialSpec.frequency] trials searched.

        :return: The frequency of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        :rtype: int
        """
        return self._frequency

    @frequency.setter
    def frequency(self, frequency):
        """Sets the frequency of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.

        Required. Frequency of search trials to start train stage. Top N [TrainTrialSpec.max_parallel_trial_count] search trials will be trained for every M [TrainTrialSpec.frequency] trials searched.

        :param frequency: The frequency of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        :type frequency: int
        """

        self._frequency = frequency

    @property
    def max_parallel_trial_count(self):
        """Gets the max_parallel_trial_count of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.

        Required. The maximum number of trials to run in parallel.

        :return: The max_parallel_trial_count of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        :rtype: int
        """
        return self._max_parallel_trial_count

    @max_parallel_trial_count.setter
    def max_parallel_trial_count(self, max_parallel_trial_count):
        """Sets the max_parallel_trial_count of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.

        Required. The maximum number of trials to run in parallel.

        :param max_parallel_trial_count: The max_parallel_trial_count of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        :type max_parallel_trial_count: int
        """

        self._max_parallel_trial_count = max_parallel_trial_count

    @property
    def train_trial_job_spec(self):
        """Gets the train_trial_job_spec of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.


        :return: The train_trial_job_spec of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        :rtype: GoogleCloudAiplatformV1CustomJobSpec
        """
        return self._train_trial_job_spec

    @train_trial_job_spec.setter
    def train_trial_job_spec(self, train_trial_job_spec):
        """Sets the train_trial_job_spec of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.


        :param train_trial_job_spec: The train_trial_job_spec of this GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpecTrainTrialSpec.
        :type train_trial_job_spec: GoogleCloudAiplatformV1CustomJobSpec
        """

        self._train_trial_job_spec = train_trial_job_spec
