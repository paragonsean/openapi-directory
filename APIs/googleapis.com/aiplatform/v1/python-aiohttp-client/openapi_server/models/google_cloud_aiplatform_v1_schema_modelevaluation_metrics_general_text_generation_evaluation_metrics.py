# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bleu: float=None, rouge_l_sum: float=None):
        """GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics - a model defined in OpenAPI

        :param bleu: The bleu of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.
        :param rouge_l_sum: The rouge_l_sum of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.
        """
        self.openapi_types = {
            'bleu': float,
            'rouge_l_sum': float
        }

        self.attribute_map = {
            'bleu': 'bleu',
            'rouge_l_sum': 'rougeLSum'
        }

        self._bleu = bleu
        self._rouge_l_sum = rouge_l_sum

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bleu(self):
        """Gets the bleu of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.

        BLEU (bilingual evaluation understudy) scores based on sacrebleu implementation.

        :return: The bleu of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.
        :rtype: float
        """
        return self._bleu

    @bleu.setter
    def bleu(self, bleu):
        """Sets the bleu of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.

        BLEU (bilingual evaluation understudy) scores based on sacrebleu implementation.

        :param bleu: The bleu of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.
        :type bleu: float
        """

        self._bleu = bleu

    @property
    def rouge_l_sum(self):
        """Gets the rouge_l_sum of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.

        ROUGE-L (Longest Common Subsequence) scoring at summary level.

        :return: The rouge_l_sum of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.
        :rtype: float
        """
        return self._rouge_l_sum

    @rouge_l_sum.setter
    def rouge_l_sum(self, rouge_l_sum):
        """Sets the rouge_l_sum of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.

        ROUGE-L (Longest Common Subsequence) scoring at summary level.

        :param rouge_l_sum: The rouge_l_sum of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsGeneralTextGenerationEvaluationMetrics.
        :type rouge_l_sum: float
        """

        self._rouge_l_sum = rouge_l_sum
