# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.learning_genai_root_routing_decision import LearningGenaiRootRoutingDecision
from openapi_server.models.learning_serving_llm_message_metadata import LearningServingLlmMessageMetadata
from openapi_server import util


class CloudAiNlLlmProtoServiceMessageMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_filter_info: LearningServingLlmMessageMetadata=None, model_routing_decision: LearningGenaiRootRoutingDecision=None, output_filter_info: List[LearningServingLlmMessageMetadata]=None):
        """CloudAiNlLlmProtoServiceMessageMetadata - a model defined in OpenAPI

        :param input_filter_info: The input_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.
        :param model_routing_decision: The model_routing_decision of this CloudAiNlLlmProtoServiceMessageMetadata.
        :param output_filter_info: The output_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.
        """
        self.openapi_types = {
            'input_filter_info': LearningServingLlmMessageMetadata,
            'model_routing_decision': LearningGenaiRootRoutingDecision,
            'output_filter_info': List[LearningServingLlmMessageMetadata]
        }

        self.attribute_map = {
            'input_filter_info': 'inputFilterInfo',
            'model_routing_decision': 'modelRoutingDecision',
            'output_filter_info': 'outputFilterInfo'
        }

        self._input_filter_info = input_filter_info
        self._model_routing_decision = model_routing_decision
        self._output_filter_info = output_filter_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudAiNlLlmProtoServiceMessageMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudAiNlLlmProtoServiceMessageMetadata of this CloudAiNlLlmProtoServiceMessageMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_filter_info(self):
        """Gets the input_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.


        :return: The input_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.
        :rtype: LearningServingLlmMessageMetadata
        """
        return self._input_filter_info

    @input_filter_info.setter
    def input_filter_info(self, input_filter_info):
        """Sets the input_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.


        :param input_filter_info: The input_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.
        :type input_filter_info: LearningServingLlmMessageMetadata
        """

        self._input_filter_info = input_filter_info

    @property
    def model_routing_decision(self):
        """Gets the model_routing_decision of this CloudAiNlLlmProtoServiceMessageMetadata.


        :return: The model_routing_decision of this CloudAiNlLlmProtoServiceMessageMetadata.
        :rtype: LearningGenaiRootRoutingDecision
        """
        return self._model_routing_decision

    @model_routing_decision.setter
    def model_routing_decision(self, model_routing_decision):
        """Sets the model_routing_decision of this CloudAiNlLlmProtoServiceMessageMetadata.


        :param model_routing_decision: The model_routing_decision of this CloudAiNlLlmProtoServiceMessageMetadata.
        :type model_routing_decision: LearningGenaiRootRoutingDecision
        """

        self._model_routing_decision = model_routing_decision

    @property
    def output_filter_info(self):
        """Gets the output_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.

        Filter metadata of the output messages.

        :return: The output_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.
        :rtype: List[LearningServingLlmMessageMetadata]
        """
        return self._output_filter_info

    @output_filter_info.setter
    def output_filter_info(self, output_filter_info):
        """Sets the output_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.

        Filter metadata of the output messages.

        :param output_filter_info: The output_filter_info of this CloudAiNlLlmProtoServiceMessageMetadata.
        :type output_filter_info: List[LearningServingLlmMessageMetadata]
        """

        self._output_filter_info = output_filter_info
