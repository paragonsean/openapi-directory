# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1ModelDataStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, test_annotations_count: str=None, test_data_items_count: str=None, training_annotations_count: str=None, training_data_items_count: str=None, validation_annotations_count: str=None, validation_data_items_count: str=None):
        """GoogleCloudAiplatformV1ModelDataStats - a model defined in OpenAPI

        :param test_annotations_count: The test_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.
        :param test_data_items_count: The test_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.
        :param training_annotations_count: The training_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.
        :param training_data_items_count: The training_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.
        :param validation_annotations_count: The validation_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.
        :param validation_data_items_count: The validation_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.
        """
        self.openapi_types = {
            'test_annotations_count': str,
            'test_data_items_count': str,
            'training_annotations_count': str,
            'training_data_items_count': str,
            'validation_annotations_count': str,
            'validation_data_items_count': str
        }

        self.attribute_map = {
            'test_annotations_count': 'testAnnotationsCount',
            'test_data_items_count': 'testDataItemsCount',
            'training_annotations_count': 'trainingAnnotationsCount',
            'training_data_items_count': 'trainingDataItemsCount',
            'validation_annotations_count': 'validationAnnotationsCount',
            'validation_data_items_count': 'validationDataItemsCount'
        }

        self._test_annotations_count = test_annotations_count
        self._test_data_items_count = test_data_items_count
        self._training_annotations_count = training_annotations_count
        self._training_data_items_count = training_data_items_count
        self._validation_annotations_count = validation_annotations_count
        self._validation_data_items_count = validation_data_items_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1ModelDataStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1ModelDataStats of this GoogleCloudAiplatformV1ModelDataStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def test_annotations_count(self):
        """Gets the test_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of Annotations that are used for evaluating this Model. If the Model is evaluated multiple times, this will be the number of test Annotations used by the first evaluation. If the Model is not evaluated, the number is 0.

        :return: The test_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.
        :rtype: str
        """
        return self._test_annotations_count

    @test_annotations_count.setter
    def test_annotations_count(self, test_annotations_count):
        """Sets the test_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of Annotations that are used for evaluating this Model. If the Model is evaluated multiple times, this will be the number of test Annotations used by the first evaluation. If the Model is not evaluated, the number is 0.

        :param test_annotations_count: The test_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.
        :type test_annotations_count: str
        """

        self._test_annotations_count = test_annotations_count

    @property
    def test_data_items_count(self):
        """Gets the test_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of DataItems that were used for evaluating this Model. If the Model is evaluated multiple times, this will be the number of test DataItems used by the first evaluation. If the Model is not evaluated, the number is 0.

        :return: The test_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.
        :rtype: str
        """
        return self._test_data_items_count

    @test_data_items_count.setter
    def test_data_items_count(self, test_data_items_count):
        """Sets the test_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of DataItems that were used for evaluating this Model. If the Model is evaluated multiple times, this will be the number of test DataItems used by the first evaluation. If the Model is not evaluated, the number is 0.

        :param test_data_items_count: The test_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.
        :type test_data_items_count: str
        """

        self._test_data_items_count = test_data_items_count

    @property
    def training_annotations_count(self):
        """Gets the training_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of Annotations that are used for training this Model.

        :return: The training_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.
        :rtype: str
        """
        return self._training_annotations_count

    @training_annotations_count.setter
    def training_annotations_count(self, training_annotations_count):
        """Sets the training_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of Annotations that are used for training this Model.

        :param training_annotations_count: The training_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.
        :type training_annotations_count: str
        """

        self._training_annotations_count = training_annotations_count

    @property
    def training_data_items_count(self):
        """Gets the training_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of DataItems that were used for training this Model.

        :return: The training_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.
        :rtype: str
        """
        return self._training_data_items_count

    @training_data_items_count.setter
    def training_data_items_count(self, training_data_items_count):
        """Sets the training_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of DataItems that were used for training this Model.

        :param training_data_items_count: The training_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.
        :type training_data_items_count: str
        """

        self._training_data_items_count = training_data_items_count

    @property
    def validation_annotations_count(self):
        """Gets the validation_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of Annotations that are used for validating this Model during training.

        :return: The validation_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.
        :rtype: str
        """
        return self._validation_annotations_count

    @validation_annotations_count.setter
    def validation_annotations_count(self, validation_annotations_count):
        """Sets the validation_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of Annotations that are used for validating this Model during training.

        :param validation_annotations_count: The validation_annotations_count of this GoogleCloudAiplatformV1ModelDataStats.
        :type validation_annotations_count: str
        """

        self._validation_annotations_count = validation_annotations_count

    @property
    def validation_data_items_count(self):
        """Gets the validation_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of DataItems that were used for validating this Model during training.

        :return: The validation_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.
        :rtype: str
        """
        return self._validation_data_items_count

    @validation_data_items_count.setter
    def validation_data_items_count(self, validation_data_items_count):
        """Sets the validation_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.

        Number of DataItems that were used for validating this Model during training.

        :param validation_data_items_count: The validation_data_items_count of this GoogleCloudAiplatformV1ModelDataStats.
        :type validation_data_items_count: str
        """

        self._validation_data_items_count = validation_data_items_count
