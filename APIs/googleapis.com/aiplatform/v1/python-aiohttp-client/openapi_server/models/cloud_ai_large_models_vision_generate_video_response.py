# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cloud_ai_large_models_vision_filtered_text import CloudAiLargeModelsVisionFilteredText
from openapi_server.models.cloud_ai_large_models_vision_media import CloudAiLargeModelsVisionMedia
from openapi_server import util


class CloudAiLargeModelsVisionGenerateVideoResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, generated_samples: List[CloudAiLargeModelsVisionMedia]=None, rai_media_filtered_count: int=None, rai_media_filtered_reasons: List[str]=None, rai_text_filtered_reason: CloudAiLargeModelsVisionFilteredText=None):
        """CloudAiLargeModelsVisionGenerateVideoResponse - a model defined in OpenAPI

        :param generated_samples: The generated_samples of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :param rai_media_filtered_count: The rai_media_filtered_count of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :param rai_media_filtered_reasons: The rai_media_filtered_reasons of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :param rai_text_filtered_reason: The rai_text_filtered_reason of this CloudAiLargeModelsVisionGenerateVideoResponse.
        """
        self.openapi_types = {
            'generated_samples': List[CloudAiLargeModelsVisionMedia],
            'rai_media_filtered_count': int,
            'rai_media_filtered_reasons': List[str],
            'rai_text_filtered_reason': CloudAiLargeModelsVisionFilteredText
        }

        self.attribute_map = {
            'generated_samples': 'generatedSamples',
            'rai_media_filtered_count': 'raiMediaFilteredCount',
            'rai_media_filtered_reasons': 'raiMediaFilteredReasons',
            'rai_text_filtered_reason': 'raiTextFilteredReason'
        }

        self._generated_samples = generated_samples
        self._rai_media_filtered_count = rai_media_filtered_count
        self._rai_media_filtered_reasons = rai_media_filtered_reasons
        self._rai_text_filtered_reason = rai_text_filtered_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudAiLargeModelsVisionGenerateVideoResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudAiLargeModelsVisionGenerateVideoResponse of this CloudAiLargeModelsVisionGenerateVideoResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def generated_samples(self):
        """Gets the generated_samples of this CloudAiLargeModelsVisionGenerateVideoResponse.

        The generates samples.

        :return: The generated_samples of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :rtype: List[CloudAiLargeModelsVisionMedia]
        """
        return self._generated_samples

    @generated_samples.setter
    def generated_samples(self, generated_samples):
        """Sets the generated_samples of this CloudAiLargeModelsVisionGenerateVideoResponse.

        The generates samples.

        :param generated_samples: The generated_samples of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :type generated_samples: List[CloudAiLargeModelsVisionMedia]
        """

        self._generated_samples = generated_samples

    @property
    def rai_media_filtered_count(self):
        """Gets the rai_media_filtered_count of this CloudAiLargeModelsVisionGenerateVideoResponse.

        Returns if any videos were filtered due to RAI policies.

        :return: The rai_media_filtered_count of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :rtype: int
        """
        return self._rai_media_filtered_count

    @rai_media_filtered_count.setter
    def rai_media_filtered_count(self, rai_media_filtered_count):
        """Sets the rai_media_filtered_count of this CloudAiLargeModelsVisionGenerateVideoResponse.

        Returns if any videos were filtered due to RAI policies.

        :param rai_media_filtered_count: The rai_media_filtered_count of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :type rai_media_filtered_count: int
        """

        self._rai_media_filtered_count = rai_media_filtered_count

    @property
    def rai_media_filtered_reasons(self):
        """Gets the rai_media_filtered_reasons of this CloudAiLargeModelsVisionGenerateVideoResponse.

        Returns rai failure reasons if any.

        :return: The rai_media_filtered_reasons of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :rtype: List[str]
        """
        return self._rai_media_filtered_reasons

    @rai_media_filtered_reasons.setter
    def rai_media_filtered_reasons(self, rai_media_filtered_reasons):
        """Sets the rai_media_filtered_reasons of this CloudAiLargeModelsVisionGenerateVideoResponse.

        Returns rai failure reasons if any.

        :param rai_media_filtered_reasons: The rai_media_filtered_reasons of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :type rai_media_filtered_reasons: List[str]
        """

        self._rai_media_filtered_reasons = rai_media_filtered_reasons

    @property
    def rai_text_filtered_reason(self):
        """Gets the rai_text_filtered_reason of this CloudAiLargeModelsVisionGenerateVideoResponse.


        :return: The rai_text_filtered_reason of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :rtype: CloudAiLargeModelsVisionFilteredText
        """
        return self._rai_text_filtered_reason

    @rai_text_filtered_reason.setter
    def rai_text_filtered_reason(self, rai_text_filtered_reason):
        """Sets the rai_text_filtered_reason of this CloudAiLargeModelsVisionGenerateVideoResponse.


        :param rai_text_filtered_reason: The rai_text_filtered_reason of this CloudAiLargeModelsVisionGenerateVideoResponse.
        :type rai_text_filtered_reason: CloudAiLargeModelsVisionFilteredText
        """

        self._rai_text_filtered_reason = rai_text_filtered_reason
