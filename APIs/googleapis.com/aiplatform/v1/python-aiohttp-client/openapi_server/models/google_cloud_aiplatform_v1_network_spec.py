# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1NetworkSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_internet_access: bool=None, network: str=None, subnetwork: str=None):
        """GoogleCloudAiplatformV1NetworkSpec - a model defined in OpenAPI

        :param enable_internet_access: The enable_internet_access of this GoogleCloudAiplatformV1NetworkSpec.
        :param network: The network of this GoogleCloudAiplatformV1NetworkSpec.
        :param subnetwork: The subnetwork of this GoogleCloudAiplatformV1NetworkSpec.
        """
        self.openapi_types = {
            'enable_internet_access': bool,
            'network': str,
            'subnetwork': str
        }

        self.attribute_map = {
            'enable_internet_access': 'enableInternetAccess',
            'network': 'network',
            'subnetwork': 'subnetwork'
        }

        self._enable_internet_access = enable_internet_access
        self._network = network
        self._subnetwork = subnetwork

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1NetworkSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1NetworkSpec of this GoogleCloudAiplatformV1NetworkSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_internet_access(self):
        """Gets the enable_internet_access of this GoogleCloudAiplatformV1NetworkSpec.

        Whether to enable public internet access. Default false.

        :return: The enable_internet_access of this GoogleCloudAiplatformV1NetworkSpec.
        :rtype: bool
        """
        return self._enable_internet_access

    @enable_internet_access.setter
    def enable_internet_access(self, enable_internet_access):
        """Sets the enable_internet_access of this GoogleCloudAiplatformV1NetworkSpec.

        Whether to enable public internet access. Default false.

        :param enable_internet_access: The enable_internet_access of this GoogleCloudAiplatformV1NetworkSpec.
        :type enable_internet_access: bool
        """

        self._enable_internet_access = enable_internet_access

    @property
    def network(self):
        """Gets the network of this GoogleCloudAiplatformV1NetworkSpec.

        The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks)

        :return: The network of this GoogleCloudAiplatformV1NetworkSpec.
        :rtype: str
        """
        return self._network

    @network.setter
    def network(self, network):
        """Sets the network of this GoogleCloudAiplatformV1NetworkSpec.

        The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks)

        :param network: The network of this GoogleCloudAiplatformV1NetworkSpec.
        :type network: str
        """

        self._network = network

    @property
    def subnetwork(self):
        """Gets the subnetwork of this GoogleCloudAiplatformV1NetworkSpec.

        The name of the subnet that this instance is in. Format: `projects/{project_id_or_number}/regions/{region}/subnetworks/{subnetwork_id}`

        :return: The subnetwork of this GoogleCloudAiplatformV1NetworkSpec.
        :rtype: str
        """
        return self._subnetwork

    @subnetwork.setter
    def subnetwork(self, subnetwork):
        """Sets the subnetwork of this GoogleCloudAiplatformV1NetworkSpec.

        The name of the subnet that this instance is in. Format: `projects/{project_id_or_number}/regions/{region}/subnetworks/{subnetwork_id}`

        :param subnetwork: The subnetwork of this GoogleCloudAiplatformV1NetworkSpec.
        :type subnetwork: str
        """

        self._subnetwork = subnetwork
