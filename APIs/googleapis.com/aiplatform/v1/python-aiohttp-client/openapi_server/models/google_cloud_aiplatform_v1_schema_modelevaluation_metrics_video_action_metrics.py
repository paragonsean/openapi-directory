# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_schema_modelevaluation_metrics_video_action_metrics_confidence_metrics import GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics
from openapi_server import util


class GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confidence_metrics: List[GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics]=None, mean_average_precision: float=None, precision_window_length: str=None):
        """GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics - a model defined in OpenAPI

        :param confidence_metrics: The confidence_metrics of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        :param mean_average_precision: The mean_average_precision of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        :param precision_window_length: The precision_window_length of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        """
        self.openapi_types = {
            'confidence_metrics': List[GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics],
            'mean_average_precision': float,
            'precision_window_length': str
        }

        self.attribute_map = {
            'confidence_metrics': 'confidenceMetrics',
            'mean_average_precision': 'meanAveragePrecision',
            'precision_window_length': 'precisionWindowLength'
        }

        self._confidence_metrics = confidence_metrics
        self._mean_average_precision = mean_average_precision
        self._precision_window_length = precision_window_length

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confidence_metrics(self):
        """Gets the confidence_metrics of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.

        Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99.

        :return: The confidence_metrics of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        :rtype: List[GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics]
        """
        return self._confidence_metrics

    @confidence_metrics.setter
    def confidence_metrics(self, confidence_metrics):
        """Sets the confidence_metrics of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.

        Metrics for each label-match confidence_threshold from 0.05,0.10,...,0.95,0.96,0.97,0.98,0.99.

        :param confidence_metrics: The confidence_metrics of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        :type confidence_metrics: List[GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetricsConfidenceMetrics]
        """

        self._confidence_metrics = confidence_metrics

    @property
    def mean_average_precision(self):
        """Gets the mean_average_precision of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.

        The mean average precision.

        :return: The mean_average_precision of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        :rtype: float
        """
        return self._mean_average_precision

    @mean_average_precision.setter
    def mean_average_precision(self, mean_average_precision):
        """Sets the mean_average_precision of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.

        The mean average precision.

        :param mean_average_precision: The mean_average_precision of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        :type mean_average_precision: float
        """

        self._mean_average_precision = mean_average_precision

    @property
    def precision_window_length(self):
        """Gets the precision_window_length of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.

        This VideoActionMetrics is calculated based on this prediction window length. If the predicted action's timestamp is inside the time window whose center is the ground truth action's timestamp with this specific length, the prediction result is treated as a true positive.

        :return: The precision_window_length of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        :rtype: str
        """
        return self._precision_window_length

    @precision_window_length.setter
    def precision_window_length(self, precision_window_length):
        """Sets the precision_window_length of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.

        This VideoActionMetrics is calculated based on this prediction window length. If the predicted action's timestamp is inside the time window whose center is the ground truth action's timestamp with this specific length, the prediction result is treated as a true positive.

        :param precision_window_length: The precision_window_length of this GoogleCloudAiplatformV1SchemaModelevaluationMetricsVideoActionMetrics.
        :type precision_window_length: str
        """

        self._precision_window_length = precision_window_length
