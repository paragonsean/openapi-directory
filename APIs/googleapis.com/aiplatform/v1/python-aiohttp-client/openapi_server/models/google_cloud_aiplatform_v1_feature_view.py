# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_feature_view_big_query_source import GoogleCloudAiplatformV1FeatureViewBigQuerySource
from openapi_server.models.google_cloud_aiplatform_v1_feature_view_feature_registry_source import GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource
from openapi_server.models.google_cloud_aiplatform_v1_feature_view_sync_config import GoogleCloudAiplatformV1FeatureViewSyncConfig
from openapi_server import util


class GoogleCloudAiplatformV1FeatureView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, big_query_source: GoogleCloudAiplatformV1FeatureViewBigQuerySource=None, create_time: str=None, etag: str=None, feature_registry_source: GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource=None, labels: Dict[str, str]=None, name: str=None, sync_config: GoogleCloudAiplatformV1FeatureViewSyncConfig=None, update_time: str=None):
        """GoogleCloudAiplatformV1FeatureView - a model defined in OpenAPI

        :param big_query_source: The big_query_source of this GoogleCloudAiplatformV1FeatureView.
        :param create_time: The create_time of this GoogleCloudAiplatformV1FeatureView.
        :param etag: The etag of this GoogleCloudAiplatformV1FeatureView.
        :param feature_registry_source: The feature_registry_source of this GoogleCloudAiplatformV1FeatureView.
        :param labels: The labels of this GoogleCloudAiplatformV1FeatureView.
        :param name: The name of this GoogleCloudAiplatformV1FeatureView.
        :param sync_config: The sync_config of this GoogleCloudAiplatformV1FeatureView.
        :param update_time: The update_time of this GoogleCloudAiplatformV1FeatureView.
        """
        self.openapi_types = {
            'big_query_source': GoogleCloudAiplatformV1FeatureViewBigQuerySource,
            'create_time': str,
            'etag': str,
            'feature_registry_source': GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource,
            'labels': Dict[str, str],
            'name': str,
            'sync_config': GoogleCloudAiplatformV1FeatureViewSyncConfig,
            'update_time': str
        }

        self.attribute_map = {
            'big_query_source': 'bigQuerySource',
            'create_time': 'createTime',
            'etag': 'etag',
            'feature_registry_source': 'featureRegistrySource',
            'labels': 'labels',
            'name': 'name',
            'sync_config': 'syncConfig',
            'update_time': 'updateTime'
        }

        self._big_query_source = big_query_source
        self._create_time = create_time
        self._etag = etag
        self._feature_registry_source = feature_registry_source
        self._labels = labels
        self._name = name
        self._sync_config = sync_config
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1FeatureView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1FeatureView of this GoogleCloudAiplatformV1FeatureView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def big_query_source(self):
        """Gets the big_query_source of this GoogleCloudAiplatformV1FeatureView.


        :return: The big_query_source of this GoogleCloudAiplatformV1FeatureView.
        :rtype: GoogleCloudAiplatformV1FeatureViewBigQuerySource
        """
        return self._big_query_source

    @big_query_source.setter
    def big_query_source(self, big_query_source):
        """Sets the big_query_source of this GoogleCloudAiplatformV1FeatureView.


        :param big_query_source: The big_query_source of this GoogleCloudAiplatformV1FeatureView.
        :type big_query_source: GoogleCloudAiplatformV1FeatureViewBigQuerySource
        """

        self._big_query_source = big_query_source

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1FeatureView.

        Output only. Timestamp when this FeatureView was created.

        :return: The create_time of this GoogleCloudAiplatformV1FeatureView.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1FeatureView.

        Output only. Timestamp when this FeatureView was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1FeatureView.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1FeatureView.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1FeatureView.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1FeatureView.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1FeatureView.
        :type etag: str
        """

        self._etag = etag

    @property
    def feature_registry_source(self):
        """Gets the feature_registry_source of this GoogleCloudAiplatformV1FeatureView.


        :return: The feature_registry_source of this GoogleCloudAiplatformV1FeatureView.
        :rtype: GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource
        """
        return self._feature_registry_source

    @feature_registry_source.setter
    def feature_registry_source(self, feature_registry_source):
        """Sets the feature_registry_source of this GoogleCloudAiplatformV1FeatureView.


        :param feature_registry_source: The feature_registry_source of this GoogleCloudAiplatformV1FeatureView.
        :type feature_registry_source: GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource
        """

        self._feature_registry_source = feature_registry_source

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1FeatureView.

        Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :return: The labels of this GoogleCloudAiplatformV1FeatureView.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1FeatureView.

        Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :param labels: The labels of this GoogleCloudAiplatformV1FeatureView.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1FeatureView.

        Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`

        :return: The name of this GoogleCloudAiplatformV1FeatureView.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1FeatureView.

        Identifier. Name of the FeatureView. Format: `projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}`

        :param name: The name of this GoogleCloudAiplatformV1FeatureView.
        :type name: str
        """

        self._name = name

    @property
    def sync_config(self):
        """Gets the sync_config of this GoogleCloudAiplatformV1FeatureView.


        :return: The sync_config of this GoogleCloudAiplatformV1FeatureView.
        :rtype: GoogleCloudAiplatformV1FeatureViewSyncConfig
        """
        return self._sync_config

    @sync_config.setter
    def sync_config(self, sync_config):
        """Sets the sync_config of this GoogleCloudAiplatformV1FeatureView.


        :param sync_config: The sync_config of this GoogleCloudAiplatformV1FeatureView.
        :type sync_config: GoogleCloudAiplatformV1FeatureViewSyncConfig
        """

        self._sync_config = sync_config

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1FeatureView.

        Output only. Timestamp when this FeatureView was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1FeatureView.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1FeatureView.

        Output only. Timestamp when this FeatureView was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1FeatureView.
        :type update_time: str
        """

        self._update_time = update_time
