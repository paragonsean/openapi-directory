# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_machine_spec import GoogleCloudAiplatformV1MachineSpec
from openapi_server import util


class GoogleCloudAiplatformV1BatchDedicatedResources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, machine_spec: GoogleCloudAiplatformV1MachineSpec=None, max_replica_count: int=None, starting_replica_count: int=None):
        """GoogleCloudAiplatformV1BatchDedicatedResources - a model defined in OpenAPI

        :param machine_spec: The machine_spec of this GoogleCloudAiplatformV1BatchDedicatedResources.
        :param max_replica_count: The max_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.
        :param starting_replica_count: The starting_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.
        """
        self.openapi_types = {
            'machine_spec': GoogleCloudAiplatformV1MachineSpec,
            'max_replica_count': int,
            'starting_replica_count': int
        }

        self.attribute_map = {
            'machine_spec': 'machineSpec',
            'max_replica_count': 'maxReplicaCount',
            'starting_replica_count': 'startingReplicaCount'
        }

        self._machine_spec = machine_spec
        self._max_replica_count = max_replica_count
        self._starting_replica_count = starting_replica_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1BatchDedicatedResources':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1BatchDedicatedResources of this GoogleCloudAiplatformV1BatchDedicatedResources.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def machine_spec(self):
        """Gets the machine_spec of this GoogleCloudAiplatformV1BatchDedicatedResources.


        :return: The machine_spec of this GoogleCloudAiplatformV1BatchDedicatedResources.
        :rtype: GoogleCloudAiplatformV1MachineSpec
        """
        return self._machine_spec

    @machine_spec.setter
    def machine_spec(self, machine_spec):
        """Sets the machine_spec of this GoogleCloudAiplatformV1BatchDedicatedResources.


        :param machine_spec: The machine_spec of this GoogleCloudAiplatformV1BatchDedicatedResources.
        :type machine_spec: GoogleCloudAiplatformV1MachineSpec
        """

        self._machine_spec = machine_spec

    @property
    def max_replica_count(self):
        """Gets the max_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.

        Immutable. The maximum number of machine replicas the batch operation may be scaled to. The default value is 10.

        :return: The max_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.
        :rtype: int
        """
        return self._max_replica_count

    @max_replica_count.setter
    def max_replica_count(self, max_replica_count):
        """Sets the max_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.

        Immutable. The maximum number of machine replicas the batch operation may be scaled to. The default value is 10.

        :param max_replica_count: The max_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.
        :type max_replica_count: int
        """

        self._max_replica_count = max_replica_count

    @property
    def starting_replica_count(self):
        """Gets the starting_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.

        Immutable. The number of machine replicas used at the start of the batch operation. If not set, Vertex AI decides starting number, not greater than max_replica_count

        :return: The starting_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.
        :rtype: int
        """
        return self._starting_replica_count

    @starting_replica_count.setter
    def starting_replica_count(self, starting_replica_count):
        """Sets the starting_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.

        Immutable. The number of machine replicas used at the start of the batch operation. If not set, Vertex AI decides starting number, not greater than max_replica_count

        :param starting_replica_count: The starting_replica_count of this GoogleCloudAiplatformV1BatchDedicatedResources.
        :type starting_replica_count: int
        """

        self._starting_replica_count = starting_replica_count
