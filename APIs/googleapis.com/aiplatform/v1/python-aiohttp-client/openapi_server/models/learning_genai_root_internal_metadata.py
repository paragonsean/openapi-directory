# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.learning_genai_root_scored_token import LearningGenaiRootScoredToken
from openapi_server import util


class LearningGenaiRootInternalMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scored_tokens: List[LearningGenaiRootScoredToken]=None):
        """LearningGenaiRootInternalMetadata - a model defined in OpenAPI

        :param scored_tokens: The scored_tokens of this LearningGenaiRootInternalMetadata.
        """
        self.openapi_types = {
            'scored_tokens': List[LearningGenaiRootScoredToken]
        }

        self.attribute_map = {
            'scored_tokens': 'scoredTokens'
        }

        self._scored_tokens = scored_tokens

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootInternalMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootInternalMetadata of this LearningGenaiRootInternalMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scored_tokens(self):
        """Gets the scored_tokens of this LearningGenaiRootInternalMetadata.


        :return: The scored_tokens of this LearningGenaiRootInternalMetadata.
        :rtype: List[LearningGenaiRootScoredToken]
        """
        return self._scored_tokens

    @scored_tokens.setter
    def scored_tokens(self, scored_tokens):
        """Sets the scored_tokens of this LearningGenaiRootInternalMetadata.


        :param scored_tokens: The scored_tokens of this LearningGenaiRootInternalMetadata.
        :type scored_tokens: List[LearningGenaiRootScoredToken]
        """

        self._scored_tokens = scored_tokens
