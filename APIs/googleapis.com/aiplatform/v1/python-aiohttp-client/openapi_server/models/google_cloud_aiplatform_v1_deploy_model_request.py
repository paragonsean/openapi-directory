# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_deployed_model import GoogleCloudAiplatformV1DeployedModel
from openapi_server import util


class GoogleCloudAiplatformV1DeployModelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deployed_model: GoogleCloudAiplatformV1DeployedModel=None, traffic_split: Dict[str, int]=None):
        """GoogleCloudAiplatformV1DeployModelRequest - a model defined in OpenAPI

        :param deployed_model: The deployed_model of this GoogleCloudAiplatformV1DeployModelRequest.
        :param traffic_split: The traffic_split of this GoogleCloudAiplatformV1DeployModelRequest.
        """
        self.openapi_types = {
            'deployed_model': GoogleCloudAiplatformV1DeployedModel,
            'traffic_split': Dict[str, int]
        }

        self.attribute_map = {
            'deployed_model': 'deployedModel',
            'traffic_split': 'trafficSplit'
        }

        self._deployed_model = deployed_model
        self._traffic_split = traffic_split

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1DeployModelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1DeployModelRequest of this GoogleCloudAiplatformV1DeployModelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deployed_model(self):
        """Gets the deployed_model of this GoogleCloudAiplatformV1DeployModelRequest.


        :return: The deployed_model of this GoogleCloudAiplatformV1DeployModelRequest.
        :rtype: GoogleCloudAiplatformV1DeployedModel
        """
        return self._deployed_model

    @deployed_model.setter
    def deployed_model(self, deployed_model):
        """Sets the deployed_model of this GoogleCloudAiplatformV1DeployModelRequest.


        :param deployed_model: The deployed_model of this GoogleCloudAiplatformV1DeployModelRequest.
        :type deployed_model: GoogleCloudAiplatformV1DeployedModel
        """

        self._deployed_model = deployed_model

    @property
    def traffic_split(self):
        """Gets the traffic_split of this GoogleCloudAiplatformV1DeployModelRequest.

        A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint's traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a \"0\" should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint's traffic_split is not updated.

        :return: The traffic_split of this GoogleCloudAiplatformV1DeployModelRequest.
        :rtype: Dict[str, int]
        """
        return self._traffic_split

    @traffic_split.setter
    def traffic_split(self, traffic_split):
        """Sets the traffic_split of this GoogleCloudAiplatformV1DeployModelRequest.

        A map from a DeployedModel's ID to the percentage of this Endpoint's traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint's traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a \"0\" should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint's traffic_split is not updated.

        :param traffic_split: The traffic_split of this GoogleCloudAiplatformV1DeployModelRequest.
        :type traffic_split: Dict[str, int]
        """

        self._traffic_split = traffic_split
