# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.learning_genai_root_routing_decision_metadata_score_based import LearningGenaiRootRoutingDecisionMetadataScoreBased
from openapi_server.models.learning_genai_root_routing_decision_metadata_token_length_based import LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
from openapi_server import util


class LearningGenaiRootRoutingDecisionMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, score_based_routing_metadata: LearningGenaiRootRoutingDecisionMetadataScoreBased=None, token_length_based_routing_metadata: LearningGenaiRootRoutingDecisionMetadataTokenLengthBased=None):
        """LearningGenaiRootRoutingDecisionMetadata - a model defined in OpenAPI

        :param score_based_routing_metadata: The score_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.
        :param token_length_based_routing_metadata: The token_length_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.
        """
        self.openapi_types = {
            'score_based_routing_metadata': LearningGenaiRootRoutingDecisionMetadataScoreBased,
            'token_length_based_routing_metadata': LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
        }

        self.attribute_map = {
            'score_based_routing_metadata': 'scoreBasedRoutingMetadata',
            'token_length_based_routing_metadata': 'tokenLengthBasedRoutingMetadata'
        }

        self._score_based_routing_metadata = score_based_routing_metadata
        self._token_length_based_routing_metadata = token_length_based_routing_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootRoutingDecisionMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootRoutingDecisionMetadata of this LearningGenaiRootRoutingDecisionMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def score_based_routing_metadata(self):
        """Gets the score_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.


        :return: The score_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.
        :rtype: LearningGenaiRootRoutingDecisionMetadataScoreBased
        """
        return self._score_based_routing_metadata

    @score_based_routing_metadata.setter
    def score_based_routing_metadata(self, score_based_routing_metadata):
        """Sets the score_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.


        :param score_based_routing_metadata: The score_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.
        :type score_based_routing_metadata: LearningGenaiRootRoutingDecisionMetadataScoreBased
        """

        self._score_based_routing_metadata = score_based_routing_metadata

    @property
    def token_length_based_routing_metadata(self):
        """Gets the token_length_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.


        :return: The token_length_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.
        :rtype: LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
        """
        return self._token_length_based_routing_metadata

    @token_length_based_routing_metadata.setter
    def token_length_based_routing_metadata(self, token_length_based_routing_metadata):
        """Sets the token_length_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.


        :param token_length_based_routing_metadata: The token_length_based_routing_metadata of this LearningGenaiRootRoutingDecisionMetadata.
        :type token_length_based_routing_metadata: LearningGenaiRootRoutingDecisionMetadataTokenLengthBased
        """

        self._token_length_based_routing_metadata = token_length_based_routing_metadata
