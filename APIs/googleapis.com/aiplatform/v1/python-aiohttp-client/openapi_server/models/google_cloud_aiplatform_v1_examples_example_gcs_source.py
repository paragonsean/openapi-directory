# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_gcs_source import GoogleCloudAiplatformV1GcsSource
from openapi_server import util


class GoogleCloudAiplatformV1ExamplesExampleGcsSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_format: str=None, gcs_source: GoogleCloudAiplatformV1GcsSource=None):
        """GoogleCloudAiplatformV1ExamplesExampleGcsSource - a model defined in OpenAPI

        :param data_format: The data_format of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.
        :param gcs_source: The gcs_source of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.
        """
        self.openapi_types = {
            'data_format': str,
            'gcs_source': GoogleCloudAiplatformV1GcsSource
        }

        self.attribute_map = {
            'data_format': 'dataFormat',
            'gcs_source': 'gcsSource'
        }

        self._data_format = data_format
        self._gcs_source = gcs_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1ExamplesExampleGcsSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1ExamplesExampleGcsSource of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_format(self):
        """Gets the data_format of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.

        The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported.

        :return: The data_format of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.
        :rtype: str
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.

        The format in which instances are given, if not specified, assume it's JSONL format. Currently only JSONL format is supported.

        :param data_format: The data_format of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.
        :type data_format: str
        """
        allowed_values = ["DATA_FORMAT_UNSPECIFIED", "JSONL"]  # noqa: E501
        if data_format not in allowed_values:
            raise ValueError(
                "Invalid value for `data_format` ({0}), must be one of {1}"
                .format(data_format, allowed_values)
            )

        self._data_format = data_format

    @property
    def gcs_source(self):
        """Gets the gcs_source of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.


        :return: The gcs_source of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.
        :rtype: GoogleCloudAiplatformV1GcsSource
        """
        return self._gcs_source

    @gcs_source.setter
    def gcs_source(self, gcs_source):
        """Sets the gcs_source of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.


        :param gcs_source: The gcs_source of this GoogleCloudAiplatformV1ExamplesExampleGcsSource.
        :type gcs_source: GoogleCloudAiplatformV1GcsSource
        """

        self._gcs_source = gcs_source
