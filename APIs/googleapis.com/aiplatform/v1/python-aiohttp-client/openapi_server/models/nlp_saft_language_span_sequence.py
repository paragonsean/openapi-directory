# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nlp_saft_language_span import NlpSaftLanguageSpan
from openapi_server import util


class NlpSaftLanguageSpanSequence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language_spans: List[NlpSaftLanguageSpan]=None, probability: float=None):
        """NlpSaftLanguageSpanSequence - a model defined in OpenAPI

        :param language_spans: The language_spans of this NlpSaftLanguageSpanSequence.
        :param probability: The probability of this NlpSaftLanguageSpanSequence.
        """
        self.openapi_types = {
            'language_spans': List[NlpSaftLanguageSpan],
            'probability': float
        }

        self.attribute_map = {
            'language_spans': 'languageSpans',
            'probability': 'probability'
        }

        self._language_spans = language_spans
        self._probability = probability

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NlpSaftLanguageSpanSequence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NlpSaftLanguageSpanSequence of this NlpSaftLanguageSpanSequence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language_spans(self):
        """Gets the language_spans of this NlpSaftLanguageSpanSequence.

        A sequence of LanguageSpan objects, each assigning a language to a subspan of the input.

        :return: The language_spans of this NlpSaftLanguageSpanSequence.
        :rtype: List[NlpSaftLanguageSpan]
        """
        return self._language_spans

    @language_spans.setter
    def language_spans(self, language_spans):
        """Sets the language_spans of this NlpSaftLanguageSpanSequence.

        A sequence of LanguageSpan objects, each assigning a language to a subspan of the input.

        :param language_spans: The language_spans of this NlpSaftLanguageSpanSequence.
        :type language_spans: List[NlpSaftLanguageSpan]
        """

        self._language_spans = language_spans

    @property
    def probability(self):
        """Gets the probability of this NlpSaftLanguageSpanSequence.

        The probability of this sequence of LanguageSpans.

        :return: The probability of this NlpSaftLanguageSpanSequence.
        :rtype: float
        """
        return self._probability

    @probability.setter
    def probability(self, probability):
        """Sets the probability of this NlpSaftLanguageSpanSequence.

        The probability of this sequence of LanguageSpans.

        :param probability: The probability of this NlpSaftLanguageSpanSequence.
        :type probability: float
        """

        self._probability = probability
