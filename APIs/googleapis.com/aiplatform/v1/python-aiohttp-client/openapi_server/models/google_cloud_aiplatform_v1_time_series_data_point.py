# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_scalar import GoogleCloudAiplatformV1Scalar
from openapi_server.models.google_cloud_aiplatform_v1_tensorboard_blob_sequence import GoogleCloudAiplatformV1TensorboardBlobSequence
from openapi_server.models.google_cloud_aiplatform_v1_tensorboard_tensor import GoogleCloudAiplatformV1TensorboardTensor
from openapi_server import util


class GoogleCloudAiplatformV1TimeSeriesDataPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blobs: GoogleCloudAiplatformV1TensorboardBlobSequence=None, scalar: GoogleCloudAiplatformV1Scalar=None, step: str=None, tensor: GoogleCloudAiplatformV1TensorboardTensor=None, wall_time: str=None):
        """GoogleCloudAiplatformV1TimeSeriesDataPoint - a model defined in OpenAPI

        :param blobs: The blobs of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :param scalar: The scalar of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :param step: The step of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :param tensor: The tensor of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :param wall_time: The wall_time of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        """
        self.openapi_types = {
            'blobs': GoogleCloudAiplatformV1TensorboardBlobSequence,
            'scalar': GoogleCloudAiplatformV1Scalar,
            'step': str,
            'tensor': GoogleCloudAiplatformV1TensorboardTensor,
            'wall_time': str
        }

        self.attribute_map = {
            'blobs': 'blobs',
            'scalar': 'scalar',
            'step': 'step',
            'tensor': 'tensor',
            'wall_time': 'wallTime'
        }

        self._blobs = blobs
        self._scalar = scalar
        self._step = step
        self._tensor = tensor
        self._wall_time = wall_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1TimeSeriesDataPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1TimeSeriesDataPoint of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blobs(self):
        """Gets the blobs of this GoogleCloudAiplatformV1TimeSeriesDataPoint.


        :return: The blobs of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :rtype: GoogleCloudAiplatformV1TensorboardBlobSequence
        """
        return self._blobs

    @blobs.setter
    def blobs(self, blobs):
        """Sets the blobs of this GoogleCloudAiplatformV1TimeSeriesDataPoint.


        :param blobs: The blobs of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :type blobs: GoogleCloudAiplatformV1TensorboardBlobSequence
        """

        self._blobs = blobs

    @property
    def scalar(self):
        """Gets the scalar of this GoogleCloudAiplatformV1TimeSeriesDataPoint.


        :return: The scalar of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :rtype: GoogleCloudAiplatformV1Scalar
        """
        return self._scalar

    @scalar.setter
    def scalar(self, scalar):
        """Sets the scalar of this GoogleCloudAiplatformV1TimeSeriesDataPoint.


        :param scalar: The scalar of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :type scalar: GoogleCloudAiplatformV1Scalar
        """

        self._scalar = scalar

    @property
    def step(self):
        """Gets the step of this GoogleCloudAiplatformV1TimeSeriesDataPoint.

        Step index of this data point within the run.

        :return: The step of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :rtype: str
        """
        return self._step

    @step.setter
    def step(self, step):
        """Sets the step of this GoogleCloudAiplatformV1TimeSeriesDataPoint.

        Step index of this data point within the run.

        :param step: The step of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :type step: str
        """

        self._step = step

    @property
    def tensor(self):
        """Gets the tensor of this GoogleCloudAiplatformV1TimeSeriesDataPoint.


        :return: The tensor of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :rtype: GoogleCloudAiplatformV1TensorboardTensor
        """
        return self._tensor

    @tensor.setter
    def tensor(self, tensor):
        """Sets the tensor of this GoogleCloudAiplatformV1TimeSeriesDataPoint.


        :param tensor: The tensor of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :type tensor: GoogleCloudAiplatformV1TensorboardTensor
        """

        self._tensor = tensor

    @property
    def wall_time(self):
        """Gets the wall_time of this GoogleCloudAiplatformV1TimeSeriesDataPoint.

        Wall clock timestamp when this data point is generated by the end user.

        :return: The wall_time of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :rtype: str
        """
        return self._wall_time

    @wall_time.setter
    def wall_time(self, wall_time):
        """Sets the wall_time of this GoogleCloudAiplatformV1TimeSeriesDataPoint.

        Wall clock timestamp when this data point is generated by the end user.

        :param wall_time: The wall_time of this GoogleCloudAiplatformV1TimeSeriesDataPoint.
        :type wall_time: str
        """

        self._wall_time = wall_time
