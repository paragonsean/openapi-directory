# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_feature_monitoring_stats_anomaly import GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly
from openapi_server import util


class GoogleCloudAiplatformV1Feature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, disable_monitoring: bool=None, etag: str=None, labels: Dict[str, str]=None, monitoring_stats_anomalies: List[GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly]=None, name: str=None, point_of_contact: str=None, update_time: str=None, value_type: str=None, version_column_name: str=None):
        """GoogleCloudAiplatformV1Feature - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudAiplatformV1Feature.
        :param description: The description of this GoogleCloudAiplatformV1Feature.
        :param disable_monitoring: The disable_monitoring of this GoogleCloudAiplatformV1Feature.
        :param etag: The etag of this GoogleCloudAiplatformV1Feature.
        :param labels: The labels of this GoogleCloudAiplatformV1Feature.
        :param monitoring_stats_anomalies: The monitoring_stats_anomalies of this GoogleCloudAiplatformV1Feature.
        :param name: The name of this GoogleCloudAiplatformV1Feature.
        :param point_of_contact: The point_of_contact of this GoogleCloudAiplatformV1Feature.
        :param update_time: The update_time of this GoogleCloudAiplatformV1Feature.
        :param value_type: The value_type of this GoogleCloudAiplatformV1Feature.
        :param version_column_name: The version_column_name of this GoogleCloudAiplatformV1Feature.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'disable_monitoring': bool,
            'etag': str,
            'labels': Dict[str, str],
            'monitoring_stats_anomalies': List[GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly],
            'name': str,
            'point_of_contact': str,
            'update_time': str,
            'value_type': str,
            'version_column_name': str
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'disable_monitoring': 'disableMonitoring',
            'etag': 'etag',
            'labels': 'labels',
            'monitoring_stats_anomalies': 'monitoringStatsAnomalies',
            'name': 'name',
            'point_of_contact': 'pointOfContact',
            'update_time': 'updateTime',
            'value_type': 'valueType',
            'version_column_name': 'versionColumnName'
        }

        self._create_time = create_time
        self._description = description
        self._disable_monitoring = disable_monitoring
        self._etag = etag
        self._labels = labels
        self._monitoring_stats_anomalies = monitoring_stats_anomalies
        self._name = name
        self._point_of_contact = point_of_contact
        self._update_time = update_time
        self._value_type = value_type
        self._version_column_name = version_column_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1Feature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1Feature of this GoogleCloudAiplatformV1Feature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1Feature.

        Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.

        :return: The create_time of this GoogleCloudAiplatformV1Feature.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1Feature.

        Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1Feature.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudAiplatformV1Feature.

        Description of the Feature.

        :return: The description of this GoogleCloudAiplatformV1Feature.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudAiplatformV1Feature.

        Description of the Feature.

        :param description: The description of this GoogleCloudAiplatformV1Feature.
        :type description: str
        """

        self._description = description

    @property
    def disable_monitoring(self):
        """Gets the disable_monitoring of this GoogleCloudAiplatformV1Feature.

        Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.

        :return: The disable_monitoring of this GoogleCloudAiplatformV1Feature.
        :rtype: bool
        """
        return self._disable_monitoring

    @disable_monitoring.setter
    def disable_monitoring(self, disable_monitoring):
        """Sets the disable_monitoring of this GoogleCloudAiplatformV1Feature.

        Optional. Only applicable for Vertex AI Feature Store (Legacy). If not set, use the monitoring_config defined for the EntityType this Feature belongs to. Only Features with type (Feature.ValueType) BOOL, STRING, DOUBLE or INT64 can enable monitoring. If set to true, all types of data monitoring are disabled despite the config on EntityType.

        :param disable_monitoring: The disable_monitoring of this GoogleCloudAiplatformV1Feature.
        :type disable_monitoring: bool
        """

        self._disable_monitoring = disable_monitoring

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1Feature.

        Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1Feature.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1Feature.

        Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1Feature.
        :type etag: str
        """

        self._etag = etag

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1Feature.

        Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :return: The labels of this GoogleCloudAiplatformV1Feature.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1Feature.

        Optional. The labels with user-defined metadata to organize your Features. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one Feature (System labels are excluded).\" System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.

        :param labels: The labels of this GoogleCloudAiplatformV1Feature.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def monitoring_stats_anomalies(self):
        """Gets the monitoring_stats_anomalies of this GoogleCloudAiplatformV1Feature.

        Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.

        :return: The monitoring_stats_anomalies of this GoogleCloudAiplatformV1Feature.
        :rtype: List[GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly]
        """
        return self._monitoring_stats_anomalies

    @monitoring_stats_anomalies.setter
    def monitoring_stats_anomalies(self, monitoring_stats_anomalies):
        """Sets the monitoring_stats_anomalies of this GoogleCloudAiplatformV1Feature.

        Output only. Only applicable for Vertex AI Feature Store (Legacy). The list of historical stats and anomalies with specified objectives.

        :param monitoring_stats_anomalies: The monitoring_stats_anomalies of this GoogleCloudAiplatformV1Feature.
        :type monitoring_stats_anomalies: List[GoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly]
        """

        self._monitoring_stats_anomalies = monitoring_stats_anomalies

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1Feature.

        Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.

        :return: The name of this GoogleCloudAiplatformV1Feature.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1Feature.

        Immutable. Name of the Feature. Format: `projects/{project}/locations/{location}/featurestores/{featurestore}/entityTypes/{entity_type}/features/{feature}` `projects/{project}/locations/{location}/featureGroups/{feature_group}/features/{feature}` The last part feature is assigned by the client. The feature can be up to 64 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscore(_), and ASCII digits 0-9 starting with a letter. The value will be unique given an entity type.

        :param name: The name of this GoogleCloudAiplatformV1Feature.
        :type name: str
        """

        self._name = name

    @property
    def point_of_contact(self):
        """Gets the point_of_contact of this GoogleCloudAiplatformV1Feature.

        Entity responsible for maintaining this feature. Can be comma separated list of email addresses or URIs.

        :return: The point_of_contact of this GoogleCloudAiplatformV1Feature.
        :rtype: str
        """
        return self._point_of_contact

    @point_of_contact.setter
    def point_of_contact(self, point_of_contact):
        """Sets the point_of_contact of this GoogleCloudAiplatformV1Feature.

        Entity responsible for maintaining this feature. Can be comma separated list of email addresses or URIs.

        :param point_of_contact: The point_of_contact of this GoogleCloudAiplatformV1Feature.
        :type point_of_contact: str
        """

        self._point_of_contact = point_of_contact

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1Feature.

        Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.

        :return: The update_time of this GoogleCloudAiplatformV1Feature.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1Feature.

        Output only. Only applicable for Vertex AI Feature Store (Legacy). Timestamp when this EntityType was most recently updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1Feature.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def value_type(self):
        """Gets the value_type of this GoogleCloudAiplatformV1Feature.

        Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.

        :return: The value_type of this GoogleCloudAiplatformV1Feature.
        :rtype: str
        """
        return self._value_type

    @value_type.setter
    def value_type(self, value_type):
        """Sets the value_type of this GoogleCloudAiplatformV1Feature.

        Immutable. Only applicable for Vertex AI Feature Store (Legacy). Type of Feature value.

        :param value_type: The value_type of this GoogleCloudAiplatformV1Feature.
        :type value_type: str
        """
        allowed_values = ["VALUE_TYPE_UNSPECIFIED", "BOOL", "BOOL_ARRAY", "DOUBLE", "DOUBLE_ARRAY", "INT64", "INT64_ARRAY", "STRING", "STRING_ARRAY", "BYTES"]  # noqa: E501
        if value_type not in allowed_values:
            raise ValueError(
                "Invalid value for `value_type` ({0}), must be one of {1}"
                .format(value_type, allowed_values)
            )

        self._value_type = value_type

    @property
    def version_column_name(self):
        """Gets the version_column_name of this GoogleCloudAiplatformV1Feature.

        Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.

        :return: The version_column_name of this GoogleCloudAiplatformV1Feature.
        :rtype: str
        """
        return self._version_column_name

    @version_column_name.setter
    def version_column_name(self, version_column_name):
        """Sets the version_column_name of this GoogleCloudAiplatformV1Feature.

        Only applicable for Vertex AI Feature Store. The name of the BigQuery Table/View column hosting data for this version. If no value is provided, will use feature_id.

        :param version_column_name: The version_column_name of this GoogleCloudAiplatformV1Feature.
        :type version_column_name: str
        """

        self._version_column_name = version_column_name
