# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_nearest_neighbor_search_operation_metadata_record_error import GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError
from openapi_server import util


class GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invalid_record_count: str=None, partial_errors: List[GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError]=None, source_gcs_uri: str=None, valid_record_count: str=None):
        """GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats - a model defined in OpenAPI

        :param invalid_record_count: The invalid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :param partial_errors: The partial_errors of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :param source_gcs_uri: The source_gcs_uri of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :param valid_record_count: The valid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        """
        self.openapi_types = {
            'invalid_record_count': str,
            'partial_errors': List[GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError],
            'source_gcs_uri': str,
            'valid_record_count': str
        }

        self.attribute_map = {
            'invalid_record_count': 'invalidRecordCount',
            'partial_errors': 'partialErrors',
            'source_gcs_uri': 'sourceGcsUri',
            'valid_record_count': 'validRecordCount'
        }

        self._invalid_record_count = invalid_record_count
        self._partial_errors = partial_errors
        self._source_gcs_uri = source_gcs_uri
        self._valid_record_count = valid_record_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invalid_record_count(self):
        """Gets the invalid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.

        Number of records in this file we skipped due to validate errors.

        :return: The invalid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :rtype: str
        """
        return self._invalid_record_count

    @invalid_record_count.setter
    def invalid_record_count(self, invalid_record_count):
        """Sets the invalid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.

        Number of records in this file we skipped due to validate errors.

        :param invalid_record_count: The invalid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :type invalid_record_count: str
        """

        self._invalid_record_count = invalid_record_count

    @property
    def partial_errors(self):
        """Gets the partial_errors of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.

        The detail information of the partial failures encountered for those invalid records that couldn't be parsed. Up to 50 partial errors will be reported.

        :return: The partial_errors of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :rtype: List[GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError]
        """
        return self._partial_errors

    @partial_errors.setter
    def partial_errors(self, partial_errors):
        """Sets the partial_errors of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.

        The detail information of the partial failures encountered for those invalid records that couldn't be parsed. Up to 50 partial errors will be reported.

        :param partial_errors: The partial_errors of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :type partial_errors: List[GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataRecordError]
        """

        self._partial_errors = partial_errors

    @property
    def source_gcs_uri(self):
        """Gets the source_gcs_uri of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.

        Cloud Storage URI pointing to the original file in user's bucket.

        :return: The source_gcs_uri of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :rtype: str
        """
        return self._source_gcs_uri

    @source_gcs_uri.setter
    def source_gcs_uri(self, source_gcs_uri):
        """Sets the source_gcs_uri of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.

        Cloud Storage URI pointing to the original file in user's bucket.

        :param source_gcs_uri: The source_gcs_uri of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :type source_gcs_uri: str
        """

        self._source_gcs_uri = source_gcs_uri

    @property
    def valid_record_count(self):
        """Gets the valid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.

        Number of records in this file that were successfully processed.

        :return: The valid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :rtype: str
        """
        return self._valid_record_count

    @valid_record_count.setter
    def valid_record_count(self, valid_record_count):
        """Sets the valid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.

        Number of records in this file that were successfully processed.

        :param valid_record_count: The valid_record_count of this GoogleCloudAiplatformV1NearestNeighborSearchOperationMetadataContentValidationStats.
        :type valid_record_count: str
        """

        self._valid_record_count = valid_record_count
