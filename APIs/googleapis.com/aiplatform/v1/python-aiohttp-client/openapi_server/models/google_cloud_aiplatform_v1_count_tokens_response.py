# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1CountTokensResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, total_billable_characters: int=None, total_tokens: int=None):
        """GoogleCloudAiplatformV1CountTokensResponse - a model defined in OpenAPI

        :param total_billable_characters: The total_billable_characters of this GoogleCloudAiplatformV1CountTokensResponse.
        :param total_tokens: The total_tokens of this GoogleCloudAiplatformV1CountTokensResponse.
        """
        self.openapi_types = {
            'total_billable_characters': int,
            'total_tokens': int
        }

        self.attribute_map = {
            'total_billable_characters': 'totalBillableCharacters',
            'total_tokens': 'totalTokens'
        }

        self._total_billable_characters = total_billable_characters
        self._total_tokens = total_tokens

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1CountTokensResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1CountTokensResponse of this GoogleCloudAiplatformV1CountTokensResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def total_billable_characters(self):
        """Gets the total_billable_characters of this GoogleCloudAiplatformV1CountTokensResponse.

        The total number of billable characters counted across all instances from the request.

        :return: The total_billable_characters of this GoogleCloudAiplatformV1CountTokensResponse.
        :rtype: int
        """
        return self._total_billable_characters

    @total_billable_characters.setter
    def total_billable_characters(self, total_billable_characters):
        """Sets the total_billable_characters of this GoogleCloudAiplatformV1CountTokensResponse.

        The total number of billable characters counted across all instances from the request.

        :param total_billable_characters: The total_billable_characters of this GoogleCloudAiplatformV1CountTokensResponse.
        :type total_billable_characters: int
        """

        self._total_billable_characters = total_billable_characters

    @property
    def total_tokens(self):
        """Gets the total_tokens of this GoogleCloudAiplatformV1CountTokensResponse.

        The total number of tokens counted across all instances from the request.

        :return: The total_tokens of this GoogleCloudAiplatformV1CountTokensResponse.
        :rtype: int
        """
        return self._total_tokens

    @total_tokens.setter
    def total_tokens(self, total_tokens):
        """Sets the total_tokens of this GoogleCloudAiplatformV1CountTokensResponse.

        The total number of tokens counted across all instances from the request.

        :param total_tokens: The total_tokens of this GoogleCloudAiplatformV1CountTokensResponse.
        :type total_tokens: int
        """

        self._total_tokens = total_tokens
