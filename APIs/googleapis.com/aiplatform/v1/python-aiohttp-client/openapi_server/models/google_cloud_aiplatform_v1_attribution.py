# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1Attribution(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approximation_error: float=None, baseline_output_value: float=None, feature_attributions: object=None, instance_output_value: float=None, output_display_name: str=None, output_index: List[int]=None, output_name: str=None):
        """GoogleCloudAiplatformV1Attribution - a model defined in OpenAPI

        :param approximation_error: The approximation_error of this GoogleCloudAiplatformV1Attribution.
        :param baseline_output_value: The baseline_output_value of this GoogleCloudAiplatformV1Attribution.
        :param feature_attributions: The feature_attributions of this GoogleCloudAiplatformV1Attribution.
        :param instance_output_value: The instance_output_value of this GoogleCloudAiplatformV1Attribution.
        :param output_display_name: The output_display_name of this GoogleCloudAiplatformV1Attribution.
        :param output_index: The output_index of this GoogleCloudAiplatformV1Attribution.
        :param output_name: The output_name of this GoogleCloudAiplatformV1Attribution.
        """
        self.openapi_types = {
            'approximation_error': float,
            'baseline_output_value': float,
            'feature_attributions': object,
            'instance_output_value': float,
            'output_display_name': str,
            'output_index': List[int],
            'output_name': str
        }

        self.attribute_map = {
            'approximation_error': 'approximationError',
            'baseline_output_value': 'baselineOutputValue',
            'feature_attributions': 'featureAttributions',
            'instance_output_value': 'instanceOutputValue',
            'output_display_name': 'outputDisplayName',
            'output_index': 'outputIndex',
            'output_name': 'outputName'
        }

        self._approximation_error = approximation_error
        self._baseline_output_value = baseline_output_value
        self._feature_attributions = feature_attributions
        self._instance_output_value = instance_output_value
        self._output_display_name = output_display_name
        self._output_index = output_index
        self._output_name = output_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1Attribution':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1Attribution of this GoogleCloudAiplatformV1Attribution.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approximation_error(self):
        """Gets the approximation_error of this GoogleCloudAiplatformV1Attribution.

        Output only. Error of feature_attributions caused by approximation used in the explanation method. Lower value means more precise attributions. * For Sampled Shapley attribution, increasing path_count might reduce the error. * For Integrated Gradients attribution, increasing step_count might reduce the error. * For XRAI attribution, increasing step_count might reduce the error. See [this introduction](/vertex-ai/docs/explainable-ai/overview) for more information.

        :return: The approximation_error of this GoogleCloudAiplatformV1Attribution.
        :rtype: float
        """
        return self._approximation_error

    @approximation_error.setter
    def approximation_error(self, approximation_error):
        """Sets the approximation_error of this GoogleCloudAiplatformV1Attribution.

        Output only. Error of feature_attributions caused by approximation used in the explanation method. Lower value means more precise attributions. * For Sampled Shapley attribution, increasing path_count might reduce the error. * For Integrated Gradients attribution, increasing step_count might reduce the error. * For XRAI attribution, increasing step_count might reduce the error. See [this introduction](/vertex-ai/docs/explainable-ai/overview) for more information.

        :param approximation_error: The approximation_error of this GoogleCloudAiplatformV1Attribution.
        :type approximation_error: float
        """

        self._approximation_error = approximation_error

    @property
    def baseline_output_value(self):
        """Gets the baseline_output_value of this GoogleCloudAiplatformV1Attribution.

        Output only. Model predicted output if the input instance is constructed from the baselines of all the features defined in ExplanationMetadata.inputs. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model's predicted output has multiple dimensions (rank > 1), this is the value in the output located by output_index. If there are multiple baselines, their output values are averaged.

        :return: The baseline_output_value of this GoogleCloudAiplatformV1Attribution.
        :rtype: float
        """
        return self._baseline_output_value

    @baseline_output_value.setter
    def baseline_output_value(self, baseline_output_value):
        """Sets the baseline_output_value of this GoogleCloudAiplatformV1Attribution.

        Output only. Model predicted output if the input instance is constructed from the baselines of all the features defined in ExplanationMetadata.inputs. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model's predicted output has multiple dimensions (rank > 1), this is the value in the output located by output_index. If there are multiple baselines, their output values are averaged.

        :param baseline_output_value: The baseline_output_value of this GoogleCloudAiplatformV1Attribution.
        :type baseline_output_value: float
        """

        self._baseline_output_value = baseline_output_value

    @property
    def feature_attributions(self):
        """Gets the feature_attributions of this GoogleCloudAiplatformV1Attribution.

        Output only. Attributions of each explained feature. Features are extracted from the prediction instances according to explanation metadata for inputs. The value is a struct, whose keys are the name of the feature. The values are how much the feature in the instance contributed to the predicted result. The format of the value is determined by the feature's input format: * If the feature is a scalar value, the attribution value is a floating number. * If the feature is an array of scalar values, the attribution value is an array. * If the feature is a struct, the attribution value is a struct. The keys in the attribution value struct are the same as the keys in the feature struct. The formats of the values in the attribution struct are determined by the formats of the values in the feature struct. The ExplanationMetadata.feature_attributions_schema_uri field, pointed to by the ExplanationSpec field of the Endpoint.deployed_models object, points to the schema file that describes the features and their attribution values (if it is populated).

        :return: The feature_attributions of this GoogleCloudAiplatformV1Attribution.
        :rtype: object
        """
        return self._feature_attributions

    @feature_attributions.setter
    def feature_attributions(self, feature_attributions):
        """Sets the feature_attributions of this GoogleCloudAiplatformV1Attribution.

        Output only. Attributions of each explained feature. Features are extracted from the prediction instances according to explanation metadata for inputs. The value is a struct, whose keys are the name of the feature. The values are how much the feature in the instance contributed to the predicted result. The format of the value is determined by the feature's input format: * If the feature is a scalar value, the attribution value is a floating number. * If the feature is an array of scalar values, the attribution value is an array. * If the feature is a struct, the attribution value is a struct. The keys in the attribution value struct are the same as the keys in the feature struct. The formats of the values in the attribution struct are determined by the formats of the values in the feature struct. The ExplanationMetadata.feature_attributions_schema_uri field, pointed to by the ExplanationSpec field of the Endpoint.deployed_models object, points to the schema file that describes the features and their attribution values (if it is populated).

        :param feature_attributions: The feature_attributions of this GoogleCloudAiplatformV1Attribution.
        :type feature_attributions: object
        """

        self._feature_attributions = feature_attributions

    @property
    def instance_output_value(self):
        """Gets the instance_output_value of this GoogleCloudAiplatformV1Attribution.

        Output only. Model predicted output on the corresponding explanation instance. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model predicted output has multiple dimensions, this is the value in the output located by output_index.

        :return: The instance_output_value of this GoogleCloudAiplatformV1Attribution.
        :rtype: float
        """
        return self._instance_output_value

    @instance_output_value.setter
    def instance_output_value(self, instance_output_value):
        """Sets the instance_output_value of this GoogleCloudAiplatformV1Attribution.

        Output only. Model predicted output on the corresponding explanation instance. The field name of the output is determined by the key in ExplanationMetadata.outputs. If the Model predicted output has multiple dimensions, this is the value in the output located by output_index.

        :param instance_output_value: The instance_output_value of this GoogleCloudAiplatformV1Attribution.
        :type instance_output_value: float
        """

        self._instance_output_value = instance_output_value

    @property
    def output_display_name(self):
        """Gets the output_display_name of this GoogleCloudAiplatformV1Attribution.

        Output only. The display name of the output identified by output_index. For example, the predicted class name by a multi-classification Model. This field is only populated iff the Model predicts display names as a separate field along with the explained output. The predicted display name must has the same shape of the explained output, and can be located using output_index.

        :return: The output_display_name of this GoogleCloudAiplatformV1Attribution.
        :rtype: str
        """
        return self._output_display_name

    @output_display_name.setter
    def output_display_name(self, output_display_name):
        """Sets the output_display_name of this GoogleCloudAiplatformV1Attribution.

        Output only. The display name of the output identified by output_index. For example, the predicted class name by a multi-classification Model. This field is only populated iff the Model predicts display names as a separate field along with the explained output. The predicted display name must has the same shape of the explained output, and can be located using output_index.

        :param output_display_name: The output_display_name of this GoogleCloudAiplatformV1Attribution.
        :type output_display_name: str
        """

        self._output_display_name = output_display_name

    @property
    def output_index(self):
        """Gets the output_index of this GoogleCloudAiplatformV1Attribution.

        Output only. The index that locates the explained prediction output. If the prediction output is a scalar value, output_index is not populated. If the prediction output has multiple dimensions, the length of the output_index list is the same as the number of dimensions of the output. The i-th element in output_index is the element index of the i-th dimension of the output vector. Indices start from 0.

        :return: The output_index of this GoogleCloudAiplatformV1Attribution.
        :rtype: List[int]
        """
        return self._output_index

    @output_index.setter
    def output_index(self, output_index):
        """Sets the output_index of this GoogleCloudAiplatformV1Attribution.

        Output only. The index that locates the explained prediction output. If the prediction output is a scalar value, output_index is not populated. If the prediction output has multiple dimensions, the length of the output_index list is the same as the number of dimensions of the output. The i-th element in output_index is the element index of the i-th dimension of the output vector. Indices start from 0.

        :param output_index: The output_index of this GoogleCloudAiplatformV1Attribution.
        :type output_index: List[int]
        """

        self._output_index = output_index

    @property
    def output_name(self):
        """Gets the output_name of this GoogleCloudAiplatformV1Attribution.

        Output only. Name of the explain output. Specified as the key in ExplanationMetadata.outputs.

        :return: The output_name of this GoogleCloudAiplatformV1Attribution.
        :rtype: str
        """
        return self._output_name

    @output_name.setter
    def output_name(self, output_name):
        """Sets the output_name of this GoogleCloudAiplatformV1Attribution.

        Output only. Name of the explain output. Specified as the key in ExplanationMetadata.outputs.

        :param output_name: The output_name of this GoogleCloudAiplatformV1Attribution.
        :type output_name: str
        """

        self._output_name = output_name
