# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudAiplatformV1ExportFilterSplit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, test_filter: str=None, training_filter: str=None, validation_filter: str=None):
        """GoogleCloudAiplatformV1ExportFilterSplit - a model defined in OpenAPI

        :param test_filter: The test_filter of this GoogleCloudAiplatformV1ExportFilterSplit.
        :param training_filter: The training_filter of this GoogleCloudAiplatformV1ExportFilterSplit.
        :param validation_filter: The validation_filter of this GoogleCloudAiplatformV1ExportFilterSplit.
        """
        self.openapi_types = {
            'test_filter': str,
            'training_filter': str,
            'validation_filter': str
        }

        self.attribute_map = {
            'test_filter': 'testFilter',
            'training_filter': 'trainingFilter',
            'validation_filter': 'validationFilter'
        }

        self._test_filter = test_filter
        self._training_filter = training_filter
        self._validation_filter = validation_filter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1ExportFilterSplit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1ExportFilterSplit of this GoogleCloudAiplatformV1ExportFilterSplit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def test_filter(self):
        """Gets the test_filter of this GoogleCloudAiplatformV1ExportFilterSplit.

        Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.

        :return: The test_filter of this GoogleCloudAiplatformV1ExportFilterSplit.
        :rtype: str
        """
        return self._test_filter

    @test_filter.setter
    def test_filter(self, test_filter):
        """Sets the test_filter of this GoogleCloudAiplatformV1ExportFilterSplit.

        Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.

        :param test_filter: The test_filter of this GoogleCloudAiplatformV1ExportFilterSplit.
        :type test_filter: str
        """

        self._test_filter = test_filter

    @property
    def training_filter(self):
        """Gets the training_filter of this GoogleCloudAiplatformV1ExportFilterSplit.

        Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.

        :return: The training_filter of this GoogleCloudAiplatformV1ExportFilterSplit.
        :rtype: str
        """
        return self._training_filter

    @training_filter.setter
    def training_filter(self, training_filter):
        """Sets the training_filter of this GoogleCloudAiplatformV1ExportFilterSplit.

        Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.

        :param training_filter: The training_filter of this GoogleCloudAiplatformV1ExportFilterSplit.
        :type training_filter: str
        """

        self._training_filter = training_filter

    @property
    def validation_filter(self):
        """Gets the validation_filter of this GoogleCloudAiplatformV1ExportFilterSplit.

        Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.

        :return: The validation_filter of this GoogleCloudAiplatformV1ExportFilterSplit.
        :rtype: str
        """
        return self._validation_filter

    @validation_filter.setter
    def validation_filter(self, validation_filter):
        """Sets the validation_filter of this GoogleCloudAiplatformV1ExportFilterSplit.

        Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.

        :param validation_filter: The validation_filter of this GoogleCloudAiplatformV1ExportFilterSplit.
        :type validation_filter: str
        """

        self._validation_filter = validation_filter
