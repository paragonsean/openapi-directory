# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_user_action_reference import GoogleCloudAiplatformV1UserActionReference
from openapi_server import util


class GoogleCloudAiplatformV1Annotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_source: GoogleCloudAiplatformV1UserActionReference=None, create_time: str=None, etag: str=None, labels: Dict[str, str]=None, name: str=None, payload: object=None, payload_schema_uri: str=None, update_time: str=None):
        """GoogleCloudAiplatformV1Annotation - a model defined in OpenAPI

        :param annotation_source: The annotation_source of this GoogleCloudAiplatformV1Annotation.
        :param create_time: The create_time of this GoogleCloudAiplatformV1Annotation.
        :param etag: The etag of this GoogleCloudAiplatformV1Annotation.
        :param labels: The labels of this GoogleCloudAiplatformV1Annotation.
        :param name: The name of this GoogleCloudAiplatformV1Annotation.
        :param payload: The payload of this GoogleCloudAiplatformV1Annotation.
        :param payload_schema_uri: The payload_schema_uri of this GoogleCloudAiplatformV1Annotation.
        :param update_time: The update_time of this GoogleCloudAiplatformV1Annotation.
        """
        self.openapi_types = {
            'annotation_source': GoogleCloudAiplatformV1UserActionReference,
            'create_time': str,
            'etag': str,
            'labels': Dict[str, str],
            'name': str,
            'payload': object,
            'payload_schema_uri': str,
            'update_time': str
        }

        self.attribute_map = {
            'annotation_source': 'annotationSource',
            'create_time': 'createTime',
            'etag': 'etag',
            'labels': 'labels',
            'name': 'name',
            'payload': 'payload',
            'payload_schema_uri': 'payloadSchemaUri',
            'update_time': 'updateTime'
        }

        self._annotation_source = annotation_source
        self._create_time = create_time
        self._etag = etag
        self._labels = labels
        self._name = name
        self._payload = payload
        self._payload_schema_uri = payload_schema_uri
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1Annotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1Annotation of this GoogleCloudAiplatformV1Annotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_source(self):
        """Gets the annotation_source of this GoogleCloudAiplatformV1Annotation.


        :return: The annotation_source of this GoogleCloudAiplatformV1Annotation.
        :rtype: GoogleCloudAiplatformV1UserActionReference
        """
        return self._annotation_source

    @annotation_source.setter
    def annotation_source(self, annotation_source):
        """Sets the annotation_source of this GoogleCloudAiplatformV1Annotation.


        :param annotation_source: The annotation_source of this GoogleCloudAiplatformV1Annotation.
        :type annotation_source: GoogleCloudAiplatformV1UserActionReference
        """

        self._annotation_source = annotation_source

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudAiplatformV1Annotation.

        Output only. Timestamp when this Annotation was created.

        :return: The create_time of this GoogleCloudAiplatformV1Annotation.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudAiplatformV1Annotation.

        Output only. Timestamp when this Annotation was created.

        :param create_time: The create_time of this GoogleCloudAiplatformV1Annotation.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def etag(self):
        """Gets the etag of this GoogleCloudAiplatformV1Annotation.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :return: The etag of this GoogleCloudAiplatformV1Annotation.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this GoogleCloudAiplatformV1Annotation.

        Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.

        :param etag: The etag of this GoogleCloudAiplatformV1Annotation.
        :type etag: str
        """

        self._etag = etag

    @property
    def labels(self):
        """Gets the labels of this GoogleCloudAiplatformV1Annotation.

        Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Annotation: * \"aiplatform.googleapis.com/annotation_set_name\": optional, name of the UI's annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * \"aiplatform.googleapis.com/payload_schema\": output only, its value is the payload_schema's title.

        :return: The labels of this GoogleCloudAiplatformV1Annotation.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleCloudAiplatformV1Annotation.

        Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Annotation: * \"aiplatform.googleapis.com/annotation_set_name\": optional, name of the UI's annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * \"aiplatform.googleapis.com/payload_schema\": output only, its value is the payload_schema's title.

        :param labels: The labels of this GoogleCloudAiplatformV1Annotation.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this GoogleCloudAiplatformV1Annotation.

        Output only. Resource name of the Annotation.

        :return: The name of this GoogleCloudAiplatformV1Annotation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudAiplatformV1Annotation.

        Output only. Resource name of the Annotation.

        :param name: The name of this GoogleCloudAiplatformV1Annotation.
        :type name: str
        """

        self._name = name

    @property
    def payload(self):
        """Gets the payload of this GoogleCloudAiplatformV1Annotation.

        Required. The schema of the payload can be found in payload_schema.

        :return: The payload of this GoogleCloudAiplatformV1Annotation.
        :rtype: object
        """
        return self._payload

    @payload.setter
    def payload(self, payload):
        """Sets the payload of this GoogleCloudAiplatformV1Annotation.

        Required. The schema of the payload can be found in payload_schema.

        :param payload: The payload of this GoogleCloudAiplatformV1Annotation.
        :type payload: object
        """

        self._payload = payload

    @property
    def payload_schema_uri(self):
        """Gets the payload_schema_uri of this GoogleCloudAiplatformV1Annotation.

        Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with the parent Dataset's metadata.

        :return: The payload_schema_uri of this GoogleCloudAiplatformV1Annotation.
        :rtype: str
        """
        return self._payload_schema_uri

    @payload_schema_uri.setter
    def payload_schema_uri(self, payload_schema_uri):
        """Sets the payload_schema_uri of this GoogleCloudAiplatformV1Annotation.

        Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with the parent Dataset's metadata.

        :param payload_schema_uri: The payload_schema_uri of this GoogleCloudAiplatformV1Annotation.
        :type payload_schema_uri: str
        """

        self._payload_schema_uri = payload_schema_uri

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudAiplatformV1Annotation.

        Output only. Timestamp when this Annotation was last updated.

        :return: The update_time of this GoogleCloudAiplatformV1Annotation.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudAiplatformV1Annotation.

        Output only. Timestamp when this Annotation was last updated.

        :param update_time: The update_time of this GoogleCloudAiplatformV1Annotation.
        :type update_time: str
        """

        self._update_time = update_time
