# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.learning_genai_root_data_provider_output import LearningGenaiRootDataProviderOutput
from openapi_server.models.learning_genai_root_metric_output import LearningGenaiRootMetricOutput
from openapi_server import util


class LearningGenaiRootClassifierState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_provider_output: List[LearningGenaiRootDataProviderOutput]=None, metric_output: List[LearningGenaiRootMetricOutput]=None):
        """LearningGenaiRootClassifierState - a model defined in OpenAPI

        :param data_provider_output: The data_provider_output of this LearningGenaiRootClassifierState.
        :param metric_output: The metric_output of this LearningGenaiRootClassifierState.
        """
        self.openapi_types = {
            'data_provider_output': List[LearningGenaiRootDataProviderOutput],
            'metric_output': List[LearningGenaiRootMetricOutput]
        }

        self.attribute_map = {
            'data_provider_output': 'dataProviderOutput',
            'metric_output': 'metricOutput'
        }

        self._data_provider_output = data_provider_output
        self._metric_output = metric_output

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LearningGenaiRootClassifierState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LearningGenaiRootClassifierState of this LearningGenaiRootClassifierState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_provider_output(self):
        """Gets the data_provider_output of this LearningGenaiRootClassifierState.


        :return: The data_provider_output of this LearningGenaiRootClassifierState.
        :rtype: List[LearningGenaiRootDataProviderOutput]
        """
        return self._data_provider_output

    @data_provider_output.setter
    def data_provider_output(self, data_provider_output):
        """Sets the data_provider_output of this LearningGenaiRootClassifierState.


        :param data_provider_output: The data_provider_output of this LearningGenaiRootClassifierState.
        :type data_provider_output: List[LearningGenaiRootDataProviderOutput]
        """

        self._data_provider_output = data_provider_output

    @property
    def metric_output(self):
        """Gets the metric_output of this LearningGenaiRootClassifierState.


        :return: The metric_output of this LearningGenaiRootClassifierState.
        :rtype: List[LearningGenaiRootMetricOutput]
        """
        return self._metric_output

    @metric_output.setter
    def metric_output(self, metric_output):
        """Sets the metric_output of this LearningGenaiRootClassifierState.


        :param metric_output: The metric_output of this LearningGenaiRootClassifierState.
        :type metric_output: List[LearningGenaiRootMetricOutput]
        """

        self._metric_output = metric_output
