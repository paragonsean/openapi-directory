# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_feature_view_data_key import GoogleCloudAiplatformV1FeatureViewDataKey
from openapi_server import util


class GoogleCloudAiplatformV1FetchFeatureValuesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_format: str=None, data_key: GoogleCloudAiplatformV1FeatureViewDataKey=None):
        """GoogleCloudAiplatformV1FetchFeatureValuesRequest - a model defined in OpenAPI

        :param data_format: The data_format of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.
        :param data_key: The data_key of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.
        """
        self.openapi_types = {
            'data_format': str,
            'data_key': GoogleCloudAiplatformV1FeatureViewDataKey
        }

        self.attribute_map = {
            'data_format': 'dataFormat',
            'data_key': 'dataKey'
        }

        self._data_format = data_format
        self._data_key = data_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1FetchFeatureValuesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1FetchFeatureValuesRequest of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_format(self):
        """Gets the data_format of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.

        Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE will be used.

        :return: The data_format of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.
        :rtype: str
        """
        return self._data_format

    @data_format.setter
    def data_format(self, data_format):
        """Sets the data_format of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.

        Optional. Response data format. If not set, FeatureViewDataFormat.KEY_VALUE will be used.

        :param data_format: The data_format of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.
        :type data_format: str
        """
        allowed_values = ["FEATURE_VIEW_DATA_FORMAT_UNSPECIFIED", "KEY_VALUE", "PROTO_STRUCT"]  # noqa: E501
        if data_format not in allowed_values:
            raise ValueError(
                "Invalid value for `data_format` ({0}), must be one of {1}"
                .format(data_format, allowed_values)
            )

        self._data_format = data_format

    @property
    def data_key(self):
        """Gets the data_key of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.


        :return: The data_key of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.
        :rtype: GoogleCloudAiplatformV1FeatureViewDataKey
        """
        return self._data_key

    @data_key.setter
    def data_key(self, data_key):
        """Sets the data_key of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.


        :param data_key: The data_key of this GoogleCloudAiplatformV1FetchFeatureValuesRequest.
        :type data_key: GoogleCloudAiplatformV1FeatureViewDataKey
        """

        self._data_key = data_key
