# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_aiplatform_v1_export_data_config import GoogleCloudAiplatformV1ExportDataConfig
from openapi_server import util


class GoogleCloudAiplatformV1ExportDataRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, export_config: GoogleCloudAiplatformV1ExportDataConfig=None):
        """GoogleCloudAiplatformV1ExportDataRequest - a model defined in OpenAPI

        :param export_config: The export_config of this GoogleCloudAiplatformV1ExportDataRequest.
        """
        self.openapi_types = {
            'export_config': GoogleCloudAiplatformV1ExportDataConfig
        }

        self.attribute_map = {
            'export_config': 'exportConfig'
        }

        self._export_config = export_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudAiplatformV1ExportDataRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudAiplatformV1ExportDataRequest of this GoogleCloudAiplatformV1ExportDataRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def export_config(self):
        """Gets the export_config of this GoogleCloudAiplatformV1ExportDataRequest.


        :return: The export_config of this GoogleCloudAiplatformV1ExportDataRequest.
        :rtype: GoogleCloudAiplatformV1ExportDataConfig
        """
        return self._export_config

    @export_config.setter
    def export_config(self, export_config):
        """Sets the export_config of this GoogleCloudAiplatformV1ExportDataRequest.


        :param export_config: The export_config of this GoogleCloudAiplatformV1ExportDataRequest.
        :type export_config: GoogleCloudAiplatformV1ExportDataConfig
        """

        self._export_config = export_config
