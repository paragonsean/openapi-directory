/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeaturestoreMonitoringConfigImportFeaturesAnalysis;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeaturestoreMonitoringConfigSnapshotAnalysis;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeaturestoreMonitoringConfigThresholdConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudAiplatformV1FeaturestoreMonitoringConfig
 */
public class GoogleCloudAiplatformV1FeaturestoreMonitoringConfigTest {
    private final GoogleCloudAiplatformV1FeaturestoreMonitoringConfig model = new GoogleCloudAiplatformV1FeaturestoreMonitoringConfig();

    /**
     * Model tests for GoogleCloudAiplatformV1FeaturestoreMonitoringConfig
     */
    @Test
    public void testGoogleCloudAiplatformV1FeaturestoreMonitoringConfig() {
        // TODO: test GoogleCloudAiplatformV1FeaturestoreMonitoringConfig
    }

    /**
     * Test the property 'categoricalThresholdConfig'
     */
    @Test
    public void categoricalThresholdConfigTest() {
        // TODO: test categoricalThresholdConfig
    }

    /**
     * Test the property 'importFeaturesAnalysis'
     */
    @Test
    public void importFeaturesAnalysisTest() {
        // TODO: test importFeaturesAnalysis
    }

    /**
     * Test the property 'numericalThresholdConfig'
     */
    @Test
    public void numericalThresholdConfigTest() {
        // TODO: test numericalThresholdConfig
    }

    /**
     * Test the property 'snapshotAnalysis'
     */
    @Test
    public void snapshotAnalysisTest() {
        // TODO: test snapshotAnalysis
    }

}
