/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LearningGenaiRootHarmGrailImageHarmType;
import org.openapitools.client.model.LearningGenaiRootHarmGrailTextHarmType;
import org.openapitools.client.model.LearningGenaiRootHarmSafetyCatCategories;
import org.openapitools.client.model.LearningGenaiRootHarmSpiiFilter;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LearningGenaiRootHarm
 */
public class LearningGenaiRootHarmTest {
    private final LearningGenaiRootHarm model = new LearningGenaiRootHarm();

    /**
     * Model tests for LearningGenaiRootHarm
     */
    @Test
    public void testLearningGenaiRootHarm() {
        // TODO: test LearningGenaiRootHarm
    }

    /**
     * Test the property 'contextualDangerous'
     */
    @Test
    public void contextualDangerousTest() {
        // TODO: test contextualDangerous
    }

    /**
     * Test the property 'csam'
     */
    @Test
    public void csamTest() {
        // TODO: test csam
    }

    /**
     * Test the property 'fringe'
     */
    @Test
    public void fringeTest() {
        // TODO: test fringe
    }

    /**
     * Test the property 'grailImageHarmType'
     */
    @Test
    public void grailImageHarmTypeTest() {
        // TODO: test grailImageHarmType
    }

    /**
     * Test the property 'grailTextHarmType'
     */
    @Test
    public void grailTextHarmTypeTest() {
        // TODO: test grailTextHarmType
    }

    /**
     * Test the property 'imageCsam'
     */
    @Test
    public void imageCsamTest() {
        // TODO: test imageCsam
    }

    /**
     * Test the property 'imagePedo'
     */
    @Test
    public void imagePedoTest() {
        // TODO: test imagePedo
    }

    /**
     * Test the property 'imagePorn'
     */
    @Test
    public void imagePornTest() {
        // TODO: test imagePorn
    }

    /**
     * Test the property 'imageViolence'
     */
    @Test
    public void imageViolenceTest() {
        // TODO: test imageViolence
    }

    /**
     * Test the property 'pqc'
     */
    @Test
    public void pqcTest() {
        // TODO: test pqc
    }

    /**
     * Test the property 'safetycat'
     */
    @Test
    public void safetycatTest() {
        // TODO: test safetycat
    }

    /**
     * Test the property 'spii'
     */
    @Test
    public void spiiTest() {
        // TODO: test spii
    }

    /**
     * Test the property 'threshold'
     */
    @Test
    public void thresholdTest() {
        // TODO: test threshold
    }

    /**
     * Test the property 'videoFrameCsam'
     */
    @Test
    public void videoFrameCsamTest() {
        // TODO: test videoFrameCsam
    }

    /**
     * Test the property 'videoFramePedo'
     */
    @Test
    public void videoFramePedoTest() {
        // TODO: test videoFramePedo
    }

    /**
     * Test the property 'videoFramePorn'
     */
    @Test
    public void videoFramePornTest() {
        // TODO: test videoFramePorn
    }

    /**
     * Test the property 'videoFrameViolence'
     */
    @Test
    public void videoFrameViolenceTest() {
        // TODO: test videoFrameViolence
    }

}
