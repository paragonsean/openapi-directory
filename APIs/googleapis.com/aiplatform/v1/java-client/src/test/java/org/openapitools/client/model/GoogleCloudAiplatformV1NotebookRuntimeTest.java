/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1NotebookReservationAffinity;
import org.openapitools.client.model.GoogleCloudAiplatformV1NotebookRuntimeTemplateRef;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GoogleCloudAiplatformV1NotebookRuntime
 */
public class GoogleCloudAiplatformV1NotebookRuntimeTest {
    private final GoogleCloudAiplatformV1NotebookRuntime model = new GoogleCloudAiplatformV1NotebookRuntime();

    /**
     * Model tests for GoogleCloudAiplatformV1NotebookRuntime
     */
    @Test
    public void testGoogleCloudAiplatformV1NotebookRuntime() {
        // TODO: test GoogleCloudAiplatformV1NotebookRuntime
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'expirationTime'
     */
    @Test
    public void expirationTimeTest() {
        // TODO: test expirationTime
    }

    /**
     * Test the property 'healthState'
     */
    @Test
    public void healthStateTest() {
        // TODO: test healthState
    }

    /**
     * Test the property 'isUpgradable'
     */
    @Test
    public void isUpgradableTest() {
        // TODO: test isUpgradable
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'networkTags'
     */
    @Test
    public void networkTagsTest() {
        // TODO: test networkTags
    }

    /**
     * Test the property 'notebookRuntimeTemplateRef'
     */
    @Test
    public void notebookRuntimeTemplateRefTest() {
        // TODO: test notebookRuntimeTemplateRef
    }

    /**
     * Test the property 'notebookRuntimeType'
     */
    @Test
    public void notebookRuntimeTypeTest() {
        // TODO: test notebookRuntimeType
    }

    /**
     * Test the property 'proxyUri'
     */
    @Test
    public void proxyUriTest() {
        // TODO: test proxyUri
    }

    /**
     * Test the property 'reservationAffinity'
     */
    @Test
    public void reservationAffinityTest() {
        // TODO: test reservationAffinity
    }

    /**
     * Test the property 'runtimeState'
     */
    @Test
    public void runtimeStateTest() {
        // TODO: test runtimeState
    }

    /**
     * Test the property 'runtimeUser'
     */
    @Test
    public void runtimeUserTest() {
        // TODO: test runtimeUser
    }

    /**
     * Test the property 'serviceAccount'
     */
    @Test
    public void serviceAccountTest() {
        // TODO: test serviceAccount
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
