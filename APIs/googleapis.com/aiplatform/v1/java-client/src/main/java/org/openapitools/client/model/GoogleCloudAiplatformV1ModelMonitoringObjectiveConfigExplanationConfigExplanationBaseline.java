/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1BigQueryDestination;
import org.openapitools.client.model.GoogleCloudAiplatformV1GcsDestination;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Output from BatchPredictionJob for Model Monitoring baseline dataset, which can be used to generate baseline attribution scores.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline {
  public static final String SERIALIZED_NAME_BIGQUERY = "bigquery";
  @SerializedName(SERIALIZED_NAME_BIGQUERY)
  private GoogleCloudAiplatformV1BigQueryDestination bigquery;

  public static final String SERIALIZED_NAME_GCS = "gcs";
  @SerializedName(SERIALIZED_NAME_GCS)
  private GoogleCloudAiplatformV1GcsDestination gcs;

  /**
   * The storage format of the predictions generated BatchPrediction job.
   */
  @JsonAdapter(PredictionFormatEnum.Adapter.class)
  public enum PredictionFormatEnum {
    PREDICTION_FORMAT_UNSPECIFIED("PREDICTION_FORMAT_UNSPECIFIED"),
    
    JSONL("JSONL"),
    
    BIGQUERY("BIGQUERY");

    private String value;

    PredictionFormatEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PredictionFormatEnum fromValue(String value) {
      for (PredictionFormatEnum b : PredictionFormatEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PredictionFormatEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PredictionFormatEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PredictionFormatEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PredictionFormatEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PredictionFormatEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PREDICTION_FORMAT = "predictionFormat";
  @SerializedName(SERIALIZED_NAME_PREDICTION_FORMAT)
  private PredictionFormatEnum predictionFormat;

  public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline() {
  }

  public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline bigquery(GoogleCloudAiplatformV1BigQueryDestination bigquery) {
    this.bigquery = bigquery;
    return this;
  }

  /**
   * Get bigquery
   * @return bigquery
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1BigQueryDestination getBigquery() {
    return bigquery;
  }

  public void setBigquery(GoogleCloudAiplatformV1BigQueryDestination bigquery) {
    this.bigquery = bigquery;
  }


  public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline gcs(GoogleCloudAiplatformV1GcsDestination gcs) {
    this.gcs = gcs;
    return this;
  }

  /**
   * Get gcs
   * @return gcs
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1GcsDestination getGcs() {
    return gcs;
  }

  public void setGcs(GoogleCloudAiplatformV1GcsDestination gcs) {
    this.gcs = gcs;
  }


  public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline predictionFormat(PredictionFormatEnum predictionFormat) {
    this.predictionFormat = predictionFormat;
    return this;
  }

  /**
   * The storage format of the predictions generated BatchPrediction job.
   * @return predictionFormat
   */
  @javax.annotation.Nullable
  public PredictionFormatEnum getPredictionFormat() {
    return predictionFormat;
  }

  public void setPredictionFormat(PredictionFormatEnum predictionFormat) {
    this.predictionFormat = predictionFormat;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline googleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline = (GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline) o;
    return Objects.equals(this.bigquery, googleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.bigquery) &&
        Objects.equals(this.gcs, googleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.gcs) &&
        Objects.equals(this.predictionFormat, googleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.predictionFormat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigquery, gcs, predictionFormat);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline {\n");
    sb.append("    bigquery: ").append(toIndentedString(bigquery)).append("\n");
    sb.append("    gcs: ").append(toIndentedString(gcs)).append("\n");
    sb.append("    predictionFormat: ").append(toIndentedString(predictionFormat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigquery");
    openapiFields.add("gcs");
    openapiFields.add("predictionFormat");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline is not found in the empty JSON string", GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigquery`
      if (jsonObj.get("bigquery") != null && !jsonObj.get("bigquery").isJsonNull()) {
        GoogleCloudAiplatformV1BigQueryDestination.validateJsonElement(jsonObj.get("bigquery"));
      }
      // validate the optional field `gcs`
      if (jsonObj.get("gcs") != null && !jsonObj.get("gcs").isJsonNull()) {
        GoogleCloudAiplatformV1GcsDestination.validateJsonElement(jsonObj.get("gcs"));
      }
      if ((jsonObj.get("predictionFormat") != null && !jsonObj.get("predictionFormat").isJsonNull()) && !jsonObj.get("predictionFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `predictionFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("predictionFormat").toString()));
      }
      // validate the optional field `predictionFormat`
      if (jsonObj.get("predictionFormat") != null && !jsonObj.get("predictionFormat").isJsonNull()) {
        PredictionFormatEnum.validateJsonElement(jsonObj.get("predictionFormat"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline
   */
  public static GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1ModelMonitoringObjectiveConfigExplanationConfigExplanationBaseline to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

