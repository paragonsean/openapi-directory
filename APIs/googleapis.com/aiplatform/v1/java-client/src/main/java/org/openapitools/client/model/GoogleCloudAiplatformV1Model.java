/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1DeployedModelRef;
import org.openapitools.client.model.GoogleCloudAiplatformV1EncryptionSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1ExplanationSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelContainerSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelDataStats;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelExportFormat;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelOriginalModelInfo;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelSourceInfo;
import org.openapitools.client.model.GoogleCloudAiplatformV1PredictSchemata;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A trained machine learning Model.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1Model {
  public static final String SERIALIZED_NAME_ARTIFACT_URI = "artifactUri";
  @SerializedName(SERIALIZED_NAME_ARTIFACT_URI)
  private String artifactUri;

  public static final String SERIALIZED_NAME_CONTAINER_SPEC = "containerSpec";
  @SerializedName(SERIALIZED_NAME_CONTAINER_SPEC)
  private GoogleCloudAiplatformV1ModelContainerSpec containerSpec;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DATA_STATS = "dataStats";
  @SerializedName(SERIALIZED_NAME_DATA_STATS)
  private GoogleCloudAiplatformV1ModelDataStats dataStats;

  public static final String SERIALIZED_NAME_DEPLOYED_MODELS = "deployedModels";
  @SerializedName(SERIALIZED_NAME_DEPLOYED_MODELS)
  private List<GoogleCloudAiplatformV1DeployedModelRef> deployedModels = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENCRYPTION_SPEC = "encryptionSpec";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_SPEC)
  private GoogleCloudAiplatformV1EncryptionSpec encryptionSpec;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_EXPLANATION_SPEC = "explanationSpec";
  @SerializedName(SERIALIZED_NAME_EXPLANATION_SPEC)
  private GoogleCloudAiplatformV1ExplanationSpec explanationSpec;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata = null;

  public static final String SERIALIZED_NAME_METADATA_ARTIFACT = "metadataArtifact";
  @SerializedName(SERIALIZED_NAME_METADATA_ARTIFACT)
  private String metadataArtifact;

  public static final String SERIALIZED_NAME_METADATA_SCHEMA_URI = "metadataSchemaUri";
  @SerializedName(SERIALIZED_NAME_METADATA_SCHEMA_URI)
  private String metadataSchemaUri;

  public static final String SERIALIZED_NAME_MODEL_SOURCE_INFO = "modelSourceInfo";
  @SerializedName(SERIALIZED_NAME_MODEL_SOURCE_INFO)
  private GoogleCloudAiplatformV1ModelSourceInfo modelSourceInfo;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORIGINAL_MODEL_INFO = "originalModelInfo";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_MODEL_INFO)
  private GoogleCloudAiplatformV1ModelOriginalModelInfo originalModelInfo;

  public static final String SERIALIZED_NAME_PIPELINE_JOB = "pipelineJob";
  @SerializedName(SERIALIZED_NAME_PIPELINE_JOB)
  private String pipelineJob;

  public static final String SERIALIZED_NAME_PREDICT_SCHEMATA = "predictSchemata";
  @SerializedName(SERIALIZED_NAME_PREDICT_SCHEMATA)
  private GoogleCloudAiplatformV1PredictSchemata predictSchemata;

  /**
   * Gets or Sets supportedDeploymentResourcesTypes
   */
  @JsonAdapter(SupportedDeploymentResourcesTypesEnum.Adapter.class)
  public enum SupportedDeploymentResourcesTypesEnum {
    DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED("DEPLOYMENT_RESOURCES_TYPE_UNSPECIFIED"),
    
    DEDICATED_RESOURCES("DEDICATED_RESOURCES"),
    
    AUTOMATIC_RESOURCES("AUTOMATIC_RESOURCES"),
    
    SHARED_RESOURCES("SHARED_RESOURCES");

    private String value;

    SupportedDeploymentResourcesTypesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SupportedDeploymentResourcesTypesEnum fromValue(String value) {
      for (SupportedDeploymentResourcesTypesEnum b : SupportedDeploymentResourcesTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SupportedDeploymentResourcesTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SupportedDeploymentResourcesTypesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SupportedDeploymentResourcesTypesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SupportedDeploymentResourcesTypesEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SupportedDeploymentResourcesTypesEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SUPPORTED_DEPLOYMENT_RESOURCES_TYPES = "supportedDeploymentResourcesTypes";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_DEPLOYMENT_RESOURCES_TYPES)
  private List<SupportedDeploymentResourcesTypesEnum> supportedDeploymentResourcesTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUPPORTED_EXPORT_FORMATS = "supportedExportFormats";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_EXPORT_FORMATS)
  private List<GoogleCloudAiplatformV1ModelExportFormat> supportedExportFormats = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUPPORTED_INPUT_STORAGE_FORMATS = "supportedInputStorageFormats";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_INPUT_STORAGE_FORMATS)
  private List<String> supportedInputStorageFormats = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUPPORTED_OUTPUT_STORAGE_FORMATS = "supportedOutputStorageFormats";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_OUTPUT_STORAGE_FORMATS)
  private List<String> supportedOutputStorageFormats = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRAINING_PIPELINE = "trainingPipeline";
  @SerializedName(SERIALIZED_NAME_TRAINING_PIPELINE)
  private String trainingPipeline;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public static final String SERIALIZED_NAME_VERSION_ALIASES = "versionAliases";
  @SerializedName(SERIALIZED_NAME_VERSION_ALIASES)
  private List<String> versionAliases = new ArrayList<>();

  public static final String SERIALIZED_NAME_VERSION_CREATE_TIME = "versionCreateTime";
  @SerializedName(SERIALIZED_NAME_VERSION_CREATE_TIME)
  private String versionCreateTime;

  public static final String SERIALIZED_NAME_VERSION_DESCRIPTION = "versionDescription";
  @SerializedName(SERIALIZED_NAME_VERSION_DESCRIPTION)
  private String versionDescription;

  public static final String SERIALIZED_NAME_VERSION_ID = "versionId";
  @SerializedName(SERIALIZED_NAME_VERSION_ID)
  private String versionId;

  public static final String SERIALIZED_NAME_VERSION_UPDATE_TIME = "versionUpdateTime";
  @SerializedName(SERIALIZED_NAME_VERSION_UPDATE_TIME)
  private String versionUpdateTime;

  public GoogleCloudAiplatformV1Model() {
  }

  public GoogleCloudAiplatformV1Model(
     String createTime, 
     List<GoogleCloudAiplatformV1DeployedModelRef> deployedModels, 
     String metadataArtifact, 
     List<SupportedDeploymentResourcesTypesEnum> supportedDeploymentResourcesTypes, 
     List<GoogleCloudAiplatformV1ModelExportFormat> supportedExportFormats, 
     List<String> supportedInputStorageFormats, 
     List<String> supportedOutputStorageFormats, 
     String trainingPipeline, 
     String updateTime, 
     String versionCreateTime, 
     String versionId, 
     String versionUpdateTime
  ) {
    this();
    this.createTime = createTime;
    this.deployedModels = deployedModels;
    this.metadataArtifact = metadataArtifact;
    this.supportedDeploymentResourcesTypes = supportedDeploymentResourcesTypes;
    this.supportedExportFormats = supportedExportFormats;
    this.supportedInputStorageFormats = supportedInputStorageFormats;
    this.supportedOutputStorageFormats = supportedOutputStorageFormats;
    this.trainingPipeline = trainingPipeline;
    this.updateTime = updateTime;
    this.versionCreateTime = versionCreateTime;
    this.versionId = versionId;
    this.versionUpdateTime = versionUpdateTime;
  }

  public GoogleCloudAiplatformV1Model artifactUri(String artifactUri) {
    this.artifactUri = artifactUri;
    return this;
  }

  /**
   * Immutable. The path to the directory containing the Model artifact and any of its supporting files. Not required for AutoML Models.
   * @return artifactUri
   */
  @javax.annotation.Nullable
  public String getArtifactUri() {
    return artifactUri;
  }

  public void setArtifactUri(String artifactUri) {
    this.artifactUri = artifactUri;
  }


  public GoogleCloudAiplatformV1Model containerSpec(GoogleCloudAiplatformV1ModelContainerSpec containerSpec) {
    this.containerSpec = containerSpec;
    return this;
  }

  /**
   * Get containerSpec
   * @return containerSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1ModelContainerSpec getContainerSpec() {
    return containerSpec;
  }

  public void setContainerSpec(GoogleCloudAiplatformV1ModelContainerSpec containerSpec) {
    this.containerSpec = containerSpec;
  }


  /**
   * Output only. Timestamp when this Model was uploaded into Vertex AI.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1Model dataStats(GoogleCloudAiplatformV1ModelDataStats dataStats) {
    this.dataStats = dataStats;
    return this;
  }

  /**
   * Get dataStats
   * @return dataStats
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1ModelDataStats getDataStats() {
    return dataStats;
  }

  public void setDataStats(GoogleCloudAiplatformV1ModelDataStats dataStats) {
    this.dataStats = dataStats;
  }


  /**
   * Output only. The pointers to DeployedModels created from this Model. Note that Model could have been deployed to Endpoints in different Locations.
   * @return deployedModels
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1DeployedModelRef> getDeployedModels() {
    return deployedModels;
  }



  public GoogleCloudAiplatformV1Model description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the Model.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudAiplatformV1Model displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The display name of the Model. The name can be up to 128 characters long and can consist of any UTF-8 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudAiplatformV1Model encryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Get encryptionSpec
   * @return encryptionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  public void setEncryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
  }


  public GoogleCloudAiplatformV1Model etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Used to perform consistent read-modify-write updates. If not set, a blind \&quot;overwrite\&quot; update happens.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudAiplatformV1Model explanationSpec(GoogleCloudAiplatformV1ExplanationSpec explanationSpec) {
    this.explanationSpec = explanationSpec;
    return this;
  }

  /**
   * Get explanationSpec
   * @return explanationSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1ExplanationSpec getExplanationSpec() {
    return explanationSpec;
  }

  public void setExplanationSpec(GoogleCloudAiplatformV1ExplanationSpec explanationSpec) {
    this.explanationSpec = explanationSpec;
  }


  public GoogleCloudAiplatformV1Model labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudAiplatformV1Model putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The labels with user-defined metadata to organize your Models. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudAiplatformV1Model metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Immutable. An additional information about the Model; the schema of the metadata can be found in metadata_schema. Unset if the Model does not have any additional information.
   * @return metadata
   */
  @javax.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  /**
   * Output only. The resource name of the Artifact that was created in MetadataStore when creating the Model. The Artifact resource name pattern is &#x60;projects/{project}/locations/{location}/metadataStores/{metadata_store}/artifacts/{artifact}&#x60;.
   * @return metadataArtifact
   */
  @javax.annotation.Nullable
  public String getMetadataArtifact() {
    return metadataArtifact;
  }



  public GoogleCloudAiplatformV1Model metadataSchemaUri(String metadataSchemaUri) {
    this.metadataSchemaUri = metadataSchemaUri;
    return this;
  }

  /**
   * Immutable. Points to a YAML file stored on Google Cloud Storage describing additional information about the Model, that is specific to it. Unset if the Model does not have any additional information. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no additional metadata is needed, this field is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
   * @return metadataSchemaUri
   */
  @javax.annotation.Nullable
  public String getMetadataSchemaUri() {
    return metadataSchemaUri;
  }

  public void setMetadataSchemaUri(String metadataSchemaUri) {
    this.metadataSchemaUri = metadataSchemaUri;
  }


  public GoogleCloudAiplatformV1Model modelSourceInfo(GoogleCloudAiplatformV1ModelSourceInfo modelSourceInfo) {
    this.modelSourceInfo = modelSourceInfo;
    return this;
  }

  /**
   * Get modelSourceInfo
   * @return modelSourceInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1ModelSourceInfo getModelSourceInfo() {
    return modelSourceInfo;
  }

  public void setModelSourceInfo(GoogleCloudAiplatformV1ModelSourceInfo modelSourceInfo) {
    this.modelSourceInfo = modelSourceInfo;
  }


  public GoogleCloudAiplatformV1Model name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The resource name of the Model.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudAiplatformV1Model originalModelInfo(GoogleCloudAiplatformV1ModelOriginalModelInfo originalModelInfo) {
    this.originalModelInfo = originalModelInfo;
    return this;
  }

  /**
   * Get originalModelInfo
   * @return originalModelInfo
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1ModelOriginalModelInfo getOriginalModelInfo() {
    return originalModelInfo;
  }

  public void setOriginalModelInfo(GoogleCloudAiplatformV1ModelOriginalModelInfo originalModelInfo) {
    this.originalModelInfo = originalModelInfo;
  }


  public GoogleCloudAiplatformV1Model pipelineJob(String pipelineJob) {
    this.pipelineJob = pipelineJob;
    return this;
  }

  /**
   * Optional. This field is populated if the model is produced by a pipeline job.
   * @return pipelineJob
   */
  @javax.annotation.Nullable
  public String getPipelineJob() {
    return pipelineJob;
  }

  public void setPipelineJob(String pipelineJob) {
    this.pipelineJob = pipelineJob;
  }


  public GoogleCloudAiplatformV1Model predictSchemata(GoogleCloudAiplatformV1PredictSchemata predictSchemata) {
    this.predictSchemata = predictSchemata;
    return this;
  }

  /**
   * Get predictSchemata
   * @return predictSchemata
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1PredictSchemata getPredictSchemata() {
    return predictSchemata;
  }

  public void setPredictSchemata(GoogleCloudAiplatformV1PredictSchemata predictSchemata) {
    this.predictSchemata = predictSchemata;
  }


  /**
   * Output only. When this Model is deployed, its prediction resources are described by the &#x60;prediction_resources&#x60; field of the Endpoint.deployed_models object. Because not all Models support all resource configuration types, the configuration types this Model supports are listed here. If no configuration types are listed, the Model cannot be deployed to an Endpoint and does not support online predictions (PredictionService.Predict or PredictionService.Explain). Such a Model can serve predictions by using a BatchPredictionJob, if it has at least one entry each in supported_input_storage_formats and supported_output_storage_formats.
   * @return supportedDeploymentResourcesTypes
   */
  @javax.annotation.Nullable
  public List<SupportedDeploymentResourcesTypesEnum> getSupportedDeploymentResourcesTypes() {
    return supportedDeploymentResourcesTypes;
  }



  /**
   * Output only. The formats in which this Model may be exported. If empty, this Model is not available for export.
   * @return supportedExportFormats
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1ModelExportFormat> getSupportedExportFormats() {
    return supportedExportFormats;
  }



  /**
   * Output only. The formats this Model supports in BatchPredictionJob.input_config. If PredictSchemata.instance_schema_uri exists, the instances should be given as per that schema. The possible formats are: * &#x60;jsonl&#x60; The JSON Lines format, where each instance is a single line. Uses GcsSource. * &#x60;csv&#x60; The CSV format, where each instance is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsSource. * &#x60;tf-record&#x60; The TFRecord format, where each instance is a single record in tfrecord syntax. Uses GcsSource. * &#x60;tf-record-gzip&#x60; Similar to &#x60;tf-record&#x60;, but the file is gzipped. Uses GcsSource. * &#x60;bigquery&#x60; Each instance is a single row in BigQuery. Uses BigQuerySource. * &#x60;file-list&#x60; Each line of the file is the location of an instance to process, uses &#x60;gcs_source&#x60; field of the InputConfig object. If this Model doesn&#39;t support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.
   * @return supportedInputStorageFormats
   */
  @javax.annotation.Nullable
  public List<String> getSupportedInputStorageFormats() {
    return supportedInputStorageFormats;
  }



  /**
   * Output only. The formats this Model supports in BatchPredictionJob.output_config. If both PredictSchemata.instance_schema_uri and PredictSchemata.prediction_schema_uri exist, the predictions are returned together with their instances. In other words, the prediction has the original instance data first, followed by the actual prediction content (as per the schema). The possible formats are: * &#x60;jsonl&#x60; The JSON Lines format, where each prediction is a single line. Uses GcsDestination. * &#x60;csv&#x60; The CSV format, where each prediction is a single comma-separated line. The first line in the file is the header, containing comma-separated field names. Uses GcsDestination. * &#x60;bigquery&#x60; Each prediction is a single row in a BigQuery table, uses BigQueryDestination . If this Model doesn&#39;t support any of these formats it means it cannot be used with a BatchPredictionJob. However, if it has supported_deployment_resources_types, it could serve online predictions by using PredictionService.Predict or PredictionService.Explain.
   * @return supportedOutputStorageFormats
   */
  @javax.annotation.Nullable
  public List<String> getSupportedOutputStorageFormats() {
    return supportedOutputStorageFormats;
  }



  /**
   * Output only. The resource name of the TrainingPipeline that uploaded this Model, if any.
   * @return trainingPipeline
   */
  @javax.annotation.Nullable
  public String getTrainingPipeline() {
    return trainingPipeline;
  }



  /**
   * Output only. Timestamp when this Model was most recently updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  public GoogleCloudAiplatformV1Model versionAliases(List<String> versionAliases) {
    this.versionAliases = versionAliases;
    return this;
  }

  public GoogleCloudAiplatformV1Model addVersionAliasesItem(String versionAliasesItem) {
    if (this.versionAliases == null) {
      this.versionAliases = new ArrayList<>();
    }
    this.versionAliases.add(versionAliasesItem);
    return this;
  }

  /**
   * User provided version aliases so that a model version can be referenced via alias (i.e. &#x60;projects/{project}/locations/{location}/models/{model_id}@{version_alias}&#x60; instead of auto-generated version id (i.e. &#x60;projects/{project}/locations/{location}/models/{model_id}@{version_id})&#x60;. The format is a-z{0,126}[a-z0-9] to distinguish from version_id. A default version alias will be created for the first version of the model, and there must be exactly one default version alias for a model.
   * @return versionAliases
   */
  @javax.annotation.Nullable
  public List<String> getVersionAliases() {
    return versionAliases;
  }

  public void setVersionAliases(List<String> versionAliases) {
    this.versionAliases = versionAliases;
  }


  /**
   * Output only. Timestamp when this version was created.
   * @return versionCreateTime
   */
  @javax.annotation.Nullable
  public String getVersionCreateTime() {
    return versionCreateTime;
  }



  public GoogleCloudAiplatformV1Model versionDescription(String versionDescription) {
    this.versionDescription = versionDescription;
    return this;
  }

  /**
   * The description of this version.
   * @return versionDescription
   */
  @javax.annotation.Nullable
  public String getVersionDescription() {
    return versionDescription;
  }

  public void setVersionDescription(String versionDescription) {
    this.versionDescription = versionDescription;
  }


  /**
   * Output only. Immutable. The version ID of the model. A new version is committed when a new model version is uploaded or trained under an existing model id. It is an auto-incrementing decimal number in string representation.
   * @return versionId
   */
  @javax.annotation.Nullable
  public String getVersionId() {
    return versionId;
  }



  /**
   * Output only. Timestamp when this version was most recently updated.
   * @return versionUpdateTime
   */
  @javax.annotation.Nullable
  public String getVersionUpdateTime() {
    return versionUpdateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1Model googleCloudAiplatformV1Model = (GoogleCloudAiplatformV1Model) o;
    return Objects.equals(this.artifactUri, googleCloudAiplatformV1Model.artifactUri) &&
        Objects.equals(this.containerSpec, googleCloudAiplatformV1Model.containerSpec) &&
        Objects.equals(this.createTime, googleCloudAiplatformV1Model.createTime) &&
        Objects.equals(this.dataStats, googleCloudAiplatformV1Model.dataStats) &&
        Objects.equals(this.deployedModels, googleCloudAiplatformV1Model.deployedModels) &&
        Objects.equals(this.description, googleCloudAiplatformV1Model.description) &&
        Objects.equals(this.displayName, googleCloudAiplatformV1Model.displayName) &&
        Objects.equals(this.encryptionSpec, googleCloudAiplatformV1Model.encryptionSpec) &&
        Objects.equals(this.etag, googleCloudAiplatformV1Model.etag) &&
        Objects.equals(this.explanationSpec, googleCloudAiplatformV1Model.explanationSpec) &&
        Objects.equals(this.labels, googleCloudAiplatformV1Model.labels) &&
        Objects.equals(this.metadata, googleCloudAiplatformV1Model.metadata) &&
        Objects.equals(this.metadataArtifact, googleCloudAiplatformV1Model.metadataArtifact) &&
        Objects.equals(this.metadataSchemaUri, googleCloudAiplatformV1Model.metadataSchemaUri) &&
        Objects.equals(this.modelSourceInfo, googleCloudAiplatformV1Model.modelSourceInfo) &&
        Objects.equals(this.name, googleCloudAiplatformV1Model.name) &&
        Objects.equals(this.originalModelInfo, googleCloudAiplatformV1Model.originalModelInfo) &&
        Objects.equals(this.pipelineJob, googleCloudAiplatformV1Model.pipelineJob) &&
        Objects.equals(this.predictSchemata, googleCloudAiplatformV1Model.predictSchemata) &&
        Objects.equals(this.supportedDeploymentResourcesTypes, googleCloudAiplatformV1Model.supportedDeploymentResourcesTypes) &&
        Objects.equals(this.supportedExportFormats, googleCloudAiplatformV1Model.supportedExportFormats) &&
        Objects.equals(this.supportedInputStorageFormats, googleCloudAiplatformV1Model.supportedInputStorageFormats) &&
        Objects.equals(this.supportedOutputStorageFormats, googleCloudAiplatformV1Model.supportedOutputStorageFormats) &&
        Objects.equals(this.trainingPipeline, googleCloudAiplatformV1Model.trainingPipeline) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1Model.updateTime) &&
        Objects.equals(this.versionAliases, googleCloudAiplatformV1Model.versionAliases) &&
        Objects.equals(this.versionCreateTime, googleCloudAiplatformV1Model.versionCreateTime) &&
        Objects.equals(this.versionDescription, googleCloudAiplatformV1Model.versionDescription) &&
        Objects.equals(this.versionId, googleCloudAiplatformV1Model.versionId) &&
        Objects.equals(this.versionUpdateTime, googleCloudAiplatformV1Model.versionUpdateTime);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(artifactUri, containerSpec, createTime, dataStats, deployedModels, description, displayName, encryptionSpec, etag, explanationSpec, labels, metadata, metadataArtifact, metadataSchemaUri, modelSourceInfo, name, originalModelInfo, pipelineJob, predictSchemata, supportedDeploymentResourcesTypes, supportedExportFormats, supportedInputStorageFormats, supportedOutputStorageFormats, trainingPipeline, updateTime, versionAliases, versionCreateTime, versionDescription, versionId, versionUpdateTime);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1Model {\n");
    sb.append("    artifactUri: ").append(toIndentedString(artifactUri)).append("\n");
    sb.append("    containerSpec: ").append(toIndentedString(containerSpec)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    dataStats: ").append(toIndentedString(dataStats)).append("\n");
    sb.append("    deployedModels: ").append(toIndentedString(deployedModels)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    encryptionSpec: ").append(toIndentedString(encryptionSpec)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    explanationSpec: ").append(toIndentedString(explanationSpec)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    metadataArtifact: ").append(toIndentedString(metadataArtifact)).append("\n");
    sb.append("    metadataSchemaUri: ").append(toIndentedString(metadataSchemaUri)).append("\n");
    sb.append("    modelSourceInfo: ").append(toIndentedString(modelSourceInfo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    originalModelInfo: ").append(toIndentedString(originalModelInfo)).append("\n");
    sb.append("    pipelineJob: ").append(toIndentedString(pipelineJob)).append("\n");
    sb.append("    predictSchemata: ").append(toIndentedString(predictSchemata)).append("\n");
    sb.append("    supportedDeploymentResourcesTypes: ").append(toIndentedString(supportedDeploymentResourcesTypes)).append("\n");
    sb.append("    supportedExportFormats: ").append(toIndentedString(supportedExportFormats)).append("\n");
    sb.append("    supportedInputStorageFormats: ").append(toIndentedString(supportedInputStorageFormats)).append("\n");
    sb.append("    supportedOutputStorageFormats: ").append(toIndentedString(supportedOutputStorageFormats)).append("\n");
    sb.append("    trainingPipeline: ").append(toIndentedString(trainingPipeline)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    versionAliases: ").append(toIndentedString(versionAliases)).append("\n");
    sb.append("    versionCreateTime: ").append(toIndentedString(versionCreateTime)).append("\n");
    sb.append("    versionDescription: ").append(toIndentedString(versionDescription)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    versionUpdateTime: ").append(toIndentedString(versionUpdateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("artifactUri");
    openapiFields.add("containerSpec");
    openapiFields.add("createTime");
    openapiFields.add("dataStats");
    openapiFields.add("deployedModels");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("encryptionSpec");
    openapiFields.add("etag");
    openapiFields.add("explanationSpec");
    openapiFields.add("labels");
    openapiFields.add("metadata");
    openapiFields.add("metadataArtifact");
    openapiFields.add("metadataSchemaUri");
    openapiFields.add("modelSourceInfo");
    openapiFields.add("name");
    openapiFields.add("originalModelInfo");
    openapiFields.add("pipelineJob");
    openapiFields.add("predictSchemata");
    openapiFields.add("supportedDeploymentResourcesTypes");
    openapiFields.add("supportedExportFormats");
    openapiFields.add("supportedInputStorageFormats");
    openapiFields.add("supportedOutputStorageFormats");
    openapiFields.add("trainingPipeline");
    openapiFields.add("updateTime");
    openapiFields.add("versionAliases");
    openapiFields.add("versionCreateTime");
    openapiFields.add("versionDescription");
    openapiFields.add("versionId");
    openapiFields.add("versionUpdateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1Model
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1Model.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1Model is not found in the empty JSON string", GoogleCloudAiplatformV1Model.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1Model.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1Model` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("artifactUri") != null && !jsonObj.get("artifactUri").isJsonNull()) && !jsonObj.get("artifactUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `artifactUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("artifactUri").toString()));
      }
      // validate the optional field `containerSpec`
      if (jsonObj.get("containerSpec") != null && !jsonObj.get("containerSpec").isJsonNull()) {
        GoogleCloudAiplatformV1ModelContainerSpec.validateJsonElement(jsonObj.get("containerSpec"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      // validate the optional field `dataStats`
      if (jsonObj.get("dataStats") != null && !jsonObj.get("dataStats").isJsonNull()) {
        GoogleCloudAiplatformV1ModelDataStats.validateJsonElement(jsonObj.get("dataStats"));
      }
      if (jsonObj.get("deployedModels") != null && !jsonObj.get("deployedModels").isJsonNull()) {
        JsonArray jsonArraydeployedModels = jsonObj.getAsJsonArray("deployedModels");
        if (jsonArraydeployedModels != null) {
          // ensure the json data is an array
          if (!jsonObj.get("deployedModels").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `deployedModels` to be an array in the JSON string but got `%s`", jsonObj.get("deployedModels").toString()));
          }

          // validate the optional field `deployedModels` (array)
          for (int i = 0; i < jsonArraydeployedModels.size(); i++) {
            GoogleCloudAiplatformV1DeployedModelRef.validateJsonElement(jsonArraydeployedModels.get(i));
          };
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `encryptionSpec`
      if (jsonObj.get("encryptionSpec") != null && !jsonObj.get("encryptionSpec").isJsonNull()) {
        GoogleCloudAiplatformV1EncryptionSpec.validateJsonElement(jsonObj.get("encryptionSpec"));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      // validate the optional field `explanationSpec`
      if (jsonObj.get("explanationSpec") != null && !jsonObj.get("explanationSpec").isJsonNull()) {
        GoogleCloudAiplatformV1ExplanationSpec.validateJsonElement(jsonObj.get("explanationSpec"));
      }
      if ((jsonObj.get("metadataArtifact") != null && !jsonObj.get("metadataArtifact").isJsonNull()) && !jsonObj.get("metadataArtifact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metadataArtifact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metadataArtifact").toString()));
      }
      if ((jsonObj.get("metadataSchemaUri") != null && !jsonObj.get("metadataSchemaUri").isJsonNull()) && !jsonObj.get("metadataSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metadataSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metadataSchemaUri").toString()));
      }
      // validate the optional field `modelSourceInfo`
      if (jsonObj.get("modelSourceInfo") != null && !jsonObj.get("modelSourceInfo").isJsonNull()) {
        GoogleCloudAiplatformV1ModelSourceInfo.validateJsonElement(jsonObj.get("modelSourceInfo"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `originalModelInfo`
      if (jsonObj.get("originalModelInfo") != null && !jsonObj.get("originalModelInfo").isJsonNull()) {
        GoogleCloudAiplatformV1ModelOriginalModelInfo.validateJsonElement(jsonObj.get("originalModelInfo"));
      }
      if ((jsonObj.get("pipelineJob") != null && !jsonObj.get("pipelineJob").isJsonNull()) && !jsonObj.get("pipelineJob").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pipelineJob` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pipelineJob").toString()));
      }
      // validate the optional field `predictSchemata`
      if (jsonObj.get("predictSchemata") != null && !jsonObj.get("predictSchemata").isJsonNull()) {
        GoogleCloudAiplatformV1PredictSchemata.validateJsonElement(jsonObj.get("predictSchemata"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("supportedDeploymentResourcesTypes") != null && !jsonObj.get("supportedDeploymentResourcesTypes").isJsonNull() && !jsonObj.get("supportedDeploymentResourcesTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedDeploymentResourcesTypes` to be an array in the JSON string but got `%s`", jsonObj.get("supportedDeploymentResourcesTypes").toString()));
      }
      if (jsonObj.get("supportedExportFormats") != null && !jsonObj.get("supportedExportFormats").isJsonNull()) {
        JsonArray jsonArraysupportedExportFormats = jsonObj.getAsJsonArray("supportedExportFormats");
        if (jsonArraysupportedExportFormats != null) {
          // ensure the json data is an array
          if (!jsonObj.get("supportedExportFormats").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `supportedExportFormats` to be an array in the JSON string but got `%s`", jsonObj.get("supportedExportFormats").toString()));
          }

          // validate the optional field `supportedExportFormats` (array)
          for (int i = 0; i < jsonArraysupportedExportFormats.size(); i++) {
            GoogleCloudAiplatformV1ModelExportFormat.validateJsonElement(jsonArraysupportedExportFormats.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("supportedInputStorageFormats") != null && !jsonObj.get("supportedInputStorageFormats").isJsonNull() && !jsonObj.get("supportedInputStorageFormats").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedInputStorageFormats` to be an array in the JSON string but got `%s`", jsonObj.get("supportedInputStorageFormats").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("supportedOutputStorageFormats") != null && !jsonObj.get("supportedOutputStorageFormats").isJsonNull() && !jsonObj.get("supportedOutputStorageFormats").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedOutputStorageFormats` to be an array in the JSON string but got `%s`", jsonObj.get("supportedOutputStorageFormats").toString()));
      }
      if ((jsonObj.get("trainingPipeline") != null && !jsonObj.get("trainingPipeline").isJsonNull()) && !jsonObj.get("trainingPipeline").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trainingPipeline` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trainingPipeline").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("versionAliases") != null && !jsonObj.get("versionAliases").isJsonNull() && !jsonObj.get("versionAliases").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionAliases` to be an array in the JSON string but got `%s`", jsonObj.get("versionAliases").toString()));
      }
      if ((jsonObj.get("versionCreateTime") != null && !jsonObj.get("versionCreateTime").isJsonNull()) && !jsonObj.get("versionCreateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionCreateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionCreateTime").toString()));
      }
      if ((jsonObj.get("versionDescription") != null && !jsonObj.get("versionDescription").isJsonNull()) && !jsonObj.get("versionDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionDescription").toString()));
      }
      if ((jsonObj.get("versionId") != null && !jsonObj.get("versionId").isJsonNull()) && !jsonObj.get("versionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionId").toString()));
      }
      if ((jsonObj.get("versionUpdateTime") != null && !jsonObj.get("versionUpdateTime").isJsonNull()) && !jsonObj.get("versionUpdateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionUpdateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionUpdateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1Model.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1Model' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1Model> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1Model.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1Model>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1Model value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1Model read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1Model given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1Model
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1Model
   */
  public static GoogleCloudAiplatformV1Model fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1Model.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1Model to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

