/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceRaiResult;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceRaiSignal;
import org.openapitools.client.model.LanguageLabsAidaTrustRecitationProtoStreamRecitationResult;
import org.openapitools.client.model.LearningGenaiRootClassifierOutput;
import org.openapitools.client.model.LearningGenaiRootLanguageFilterResult;
import org.openapitools.client.model.LearningGenaiRootRAIOutput;
import org.openapitools.client.model.LearningGenaiRootTakedownResult;
import org.openapitools.client.model.LearningGenaiRootToxicityResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LearningGenaiRootFilterMetadataFilterDebugInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LearningGenaiRootFilterMetadataFilterDebugInfo {
  public static final String SERIALIZED_NAME_CLASSIFIER_OUTPUT = "classifierOutput";
  @SerializedName(SERIALIZED_NAME_CLASSIFIER_OUTPUT)
  private LearningGenaiRootClassifierOutput classifierOutput;

  public static final String SERIALIZED_NAME_DEFAULT_METADATA = "defaultMetadata";
  @SerializedName(SERIALIZED_NAME_DEFAULT_METADATA)
  private String defaultMetadata;

  public static final String SERIALIZED_NAME_LANGUAGE_FILTER_RESULT = "languageFilterResult";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_FILTER_RESULT)
  private LearningGenaiRootLanguageFilterResult languageFilterResult;

  public static final String SERIALIZED_NAME_RAI_OUTPUT = "raiOutput";
  @SerializedName(SERIALIZED_NAME_RAI_OUTPUT)
  private LearningGenaiRootRAIOutput raiOutput;

  public static final String SERIALIZED_NAME_RAI_RESULT = "raiResult";
  @SerializedName(SERIALIZED_NAME_RAI_RESULT)
  private CloudAiNlLlmProtoServiceRaiResult raiResult;

  public static final String SERIALIZED_NAME_RAI_SIGNAL = "raiSignal";
  @SerializedName(SERIALIZED_NAME_RAI_SIGNAL)
  private CloudAiNlLlmProtoServiceRaiSignal raiSignal;

  public static final String SERIALIZED_NAME_STREAM_RECITATION_RESULT = "streamRecitationResult";
  @SerializedName(SERIALIZED_NAME_STREAM_RECITATION_RESULT)
  private LanguageLabsAidaTrustRecitationProtoStreamRecitationResult streamRecitationResult;

  public static final String SERIALIZED_NAME_TAKEDOWN_RESULT = "takedownResult";
  @SerializedName(SERIALIZED_NAME_TAKEDOWN_RESULT)
  private LearningGenaiRootTakedownResult takedownResult;

  public static final String SERIALIZED_NAME_TOXICITY_RESULT = "toxicityResult";
  @SerializedName(SERIALIZED_NAME_TOXICITY_RESULT)
  private LearningGenaiRootToxicityResult toxicityResult;

  public LearningGenaiRootFilterMetadataFilterDebugInfo() {
  }

  public LearningGenaiRootFilterMetadataFilterDebugInfo classifierOutput(LearningGenaiRootClassifierOutput classifierOutput) {
    this.classifierOutput = classifierOutput;
    return this;
  }

  /**
   * Get classifierOutput
   * @return classifierOutput
   */
  @javax.annotation.Nullable
  public LearningGenaiRootClassifierOutput getClassifierOutput() {
    return classifierOutput;
  }

  public void setClassifierOutput(LearningGenaiRootClassifierOutput classifierOutput) {
    this.classifierOutput = classifierOutput;
  }


  public LearningGenaiRootFilterMetadataFilterDebugInfo defaultMetadata(String defaultMetadata) {
    this.defaultMetadata = defaultMetadata;
    return this;
  }

  /**
   * Get defaultMetadata
   * @return defaultMetadata
   */
  @javax.annotation.Nullable
  public String getDefaultMetadata() {
    return defaultMetadata;
  }

  public void setDefaultMetadata(String defaultMetadata) {
    this.defaultMetadata = defaultMetadata;
  }


  public LearningGenaiRootFilterMetadataFilterDebugInfo languageFilterResult(LearningGenaiRootLanguageFilterResult languageFilterResult) {
    this.languageFilterResult = languageFilterResult;
    return this;
  }

  /**
   * Get languageFilterResult
   * @return languageFilterResult
   */
  @javax.annotation.Nullable
  public LearningGenaiRootLanguageFilterResult getLanguageFilterResult() {
    return languageFilterResult;
  }

  public void setLanguageFilterResult(LearningGenaiRootLanguageFilterResult languageFilterResult) {
    this.languageFilterResult = languageFilterResult;
  }


  public LearningGenaiRootFilterMetadataFilterDebugInfo raiOutput(LearningGenaiRootRAIOutput raiOutput) {
    this.raiOutput = raiOutput;
    return this;
  }

  /**
   * Get raiOutput
   * @return raiOutput
   */
  @javax.annotation.Nullable
  public LearningGenaiRootRAIOutput getRaiOutput() {
    return raiOutput;
  }

  public void setRaiOutput(LearningGenaiRootRAIOutput raiOutput) {
    this.raiOutput = raiOutput;
  }


  public LearningGenaiRootFilterMetadataFilterDebugInfo raiResult(CloudAiNlLlmProtoServiceRaiResult raiResult) {
    this.raiResult = raiResult;
    return this;
  }

  /**
   * Get raiResult
   * @return raiResult
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServiceRaiResult getRaiResult() {
    return raiResult;
  }

  public void setRaiResult(CloudAiNlLlmProtoServiceRaiResult raiResult) {
    this.raiResult = raiResult;
  }


  public LearningGenaiRootFilterMetadataFilterDebugInfo raiSignal(CloudAiNlLlmProtoServiceRaiSignal raiSignal) {
    this.raiSignal = raiSignal;
    return this;
  }

  /**
   * Get raiSignal
   * @return raiSignal
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServiceRaiSignal getRaiSignal() {
    return raiSignal;
  }

  public void setRaiSignal(CloudAiNlLlmProtoServiceRaiSignal raiSignal) {
    this.raiSignal = raiSignal;
  }


  public LearningGenaiRootFilterMetadataFilterDebugInfo streamRecitationResult(LanguageLabsAidaTrustRecitationProtoStreamRecitationResult streamRecitationResult) {
    this.streamRecitationResult = streamRecitationResult;
    return this;
  }

  /**
   * Get streamRecitationResult
   * @return streamRecitationResult
   */
  @javax.annotation.Nullable
  public LanguageLabsAidaTrustRecitationProtoStreamRecitationResult getStreamRecitationResult() {
    return streamRecitationResult;
  }

  public void setStreamRecitationResult(LanguageLabsAidaTrustRecitationProtoStreamRecitationResult streamRecitationResult) {
    this.streamRecitationResult = streamRecitationResult;
  }


  public LearningGenaiRootFilterMetadataFilterDebugInfo takedownResult(LearningGenaiRootTakedownResult takedownResult) {
    this.takedownResult = takedownResult;
    return this;
  }

  /**
   * Get takedownResult
   * @return takedownResult
   */
  @javax.annotation.Nullable
  public LearningGenaiRootTakedownResult getTakedownResult() {
    return takedownResult;
  }

  public void setTakedownResult(LearningGenaiRootTakedownResult takedownResult) {
    this.takedownResult = takedownResult;
  }


  public LearningGenaiRootFilterMetadataFilterDebugInfo toxicityResult(LearningGenaiRootToxicityResult toxicityResult) {
    this.toxicityResult = toxicityResult;
    return this;
  }

  /**
   * Get toxicityResult
   * @return toxicityResult
   */
  @javax.annotation.Nullable
  public LearningGenaiRootToxicityResult getToxicityResult() {
    return toxicityResult;
  }

  public void setToxicityResult(LearningGenaiRootToxicityResult toxicityResult) {
    this.toxicityResult = toxicityResult;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LearningGenaiRootFilterMetadataFilterDebugInfo learningGenaiRootFilterMetadataFilterDebugInfo = (LearningGenaiRootFilterMetadataFilterDebugInfo) o;
    return Objects.equals(this.classifierOutput, learningGenaiRootFilterMetadataFilterDebugInfo.classifierOutput) &&
        Objects.equals(this.defaultMetadata, learningGenaiRootFilterMetadataFilterDebugInfo.defaultMetadata) &&
        Objects.equals(this.languageFilterResult, learningGenaiRootFilterMetadataFilterDebugInfo.languageFilterResult) &&
        Objects.equals(this.raiOutput, learningGenaiRootFilterMetadataFilterDebugInfo.raiOutput) &&
        Objects.equals(this.raiResult, learningGenaiRootFilterMetadataFilterDebugInfo.raiResult) &&
        Objects.equals(this.raiSignal, learningGenaiRootFilterMetadataFilterDebugInfo.raiSignal) &&
        Objects.equals(this.streamRecitationResult, learningGenaiRootFilterMetadataFilterDebugInfo.streamRecitationResult) &&
        Objects.equals(this.takedownResult, learningGenaiRootFilterMetadataFilterDebugInfo.takedownResult) &&
        Objects.equals(this.toxicityResult, learningGenaiRootFilterMetadataFilterDebugInfo.toxicityResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(classifierOutput, defaultMetadata, languageFilterResult, raiOutput, raiResult, raiSignal, streamRecitationResult, takedownResult, toxicityResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LearningGenaiRootFilterMetadataFilterDebugInfo {\n");
    sb.append("    classifierOutput: ").append(toIndentedString(classifierOutput)).append("\n");
    sb.append("    defaultMetadata: ").append(toIndentedString(defaultMetadata)).append("\n");
    sb.append("    languageFilterResult: ").append(toIndentedString(languageFilterResult)).append("\n");
    sb.append("    raiOutput: ").append(toIndentedString(raiOutput)).append("\n");
    sb.append("    raiResult: ").append(toIndentedString(raiResult)).append("\n");
    sb.append("    raiSignal: ").append(toIndentedString(raiSignal)).append("\n");
    sb.append("    streamRecitationResult: ").append(toIndentedString(streamRecitationResult)).append("\n");
    sb.append("    takedownResult: ").append(toIndentedString(takedownResult)).append("\n");
    sb.append("    toxicityResult: ").append(toIndentedString(toxicityResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("classifierOutput");
    openapiFields.add("defaultMetadata");
    openapiFields.add("languageFilterResult");
    openapiFields.add("raiOutput");
    openapiFields.add("raiResult");
    openapiFields.add("raiSignal");
    openapiFields.add("streamRecitationResult");
    openapiFields.add("takedownResult");
    openapiFields.add("toxicityResult");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LearningGenaiRootFilterMetadataFilterDebugInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LearningGenaiRootFilterMetadataFilterDebugInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LearningGenaiRootFilterMetadataFilterDebugInfo is not found in the empty JSON string", LearningGenaiRootFilterMetadataFilterDebugInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LearningGenaiRootFilterMetadataFilterDebugInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LearningGenaiRootFilterMetadataFilterDebugInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `classifierOutput`
      if (jsonObj.get("classifierOutput") != null && !jsonObj.get("classifierOutput").isJsonNull()) {
        LearningGenaiRootClassifierOutput.validateJsonElement(jsonObj.get("classifierOutput"));
      }
      if ((jsonObj.get("defaultMetadata") != null && !jsonObj.get("defaultMetadata").isJsonNull()) && !jsonObj.get("defaultMetadata").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultMetadata` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultMetadata").toString()));
      }
      // validate the optional field `languageFilterResult`
      if (jsonObj.get("languageFilterResult") != null && !jsonObj.get("languageFilterResult").isJsonNull()) {
        LearningGenaiRootLanguageFilterResult.validateJsonElement(jsonObj.get("languageFilterResult"));
      }
      // validate the optional field `raiOutput`
      if (jsonObj.get("raiOutput") != null && !jsonObj.get("raiOutput").isJsonNull()) {
        LearningGenaiRootRAIOutput.validateJsonElement(jsonObj.get("raiOutput"));
      }
      // validate the optional field `raiResult`
      if (jsonObj.get("raiResult") != null && !jsonObj.get("raiResult").isJsonNull()) {
        CloudAiNlLlmProtoServiceRaiResult.validateJsonElement(jsonObj.get("raiResult"));
      }
      // validate the optional field `raiSignal`
      if (jsonObj.get("raiSignal") != null && !jsonObj.get("raiSignal").isJsonNull()) {
        CloudAiNlLlmProtoServiceRaiSignal.validateJsonElement(jsonObj.get("raiSignal"));
      }
      // validate the optional field `streamRecitationResult`
      if (jsonObj.get("streamRecitationResult") != null && !jsonObj.get("streamRecitationResult").isJsonNull()) {
        LanguageLabsAidaTrustRecitationProtoStreamRecitationResult.validateJsonElement(jsonObj.get("streamRecitationResult"));
      }
      // validate the optional field `takedownResult`
      if (jsonObj.get("takedownResult") != null && !jsonObj.get("takedownResult").isJsonNull()) {
        LearningGenaiRootTakedownResult.validateJsonElement(jsonObj.get("takedownResult"));
      }
      // validate the optional field `toxicityResult`
      if (jsonObj.get("toxicityResult") != null && !jsonObj.get("toxicityResult").isJsonNull()) {
        LearningGenaiRootToxicityResult.validateJsonElement(jsonObj.get("toxicityResult"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LearningGenaiRootFilterMetadataFilterDebugInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LearningGenaiRootFilterMetadataFilterDebugInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LearningGenaiRootFilterMetadataFilterDebugInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LearningGenaiRootFilterMetadataFilterDebugInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<LearningGenaiRootFilterMetadataFilterDebugInfo>() {
           @Override
           public void write(JsonWriter out, LearningGenaiRootFilterMetadataFilterDebugInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LearningGenaiRootFilterMetadataFilterDebugInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LearningGenaiRootFilterMetadataFilterDebugInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LearningGenaiRootFilterMetadataFilterDebugInfo
   * @throws IOException if the JSON string is invalid with respect to LearningGenaiRootFilterMetadataFilterDebugInfo
   */
  public static LearningGenaiRootFilterMetadataFilterDebugInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LearningGenaiRootFilterMetadataFilterDebugInfo.class);
  }

  /**
   * Convert an instance of LearningGenaiRootFilterMetadataFilterDebugInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

