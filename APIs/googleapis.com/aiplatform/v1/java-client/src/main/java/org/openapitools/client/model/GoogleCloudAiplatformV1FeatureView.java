/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeatureViewBigQuerySource;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource;
import org.openapitools.client.model.GoogleCloudAiplatformV1FeatureViewSyncConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FeatureView is representation of values that the FeatureOnlineStore will serve based on its syncConfig.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1FeatureView {
  public static final String SERIALIZED_NAME_BIG_QUERY_SOURCE = "bigQuerySource";
  @SerializedName(SERIALIZED_NAME_BIG_QUERY_SOURCE)
  private GoogleCloudAiplatformV1FeatureViewBigQuerySource bigQuerySource;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_FEATURE_REGISTRY_SOURCE = "featureRegistrySource";
  @SerializedName(SERIALIZED_NAME_FEATURE_REGISTRY_SOURCE)
  private GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource featureRegistrySource;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SYNC_CONFIG = "syncConfig";
  @SerializedName(SERIALIZED_NAME_SYNC_CONFIG)
  private GoogleCloudAiplatformV1FeatureViewSyncConfig syncConfig;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudAiplatformV1FeatureView() {
  }

  public GoogleCloudAiplatformV1FeatureView(
     String createTime, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.updateTime = updateTime;
  }

  public GoogleCloudAiplatformV1FeatureView bigQuerySource(GoogleCloudAiplatformV1FeatureViewBigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
    return this;
  }

  /**
   * Get bigQuerySource
   * @return bigQuerySource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1FeatureViewBigQuerySource getBigQuerySource() {
    return bigQuerySource;
  }

  public void setBigQuerySource(GoogleCloudAiplatformV1FeatureViewBigQuerySource bigQuerySource) {
    this.bigQuerySource = bigQuerySource;
  }


  /**
   * Output only. Timestamp when this FeatureView was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1FeatureView etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Optional. Used to perform consistent read-modify-write updates. If not set, a blind \&quot;overwrite\&quot; update happens.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudAiplatformV1FeatureView featureRegistrySource(GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource featureRegistrySource) {
    this.featureRegistrySource = featureRegistrySource;
    return this;
  }

  /**
   * Get featureRegistrySource
   * @return featureRegistrySource
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource getFeatureRegistrySource() {
    return featureRegistrySource;
  }

  public void setFeatureRegistrySource(GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource featureRegistrySource) {
    this.featureRegistrySource = featureRegistrySource;
  }


  public GoogleCloudAiplatformV1FeatureView labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudAiplatformV1FeatureView putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. The labels with user-defined metadata to organize your FeatureViews. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information on and examples of labels. No more than 64 user labels can be associated with one FeatureOnlineStore(System labels are excluded).\&quot; System reserved label keys are prefixed with \&quot;aiplatform.googleapis.com/\&quot; and are immutable.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudAiplatformV1FeatureView name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Identifier. Name of the FeatureView. Format: &#x60;projects/{project}/locations/{location}/featureOnlineStores/{feature_online_store}/featureViews/{feature_view}&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public GoogleCloudAiplatformV1FeatureView syncConfig(GoogleCloudAiplatformV1FeatureViewSyncConfig syncConfig) {
    this.syncConfig = syncConfig;
    return this;
  }

  /**
   * Get syncConfig
   * @return syncConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1FeatureViewSyncConfig getSyncConfig() {
    return syncConfig;
  }

  public void setSyncConfig(GoogleCloudAiplatformV1FeatureViewSyncConfig syncConfig) {
    this.syncConfig = syncConfig;
  }


  /**
   * Output only. Timestamp when this FeatureView was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1FeatureView googleCloudAiplatformV1FeatureView = (GoogleCloudAiplatformV1FeatureView) o;
    return Objects.equals(this.bigQuerySource, googleCloudAiplatformV1FeatureView.bigQuerySource) &&
        Objects.equals(this.createTime, googleCloudAiplatformV1FeatureView.createTime) &&
        Objects.equals(this.etag, googleCloudAiplatformV1FeatureView.etag) &&
        Objects.equals(this.featureRegistrySource, googleCloudAiplatformV1FeatureView.featureRegistrySource) &&
        Objects.equals(this.labels, googleCloudAiplatformV1FeatureView.labels) &&
        Objects.equals(this.name, googleCloudAiplatformV1FeatureView.name) &&
        Objects.equals(this.syncConfig, googleCloudAiplatformV1FeatureView.syncConfig) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1FeatureView.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bigQuerySource, createTime, etag, featureRegistrySource, labels, name, syncConfig, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1FeatureView {\n");
    sb.append("    bigQuerySource: ").append(toIndentedString(bigQuerySource)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    featureRegistrySource: ").append(toIndentedString(featureRegistrySource)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    syncConfig: ").append(toIndentedString(syncConfig)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bigQuerySource");
    openapiFields.add("createTime");
    openapiFields.add("etag");
    openapiFields.add("featureRegistrySource");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("syncConfig");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1FeatureView
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1FeatureView.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1FeatureView is not found in the empty JSON string", GoogleCloudAiplatformV1FeatureView.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1FeatureView.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1FeatureView` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `bigQuerySource`
      if (jsonObj.get("bigQuerySource") != null && !jsonObj.get("bigQuerySource").isJsonNull()) {
        GoogleCloudAiplatformV1FeatureViewBigQuerySource.validateJsonElement(jsonObj.get("bigQuerySource"));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      // validate the optional field `featureRegistrySource`
      if (jsonObj.get("featureRegistrySource") != null && !jsonObj.get("featureRegistrySource").isJsonNull()) {
        GoogleCloudAiplatformV1FeatureViewFeatureRegistrySource.validateJsonElement(jsonObj.get("featureRegistrySource"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `syncConfig`
      if (jsonObj.get("syncConfig") != null && !jsonObj.get("syncConfig").isJsonNull()) {
        GoogleCloudAiplatformV1FeatureViewSyncConfig.validateJsonElement(jsonObj.get("syncConfig"));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1FeatureView.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1FeatureView' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1FeatureView> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1FeatureView.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1FeatureView>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1FeatureView value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1FeatureView read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1FeatureView given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1FeatureView
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1FeatureView
   */
  public static GoogleCloudAiplatformV1FeatureView fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1FeatureView.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1FeatureView to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

