/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for ModelService.MergeVersionAliases.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1MergeVersionAliasesRequest {
  public static final String SERIALIZED_NAME_VERSION_ALIASES = "versionAliases";
  @SerializedName(SERIALIZED_NAME_VERSION_ALIASES)
  private List<String> versionAliases = new ArrayList<>();

  public GoogleCloudAiplatformV1MergeVersionAliasesRequest() {
  }

  public GoogleCloudAiplatformV1MergeVersionAliasesRequest versionAliases(List<String> versionAliases) {
    this.versionAliases = versionAliases;
    return this;
  }

  public GoogleCloudAiplatformV1MergeVersionAliasesRequest addVersionAliasesItem(String versionAliasesItem) {
    if (this.versionAliases == null) {
      this.versionAliases = new ArrayList<>();
    }
    this.versionAliases.add(versionAliasesItem);
    return this;
  }

  /**
   * Required. The set of version aliases to merge. The alias should be at most 128 characters, and match &#x60;a-z{0,126}[a-z-0-9]&#x60;. Add the &#x60;-&#x60; prefix to an alias means removing that alias from the version. &#x60;-&#x60; is NOT counted in the 128 characters. Example: &#x60;-golden&#x60; means removing the &#x60;golden&#x60; alias from the version. There is NO ordering in aliases, which means 1) The aliases returned from GetModel API might not have the exactly same order from this MergeVersionAliases API. 2) Adding and deleting the same alias in the request is not recommended, and the 2 operations will be cancelled out.
   * @return versionAliases
   */
  @javax.annotation.Nullable
  public List<String> getVersionAliases() {
    return versionAliases;
  }

  public void setVersionAliases(List<String> versionAliases) {
    this.versionAliases = versionAliases;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1MergeVersionAliasesRequest googleCloudAiplatformV1MergeVersionAliasesRequest = (GoogleCloudAiplatformV1MergeVersionAliasesRequest) o;
    return Objects.equals(this.versionAliases, googleCloudAiplatformV1MergeVersionAliasesRequest.versionAliases);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionAliases);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1MergeVersionAliasesRequest {\n");
    sb.append("    versionAliases: ").append(toIndentedString(versionAliases)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("versionAliases");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1MergeVersionAliasesRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1MergeVersionAliasesRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1MergeVersionAliasesRequest is not found in the empty JSON string", GoogleCloudAiplatformV1MergeVersionAliasesRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1MergeVersionAliasesRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1MergeVersionAliasesRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("versionAliases") != null && !jsonObj.get("versionAliases").isJsonNull() && !jsonObj.get("versionAliases").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionAliases` to be an array in the JSON string but got `%s`", jsonObj.get("versionAliases").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1MergeVersionAliasesRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1MergeVersionAliasesRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1MergeVersionAliasesRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1MergeVersionAliasesRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1MergeVersionAliasesRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1MergeVersionAliasesRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1MergeVersionAliasesRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1MergeVersionAliasesRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1MergeVersionAliasesRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1MergeVersionAliasesRequest
   */
  public static GoogleCloudAiplatformV1MergeVersionAliasesRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1MergeVersionAliasesRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1MergeVersionAliasesRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

