/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1DeployedModel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Request message for EndpointService.DeployModel.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1DeployModelRequest {
  public static final String SERIALIZED_NAME_DEPLOYED_MODEL = "deployedModel";
  @SerializedName(SERIALIZED_NAME_DEPLOYED_MODEL)
  private GoogleCloudAiplatformV1DeployedModel deployedModel;

  public static final String SERIALIZED_NAME_TRAFFIC_SPLIT = "trafficSplit";
  @SerializedName(SERIALIZED_NAME_TRAFFIC_SPLIT)
  private Map<String, Integer> trafficSplit = new HashMap<>();

  public GoogleCloudAiplatformV1DeployModelRequest() {
  }

  public GoogleCloudAiplatformV1DeployModelRequest deployedModel(GoogleCloudAiplatformV1DeployedModel deployedModel) {
    this.deployedModel = deployedModel;
    return this;
  }

  /**
   * Get deployedModel
   * @return deployedModel
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1DeployedModel getDeployedModel() {
    return deployedModel;
  }

  public void setDeployedModel(GoogleCloudAiplatformV1DeployedModel deployedModel) {
    this.deployedModel = deployedModel;
  }


  public GoogleCloudAiplatformV1DeployModelRequest trafficSplit(Map<String, Integer> trafficSplit) {
    this.trafficSplit = trafficSplit;
    return this;
  }

  public GoogleCloudAiplatformV1DeployModelRequest putTrafficSplitItem(String key, Integer trafficSplitItem) {
    if (this.trafficSplit == null) {
      this.trafficSplit = new HashMap<>();
    }
    this.trafficSplit.put(key, trafficSplitItem);
    return this;
  }

  /**
   * A map from a DeployedModel&#39;s ID to the percentage of this Endpoint&#39;s traffic that should be forwarded to that DeployedModel. If this field is non-empty, then the Endpoint&#39;s traffic_split will be overwritten with it. To refer to the ID of the just being deployed Model, a \&quot;0\&quot; should be used, and the actual ID of the new DeployedModel will be filled in its place by this method. The traffic percentage values must add up to 100. If this field is empty, then the Endpoint&#39;s traffic_split is not updated.
   * @return trafficSplit
   */
  @javax.annotation.Nullable
  public Map<String, Integer> getTrafficSplit() {
    return trafficSplit;
  }

  public void setTrafficSplit(Map<String, Integer> trafficSplit) {
    this.trafficSplit = trafficSplit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1DeployModelRequest googleCloudAiplatformV1DeployModelRequest = (GoogleCloudAiplatformV1DeployModelRequest) o;
    return Objects.equals(this.deployedModel, googleCloudAiplatformV1DeployModelRequest.deployedModel) &&
        Objects.equals(this.trafficSplit, googleCloudAiplatformV1DeployModelRequest.trafficSplit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deployedModel, trafficSplit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1DeployModelRequest {\n");
    sb.append("    deployedModel: ").append(toIndentedString(deployedModel)).append("\n");
    sb.append("    trafficSplit: ").append(toIndentedString(trafficSplit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deployedModel");
    openapiFields.add("trafficSplit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1DeployModelRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1DeployModelRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1DeployModelRequest is not found in the empty JSON string", GoogleCloudAiplatformV1DeployModelRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1DeployModelRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1DeployModelRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `deployedModel`
      if (jsonObj.get("deployedModel") != null && !jsonObj.get("deployedModel").isJsonNull()) {
        GoogleCloudAiplatformV1DeployedModel.validateJsonElement(jsonObj.get("deployedModel"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1DeployModelRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1DeployModelRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1DeployModelRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1DeployModelRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1DeployModelRequest>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1DeployModelRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1DeployModelRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1DeployModelRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1DeployModelRequest
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1DeployModelRequest
   */
  public static GoogleCloudAiplatformV1DeployModelRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1DeployModelRequest.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1DeployModelRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

