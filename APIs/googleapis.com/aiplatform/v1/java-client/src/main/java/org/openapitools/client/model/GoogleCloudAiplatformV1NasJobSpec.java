/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the spec of a NasJob.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1NasJobSpec {
  public static final String SERIALIZED_NAME_MULTI_TRIAL_ALGORITHM_SPEC = "multiTrialAlgorithmSpec";
  @SerializedName(SERIALIZED_NAME_MULTI_TRIAL_ALGORITHM_SPEC)
  private GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec multiTrialAlgorithmSpec;

  public static final String SERIALIZED_NAME_RESUME_NAS_JOB_ID = "resumeNasJobId";
  @SerializedName(SERIALIZED_NAME_RESUME_NAS_JOB_ID)
  private String resumeNasJobId;

  public static final String SERIALIZED_NAME_SEARCH_SPACE_SPEC = "searchSpaceSpec";
  @SerializedName(SERIALIZED_NAME_SEARCH_SPACE_SPEC)
  private String searchSpaceSpec;

  public GoogleCloudAiplatformV1NasJobSpec() {
  }

  public GoogleCloudAiplatformV1NasJobSpec multiTrialAlgorithmSpec(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec multiTrialAlgorithmSpec) {
    this.multiTrialAlgorithmSpec = multiTrialAlgorithmSpec;
    return this;
  }

  /**
   * Get multiTrialAlgorithmSpec
   * @return multiTrialAlgorithmSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec getMultiTrialAlgorithmSpec() {
    return multiTrialAlgorithmSpec;
  }

  public void setMultiTrialAlgorithmSpec(GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec multiTrialAlgorithmSpec) {
    this.multiTrialAlgorithmSpec = multiTrialAlgorithmSpec;
  }


  public GoogleCloudAiplatformV1NasJobSpec resumeNasJobId(String resumeNasJobId) {
    this.resumeNasJobId = resumeNasJobId;
    return this;
  }

  /**
   * The ID of the existing NasJob in the same Project and Location which will be used to resume search. search_space_spec and nas_algorithm_spec are obtained from previous NasJob hence should not provide them again for this NasJob.
   * @return resumeNasJobId
   */
  @javax.annotation.Nullable
  public String getResumeNasJobId() {
    return resumeNasJobId;
  }

  public void setResumeNasJobId(String resumeNasJobId) {
    this.resumeNasJobId = resumeNasJobId;
  }


  public GoogleCloudAiplatformV1NasJobSpec searchSpaceSpec(String searchSpaceSpec) {
    this.searchSpaceSpec = searchSpaceSpec;
    return this;
  }

  /**
   * It defines the search space for Neural Architecture Search (NAS).
   * @return searchSpaceSpec
   */
  @javax.annotation.Nullable
  public String getSearchSpaceSpec() {
    return searchSpaceSpec;
  }

  public void setSearchSpaceSpec(String searchSpaceSpec) {
    this.searchSpaceSpec = searchSpaceSpec;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1NasJobSpec googleCloudAiplatformV1NasJobSpec = (GoogleCloudAiplatformV1NasJobSpec) o;
    return Objects.equals(this.multiTrialAlgorithmSpec, googleCloudAiplatformV1NasJobSpec.multiTrialAlgorithmSpec) &&
        Objects.equals(this.resumeNasJobId, googleCloudAiplatformV1NasJobSpec.resumeNasJobId) &&
        Objects.equals(this.searchSpaceSpec, googleCloudAiplatformV1NasJobSpec.searchSpaceSpec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(multiTrialAlgorithmSpec, resumeNasJobId, searchSpaceSpec);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1NasJobSpec {\n");
    sb.append("    multiTrialAlgorithmSpec: ").append(toIndentedString(multiTrialAlgorithmSpec)).append("\n");
    sb.append("    resumeNasJobId: ").append(toIndentedString(resumeNasJobId)).append("\n");
    sb.append("    searchSpaceSpec: ").append(toIndentedString(searchSpaceSpec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("multiTrialAlgorithmSpec");
    openapiFields.add("resumeNasJobId");
    openapiFields.add("searchSpaceSpec");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1NasJobSpec
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1NasJobSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1NasJobSpec is not found in the empty JSON string", GoogleCloudAiplatformV1NasJobSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1NasJobSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1NasJobSpec` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `multiTrialAlgorithmSpec`
      if (jsonObj.get("multiTrialAlgorithmSpec") != null && !jsonObj.get("multiTrialAlgorithmSpec").isJsonNull()) {
        GoogleCloudAiplatformV1NasJobSpecMultiTrialAlgorithmSpec.validateJsonElement(jsonObj.get("multiTrialAlgorithmSpec"));
      }
      if ((jsonObj.get("resumeNasJobId") != null && !jsonObj.get("resumeNasJobId").isJsonNull()) && !jsonObj.get("resumeNasJobId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resumeNasJobId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resumeNasJobId").toString()));
      }
      if ((jsonObj.get("searchSpaceSpec") != null && !jsonObj.get("searchSpaceSpec").isJsonNull()) && !jsonObj.get("searchSpaceSpec").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchSpaceSpec` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchSpaceSpec").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1NasJobSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1NasJobSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1NasJobSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1NasJobSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1NasJobSpec>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1NasJobSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1NasJobSpec read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1NasJobSpec given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1NasJobSpec
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1NasJobSpec
   */
  public static GoogleCloudAiplatformV1NasJobSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1NasJobSpec.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1NasJobSpec to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

