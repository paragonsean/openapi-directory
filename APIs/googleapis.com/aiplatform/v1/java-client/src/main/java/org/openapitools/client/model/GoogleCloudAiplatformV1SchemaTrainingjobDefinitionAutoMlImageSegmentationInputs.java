/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs {
  public static final String SERIALIZED_NAME_BASE_MODEL_ID = "baseModelId";
  @SerializedName(SERIALIZED_NAME_BASE_MODEL_ID)
  private String baseModelId;

  public static final String SERIALIZED_NAME_BUDGET_MILLI_NODE_HOURS = "budgetMilliNodeHours";
  @SerializedName(SERIALIZED_NAME_BUDGET_MILLI_NODE_HOURS)
  private String budgetMilliNodeHours;

  /**
   * Gets or Sets modelType
   */
  @JsonAdapter(ModelTypeEnum.Adapter.class)
  public enum ModelTypeEnum {
    MODEL_TYPE_UNSPECIFIED("MODEL_TYPE_UNSPECIFIED"),
    
    CLOUD_HIGH_ACCURACY_1("CLOUD_HIGH_ACCURACY_1"),
    
    CLOUD_LOW_ACCURACY_1("CLOUD_LOW_ACCURACY_1"),
    
    MOBILE_TF_LOW_LATENCY_1("MOBILE_TF_LOW_LATENCY_1");

    private String value;

    ModelTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ModelTypeEnum fromValue(String value) {
      for (ModelTypeEnum b : ModelTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ModelTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ModelTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ModelTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ModelTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ModelTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MODEL_TYPE = "modelType";
  @SerializedName(SERIALIZED_NAME_MODEL_TYPE)
  private ModelTypeEnum modelType;

  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs() {
  }

  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs baseModelId(String baseModelId) {
    this.baseModelId = baseModelId;
    return this;
  }

  /**
   * The ID of the &#x60;base&#x60; model. If it is specified, the new model will be trained based on the &#x60;base&#x60; model. Otherwise, the new model will be trained from scratch. The &#x60;base&#x60; model must be in the same Project and Location as the new Model to train, and have the same modelType.
   * @return baseModelId
   */
  @javax.annotation.Nullable
  public String getBaseModelId() {
    return baseModelId;
  }

  public void setBaseModelId(String baseModelId) {
    this.baseModelId = baseModelId;
  }


  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs budgetMilliNodeHours(String budgetMilliNodeHours) {
    this.budgetMilliNodeHours = budgetMilliNodeHours;
    return this;
  }

  /**
   * The training budget of creating this model, expressed in milli node hours i.e. 1,000 value in this field means 1 node hour. The actual metadata.costMilliNodeHours will be equal or less than this value. If further model training ceases to provide any improvements, it will stop without using the full budget and the metadata.successfulStopReason will be &#x60;model-converged&#x60;. Note, node_hour &#x3D; actual_hour * number_of_nodes_involved. Or actual_wall_clock_hours &#x3D; train_budget_milli_node_hours / (number_of_nodes_involved * 1000) For modelType &#x60;cloud-high-accuracy-1&#x60;(default), the budget must be between 20,000 and 2,000,000 milli node hours, inclusive. The default value is 192,000 which represents one day in wall time (1000 milli * 24 hours * 8 nodes).
   * @return budgetMilliNodeHours
   */
  @javax.annotation.Nullable
  public String getBudgetMilliNodeHours() {
    return budgetMilliNodeHours;
  }

  public void setBudgetMilliNodeHours(String budgetMilliNodeHours) {
    this.budgetMilliNodeHours = budgetMilliNodeHours;
  }


  public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs modelType(ModelTypeEnum modelType) {
    this.modelType = modelType;
    return this;
  }

  /**
   * Get modelType
   * @return modelType
   */
  @javax.annotation.Nullable
  public ModelTypeEnum getModelType() {
    return modelType;
  }

  public void setModelType(ModelTypeEnum modelType) {
    this.modelType = modelType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs googleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs = (GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs) o;
    return Objects.equals(this.baseModelId, googleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.baseModelId) &&
        Objects.equals(this.budgetMilliNodeHours, googleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.budgetMilliNodeHours) &&
        Objects.equals(this.modelType, googleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.modelType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseModelId, budgetMilliNodeHours, modelType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs {\n");
    sb.append("    baseModelId: ").append(toIndentedString(baseModelId)).append("\n");
    sb.append("    budgetMilliNodeHours: ").append(toIndentedString(budgetMilliNodeHours)).append("\n");
    sb.append("    modelType: ").append(toIndentedString(modelType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("baseModelId");
    openapiFields.add("budgetMilliNodeHours");
    openapiFields.add("modelType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs is not found in the empty JSON string", GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("baseModelId") != null && !jsonObj.get("baseModelId").isJsonNull()) && !jsonObj.get("baseModelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `baseModelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("baseModelId").toString()));
      }
      if ((jsonObj.get("budgetMilliNodeHours") != null && !jsonObj.get("budgetMilliNodeHours").isJsonNull()) && !jsonObj.get("budgetMilliNodeHours").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `budgetMilliNodeHours` to be a primitive type in the JSON string but got `%s`", jsonObj.get("budgetMilliNodeHours").toString()));
      }
      if ((jsonObj.get("modelType") != null && !jsonObj.get("modelType").isJsonNull()) && !jsonObj.get("modelType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modelType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modelType").toString()));
      }
      // validate the optional field `modelType`
      if (jsonObj.get("modelType") != null && !jsonObj.get("modelType").isJsonNull()) {
        ModelTypeEnum.validateJsonElement(jsonObj.get("modelType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs
   */
  public static GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageSegmentationInputs to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

