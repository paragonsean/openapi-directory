/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.IntelligenceCloudAutomlXpsMetricEntryLabel;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * IntelligenceCloudAutomlXpsMetricEntry
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class IntelligenceCloudAutomlXpsMetricEntry {
  public static final String SERIALIZED_NAME_ARGENTUM_METRIC_ID = "argentumMetricId";
  @SerializedName(SERIALIZED_NAME_ARGENTUM_METRIC_ID)
  private String argentumMetricId;

  public static final String SERIALIZED_NAME_DOUBLE_VALUE = "doubleValue";
  @SerializedName(SERIALIZED_NAME_DOUBLE_VALUE)
  private Double doubleValue;

  public static final String SERIALIZED_NAME_INT64_VALUE = "int64Value";
  @SerializedName(SERIALIZED_NAME_INT64_VALUE)
  private String int64Value;

  public static final String SERIALIZED_NAME_METRIC_NAME = "metricName";
  @SerializedName(SERIALIZED_NAME_METRIC_NAME)
  private String metricName;

  public static final String SERIALIZED_NAME_SYSTEM_LABELS = "systemLabels";
  @SerializedName(SERIALIZED_NAME_SYSTEM_LABELS)
  private List<IntelligenceCloudAutomlXpsMetricEntryLabel> systemLabels = new ArrayList<>();

  public IntelligenceCloudAutomlXpsMetricEntry() {
  }

  public IntelligenceCloudAutomlXpsMetricEntry argentumMetricId(String argentumMetricId) {
    this.argentumMetricId = argentumMetricId;
    return this;
  }

  /**
   * For billing metrics that are using legacy sku&#39;s, set the legacy billing metric id here. This will be sent to Chemist as the \&quot;cloudbilling.googleapis.com/argentum_metric_id\&quot; label. Otherwise leave empty.
   * @return argentumMetricId
   */
  @javax.annotation.Nullable
  public String getArgentumMetricId() {
    return argentumMetricId;
  }

  public void setArgentumMetricId(String argentumMetricId) {
    this.argentumMetricId = argentumMetricId;
  }


  public IntelligenceCloudAutomlXpsMetricEntry doubleValue(Double doubleValue) {
    this.doubleValue = doubleValue;
    return this;
  }

  /**
   * A double value.
   * @return doubleValue
   */
  @javax.annotation.Nullable
  public Double getDoubleValue() {
    return doubleValue;
  }

  public void setDoubleValue(Double doubleValue) {
    this.doubleValue = doubleValue;
  }


  public IntelligenceCloudAutomlXpsMetricEntry int64Value(String int64Value) {
    this.int64Value = int64Value;
    return this;
  }

  /**
   * A signed 64-bit integer value.
   * @return int64Value
   */
  @javax.annotation.Nullable
  public String getInt64Value() {
    return int64Value;
  }

  public void setInt64Value(String int64Value) {
    this.int64Value = int64Value;
  }


  public IntelligenceCloudAutomlXpsMetricEntry metricName(String metricName) {
    this.metricName = metricName;
    return this;
  }

  /**
   * The metric name defined in the service configuration.
   * @return metricName
   */
  @javax.annotation.Nullable
  public String getMetricName() {
    return metricName;
  }

  public void setMetricName(String metricName) {
    this.metricName = metricName;
  }


  public IntelligenceCloudAutomlXpsMetricEntry systemLabels(List<IntelligenceCloudAutomlXpsMetricEntryLabel> systemLabels) {
    this.systemLabels = systemLabels;
    return this;
  }

  public IntelligenceCloudAutomlXpsMetricEntry addSystemLabelsItem(IntelligenceCloudAutomlXpsMetricEntryLabel systemLabelsItem) {
    if (this.systemLabels == null) {
      this.systemLabels = new ArrayList<>();
    }
    this.systemLabels.add(systemLabelsItem);
    return this;
  }

  /**
   * Billing system labels for this (metric, value) pair.
   * @return systemLabels
   */
  @javax.annotation.Nullable
  public List<IntelligenceCloudAutomlXpsMetricEntryLabel> getSystemLabels() {
    return systemLabels;
  }

  public void setSystemLabels(List<IntelligenceCloudAutomlXpsMetricEntryLabel> systemLabels) {
    this.systemLabels = systemLabels;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntelligenceCloudAutomlXpsMetricEntry intelligenceCloudAutomlXpsMetricEntry = (IntelligenceCloudAutomlXpsMetricEntry) o;
    return Objects.equals(this.argentumMetricId, intelligenceCloudAutomlXpsMetricEntry.argentumMetricId) &&
        Objects.equals(this.doubleValue, intelligenceCloudAutomlXpsMetricEntry.doubleValue) &&
        Objects.equals(this.int64Value, intelligenceCloudAutomlXpsMetricEntry.int64Value) &&
        Objects.equals(this.metricName, intelligenceCloudAutomlXpsMetricEntry.metricName) &&
        Objects.equals(this.systemLabels, intelligenceCloudAutomlXpsMetricEntry.systemLabels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(argentumMetricId, doubleValue, int64Value, metricName, systemLabels);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntelligenceCloudAutomlXpsMetricEntry {\n");
    sb.append("    argentumMetricId: ").append(toIndentedString(argentumMetricId)).append("\n");
    sb.append("    doubleValue: ").append(toIndentedString(doubleValue)).append("\n");
    sb.append("    int64Value: ").append(toIndentedString(int64Value)).append("\n");
    sb.append("    metricName: ").append(toIndentedString(metricName)).append("\n");
    sb.append("    systemLabels: ").append(toIndentedString(systemLabels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("argentumMetricId");
    openapiFields.add("doubleValue");
    openapiFields.add("int64Value");
    openapiFields.add("metricName");
    openapiFields.add("systemLabels");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IntelligenceCloudAutomlXpsMetricEntry
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IntelligenceCloudAutomlXpsMetricEntry.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IntelligenceCloudAutomlXpsMetricEntry is not found in the empty JSON string", IntelligenceCloudAutomlXpsMetricEntry.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IntelligenceCloudAutomlXpsMetricEntry.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IntelligenceCloudAutomlXpsMetricEntry` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("argentumMetricId") != null && !jsonObj.get("argentumMetricId").isJsonNull()) && !jsonObj.get("argentumMetricId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `argentumMetricId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("argentumMetricId").toString()));
      }
      if ((jsonObj.get("int64Value") != null && !jsonObj.get("int64Value").isJsonNull()) && !jsonObj.get("int64Value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `int64Value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("int64Value").toString()));
      }
      if ((jsonObj.get("metricName") != null && !jsonObj.get("metricName").isJsonNull()) && !jsonObj.get("metricName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `metricName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("metricName").toString()));
      }
      if (jsonObj.get("systemLabels") != null && !jsonObj.get("systemLabels").isJsonNull()) {
        JsonArray jsonArraysystemLabels = jsonObj.getAsJsonArray("systemLabels");
        if (jsonArraysystemLabels != null) {
          // ensure the json data is an array
          if (!jsonObj.get("systemLabels").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `systemLabels` to be an array in the JSON string but got `%s`", jsonObj.get("systemLabels").toString()));
          }

          // validate the optional field `systemLabels` (array)
          for (int i = 0; i < jsonArraysystemLabels.size(); i++) {
            IntelligenceCloudAutomlXpsMetricEntryLabel.validateJsonElement(jsonArraysystemLabels.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IntelligenceCloudAutomlXpsMetricEntry.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IntelligenceCloudAutomlXpsMetricEntry' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IntelligenceCloudAutomlXpsMetricEntry> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IntelligenceCloudAutomlXpsMetricEntry.class));

       return (TypeAdapter<T>) new TypeAdapter<IntelligenceCloudAutomlXpsMetricEntry>() {
           @Override
           public void write(JsonWriter out, IntelligenceCloudAutomlXpsMetricEntry value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IntelligenceCloudAutomlXpsMetricEntry read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IntelligenceCloudAutomlXpsMetricEntry given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IntelligenceCloudAutomlXpsMetricEntry
   * @throws IOException if the JSON string is invalid with respect to IntelligenceCloudAutomlXpsMetricEntry
   */
  public static IntelligenceCloudAutomlXpsMetricEntry fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IntelligenceCloudAutomlXpsMetricEntry.class);
  }

  /**
   * Convert an instance of IntelligenceCloudAutomlXpsMetricEntry to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

