/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1PredictSchemata;
import org.openapitools.client.model.GoogleCloudAiplatformV1PublisherModelCallToAction;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A Model Garden Publisher Model.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1PublisherModel {
  public static final String SERIALIZED_NAME_FRAMEWORKS = "frameworks";
  @SerializedName(SERIALIZED_NAME_FRAMEWORKS)
  private List<String> frameworks = new ArrayList<>();

  /**
   * Optional. Indicates the launch stage of the model.
   */
  @JsonAdapter(LaunchStageEnum.Adapter.class)
  public enum LaunchStageEnum {
    LAUNCH_STAGE_UNSPECIFIED("LAUNCH_STAGE_UNSPECIFIED"),
    
    DOGFOOD("DOGFOOD"),
    
    EXPERIMENTAL("EXPERIMENTAL"),
    
    PRIVATE_PREVIEW("PRIVATE_PREVIEW"),
    
    PUBLIC_PREVIEW("PUBLIC_PREVIEW"),
    
    GA("GA");

    private String value;

    LaunchStageEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LaunchStageEnum fromValue(String value) {
      for (LaunchStageEnum b : LaunchStageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LaunchStageEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LaunchStageEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LaunchStageEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LaunchStageEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      LaunchStageEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_LAUNCH_STAGE = "launchStage";
  @SerializedName(SERIALIZED_NAME_LAUNCH_STAGE)
  private LaunchStageEnum launchStage;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Required. Indicates the open source category of the publisher model.
   */
  @JsonAdapter(OpenSourceCategoryEnum.Adapter.class)
  public enum OpenSourceCategoryEnum {
    OPEN_SOURCE_CATEGORY_UNSPECIFIED("OPEN_SOURCE_CATEGORY_UNSPECIFIED"),
    
    PROPRIETARY("PROPRIETARY"),
    
    GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT("GOOGLE_OWNED_OSS_WITH_GOOGLE_CHECKPOINT"),
    
    THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT("THIRD_PARTY_OWNED_OSS_WITH_GOOGLE_CHECKPOINT"),
    
    GOOGLE_OWNED_OSS("GOOGLE_OWNED_OSS"),
    
    THIRD_PARTY_OWNED_OSS("THIRD_PARTY_OWNED_OSS");

    private String value;

    OpenSourceCategoryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OpenSourceCategoryEnum fromValue(String value) {
      for (OpenSourceCategoryEnum b : OpenSourceCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OpenSourceCategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OpenSourceCategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OpenSourceCategoryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OpenSourceCategoryEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OpenSourceCategoryEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OPEN_SOURCE_CATEGORY = "openSourceCategory";
  @SerializedName(SERIALIZED_NAME_OPEN_SOURCE_CATEGORY)
  private OpenSourceCategoryEnum openSourceCategory;

  public static final String SERIALIZED_NAME_PREDICT_SCHEMATA = "predictSchemata";
  @SerializedName(SERIALIZED_NAME_PREDICT_SCHEMATA)
  private GoogleCloudAiplatformV1PredictSchemata predictSchemata;

  public static final String SERIALIZED_NAME_PUBLISHER_MODEL_TEMPLATE = "publisherModelTemplate";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_MODEL_TEMPLATE)
  private String publisherModelTemplate;

  public static final String SERIALIZED_NAME_SUPPORTED_ACTIONS = "supportedActions";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_ACTIONS)
  private GoogleCloudAiplatformV1PublisherModelCallToAction supportedActions;

  public static final String SERIALIZED_NAME_VERSION_ID = "versionId";
  @SerializedName(SERIALIZED_NAME_VERSION_ID)
  private String versionId;

  /**
   * Optional. Indicates the state of the model version.
   */
  @JsonAdapter(VersionStateEnum.Adapter.class)
  public enum VersionStateEnum {
    UNSPECIFIED("VERSION_STATE_UNSPECIFIED"),
    
    STABLE("VERSION_STATE_STABLE"),
    
    UNSTABLE("VERSION_STATE_UNSTABLE");

    private String value;

    VersionStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VersionStateEnum fromValue(String value) {
      for (VersionStateEnum b : VersionStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<VersionStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VersionStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VersionStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VersionStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      VersionStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VERSION_STATE = "versionState";
  @SerializedName(SERIALIZED_NAME_VERSION_STATE)
  private VersionStateEnum versionState;

  public GoogleCloudAiplatformV1PublisherModel() {
  }

  public GoogleCloudAiplatformV1PublisherModel(
     String name, 
     String publisherModelTemplate, 
     String versionId
  ) {
    this();
    this.name = name;
    this.publisherModelTemplate = publisherModelTemplate;
    this.versionId = versionId;
  }

  public GoogleCloudAiplatformV1PublisherModel frameworks(List<String> frameworks) {
    this.frameworks = frameworks;
    return this;
  }

  public GoogleCloudAiplatformV1PublisherModel addFrameworksItem(String frameworksItem) {
    if (this.frameworks == null) {
      this.frameworks = new ArrayList<>();
    }
    this.frameworks.add(frameworksItem);
    return this;
  }

  /**
   * Optional. Additional information about the model&#39;s Frameworks.
   * @return frameworks
   */
  @javax.annotation.Nullable
  public List<String> getFrameworks() {
    return frameworks;
  }

  public void setFrameworks(List<String> frameworks) {
    this.frameworks = frameworks;
  }


  public GoogleCloudAiplatformV1PublisherModel launchStage(LaunchStageEnum launchStage) {
    this.launchStage = launchStage;
    return this;
  }

  /**
   * Optional. Indicates the launch stage of the model.
   * @return launchStage
   */
  @javax.annotation.Nullable
  public LaunchStageEnum getLaunchStage() {
    return launchStage;
  }

  public void setLaunchStage(LaunchStageEnum launchStage) {
    this.launchStage = launchStage;
  }


  /**
   * Output only. The resource name of the PublisherModel.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudAiplatformV1PublisherModel openSourceCategory(OpenSourceCategoryEnum openSourceCategory) {
    this.openSourceCategory = openSourceCategory;
    return this;
  }

  /**
   * Required. Indicates the open source category of the publisher model.
   * @return openSourceCategory
   */
  @javax.annotation.Nullable
  public OpenSourceCategoryEnum getOpenSourceCategory() {
    return openSourceCategory;
  }

  public void setOpenSourceCategory(OpenSourceCategoryEnum openSourceCategory) {
    this.openSourceCategory = openSourceCategory;
  }


  public GoogleCloudAiplatformV1PublisherModel predictSchemata(GoogleCloudAiplatformV1PredictSchemata predictSchemata) {
    this.predictSchemata = predictSchemata;
    return this;
  }

  /**
   * Get predictSchemata
   * @return predictSchemata
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1PredictSchemata getPredictSchemata() {
    return predictSchemata;
  }

  public void setPredictSchemata(GoogleCloudAiplatformV1PredictSchemata predictSchemata) {
    this.predictSchemata = predictSchemata;
  }


  /**
   * Optional. Output only. Immutable. Used to indicate this model has a publisher model and provide the template of the publisher model resource name.
   * @return publisherModelTemplate
   */
  @javax.annotation.Nullable
  public String getPublisherModelTemplate() {
    return publisherModelTemplate;
  }



  public GoogleCloudAiplatformV1PublisherModel supportedActions(GoogleCloudAiplatformV1PublisherModelCallToAction supportedActions) {
    this.supportedActions = supportedActions;
    return this;
  }

  /**
   * Get supportedActions
   * @return supportedActions
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1PublisherModelCallToAction getSupportedActions() {
    return supportedActions;
  }

  public void setSupportedActions(GoogleCloudAiplatformV1PublisherModelCallToAction supportedActions) {
    this.supportedActions = supportedActions;
  }


  /**
   * Output only. Immutable. The version ID of the PublisherModel. A new version is committed when a new model version is uploaded under an existing model id. It is an auto-incrementing decimal number in string representation.
   * @return versionId
   */
  @javax.annotation.Nullable
  public String getVersionId() {
    return versionId;
  }



  public GoogleCloudAiplatformV1PublisherModel versionState(VersionStateEnum versionState) {
    this.versionState = versionState;
    return this;
  }

  /**
   * Optional. Indicates the state of the model version.
   * @return versionState
   */
  @javax.annotation.Nullable
  public VersionStateEnum getVersionState() {
    return versionState;
  }

  public void setVersionState(VersionStateEnum versionState) {
    this.versionState = versionState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1PublisherModel googleCloudAiplatformV1PublisherModel = (GoogleCloudAiplatformV1PublisherModel) o;
    return Objects.equals(this.frameworks, googleCloudAiplatformV1PublisherModel.frameworks) &&
        Objects.equals(this.launchStage, googleCloudAiplatformV1PublisherModel.launchStage) &&
        Objects.equals(this.name, googleCloudAiplatformV1PublisherModel.name) &&
        Objects.equals(this.openSourceCategory, googleCloudAiplatformV1PublisherModel.openSourceCategory) &&
        Objects.equals(this.predictSchemata, googleCloudAiplatformV1PublisherModel.predictSchemata) &&
        Objects.equals(this.publisherModelTemplate, googleCloudAiplatformV1PublisherModel.publisherModelTemplate) &&
        Objects.equals(this.supportedActions, googleCloudAiplatformV1PublisherModel.supportedActions) &&
        Objects.equals(this.versionId, googleCloudAiplatformV1PublisherModel.versionId) &&
        Objects.equals(this.versionState, googleCloudAiplatformV1PublisherModel.versionState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(frameworks, launchStage, name, openSourceCategory, predictSchemata, publisherModelTemplate, supportedActions, versionId, versionState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1PublisherModel {\n");
    sb.append("    frameworks: ").append(toIndentedString(frameworks)).append("\n");
    sb.append("    launchStage: ").append(toIndentedString(launchStage)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    openSourceCategory: ").append(toIndentedString(openSourceCategory)).append("\n");
    sb.append("    predictSchemata: ").append(toIndentedString(predictSchemata)).append("\n");
    sb.append("    publisherModelTemplate: ").append(toIndentedString(publisherModelTemplate)).append("\n");
    sb.append("    supportedActions: ").append(toIndentedString(supportedActions)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    versionState: ").append(toIndentedString(versionState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("frameworks");
    openapiFields.add("launchStage");
    openapiFields.add("name");
    openapiFields.add("openSourceCategory");
    openapiFields.add("predictSchemata");
    openapiFields.add("publisherModelTemplate");
    openapiFields.add("supportedActions");
    openapiFields.add("versionId");
    openapiFields.add("versionState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1PublisherModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1PublisherModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1PublisherModel is not found in the empty JSON string", GoogleCloudAiplatformV1PublisherModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1PublisherModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1PublisherModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("frameworks") != null && !jsonObj.get("frameworks").isJsonNull() && !jsonObj.get("frameworks").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `frameworks` to be an array in the JSON string but got `%s`", jsonObj.get("frameworks").toString()));
      }
      if ((jsonObj.get("launchStage") != null && !jsonObj.get("launchStage").isJsonNull()) && !jsonObj.get("launchStage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `launchStage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("launchStage").toString()));
      }
      // validate the optional field `launchStage`
      if (jsonObj.get("launchStage") != null && !jsonObj.get("launchStage").isJsonNull()) {
        LaunchStageEnum.validateJsonElement(jsonObj.get("launchStage"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("openSourceCategory") != null && !jsonObj.get("openSourceCategory").isJsonNull()) && !jsonObj.get("openSourceCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `openSourceCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("openSourceCategory").toString()));
      }
      // validate the optional field `openSourceCategory`
      if (jsonObj.get("openSourceCategory") != null && !jsonObj.get("openSourceCategory").isJsonNull()) {
        OpenSourceCategoryEnum.validateJsonElement(jsonObj.get("openSourceCategory"));
      }
      // validate the optional field `predictSchemata`
      if (jsonObj.get("predictSchemata") != null && !jsonObj.get("predictSchemata").isJsonNull()) {
        GoogleCloudAiplatformV1PredictSchemata.validateJsonElement(jsonObj.get("predictSchemata"));
      }
      if ((jsonObj.get("publisherModelTemplate") != null && !jsonObj.get("publisherModelTemplate").isJsonNull()) && !jsonObj.get("publisherModelTemplate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publisherModelTemplate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publisherModelTemplate").toString()));
      }
      // validate the optional field `supportedActions`
      if (jsonObj.get("supportedActions") != null && !jsonObj.get("supportedActions").isJsonNull()) {
        GoogleCloudAiplatformV1PublisherModelCallToAction.validateJsonElement(jsonObj.get("supportedActions"));
      }
      if ((jsonObj.get("versionId") != null && !jsonObj.get("versionId").isJsonNull()) && !jsonObj.get("versionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionId").toString()));
      }
      if ((jsonObj.get("versionState") != null && !jsonObj.get("versionState").isJsonNull()) && !jsonObj.get("versionState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionState").toString()));
      }
      // validate the optional field `versionState`
      if (jsonObj.get("versionState") != null && !jsonObj.get("versionState").isJsonNull()) {
        VersionStateEnum.validateJsonElement(jsonObj.get("versionState"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1PublisherModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1PublisherModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1PublisherModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1PublisherModel.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1PublisherModel>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1PublisherModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1PublisherModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1PublisherModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1PublisherModel
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1PublisherModel
   */
  public static GoogleCloudAiplatformV1PublisherModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1PublisherModel.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1PublisherModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

