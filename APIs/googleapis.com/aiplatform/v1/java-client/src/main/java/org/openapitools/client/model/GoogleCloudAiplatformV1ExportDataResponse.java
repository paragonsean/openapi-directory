/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1ModelDataStats;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for DatasetService.ExportData.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1ExportDataResponse {
  public static final String SERIALIZED_NAME_DATA_STATS = "dataStats";
  @SerializedName(SERIALIZED_NAME_DATA_STATS)
  private GoogleCloudAiplatformV1ModelDataStats dataStats;

  public static final String SERIALIZED_NAME_EXPORTED_FILES = "exportedFiles";
  @SerializedName(SERIALIZED_NAME_EXPORTED_FILES)
  private List<String> exportedFiles = new ArrayList<>();

  public GoogleCloudAiplatformV1ExportDataResponse() {
  }

  public GoogleCloudAiplatformV1ExportDataResponse dataStats(GoogleCloudAiplatformV1ModelDataStats dataStats) {
    this.dataStats = dataStats;
    return this;
  }

  /**
   * Get dataStats
   * @return dataStats
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1ModelDataStats getDataStats() {
    return dataStats;
  }

  public void setDataStats(GoogleCloudAiplatformV1ModelDataStats dataStats) {
    this.dataStats = dataStats;
  }


  public GoogleCloudAiplatformV1ExportDataResponse exportedFiles(List<String> exportedFiles) {
    this.exportedFiles = exportedFiles;
    return this;
  }

  public GoogleCloudAiplatformV1ExportDataResponse addExportedFilesItem(String exportedFilesItem) {
    if (this.exportedFiles == null) {
      this.exportedFiles = new ArrayList<>();
    }
    this.exportedFiles.add(exportedFilesItem);
    return this;
  }

  /**
   * All of the files that are exported in this export operation. For custom code training export, only three (training, validation and test) Cloud Storage paths in wildcard format are populated (for example, gs://.../training-*).
   * @return exportedFiles
   */
  @javax.annotation.Nullable
  public List<String> getExportedFiles() {
    return exportedFiles;
  }

  public void setExportedFiles(List<String> exportedFiles) {
    this.exportedFiles = exportedFiles;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1ExportDataResponse googleCloudAiplatformV1ExportDataResponse = (GoogleCloudAiplatformV1ExportDataResponse) o;
    return Objects.equals(this.dataStats, googleCloudAiplatformV1ExportDataResponse.dataStats) &&
        Objects.equals(this.exportedFiles, googleCloudAiplatformV1ExportDataResponse.exportedFiles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataStats, exportedFiles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1ExportDataResponse {\n");
    sb.append("    dataStats: ").append(toIndentedString(dataStats)).append("\n");
    sb.append("    exportedFiles: ").append(toIndentedString(exportedFiles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dataStats");
    openapiFields.add("exportedFiles");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1ExportDataResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1ExportDataResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1ExportDataResponse is not found in the empty JSON string", GoogleCloudAiplatformV1ExportDataResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1ExportDataResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1ExportDataResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dataStats`
      if (jsonObj.get("dataStats") != null && !jsonObj.get("dataStats").isJsonNull()) {
        GoogleCloudAiplatformV1ModelDataStats.validateJsonElement(jsonObj.get("dataStats"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("exportedFiles") != null && !jsonObj.get("exportedFiles").isJsonNull() && !jsonObj.get("exportedFiles").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `exportedFiles` to be an array in the JSON string but got `%s`", jsonObj.get("exportedFiles").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1ExportDataResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1ExportDataResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1ExportDataResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1ExportDataResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1ExportDataResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1ExportDataResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1ExportDataResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1ExportDataResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1ExportDataResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1ExportDataResponse
   */
  public static GoogleCloudAiplatformV1ExportDataResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1ExportDataResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1ExportDataResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

