/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metadata of the prediction output to be explained.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata {
  public static final String SERIALIZED_NAME_DISPLAY_NAME_MAPPING_KEY = "displayNameMappingKey";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME_MAPPING_KEY)
  private String displayNameMappingKey;

  public static final String SERIALIZED_NAME_INDEX_DISPLAY_NAME_MAPPING = "indexDisplayNameMapping";
  @SerializedName(SERIALIZED_NAME_INDEX_DISPLAY_NAME_MAPPING)
  private Object indexDisplayNameMapping = null;

  public static final String SERIALIZED_NAME_OUTPUT_TENSOR_NAME = "outputTensorName";
  @SerializedName(SERIALIZED_NAME_OUTPUT_TENSOR_NAME)
  private String outputTensorName;

  public GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata() {
  }

  public GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata displayNameMappingKey(String displayNameMappingKey) {
    this.displayNameMappingKey = displayNameMappingKey;
    return this;
  }

  /**
   * Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.
   * @return displayNameMappingKey
   */
  @javax.annotation.Nullable
  public String getDisplayNameMappingKey() {
    return displayNameMappingKey;
  }

  public void setDisplayNameMappingKey(String displayNameMappingKey) {
    this.displayNameMappingKey = displayNameMappingKey;
  }


  public GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata indexDisplayNameMapping(Object indexDisplayNameMapping) {
    this.indexDisplayNameMapping = indexDisplayNameMapping;
    return this;
  }

  /**
   * Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It&#39;s not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.
   * @return indexDisplayNameMapping
   */
  @javax.annotation.Nullable
  public Object getIndexDisplayNameMapping() {
    return indexDisplayNameMapping;
  }

  public void setIndexDisplayNameMapping(Object indexDisplayNameMapping) {
    this.indexDisplayNameMapping = indexDisplayNameMapping;
  }


  public GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata outputTensorName(String outputTensorName) {
    this.outputTensorName = outputTensorName;
    return this;
  }

  /**
   * Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow.
   * @return outputTensorName
   */
  @javax.annotation.Nullable
  public String getOutputTensorName() {
    return outputTensorName;
  }

  public void setOutputTensorName(String outputTensorName) {
    this.outputTensorName = outputTensorName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata googleCloudAiplatformV1ExplanationMetadataOutputMetadata = (GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata) o;
    return Objects.equals(this.displayNameMappingKey, googleCloudAiplatformV1ExplanationMetadataOutputMetadata.displayNameMappingKey) &&
        Objects.equals(this.indexDisplayNameMapping, googleCloudAiplatformV1ExplanationMetadataOutputMetadata.indexDisplayNameMapping) &&
        Objects.equals(this.outputTensorName, googleCloudAiplatformV1ExplanationMetadataOutputMetadata.outputTensorName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayNameMappingKey, indexDisplayNameMapping, outputTensorName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata {\n");
    sb.append("    displayNameMappingKey: ").append(toIndentedString(displayNameMappingKey)).append("\n");
    sb.append("    indexDisplayNameMapping: ").append(toIndentedString(indexDisplayNameMapping)).append("\n");
    sb.append("    outputTensorName: ").append(toIndentedString(outputTensorName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("displayNameMappingKey");
    openapiFields.add("indexDisplayNameMapping");
    openapiFields.add("outputTensorName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata is not found in the empty JSON string", GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayNameMappingKey") != null && !jsonObj.get("displayNameMappingKey").isJsonNull()) && !jsonObj.get("displayNameMappingKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayNameMappingKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayNameMappingKey").toString()));
      }
      if ((jsonObj.get("outputTensorName") != null && !jsonObj.get("outputTensorName").isJsonNull()) && !jsonObj.get("outputTensorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outputTensorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outputTensorName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata
   */
  public static GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

