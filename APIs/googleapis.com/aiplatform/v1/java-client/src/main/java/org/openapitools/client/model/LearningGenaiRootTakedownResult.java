/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LearningGenaiRootRegexTakedownResult;
import org.openapitools.client.model.LearningGenaiRootRequestResponseTakedownResult;
import org.openapitools.client.model.LearningGenaiRootSimilarityTakedownResult;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LearningGenaiRootTakedownResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LearningGenaiRootTakedownResult {
  public static final String SERIALIZED_NAME_ALLOWED = "allowed";
  @SerializedName(SERIALIZED_NAME_ALLOWED)
  private Boolean allowed;

  public static final String SERIALIZED_NAME_REGEX_TAKEDOWN_RESULT = "regexTakedownResult";
  @SerializedName(SERIALIZED_NAME_REGEX_TAKEDOWN_RESULT)
  private LearningGenaiRootRegexTakedownResult regexTakedownResult;

  public static final String SERIALIZED_NAME_REQUEST_RESPONSE_TAKEDOWN_RESULT = "requestResponseTakedownResult";
  @SerializedName(SERIALIZED_NAME_REQUEST_RESPONSE_TAKEDOWN_RESULT)
  private LearningGenaiRootRequestResponseTakedownResult requestResponseTakedownResult;

  public static final String SERIALIZED_NAME_SIMILARITY_TAKEDOWN_RESULT = "similarityTakedownResult";
  @SerializedName(SERIALIZED_NAME_SIMILARITY_TAKEDOWN_RESULT)
  private LearningGenaiRootSimilarityTakedownResult similarityTakedownResult;

  public LearningGenaiRootTakedownResult() {
  }

  public LearningGenaiRootTakedownResult allowed(Boolean allowed) {
    this.allowed = allowed;
    return this;
  }

  /**
   * False when query or response should be taken down by any of the takedown rules, true otherwise.
   * @return allowed
   */
  @javax.annotation.Nullable
  public Boolean getAllowed() {
    return allowed;
  }

  public void setAllowed(Boolean allowed) {
    this.allowed = allowed;
  }


  public LearningGenaiRootTakedownResult regexTakedownResult(LearningGenaiRootRegexTakedownResult regexTakedownResult) {
    this.regexTakedownResult = regexTakedownResult;
    return this;
  }

  /**
   * Get regexTakedownResult
   * @return regexTakedownResult
   */
  @javax.annotation.Nullable
  public LearningGenaiRootRegexTakedownResult getRegexTakedownResult() {
    return regexTakedownResult;
  }

  public void setRegexTakedownResult(LearningGenaiRootRegexTakedownResult regexTakedownResult) {
    this.regexTakedownResult = regexTakedownResult;
  }


  public LearningGenaiRootTakedownResult requestResponseTakedownResult(LearningGenaiRootRequestResponseTakedownResult requestResponseTakedownResult) {
    this.requestResponseTakedownResult = requestResponseTakedownResult;
    return this;
  }

  /**
   * Get requestResponseTakedownResult
   * @return requestResponseTakedownResult
   */
  @javax.annotation.Nullable
  public LearningGenaiRootRequestResponseTakedownResult getRequestResponseTakedownResult() {
    return requestResponseTakedownResult;
  }

  public void setRequestResponseTakedownResult(LearningGenaiRootRequestResponseTakedownResult requestResponseTakedownResult) {
    this.requestResponseTakedownResult = requestResponseTakedownResult;
  }


  public LearningGenaiRootTakedownResult similarityTakedownResult(LearningGenaiRootSimilarityTakedownResult similarityTakedownResult) {
    this.similarityTakedownResult = similarityTakedownResult;
    return this;
  }

  /**
   * Get similarityTakedownResult
   * @return similarityTakedownResult
   */
  @javax.annotation.Nullable
  public LearningGenaiRootSimilarityTakedownResult getSimilarityTakedownResult() {
    return similarityTakedownResult;
  }

  public void setSimilarityTakedownResult(LearningGenaiRootSimilarityTakedownResult similarityTakedownResult) {
    this.similarityTakedownResult = similarityTakedownResult;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LearningGenaiRootTakedownResult learningGenaiRootTakedownResult = (LearningGenaiRootTakedownResult) o;
    return Objects.equals(this.allowed, learningGenaiRootTakedownResult.allowed) &&
        Objects.equals(this.regexTakedownResult, learningGenaiRootTakedownResult.regexTakedownResult) &&
        Objects.equals(this.requestResponseTakedownResult, learningGenaiRootTakedownResult.requestResponseTakedownResult) &&
        Objects.equals(this.similarityTakedownResult, learningGenaiRootTakedownResult.similarityTakedownResult);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowed, regexTakedownResult, requestResponseTakedownResult, similarityTakedownResult);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LearningGenaiRootTakedownResult {\n");
    sb.append("    allowed: ").append(toIndentedString(allowed)).append("\n");
    sb.append("    regexTakedownResult: ").append(toIndentedString(regexTakedownResult)).append("\n");
    sb.append("    requestResponseTakedownResult: ").append(toIndentedString(requestResponseTakedownResult)).append("\n");
    sb.append("    similarityTakedownResult: ").append(toIndentedString(similarityTakedownResult)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowed");
    openapiFields.add("regexTakedownResult");
    openapiFields.add("requestResponseTakedownResult");
    openapiFields.add("similarityTakedownResult");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LearningGenaiRootTakedownResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LearningGenaiRootTakedownResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LearningGenaiRootTakedownResult is not found in the empty JSON string", LearningGenaiRootTakedownResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LearningGenaiRootTakedownResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LearningGenaiRootTakedownResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `regexTakedownResult`
      if (jsonObj.get("regexTakedownResult") != null && !jsonObj.get("regexTakedownResult").isJsonNull()) {
        LearningGenaiRootRegexTakedownResult.validateJsonElement(jsonObj.get("regexTakedownResult"));
      }
      // validate the optional field `requestResponseTakedownResult`
      if (jsonObj.get("requestResponseTakedownResult") != null && !jsonObj.get("requestResponseTakedownResult").isJsonNull()) {
        LearningGenaiRootRequestResponseTakedownResult.validateJsonElement(jsonObj.get("requestResponseTakedownResult"));
      }
      // validate the optional field `similarityTakedownResult`
      if (jsonObj.get("similarityTakedownResult") != null && !jsonObj.get("similarityTakedownResult").isJsonNull()) {
        LearningGenaiRootSimilarityTakedownResult.validateJsonElement(jsonObj.get("similarityTakedownResult"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LearningGenaiRootTakedownResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LearningGenaiRootTakedownResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LearningGenaiRootTakedownResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LearningGenaiRootTakedownResult.class));

       return (TypeAdapter<T>) new TypeAdapter<LearningGenaiRootTakedownResult>() {
           @Override
           public void write(JsonWriter out, LearningGenaiRootTakedownResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LearningGenaiRootTakedownResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LearningGenaiRootTakedownResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LearningGenaiRootTakedownResult
   * @throws IOException if the JSON string is invalid with respect to LearningGenaiRootTakedownResult
   */
  public static LearningGenaiRootTakedownResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LearningGenaiRootTakedownResult.class);
  }

  /**
   * Convert an instance of LearningGenaiRootTakedownResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

