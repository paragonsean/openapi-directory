/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The metadata of Datasets that contain Text Prompt data.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata {
  public static final String SERIALIZED_NAME_CANDIDATE_COUNT = "candidateCount";
  @SerializedName(SERIALIZED_NAME_CANDIDATE_COUNT)
  private String candidateCount;

  public static final String SERIALIZED_NAME_GCS_URI = "gcsUri";
  @SerializedName(SERIALIZED_NAME_GCS_URI)
  private String gcsUri;

  public static final String SERIALIZED_NAME_GROUNDING_CONFIG = "groundingConfig";
  @SerializedName(SERIALIZED_NAME_GROUNDING_CONFIG)
  private GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig groundingConfig;

  public static final String SERIALIZED_NAME_MAX_OUTPUT_TOKENS = "maxOutputTokens";
  @SerializedName(SERIALIZED_NAME_MAX_OUTPUT_TOKENS)
  private String maxOutputTokens;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_PROMPT_TYPE = "promptType";
  @SerializedName(SERIALIZED_NAME_PROMPT_TYPE)
  private String promptType;

  public static final String SERIALIZED_NAME_STOP_SEQUENCES = "stopSequences";
  @SerializedName(SERIALIZED_NAME_STOP_SEQUENCES)
  private List<String> stopSequences = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEMPERATURE = "temperature";
  @SerializedName(SERIALIZED_NAME_TEMPERATURE)
  private Float temperature;

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_TOP_K = "topK";
  @SerializedName(SERIALIZED_NAME_TOP_K)
  private String topK;

  public static final String SERIALIZED_NAME_TOP_P = "topP";
  @SerializedName(SERIALIZED_NAME_TOP_P)
  private Float topP;

  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata() {
  }

  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata candidateCount(String candidateCount) {
    this.candidateCount = candidateCount;
    return this;
  }

  /**
   * Number of candidates.
   * @return candidateCount
   */
  @javax.annotation.Nullable
  public String getCandidateCount() {
    return candidateCount;
  }

  public void setCandidateCount(String candidateCount) {
    this.candidateCount = candidateCount;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata gcsUri(String gcsUri) {
    this.gcsUri = gcsUri;
    return this;
  }

  /**
   * The Google Cloud Storage URI that stores the prompt data.
   * @return gcsUri
   */
  @javax.annotation.Nullable
  public String getGcsUri() {
    return gcsUri;
  }

  public void setGcsUri(String gcsUri) {
    this.gcsUri = gcsUri;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata groundingConfig(GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig groundingConfig) {
    this.groundingConfig = groundingConfig;
    return this;
  }

  /**
   * Get groundingConfig
   * @return groundingConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig getGroundingConfig() {
    return groundingConfig;
  }

  public void setGroundingConfig(GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig groundingConfig) {
    this.groundingConfig = groundingConfig;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata maxOutputTokens(String maxOutputTokens) {
    this.maxOutputTokens = maxOutputTokens;
    return this;
  }

  /**
   * Value of the maximum number of tokens generated set when the dataset was saved.
   * @return maxOutputTokens
   */
  @javax.annotation.Nullable
  public String getMaxOutputTokens() {
    return maxOutputTokens;
  }

  public void setMaxOutputTokens(String maxOutputTokens) {
    this.maxOutputTokens = maxOutputTokens;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata note(String note) {
    this.note = note;
    return this;
  }

  /**
   * User-created prompt note. Note size limit is 2KB.
   * @return note
   */
  @javax.annotation.Nullable
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata promptType(String promptType) {
    this.promptType = promptType;
    return this;
  }

  /**
   * Type of the prompt dataset.
   * @return promptType
   */
  @javax.annotation.Nullable
  public String getPromptType() {
    return promptType;
  }

  public void setPromptType(String promptType) {
    this.promptType = promptType;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata stopSequences(List<String> stopSequences) {
    this.stopSequences = stopSequences;
    return this;
  }

  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata addStopSequencesItem(String stopSequencesItem) {
    if (this.stopSequences == null) {
      this.stopSequences = new ArrayList<>();
    }
    this.stopSequences.add(stopSequencesItem);
    return this;
  }

  /**
   * Customized stop sequences.
   * @return stopSequences
   */
  @javax.annotation.Nullable
  public List<String> getStopSequences() {
    return stopSequences;
  }

  public void setStopSequences(List<String> stopSequences) {
    this.stopSequences = stopSequences;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata temperature(Float temperature) {
    this.temperature = temperature;
    return this;
  }

  /**
   * Temperature value used for sampling set when the dataset was saved. This value is used to tune the degree of randomness.
   * @return temperature
   */
  @javax.annotation.Nullable
  public Float getTemperature() {
    return temperature;
  }

  public void setTemperature(Float temperature) {
    this.temperature = temperature;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata text(String text) {
    this.text = text;
    return this;
  }

  /**
   * The content of the prompt dataset.
   * @return text
   */
  @javax.annotation.Nullable
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata topK(String topK) {
    this.topK = topK;
    return this;
  }

  /**
   * Top K value set when the dataset was saved. This value determines how many candidates with highest probability from the vocab would be selected for each decoding step.
   * @return topK
   */
  @javax.annotation.Nullable
  public String getTopK() {
    return topK;
  }

  public void setTopK(String topK) {
    this.topK = topK;
  }


  public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata topP(Float topP) {
    this.topP = topP;
    return this;
  }

  /**
   * Top P value set when the dataset was saved. Given topK tokens for decoding, top candidates will be selected until the sum of their probabilities is topP.
   * @return topP
   */
  @javax.annotation.Nullable
  public Float getTopP() {
    return topP;
  }

  public void setTopP(Float topP) {
    this.topP = topP;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata googleCloudAiplatformV1SchemaTextPromptDatasetMetadata = (GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata) o;
    return Objects.equals(this.candidateCount, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.candidateCount) &&
        Objects.equals(this.gcsUri, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.gcsUri) &&
        Objects.equals(this.groundingConfig, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.groundingConfig) &&
        Objects.equals(this.maxOutputTokens, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.maxOutputTokens) &&
        Objects.equals(this.note, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.note) &&
        Objects.equals(this.promptType, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.promptType) &&
        Objects.equals(this.stopSequences, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.stopSequences) &&
        Objects.equals(this.temperature, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.temperature) &&
        Objects.equals(this.text, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.text) &&
        Objects.equals(this.topK, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.topK) &&
        Objects.equals(this.topP, googleCloudAiplatformV1SchemaTextPromptDatasetMetadata.topP);
  }

  @Override
  public int hashCode() {
    return Objects.hash(candidateCount, gcsUri, groundingConfig, maxOutputTokens, note, promptType, stopSequences, temperature, text, topK, topP);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata {\n");
    sb.append("    candidateCount: ").append(toIndentedString(candidateCount)).append("\n");
    sb.append("    gcsUri: ").append(toIndentedString(gcsUri)).append("\n");
    sb.append("    groundingConfig: ").append(toIndentedString(groundingConfig)).append("\n");
    sb.append("    maxOutputTokens: ").append(toIndentedString(maxOutputTokens)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    promptType: ").append(toIndentedString(promptType)).append("\n");
    sb.append("    stopSequences: ").append(toIndentedString(stopSequences)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    topK: ").append(toIndentedString(topK)).append("\n");
    sb.append("    topP: ").append(toIndentedString(topP)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("candidateCount");
    openapiFields.add("gcsUri");
    openapiFields.add("groundingConfig");
    openapiFields.add("maxOutputTokens");
    openapiFields.add("note");
    openapiFields.add("promptType");
    openapiFields.add("stopSequences");
    openapiFields.add("temperature");
    openapiFields.add("text");
    openapiFields.add("topK");
    openapiFields.add("topP");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata is not found in the empty JSON string", GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("candidateCount") != null && !jsonObj.get("candidateCount").isJsonNull()) && !jsonObj.get("candidateCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidateCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("candidateCount").toString()));
      }
      if ((jsonObj.get("gcsUri") != null && !jsonObj.get("gcsUri").isJsonNull()) && !jsonObj.get("gcsUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gcsUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gcsUri").toString()));
      }
      // validate the optional field `groundingConfig`
      if (jsonObj.get("groundingConfig") != null && !jsonObj.get("groundingConfig").isJsonNull()) {
        GoogleCloudAiplatformV1SchemaPredictParamsGroundingConfig.validateJsonElement(jsonObj.get("groundingConfig"));
      }
      if ((jsonObj.get("maxOutputTokens") != null && !jsonObj.get("maxOutputTokens").isJsonNull()) && !jsonObj.get("maxOutputTokens").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxOutputTokens` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxOutputTokens").toString()));
      }
      if ((jsonObj.get("note") != null && !jsonObj.get("note").isJsonNull()) && !jsonObj.get("note").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `note` to be a primitive type in the JSON string but got `%s`", jsonObj.get("note").toString()));
      }
      if ((jsonObj.get("promptType") != null && !jsonObj.get("promptType").isJsonNull()) && !jsonObj.get("promptType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `promptType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("promptType").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("stopSequences") != null && !jsonObj.get("stopSequences").isJsonNull() && !jsonObj.get("stopSequences").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `stopSequences` to be an array in the JSON string but got `%s`", jsonObj.get("stopSequences").toString()));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if ((jsonObj.get("topK") != null && !jsonObj.get("topK").isJsonNull()) && !jsonObj.get("topK").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topK` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topK").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata
   */
  public static GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1SchemaTextPromptDatasetMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

