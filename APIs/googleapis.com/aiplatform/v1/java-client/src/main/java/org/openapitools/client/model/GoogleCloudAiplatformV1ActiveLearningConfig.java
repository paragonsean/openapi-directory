/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1SampleConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1TrainingConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1ActiveLearningConfig {
  public static final String SERIALIZED_NAME_MAX_DATA_ITEM_COUNT = "maxDataItemCount";
  @SerializedName(SERIALIZED_NAME_MAX_DATA_ITEM_COUNT)
  private String maxDataItemCount;

  public static final String SERIALIZED_NAME_MAX_DATA_ITEM_PERCENTAGE = "maxDataItemPercentage";
  @SerializedName(SERIALIZED_NAME_MAX_DATA_ITEM_PERCENTAGE)
  private Integer maxDataItemPercentage;

  public static final String SERIALIZED_NAME_SAMPLE_CONFIG = "sampleConfig";
  @SerializedName(SERIALIZED_NAME_SAMPLE_CONFIG)
  private GoogleCloudAiplatformV1SampleConfig sampleConfig;

  public static final String SERIALIZED_NAME_TRAINING_CONFIG = "trainingConfig";
  @SerializedName(SERIALIZED_NAME_TRAINING_CONFIG)
  private GoogleCloudAiplatformV1TrainingConfig trainingConfig;

  public GoogleCloudAiplatformV1ActiveLearningConfig() {
  }

  public GoogleCloudAiplatformV1ActiveLearningConfig maxDataItemCount(String maxDataItemCount) {
    this.maxDataItemCount = maxDataItemCount;
    return this;
  }

  /**
   * Max number of human labeled DataItems.
   * @return maxDataItemCount
   */
  @javax.annotation.Nullable
  public String getMaxDataItemCount() {
    return maxDataItemCount;
  }

  public void setMaxDataItemCount(String maxDataItemCount) {
    this.maxDataItemCount = maxDataItemCount;
  }


  public GoogleCloudAiplatformV1ActiveLearningConfig maxDataItemPercentage(Integer maxDataItemPercentage) {
    this.maxDataItemPercentage = maxDataItemPercentage;
    return this;
  }

  /**
   * Max percent of total DataItems for human labeling.
   * @return maxDataItemPercentage
   */
  @javax.annotation.Nullable
  public Integer getMaxDataItemPercentage() {
    return maxDataItemPercentage;
  }

  public void setMaxDataItemPercentage(Integer maxDataItemPercentage) {
    this.maxDataItemPercentage = maxDataItemPercentage;
  }


  public GoogleCloudAiplatformV1ActiveLearningConfig sampleConfig(GoogleCloudAiplatformV1SampleConfig sampleConfig) {
    this.sampleConfig = sampleConfig;
    return this;
  }

  /**
   * Get sampleConfig
   * @return sampleConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1SampleConfig getSampleConfig() {
    return sampleConfig;
  }

  public void setSampleConfig(GoogleCloudAiplatformV1SampleConfig sampleConfig) {
    this.sampleConfig = sampleConfig;
  }


  public GoogleCloudAiplatformV1ActiveLearningConfig trainingConfig(GoogleCloudAiplatformV1TrainingConfig trainingConfig) {
    this.trainingConfig = trainingConfig;
    return this;
  }

  /**
   * Get trainingConfig
   * @return trainingConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1TrainingConfig getTrainingConfig() {
    return trainingConfig;
  }

  public void setTrainingConfig(GoogleCloudAiplatformV1TrainingConfig trainingConfig) {
    this.trainingConfig = trainingConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1ActiveLearningConfig googleCloudAiplatformV1ActiveLearningConfig = (GoogleCloudAiplatformV1ActiveLearningConfig) o;
    return Objects.equals(this.maxDataItemCount, googleCloudAiplatformV1ActiveLearningConfig.maxDataItemCount) &&
        Objects.equals(this.maxDataItemPercentage, googleCloudAiplatformV1ActiveLearningConfig.maxDataItemPercentage) &&
        Objects.equals(this.sampleConfig, googleCloudAiplatformV1ActiveLearningConfig.sampleConfig) &&
        Objects.equals(this.trainingConfig, googleCloudAiplatformV1ActiveLearningConfig.trainingConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxDataItemCount, maxDataItemPercentage, sampleConfig, trainingConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1ActiveLearningConfig {\n");
    sb.append("    maxDataItemCount: ").append(toIndentedString(maxDataItemCount)).append("\n");
    sb.append("    maxDataItemPercentage: ").append(toIndentedString(maxDataItemPercentage)).append("\n");
    sb.append("    sampleConfig: ").append(toIndentedString(sampleConfig)).append("\n");
    sb.append("    trainingConfig: ").append(toIndentedString(trainingConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("maxDataItemCount");
    openapiFields.add("maxDataItemPercentage");
    openapiFields.add("sampleConfig");
    openapiFields.add("trainingConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1ActiveLearningConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1ActiveLearningConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1ActiveLearningConfig is not found in the empty JSON string", GoogleCloudAiplatformV1ActiveLearningConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1ActiveLearningConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1ActiveLearningConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("maxDataItemCount") != null && !jsonObj.get("maxDataItemCount").isJsonNull()) && !jsonObj.get("maxDataItemCount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxDataItemCount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxDataItemCount").toString()));
      }
      // validate the optional field `sampleConfig`
      if (jsonObj.get("sampleConfig") != null && !jsonObj.get("sampleConfig").isJsonNull()) {
        GoogleCloudAiplatformV1SampleConfig.validateJsonElement(jsonObj.get("sampleConfig"));
      }
      // validate the optional field `trainingConfig`
      if (jsonObj.get("trainingConfig") != null && !jsonObj.get("trainingConfig").isJsonNull()) {
        GoogleCloudAiplatformV1TrainingConfig.validateJsonElement(jsonObj.get("trainingConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1ActiveLearningConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1ActiveLearningConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1ActiveLearningConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1ActiveLearningConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1ActiveLearningConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1ActiveLearningConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1ActiveLearningConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1ActiveLearningConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1ActiveLearningConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1ActiveLearningConfig
   */
  public static GoogleCloudAiplatformV1ActiveLearningConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1ActiveLearningConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1ActiveLearningConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

