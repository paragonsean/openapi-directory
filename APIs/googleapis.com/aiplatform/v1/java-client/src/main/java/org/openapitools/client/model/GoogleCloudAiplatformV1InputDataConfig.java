/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1BigQueryDestination;
import org.openapitools.client.model.GoogleCloudAiplatformV1FilterSplit;
import org.openapitools.client.model.GoogleCloudAiplatformV1FractionSplit;
import org.openapitools.client.model.GoogleCloudAiplatformV1GcsDestination;
import org.openapitools.client.model.GoogleCloudAiplatformV1PredefinedSplit;
import org.openapitools.client.model.GoogleCloudAiplatformV1StratifiedSplit;
import org.openapitools.client.model.GoogleCloudAiplatformV1TimestampSplit;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Specifies Vertex AI owned input data to be used for training, and possibly evaluating, the Model.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1InputDataConfig {
  public static final String SERIALIZED_NAME_ANNOTATION_SCHEMA_URI = "annotationSchemaUri";
  @SerializedName(SERIALIZED_NAME_ANNOTATION_SCHEMA_URI)
  private String annotationSchemaUri;

  public static final String SERIALIZED_NAME_ANNOTATIONS_FILTER = "annotationsFilter";
  @SerializedName(SERIALIZED_NAME_ANNOTATIONS_FILTER)
  private String annotationsFilter;

  public static final String SERIALIZED_NAME_BIGQUERY_DESTINATION = "bigqueryDestination";
  @SerializedName(SERIALIZED_NAME_BIGQUERY_DESTINATION)
  private GoogleCloudAiplatformV1BigQueryDestination bigqueryDestination;

  public static final String SERIALIZED_NAME_DATASET_ID = "datasetId";
  @SerializedName(SERIALIZED_NAME_DATASET_ID)
  private String datasetId;

  public static final String SERIALIZED_NAME_FILTER_SPLIT = "filterSplit";
  @SerializedName(SERIALIZED_NAME_FILTER_SPLIT)
  private GoogleCloudAiplatformV1FilterSplit filterSplit;

  public static final String SERIALIZED_NAME_FRACTION_SPLIT = "fractionSplit";
  @SerializedName(SERIALIZED_NAME_FRACTION_SPLIT)
  private GoogleCloudAiplatformV1FractionSplit fractionSplit;

  public static final String SERIALIZED_NAME_GCS_DESTINATION = "gcsDestination";
  @SerializedName(SERIALIZED_NAME_GCS_DESTINATION)
  private GoogleCloudAiplatformV1GcsDestination gcsDestination;

  public static final String SERIALIZED_NAME_PERSIST_ML_USE_ASSIGNMENT = "persistMlUseAssignment";
  @SerializedName(SERIALIZED_NAME_PERSIST_ML_USE_ASSIGNMENT)
  private Boolean persistMlUseAssignment;

  public static final String SERIALIZED_NAME_PREDEFINED_SPLIT = "predefinedSplit";
  @SerializedName(SERIALIZED_NAME_PREDEFINED_SPLIT)
  private GoogleCloudAiplatformV1PredefinedSplit predefinedSplit;

  public static final String SERIALIZED_NAME_SAVED_QUERY_ID = "savedQueryId";
  @SerializedName(SERIALIZED_NAME_SAVED_QUERY_ID)
  private String savedQueryId;

  public static final String SERIALIZED_NAME_STRATIFIED_SPLIT = "stratifiedSplit";
  @SerializedName(SERIALIZED_NAME_STRATIFIED_SPLIT)
  private GoogleCloudAiplatformV1StratifiedSplit stratifiedSplit;

  public static final String SERIALIZED_NAME_TIMESTAMP_SPLIT = "timestampSplit";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP_SPLIT)
  private GoogleCloudAiplatformV1TimestampSplit timestampSplit;

  public GoogleCloudAiplatformV1InputDataConfig() {
  }

  public GoogleCloudAiplatformV1InputDataConfig annotationSchemaUri(String annotationSchemaUri) {
    this.annotationSchemaUri = annotationSchemaUri;
    return this;
  }

  /**
   * Applicable only to custom training with Datasets that have DataItems and Annotations. Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/ , note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri.
   * @return annotationSchemaUri
   */
  @javax.annotation.Nullable
  public String getAnnotationSchemaUri() {
    return annotationSchemaUri;
  }

  public void setAnnotationSchemaUri(String annotationSchemaUri) {
    this.annotationSchemaUri = annotationSchemaUri;
  }


  public GoogleCloudAiplatformV1InputDataConfig annotationsFilter(String annotationsFilter) {
    this.annotationsFilter = annotationsFilter;
    return this;
  }

  /**
   * Applicable only to Datasets that have DataItems and Annotations. A filter on Annotations of the Dataset. Only Annotations that both match this filter and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on (for the auto-assigned that role is decided by Vertex AI). A filter with same syntax as the one used in ListAnnotations may be used, but note here it filters across all Annotations of the Dataset, and not just within a single DataItem.
   * @return annotationsFilter
   */
  @javax.annotation.Nullable
  public String getAnnotationsFilter() {
    return annotationsFilter;
  }

  public void setAnnotationsFilter(String annotationsFilter) {
    this.annotationsFilter = annotationsFilter;
  }


  public GoogleCloudAiplatformV1InputDataConfig bigqueryDestination(GoogleCloudAiplatformV1BigQueryDestination bigqueryDestination) {
    this.bigqueryDestination = bigqueryDestination;
    return this;
  }

  /**
   * Get bigqueryDestination
   * @return bigqueryDestination
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1BigQueryDestination getBigqueryDestination() {
    return bigqueryDestination;
  }

  public void setBigqueryDestination(GoogleCloudAiplatformV1BigQueryDestination bigqueryDestination) {
    this.bigqueryDestination = bigqueryDestination;
  }


  public GoogleCloudAiplatformV1InputDataConfig datasetId(String datasetId) {
    this.datasetId = datasetId;
    return this;
  }

  /**
   * Required. The ID of the Dataset in the same Project and Location which data will be used to train the Model. The Dataset must use schema compatible with Model being trained, and what is compatible should be described in the used TrainingPipeline&#39;s training_task_definition. For tabular Datasets, all their data is exported to training, to pick and choose from.
   * @return datasetId
   */
  @javax.annotation.Nullable
  public String getDatasetId() {
    return datasetId;
  }

  public void setDatasetId(String datasetId) {
    this.datasetId = datasetId;
  }


  public GoogleCloudAiplatformV1InputDataConfig filterSplit(GoogleCloudAiplatformV1FilterSplit filterSplit) {
    this.filterSplit = filterSplit;
    return this;
  }

  /**
   * Get filterSplit
   * @return filterSplit
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1FilterSplit getFilterSplit() {
    return filterSplit;
  }

  public void setFilterSplit(GoogleCloudAiplatformV1FilterSplit filterSplit) {
    this.filterSplit = filterSplit;
  }


  public GoogleCloudAiplatformV1InputDataConfig fractionSplit(GoogleCloudAiplatformV1FractionSplit fractionSplit) {
    this.fractionSplit = fractionSplit;
    return this;
  }

  /**
   * Get fractionSplit
   * @return fractionSplit
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1FractionSplit getFractionSplit() {
    return fractionSplit;
  }

  public void setFractionSplit(GoogleCloudAiplatformV1FractionSplit fractionSplit) {
    this.fractionSplit = fractionSplit;
  }


  public GoogleCloudAiplatformV1InputDataConfig gcsDestination(GoogleCloudAiplatformV1GcsDestination gcsDestination) {
    this.gcsDestination = gcsDestination;
    return this;
  }

  /**
   * Get gcsDestination
   * @return gcsDestination
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1GcsDestination getGcsDestination() {
    return gcsDestination;
  }

  public void setGcsDestination(GoogleCloudAiplatformV1GcsDestination gcsDestination) {
    this.gcsDestination = gcsDestination;
  }


  public GoogleCloudAiplatformV1InputDataConfig persistMlUseAssignment(Boolean persistMlUseAssignment) {
    this.persistMlUseAssignment = persistMlUseAssignment;
    return this;
  }

  /**
   * Whether to persist the ML use assignment to data item system labels.
   * @return persistMlUseAssignment
   */
  @javax.annotation.Nullable
  public Boolean getPersistMlUseAssignment() {
    return persistMlUseAssignment;
  }

  public void setPersistMlUseAssignment(Boolean persistMlUseAssignment) {
    this.persistMlUseAssignment = persistMlUseAssignment;
  }


  public GoogleCloudAiplatformV1InputDataConfig predefinedSplit(GoogleCloudAiplatformV1PredefinedSplit predefinedSplit) {
    this.predefinedSplit = predefinedSplit;
    return this;
  }

  /**
   * Get predefinedSplit
   * @return predefinedSplit
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1PredefinedSplit getPredefinedSplit() {
    return predefinedSplit;
  }

  public void setPredefinedSplit(GoogleCloudAiplatformV1PredefinedSplit predefinedSplit) {
    this.predefinedSplit = predefinedSplit;
  }


  public GoogleCloudAiplatformV1InputDataConfig savedQueryId(String savedQueryId) {
    this.savedQueryId = savedQueryId;
    return this;
  }

  /**
   * Only applicable to Datasets that have SavedQueries. The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type.
   * @return savedQueryId
   */
  @javax.annotation.Nullable
  public String getSavedQueryId() {
    return savedQueryId;
  }

  public void setSavedQueryId(String savedQueryId) {
    this.savedQueryId = savedQueryId;
  }


  public GoogleCloudAiplatformV1InputDataConfig stratifiedSplit(GoogleCloudAiplatformV1StratifiedSplit stratifiedSplit) {
    this.stratifiedSplit = stratifiedSplit;
    return this;
  }

  /**
   * Get stratifiedSplit
   * @return stratifiedSplit
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1StratifiedSplit getStratifiedSplit() {
    return stratifiedSplit;
  }

  public void setStratifiedSplit(GoogleCloudAiplatformV1StratifiedSplit stratifiedSplit) {
    this.stratifiedSplit = stratifiedSplit;
  }


  public GoogleCloudAiplatformV1InputDataConfig timestampSplit(GoogleCloudAiplatformV1TimestampSplit timestampSplit) {
    this.timestampSplit = timestampSplit;
    return this;
  }

  /**
   * Get timestampSplit
   * @return timestampSplit
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1TimestampSplit getTimestampSplit() {
    return timestampSplit;
  }

  public void setTimestampSplit(GoogleCloudAiplatformV1TimestampSplit timestampSplit) {
    this.timestampSplit = timestampSplit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1InputDataConfig googleCloudAiplatformV1InputDataConfig = (GoogleCloudAiplatformV1InputDataConfig) o;
    return Objects.equals(this.annotationSchemaUri, googleCloudAiplatformV1InputDataConfig.annotationSchemaUri) &&
        Objects.equals(this.annotationsFilter, googleCloudAiplatformV1InputDataConfig.annotationsFilter) &&
        Objects.equals(this.bigqueryDestination, googleCloudAiplatformV1InputDataConfig.bigqueryDestination) &&
        Objects.equals(this.datasetId, googleCloudAiplatformV1InputDataConfig.datasetId) &&
        Objects.equals(this.filterSplit, googleCloudAiplatformV1InputDataConfig.filterSplit) &&
        Objects.equals(this.fractionSplit, googleCloudAiplatformV1InputDataConfig.fractionSplit) &&
        Objects.equals(this.gcsDestination, googleCloudAiplatformV1InputDataConfig.gcsDestination) &&
        Objects.equals(this.persistMlUseAssignment, googleCloudAiplatformV1InputDataConfig.persistMlUseAssignment) &&
        Objects.equals(this.predefinedSplit, googleCloudAiplatformV1InputDataConfig.predefinedSplit) &&
        Objects.equals(this.savedQueryId, googleCloudAiplatformV1InputDataConfig.savedQueryId) &&
        Objects.equals(this.stratifiedSplit, googleCloudAiplatformV1InputDataConfig.stratifiedSplit) &&
        Objects.equals(this.timestampSplit, googleCloudAiplatformV1InputDataConfig.timestampSplit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotationSchemaUri, annotationsFilter, bigqueryDestination, datasetId, filterSplit, fractionSplit, gcsDestination, persistMlUseAssignment, predefinedSplit, savedQueryId, stratifiedSplit, timestampSplit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1InputDataConfig {\n");
    sb.append("    annotationSchemaUri: ").append(toIndentedString(annotationSchemaUri)).append("\n");
    sb.append("    annotationsFilter: ").append(toIndentedString(annotationsFilter)).append("\n");
    sb.append("    bigqueryDestination: ").append(toIndentedString(bigqueryDestination)).append("\n");
    sb.append("    datasetId: ").append(toIndentedString(datasetId)).append("\n");
    sb.append("    filterSplit: ").append(toIndentedString(filterSplit)).append("\n");
    sb.append("    fractionSplit: ").append(toIndentedString(fractionSplit)).append("\n");
    sb.append("    gcsDestination: ").append(toIndentedString(gcsDestination)).append("\n");
    sb.append("    persistMlUseAssignment: ").append(toIndentedString(persistMlUseAssignment)).append("\n");
    sb.append("    predefinedSplit: ").append(toIndentedString(predefinedSplit)).append("\n");
    sb.append("    savedQueryId: ").append(toIndentedString(savedQueryId)).append("\n");
    sb.append("    stratifiedSplit: ").append(toIndentedString(stratifiedSplit)).append("\n");
    sb.append("    timestampSplit: ").append(toIndentedString(timestampSplit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annotationSchemaUri");
    openapiFields.add("annotationsFilter");
    openapiFields.add("bigqueryDestination");
    openapiFields.add("datasetId");
    openapiFields.add("filterSplit");
    openapiFields.add("fractionSplit");
    openapiFields.add("gcsDestination");
    openapiFields.add("persistMlUseAssignment");
    openapiFields.add("predefinedSplit");
    openapiFields.add("savedQueryId");
    openapiFields.add("stratifiedSplit");
    openapiFields.add("timestampSplit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1InputDataConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1InputDataConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1InputDataConfig is not found in the empty JSON string", GoogleCloudAiplatformV1InputDataConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1InputDataConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1InputDataConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("annotationSchemaUri") != null && !jsonObj.get("annotationSchemaUri").isJsonNull()) && !jsonObj.get("annotationSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `annotationSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("annotationSchemaUri").toString()));
      }
      if ((jsonObj.get("annotationsFilter") != null && !jsonObj.get("annotationsFilter").isJsonNull()) && !jsonObj.get("annotationsFilter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `annotationsFilter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("annotationsFilter").toString()));
      }
      // validate the optional field `bigqueryDestination`
      if (jsonObj.get("bigqueryDestination") != null && !jsonObj.get("bigqueryDestination").isJsonNull()) {
        GoogleCloudAiplatformV1BigQueryDestination.validateJsonElement(jsonObj.get("bigqueryDestination"));
      }
      if ((jsonObj.get("datasetId") != null && !jsonObj.get("datasetId").isJsonNull()) && !jsonObj.get("datasetId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `datasetId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("datasetId").toString()));
      }
      // validate the optional field `filterSplit`
      if (jsonObj.get("filterSplit") != null && !jsonObj.get("filterSplit").isJsonNull()) {
        GoogleCloudAiplatformV1FilterSplit.validateJsonElement(jsonObj.get("filterSplit"));
      }
      // validate the optional field `fractionSplit`
      if (jsonObj.get("fractionSplit") != null && !jsonObj.get("fractionSplit").isJsonNull()) {
        GoogleCloudAiplatformV1FractionSplit.validateJsonElement(jsonObj.get("fractionSplit"));
      }
      // validate the optional field `gcsDestination`
      if (jsonObj.get("gcsDestination") != null && !jsonObj.get("gcsDestination").isJsonNull()) {
        GoogleCloudAiplatformV1GcsDestination.validateJsonElement(jsonObj.get("gcsDestination"));
      }
      // validate the optional field `predefinedSplit`
      if (jsonObj.get("predefinedSplit") != null && !jsonObj.get("predefinedSplit").isJsonNull()) {
        GoogleCloudAiplatformV1PredefinedSplit.validateJsonElement(jsonObj.get("predefinedSplit"));
      }
      if ((jsonObj.get("savedQueryId") != null && !jsonObj.get("savedQueryId").isJsonNull()) && !jsonObj.get("savedQueryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `savedQueryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("savedQueryId").toString()));
      }
      // validate the optional field `stratifiedSplit`
      if (jsonObj.get("stratifiedSplit") != null && !jsonObj.get("stratifiedSplit").isJsonNull()) {
        GoogleCloudAiplatformV1StratifiedSplit.validateJsonElement(jsonObj.get("stratifiedSplit"));
      }
      // validate the optional field `timestampSplit`
      if (jsonObj.get("timestampSplit") != null && !jsonObj.get("timestampSplit").isJsonNull()) {
        GoogleCloudAiplatformV1TimestampSplit.validateJsonElement(jsonObj.get("timestampSplit"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1InputDataConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1InputDataConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1InputDataConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1InputDataConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1InputDataConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1InputDataConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1InputDataConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1InputDataConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1InputDataConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1InputDataConfig
   */
  public static GoogleCloudAiplatformV1InputDataConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1InputDataConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1InputDataConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

