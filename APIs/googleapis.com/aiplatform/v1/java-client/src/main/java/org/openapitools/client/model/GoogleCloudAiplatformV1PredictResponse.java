/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for PredictionService.Predict.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1PredictResponse {
  public static final String SERIALIZED_NAME_DEPLOYED_MODEL_ID = "deployedModelId";
  @SerializedName(SERIALIZED_NAME_DEPLOYED_MODEL_ID)
  private String deployedModelId;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata = null;

  public static final String SERIALIZED_NAME_MODEL = "model";
  @SerializedName(SERIALIZED_NAME_MODEL)
  private String model;

  public static final String SERIALIZED_NAME_MODEL_DISPLAY_NAME = "modelDisplayName";
  @SerializedName(SERIALIZED_NAME_MODEL_DISPLAY_NAME)
  private String modelDisplayName;

  public static final String SERIALIZED_NAME_MODEL_VERSION_ID = "modelVersionId";
  @SerializedName(SERIALIZED_NAME_MODEL_VERSION_ID)
  private String modelVersionId;

  public static final String SERIALIZED_NAME_PREDICTIONS = "predictions";
  @SerializedName(SERIALIZED_NAME_PREDICTIONS)
  private List<Object> predictions = new ArrayList<>();

  public GoogleCloudAiplatformV1PredictResponse() {
  }

  public GoogleCloudAiplatformV1PredictResponse(
     Object metadata, 
     String model, 
     String modelDisplayName, 
     String modelVersionId
  ) {
    this();
    this.metadata = metadata;
    this.model = model;
    this.modelDisplayName = modelDisplayName;
    this.modelVersionId = modelVersionId;
  }

  public GoogleCloudAiplatformV1PredictResponse deployedModelId(String deployedModelId) {
    this.deployedModelId = deployedModelId;
    return this;
  }

  /**
   * ID of the Endpoint&#39;s DeployedModel that served this prediction.
   * @return deployedModelId
   */
  @javax.annotation.Nullable
  public String getDeployedModelId() {
    return deployedModelId;
  }

  public void setDeployedModelId(String deployedModelId) {
    this.deployedModelId = deployedModelId;
  }


  /**
   * Output only. Request-level metadata returned by the model. The metadata type will be dependent upon the model implementation.
   * @return metadata
   */
  @javax.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }



  /**
   * Output only. The resource name of the Model which is deployed as the DeployedModel that this prediction hits.
   * @return model
   */
  @javax.annotation.Nullable
  public String getModel() {
    return model;
  }



  /**
   * Output only. The display name of the Model which is deployed as the DeployedModel that this prediction hits.
   * @return modelDisplayName
   */
  @javax.annotation.Nullable
  public String getModelDisplayName() {
    return modelDisplayName;
  }



  /**
   * Output only. The version ID of the Model which is deployed as the DeployedModel that this prediction hits.
   * @return modelVersionId
   */
  @javax.annotation.Nullable
  public String getModelVersionId() {
    return modelVersionId;
  }



  public GoogleCloudAiplatformV1PredictResponse predictions(List<Object> predictions) {
    this.predictions = predictions;
    return this;
  }

  public GoogleCloudAiplatformV1PredictResponse addPredictionsItem(Object predictionsItem) {
    if (this.predictions == null) {
      this.predictions = new ArrayList<>();
    }
    this.predictions.add(predictionsItem);
    return this;
  }

  /**
   * The predictions that are the output of the predictions call. The schema of any single prediction may be specified via Endpoint&#39;s DeployedModels&#39; Model&#39;s PredictSchemata&#39;s prediction_schema_uri.
   * @return predictions
   */
  @javax.annotation.Nullable
  public List<Object> getPredictions() {
    return predictions;
  }

  public void setPredictions(List<Object> predictions) {
    this.predictions = predictions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1PredictResponse googleCloudAiplatformV1PredictResponse = (GoogleCloudAiplatformV1PredictResponse) o;
    return Objects.equals(this.deployedModelId, googleCloudAiplatformV1PredictResponse.deployedModelId) &&
        Objects.equals(this.metadata, googleCloudAiplatformV1PredictResponse.metadata) &&
        Objects.equals(this.model, googleCloudAiplatformV1PredictResponse.model) &&
        Objects.equals(this.modelDisplayName, googleCloudAiplatformV1PredictResponse.modelDisplayName) &&
        Objects.equals(this.modelVersionId, googleCloudAiplatformV1PredictResponse.modelVersionId) &&
        Objects.equals(this.predictions, googleCloudAiplatformV1PredictResponse.predictions);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(deployedModelId, metadata, model, modelDisplayName, modelVersionId, predictions);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1PredictResponse {\n");
    sb.append("    deployedModelId: ").append(toIndentedString(deployedModelId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    modelDisplayName: ").append(toIndentedString(modelDisplayName)).append("\n");
    sb.append("    modelVersionId: ").append(toIndentedString(modelVersionId)).append("\n");
    sb.append("    predictions: ").append(toIndentedString(predictions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("deployedModelId");
    openapiFields.add("metadata");
    openapiFields.add("model");
    openapiFields.add("modelDisplayName");
    openapiFields.add("modelVersionId");
    openapiFields.add("predictions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1PredictResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1PredictResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1PredictResponse is not found in the empty JSON string", GoogleCloudAiplatformV1PredictResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1PredictResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1PredictResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("deployedModelId") != null && !jsonObj.get("deployedModelId").isJsonNull()) && !jsonObj.get("deployedModelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deployedModelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deployedModelId").toString()));
      }
      if ((jsonObj.get("model") != null && !jsonObj.get("model").isJsonNull()) && !jsonObj.get("model").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `model` to be a primitive type in the JSON string but got `%s`", jsonObj.get("model").toString()));
      }
      if ((jsonObj.get("modelDisplayName") != null && !jsonObj.get("modelDisplayName").isJsonNull()) && !jsonObj.get("modelDisplayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modelDisplayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modelDisplayName").toString()));
      }
      if ((jsonObj.get("modelVersionId") != null && !jsonObj.get("modelVersionId").isJsonNull()) && !jsonObj.get("modelVersionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modelVersionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modelVersionId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("predictions") != null && !jsonObj.get("predictions").isJsonNull() && !jsonObj.get("predictions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `predictions` to be an array in the JSON string but got `%s`", jsonObj.get("predictions").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1PredictResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1PredictResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1PredictResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1PredictResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1PredictResponse>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1PredictResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1PredictResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1PredictResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1PredictResponse
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1PredictResponse
   */
  public static GoogleCloudAiplatformV1PredictResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1PredictResponse.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1PredictResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

