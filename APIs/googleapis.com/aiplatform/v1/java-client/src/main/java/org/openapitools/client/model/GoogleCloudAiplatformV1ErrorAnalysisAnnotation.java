/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Model error analysis for each annotation.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1ErrorAnalysisAnnotation {
  public static final String SERIALIZED_NAME_ATTRIBUTED_ITEMS = "attributedItems";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTED_ITEMS)
  private List<GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem> attributedItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_OUTLIER_SCORE = "outlierScore";
  @SerializedName(SERIALIZED_NAME_OUTLIER_SCORE)
  private Double outlierScore;

  public static final String SERIALIZED_NAME_OUTLIER_THRESHOLD = "outlierThreshold";
  @SerializedName(SERIALIZED_NAME_OUTLIER_THRESHOLD)
  private Double outlierThreshold;

  /**
   * The query type used for finding the attributed items.
   */
  @JsonAdapter(QueryTypeEnum.Adapter.class)
  public enum QueryTypeEnum {
    QUERY_TYPE_UNSPECIFIED("QUERY_TYPE_UNSPECIFIED"),
    
    ALL_SIMILAR("ALL_SIMILAR"),
    
    SAME_CLASS_SIMILAR("SAME_CLASS_SIMILAR"),
    
    SAME_CLASS_DISSIMILAR("SAME_CLASS_DISSIMILAR");

    private String value;

    QueryTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static QueryTypeEnum fromValue(String value) {
      for (QueryTypeEnum b : QueryTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<QueryTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final QueryTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public QueryTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return QueryTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      QueryTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_QUERY_TYPE = "queryType";
  @SerializedName(SERIALIZED_NAME_QUERY_TYPE)
  private QueryTypeEnum queryType;

  public GoogleCloudAiplatformV1ErrorAnalysisAnnotation() {
  }

  public GoogleCloudAiplatformV1ErrorAnalysisAnnotation attributedItems(List<GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem> attributedItems) {
    this.attributedItems = attributedItems;
    return this;
  }

  public GoogleCloudAiplatformV1ErrorAnalysisAnnotation addAttributedItemsItem(GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem attributedItemsItem) {
    if (this.attributedItems == null) {
      this.attributedItems = new ArrayList<>();
    }
    this.attributedItems.add(attributedItemsItem);
    return this;
  }

  /**
   * Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type.
   * @return attributedItems
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem> getAttributedItems() {
    return attributedItems;
  }

  public void setAttributedItems(List<GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem> attributedItems) {
    this.attributedItems = attributedItems;
  }


  public GoogleCloudAiplatformV1ErrorAnalysisAnnotation outlierScore(Double outlierScore) {
    this.outlierScore = outlierScore;
    return this;
  }

  /**
   * The outlier score of this annotated item. Usually defined as the min of all distances from attributed items.
   * @return outlierScore
   */
  @javax.annotation.Nullable
  public Double getOutlierScore() {
    return outlierScore;
  }

  public void setOutlierScore(Double outlierScore) {
    this.outlierScore = outlierScore;
  }


  public GoogleCloudAiplatformV1ErrorAnalysisAnnotation outlierThreshold(Double outlierThreshold) {
    this.outlierThreshold = outlierThreshold;
    return this;
  }

  /**
   * The threshold used to determine if this annotation is an outlier or not.
   * @return outlierThreshold
   */
  @javax.annotation.Nullable
  public Double getOutlierThreshold() {
    return outlierThreshold;
  }

  public void setOutlierThreshold(Double outlierThreshold) {
    this.outlierThreshold = outlierThreshold;
  }


  public GoogleCloudAiplatformV1ErrorAnalysisAnnotation queryType(QueryTypeEnum queryType) {
    this.queryType = queryType;
    return this;
  }

  /**
   * The query type used for finding the attributed items.
   * @return queryType
   */
  @javax.annotation.Nullable
  public QueryTypeEnum getQueryType() {
    return queryType;
  }

  public void setQueryType(QueryTypeEnum queryType) {
    this.queryType = queryType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1ErrorAnalysisAnnotation googleCloudAiplatformV1ErrorAnalysisAnnotation = (GoogleCloudAiplatformV1ErrorAnalysisAnnotation) o;
    return Objects.equals(this.attributedItems, googleCloudAiplatformV1ErrorAnalysisAnnotation.attributedItems) &&
        Objects.equals(this.outlierScore, googleCloudAiplatformV1ErrorAnalysisAnnotation.outlierScore) &&
        Objects.equals(this.outlierThreshold, googleCloudAiplatformV1ErrorAnalysisAnnotation.outlierThreshold) &&
        Objects.equals(this.queryType, googleCloudAiplatformV1ErrorAnalysisAnnotation.queryType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributedItems, outlierScore, outlierThreshold, queryType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1ErrorAnalysisAnnotation {\n");
    sb.append("    attributedItems: ").append(toIndentedString(attributedItems)).append("\n");
    sb.append("    outlierScore: ").append(toIndentedString(outlierScore)).append("\n");
    sb.append("    outlierThreshold: ").append(toIndentedString(outlierThreshold)).append("\n");
    sb.append("    queryType: ").append(toIndentedString(queryType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributedItems");
    openapiFields.add("outlierScore");
    openapiFields.add("outlierThreshold");
    openapiFields.add("queryType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1ErrorAnalysisAnnotation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1ErrorAnalysisAnnotation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1ErrorAnalysisAnnotation is not found in the empty JSON string", GoogleCloudAiplatformV1ErrorAnalysisAnnotation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1ErrorAnalysisAnnotation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1ErrorAnalysisAnnotation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("attributedItems") != null && !jsonObj.get("attributedItems").isJsonNull()) {
        JsonArray jsonArrayattributedItems = jsonObj.getAsJsonArray("attributedItems");
        if (jsonArrayattributedItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributedItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributedItems` to be an array in the JSON string but got `%s`", jsonObj.get("attributedItems").toString()));
          }

          // validate the optional field `attributedItems` (array)
          for (int i = 0; i < jsonArrayattributedItems.size(); i++) {
            GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem.validateJsonElement(jsonArrayattributedItems.get(i));
          };
        }
      }
      if ((jsonObj.get("queryType") != null && !jsonObj.get("queryType").isJsonNull()) && !jsonObj.get("queryType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queryType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queryType").toString()));
      }
      // validate the optional field `queryType`
      if (jsonObj.get("queryType") != null && !jsonObj.get("queryType").isJsonNull()) {
        QueryTypeEnum.validateJsonElement(jsonObj.get("queryType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1ErrorAnalysisAnnotation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1ErrorAnalysisAnnotation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1ErrorAnalysisAnnotation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1ErrorAnalysisAnnotation.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1ErrorAnalysisAnnotation>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1ErrorAnalysisAnnotation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1ErrorAnalysisAnnotation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1ErrorAnalysisAnnotation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1ErrorAnalysisAnnotation
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1ErrorAnalysisAnnotation
   */
  public static GoogleCloudAiplatformV1ErrorAnalysisAnnotation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1ErrorAnalysisAnnotation.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1ErrorAnalysisAnnotation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

