/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1EncryptionSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1PipelineJobDetail;
import org.openapitools.client.model.GoogleCloudAiplatformV1PipelineJobRuntimeConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1PipelineTemplateMetadata;
import org.openapitools.client.model.GoogleRpcStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An instance of a machine learning PipelineJob.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1PipelineJob {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENCRYPTION_SPEC = "encryptionSpec";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_SPEC)
  private GoogleCloudAiplatformV1EncryptionSpec encryptionSpec;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private GoogleRpcStatus error;

  public static final String SERIALIZED_NAME_JOB_DETAIL = "jobDetail";
  @SerializedName(SERIALIZED_NAME_JOB_DETAIL)
  private GoogleCloudAiplatformV1PipelineJobDetail jobDetail;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  private String network;

  public static final String SERIALIZED_NAME_PIPELINE_SPEC = "pipelineSpec";
  @SerializedName(SERIALIZED_NAME_PIPELINE_SPEC)
  private Map<String, Object> pipelineSpec = new HashMap<>();

  public static final String SERIALIZED_NAME_RESERVED_IP_RANGES = "reservedIpRanges";
  @SerializedName(SERIALIZED_NAME_RESERVED_IP_RANGES)
  private List<String> reservedIpRanges = new ArrayList<>();

  public static final String SERIALIZED_NAME_RUNTIME_CONFIG = "runtimeConfig";
  @SerializedName(SERIALIZED_NAME_RUNTIME_CONFIG)
  private GoogleCloudAiplatformV1PipelineJobRuntimeConfig runtimeConfig;

  public static final String SERIALIZED_NAME_SCHEDULE_NAME = "scheduleName";
  @SerializedName(SERIALIZED_NAME_SCHEDULE_NAME)
  private String scheduleName;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT = "serviceAccount";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT)
  private String serviceAccount;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * Output only. The detailed state of the job.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    UNSPECIFIED("PIPELINE_STATE_UNSPECIFIED"),
    
    QUEUED("PIPELINE_STATE_QUEUED"),
    
    PENDING("PIPELINE_STATE_PENDING"),
    
    RUNNING("PIPELINE_STATE_RUNNING"),
    
    SUCCEEDED("PIPELINE_STATE_SUCCEEDED"),
    
    FAILED("PIPELINE_STATE_FAILED"),
    
    CANCELLING("PIPELINE_STATE_CANCELLING"),
    
    CANCELLED("PIPELINE_STATE_CANCELLED"),
    
    PAUSED("PIPELINE_STATE_PAUSED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TEMPLATE_METADATA = "templateMetadata";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_METADATA)
  private GoogleCloudAiplatformV1PipelineTemplateMetadata templateMetadata;

  public static final String SERIALIZED_NAME_TEMPLATE_URI = "templateUri";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_URI)
  private String templateUri;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudAiplatformV1PipelineJob() {
  }

  public GoogleCloudAiplatformV1PipelineJob(
     String createTime, 
     String endTime, 
     String name, 
     String scheduleName, 
     String startTime, 
     StateEnum state, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.endTime = endTime;
    this.name = name;
    this.scheduleName = scheduleName;
    this.startTime = startTime;
    this.state = state;
    this.updateTime = updateTime;
  }

  /**
   * Output only. Pipeline creation time.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1PipelineJob displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * The display name of the Pipeline. The name can be up to 128 characters long and can consist of any UTF-8 characters.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudAiplatformV1PipelineJob encryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Get encryptionSpec
   * @return encryptionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  public void setEncryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
  }


  /**
   * Output only. Pipeline end time.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }



  public GoogleCloudAiplatformV1PipelineJob error(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getError() {
    return error;
  }

  public void setError(GoogleRpcStatus error) {
    this.error = error;
  }


  public GoogleCloudAiplatformV1PipelineJob jobDetail(GoogleCloudAiplatformV1PipelineJobDetail jobDetail) {
    this.jobDetail = jobDetail;
    return this;
  }

  /**
   * Get jobDetail
   * @return jobDetail
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1PipelineJobDetail getJobDetail() {
    return jobDetail;
  }

  public void setJobDetail(GoogleCloudAiplatformV1PipelineJobDetail jobDetail) {
    this.jobDetail = jobDetail;
  }


  public GoogleCloudAiplatformV1PipelineJob labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudAiplatformV1PipelineJob putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The labels with user-defined metadata to organize PipelineJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. Note there is some reserved label key for Vertex AI Pipelines. - &#x60;vertex-ai-pipelines-run-billing-id&#x60;, user set value will get overrided.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  /**
   * Output only. The resource name of the PipelineJob.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudAiplatformV1PipelineJob network(String network) {
    this.network = network;
    return this;
  }

  /**
   * The full name of the Compute Engine [network](/compute/docs/networks-and-firewalls#networks) to which the Pipeline Job&#39;s workload should be peered. For example, &#x60;projects/12345/global/networks/myVPC&#x60;. [Format](/compute/docs/reference/rest/v1/networks/insert) is of the form &#x60;projects/{project}/global/networks/{network}&#x60;. Where {project} is a project number, as in &#x60;12345&#x60;, and {network} is a network name. Private services access must already be configured for the network. Pipeline job will apply the network configuration to the Google Cloud resources being launched, if applied, such as Vertex AI Training or Dataflow job. If left unspecified, the workload is not peered with any network.
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }


  public GoogleCloudAiplatformV1PipelineJob pipelineSpec(Map<String, Object> pipelineSpec) {
    this.pipelineSpec = pipelineSpec;
    return this;
  }

  public GoogleCloudAiplatformV1PipelineJob putPipelineSpecItem(String key, Object pipelineSpecItem) {
    if (this.pipelineSpec == null) {
      this.pipelineSpec = new HashMap<>();
    }
    this.pipelineSpec.put(key, pipelineSpecItem);
    return this;
  }

  /**
   * The spec of the pipeline.
   * @return pipelineSpec
   */
  @javax.annotation.Nullable
  public Map<String, Object> getPipelineSpec() {
    return pipelineSpec;
  }

  public void setPipelineSpec(Map<String, Object> pipelineSpec) {
    this.pipelineSpec = pipelineSpec;
  }


  public GoogleCloudAiplatformV1PipelineJob reservedIpRanges(List<String> reservedIpRanges) {
    this.reservedIpRanges = reservedIpRanges;
    return this;
  }

  public GoogleCloudAiplatformV1PipelineJob addReservedIpRangesItem(String reservedIpRangesItem) {
    if (this.reservedIpRanges == null) {
      this.reservedIpRanges = new ArrayList<>();
    }
    this.reservedIpRanges.add(reservedIpRangesItem);
    return this;
  }

  /**
   * A list of names for the reserved ip ranges under the VPC network that can be used for this Pipeline Job&#39;s workload. If set, we will deploy the Pipeline Job&#39;s workload within the provided ip ranges. Otherwise, the job will be deployed to any ip ranges under the provided VPC network. Example: [&#39;vertex-ai-ip-range&#39;].
   * @return reservedIpRanges
   */
  @javax.annotation.Nullable
  public List<String> getReservedIpRanges() {
    return reservedIpRanges;
  }

  public void setReservedIpRanges(List<String> reservedIpRanges) {
    this.reservedIpRanges = reservedIpRanges;
  }


  public GoogleCloudAiplatformV1PipelineJob runtimeConfig(GoogleCloudAiplatformV1PipelineJobRuntimeConfig runtimeConfig) {
    this.runtimeConfig = runtimeConfig;
    return this;
  }

  /**
   * Get runtimeConfig
   * @return runtimeConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1PipelineJobRuntimeConfig getRuntimeConfig() {
    return runtimeConfig;
  }

  public void setRuntimeConfig(GoogleCloudAiplatformV1PipelineJobRuntimeConfig runtimeConfig) {
    this.runtimeConfig = runtimeConfig;
  }


  /**
   * Output only. The schedule resource name. Only returned if the Pipeline is created by Schedule API.
   * @return scheduleName
   */
  @javax.annotation.Nullable
  public String getScheduleName() {
    return scheduleName;
  }



  public GoogleCloudAiplatformV1PipelineJob serviceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
    return this;
  }

  /**
   * The service account that the pipeline workload runs as. If not specified, the Compute Engine default service account in the project will be used. See https://cloud.google.com/compute/docs/access/service-accounts#default_service_account Users starting the pipeline must have the &#x60;iam.serviceAccounts.actAs&#x60; permission on this service account.
   * @return serviceAccount
   */
  @javax.annotation.Nullable
  public String getServiceAccount() {
    return serviceAccount;
  }

  public void setServiceAccount(String serviceAccount) {
    this.serviceAccount = serviceAccount;
  }


  /**
   * Output only. Pipeline start time.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }



  /**
   * Output only. The detailed state of the job.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  public GoogleCloudAiplatformV1PipelineJob templateMetadata(GoogleCloudAiplatformV1PipelineTemplateMetadata templateMetadata) {
    this.templateMetadata = templateMetadata;
    return this;
  }

  /**
   * Get templateMetadata
   * @return templateMetadata
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1PipelineTemplateMetadata getTemplateMetadata() {
    return templateMetadata;
  }

  public void setTemplateMetadata(GoogleCloudAiplatformV1PipelineTemplateMetadata templateMetadata) {
    this.templateMetadata = templateMetadata;
  }


  public GoogleCloudAiplatformV1PipelineJob templateUri(String templateUri) {
    this.templateUri = templateUri;
    return this;
  }

  /**
   * A template uri from where the PipelineJob.pipeline_spec, if empty, will be downloaded. Currently, only uri from Vertex Template Registry &amp; Gallery is supported. Reference to https://cloud.google.com/vertex-ai/docs/pipelines/create-pipeline-template.
   * @return templateUri
   */
  @javax.annotation.Nullable
  public String getTemplateUri() {
    return templateUri;
  }

  public void setTemplateUri(String templateUri) {
    this.templateUri = templateUri;
  }


  /**
   * Output only. Timestamp when this PipelineJob was most recently updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1PipelineJob googleCloudAiplatformV1PipelineJob = (GoogleCloudAiplatformV1PipelineJob) o;
    return Objects.equals(this.createTime, googleCloudAiplatformV1PipelineJob.createTime) &&
        Objects.equals(this.displayName, googleCloudAiplatformV1PipelineJob.displayName) &&
        Objects.equals(this.encryptionSpec, googleCloudAiplatformV1PipelineJob.encryptionSpec) &&
        Objects.equals(this.endTime, googleCloudAiplatformV1PipelineJob.endTime) &&
        Objects.equals(this.error, googleCloudAiplatformV1PipelineJob.error) &&
        Objects.equals(this.jobDetail, googleCloudAiplatformV1PipelineJob.jobDetail) &&
        Objects.equals(this.labels, googleCloudAiplatformV1PipelineJob.labels) &&
        Objects.equals(this.name, googleCloudAiplatformV1PipelineJob.name) &&
        Objects.equals(this.network, googleCloudAiplatformV1PipelineJob.network) &&
        Objects.equals(this.pipelineSpec, googleCloudAiplatformV1PipelineJob.pipelineSpec) &&
        Objects.equals(this.reservedIpRanges, googleCloudAiplatformV1PipelineJob.reservedIpRanges) &&
        Objects.equals(this.runtimeConfig, googleCloudAiplatformV1PipelineJob.runtimeConfig) &&
        Objects.equals(this.scheduleName, googleCloudAiplatformV1PipelineJob.scheduleName) &&
        Objects.equals(this.serviceAccount, googleCloudAiplatformV1PipelineJob.serviceAccount) &&
        Objects.equals(this.startTime, googleCloudAiplatformV1PipelineJob.startTime) &&
        Objects.equals(this.state, googleCloudAiplatformV1PipelineJob.state) &&
        Objects.equals(this.templateMetadata, googleCloudAiplatformV1PipelineJob.templateMetadata) &&
        Objects.equals(this.templateUri, googleCloudAiplatformV1PipelineJob.templateUri) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1PipelineJob.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, displayName, encryptionSpec, endTime, error, jobDetail, labels, name, network, pipelineSpec, reservedIpRanges, runtimeConfig, scheduleName, serviceAccount, startTime, state, templateMetadata, templateUri, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1PipelineJob {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    encryptionSpec: ").append(toIndentedString(encryptionSpec)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    jobDetail: ").append(toIndentedString(jobDetail)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    pipelineSpec: ").append(toIndentedString(pipelineSpec)).append("\n");
    sb.append("    reservedIpRanges: ").append(toIndentedString(reservedIpRanges)).append("\n");
    sb.append("    runtimeConfig: ").append(toIndentedString(runtimeConfig)).append("\n");
    sb.append("    scheduleName: ").append(toIndentedString(scheduleName)).append("\n");
    sb.append("    serviceAccount: ").append(toIndentedString(serviceAccount)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    templateMetadata: ").append(toIndentedString(templateMetadata)).append("\n");
    sb.append("    templateUri: ").append(toIndentedString(templateUri)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("displayName");
    openapiFields.add("encryptionSpec");
    openapiFields.add("endTime");
    openapiFields.add("error");
    openapiFields.add("jobDetail");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("network");
    openapiFields.add("pipelineSpec");
    openapiFields.add("reservedIpRanges");
    openapiFields.add("runtimeConfig");
    openapiFields.add("scheduleName");
    openapiFields.add("serviceAccount");
    openapiFields.add("startTime");
    openapiFields.add("state");
    openapiFields.add("templateMetadata");
    openapiFields.add("templateUri");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1PipelineJob
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1PipelineJob.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1PipelineJob is not found in the empty JSON string", GoogleCloudAiplatformV1PipelineJob.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1PipelineJob.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1PipelineJob` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `encryptionSpec`
      if (jsonObj.get("encryptionSpec") != null && !jsonObj.get("encryptionSpec").isJsonNull()) {
        GoogleCloudAiplatformV1EncryptionSpec.validateJsonElement(jsonObj.get("encryptionSpec"));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("error"));
      }
      // validate the optional field `jobDetail`
      if (jsonObj.get("jobDetail") != null && !jsonObj.get("jobDetail").isJsonNull()) {
        GoogleCloudAiplatformV1PipelineJobDetail.validateJsonElement(jsonObj.get("jobDetail"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("reservedIpRanges") != null && !jsonObj.get("reservedIpRanges").isJsonNull() && !jsonObj.get("reservedIpRanges").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `reservedIpRanges` to be an array in the JSON string but got `%s`", jsonObj.get("reservedIpRanges").toString()));
      }
      // validate the optional field `runtimeConfig`
      if (jsonObj.get("runtimeConfig") != null && !jsonObj.get("runtimeConfig").isJsonNull()) {
        GoogleCloudAiplatformV1PipelineJobRuntimeConfig.validateJsonElement(jsonObj.get("runtimeConfig"));
      }
      if ((jsonObj.get("scheduleName") != null && !jsonObj.get("scheduleName").isJsonNull()) && !jsonObj.get("scheduleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scheduleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scheduleName").toString()));
      }
      if ((jsonObj.get("serviceAccount") != null && !jsonObj.get("serviceAccount").isJsonNull()) && !jsonObj.get("serviceAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccount").toString()));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `templateMetadata`
      if (jsonObj.get("templateMetadata") != null && !jsonObj.get("templateMetadata").isJsonNull()) {
        GoogleCloudAiplatformV1PipelineTemplateMetadata.validateJsonElement(jsonObj.get("templateMetadata"));
      }
      if ((jsonObj.get("templateUri") != null && !jsonObj.get("templateUri").isJsonNull()) && !jsonObj.get("templateUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `templateUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("templateUri").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1PipelineJob.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1PipelineJob' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1PipelineJob> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1PipelineJob.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1PipelineJob>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1PipelineJob value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1PipelineJob read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1PipelineJob given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1PipelineJob
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1PipelineJob
   */
  public static GoogleCloudAiplatformV1PipelineJob fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1PipelineJob.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1PipelineJob to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

