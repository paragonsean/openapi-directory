/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The config for scheduling monitoring job.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig {
  public static final String SERIALIZED_NAME_MONITOR_INTERVAL = "monitorInterval";
  @SerializedName(SERIALIZED_NAME_MONITOR_INTERVAL)
  private String monitorInterval;

  public static final String SERIALIZED_NAME_MONITOR_WINDOW = "monitorWindow";
  @SerializedName(SERIALIZED_NAME_MONITOR_WINDOW)
  private String monitorWindow;

  public GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig() {
  }

  public GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig monitorInterval(String monitorInterval) {
    this.monitorInterval = monitorInterval;
    return this;
  }

  /**
   * Required. The model monitoring job scheduling interval. It will be rounded up to next full hour. This defines how often the monitoring jobs are triggered.
   * @return monitorInterval
   */
  @javax.annotation.Nullable
  public String getMonitorInterval() {
    return monitorInterval;
  }

  public void setMonitorInterval(String monitorInterval) {
    this.monitorInterval = monitorInterval;
  }


  public GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig monitorWindow(String monitorWindow) {
    this.monitorWindow = monitorWindow;
    return this;
  }

  /**
   * The time window of the prediction data being included in each prediction dataset. This window specifies how long the data should be collected from historical model results for each run. If not set, ModelDeploymentMonitoringScheduleConfig.monitor_interval will be used. e.g. If currently the cutoff time is 2022-01-08 14:30:00 and the monitor_window is set to be 3600, then data from 2022-01-08 13:30:00 to 2022-01-08 14:30:00 will be retrieved and aggregated to calculate the monitoring statistics.
   * @return monitorWindow
   */
  @javax.annotation.Nullable
  public String getMonitorWindow() {
    return monitorWindow;
  }

  public void setMonitorWindow(String monitorWindow) {
    this.monitorWindow = monitorWindow;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig googleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig = (GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig) o;
    return Objects.equals(this.monitorInterval, googleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig.monitorInterval) &&
        Objects.equals(this.monitorWindow, googleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig.monitorWindow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(monitorInterval, monitorWindow);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig {\n");
    sb.append("    monitorInterval: ").append(toIndentedString(monitorInterval)).append("\n");
    sb.append("    monitorWindow: ").append(toIndentedString(monitorWindow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("monitorInterval");
    openapiFields.add("monitorWindow");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig is not found in the empty JSON string", GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("monitorInterval") != null && !jsonObj.get("monitorInterval").isJsonNull()) && !jsonObj.get("monitorInterval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `monitorInterval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("monitorInterval").toString()));
      }
      if ((jsonObj.get("monitorWindow") != null && !jsonObj.get("monitorWindow").isJsonNull()) && !jsonObj.get("monitorWindow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `monitorWindow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("monitorWindow").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig
   */
  public static GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1ModelDeploymentMonitoringScheduleConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

