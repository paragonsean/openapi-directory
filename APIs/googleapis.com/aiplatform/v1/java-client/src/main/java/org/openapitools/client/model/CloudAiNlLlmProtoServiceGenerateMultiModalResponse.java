/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceCandidate;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceFact;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceMessageMetadata;
import org.openapitools.client.model.CloudAiNlLlmProtoServicePromptFeedback;
import org.openapitools.client.model.CloudAiNlLlmProtoServiceUsageMetadata;
import org.openapitools.client.model.IntelligenceCloudAutomlXpsReportingMetrics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CloudAiNlLlmProtoServiceGenerateMultiModalResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CloudAiNlLlmProtoServiceGenerateMultiModalResponse {
  public static final String SERIALIZED_NAME_CANDIDATES = "candidates";
  @SerializedName(SERIALIZED_NAME_CANDIDATES)
  private List<CloudAiNlLlmProtoServiceCandidate> candidates = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEBUG_METADATA = "debugMetadata";
  @SerializedName(SERIALIZED_NAME_DEBUG_METADATA)
  private CloudAiNlLlmProtoServiceMessageMetadata debugMetadata;

  public static final String SERIALIZED_NAME_FACTS = "facts";
  @SerializedName(SERIALIZED_NAME_FACTS)
  private List<CloudAiNlLlmProtoServiceFact> facts = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROMPT_FEEDBACK = "promptFeedback";
  @SerializedName(SERIALIZED_NAME_PROMPT_FEEDBACK)
  private CloudAiNlLlmProtoServicePromptFeedback promptFeedback;

  public static final String SERIALIZED_NAME_REPORTING_METRICS = "reportingMetrics";
  @SerializedName(SERIALIZED_NAME_REPORTING_METRICS)
  private IntelligenceCloudAutomlXpsReportingMetrics reportingMetrics;

  public static final String SERIALIZED_NAME_USAGE_METADATA = "usageMetadata";
  @SerializedName(SERIALIZED_NAME_USAGE_METADATA)
  private CloudAiNlLlmProtoServiceUsageMetadata usageMetadata;

  public CloudAiNlLlmProtoServiceGenerateMultiModalResponse() {
  }

  public CloudAiNlLlmProtoServiceGenerateMultiModalResponse candidates(List<CloudAiNlLlmProtoServiceCandidate> candidates) {
    this.candidates = candidates;
    return this;
  }

  public CloudAiNlLlmProtoServiceGenerateMultiModalResponse addCandidatesItem(CloudAiNlLlmProtoServiceCandidate candidatesItem) {
    if (this.candidates == null) {
      this.candidates = new ArrayList<>();
    }
    this.candidates.add(candidatesItem);
    return this;
  }

  /**
   * Possible candidate responses to the conversation up until this point.
   * @return candidates
   */
  @javax.annotation.Nullable
  public List<CloudAiNlLlmProtoServiceCandidate> getCandidates() {
    return candidates;
  }

  public void setCandidates(List<CloudAiNlLlmProtoServiceCandidate> candidates) {
    this.candidates = candidates;
  }


  public CloudAiNlLlmProtoServiceGenerateMultiModalResponse debugMetadata(CloudAiNlLlmProtoServiceMessageMetadata debugMetadata) {
    this.debugMetadata = debugMetadata;
    return this;
  }

  /**
   * Get debugMetadata
   * @return debugMetadata
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServiceMessageMetadata getDebugMetadata() {
    return debugMetadata;
  }

  public void setDebugMetadata(CloudAiNlLlmProtoServiceMessageMetadata debugMetadata) {
    this.debugMetadata = debugMetadata;
  }


  public CloudAiNlLlmProtoServiceGenerateMultiModalResponse facts(List<CloudAiNlLlmProtoServiceFact> facts) {
    this.facts = facts;
    return this;
  }

  public CloudAiNlLlmProtoServiceGenerateMultiModalResponse addFactsItem(CloudAiNlLlmProtoServiceFact factsItem) {
    if (this.facts == null) {
      this.facts = new ArrayList<>();
    }
    this.facts.add(factsItem);
    return this;
  }

  /**
   * External facts retrieved for factuality/grounding.
   * @return facts
   */
  @javax.annotation.Nullable
  public List<CloudAiNlLlmProtoServiceFact> getFacts() {
    return facts;
  }

  public void setFacts(List<CloudAiNlLlmProtoServiceFact> facts) {
    this.facts = facts;
  }


  public CloudAiNlLlmProtoServiceGenerateMultiModalResponse promptFeedback(CloudAiNlLlmProtoServicePromptFeedback promptFeedback) {
    this.promptFeedback = promptFeedback;
    return this;
  }

  /**
   * Get promptFeedback
   * @return promptFeedback
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServicePromptFeedback getPromptFeedback() {
    return promptFeedback;
  }

  public void setPromptFeedback(CloudAiNlLlmProtoServicePromptFeedback promptFeedback) {
    this.promptFeedback = promptFeedback;
  }


  public CloudAiNlLlmProtoServiceGenerateMultiModalResponse reportingMetrics(IntelligenceCloudAutomlXpsReportingMetrics reportingMetrics) {
    this.reportingMetrics = reportingMetrics;
    return this;
  }

  /**
   * Get reportingMetrics
   * @return reportingMetrics
   */
  @javax.annotation.Nullable
  public IntelligenceCloudAutomlXpsReportingMetrics getReportingMetrics() {
    return reportingMetrics;
  }

  public void setReportingMetrics(IntelligenceCloudAutomlXpsReportingMetrics reportingMetrics) {
    this.reportingMetrics = reportingMetrics;
  }


  public CloudAiNlLlmProtoServiceGenerateMultiModalResponse usageMetadata(CloudAiNlLlmProtoServiceUsageMetadata usageMetadata) {
    this.usageMetadata = usageMetadata;
    return this;
  }

  /**
   * Get usageMetadata
   * @return usageMetadata
   */
  @javax.annotation.Nullable
  public CloudAiNlLlmProtoServiceUsageMetadata getUsageMetadata() {
    return usageMetadata;
  }

  public void setUsageMetadata(CloudAiNlLlmProtoServiceUsageMetadata usageMetadata) {
    this.usageMetadata = usageMetadata;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudAiNlLlmProtoServiceGenerateMultiModalResponse cloudAiNlLlmProtoServiceGenerateMultiModalResponse = (CloudAiNlLlmProtoServiceGenerateMultiModalResponse) o;
    return Objects.equals(this.candidates, cloudAiNlLlmProtoServiceGenerateMultiModalResponse.candidates) &&
        Objects.equals(this.debugMetadata, cloudAiNlLlmProtoServiceGenerateMultiModalResponse.debugMetadata) &&
        Objects.equals(this.facts, cloudAiNlLlmProtoServiceGenerateMultiModalResponse.facts) &&
        Objects.equals(this.promptFeedback, cloudAiNlLlmProtoServiceGenerateMultiModalResponse.promptFeedback) &&
        Objects.equals(this.reportingMetrics, cloudAiNlLlmProtoServiceGenerateMultiModalResponse.reportingMetrics) &&
        Objects.equals(this.usageMetadata, cloudAiNlLlmProtoServiceGenerateMultiModalResponse.usageMetadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(candidates, debugMetadata, facts, promptFeedback, reportingMetrics, usageMetadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudAiNlLlmProtoServiceGenerateMultiModalResponse {\n");
    sb.append("    candidates: ").append(toIndentedString(candidates)).append("\n");
    sb.append("    debugMetadata: ").append(toIndentedString(debugMetadata)).append("\n");
    sb.append("    facts: ").append(toIndentedString(facts)).append("\n");
    sb.append("    promptFeedback: ").append(toIndentedString(promptFeedback)).append("\n");
    sb.append("    reportingMetrics: ").append(toIndentedString(reportingMetrics)).append("\n");
    sb.append("    usageMetadata: ").append(toIndentedString(usageMetadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("candidates");
    openapiFields.add("debugMetadata");
    openapiFields.add("facts");
    openapiFields.add("promptFeedback");
    openapiFields.add("reportingMetrics");
    openapiFields.add("usageMetadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudAiNlLlmProtoServiceGenerateMultiModalResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudAiNlLlmProtoServiceGenerateMultiModalResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudAiNlLlmProtoServiceGenerateMultiModalResponse is not found in the empty JSON string", CloudAiNlLlmProtoServiceGenerateMultiModalResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudAiNlLlmProtoServiceGenerateMultiModalResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudAiNlLlmProtoServiceGenerateMultiModalResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("candidates") != null && !jsonObj.get("candidates").isJsonNull()) {
        JsonArray jsonArraycandidates = jsonObj.getAsJsonArray("candidates");
        if (jsonArraycandidates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("candidates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `candidates` to be an array in the JSON string but got `%s`", jsonObj.get("candidates").toString()));
          }

          // validate the optional field `candidates` (array)
          for (int i = 0; i < jsonArraycandidates.size(); i++) {
            CloudAiNlLlmProtoServiceCandidate.validateJsonElement(jsonArraycandidates.get(i));
          };
        }
      }
      // validate the optional field `debugMetadata`
      if (jsonObj.get("debugMetadata") != null && !jsonObj.get("debugMetadata").isJsonNull()) {
        CloudAiNlLlmProtoServiceMessageMetadata.validateJsonElement(jsonObj.get("debugMetadata"));
      }
      if (jsonObj.get("facts") != null && !jsonObj.get("facts").isJsonNull()) {
        JsonArray jsonArrayfacts = jsonObj.getAsJsonArray("facts");
        if (jsonArrayfacts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("facts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `facts` to be an array in the JSON string but got `%s`", jsonObj.get("facts").toString()));
          }

          // validate the optional field `facts` (array)
          for (int i = 0; i < jsonArrayfacts.size(); i++) {
            CloudAiNlLlmProtoServiceFact.validateJsonElement(jsonArrayfacts.get(i));
          };
        }
      }
      // validate the optional field `promptFeedback`
      if (jsonObj.get("promptFeedback") != null && !jsonObj.get("promptFeedback").isJsonNull()) {
        CloudAiNlLlmProtoServicePromptFeedback.validateJsonElement(jsonObj.get("promptFeedback"));
      }
      // validate the optional field `reportingMetrics`
      if (jsonObj.get("reportingMetrics") != null && !jsonObj.get("reportingMetrics").isJsonNull()) {
        IntelligenceCloudAutomlXpsReportingMetrics.validateJsonElement(jsonObj.get("reportingMetrics"));
      }
      // validate the optional field `usageMetadata`
      if (jsonObj.get("usageMetadata") != null && !jsonObj.get("usageMetadata").isJsonNull()) {
        CloudAiNlLlmProtoServiceUsageMetadata.validateJsonElement(jsonObj.get("usageMetadata"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudAiNlLlmProtoServiceGenerateMultiModalResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudAiNlLlmProtoServiceGenerateMultiModalResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudAiNlLlmProtoServiceGenerateMultiModalResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudAiNlLlmProtoServiceGenerateMultiModalResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudAiNlLlmProtoServiceGenerateMultiModalResponse>() {
           @Override
           public void write(JsonWriter out, CloudAiNlLlmProtoServiceGenerateMultiModalResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudAiNlLlmProtoServiceGenerateMultiModalResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudAiNlLlmProtoServiceGenerateMultiModalResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudAiNlLlmProtoServiceGenerateMultiModalResponse
   * @throws IOException if the JSON string is invalid with respect to CloudAiNlLlmProtoServiceGenerateMultiModalResponse
   */
  public static CloudAiNlLlmProtoServiceGenerateMultiModalResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudAiNlLlmProtoServiceGenerateMultiModalResponse.class);
  }

  /**
   * Convert an instance of CloudAiNlLlmProtoServiceGenerateMultiModalResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

