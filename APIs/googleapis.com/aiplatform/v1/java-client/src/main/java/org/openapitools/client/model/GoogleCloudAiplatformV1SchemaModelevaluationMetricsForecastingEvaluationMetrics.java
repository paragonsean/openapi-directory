/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metrics for forecasting evaluation results.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics {
  public static final String SERIALIZED_NAME_MEAN_ABSOLUTE_ERROR = "meanAbsoluteError";
  @SerializedName(SERIALIZED_NAME_MEAN_ABSOLUTE_ERROR)
  private Float meanAbsoluteError;

  public static final String SERIALIZED_NAME_MEAN_ABSOLUTE_PERCENTAGE_ERROR = "meanAbsolutePercentageError";
  @SerializedName(SERIALIZED_NAME_MEAN_ABSOLUTE_PERCENTAGE_ERROR)
  private Float meanAbsolutePercentageError;

  public static final String SERIALIZED_NAME_QUANTILE_METRICS = "quantileMetrics";
  @SerializedName(SERIALIZED_NAME_QUANTILE_METRICS)
  private List<GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry> quantileMetrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_R_SQUARED = "rSquared";
  @SerializedName(SERIALIZED_NAME_R_SQUARED)
  private Float rSquared;

  public static final String SERIALIZED_NAME_ROOT_MEAN_SQUARED_ERROR = "rootMeanSquaredError";
  @SerializedName(SERIALIZED_NAME_ROOT_MEAN_SQUARED_ERROR)
  private Float rootMeanSquaredError;

  public static final String SERIALIZED_NAME_ROOT_MEAN_SQUARED_LOG_ERROR = "rootMeanSquaredLogError";
  @SerializedName(SERIALIZED_NAME_ROOT_MEAN_SQUARED_LOG_ERROR)
  private Float rootMeanSquaredLogError;

  public static final String SERIALIZED_NAME_ROOT_MEAN_SQUARED_PERCENTAGE_ERROR = "rootMeanSquaredPercentageError";
  @SerializedName(SERIALIZED_NAME_ROOT_MEAN_SQUARED_PERCENTAGE_ERROR)
  private Float rootMeanSquaredPercentageError;

  public static final String SERIALIZED_NAME_WEIGHTED_ABSOLUTE_PERCENTAGE_ERROR = "weightedAbsolutePercentageError";
  @SerializedName(SERIALIZED_NAME_WEIGHTED_ABSOLUTE_PERCENTAGE_ERROR)
  private Float weightedAbsolutePercentageError;

  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics() {
  }

  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics meanAbsoluteError(Float meanAbsoluteError) {
    this.meanAbsoluteError = meanAbsoluteError;
    return this;
  }

  /**
   * Mean Absolute Error (MAE).
   * @return meanAbsoluteError
   */
  @javax.annotation.Nullable
  public Float getMeanAbsoluteError() {
    return meanAbsoluteError;
  }

  public void setMeanAbsoluteError(Float meanAbsoluteError) {
    this.meanAbsoluteError = meanAbsoluteError;
  }


  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics meanAbsolutePercentageError(Float meanAbsolutePercentageError) {
    this.meanAbsolutePercentageError = meanAbsolutePercentageError;
    return this;
  }

  /**
   * Mean absolute percentage error. Infinity when there are zeros in the ground truth.
   * @return meanAbsolutePercentageError
   */
  @javax.annotation.Nullable
  public Float getMeanAbsolutePercentageError() {
    return meanAbsolutePercentageError;
  }

  public void setMeanAbsolutePercentageError(Float meanAbsolutePercentageError) {
    this.meanAbsolutePercentageError = meanAbsolutePercentageError;
  }


  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics quantileMetrics(List<GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry> quantileMetrics) {
    this.quantileMetrics = quantileMetrics;
    return this;
  }

  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics addQuantileMetricsItem(GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry quantileMetricsItem) {
    if (this.quantileMetrics == null) {
      this.quantileMetrics = new ArrayList<>();
    }
    this.quantileMetrics.add(quantileMetricsItem);
    return this;
  }

  /**
   * The quantile metrics entries for each quantile.
   * @return quantileMetrics
   */
  @javax.annotation.Nullable
  public List<GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry> getQuantileMetrics() {
    return quantileMetrics;
  }

  public void setQuantileMetrics(List<GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry> quantileMetrics) {
    this.quantileMetrics = quantileMetrics;
  }


  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics rSquared(Float rSquared) {
    this.rSquared = rSquared;
    return this;
  }

  /**
   * Coefficient of determination as Pearson correlation coefficient. Undefined when ground truth or predictions are constant or near constant.
   * @return rSquared
   */
  @javax.annotation.Nullable
  public Float getrSquared() {
    return rSquared;
  }

  public void setrSquared(Float rSquared) {
    this.rSquared = rSquared;
  }


  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics rootMeanSquaredError(Float rootMeanSquaredError) {
    this.rootMeanSquaredError = rootMeanSquaredError;
    return this;
  }

  /**
   * Root Mean Squared Error (RMSE).
   * @return rootMeanSquaredError
   */
  @javax.annotation.Nullable
  public Float getRootMeanSquaredError() {
    return rootMeanSquaredError;
  }

  public void setRootMeanSquaredError(Float rootMeanSquaredError) {
    this.rootMeanSquaredError = rootMeanSquaredError;
  }


  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics rootMeanSquaredLogError(Float rootMeanSquaredLogError) {
    this.rootMeanSquaredLogError = rootMeanSquaredLogError;
    return this;
  }

  /**
   * Root mean squared log error. Undefined when there are negative ground truth values or predictions.
   * @return rootMeanSquaredLogError
   */
  @javax.annotation.Nullable
  public Float getRootMeanSquaredLogError() {
    return rootMeanSquaredLogError;
  }

  public void setRootMeanSquaredLogError(Float rootMeanSquaredLogError) {
    this.rootMeanSquaredLogError = rootMeanSquaredLogError;
  }


  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics rootMeanSquaredPercentageError(Float rootMeanSquaredPercentageError) {
    this.rootMeanSquaredPercentageError = rootMeanSquaredPercentageError;
    return this;
  }

  /**
   * Root Mean Square Percentage Error. Square root of MSPE. Undefined/imaginary when MSPE is negative.
   * @return rootMeanSquaredPercentageError
   */
  @javax.annotation.Nullable
  public Float getRootMeanSquaredPercentageError() {
    return rootMeanSquaredPercentageError;
  }

  public void setRootMeanSquaredPercentageError(Float rootMeanSquaredPercentageError) {
    this.rootMeanSquaredPercentageError = rootMeanSquaredPercentageError;
  }


  public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics weightedAbsolutePercentageError(Float weightedAbsolutePercentageError) {
    this.weightedAbsolutePercentageError = weightedAbsolutePercentageError;
    return this;
  }

  /**
   * Weighted Absolute Percentage Error. Does not use weights, this is just what the metric is called. Undefined if actual values sum to zero. Will be very large if actual values sum to a very small number.
   * @return weightedAbsolutePercentageError
   */
  @javax.annotation.Nullable
  public Float getWeightedAbsolutePercentageError() {
    return weightedAbsolutePercentageError;
  }

  public void setWeightedAbsolutePercentageError(Float weightedAbsolutePercentageError) {
    this.weightedAbsolutePercentageError = weightedAbsolutePercentageError;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics googleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics = (GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics) o;
    return Objects.equals(this.meanAbsoluteError, googleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.meanAbsoluteError) &&
        Objects.equals(this.meanAbsolutePercentageError, googleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.meanAbsolutePercentageError) &&
        Objects.equals(this.quantileMetrics, googleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.quantileMetrics) &&
        Objects.equals(this.rSquared, googleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.rSquared) &&
        Objects.equals(this.rootMeanSquaredError, googleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.rootMeanSquaredError) &&
        Objects.equals(this.rootMeanSquaredLogError, googleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.rootMeanSquaredLogError) &&
        Objects.equals(this.rootMeanSquaredPercentageError, googleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.rootMeanSquaredPercentageError) &&
        Objects.equals(this.weightedAbsolutePercentageError, googleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.weightedAbsolutePercentageError);
  }

  @Override
  public int hashCode() {
    return Objects.hash(meanAbsoluteError, meanAbsolutePercentageError, quantileMetrics, rSquared, rootMeanSquaredError, rootMeanSquaredLogError, rootMeanSquaredPercentageError, weightedAbsolutePercentageError);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics {\n");
    sb.append("    meanAbsoluteError: ").append(toIndentedString(meanAbsoluteError)).append("\n");
    sb.append("    meanAbsolutePercentageError: ").append(toIndentedString(meanAbsolutePercentageError)).append("\n");
    sb.append("    quantileMetrics: ").append(toIndentedString(quantileMetrics)).append("\n");
    sb.append("    rSquared: ").append(toIndentedString(rSquared)).append("\n");
    sb.append("    rootMeanSquaredError: ").append(toIndentedString(rootMeanSquaredError)).append("\n");
    sb.append("    rootMeanSquaredLogError: ").append(toIndentedString(rootMeanSquaredLogError)).append("\n");
    sb.append("    rootMeanSquaredPercentageError: ").append(toIndentedString(rootMeanSquaredPercentageError)).append("\n");
    sb.append("    weightedAbsolutePercentageError: ").append(toIndentedString(weightedAbsolutePercentageError)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("meanAbsoluteError");
    openapiFields.add("meanAbsolutePercentageError");
    openapiFields.add("quantileMetrics");
    openapiFields.add("rSquared");
    openapiFields.add("rootMeanSquaredError");
    openapiFields.add("rootMeanSquaredLogError");
    openapiFields.add("rootMeanSquaredPercentageError");
    openapiFields.add("weightedAbsolutePercentageError");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics is not found in the empty JSON string", GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("quantileMetrics") != null && !jsonObj.get("quantileMetrics").isJsonNull()) {
        JsonArray jsonArrayquantileMetrics = jsonObj.getAsJsonArray("quantileMetrics");
        if (jsonArrayquantileMetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("quantileMetrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `quantileMetrics` to be an array in the JSON string but got `%s`", jsonObj.get("quantileMetrics").toString()));
          }

          // validate the optional field `quantileMetrics` (array)
          for (int i = 0; i < jsonArrayquantileMetrics.size(); i++) {
            GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetricsQuantileMetricsEntry.validateJsonElement(jsonArrayquantileMetrics.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics
   */
  public static GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1SchemaModelevaluationMetricsForecastingEvaluationMetrics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

