/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.GoogleCloudAiplatformV1EncryptionSpec;
import org.openapitools.client.model.GoogleCloudAiplatformV1InputDataConfig;
import org.openapitools.client.model.GoogleCloudAiplatformV1Model;
import org.openapitools.client.model.GoogleRpcStatus;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The TrainingPipeline orchestrates tasks associated with training a Model. It always executes the training task, and optionally may also export data from Vertex AI&#39;s Dataset which becomes the training input, upload the Model to Vertex AI, and evaluate the Model.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1TrainingPipeline {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ENCRYPTION_SPEC = "encryptionSpec";
  @SerializedName(SERIALIZED_NAME_ENCRYPTION_SPEC)
  private GoogleCloudAiplatformV1EncryptionSpec encryptionSpec;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private String endTime;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private GoogleRpcStatus error;

  public static final String SERIALIZED_NAME_INPUT_DATA_CONFIG = "inputDataConfig";
  @SerializedName(SERIALIZED_NAME_INPUT_DATA_CONFIG)
  private GoogleCloudAiplatformV1InputDataConfig inputDataConfig;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_MODEL_ID = "modelId";
  @SerializedName(SERIALIZED_NAME_MODEL_ID)
  private String modelId;

  public static final String SERIALIZED_NAME_MODEL_TO_UPLOAD = "modelToUpload";
  @SerializedName(SERIALIZED_NAME_MODEL_TO_UPLOAD)
  private GoogleCloudAiplatformV1Model modelToUpload;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PARENT_MODEL = "parentModel";
  @SerializedName(SERIALIZED_NAME_PARENT_MODEL)
  private String parentModel;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  /**
   * Output only. The detailed state of the pipeline.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    UNSPECIFIED("PIPELINE_STATE_UNSPECIFIED"),
    
    QUEUED("PIPELINE_STATE_QUEUED"),
    
    PENDING("PIPELINE_STATE_PENDING"),
    
    RUNNING("PIPELINE_STATE_RUNNING"),
    
    SUCCEEDED("PIPELINE_STATE_SUCCEEDED"),
    
    FAILED("PIPELINE_STATE_FAILED"),
    
    CANCELLING("PIPELINE_STATE_CANCELLING"),
    
    CANCELLED("PIPELINE_STATE_CANCELLED"),
    
    PAUSED("PIPELINE_STATE_PAUSED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TRAINING_TASK_DEFINITION = "trainingTaskDefinition";
  @SerializedName(SERIALIZED_NAME_TRAINING_TASK_DEFINITION)
  private String trainingTaskDefinition;

  public static final String SERIALIZED_NAME_TRAINING_TASK_INPUTS = "trainingTaskInputs";
  @SerializedName(SERIALIZED_NAME_TRAINING_TASK_INPUTS)
  private Object trainingTaskInputs = null;

  public static final String SERIALIZED_NAME_TRAINING_TASK_METADATA = "trainingTaskMetadata";
  @SerializedName(SERIALIZED_NAME_TRAINING_TASK_METADATA)
  private Object trainingTaskMetadata = null;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public GoogleCloudAiplatformV1TrainingPipeline() {
  }

  public GoogleCloudAiplatformV1TrainingPipeline(
     String createTime, 
     String endTime, 
     String name, 
     String startTime, 
     StateEnum state, 
     Object trainingTaskMetadata, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.endTime = endTime;
    this.name = name;
    this.startTime = startTime;
    this.state = state;
    this.trainingTaskMetadata = trainingTaskMetadata;
    this.updateTime = updateTime;
  }

  /**
   * Output only. Time when the TrainingPipeline was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1TrainingPipeline displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. The user-defined name of this TrainingPipeline.
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudAiplatformV1TrainingPipeline encryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
    return this;
  }

  /**
   * Get encryptionSpec
   * @return encryptionSpec
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1EncryptionSpec getEncryptionSpec() {
    return encryptionSpec;
  }

  public void setEncryptionSpec(GoogleCloudAiplatformV1EncryptionSpec encryptionSpec) {
    this.encryptionSpec = encryptionSpec;
  }


  /**
   * Output only. Time when the TrainingPipeline entered any of the following states: &#x60;PIPELINE_STATE_SUCCEEDED&#x60;, &#x60;PIPELINE_STATE_FAILED&#x60;, &#x60;PIPELINE_STATE_CANCELLED&#x60;.
   * @return endTime
   */
  @javax.annotation.Nullable
  public String getEndTime() {
    return endTime;
  }



  public GoogleCloudAiplatformV1TrainingPipeline error(GoogleRpcStatus error) {
    this.error = error;
    return this;
  }

  /**
   * Get error
   * @return error
   */
  @javax.annotation.Nullable
  public GoogleRpcStatus getError() {
    return error;
  }

  public void setError(GoogleRpcStatus error) {
    this.error = error;
  }


  public GoogleCloudAiplatformV1TrainingPipeline inputDataConfig(GoogleCloudAiplatformV1InputDataConfig inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
    return this;
  }

  /**
   * Get inputDataConfig
   * @return inputDataConfig
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1InputDataConfig getInputDataConfig() {
    return inputDataConfig;
  }

  public void setInputDataConfig(GoogleCloudAiplatformV1InputDataConfig inputDataConfig) {
    this.inputDataConfig = inputDataConfig;
  }


  public GoogleCloudAiplatformV1TrainingPipeline labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public GoogleCloudAiplatformV1TrainingPipeline putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * The labels with user-defined metadata to organize TrainingPipelines. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public GoogleCloudAiplatformV1TrainingPipeline modelId(String modelId) {
    this.modelId = modelId;
    return this;
  }

  /**
   * Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are &#x60;[a-z0-9_-]&#x60;. The first character cannot be a number or hyphen.
   * @return modelId
   */
  @javax.annotation.Nullable
  public String getModelId() {
    return modelId;
  }

  public void setModelId(String modelId) {
    this.modelId = modelId;
  }


  public GoogleCloudAiplatformV1TrainingPipeline modelToUpload(GoogleCloudAiplatformV1Model modelToUpload) {
    this.modelToUpload = modelToUpload;
    return this;
  }

  /**
   * Get modelToUpload
   * @return modelToUpload
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1Model getModelToUpload() {
    return modelToUpload;
  }

  public void setModelToUpload(GoogleCloudAiplatformV1Model modelToUpload) {
    this.modelToUpload = modelToUpload;
  }


  /**
   * Output only. Resource name of the TrainingPipeline.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudAiplatformV1TrainingPipeline parentModel(String parentModel) {
    this.parentModel = parentModel;
    return this;
  }

  /**
   * Optional. When specify this field, the &#x60;model_to_upload&#x60; will not be uploaded as a new model, instead, it will become a new version of this &#x60;parent_model&#x60;.
   * @return parentModel
   */
  @javax.annotation.Nullable
  public String getParentModel() {
    return parentModel;
  }

  public void setParentModel(String parentModel) {
    this.parentModel = parentModel;
  }


  /**
   * Output only. Time when the TrainingPipeline for the first time entered the &#x60;PIPELINE_STATE_RUNNING&#x60; state.
   * @return startTime
   */
  @javax.annotation.Nullable
  public String getStartTime() {
    return startTime;
  }



  /**
   * Output only. The detailed state of the pipeline.
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }



  public GoogleCloudAiplatformV1TrainingPipeline trainingTaskDefinition(String trainingTaskDefinition) {
    this.trainingTaskDefinition = trainingTaskDefinition;
    return this;
  }

  /**
   * Required. A Google Cloud Storage path to the YAML file that defines the training task which is responsible for producing the model artifact, and may also include additional auxiliary work. The definition files that can be used here are found in gs://google-cloud-aiplatform/schema/trainingjob/definition/. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
   * @return trainingTaskDefinition
   */
  @javax.annotation.Nullable
  public String getTrainingTaskDefinition() {
    return trainingTaskDefinition;
  }

  public void setTrainingTaskDefinition(String trainingTaskDefinition) {
    this.trainingTaskDefinition = trainingTaskDefinition;
  }


  public GoogleCloudAiplatformV1TrainingPipeline trainingTaskInputs(Object trainingTaskInputs) {
    this.trainingTaskInputs = trainingTaskInputs;
    return this;
  }

  /**
   * Required. The training task&#39;s parameter(s), as specified in the training_task_definition&#39;s &#x60;inputs&#x60;.
   * @return trainingTaskInputs
   */
  @javax.annotation.Nullable
  public Object getTrainingTaskInputs() {
    return trainingTaskInputs;
  }

  public void setTrainingTaskInputs(Object trainingTaskInputs) {
    this.trainingTaskInputs = trainingTaskInputs;
  }


  /**
   * Output only. The metadata information as specified in the training_task_definition&#39;s &#x60;metadata&#x60;. This metadata is an auxiliary runtime and final information about the training task. While the pipeline is running this information is populated only at a best effort basis. Only present if the pipeline&#39;s training_task_definition contains &#x60;metadata&#x60; object.
   * @return trainingTaskMetadata
   */
  @javax.annotation.Nullable
  public Object getTrainingTaskMetadata() {
    return trainingTaskMetadata;
  }



  /**
   * Output only. Time when the TrainingPipeline was most recently updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1TrainingPipeline googleCloudAiplatformV1TrainingPipeline = (GoogleCloudAiplatformV1TrainingPipeline) o;
    return Objects.equals(this.createTime, googleCloudAiplatformV1TrainingPipeline.createTime) &&
        Objects.equals(this.displayName, googleCloudAiplatformV1TrainingPipeline.displayName) &&
        Objects.equals(this.encryptionSpec, googleCloudAiplatformV1TrainingPipeline.encryptionSpec) &&
        Objects.equals(this.endTime, googleCloudAiplatformV1TrainingPipeline.endTime) &&
        Objects.equals(this.error, googleCloudAiplatformV1TrainingPipeline.error) &&
        Objects.equals(this.inputDataConfig, googleCloudAiplatformV1TrainingPipeline.inputDataConfig) &&
        Objects.equals(this.labels, googleCloudAiplatformV1TrainingPipeline.labels) &&
        Objects.equals(this.modelId, googleCloudAiplatformV1TrainingPipeline.modelId) &&
        Objects.equals(this.modelToUpload, googleCloudAiplatformV1TrainingPipeline.modelToUpload) &&
        Objects.equals(this.name, googleCloudAiplatformV1TrainingPipeline.name) &&
        Objects.equals(this.parentModel, googleCloudAiplatformV1TrainingPipeline.parentModel) &&
        Objects.equals(this.startTime, googleCloudAiplatformV1TrainingPipeline.startTime) &&
        Objects.equals(this.state, googleCloudAiplatformV1TrainingPipeline.state) &&
        Objects.equals(this.trainingTaskDefinition, googleCloudAiplatformV1TrainingPipeline.trainingTaskDefinition) &&
        Objects.equals(this.trainingTaskInputs, googleCloudAiplatformV1TrainingPipeline.trainingTaskInputs) &&
        Objects.equals(this.trainingTaskMetadata, googleCloudAiplatformV1TrainingPipeline.trainingTaskMetadata) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1TrainingPipeline.updateTime);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, displayName, encryptionSpec, endTime, error, inputDataConfig, labels, modelId, modelToUpload, name, parentModel, startTime, state, trainingTaskDefinition, trainingTaskInputs, trainingTaskMetadata, updateTime);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1TrainingPipeline {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    encryptionSpec: ").append(toIndentedString(encryptionSpec)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    inputDataConfig: ").append(toIndentedString(inputDataConfig)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    modelId: ").append(toIndentedString(modelId)).append("\n");
    sb.append("    modelToUpload: ").append(toIndentedString(modelToUpload)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    parentModel: ").append(toIndentedString(parentModel)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    trainingTaskDefinition: ").append(toIndentedString(trainingTaskDefinition)).append("\n");
    sb.append("    trainingTaskInputs: ").append(toIndentedString(trainingTaskInputs)).append("\n");
    sb.append("    trainingTaskMetadata: ").append(toIndentedString(trainingTaskMetadata)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("displayName");
    openapiFields.add("encryptionSpec");
    openapiFields.add("endTime");
    openapiFields.add("error");
    openapiFields.add("inputDataConfig");
    openapiFields.add("labels");
    openapiFields.add("modelId");
    openapiFields.add("modelToUpload");
    openapiFields.add("name");
    openapiFields.add("parentModel");
    openapiFields.add("startTime");
    openapiFields.add("state");
    openapiFields.add("trainingTaskDefinition");
    openapiFields.add("trainingTaskInputs");
    openapiFields.add("trainingTaskMetadata");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1TrainingPipeline
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1TrainingPipeline.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1TrainingPipeline is not found in the empty JSON string", GoogleCloudAiplatformV1TrainingPipeline.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1TrainingPipeline.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1TrainingPipeline` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      // validate the optional field `encryptionSpec`
      if (jsonObj.get("encryptionSpec") != null && !jsonObj.get("encryptionSpec").isJsonNull()) {
        GoogleCloudAiplatformV1EncryptionSpec.validateJsonElement(jsonObj.get("encryptionSpec"));
      }
      if ((jsonObj.get("endTime") != null && !jsonObj.get("endTime").isJsonNull()) && !jsonObj.get("endTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endTime").toString()));
      }
      // validate the optional field `error`
      if (jsonObj.get("error") != null && !jsonObj.get("error").isJsonNull()) {
        GoogleRpcStatus.validateJsonElement(jsonObj.get("error"));
      }
      // validate the optional field `inputDataConfig`
      if (jsonObj.get("inputDataConfig") != null && !jsonObj.get("inputDataConfig").isJsonNull()) {
        GoogleCloudAiplatformV1InputDataConfig.validateJsonElement(jsonObj.get("inputDataConfig"));
      }
      if ((jsonObj.get("modelId") != null && !jsonObj.get("modelId").isJsonNull()) && !jsonObj.get("modelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modelId").toString()));
      }
      // validate the optional field `modelToUpload`
      if (jsonObj.get("modelToUpload") != null && !jsonObj.get("modelToUpload").isJsonNull()) {
        GoogleCloudAiplatformV1Model.validateJsonElement(jsonObj.get("modelToUpload"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("parentModel") != null && !jsonObj.get("parentModel").isJsonNull()) && !jsonObj.get("parentModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentModel").toString()));
      }
      if ((jsonObj.get("startTime") != null && !jsonObj.get("startTime").isJsonNull()) && !jsonObj.get("startTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `startTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("startTime").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("state"));
      }
      if ((jsonObj.get("trainingTaskDefinition") != null && !jsonObj.get("trainingTaskDefinition").isJsonNull()) && !jsonObj.get("trainingTaskDefinition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trainingTaskDefinition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trainingTaskDefinition").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1TrainingPipeline.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1TrainingPipeline' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1TrainingPipeline> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1TrainingPipeline.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1TrainingPipeline>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1TrainingPipeline value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1TrainingPipeline read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1TrainingPipeline given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1TrainingPipeline
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1TrainingPipeline
   */
  public static GoogleCloudAiplatformV1TrainingPipeline fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1TrainingPipeline.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1TrainingPipeline to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

