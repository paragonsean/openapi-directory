/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Parameters that can be overrided in each query to tune query latency and recall.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1NearestNeighborQueryParameters {
  public static final String SERIALIZED_NAME_APPROXIMATE_NEIGHBOR_CANDIDATES = "approximateNeighborCandidates";
  @SerializedName(SERIALIZED_NAME_APPROXIMATE_NEIGHBOR_CANDIDATES)
  private Integer approximateNeighborCandidates;

  public static final String SERIALIZED_NAME_LEAF_NODES_SEARCH_FRACTION = "leafNodesSearchFraction";
  @SerializedName(SERIALIZED_NAME_LEAF_NODES_SEARCH_FRACTION)
  private Double leafNodesSearchFraction;

  public GoogleCloudAiplatformV1NearestNeighborQueryParameters() {
  }

  public GoogleCloudAiplatformV1NearestNeighborQueryParameters approximateNeighborCandidates(Integer approximateNeighborCandidates) {
    this.approximateNeighborCandidates = approximateNeighborCandidates;
    return this;
  }

  /**
   * Optional. The number of neighbors to find via approximate search before exact reordering is performed; if set, this value must be &gt; neighbor_count.
   * @return approximateNeighborCandidates
   */
  @javax.annotation.Nullable
  public Integer getApproximateNeighborCandidates() {
    return approximateNeighborCandidates;
  }

  public void setApproximateNeighborCandidates(Integer approximateNeighborCandidates) {
    this.approximateNeighborCandidates = approximateNeighborCandidates;
  }


  public GoogleCloudAiplatformV1NearestNeighborQueryParameters leafNodesSearchFraction(Double leafNodesSearchFraction) {
    this.leafNodesSearchFraction = leafNodesSearchFraction;
    return this;
  }

  /**
   * Optional. The fraction of the number of leaves to search, set at query time allows user to tune search performance. This value increase result in both search accuracy and latency increase. The value should be between 0.0 and 1.0.
   * @return leafNodesSearchFraction
   */
  @javax.annotation.Nullable
  public Double getLeafNodesSearchFraction() {
    return leafNodesSearchFraction;
  }

  public void setLeafNodesSearchFraction(Double leafNodesSearchFraction) {
    this.leafNodesSearchFraction = leafNodesSearchFraction;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1NearestNeighborQueryParameters googleCloudAiplatformV1NearestNeighborQueryParameters = (GoogleCloudAiplatformV1NearestNeighborQueryParameters) o;
    return Objects.equals(this.approximateNeighborCandidates, googleCloudAiplatformV1NearestNeighborQueryParameters.approximateNeighborCandidates) &&
        Objects.equals(this.leafNodesSearchFraction, googleCloudAiplatformV1NearestNeighborQueryParameters.leafNodesSearchFraction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approximateNeighborCandidates, leafNodesSearchFraction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1NearestNeighborQueryParameters {\n");
    sb.append("    approximateNeighborCandidates: ").append(toIndentedString(approximateNeighborCandidates)).append("\n");
    sb.append("    leafNodesSearchFraction: ").append(toIndentedString(leafNodesSearchFraction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("approximateNeighborCandidates");
    openapiFields.add("leafNodesSearchFraction");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1NearestNeighborQueryParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1NearestNeighborQueryParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1NearestNeighborQueryParameters is not found in the empty JSON string", GoogleCloudAiplatformV1NearestNeighborQueryParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1NearestNeighborQueryParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1NearestNeighborQueryParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1NearestNeighborQueryParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1NearestNeighborQueryParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1NearestNeighborQueryParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1NearestNeighborQueryParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1NearestNeighborQueryParameters>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1NearestNeighborQueryParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1NearestNeighborQueryParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1NearestNeighborQueryParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1NearestNeighborQueryParameters
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1NearestNeighborQueryParameters
   */
  public static GoogleCloudAiplatformV1NearestNeighborQueryParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1NearestNeighborQueryParameters.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1NearestNeighborQueryParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

