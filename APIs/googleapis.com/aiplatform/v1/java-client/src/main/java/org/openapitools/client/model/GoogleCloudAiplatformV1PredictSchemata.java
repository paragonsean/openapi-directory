/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Contains the schemata used in Model&#39;s predictions and explanations via PredictionService.Predict, PredictionService.Explain and BatchPredictionJob.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1PredictSchemata {
  public static final String SERIALIZED_NAME_INSTANCE_SCHEMA_URI = "instanceSchemaUri";
  @SerializedName(SERIALIZED_NAME_INSTANCE_SCHEMA_URI)
  private String instanceSchemaUri;

  public static final String SERIALIZED_NAME_PARAMETERS_SCHEMA_URI = "parametersSchemaUri";
  @SerializedName(SERIALIZED_NAME_PARAMETERS_SCHEMA_URI)
  private String parametersSchemaUri;

  public static final String SERIALIZED_NAME_PREDICTION_SCHEMA_URI = "predictionSchemaUri";
  @SerializedName(SERIALIZED_NAME_PREDICTION_SCHEMA_URI)
  private String predictionSchemaUri;

  public GoogleCloudAiplatformV1PredictSchemata() {
  }

  public GoogleCloudAiplatformV1PredictSchemata instanceSchemaUri(String instanceSchemaUri) {
    this.instanceSchemaUri = instanceSchemaUri;
    return this;
  }

  /**
   * Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single instance, which are used in PredictRequest.instances, ExplainRequest.instances and BatchPredictionJob.input_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
   * @return instanceSchemaUri
   */
  @javax.annotation.Nullable
  public String getInstanceSchemaUri() {
    return instanceSchemaUri;
  }

  public void setInstanceSchemaUri(String instanceSchemaUri) {
    this.instanceSchemaUri = instanceSchemaUri;
  }


  public GoogleCloudAiplatformV1PredictSchemata parametersSchemaUri(String parametersSchemaUri) {
    this.parametersSchemaUri = parametersSchemaUri;
    return this;
  }

  /**
   * Immutable. Points to a YAML file stored on Google Cloud Storage describing the parameters of prediction and explanation via PredictRequest.parameters, ExplainRequest.parameters and BatchPredictionJob.model_parameters. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI, if no parameters are supported, then it is set to an empty string. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
   * @return parametersSchemaUri
   */
  @javax.annotation.Nullable
  public String getParametersSchemaUri() {
    return parametersSchemaUri;
  }

  public void setParametersSchemaUri(String parametersSchemaUri) {
    this.parametersSchemaUri = parametersSchemaUri;
  }


  public GoogleCloudAiplatformV1PredictSchemata predictionSchemaUri(String predictionSchemaUri) {
    this.predictionSchemaUri = predictionSchemaUri;
    return this;
  }

  /**
   * Immutable. Points to a YAML file stored on Google Cloud Storage describing the format of a single prediction produced by this Model, which are returned via PredictResponse.predictions, ExplainResponse.explanations, and BatchPredictionJob.output_config. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML Models always have this field populated by Vertex AI. Note: The URI given on output will be immutable and probably different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
   * @return predictionSchemaUri
   */
  @javax.annotation.Nullable
  public String getPredictionSchemaUri() {
    return predictionSchemaUri;
  }

  public void setPredictionSchemaUri(String predictionSchemaUri) {
    this.predictionSchemaUri = predictionSchemaUri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1PredictSchemata googleCloudAiplatformV1PredictSchemata = (GoogleCloudAiplatformV1PredictSchemata) o;
    return Objects.equals(this.instanceSchemaUri, googleCloudAiplatformV1PredictSchemata.instanceSchemaUri) &&
        Objects.equals(this.parametersSchemaUri, googleCloudAiplatformV1PredictSchemata.parametersSchemaUri) &&
        Objects.equals(this.predictionSchemaUri, googleCloudAiplatformV1PredictSchemata.predictionSchemaUri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instanceSchemaUri, parametersSchemaUri, predictionSchemaUri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1PredictSchemata {\n");
    sb.append("    instanceSchemaUri: ").append(toIndentedString(instanceSchemaUri)).append("\n");
    sb.append("    parametersSchemaUri: ").append(toIndentedString(parametersSchemaUri)).append("\n");
    sb.append("    predictionSchemaUri: ").append(toIndentedString(predictionSchemaUri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instanceSchemaUri");
    openapiFields.add("parametersSchemaUri");
    openapiFields.add("predictionSchemaUri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1PredictSchemata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1PredictSchemata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1PredictSchemata is not found in the empty JSON string", GoogleCloudAiplatformV1PredictSchemata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1PredictSchemata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1PredictSchemata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("instanceSchemaUri") != null && !jsonObj.get("instanceSchemaUri").isJsonNull()) && !jsonObj.get("instanceSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instanceSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instanceSchemaUri").toString()));
      }
      if ((jsonObj.get("parametersSchemaUri") != null && !jsonObj.get("parametersSchemaUri").isJsonNull()) && !jsonObj.get("parametersSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parametersSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parametersSchemaUri").toString()));
      }
      if ((jsonObj.get("predictionSchemaUri") != null && !jsonObj.get("predictionSchemaUri").isJsonNull()) && !jsonObj.get("predictionSchemaUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `predictionSchemaUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("predictionSchemaUri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1PredictSchemata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1PredictSchemata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1PredictSchemata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1PredictSchemata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1PredictSchemata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1PredictSchemata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1PredictSchemata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1PredictSchemata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1PredictSchemata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1PredictSchemata
   */
  public static GoogleCloudAiplatformV1PredictSchemata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1PredictSchemata.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1PredictSchemata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

