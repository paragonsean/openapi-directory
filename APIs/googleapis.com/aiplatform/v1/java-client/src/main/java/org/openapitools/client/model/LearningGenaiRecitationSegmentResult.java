/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LearningGenaiRecitationDocAttribution;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The recitation result for each segment in a given input.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LearningGenaiRecitationSegmentResult {
  /**
   * The dataset the segment came from.
   */
  @JsonAdapter(AttributionDatasetEnum.Adapter.class)
  public enum AttributionDatasetEnum {
    DATASET_UNSPECIFIED("DATASET_UNSPECIFIED"),
    
    WIKIPEDIA("WIKIPEDIA"),
    
    WEBDOCS("WEBDOCS"),
    
    WEBDOCS_FINETUNE("WEBDOCS_FINETUNE"),
    
    GITHUB_MIRROR("GITHUB_MIRROR"),
    
    BOOKS_FULL_VIEW("BOOKS_FULL_VIEW"),
    
    BOOKS_PRIVATE("BOOKS_PRIVATE"),
    
    GNEWS("GNEWS"),
    
    ULM_DOCJOINS("ULM_DOCJOINS"),
    
    ULM_DOCJOINS_DEDUPED("ULM_DOCJOINS_DEDUPED"),
    
    MEENA_FC("MEENA_FC"),
    
    PODCAST("PODCAST"),
    
    AQUA("AQUA"),
    
    WEB_ASR("WEB_ASR"),
    
    BARD_GOLDEN("BARD_GOLDEN"),
    
    COMMON_SENSE_REASONING("COMMON_SENSE_REASONING"),
    
    MATH("MATH"),
    
    MATH_REASONING("MATH_REASONING"),
    
    CLEAN_ARXIV("CLEAN_ARXIV"),
    
    LAMDA_FACTUALITY_E2_E_QUERY_GENERATION("LAMDA_FACTUALITY_E2E_QUERY_GENERATION"),
    
    LAMDA_FACTUALITY_E2_E_RESPONSE_GENERATION("LAMDA_FACTUALITY_E2E_RESPONSE_GENERATION"),
    
    MASSIVE_FORUM_THREAD_SCORED_BARD("MASSIVE_FORUM_THREAD_SCORED_BARD"),
    
    MASSIVE_FORUM_THREAD_SCORED_LONG_200("MASSIVE_FORUM_THREAD_SCORED_LONG_200"),
    
    MASSIVE_FORUM_THREAD_SCORED_LONG_500("MASSIVE_FORUM_THREAD_SCORED_LONG_500"),
    
    DOCUMENT_CHUNKS("DOCUMENT_CHUNKS"),
    
    MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN("MEENA_RESEARCH_PHASE_GOLDEN_MARKDOWN"),
    
    MEENA_RESEARCH_PHASE_GOOGLERS("MEENA_RESEARCH_PHASE_GOOGLERS"),
    
    MEENA_RESPONSE_SAFETY_HUMAN_GEN("MEENA_RESPONSE_SAFETY_HUMAN_GEN"),
    
    MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST("MEENA_RESPONSE_SAFETY_SCHEMA_NO_BROADCAST"),
    
    MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2("MEENA_RESPONSE_SAFETY_V3_HUMAN_GEN2"),
    
    MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST("MEENA_RESPONSE_SAFETY_V3_SCHEMA_NO_BROADCAST"),
    
    LAMDA_FACTUALITY_TRIGGER("LAMDA_FACTUALITY_TRIGGER"),
    
    LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST("LAMDA_SAFETY_V2_SCHEMA_NO_BROADCAST"),
    
    LAMDA_SSI_DISCRIMINATIVE("LAMDA_SSI_DISCRIMINATIVE"),
    
    ASSISTANT_PERSONALITY_SAFETY("ASSISTANT_PERSONALITY_SAFETY"),
    
    PODCAST_FINETUNE_DIALOG("PODCAST_FINETUNE_DIALOG"),
    
    WORLD_QUERY_GENERATOR("WORLD_QUERY_GENERATOR"),
    
    C4_JOINED_DOCJOINS("C4_JOINED_DOCJOINS"),
    
    HOL4_THEORIES("HOL4_THEORIES"),
    
    HOL_LIGHT_THEORIES("HOL_LIGHT_THEORIES"),
    
    HOLSTEPS("HOLSTEPS"),
    
    ISABELLE_STEP("ISABELLE_STEP"),
    
    ISABELLE_THEORIES("ISABELLE_THEORIES"),
    
    LEAN_MATHLIB_THEORIES("LEAN_MATHLIB_THEORIES"),
    
    LEAN_STEP("LEAN_STEP"),
    
    MIZAR_THEORIES("MIZAR_THEORIES"),
    
    COQ_STEP("COQ_STEP"),
    
    COQ_THEORIES("COQ_THEORIES"),
    
    AMPS_KHAN("AMPS_KHAN"),
    
    AMPS_MATHEMATICA("AMPS_MATHEMATICA"),
    
    CODEY_CODE("CODEY_CODE"),
    
    CODE_QA_SE("CODE_QA_SE"),
    
    CODE_QA_SO("CODE_QA_SO"),
    
    CODE_QA_FT_FORMAT("CODE_QA_FT_FORMAT"),
    
    CODE_QA_FT_KNOWLEDGE("CODE_QA_FT_KNOWLEDGE"),
    
    CODE_QA_GITHUB_FILTERED_CODE("CODE_QA_GITHUB_FILTERED_CODE"),
    
    BARD_PERSONALITY_GOLDEN("BARD_PERSONALITY_GOLDEN"),
    
    ULM_DOCJOINS_WITH_URLS_EN("ULM_DOCJOINS_WITH_URLS_EN"),
    
    ULM_DOCJOINS_WITH_URLS_I18_N("ULM_DOCJOINS_WITH_URLS_I18N"),
    
    GOODALL_MTV5_GITHUB("GOODALL_MTV5_GITHUB"),
    
    GOODALL_MTV5_BOOKS("GOODALL_MTV5_BOOKS"),
    
    GOODALL_MTV5_C4("GOODALL_MTV5_C4"),
    
    GOODALL_MTV5_WIKIPEDIA("GOODALL_MTV5_WIKIPEDIA"),
    
    GOODALL_MW_TOP_100_B("GOODALL_MW_TOP_100B"),
    
    GOODALL_MW_STACK_EXCHANGE("GOODALL_MW_STACK_EXCHANGE"),
    
    GOODALL_MW_TOP_0_10_B("GOODALL_MW_TOP_0_10B"),
    
    GOODALL_MW_TOP_10_B_20_B("GOODALL_MW_TOP_10B_20B"),
    
    CODEY_NOTEBOOK_LM_PRETRAINING("CODEY_NOTEBOOK_LM_PRETRAINING"),
    
    VERTEX_SAFE_FLAN("VERTEX_SAFE_FLAN"),
    
    GITHUB_MIRROR_V1_0_1("GITHUB_MIRROR_V1_0_1"),
    
    GITHUB_MIRROR_V2_1_0("GITHUB_MIRROR_V2_1_0"),
    
    CMS_WIKIPEDIA_LANG_FILTERED("CMS_WIKIPEDIA_LANG_FILTERED"),
    
    CMS_STACKOVERFLOW_MULTILINGUAL("CMS_STACKOVERFLOW_MULTILINGUAL"),
    
    CMS_STACKEXCHANGE("CMS_STACKEXCHANGE"),
    
    PUBMED("PUBMED"),
    
    GEMINI_DOCJOINS_EN_TOP10_B_GCC("GEMINI_DOCJOINS_EN_TOP10B_GCC"),
    
    GEMINI_DOCJOINS_EN_TOP10_B_TOP20_B_GCC("GEMINI_DOCJOINS_EN_TOP10B_TOP20B_GCC"),
    
    GEMINI_DOCJOINS_EN_TOP20_B_TOP100_B_GCC("GEMINI_DOCJOINS_EN_TOP20B_TOP100B_GCC"),
    
    GEMINI_DOCJOINS_EN_TOP100_B_ALL_INDEXED_GCC("GEMINI_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC"),
    
    GEMINI_DOCJOINS_I18_N_TOP10_B_GCC("GEMINI_DOCJOINS_I18N_TOP10B_GCC"),
    
    GEMINI_DOCJOINS_I18_N_TOP10_B_TOP20_B_GCC("GEMINI_DOCJOINS_I18N_TOP10B_TOP20B_GCC"),
    
    GEMINI_DOCJOINS_I18_N_TOP20_B_TOP100_B_GCC("GEMINI_DOCJOINS_I18N_TOP20B_TOP100B_GCC"),
    
    SIMPLIFIED_HTML_V1_GCC("SIMPLIFIED_HTML_V1_GCC"),
    
    GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC("GEMINI_DOCJOINS_TOXICITY_TAGGED_GCC"),
    
    CMS_GITHUB_V4("CMS_GITHUB_V4"),
    
    GITHUB_HTML_V4("GITHUB_HTML_V4"),
    
    GITHUB_OTHER_V4("GITHUB_OTHER_V4"),
    
    GITHUB_LONG_TAIL_V4("GITHUB_LONG_TAIL_V4"),
    
    CMS_GITHUB_MULTIFILE_V4("CMS_GITHUB_MULTIFILE_V4"),
    
    GITHUB_DIFFS_WITH_COMMIT_MESSAGE("GITHUB_DIFFS_WITH_COMMIT_MESSAGE"),
    
    ULM_ARXIV("ULM_ARXIV"),
    
    NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY("NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_ENONLY"),
    
    NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY("NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_040623_LONG_DEDUP_NONENONLY"),
    
    QUORA("QUORA"),
    
    PODCASTS_ROBOTSTXT("PODCASTS_ROBOTSTXT"),
    
    COMBINED_REDDIT("COMBINED_REDDIT"),
    
    CANARIES_SHUFFLED("CANARIES_SHUFFLED"),
    
    CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX("CLM_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX"),
    
    TECHDOCS_DATA_SOURCE("TECHDOCS_DATA_SOURCE"),
    
    SCIENCE_PDF_70_M_DOCS_FILTERED("SCIENCE_PDF_70M_DOCS_FILTERED"),
    
    GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED("GEMINI_V1_CMS_WIKIPEDIA_LANG_FILTERED"),
    
    GEMINI_V1_WIKIPEDIA_DIFFS("GEMINI_V1_WIKIPEDIA_DIFFS"),
    
    GEMINI_V1_DOCJOINS_EN_TOP10_B_GCC_NODEDUP_050523("GEMINI_V1_DOCJOINS_EN_TOP10B_GCC_NODEDUP_050523"),
    
    GEMINI_V1_DOCJOINS_EN_TOP10_B_TOP20_B_GCC_NODEDUP_050523("GEMINI_V1_DOCJOINS_EN_TOP10B_TOP20B_GCC_NODEDUP_050523"),
    
    GEMINI_V1_DOCJOINS_EN_TOP20_B_TOP100_B_GCC_NODEDUP_050523("GEMINI_V1_DOCJOINS_EN_TOP20B_TOP100B_GCC_NODEDUP_050523"),
    
    GEMINI_V1_DOCJOINS_EN_TOP100_B_ALL_INDEXED_GCC_NODEDUP_050523("GEMINI_V1_DOCJOINS_EN_TOP100B_ALL_INDEXED_GCC_NODEDUP_050523"),
    
    GEMINI_V1_DOCJOINS_I18_N_TOP10_B_GCC_050523("GEMINI_V1_DOCJOINS_I18N_TOP10B_GCC_050523"),
    
    GEMINI_V1_DOCJOINS_I18_N_TOP10_B_TOP20_B_GCC_050523("GEMINI_V1_DOCJOINS_I18N_TOP10B_TOP20B_GCC_050523"),
    
    GEMINI_V1_DOCJOINS_I18_N_TOP20_B_TOP100_B_GCC_050523("GEMINI_V1_DOCJOINS_I18N_TOP20B_TOP100B_GCC_050523"),
    
    GEMINI_V1_SIMPLIFIED_HTML_V2_GCC("GEMINI_V1_SIMPLIFIED_HTML_V2_GCC"),
    
    GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2("GEMINI_V1_CMS_STACKOVERFLOW_MULTILINGUAL_V2"),
    
    GEMINI_V1_CMS_STACKEXCHANGE_DECONT("GEMINI_V1_CMS_STACKEXCHANGE_DECONT"),
    
    GEMINI_V1_QUORA("GEMINI_V1_QUORA"),
    
    GEMINI_V1_COMBINED_REDDIT("GEMINI_V1_COMBINED_REDDIT"),
    
    GEMINI_V1_DOCJOIN_100_B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS("GEMINI_V1_DOCJOIN_100B_EN_TOXICITY_TAGGED_GCC_FIXED_TAGS"),
    
    GEMINI_V1_PUBMED("GEMINI_V1_PUBMED"),
    
    GEMINI_V1_WEB_MATH_V2("GEMINI_V1_WEB_MATH_V2"),
    
    GEMINI_V1_CMS_GITHUB_V7("GEMINI_V1_CMS_GITHUB_V7"),
    
    GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7("GEMINI_V1_CMS_GITHUB_DECONTAMINATED_V_7"),
    
    GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2("GEMINI_V1_GITHUB_DIFF_WITH_COMMIT_MESSAGE_V2"),
    
    GEMINI_V1_GITHUB_HTML_CSS_XML_V4("GEMINI_V1_GITHUB_HTML_CSS_XML_V4"),
    
    GEMINI_V1_GITHUB_OTHER_V4("GEMINI_V1_GITHUB_OTHER_V4"),
    
    GEMINI_V1_GITHUB_LONG_TAIL_V4("GEMINI_V1_GITHUB_LONG_TAIL_V4"),
    
    GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE("GEMINI_V1_GITHUB_JUPTYER_NOTEBOOKS_SSTABLE"),
    
    GEMINI_V1_ULM_ARXIV_SSTABLE("GEMINI_V1_ULM_ARXIV_SSTABLE"),
    
    GEMINI_V1_PODCASTS_ROBOTSTXT("GEMINI_V1_PODCASTS_ROBOTSTXT"),
    
    GEMINI_V1_SCIENCE_PDF_68_M_HQ_DOCS_GCC("GEMINI_V1_SCIENCE_PDF_68M_HQ_DOCS_GCC"),
    
    GEMINI_V1_GITHUB_TECHDOCS_V2("GEMINI_V1_GITHUB_TECHDOCS_V2"),
    
    GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN("GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_EN"),
    
    GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN("GEMINI_V1_NONPUB_COPYRIGHT_BOOKS_V2_70_CONF_LONG_DEDUP_NONEN"),
    
    GEMINI_V1_STEM_BOOKS_650_K_TEXT("GEMINI_V1_STEM_BOOKS_650K_TEXT"),
    
    GEMINI_V1_VQCOCA_1_B_MULTIRES_M3_W_V2_FILTERED("GEMINI_V1_VQCOCA_1B_MULTIRES_M3W_V2_FILTERED"),
    
    GEMINI_V1_VQCOCA_1_B_MULTIRES_WEBLI_EN_V4_350_M_PREFIXED_FILTERED_IMAGE2_TEXT("GEMINI_V1_VQCOCA_1B_MULTIRES_WEBLI_EN_V4_350M_PREFIXED_FILTERED_IMAGE2TEXT"),
    
    GEMINI_V1_VQCOCA_1_B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2_TEXT("GEMINI_V1_VQCOCA_1B_MULTIRES_SCREENAI_PREFIXED_FILTERED_IMAGE2TEXT"),
    
    GEMINI_V1_VQCOCA_1_B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2_TEXT("GEMINI_V1_VQCOCA_1B_MULTIRES_CULTURE_PREFIXED_FILTERED_IMAGE2TEXT"),
    
    GEMINI_V1_VQCOCA_1_B_MULTIRES_CC3_M_EN_PREFIXED_IMAGE2_TEXT("GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_EN_PREFIXED_IMAGE2TEXT"),
    
    GEMINI_V1_VQCOCA_1_B_MULTIRES_CC3_M_I18_N_PREFIXED_IMAGE2_TEXT("GEMINI_V1_VQCOCA_1B_MULTIRES_CC3M_I18N_PREFIXED_IMAGE2TEXT"),
    
    GEMINI_V1_VQCOCA_1_B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2_TEXT("GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_EN_PREFIXED_FILTERED_IMAGE2TEXT"),
    
    GEMINI_V1_VQCOCA_1_B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2_TEXT("GEMINI_V1_VQCOCA_1B_MULTIRES_OCR_NON_EN_PREFIXED_FILTERED_IMAGE2TEXT"),
    
    GEMINI_V1_VQCOCA_1_B_MULTIRES_VTP_4_F_VIDEO2_TEXT_PREFIX("GEMINI_V1_VQCOCA_1B_MULTIRES_VTP_4F_VIDEO2TEXT_PREFIX"),
    
    GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR("GEMINI_V1_FORMAL_MATH_WITHOUT_HOLSTEPS_AND_MIZAR"),
    
    GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX("GEMINI_V1_TRANSLATE_DATAV2_ALLTIERS_GCC_MIX"),
    
    GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE("GEMINI_V1_CANARIES_SHUFFLED_DOCJOIN_EN_NONEN_CODE_ARXIV_TRANSLATE"),
    
    DUET_CLOUD_SECURITY_DOCS("DUET_CLOUD_SECURITY_DOCS"),
    
    DUET_GITHUB_CODE_SNIPPETS("DUET_GITHUB_CODE_SNIPPETS"),
    
    DUET_GITHUB_FILES("DUET_GITHUB_FILES"),
    
    DUET_GOBYEXAMPLE("DUET_GOBYEXAMPLE"),
    
    DUET_GOLANG_DOCS("DUET_GOLANG_DOCS"),
    
    DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES("DUET_CLOUD_DOCS_TROUBLESHOOTING_TABLES"),
    
    DUET_DEVSITE_DOCS("DUET_DEVSITE_DOCS"),
    
    DUET_CLOUD_BLOG_POSTS("DUET_CLOUD_BLOG_POSTS"),
    
    DUET_CLOUD_PODCAST_EPISODES("DUET_CLOUD_PODCAST_EPISODES"),
    
    DUET_YOUTUBE_VIDEOS("DUET_YOUTUBE_VIDEOS"),
    
    DUET_CLOUD_SKILLS_BOOST("DUET_CLOUD_SKILLS_BOOST"),
    
    DUET_CLOUD_DOCS("DUET_CLOUD_DOCS"),
    
    DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED("DUET_CLOUD_GITHUB_CODE_SNIPPETS_GENERATED"),
    
    DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN("DUET_CLOUD_GITHUB_CODE_SNIPPETS_HANDWRITTEN"),
    
    DUET_GOOGLESQL_GENERATION("DUET_GOOGLESQL_GENERATION"),
    
    DUET_CLOUD_IX_PROMPTS("DUET_CLOUD_IX_PROMPTS"),
    
    DUET_RAD("DUET_RAD"),
    
    BARD_ARCADE_GITHUB("BARD_ARCADE_GITHUB"),
    
    MOBILE_ASSISTANT_MAGI_FILTERED_0825_373_K("MOBILE_ASSISTANT_MAGI_FILTERED_0825_373K"),
    
    MOBILE_ASSISTANT_PALM24_B_FILTERED_400_K("MOBILE_ASSISTANT_PALM24B_FILTERED_400K"),
    
    GENESIS_NEWS_INSIGHTS("GENESIS_NEWS_INSIGHTS"),
    
    LABS_AQA_DSCOUT("LABS_AQA_DSCOUT"),
    
    LABS_AQA_TAILWIND("LABS_AQA_TAILWIND"),
    
    LABS_AQA_DELEWARE("LABS_AQA_DELEWARE"),
    
    GEMINI_MULTIMODAL_FT_URL("GEMINI_MULTIMODAL_FT_URL"),
    
    GEMINI_MULTIMODAL_FT_YT("GEMINI_MULTIMODAL_FT_YT"),
    
    GEMINI_MULTIMODAL_FT_SHUTTERSTOCK("GEMINI_MULTIMODAL_FT_SHUTTERSTOCK"),
    
    GEMINI_MULTIMODAL_FT_NONE("GEMINI_MULTIMODAL_FT_NONE"),
    
    GEMINI_MULTIMODAL_FT_OTHER("GEMINI_MULTIMODAL_FT_OTHER"),
    
    GEMINI_MULTIMODAL_FT_INK("GEMINI_MULTIMODAL_FT_INK"),
    
    GEMINI_MULTIMODAL_IT("GEMINI_MULTIMODAL_IT"),
    
    GEMINI_IT_SHUTTERSTOCK("GEMINI_IT_SHUTTERSTOCK"),
    
    GEMINI_IT_M3_W("GEMINI_IT_M3W"),
    
    GEMINI_IT_HEDGING("GEMINI_IT_HEDGING"),
    
    GEMINI_IT_DSCOUT_FACTUALITY("GEMINI_IT_DSCOUT_FACTUALITY"),
    
    GEMINI_IT_AQUAMUSE("GEMINI_IT_AQUAMUSE"),
    
    GEMINI_IT_SHOTGUN("GEMINI_IT_SHOTGUN"),
    
    GEMINI_IT_ACI_BENCH("GEMINI_IT_ACI_BENCH"),
    
    GEMINI_IT_SPIDER_FILTERED("GEMINI_IT_SPIDER_FILTERED"),
    
    GEMINI_IT_TAB_SUM_BQ("GEMINI_IT_TAB_SUM_BQ"),
    
    GEMINI_IT_QA_WITH_URL("GEMINI_IT_QA_WITH_URL"),
    
    GEMINI_IT_CODE_INSTRUCT("GEMINI_IT_CODE_INSTRUCT"),
    
    GEMINI_IT_MED_PALM("GEMINI_IT_MED_PALM"),
    
    GEMINI_IT_TASK_ORIENTED_DIALOG("GEMINI_IT_TASK_ORIENTED_DIALOG"),
    
    GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT("GEMINI_IT_NIMBUS_GROUNDING_TO_PROMPT"),
    
    GEMINI_IT_EITL_GEN("GEMINI_IT_EITL_GEN"),
    
    GEMINI_IT_HITL_GEN("GEMINI_IT_HITL_GEN"),
    
    GEMINI_IT_MECH("GEMINI_IT_MECH"),
    
    GEMINI_IT_TABLE_GEN("GEMINI_IT_TABLE_GEN"),
    
    GEMINI_IT_NIMBUS_DECIBEL("GEMINI_IT_NIMBUS_DECIBEL"),
    
    GEMINI_IT_CLOUD_CODE_IF("GEMINI_IT_CLOUD_CODE_IF"),
    
    GEMINI_IT_CLOUD_EUR_LEX_JSON("GEMINI_IT_CLOUD_EUR_LEX_JSON"),
    
    GEMINI_IT_CLOUD_OASST("GEMINI_IT_CLOUD_OASST"),
    
    GEMINI_IT_CLOUD_SELF_INSTRUCT("GEMINI_IT_CLOUD_SELF_INSTRUCT"),
    
    GEMINI_IT_CLOUD_UCS_AQUAMUSE("GEMINI_IT_CLOUD_UCS_AQUAMUSE"),
    
    GEMIT_BRIDGE_SUFFIX_FT("GEMIT_BRIDGE_SUFFIX_FT"),
    
    CLOUD_SECURITY_PRETRAINING("CLOUD_SECURITY_PRETRAINING"),
    
    CLOUD_SECURITY_FINETUNING("CLOUD_SECURITY_FINETUNING"),
    
    CLOUD_SECURITY_RAG_CISA("CLOUD_SECURITY_RAG_CISA"),
    
    GEMINI_GOOSE_PUBLIC("GEMINI_GOOSE_PUBLIC"),
    
    GEMINI_GOOSE_SILOED("GEMINI_GOOSE_SILOED"),
    
    GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII("GEMINI_V2_CMS_WIKIPEDIA_LANG_FILTERED_GCC_PII"),
    
    GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT("GEMINI_V2_WIKIPEDIA_DIFFS_COMPLIANT"),
    
    GEMINI_V2_ENGLISH_ARTICLES_TOP10_B_211123_PII_FILTERED("GEMINI_V2_ENGLISH_ARTICLES_TOP10B_211123_PII_FILTERED"),
    
    GEMINI_V2_ENGLISH_NONARTICLES_TOP10_B_211123_PII_FILTERED("GEMINI_V2_ENGLISH_NONARTICLES_TOP10B_211123_PII_FILTERED"),
    
    GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10_B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT("GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT"),
    
    GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10_B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT("GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP10B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT"),
    
    GEMINI_V2_ENGLISH_ARTICLES_TOP20_B_211123_PII_FILTERED("GEMINI_V2_ENGLISH_ARTICLES_TOP20B_211123_PII_FILTERED"),
    
    GEMINI_V2_ENGLISH_NONARTICLES_TOP20_B_211123_PII_FILTERED("GEMINI_V2_ENGLISH_NONARTICLES_TOP20B_211123_PII_FILTERED"),
    
    GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20_B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT("GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT"),
    
    GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20_B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT("GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP20B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT"),
    
    GEMINI_V2_ENGLISH_ARTICLES_TOP100_B_211123_PII_FILTERED("GEMINI_V2_ENGLISH_ARTICLES_TOP100B_211123_PII_FILTERED"),
    
    GEMINI_V2_ENGLISH_NONARTICLES_TOP100_B_211123_PII_FILTERED("GEMINI_V2_ENGLISH_NONARTICLES_TOP100B_211123_PII_FILTERED"),
    
    GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100_B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT("GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_NONARTICLES_COMPLIANT"),
    
    GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100_B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT("GEMINI_V2_GEMINI_DOCJOINS_NONEN_TOP100B_111323_WITHOUT_CJKT_STOP_ARTICLES_COMPLIANT"),
    
    GEMINI_V2_ENGLISH_ARTICLES_TOP500_B_211123_PII_FILTERED("GEMINI_V2_ENGLISH_ARTICLES_TOP500B_211123_PII_FILTERED"),
    
    GEMINI_V2_ENGLISH_NONARTICLES_TOP500_B_211123_PII_FILTERED("GEMINI_V2_ENGLISH_NONARTICLES_TOP500B_211123_PII_FILTERED"),
    
    GEMINI_V2_QUORA_COMPLIANT("GEMINI_V2_QUORA_COMPLIANT"),
    
    GEMINI_V2_FORUMS_V2_COMPLIANT("GEMINI_V2_FORUMS_V2_COMPLIANT"),
    
    GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT("GEMINI_V2_CMS_STACKOVERFLOW_MULTILINGUAL_V2_COMPLIANT"),
    
    GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT("GEMINI_V2_SIMPLIFIED_HTML_V2_CORRECT_FORMAT_COMPLIANT"),
    
    GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT("GEMINI_V2_GEMINI_DOCJOINS_TOXICITY_TAGGED_FIXED_TAGS_COMPLIANT"),
    
    GEMINI_V2_CODEWEB_V1_COMPLIANT("GEMINI_V2_CODEWEB_V1_COMPLIANT"),
    
    GEMINI_V2_LEETCODE_GCC_PII("GEMINI_V2_LEETCODE_GCC_PII"),
    
    GEMINI_V2_CODE_CONTESTS_COMPLIANT("GEMINI_V2_CODE_CONTESTS_COMPLIANT"),
    
    GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS("GEMINI_V2_CMS_GITHUB_MULTI_FILE_FOR_FIM_GEMBAGZ_FIXED_BYTES_LENGTHS"),
    
    GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT("GEMINI_V2_GITHUB_EVALED_LANGUAGES_COMPLIANT"),
    
    GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT("GEMINI_V2_GITHUB_NON_EVAL_HIGH_PRI_LANGUAGES_COMPLIANT"),
    
    GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT("GEMINI_V2_GITHUB_LOW_PRI_LANGUAGES_AND_CONFIGS_COMPLIANT"),
    
    GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT("GEMINI_V2_GITHUB_LONG_TAIL_AND_STRUCTURED_DATA_COMPLIANT"),
    
    GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT("GEMINI_V2_GITHUB_PYTHON_NOTEBOOKS_COMPLIANT"),
    
    GEMINI_V2_GITHUB_DIFFS_COMPLIANT("GEMINI_V2_GITHUB_DIFFS_COMPLIANT"),
    
    GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT("GEMINI_V2_GITHUB_TECHDOCS_COMPLIANT"),
    
    GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2("GEMINI_V2_HIGH_QUALITY_CODE_TARGETED_DATA_COMPLIANT2"),
    
    GEMINI_V2_SCIENCE_PDF_68_M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX("GEMINI_V2_SCIENCE_PDF_68M_HQ_DOCS_DEDUP_COMPLIANT_CLEAN_TEX"),
    
    GEMINI_V2_ARXIV_2023_COMPLIANT("GEMINI_V2_ARXIV_2023_COMPLIANT"),
    
    GEMINI_V2_FORMAL_COMPLIANT("GEMINI_V2_FORMAL_COMPLIANT"),
    
    GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT("GEMINI_V2_CMS_STACKEXCHANGE_COMPLIANT"),
    
    GEMINI_V2_PUBMED_COMPLIANT("GEMINI_V2_PUBMED_COMPLIANT"),
    
    GEMINI_V2_WEB_MATH_V3_COMPLIANT("GEMINI_V2_WEB_MATH_V3_COMPLIANT"),
    
    GEMINI_V2_SCIENCEWEB_V0_GCC_PII("GEMINI_V2_SCIENCEWEB_V0_GCC_PII"),
    
    GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT("GEMINI_V2_WEB_POLYMATH_V1_COMPLIANT"),
    
    GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2("GEMINI_V2_MATH_TARGETED_DATA_COMPLIANT2"),
    
    GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2("GEMINI_V2_BIOLOGY_TARGETED_DATA_COMPLIANT2"),
    
    GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2("GEMINI_V2_PHYSICS_V2_TARGETED_DATA_COMPLIANT2"),
    
    GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2("GEMINI_V2_CHEMISTRY_TARGETED_DATA_COMPLIANT2"),
    
    GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2("GEMINI_V2_MACHINE_LEARNING_TARGETED_DATA_COMPLIANT2"),
    
    GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2("GEMINI_V2_QA_TARGETED_DATA_COMPLIANT2"),
    
    GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2("GEMINI_V2_ECONOMICS_V2_TARGETED_DATA_COMPLIANT2"),
    
    GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2("GEMINI_V2_MEDICAL_TARGETED_DATA_COMPLIANT2"),
    
    GEMINI_V2_CHESS_COMPLIANT("GEMINI_V2_CHESS_COMPLIANT"),
    
    GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT("GEMINI_V2_YOUTUBE_SCIENCE_V4_FILTERED_COMPLIANT"),
    
    GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT("GEMINI_V2_GOALDMINE_XL_GENERATED_PLUS_GT_NO_DM_MATH_COMPLIANT"),
    
    GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT("GEMINI_V2_FIRSTTIMES_SCIENCE_PDF_DEDUP_HQ_LENGTH_FILTERED_COMPLIANT"),
    
    GEMINI_V2_PODCASTS_COMPLIANT("GEMINI_V2_PODCASTS_COMPLIANT"),
    
    GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46_M_DOCS_COMPLIANT("GEMINI_V2_EN_NONSCIENCE_PDF_DEDUP_46M_DOCS_COMPLIANT"),
    
    GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT("GEMINI_V2_NONPUB_COPYRIGHT_BOOKS_V3_70_CONF_082323_LONG_DEDUP_ENONLY_COMPLIANT"),
    
    GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT("GEMINI_V2_STEM_COPYRIGHT_BOOKS_V3_111823_LONG_DEDUP_ENONLY_COMPLIANT"),
    
    GEMINI_V2_STEM_BOOKS_318_K_TEXT_COMPLIANT("GEMINI_V2_STEM_BOOKS_318K_TEXT_COMPLIANT"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_M3_W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_M3_W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M3W_WITH_IMAGE_TOKENS_INSERTED_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_WEBLI_EN_V4_350_M_T2_I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_T2I_TEXT_TO_IMAGE_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_WEBLI_EN_V4_350_M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_EN_V4_350M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_WEBLI_OCR_I18_N_680_M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_I18N_680M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_SCREENAI_FULL_HTML_75_M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_FULL_HTML_75M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SCREENAI_V1_1_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_WEBLI_OCR_DOC_240_M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_OCR_DOC_240M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SHUTTERSTOCK_VIDEO_VIDEO_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_M4_W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_M4W_INTERLEAVED_COMPLIANT_PII_FILTERED_SOFT"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CULTURE_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_DETECTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_WEBLI_ALT_TEXT_NONEN_500_M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WEBLI_ALT_TEXT_NONEN_500M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_SPATIAL_AWARE_PALI_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_CLOUDAI_TABLE2_HTML_3_D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_3D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_TABLE2_MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_TABLE2_MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TABLE2MD_V2_NON_EN_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_CLOUDAI_3_D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_3D_DOC_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_CC3_M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CC3M_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_INFOGRAPHICS_LARGE_WEB_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_BIORXIV_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_PHOTOMATH_IM2_SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_IM2SOL_PROBLEM_AND_SOLUTION_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_PLOT2_TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PLOT2TABLE_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_TIKZ_DERENDERING_MERGED_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_CLOUDAI_TABLE2_HTML_2_D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_CLOUDAI_TABLE2HTML_2D_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_WIKIPEDIA_EQUATIONS_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_PHOTOMATH_EQ2_LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_PHOTOMATH_EQ2LATEX_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_CACHED_VQCOCA_MMFT_17_T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED("GEMINI_V2_CACHED_VQCOCA_MMFT_17T_ARXIV_EQUATIONS_V2_IMAGE_TO_TEXT_COMPLIANT_PII_FILTERED"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_ASR_SUP_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_ASR_1_P5_M_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_ASR_1P5M_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_ASR_4_M_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_ASR_4M_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_TTS_SUP_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_TTS_1_P5_M_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_TTS_1P5M_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_TTS_4_M_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_TTS_4M_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_ENUS_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_PODIOSET_INTERLEAVE_I18_N_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_PODIOSET_INTERLEAVE_I18N_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_ENUS_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_INTERLEAVE_SCIENCE_I18_N_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_SCIENCE_I18N_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_INTERLEAVE_1_P5_M_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_1P5M_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_USM2_B_MLPV5_YT_INTERLEAVE_HEAD_4_M_GEMBAGZ_V2_COMPLIANT("GEMINI_V2_USM2B_MLPV5_YT_INTERLEAVE_HEAD_4M_GEMBAGZ_V2_COMPLIANT"),
    
    GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX("GEMINI_V2_CLM_TRANSLATE_DATAV3_WEB_UNWMT_INCR_MIX"),
    
    GEMINI_V2_NTL_NTLV4_A_MONOLINGUAL_DEDUP_N5("GEMINI_V2_NTL_NTLV4A_MONOLINGUAL_DEDUP_N5"),
    
    GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5("GEMINI_V2_NTL_STT_TRANSLATE_DEDUP_N5"),
    
    GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5("GEMINI_V2_NTL_TRANSLIT_BILEX_TRANSLATE_DEDUP_N5"),
    
    GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5("GEMINI_V2_NTL_SYN_BT_TRANSLATE_DEDUP_N5"),
    
    GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5("GEMINI_V2_NTL_SYN_FT_FIXED_TRANSLATE_DEDUP_N5"),
    
    GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT("GEMINI_V2_CANARIES_SHUFFLED_COMPLIANT"),
    
    CLOUD_GEMIT_CLOUD_FACTUALITY_GROUNDING_MAGI("CLOUD_GEMIT_CLOUD_FACTUALITY_GROUNDING_MAGI"),
    
    CLOUD_GEMIT_MT_DIALGUE_LMSYS("CLOUD_GEMIT_MT_DIALGUE_LMSYS"),
    
    CLOUD_GEMIT_MTS_DIALOGUE_V3("CLOUD_GEMIT_MTS_DIALOGUE_V3"),
    
    CLOUD_GEMIT_COMMIT_MSG_GEN_V3("CLOUD_GEMIT_COMMIT_MSG_GEN_V3"),
    
    CLOUD_GEMIT_CODE_IF_V1("CLOUD_GEMIT_CODE_IF_V1"),
    
    CLOUD_GEMIT_CODE_SELF_REPAIR("CLOUD_GEMIT_CODE_SELF_REPAIR"),
    
    CLOUD_GEMIT_IDENTITY("CLOUD_GEMIT_IDENTITY"),
    
    CLOUD_GEMIT_SEARCH_AUGMENTED_RESPONSE_GENERATION("CLOUD_GEMIT_SEARCH_AUGMENTED_RESPONSE_GENERATION"),
    
    CLOUD_GEMIT_AMPS("CLOUD_GEMIT_AMPS"),
    
    CLOUD_GEMIT_AQUA("CLOUD_GEMIT_AQUA"),
    
    CLOUD_GEMIT_COMMON_SENSE_REASONING_SCHEMA("CLOUD_GEMIT_COMMON_SENSE_REASONING_SCHEMA"),
    
    CLOUD_GEMIT_GSM8_K_SCHEMA("CLOUD_GEMIT_GSM8K_SCHEMA");

    private String value;

    AttributionDatasetEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AttributionDatasetEnum fromValue(String value) {
      for (AttributionDatasetEnum b : AttributionDatasetEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AttributionDatasetEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AttributionDatasetEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AttributionDatasetEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AttributionDatasetEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AttributionDatasetEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ATTRIBUTION_DATASET = "attributionDataset";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTION_DATASET)
  private AttributionDatasetEnum attributionDataset;

  public static final String SERIALIZED_NAME_DISPLAY_ATTRIBUTION_MESSAGE = "displayAttributionMessage";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ATTRIBUTION_MESSAGE)
  private String displayAttributionMessage;

  public static final String SERIALIZED_NAME_DOC_ATTRIBUTION = "docAttribution";
  @SerializedName(SERIALIZED_NAME_DOC_ATTRIBUTION)
  private LearningGenaiRecitationDocAttribution docAttribution;

  public static final String SERIALIZED_NAME_DOC_OCCURRENCES = "docOccurrences";
  @SerializedName(SERIALIZED_NAME_DOC_OCCURRENCES)
  private Integer docOccurrences;

  public static final String SERIALIZED_NAME_END_INDEX = "endIndex";
  @SerializedName(SERIALIZED_NAME_END_INDEX)
  private Integer endIndex;

  public static final String SERIALIZED_NAME_RAW_TEXT = "rawText";
  @SerializedName(SERIALIZED_NAME_RAW_TEXT)
  private String rawText;

  /**
   * Gets or Sets segmentRecitationAction
   */
  @JsonAdapter(SegmentRecitationActionEnum.Adapter.class)
  public enum SegmentRecitationActionEnum {
    ACTION_UNSPECIFIED("ACTION_UNSPECIFIED"),
    
    CITE("CITE"),
    
    BLOCK("BLOCK"),
    
    NO_ACTION("NO_ACTION"),
    
    EXEMPT_FOUND_IN_PROMPT("EXEMPT_FOUND_IN_PROMPT");

    private String value;

    SegmentRecitationActionEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SegmentRecitationActionEnum fromValue(String value) {
      for (SegmentRecitationActionEnum b : SegmentRecitationActionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<SegmentRecitationActionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SegmentRecitationActionEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SegmentRecitationActionEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return SegmentRecitationActionEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      SegmentRecitationActionEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_SEGMENT_RECITATION_ACTION = "segmentRecitationAction";
  @SerializedName(SERIALIZED_NAME_SEGMENT_RECITATION_ACTION)
  private SegmentRecitationActionEnum segmentRecitationAction;

  public static final String SERIALIZED_NAME_START_INDEX = "startIndex";
  @SerializedName(SERIALIZED_NAME_START_INDEX)
  private Integer startIndex;

  public LearningGenaiRecitationSegmentResult() {
  }

  public LearningGenaiRecitationSegmentResult attributionDataset(AttributionDatasetEnum attributionDataset) {
    this.attributionDataset = attributionDataset;
    return this;
  }

  /**
   * The dataset the segment came from.
   * @return attributionDataset
   */
  @javax.annotation.Nullable
  public AttributionDatasetEnum getAttributionDataset() {
    return attributionDataset;
  }

  public void setAttributionDataset(AttributionDatasetEnum attributionDataset) {
    this.attributionDataset = attributionDataset;
  }


  public LearningGenaiRecitationSegmentResult displayAttributionMessage(String displayAttributionMessage) {
    this.displayAttributionMessage = displayAttributionMessage;
    return this;
  }

  /**
   * human-friendly string that contains information from doc_attribution which could be shown by clients
   * @return displayAttributionMessage
   */
  @javax.annotation.Nullable
  public String getDisplayAttributionMessage() {
    return displayAttributionMessage;
  }

  public void setDisplayAttributionMessage(String displayAttributionMessage) {
    this.displayAttributionMessage = displayAttributionMessage;
  }


  public LearningGenaiRecitationSegmentResult docAttribution(LearningGenaiRecitationDocAttribution docAttribution) {
    this.docAttribution = docAttribution;
    return this;
  }

  /**
   * Get docAttribution
   * @return docAttribution
   */
  @javax.annotation.Nullable
  public LearningGenaiRecitationDocAttribution getDocAttribution() {
    return docAttribution;
  }

  public void setDocAttribution(LearningGenaiRecitationDocAttribution docAttribution) {
    this.docAttribution = docAttribution;
  }


  public LearningGenaiRecitationSegmentResult docOccurrences(Integer docOccurrences) {
    this.docOccurrences = docOccurrences;
    return this;
  }

  /**
   * number of documents that contained this segment
   * @return docOccurrences
   */
  @javax.annotation.Nullable
  public Integer getDocOccurrences() {
    return docOccurrences;
  }

  public void setDocOccurrences(Integer docOccurrences) {
    this.docOccurrences = docOccurrences;
  }


  public LearningGenaiRecitationSegmentResult endIndex(Integer endIndex) {
    this.endIndex = endIndex;
    return this;
  }

  /**
   * Get endIndex
   * @return endIndex
   */
  @javax.annotation.Nullable
  public Integer getEndIndex() {
    return endIndex;
  }

  public void setEndIndex(Integer endIndex) {
    this.endIndex = endIndex;
  }


  public LearningGenaiRecitationSegmentResult rawText(String rawText) {
    this.rawText = rawText;
    return this;
  }

  /**
   * The raw text in the given input that is corresponding to the segment. It will be available only when &#39;return_segment_raw_text&#39; is enabled in the request options.
   * @return rawText
   */
  @javax.annotation.Nullable
  public String getRawText() {
    return rawText;
  }

  public void setRawText(String rawText) {
    this.rawText = rawText;
  }


  public LearningGenaiRecitationSegmentResult segmentRecitationAction(SegmentRecitationActionEnum segmentRecitationAction) {
    this.segmentRecitationAction = segmentRecitationAction;
    return this;
  }

  /**
   * Get segmentRecitationAction
   * @return segmentRecitationAction
   */
  @javax.annotation.Nullable
  public SegmentRecitationActionEnum getSegmentRecitationAction() {
    return segmentRecitationAction;
  }

  public void setSegmentRecitationAction(SegmentRecitationActionEnum segmentRecitationAction) {
    this.segmentRecitationAction = segmentRecitationAction;
  }


  public LearningGenaiRecitationSegmentResult startIndex(Integer startIndex) {
    this.startIndex = startIndex;
    return this;
  }

  /**
   * The segment boundary start (inclusive) and end index (exclusive) in the given text. In the streaming RPC, the indexes always start from the beginning of the first text in the entire stream. The indexes are measured in UTF-16 code units.
   * @return startIndex
   */
  @javax.annotation.Nullable
  public Integer getStartIndex() {
    return startIndex;
  }

  public void setStartIndex(Integer startIndex) {
    this.startIndex = startIndex;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LearningGenaiRecitationSegmentResult learningGenaiRecitationSegmentResult = (LearningGenaiRecitationSegmentResult) o;
    return Objects.equals(this.attributionDataset, learningGenaiRecitationSegmentResult.attributionDataset) &&
        Objects.equals(this.displayAttributionMessage, learningGenaiRecitationSegmentResult.displayAttributionMessage) &&
        Objects.equals(this.docAttribution, learningGenaiRecitationSegmentResult.docAttribution) &&
        Objects.equals(this.docOccurrences, learningGenaiRecitationSegmentResult.docOccurrences) &&
        Objects.equals(this.endIndex, learningGenaiRecitationSegmentResult.endIndex) &&
        Objects.equals(this.rawText, learningGenaiRecitationSegmentResult.rawText) &&
        Objects.equals(this.segmentRecitationAction, learningGenaiRecitationSegmentResult.segmentRecitationAction) &&
        Objects.equals(this.startIndex, learningGenaiRecitationSegmentResult.startIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributionDataset, displayAttributionMessage, docAttribution, docOccurrences, endIndex, rawText, segmentRecitationAction, startIndex);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LearningGenaiRecitationSegmentResult {\n");
    sb.append("    attributionDataset: ").append(toIndentedString(attributionDataset)).append("\n");
    sb.append("    displayAttributionMessage: ").append(toIndentedString(displayAttributionMessage)).append("\n");
    sb.append("    docAttribution: ").append(toIndentedString(docAttribution)).append("\n");
    sb.append("    docOccurrences: ").append(toIndentedString(docOccurrences)).append("\n");
    sb.append("    endIndex: ").append(toIndentedString(endIndex)).append("\n");
    sb.append("    rawText: ").append(toIndentedString(rawText)).append("\n");
    sb.append("    segmentRecitationAction: ").append(toIndentedString(segmentRecitationAction)).append("\n");
    sb.append("    startIndex: ").append(toIndentedString(startIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributionDataset");
    openapiFields.add("displayAttributionMessage");
    openapiFields.add("docAttribution");
    openapiFields.add("docOccurrences");
    openapiFields.add("endIndex");
    openapiFields.add("rawText");
    openapiFields.add("segmentRecitationAction");
    openapiFields.add("startIndex");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LearningGenaiRecitationSegmentResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LearningGenaiRecitationSegmentResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LearningGenaiRecitationSegmentResult is not found in the empty JSON string", LearningGenaiRecitationSegmentResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LearningGenaiRecitationSegmentResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LearningGenaiRecitationSegmentResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("attributionDataset") != null && !jsonObj.get("attributionDataset").isJsonNull()) && !jsonObj.get("attributionDataset").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `attributionDataset` to be a primitive type in the JSON string but got `%s`", jsonObj.get("attributionDataset").toString()));
      }
      // validate the optional field `attributionDataset`
      if (jsonObj.get("attributionDataset") != null && !jsonObj.get("attributionDataset").isJsonNull()) {
        AttributionDatasetEnum.validateJsonElement(jsonObj.get("attributionDataset"));
      }
      if ((jsonObj.get("displayAttributionMessage") != null && !jsonObj.get("displayAttributionMessage").isJsonNull()) && !jsonObj.get("displayAttributionMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayAttributionMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayAttributionMessage").toString()));
      }
      // validate the optional field `docAttribution`
      if (jsonObj.get("docAttribution") != null && !jsonObj.get("docAttribution").isJsonNull()) {
        LearningGenaiRecitationDocAttribution.validateJsonElement(jsonObj.get("docAttribution"));
      }
      if ((jsonObj.get("rawText") != null && !jsonObj.get("rawText").isJsonNull()) && !jsonObj.get("rawText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rawText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rawText").toString()));
      }
      if ((jsonObj.get("segmentRecitationAction") != null && !jsonObj.get("segmentRecitationAction").isJsonNull()) && !jsonObj.get("segmentRecitationAction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `segmentRecitationAction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("segmentRecitationAction").toString()));
      }
      // validate the optional field `segmentRecitationAction`
      if (jsonObj.get("segmentRecitationAction") != null && !jsonObj.get("segmentRecitationAction").isJsonNull()) {
        SegmentRecitationActionEnum.validateJsonElement(jsonObj.get("segmentRecitationAction"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LearningGenaiRecitationSegmentResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LearningGenaiRecitationSegmentResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LearningGenaiRecitationSegmentResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LearningGenaiRecitationSegmentResult.class));

       return (TypeAdapter<T>) new TypeAdapter<LearningGenaiRecitationSegmentResult>() {
           @Override
           public void write(JsonWriter out, LearningGenaiRecitationSegmentResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LearningGenaiRecitationSegmentResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LearningGenaiRecitationSegmentResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LearningGenaiRecitationSegmentResult
   * @throws IOException if the JSON string is invalid with respect to LearningGenaiRecitationSegmentResult
   */
  public static LearningGenaiRecitationSegmentResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LearningGenaiRecitationSegmentResult.class);
  }

  /**
   * Convert an instance of LearningGenaiRecitationSegmentResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

