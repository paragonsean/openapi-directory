/*
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TensorboardTimeSeries maps to times series produced in training runs
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:33.164817-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudAiplatformV1TensorboardTimeSeries {
  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_ETAG = "etag";
  @SerializedName(SERIALIZED_NAME_ETAG)
  private String etag;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata metadata;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PLUGIN_DATA = "pluginData";
  @SerializedName(SERIALIZED_NAME_PLUGIN_DATA)
  private byte[] pluginData;

  public static final String SERIALIZED_NAME_PLUGIN_NAME = "pluginName";
  @SerializedName(SERIALIZED_NAME_PLUGIN_NAME)
  private String pluginName;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  /**
   * Required. Immutable. Type of TensorboardTimeSeries value.
   */
  @JsonAdapter(ValueTypeEnum.Adapter.class)
  public enum ValueTypeEnum {
    VALUE_TYPE_UNSPECIFIED("VALUE_TYPE_UNSPECIFIED"),
    
    SCALAR("SCALAR"),
    
    TENSOR("TENSOR"),
    
    BLOB_SEQUENCE("BLOB_SEQUENCE");

    private String value;

    ValueTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValueTypeEnum fromValue(String value) {
      for (ValueTypeEnum b : ValueTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ValueTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValueTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValueTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ValueTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ValueTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VALUE_TYPE = "valueType";
  @SerializedName(SERIALIZED_NAME_VALUE_TYPE)
  private ValueTypeEnum valueType;

  public GoogleCloudAiplatformV1TensorboardTimeSeries() {
  }

  public GoogleCloudAiplatformV1TensorboardTimeSeries(
     String createTime, 
     String name, 
     String updateTime
  ) {
    this();
    this.createTime = createTime;
    this.name = name;
    this.updateTime = updateTime;
  }

  /**
   * Output only. Timestamp when this TensorboardTimeSeries was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }



  public GoogleCloudAiplatformV1TensorboardTimeSeries description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of this TensorboardTimeSeries.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudAiplatformV1TensorboardTimeSeries displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public GoogleCloudAiplatformV1TensorboardTimeSeries etag(String etag) {
    this.etag = etag;
    return this;
  }

  /**
   * Used to perform a consistent read-modify-write updates. If not set, a blind \&quot;overwrite\&quot; update happens.
   * @return etag
   */
  @javax.annotation.Nullable
  public String getEtag() {
    return etag;
  }

  public void setEtag(String etag) {
    this.etag = etag;
  }


  public GoogleCloudAiplatformV1TensorboardTimeSeries metadata(GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata metadata) {
    this.metadata = metadata;
  }


  /**
   * Output only. Name of the TensorboardTimeSeries.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public GoogleCloudAiplatformV1TensorboardTimeSeries pluginData(byte[] pluginData) {
    this.pluginData = pluginData;
    return this;
  }

  /**
   * Data of the current plugin, with the size limited to 65KB.
   * @return pluginData
   */
  @javax.annotation.Nullable
  public byte[] getPluginData() {
    return pluginData;
  }

  public void setPluginData(byte[] pluginData) {
    this.pluginData = pluginData;
  }


  public GoogleCloudAiplatformV1TensorboardTimeSeries pluginName(String pluginName) {
    this.pluginName = pluginName;
    return this;
  }

  /**
   * Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob
   * @return pluginName
   */
  @javax.annotation.Nullable
  public String getPluginName() {
    return pluginName;
  }

  public void setPluginName(String pluginName) {
    this.pluginName = pluginName;
  }


  /**
   * Output only. Timestamp when this TensorboardTimeSeries was last updated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }



  public GoogleCloudAiplatformV1TensorboardTimeSeries valueType(ValueTypeEnum valueType) {
    this.valueType = valueType;
    return this;
  }

  /**
   * Required. Immutable. Type of TensorboardTimeSeries value.
   * @return valueType
   */
  @javax.annotation.Nullable
  public ValueTypeEnum getValueType() {
    return valueType;
  }

  public void setValueType(ValueTypeEnum valueType) {
    this.valueType = valueType;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudAiplatformV1TensorboardTimeSeries googleCloudAiplatformV1TensorboardTimeSeries = (GoogleCloudAiplatformV1TensorboardTimeSeries) o;
    return Objects.equals(this.createTime, googleCloudAiplatformV1TensorboardTimeSeries.createTime) &&
        Objects.equals(this.description, googleCloudAiplatformV1TensorboardTimeSeries.description) &&
        Objects.equals(this.displayName, googleCloudAiplatformV1TensorboardTimeSeries.displayName) &&
        Objects.equals(this.etag, googleCloudAiplatformV1TensorboardTimeSeries.etag) &&
        Objects.equals(this.metadata, googleCloudAiplatformV1TensorboardTimeSeries.metadata) &&
        Objects.equals(this.name, googleCloudAiplatformV1TensorboardTimeSeries.name) &&
        Arrays.equals(this.pluginData, googleCloudAiplatformV1TensorboardTimeSeries.pluginData) &&
        Objects.equals(this.pluginName, googleCloudAiplatformV1TensorboardTimeSeries.pluginName) &&
        Objects.equals(this.updateTime, googleCloudAiplatformV1TensorboardTimeSeries.updateTime) &&
        Objects.equals(this.valueType, googleCloudAiplatformV1TensorboardTimeSeries.valueType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, description, displayName, etag, metadata, name, Arrays.hashCode(pluginData), pluginName, updateTime, valueType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudAiplatformV1TensorboardTimeSeries {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pluginData: ").append(toIndentedString(pluginData)).append("\n");
    sb.append("    pluginName: ").append(toIndentedString(pluginName)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    valueType: ").append(toIndentedString(valueType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createTime");
    openapiFields.add("description");
    openapiFields.add("displayName");
    openapiFields.add("etag");
    openapiFields.add("metadata");
    openapiFields.add("name");
    openapiFields.add("pluginData");
    openapiFields.add("pluginName");
    openapiFields.add("updateTime");
    openapiFields.add("valueType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudAiplatformV1TensorboardTimeSeries
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudAiplatformV1TensorboardTimeSeries.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudAiplatformV1TensorboardTimeSeries is not found in the empty JSON string", GoogleCloudAiplatformV1TensorboardTimeSeries.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudAiplatformV1TensorboardTimeSeries.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudAiplatformV1TensorboardTimeSeries` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("etag") != null && !jsonObj.get("etag").isJsonNull()) && !jsonObj.get("etag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `etag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("etag").toString()));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata.validateJsonElement(jsonObj.get("metadata"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("pluginName") != null && !jsonObj.get("pluginName").isJsonNull()) && !jsonObj.get("pluginName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pluginName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pluginName").toString()));
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
      if ((jsonObj.get("valueType") != null && !jsonObj.get("valueType").isJsonNull()) && !jsonObj.get("valueType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `valueType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("valueType").toString()));
      }
      // validate the optional field `valueType`
      if (jsonObj.get("valueType") != null && !jsonObj.get("valueType").isJsonNull()) {
        ValueTypeEnum.validateJsonElement(jsonObj.get("valueType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudAiplatformV1TensorboardTimeSeries.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudAiplatformV1TensorboardTimeSeries' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudAiplatformV1TensorboardTimeSeries> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudAiplatformV1TensorboardTimeSeries.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudAiplatformV1TensorboardTimeSeries>() {
           @Override
           public void write(JsonWriter out, GoogleCloudAiplatformV1TensorboardTimeSeries value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudAiplatformV1TensorboardTimeSeries read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudAiplatformV1TensorboardTimeSeries given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudAiplatformV1TensorboardTimeSeries
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudAiplatformV1TensorboardTimeSeries
   */
  public static GoogleCloudAiplatformV1TensorboardTimeSeries fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudAiplatformV1TensorboardTimeSeries.class);
  }

  /**
   * Convert an instance of GoogleCloudAiplatformV1TensorboardTimeSeries to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

