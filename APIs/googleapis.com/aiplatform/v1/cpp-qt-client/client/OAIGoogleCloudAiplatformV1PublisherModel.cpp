/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1PublisherModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1PublisherModel::OAIGoogleCloudAiplatformV1PublisherModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1PublisherModel::OAIGoogleCloudAiplatformV1PublisherModel() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1PublisherModel::~OAIGoogleCloudAiplatformV1PublisherModel() {}

void OAIGoogleCloudAiplatformV1PublisherModel::initializeModel() {

    m_frameworks_isSet = false;
    m_frameworks_isValid = false;

    m_launch_stage_isSet = false;
    m_launch_stage_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_open_source_category_isSet = false;
    m_open_source_category_isValid = false;

    m_predict_schemata_isSet = false;
    m_predict_schemata_isValid = false;

    m_publisher_model_template_isSet = false;
    m_publisher_model_template_isValid = false;

    m_supported_actions_isSet = false;
    m_supported_actions_isValid = false;

    m_version_id_isSet = false;
    m_version_id_isValid = false;

    m_version_state_isSet = false;
    m_version_state_isValid = false;
}

void OAIGoogleCloudAiplatformV1PublisherModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1PublisherModel::fromJsonObject(QJsonObject json) {

    m_frameworks_isValid = ::OpenAPI::fromJsonValue(m_frameworks, json[QString("frameworks")]);
    m_frameworks_isSet = !json[QString("frameworks")].isNull() && m_frameworks_isValid;

    m_launch_stage_isValid = ::OpenAPI::fromJsonValue(m_launch_stage, json[QString("launchStage")]);
    m_launch_stage_isSet = !json[QString("launchStage")].isNull() && m_launch_stage_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_open_source_category_isValid = ::OpenAPI::fromJsonValue(m_open_source_category, json[QString("openSourceCategory")]);
    m_open_source_category_isSet = !json[QString("openSourceCategory")].isNull() && m_open_source_category_isValid;

    m_predict_schemata_isValid = ::OpenAPI::fromJsonValue(m_predict_schemata, json[QString("predictSchemata")]);
    m_predict_schemata_isSet = !json[QString("predictSchemata")].isNull() && m_predict_schemata_isValid;

    m_publisher_model_template_isValid = ::OpenAPI::fromJsonValue(m_publisher_model_template, json[QString("publisherModelTemplate")]);
    m_publisher_model_template_isSet = !json[QString("publisherModelTemplate")].isNull() && m_publisher_model_template_isValid;

    m_supported_actions_isValid = ::OpenAPI::fromJsonValue(m_supported_actions, json[QString("supportedActions")]);
    m_supported_actions_isSet = !json[QString("supportedActions")].isNull() && m_supported_actions_isValid;

    m_version_id_isValid = ::OpenAPI::fromJsonValue(m_version_id, json[QString("versionId")]);
    m_version_id_isSet = !json[QString("versionId")].isNull() && m_version_id_isValid;

    m_version_state_isValid = ::OpenAPI::fromJsonValue(m_version_state, json[QString("versionState")]);
    m_version_state_isSet = !json[QString("versionState")].isNull() && m_version_state_isValid;
}

QString OAIGoogleCloudAiplatformV1PublisherModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1PublisherModel::asJsonObject() const {
    QJsonObject obj;
    if (m_frameworks.size() > 0) {
        obj.insert(QString("frameworks"), ::OpenAPI::toJsonValue(m_frameworks));
    }
    if (m_launch_stage_isSet) {
        obj.insert(QString("launchStage"), ::OpenAPI::toJsonValue(m_launch_stage));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_open_source_category_isSet) {
        obj.insert(QString("openSourceCategory"), ::OpenAPI::toJsonValue(m_open_source_category));
    }
    if (m_predict_schemata.isSet()) {
        obj.insert(QString("predictSchemata"), ::OpenAPI::toJsonValue(m_predict_schemata));
    }
    if (m_publisher_model_template_isSet) {
        obj.insert(QString("publisherModelTemplate"), ::OpenAPI::toJsonValue(m_publisher_model_template));
    }
    if (m_supported_actions.isSet()) {
        obj.insert(QString("supportedActions"), ::OpenAPI::toJsonValue(m_supported_actions));
    }
    if (m_version_id_isSet) {
        obj.insert(QString("versionId"), ::OpenAPI::toJsonValue(m_version_id));
    }
    if (m_version_state_isSet) {
        obj.insert(QString("versionState"), ::OpenAPI::toJsonValue(m_version_state));
    }
    return obj;
}

QList<QString> OAIGoogleCloudAiplatformV1PublisherModel::getFrameworks() const {
    return m_frameworks;
}
void OAIGoogleCloudAiplatformV1PublisherModel::setFrameworks(const QList<QString> &frameworks) {
    m_frameworks = frameworks;
    m_frameworks_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_frameworks_Set() const{
    return m_frameworks_isSet;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_frameworks_Valid() const{
    return m_frameworks_isValid;
}

QString OAIGoogleCloudAiplatformV1PublisherModel::getLaunchStage() const {
    return m_launch_stage;
}
void OAIGoogleCloudAiplatformV1PublisherModel::setLaunchStage(const QString &launch_stage) {
    m_launch_stage = launch_stage;
    m_launch_stage_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_launch_stage_Set() const{
    return m_launch_stage_isSet;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_launch_stage_Valid() const{
    return m_launch_stage_isValid;
}

QString OAIGoogleCloudAiplatformV1PublisherModel::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1PublisherModel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudAiplatformV1PublisherModel::getOpenSourceCategory() const {
    return m_open_source_category;
}
void OAIGoogleCloudAiplatformV1PublisherModel::setOpenSourceCategory(const QString &open_source_category) {
    m_open_source_category = open_source_category;
    m_open_source_category_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_open_source_category_Set() const{
    return m_open_source_category_isSet;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_open_source_category_Valid() const{
    return m_open_source_category_isValid;
}

OAIGoogleCloudAiplatformV1PredictSchemata OAIGoogleCloudAiplatformV1PublisherModel::getPredictSchemata() const {
    return m_predict_schemata;
}
void OAIGoogleCloudAiplatformV1PublisherModel::setPredictSchemata(const OAIGoogleCloudAiplatformV1PredictSchemata &predict_schemata) {
    m_predict_schemata = predict_schemata;
    m_predict_schemata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_predict_schemata_Set() const{
    return m_predict_schemata_isSet;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_predict_schemata_Valid() const{
    return m_predict_schemata_isValid;
}

QString OAIGoogleCloudAiplatformV1PublisherModel::getPublisherModelTemplate() const {
    return m_publisher_model_template;
}
void OAIGoogleCloudAiplatformV1PublisherModel::setPublisherModelTemplate(const QString &publisher_model_template) {
    m_publisher_model_template = publisher_model_template;
    m_publisher_model_template_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_publisher_model_template_Set() const{
    return m_publisher_model_template_isSet;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_publisher_model_template_Valid() const{
    return m_publisher_model_template_isValid;
}

OAIGoogleCloudAiplatformV1PublisherModelCallToAction OAIGoogleCloudAiplatformV1PublisherModel::getSupportedActions() const {
    return m_supported_actions;
}
void OAIGoogleCloudAiplatformV1PublisherModel::setSupportedActions(const OAIGoogleCloudAiplatformV1PublisherModelCallToAction &supported_actions) {
    m_supported_actions = supported_actions;
    m_supported_actions_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_supported_actions_Set() const{
    return m_supported_actions_isSet;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_supported_actions_Valid() const{
    return m_supported_actions_isValid;
}

QString OAIGoogleCloudAiplatformV1PublisherModel::getVersionId() const {
    return m_version_id;
}
void OAIGoogleCloudAiplatformV1PublisherModel::setVersionId(const QString &version_id) {
    m_version_id = version_id;
    m_version_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_version_id_Set() const{
    return m_version_id_isSet;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_version_id_Valid() const{
    return m_version_id_isValid;
}

QString OAIGoogleCloudAiplatformV1PublisherModel::getVersionState() const {
    return m_version_state;
}
void OAIGoogleCloudAiplatformV1PublisherModel::setVersionState(const QString &version_state) {
    m_version_state = version_state;
    m_version_state_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_version_state_Set() const{
    return m_version_state_isSet;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::is_version_state_Valid() const{
    return m_version_state_isValid;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_frameworks.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_launch_stage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_open_source_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predict_schemata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_model_template_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_actions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1PublisherModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
