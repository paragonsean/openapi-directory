/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::~OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance() {}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::initializeModel() {

    m_attribute_columns_isSet = false;
    m_attribute_columns_isValid = false;

    m_attribute_weights_isSet = false;
    m_attribute_weights_isValid = false;

    m_context_columns_isSet = false;
    m_context_columns_isValid = false;

    m_context_weights_isSet = false;
    m_context_weights_isValid = false;

    m_horizon_columns_isSet = false;
    m_horizon_columns_isValid = false;

    m_horizon_weights_isSet = false;
    m_horizon_weights_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::fromJsonObject(QJsonObject json) {

    m_attribute_columns_isValid = ::OpenAPI::fromJsonValue(m_attribute_columns, json[QString("attributeColumns")]);
    m_attribute_columns_isSet = !json[QString("attributeColumns")].isNull() && m_attribute_columns_isValid;

    m_attribute_weights_isValid = ::OpenAPI::fromJsonValue(m_attribute_weights, json[QString("attributeWeights")]);
    m_attribute_weights_isSet = !json[QString("attributeWeights")].isNull() && m_attribute_weights_isValid;

    m_context_columns_isValid = ::OpenAPI::fromJsonValue(m_context_columns, json[QString("contextColumns")]);
    m_context_columns_isSet = !json[QString("contextColumns")].isNull() && m_context_columns_isValid;

    m_context_weights_isValid = ::OpenAPI::fromJsonValue(m_context_weights, json[QString("contextWeights")]);
    m_context_weights_isSet = !json[QString("contextWeights")].isNull() && m_context_weights_isValid;

    m_horizon_columns_isValid = ::OpenAPI::fromJsonValue(m_horizon_columns, json[QString("horizonColumns")]);
    m_horizon_columns_isSet = !json[QString("horizonColumns")].isNull() && m_horizon_columns_isValid;

    m_horizon_weights_isValid = ::OpenAPI::fromJsonValue(m_horizon_weights, json[QString("horizonWeights")]);
    m_horizon_weights_isSet = !json[QString("horizonWeights")].isNull() && m_horizon_weights_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_columns.size() > 0) {
        obj.insert(QString("attributeColumns"), ::OpenAPI::toJsonValue(m_attribute_columns));
    }
    if (m_attribute_weights.size() > 0) {
        obj.insert(QString("attributeWeights"), ::OpenAPI::toJsonValue(m_attribute_weights));
    }
    if (m_context_columns.size() > 0) {
        obj.insert(QString("contextColumns"), ::OpenAPI::toJsonValue(m_context_columns));
    }
    if (m_context_weights.size() > 0) {
        obj.insert(QString("contextWeights"), ::OpenAPI::toJsonValue(m_context_weights));
    }
    if (m_horizon_columns.size() > 0) {
        obj.insert(QString("horizonColumns"), ::OpenAPI::toJsonValue(m_horizon_columns));
    }
    if (m_horizon_weights.size() > 0) {
        obj.insert(QString("horizonWeights"), ::OpenAPI::toJsonValue(m_horizon_weights));
    }
    return obj;
}

QList<QString> OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::getAttributeColumns() const {
    return m_attribute_columns;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::setAttributeColumns(const QList<QString> &attribute_columns) {
    m_attribute_columns = attribute_columns;
    m_attribute_columns_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_attribute_columns_Set() const{
    return m_attribute_columns_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_attribute_columns_Valid() const{
    return m_attribute_columns_isValid;
}

QList<float> OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::getAttributeWeights() const {
    return m_attribute_weights;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::setAttributeWeights(const QList<float> &attribute_weights) {
    m_attribute_weights = attribute_weights;
    m_attribute_weights_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_attribute_weights_Set() const{
    return m_attribute_weights_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_attribute_weights_Valid() const{
    return m_attribute_weights_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::getContextColumns() const {
    return m_context_columns;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::setContextColumns(const QList<QString> &context_columns) {
    m_context_columns = context_columns;
    m_context_columns_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_context_columns_Set() const{
    return m_context_columns_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_context_columns_Valid() const{
    return m_context_columns_isValid;
}

QList<float> OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::getContextWeights() const {
    return m_context_weights;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::setContextWeights(const QList<float> &context_weights) {
    m_context_weights = context_weights;
    m_context_weights_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_context_weights_Set() const{
    return m_context_weights_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_context_weights_Valid() const{
    return m_context_weights_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::getHorizonColumns() const {
    return m_horizon_columns;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::setHorizonColumns(const QList<QString> &horizon_columns) {
    m_horizon_columns = horizon_columns;
    m_horizon_columns_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_horizon_columns_Set() const{
    return m_horizon_columns_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_horizon_columns_Valid() const{
    return m_horizon_columns_isValid;
}

QList<float> OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::getHorizonWeights() const {
    return m_horizon_weights;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::setHorizonWeights(const QList<float> &horizon_weights) {
    m_horizon_weights = horizon_weights;
    m_horizon_weights_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_horizon_weights_Set() const{
    return m_horizon_weights_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::is_horizon_weights_Valid() const{
    return m_horizon_weights_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_weights.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_context_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_context_weights.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_horizon_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_horizon_weights.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
