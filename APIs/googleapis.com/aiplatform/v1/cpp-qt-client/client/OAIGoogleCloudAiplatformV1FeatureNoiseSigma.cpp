/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1FeatureNoiseSigma.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1FeatureNoiseSigma::OAIGoogleCloudAiplatformV1FeatureNoiseSigma(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1FeatureNoiseSigma::OAIGoogleCloudAiplatformV1FeatureNoiseSigma() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1FeatureNoiseSigma::~OAIGoogleCloudAiplatformV1FeatureNoiseSigma() {}

void OAIGoogleCloudAiplatformV1FeatureNoiseSigma::initializeModel() {

    m_noise_sigma_isSet = false;
    m_noise_sigma_isValid = false;
}

void OAIGoogleCloudAiplatformV1FeatureNoiseSigma::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1FeatureNoiseSigma::fromJsonObject(QJsonObject json) {

    m_noise_sigma_isValid = ::OpenAPI::fromJsonValue(m_noise_sigma, json[QString("noiseSigma")]);
    m_noise_sigma_isSet = !json[QString("noiseSigma")].isNull() && m_noise_sigma_isValid;
}

QString OAIGoogleCloudAiplatformV1FeatureNoiseSigma::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1FeatureNoiseSigma::asJsonObject() const {
    QJsonObject obj;
    if (m_noise_sigma.size() > 0) {
        obj.insert(QString("noiseSigma"), ::OpenAPI::toJsonValue(m_noise_sigma));
    }
    return obj;
}

QList<OAIGoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature> OAIGoogleCloudAiplatformV1FeatureNoiseSigma::getNoiseSigma() const {
    return m_noise_sigma;
}
void OAIGoogleCloudAiplatformV1FeatureNoiseSigma::setNoiseSigma(const QList<OAIGoogleCloudAiplatformV1FeatureNoiseSigmaNoiseSigmaForFeature> &noise_sigma) {
    m_noise_sigma = noise_sigma;
    m_noise_sigma_isSet = true;
}

bool OAIGoogleCloudAiplatformV1FeatureNoiseSigma::is_noise_sigma_Set() const{
    return m_noise_sigma_isSet;
}

bool OAIGoogleCloudAiplatformV1FeatureNoiseSigma::is_noise_sigma_Valid() const{
    return m_noise_sigma_isValid;
}

bool OAIGoogleCloudAiplatformV1FeatureNoiseSigma::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_noise_sigma.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1FeatureNoiseSigma::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
