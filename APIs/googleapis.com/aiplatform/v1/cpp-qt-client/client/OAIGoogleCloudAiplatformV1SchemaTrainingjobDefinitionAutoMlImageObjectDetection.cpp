/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::~OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection() {}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::initializeModel() {

    m_inputs_isSet = false;
    m_inputs_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::fromJsonObject(QJsonObject json) {

    m_inputs_isValid = ::OpenAPI::fromJsonValue(m_inputs, json[QString("inputs")]);
    m_inputs_isSet = !json[QString("inputs")].isNull() && m_inputs_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::asJsonObject() const {
    QJsonObject obj;
    if (m_inputs.isSet()) {
        obj.insert(QString("inputs"), ::OpenAPI::toJsonValue(m_inputs));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::getInputs() const {
    return m_inputs;
}
void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::setInputs(const OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionInputs &inputs) {
    m_inputs = inputs;
    m_inputs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::is_inputs_Set() const{
    return m_inputs_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::is_inputs_Valid() const{
    return m_inputs_isValid;
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::setMetadata(const OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetectionMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inputs.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlImageObjectDetection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
