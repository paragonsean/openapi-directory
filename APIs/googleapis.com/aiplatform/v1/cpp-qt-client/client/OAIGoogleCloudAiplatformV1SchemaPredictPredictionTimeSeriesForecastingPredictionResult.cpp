/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::~OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult() {}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::initializeModel() {

    m_quantile_predictions_isSet = false;
    m_quantile_predictions_isValid = false;

    m_quantile_values_isSet = false;
    m_quantile_values_isValid = false;

    m_tft_feature_importance_isSet = false;
    m_tft_feature_importance_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::fromJsonObject(QJsonObject json) {

    m_quantile_predictions_isValid = ::OpenAPI::fromJsonValue(m_quantile_predictions, json[QString("quantilePredictions")]);
    m_quantile_predictions_isSet = !json[QString("quantilePredictions")].isNull() && m_quantile_predictions_isValid;

    m_quantile_values_isValid = ::OpenAPI::fromJsonValue(m_quantile_values, json[QString("quantileValues")]);
    m_quantile_values_isSet = !json[QString("quantileValues")].isNull() && m_quantile_values_isValid;

    m_tft_feature_importance_isValid = ::OpenAPI::fromJsonValue(m_tft_feature_importance, json[QString("tftFeatureImportance")]);
    m_tft_feature_importance_isSet = !json[QString("tftFeatureImportance")].isNull() && m_tft_feature_importance_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_quantile_predictions.size() > 0) {
        obj.insert(QString("quantilePredictions"), ::OpenAPI::toJsonValue(m_quantile_predictions));
    }
    if (m_quantile_values.size() > 0) {
        obj.insert(QString("quantileValues"), ::OpenAPI::toJsonValue(m_quantile_values));
    }
    if (m_tft_feature_importance.isSet()) {
        obj.insert(QString("tftFeatureImportance"), ::OpenAPI::toJsonValue(m_tft_feature_importance));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QList<float> OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::getQuantilePredictions() const {
    return m_quantile_predictions;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::setQuantilePredictions(const QList<float> &quantile_predictions) {
    m_quantile_predictions = quantile_predictions;
    m_quantile_predictions_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::is_quantile_predictions_Set() const{
    return m_quantile_predictions_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::is_quantile_predictions_Valid() const{
    return m_quantile_predictions_isValid;
}

QList<float> OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::getQuantileValues() const {
    return m_quantile_values;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::setQuantileValues(const QList<float> &quantile_values) {
    m_quantile_values = quantile_values;
    m_quantile_values_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::is_quantile_values_Set() const{
    return m_quantile_values_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::is_quantile_values_Valid() const{
    return m_quantile_values_isValid;
}

OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::getTftFeatureImportance() const {
    return m_tft_feature_importance;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::setTftFeatureImportance(const OAIGoogleCloudAiplatformV1SchemaPredictPredictionTftFeatureImportance &tft_feature_importance) {
    m_tft_feature_importance = tft_feature_importance;
    m_tft_feature_importance_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::is_tft_feature_importance_Set() const{
    return m_tft_feature_importance_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::is_tft_feature_importance_Valid() const{
    return m_tft_feature_importance_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::getValue() const {
    return m_value;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::setValue(const float &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quantile_predictions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantile_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tft_feature_importance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionTimeSeriesForecastingPredictionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
