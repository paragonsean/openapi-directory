/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::~OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource() {}

void OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::initializeModel() {

    m_feature_groups_isSet = false;
    m_feature_groups_isValid = false;

    m_project_number_isSet = false;
    m_project_number_isValid = false;
}

void OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::fromJsonObject(QJsonObject json) {

    m_feature_groups_isValid = ::OpenAPI::fromJsonValue(m_feature_groups, json[QString("featureGroups")]);
    m_feature_groups_isSet = !json[QString("featureGroups")].isNull() && m_feature_groups_isValid;

    m_project_number_isValid = ::OpenAPI::fromJsonValue(m_project_number, json[QString("projectNumber")]);
    m_project_number_isSet = !json[QString("projectNumber")].isNull() && m_project_number_isValid;
}

QString OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::asJsonObject() const {
    QJsonObject obj;
    if (m_feature_groups.size() > 0) {
        obj.insert(QString("featureGroups"), ::OpenAPI::toJsonValue(m_feature_groups));
    }
    if (m_project_number_isSet) {
        obj.insert(QString("projectNumber"), ::OpenAPI::toJsonValue(m_project_number));
    }
    return obj;
}

QList<OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup> OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::getFeatureGroups() const {
    return m_feature_groups;
}
void OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::setFeatureGroups(const QList<OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySourceFeatureGroup> &feature_groups) {
    m_feature_groups = feature_groups;
    m_feature_groups_isSet = true;
}

bool OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::is_feature_groups_Set() const{
    return m_feature_groups_isSet;
}

bool OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::is_feature_groups_Valid() const{
    return m_feature_groups_isValid;
}

QString OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::getProjectNumber() const {
    return m_project_number;
}
void OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::setProjectNumber(const QString &project_number) {
    m_project_number = project_number;
    m_project_number_isSet = true;
}

bool OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::is_project_number_Set() const{
    return m_project_number_isSet;
}

bool OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::is_project_number_Valid() const{
    return m_project_number_isValid;
}

bool OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_feature_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1FeatureViewFeatureRegistrySource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
