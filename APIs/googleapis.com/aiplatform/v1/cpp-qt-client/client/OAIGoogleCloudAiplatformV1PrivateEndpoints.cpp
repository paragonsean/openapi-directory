/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1PrivateEndpoints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1PrivateEndpoints::OAIGoogleCloudAiplatformV1PrivateEndpoints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1PrivateEndpoints::OAIGoogleCloudAiplatformV1PrivateEndpoints() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1PrivateEndpoints::~OAIGoogleCloudAiplatformV1PrivateEndpoints() {}

void OAIGoogleCloudAiplatformV1PrivateEndpoints::initializeModel() {

    m_explain_http_uri_isSet = false;
    m_explain_http_uri_isValid = false;

    m_health_http_uri_isSet = false;
    m_health_http_uri_isValid = false;

    m_predict_http_uri_isSet = false;
    m_predict_http_uri_isValid = false;

    m_service_attachment_isSet = false;
    m_service_attachment_isValid = false;
}

void OAIGoogleCloudAiplatformV1PrivateEndpoints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1PrivateEndpoints::fromJsonObject(QJsonObject json) {

    m_explain_http_uri_isValid = ::OpenAPI::fromJsonValue(m_explain_http_uri, json[QString("explainHttpUri")]);
    m_explain_http_uri_isSet = !json[QString("explainHttpUri")].isNull() && m_explain_http_uri_isValid;

    m_health_http_uri_isValid = ::OpenAPI::fromJsonValue(m_health_http_uri, json[QString("healthHttpUri")]);
    m_health_http_uri_isSet = !json[QString("healthHttpUri")].isNull() && m_health_http_uri_isValid;

    m_predict_http_uri_isValid = ::OpenAPI::fromJsonValue(m_predict_http_uri, json[QString("predictHttpUri")]);
    m_predict_http_uri_isSet = !json[QString("predictHttpUri")].isNull() && m_predict_http_uri_isValid;

    m_service_attachment_isValid = ::OpenAPI::fromJsonValue(m_service_attachment, json[QString("serviceAttachment")]);
    m_service_attachment_isSet = !json[QString("serviceAttachment")].isNull() && m_service_attachment_isValid;
}

QString OAIGoogleCloudAiplatformV1PrivateEndpoints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1PrivateEndpoints::asJsonObject() const {
    QJsonObject obj;
    if (m_explain_http_uri_isSet) {
        obj.insert(QString("explainHttpUri"), ::OpenAPI::toJsonValue(m_explain_http_uri));
    }
    if (m_health_http_uri_isSet) {
        obj.insert(QString("healthHttpUri"), ::OpenAPI::toJsonValue(m_health_http_uri));
    }
    if (m_predict_http_uri_isSet) {
        obj.insert(QString("predictHttpUri"), ::OpenAPI::toJsonValue(m_predict_http_uri));
    }
    if (m_service_attachment_isSet) {
        obj.insert(QString("serviceAttachment"), ::OpenAPI::toJsonValue(m_service_attachment));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1PrivateEndpoints::getExplainHttpUri() const {
    return m_explain_http_uri;
}
void OAIGoogleCloudAiplatformV1PrivateEndpoints::setExplainHttpUri(const QString &explain_http_uri) {
    m_explain_http_uri = explain_http_uri;
    m_explain_http_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::is_explain_http_uri_Set() const{
    return m_explain_http_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::is_explain_http_uri_Valid() const{
    return m_explain_http_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1PrivateEndpoints::getHealthHttpUri() const {
    return m_health_http_uri;
}
void OAIGoogleCloudAiplatformV1PrivateEndpoints::setHealthHttpUri(const QString &health_http_uri) {
    m_health_http_uri = health_http_uri;
    m_health_http_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::is_health_http_uri_Set() const{
    return m_health_http_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::is_health_http_uri_Valid() const{
    return m_health_http_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1PrivateEndpoints::getPredictHttpUri() const {
    return m_predict_http_uri;
}
void OAIGoogleCloudAiplatformV1PrivateEndpoints::setPredictHttpUri(const QString &predict_http_uri) {
    m_predict_http_uri = predict_http_uri;
    m_predict_http_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::is_predict_http_uri_Set() const{
    return m_predict_http_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::is_predict_http_uri_Valid() const{
    return m_predict_http_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1PrivateEndpoints::getServiceAttachment() const {
    return m_service_attachment;
}
void OAIGoogleCloudAiplatformV1PrivateEndpoints::setServiceAttachment(const QString &service_attachment) {
    m_service_attachment = service_attachment;
    m_service_attachment_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::is_service_attachment_Set() const{
    return m_service_attachment_isSet;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::is_service_attachment_Valid() const{
    return m_service_attachment_isValid;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_explain_http_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_health_http_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predict_http_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_attachment_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1PrivateEndpoints::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
