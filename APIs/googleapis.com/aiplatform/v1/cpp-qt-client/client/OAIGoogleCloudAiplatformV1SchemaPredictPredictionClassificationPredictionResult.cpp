/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::~OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult() {}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::initializeModel() {

    m_confidences_isSet = false;
    m_confidences_isValid = false;

    m_display_names_isSet = false;
    m_display_names_isValid = false;

    m_ids_isSet = false;
    m_ids_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::fromJsonObject(QJsonObject json) {

    m_confidences_isValid = ::OpenAPI::fromJsonValue(m_confidences, json[QString("confidences")]);
    m_confidences_isSet = !json[QString("confidences")].isNull() && m_confidences_isValid;

    m_display_names_isValid = ::OpenAPI::fromJsonValue(m_display_names, json[QString("displayNames")]);
    m_display_names_isSet = !json[QString("displayNames")].isNull() && m_display_names_isValid;

    m_ids_isValid = ::OpenAPI::fromJsonValue(m_ids, json[QString("ids")]);
    m_ids_isSet = !json[QString("ids")].isNull() && m_ids_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_confidences.size() > 0) {
        obj.insert(QString("confidences"), ::OpenAPI::toJsonValue(m_confidences));
    }
    if (m_display_names.size() > 0) {
        obj.insert(QString("displayNames"), ::OpenAPI::toJsonValue(m_display_names));
    }
    if (m_ids.size() > 0) {
        obj.insert(QString("ids"), ::OpenAPI::toJsonValue(m_ids));
    }
    return obj;
}

QList<float> OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::getConfidences() const {
    return m_confidences;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::setConfidences(const QList<float> &confidences) {
    m_confidences = confidences;
    m_confidences_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::is_confidences_Set() const{
    return m_confidences_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::is_confidences_Valid() const{
    return m_confidences_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::getDisplayNames() const {
    return m_display_names;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::setDisplayNames(const QList<QString> &display_names) {
    m_display_names = display_names;
    m_display_names_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::is_display_names_Set() const{
    return m_display_names_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::is_display_names_Valid() const{
    return m_display_names_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::getIds() const {
    return m_ids;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::setIds(const QList<QString> &ids) {
    m_ids = ids;
    m_ids_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::is_ids_Set() const{
    return m_ids_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::is_ids_Valid() const{
    return m_ids_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidences.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionClassificationPredictionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
