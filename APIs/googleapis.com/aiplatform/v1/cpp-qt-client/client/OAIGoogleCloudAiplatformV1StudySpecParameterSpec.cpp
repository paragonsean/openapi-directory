/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1StudySpecParameterSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1StudySpecParameterSpec::OAIGoogleCloudAiplatformV1StudySpecParameterSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1StudySpecParameterSpec::OAIGoogleCloudAiplatformV1StudySpecParameterSpec() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1StudySpecParameterSpec::~OAIGoogleCloudAiplatformV1StudySpecParameterSpec() {}

void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::initializeModel() {

    m_categorical_value_spec_isSet = false;
    m_categorical_value_spec_isValid = false;

    m_conditional_parameter_specs_isSet = false;
    m_conditional_parameter_specs_isValid = false;

    m_discrete_value_spec_isSet = false;
    m_discrete_value_spec_isValid = false;

    m_double_value_spec_isSet = false;
    m_double_value_spec_isValid = false;

    m_integer_value_spec_isSet = false;
    m_integer_value_spec_isValid = false;

    m_parameter_id_isSet = false;
    m_parameter_id_isValid = false;

    m_scale_type_isSet = false;
    m_scale_type_isValid = false;
}

void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::fromJsonObject(QJsonObject json) {

    m_categorical_value_spec_isValid = ::OpenAPI::fromJsonValue(m_categorical_value_spec, json[QString("categoricalValueSpec")]);
    m_categorical_value_spec_isSet = !json[QString("categoricalValueSpec")].isNull() && m_categorical_value_spec_isValid;

    m_conditional_parameter_specs_isValid = ::OpenAPI::fromJsonValue(m_conditional_parameter_specs, json[QString("conditionalParameterSpecs")]);
    m_conditional_parameter_specs_isSet = !json[QString("conditionalParameterSpecs")].isNull() && m_conditional_parameter_specs_isValid;

    m_discrete_value_spec_isValid = ::OpenAPI::fromJsonValue(m_discrete_value_spec, json[QString("discreteValueSpec")]);
    m_discrete_value_spec_isSet = !json[QString("discreteValueSpec")].isNull() && m_discrete_value_spec_isValid;

    m_double_value_spec_isValid = ::OpenAPI::fromJsonValue(m_double_value_spec, json[QString("doubleValueSpec")]);
    m_double_value_spec_isSet = !json[QString("doubleValueSpec")].isNull() && m_double_value_spec_isValid;

    m_integer_value_spec_isValid = ::OpenAPI::fromJsonValue(m_integer_value_spec, json[QString("integerValueSpec")]);
    m_integer_value_spec_isSet = !json[QString("integerValueSpec")].isNull() && m_integer_value_spec_isValid;

    m_parameter_id_isValid = ::OpenAPI::fromJsonValue(m_parameter_id, json[QString("parameterId")]);
    m_parameter_id_isSet = !json[QString("parameterId")].isNull() && m_parameter_id_isValid;

    m_scale_type_isValid = ::OpenAPI::fromJsonValue(m_scale_type, json[QString("scaleType")]);
    m_scale_type_isSet = !json[QString("scaleType")].isNull() && m_scale_type_isValid;
}

QString OAIGoogleCloudAiplatformV1StudySpecParameterSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1StudySpecParameterSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_categorical_value_spec.isSet()) {
        obj.insert(QString("categoricalValueSpec"), ::OpenAPI::toJsonValue(m_categorical_value_spec));
    }
    if (m_conditional_parameter_specs.size() > 0) {
        obj.insert(QString("conditionalParameterSpecs"), ::OpenAPI::toJsonValue(m_conditional_parameter_specs));
    }
    if (m_discrete_value_spec.isSet()) {
        obj.insert(QString("discreteValueSpec"), ::OpenAPI::toJsonValue(m_discrete_value_spec));
    }
    if (m_double_value_spec.isSet()) {
        obj.insert(QString("doubleValueSpec"), ::OpenAPI::toJsonValue(m_double_value_spec));
    }
    if (m_integer_value_spec.isSet()) {
        obj.insert(QString("integerValueSpec"), ::OpenAPI::toJsonValue(m_integer_value_spec));
    }
    if (m_parameter_id_isSet) {
        obj.insert(QString("parameterId"), ::OpenAPI::toJsonValue(m_parameter_id));
    }
    if (m_scale_type_isSet) {
        obj.insert(QString("scaleType"), ::OpenAPI::toJsonValue(m_scale_type));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec OAIGoogleCloudAiplatformV1StudySpecParameterSpec::getCategoricalValueSpec() const {
    return m_categorical_value_spec;
}
void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::setCategoricalValueSpec(const OAIGoogleCloudAiplatformV1StudySpecParameterSpecCategoricalValueSpec &categorical_value_spec) {
    m_categorical_value_spec = categorical_value_spec;
    m_categorical_value_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_categorical_value_spec_Set() const{
    return m_categorical_value_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_categorical_value_spec_Valid() const{
    return m_categorical_value_spec_isValid;
}

QList<OAIGoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec> OAIGoogleCloudAiplatformV1StudySpecParameterSpec::getConditionalParameterSpecs() const {
    return m_conditional_parameter_specs;
}
void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::setConditionalParameterSpecs(const QList<OAIGoogleCloudAiplatformV1StudySpecParameterSpecConditionalParameterSpec> &conditional_parameter_specs) {
    m_conditional_parameter_specs = conditional_parameter_specs;
    m_conditional_parameter_specs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_conditional_parameter_specs_Set() const{
    return m_conditional_parameter_specs_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_conditional_parameter_specs_Valid() const{
    return m_conditional_parameter_specs_isValid;
}

OAIGoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec OAIGoogleCloudAiplatformV1StudySpecParameterSpec::getDiscreteValueSpec() const {
    return m_discrete_value_spec;
}
void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::setDiscreteValueSpec(const OAIGoogleCloudAiplatformV1StudySpecParameterSpecDiscreteValueSpec &discrete_value_spec) {
    m_discrete_value_spec = discrete_value_spec;
    m_discrete_value_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_discrete_value_spec_Set() const{
    return m_discrete_value_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_discrete_value_spec_Valid() const{
    return m_discrete_value_spec_isValid;
}

OAIGoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec OAIGoogleCloudAiplatformV1StudySpecParameterSpec::getDoubleValueSpec() const {
    return m_double_value_spec;
}
void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::setDoubleValueSpec(const OAIGoogleCloudAiplatformV1StudySpecParameterSpecDoubleValueSpec &double_value_spec) {
    m_double_value_spec = double_value_spec;
    m_double_value_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_double_value_spec_Set() const{
    return m_double_value_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_double_value_spec_Valid() const{
    return m_double_value_spec_isValid;
}

OAIGoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec OAIGoogleCloudAiplatformV1StudySpecParameterSpec::getIntegerValueSpec() const {
    return m_integer_value_spec;
}
void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::setIntegerValueSpec(const OAIGoogleCloudAiplatformV1StudySpecParameterSpecIntegerValueSpec &integer_value_spec) {
    m_integer_value_spec = integer_value_spec;
    m_integer_value_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_integer_value_spec_Set() const{
    return m_integer_value_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_integer_value_spec_Valid() const{
    return m_integer_value_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1StudySpecParameterSpec::getParameterId() const {
    return m_parameter_id;
}
void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::setParameterId(const QString &parameter_id) {
    m_parameter_id = parameter_id;
    m_parameter_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_parameter_id_Set() const{
    return m_parameter_id_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_parameter_id_Valid() const{
    return m_parameter_id_isValid;
}

QString OAIGoogleCloudAiplatformV1StudySpecParameterSpec::getScaleType() const {
    return m_scale_type;
}
void OAIGoogleCloudAiplatformV1StudySpecParameterSpec::setScaleType(const QString &scale_type) {
    m_scale_type = scale_type;
    m_scale_type_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_scale_type_Set() const{
    return m_scale_type_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::is_scale_type_Valid() const{
    return m_scale_type_isValid;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_categorical_value_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_conditional_parameter_specs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_discrete_value_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_double_value_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_integer_value_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameter_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scale_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1StudySpecParameterSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
