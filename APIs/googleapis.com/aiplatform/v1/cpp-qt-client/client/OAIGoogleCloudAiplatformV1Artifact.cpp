/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1Artifact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1Artifact::OAIGoogleCloudAiplatformV1Artifact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1Artifact::OAIGoogleCloudAiplatformV1Artifact() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1Artifact::~OAIGoogleCloudAiplatformV1Artifact() {}

void OAIGoogleCloudAiplatformV1Artifact::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_schema_title_isSet = false;
    m_schema_title_isValid = false;

    m_schema_version_isSet = false;
    m_schema_version_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIGoogleCloudAiplatformV1Artifact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1Artifact::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_schema_title_isValid = ::OpenAPI::fromJsonValue(m_schema_title, json[QString("schemaTitle")]);
    m_schema_title_isSet = !json[QString("schemaTitle")].isNull() && m_schema_title_isValid;

    m_schema_version_isValid = ::OpenAPI::fromJsonValue(m_schema_version, json[QString("schemaVersion")]);
    m_schema_version_isSet = !json[QString("schemaVersion")].isNull() && m_schema_version_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1Artifact::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_schema_title_isSet) {
        obj.insert(QString("schemaTitle"), ::OpenAPI::toJsonValue(m_schema_title));
    }
    if (m_schema_version_isSet) {
        obj.insert(QString("schemaVersion"), ::OpenAPI::toJsonValue(m_schema_version));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1Artifact::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1Artifact::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::getDescription() const {
    return m_description;
}
void OAIGoogleCloudAiplatformV1Artifact::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1Artifact::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1Artifact::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_etag_Valid() const{
    return m_etag_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1Artifact::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1Artifact::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_labels_Valid() const{
    return m_labels_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudAiplatformV1Artifact::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudAiplatformV1Artifact::setMetadata(const QMap<QString, QJsonValue> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1Artifact::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::getSchemaTitle() const {
    return m_schema_title;
}
void OAIGoogleCloudAiplatformV1Artifact::setSchemaTitle(const QString &schema_title) {
    m_schema_title = schema_title;
    m_schema_title_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_schema_title_Set() const{
    return m_schema_title_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_schema_title_Valid() const{
    return m_schema_title_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::getSchemaVersion() const {
    return m_schema_version;
}
void OAIGoogleCloudAiplatformV1Artifact::setSchemaVersion(const QString &schema_version) {
    m_schema_version = schema_version;
    m_schema_version_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_schema_version_Set() const{
    return m_schema_version_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_schema_version_Valid() const{
    return m_schema_version_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::getState() const {
    return m_state;
}
void OAIGoogleCloudAiplatformV1Artifact::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1Artifact::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_update_time_Valid() const{
    return m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1Artifact::getUri() const {
    return m_uri;
}
void OAIGoogleCloudAiplatformV1Artifact::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1Artifact::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIGoogleCloudAiplatformV1Artifact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schema_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1Artifact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
