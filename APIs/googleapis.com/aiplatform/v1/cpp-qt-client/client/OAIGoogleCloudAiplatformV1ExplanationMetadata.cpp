/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1ExplanationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1ExplanationMetadata::OAIGoogleCloudAiplatformV1ExplanationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1ExplanationMetadata::OAIGoogleCloudAiplatformV1ExplanationMetadata() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1ExplanationMetadata::~OAIGoogleCloudAiplatformV1ExplanationMetadata() {}

void OAIGoogleCloudAiplatformV1ExplanationMetadata::initializeModel() {

    m_feature_attributions_schema_uri_isSet = false;
    m_feature_attributions_schema_uri_isValid = false;

    m_inputs_isSet = false;
    m_inputs_isValid = false;

    m_latent_space_source_isSet = false;
    m_latent_space_source_isValid = false;

    m_outputs_isSet = false;
    m_outputs_isValid = false;
}

void OAIGoogleCloudAiplatformV1ExplanationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1ExplanationMetadata::fromJsonObject(QJsonObject json) {

    m_feature_attributions_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_feature_attributions_schema_uri, json[QString("featureAttributionsSchemaUri")]);
    m_feature_attributions_schema_uri_isSet = !json[QString("featureAttributionsSchemaUri")].isNull() && m_feature_attributions_schema_uri_isValid;

    m_inputs_isValid = ::OpenAPI::fromJsonValue(m_inputs, json[QString("inputs")]);
    m_inputs_isSet = !json[QString("inputs")].isNull() && m_inputs_isValid;

    m_latent_space_source_isValid = ::OpenAPI::fromJsonValue(m_latent_space_source, json[QString("latentSpaceSource")]);
    m_latent_space_source_isSet = !json[QString("latentSpaceSource")].isNull() && m_latent_space_source_isValid;

    m_outputs_isValid = ::OpenAPI::fromJsonValue(m_outputs, json[QString("outputs")]);
    m_outputs_isSet = !json[QString("outputs")].isNull() && m_outputs_isValid;
}

QString OAIGoogleCloudAiplatformV1ExplanationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1ExplanationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_feature_attributions_schema_uri_isSet) {
        obj.insert(QString("featureAttributionsSchemaUri"), ::OpenAPI::toJsonValue(m_feature_attributions_schema_uri));
    }
    if (m_inputs.size() > 0) {
        obj.insert(QString("inputs"), ::OpenAPI::toJsonValue(m_inputs));
    }
    if (m_latent_space_source_isSet) {
        obj.insert(QString("latentSpaceSource"), ::OpenAPI::toJsonValue(m_latent_space_source));
    }
    if (m_outputs.size() > 0) {
        obj.insert(QString("outputs"), ::OpenAPI::toJsonValue(m_outputs));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1ExplanationMetadata::getFeatureAttributionsSchemaUri() const {
    return m_feature_attributions_schema_uri;
}
void OAIGoogleCloudAiplatformV1ExplanationMetadata::setFeatureAttributionsSchemaUri(const QString &feature_attributions_schema_uri) {
    m_feature_attributions_schema_uri = feature_attributions_schema_uri;
    m_feature_attributions_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::is_feature_attributions_schema_uri_Set() const{
    return m_feature_attributions_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::is_feature_attributions_schema_uri_Valid() const{
    return m_feature_attributions_schema_uri_isValid;
}

QMap<QString, OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata> OAIGoogleCloudAiplatformV1ExplanationMetadata::getInputs() const {
    return m_inputs;
}
void OAIGoogleCloudAiplatformV1ExplanationMetadata::setInputs(const QMap<QString, OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata> &inputs) {
    m_inputs = inputs;
    m_inputs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::is_inputs_Set() const{
    return m_inputs_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::is_inputs_Valid() const{
    return m_inputs_isValid;
}

QString OAIGoogleCloudAiplatformV1ExplanationMetadata::getLatentSpaceSource() const {
    return m_latent_space_source;
}
void OAIGoogleCloudAiplatformV1ExplanationMetadata::setLatentSpaceSource(const QString &latent_space_source) {
    m_latent_space_source = latent_space_source;
    m_latent_space_source_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::is_latent_space_source_Set() const{
    return m_latent_space_source_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::is_latent_space_source_Valid() const{
    return m_latent_space_source_isValid;
}

QMap<QString, OAIGoogleCloudAiplatformV1ExplanationMetadataOutputMetadata> OAIGoogleCloudAiplatformV1ExplanationMetadata::getOutputs() const {
    return m_outputs;
}
void OAIGoogleCloudAiplatformV1ExplanationMetadata::setOutputs(const QMap<QString, OAIGoogleCloudAiplatformV1ExplanationMetadataOutputMetadata> &outputs) {
    m_outputs = outputs;
    m_outputs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::is_outputs_Set() const{
    return m_outputs_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::is_outputs_Valid() const{
    return m_outputs_isValid;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_feature_attributions_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inputs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_latent_space_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_outputs.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1ExplanationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
