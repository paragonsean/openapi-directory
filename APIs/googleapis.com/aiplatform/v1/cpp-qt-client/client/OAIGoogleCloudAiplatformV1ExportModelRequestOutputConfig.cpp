/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::~OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig() {}

void OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::initializeModel() {

    m_artifact_destination_isSet = false;
    m_artifact_destination_isValid = false;

    m_export_format_id_isSet = false;
    m_export_format_id_isValid = false;

    m_image_destination_isSet = false;
    m_image_destination_isValid = false;
}

void OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::fromJsonObject(QJsonObject json) {

    m_artifact_destination_isValid = ::OpenAPI::fromJsonValue(m_artifact_destination, json[QString("artifactDestination")]);
    m_artifact_destination_isSet = !json[QString("artifactDestination")].isNull() && m_artifact_destination_isValid;

    m_export_format_id_isValid = ::OpenAPI::fromJsonValue(m_export_format_id, json[QString("exportFormatId")]);
    m_export_format_id_isSet = !json[QString("exportFormatId")].isNull() && m_export_format_id_isValid;

    m_image_destination_isValid = ::OpenAPI::fromJsonValue(m_image_destination, json[QString("imageDestination")]);
    m_image_destination_isSet = !json[QString("imageDestination")].isNull() && m_image_destination_isValid;
}

QString OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_artifact_destination.isSet()) {
        obj.insert(QString("artifactDestination"), ::OpenAPI::toJsonValue(m_artifact_destination));
    }
    if (m_export_format_id_isSet) {
        obj.insert(QString("exportFormatId"), ::OpenAPI::toJsonValue(m_export_format_id));
    }
    if (m_image_destination.isSet()) {
        obj.insert(QString("imageDestination"), ::OpenAPI::toJsonValue(m_image_destination));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1GcsDestination OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::getArtifactDestination() const {
    return m_artifact_destination;
}
void OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::setArtifactDestination(const OAIGoogleCloudAiplatformV1GcsDestination &artifact_destination) {
    m_artifact_destination = artifact_destination;
    m_artifact_destination_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::is_artifact_destination_Set() const{
    return m_artifact_destination_isSet;
}

bool OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::is_artifact_destination_Valid() const{
    return m_artifact_destination_isValid;
}

QString OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::getExportFormatId() const {
    return m_export_format_id;
}
void OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::setExportFormatId(const QString &export_format_id) {
    m_export_format_id = export_format_id;
    m_export_format_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::is_export_format_id_Set() const{
    return m_export_format_id_isSet;
}

bool OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::is_export_format_id_Valid() const{
    return m_export_format_id_isValid;
}

OAIGoogleCloudAiplatformV1ContainerRegistryDestination OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::getImageDestination() const {
    return m_image_destination;
}
void OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::setImageDestination(const OAIGoogleCloudAiplatformV1ContainerRegistryDestination &image_destination) {
    m_image_destination = image_destination;
    m_image_destination_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::is_image_destination_Set() const{
    return m_image_destination_isSet;
}

bool OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::is_image_destination_Valid() const{
    return m_image_destination_isValid;
}

bool OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_artifact_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_export_format_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1ExportModelRequestOutputConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
