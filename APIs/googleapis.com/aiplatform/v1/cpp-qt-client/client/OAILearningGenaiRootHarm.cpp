/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILearningGenaiRootHarm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILearningGenaiRootHarm::OAILearningGenaiRootHarm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILearningGenaiRootHarm::OAILearningGenaiRootHarm() {
    this->initializeModel();
}

OAILearningGenaiRootHarm::~OAILearningGenaiRootHarm() {}

void OAILearningGenaiRootHarm::initializeModel() {

    m_contextual_dangerous_isSet = false;
    m_contextual_dangerous_isValid = false;

    m_csam_isSet = false;
    m_csam_isValid = false;

    m_fringe_isSet = false;
    m_fringe_isValid = false;

    m_grail_image_harm_type_isSet = false;
    m_grail_image_harm_type_isValid = false;

    m_grail_text_harm_type_isSet = false;
    m_grail_text_harm_type_isValid = false;

    m_image_csam_isSet = false;
    m_image_csam_isValid = false;

    m_image_pedo_isSet = false;
    m_image_pedo_isValid = false;

    m_image_porn_isSet = false;
    m_image_porn_isValid = false;

    m_image_violence_isSet = false;
    m_image_violence_isValid = false;

    m_pqc_isSet = false;
    m_pqc_isValid = false;

    m_safetycat_isSet = false;
    m_safetycat_isValid = false;

    m_spii_isSet = false;
    m_spii_isValid = false;

    m_threshold_isSet = false;
    m_threshold_isValid = false;

    m_video_frame_csam_isSet = false;
    m_video_frame_csam_isValid = false;

    m_video_frame_pedo_isSet = false;
    m_video_frame_pedo_isValid = false;

    m_video_frame_porn_isSet = false;
    m_video_frame_porn_isValid = false;

    m_video_frame_violence_isSet = false;
    m_video_frame_violence_isValid = false;
}

void OAILearningGenaiRootHarm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILearningGenaiRootHarm::fromJsonObject(QJsonObject json) {

    m_contextual_dangerous_isValid = ::OpenAPI::fromJsonValue(m_contextual_dangerous, json[QString("contextualDangerous")]);
    m_contextual_dangerous_isSet = !json[QString("contextualDangerous")].isNull() && m_contextual_dangerous_isValid;

    m_csam_isValid = ::OpenAPI::fromJsonValue(m_csam, json[QString("csam")]);
    m_csam_isSet = !json[QString("csam")].isNull() && m_csam_isValid;

    m_fringe_isValid = ::OpenAPI::fromJsonValue(m_fringe, json[QString("fringe")]);
    m_fringe_isSet = !json[QString("fringe")].isNull() && m_fringe_isValid;

    m_grail_image_harm_type_isValid = ::OpenAPI::fromJsonValue(m_grail_image_harm_type, json[QString("grailImageHarmType")]);
    m_grail_image_harm_type_isSet = !json[QString("grailImageHarmType")].isNull() && m_grail_image_harm_type_isValid;

    m_grail_text_harm_type_isValid = ::OpenAPI::fromJsonValue(m_grail_text_harm_type, json[QString("grailTextHarmType")]);
    m_grail_text_harm_type_isSet = !json[QString("grailTextHarmType")].isNull() && m_grail_text_harm_type_isValid;

    m_image_csam_isValid = ::OpenAPI::fromJsonValue(m_image_csam, json[QString("imageCsam")]);
    m_image_csam_isSet = !json[QString("imageCsam")].isNull() && m_image_csam_isValid;

    m_image_pedo_isValid = ::OpenAPI::fromJsonValue(m_image_pedo, json[QString("imagePedo")]);
    m_image_pedo_isSet = !json[QString("imagePedo")].isNull() && m_image_pedo_isValid;

    m_image_porn_isValid = ::OpenAPI::fromJsonValue(m_image_porn, json[QString("imagePorn")]);
    m_image_porn_isSet = !json[QString("imagePorn")].isNull() && m_image_porn_isValid;

    m_image_violence_isValid = ::OpenAPI::fromJsonValue(m_image_violence, json[QString("imageViolence")]);
    m_image_violence_isSet = !json[QString("imageViolence")].isNull() && m_image_violence_isValid;

    m_pqc_isValid = ::OpenAPI::fromJsonValue(m_pqc, json[QString("pqc")]);
    m_pqc_isSet = !json[QString("pqc")].isNull() && m_pqc_isValid;

    m_safetycat_isValid = ::OpenAPI::fromJsonValue(m_safetycat, json[QString("safetycat")]);
    m_safetycat_isSet = !json[QString("safetycat")].isNull() && m_safetycat_isValid;

    m_spii_isValid = ::OpenAPI::fromJsonValue(m_spii, json[QString("spii")]);
    m_spii_isSet = !json[QString("spii")].isNull() && m_spii_isValid;

    m_threshold_isValid = ::OpenAPI::fromJsonValue(m_threshold, json[QString("threshold")]);
    m_threshold_isSet = !json[QString("threshold")].isNull() && m_threshold_isValid;

    m_video_frame_csam_isValid = ::OpenAPI::fromJsonValue(m_video_frame_csam, json[QString("videoFrameCsam")]);
    m_video_frame_csam_isSet = !json[QString("videoFrameCsam")].isNull() && m_video_frame_csam_isValid;

    m_video_frame_pedo_isValid = ::OpenAPI::fromJsonValue(m_video_frame_pedo, json[QString("videoFramePedo")]);
    m_video_frame_pedo_isSet = !json[QString("videoFramePedo")].isNull() && m_video_frame_pedo_isValid;

    m_video_frame_porn_isValid = ::OpenAPI::fromJsonValue(m_video_frame_porn, json[QString("videoFramePorn")]);
    m_video_frame_porn_isSet = !json[QString("videoFramePorn")].isNull() && m_video_frame_porn_isValid;

    m_video_frame_violence_isValid = ::OpenAPI::fromJsonValue(m_video_frame_violence, json[QString("videoFrameViolence")]);
    m_video_frame_violence_isSet = !json[QString("videoFrameViolence")].isNull() && m_video_frame_violence_isValid;
}

QString OAILearningGenaiRootHarm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILearningGenaiRootHarm::asJsonObject() const {
    QJsonObject obj;
    if (m_contextual_dangerous_isSet) {
        obj.insert(QString("contextualDangerous"), ::OpenAPI::toJsonValue(m_contextual_dangerous));
    }
    if (m_csam_isSet) {
        obj.insert(QString("csam"), ::OpenAPI::toJsonValue(m_csam));
    }
    if (m_fringe_isSet) {
        obj.insert(QString("fringe"), ::OpenAPI::toJsonValue(m_fringe));
    }
    if (m_grail_image_harm_type.isSet()) {
        obj.insert(QString("grailImageHarmType"), ::OpenAPI::toJsonValue(m_grail_image_harm_type));
    }
    if (m_grail_text_harm_type.isSet()) {
        obj.insert(QString("grailTextHarmType"), ::OpenAPI::toJsonValue(m_grail_text_harm_type));
    }
    if (m_image_csam_isSet) {
        obj.insert(QString("imageCsam"), ::OpenAPI::toJsonValue(m_image_csam));
    }
    if (m_image_pedo_isSet) {
        obj.insert(QString("imagePedo"), ::OpenAPI::toJsonValue(m_image_pedo));
    }
    if (m_image_porn_isSet) {
        obj.insert(QString("imagePorn"), ::OpenAPI::toJsonValue(m_image_porn));
    }
    if (m_image_violence_isSet) {
        obj.insert(QString("imageViolence"), ::OpenAPI::toJsonValue(m_image_violence));
    }
    if (m_pqc_isSet) {
        obj.insert(QString("pqc"), ::OpenAPI::toJsonValue(m_pqc));
    }
    if (m_safetycat.isSet()) {
        obj.insert(QString("safetycat"), ::OpenAPI::toJsonValue(m_safetycat));
    }
    if (m_spii.isSet()) {
        obj.insert(QString("spii"), ::OpenAPI::toJsonValue(m_spii));
    }
    if (m_threshold_isSet) {
        obj.insert(QString("threshold"), ::OpenAPI::toJsonValue(m_threshold));
    }
    if (m_video_frame_csam_isSet) {
        obj.insert(QString("videoFrameCsam"), ::OpenAPI::toJsonValue(m_video_frame_csam));
    }
    if (m_video_frame_pedo_isSet) {
        obj.insert(QString("videoFramePedo"), ::OpenAPI::toJsonValue(m_video_frame_pedo));
    }
    if (m_video_frame_porn_isSet) {
        obj.insert(QString("videoFramePorn"), ::OpenAPI::toJsonValue(m_video_frame_porn));
    }
    if (m_video_frame_violence_isSet) {
        obj.insert(QString("videoFrameViolence"), ::OpenAPI::toJsonValue(m_video_frame_violence));
    }
    return obj;
}

bool OAILearningGenaiRootHarm::isContextualDangerous() const {
    return m_contextual_dangerous;
}
void OAILearningGenaiRootHarm::setContextualDangerous(const bool &contextual_dangerous) {
    m_contextual_dangerous = contextual_dangerous;
    m_contextual_dangerous_isSet = true;
}

bool OAILearningGenaiRootHarm::is_contextual_dangerous_Set() const{
    return m_contextual_dangerous_isSet;
}

bool OAILearningGenaiRootHarm::is_contextual_dangerous_Valid() const{
    return m_contextual_dangerous_isValid;
}

bool OAILearningGenaiRootHarm::isCsam() const {
    return m_csam;
}
void OAILearningGenaiRootHarm::setCsam(const bool &csam) {
    m_csam = csam;
    m_csam_isSet = true;
}

bool OAILearningGenaiRootHarm::is_csam_Set() const{
    return m_csam_isSet;
}

bool OAILearningGenaiRootHarm::is_csam_Valid() const{
    return m_csam_isValid;
}

bool OAILearningGenaiRootHarm::isFringe() const {
    return m_fringe;
}
void OAILearningGenaiRootHarm::setFringe(const bool &fringe) {
    m_fringe = fringe;
    m_fringe_isSet = true;
}

bool OAILearningGenaiRootHarm::is_fringe_Set() const{
    return m_fringe_isSet;
}

bool OAILearningGenaiRootHarm::is_fringe_Valid() const{
    return m_fringe_isValid;
}

OAILearningGenaiRootHarmGrailImageHarmType OAILearningGenaiRootHarm::getGrailImageHarmType() const {
    return m_grail_image_harm_type;
}
void OAILearningGenaiRootHarm::setGrailImageHarmType(const OAILearningGenaiRootHarmGrailImageHarmType &grail_image_harm_type) {
    m_grail_image_harm_type = grail_image_harm_type;
    m_grail_image_harm_type_isSet = true;
}

bool OAILearningGenaiRootHarm::is_grail_image_harm_type_Set() const{
    return m_grail_image_harm_type_isSet;
}

bool OAILearningGenaiRootHarm::is_grail_image_harm_type_Valid() const{
    return m_grail_image_harm_type_isValid;
}

OAILearningGenaiRootHarmGrailTextHarmType OAILearningGenaiRootHarm::getGrailTextHarmType() const {
    return m_grail_text_harm_type;
}
void OAILearningGenaiRootHarm::setGrailTextHarmType(const OAILearningGenaiRootHarmGrailTextHarmType &grail_text_harm_type) {
    m_grail_text_harm_type = grail_text_harm_type;
    m_grail_text_harm_type_isSet = true;
}

bool OAILearningGenaiRootHarm::is_grail_text_harm_type_Set() const{
    return m_grail_text_harm_type_isSet;
}

bool OAILearningGenaiRootHarm::is_grail_text_harm_type_Valid() const{
    return m_grail_text_harm_type_isValid;
}

bool OAILearningGenaiRootHarm::isImageCsam() const {
    return m_image_csam;
}
void OAILearningGenaiRootHarm::setImageCsam(const bool &image_csam) {
    m_image_csam = image_csam;
    m_image_csam_isSet = true;
}

bool OAILearningGenaiRootHarm::is_image_csam_Set() const{
    return m_image_csam_isSet;
}

bool OAILearningGenaiRootHarm::is_image_csam_Valid() const{
    return m_image_csam_isValid;
}

bool OAILearningGenaiRootHarm::isImagePedo() const {
    return m_image_pedo;
}
void OAILearningGenaiRootHarm::setImagePedo(const bool &image_pedo) {
    m_image_pedo = image_pedo;
    m_image_pedo_isSet = true;
}

bool OAILearningGenaiRootHarm::is_image_pedo_Set() const{
    return m_image_pedo_isSet;
}

bool OAILearningGenaiRootHarm::is_image_pedo_Valid() const{
    return m_image_pedo_isValid;
}

bool OAILearningGenaiRootHarm::isImagePorn() const {
    return m_image_porn;
}
void OAILearningGenaiRootHarm::setImagePorn(const bool &image_porn) {
    m_image_porn = image_porn;
    m_image_porn_isSet = true;
}

bool OAILearningGenaiRootHarm::is_image_porn_Set() const{
    return m_image_porn_isSet;
}

bool OAILearningGenaiRootHarm::is_image_porn_Valid() const{
    return m_image_porn_isValid;
}

bool OAILearningGenaiRootHarm::isImageViolence() const {
    return m_image_violence;
}
void OAILearningGenaiRootHarm::setImageViolence(const bool &image_violence) {
    m_image_violence = image_violence;
    m_image_violence_isSet = true;
}

bool OAILearningGenaiRootHarm::is_image_violence_Set() const{
    return m_image_violence_isSet;
}

bool OAILearningGenaiRootHarm::is_image_violence_Valid() const{
    return m_image_violence_isValid;
}

bool OAILearningGenaiRootHarm::isPqc() const {
    return m_pqc;
}
void OAILearningGenaiRootHarm::setPqc(const bool &pqc) {
    m_pqc = pqc;
    m_pqc_isSet = true;
}

bool OAILearningGenaiRootHarm::is_pqc_Set() const{
    return m_pqc_isSet;
}

bool OAILearningGenaiRootHarm::is_pqc_Valid() const{
    return m_pqc_isValid;
}

OAILearningGenaiRootHarmSafetyCatCategories OAILearningGenaiRootHarm::getSafetycat() const {
    return m_safetycat;
}
void OAILearningGenaiRootHarm::setSafetycat(const OAILearningGenaiRootHarmSafetyCatCategories &safetycat) {
    m_safetycat = safetycat;
    m_safetycat_isSet = true;
}

bool OAILearningGenaiRootHarm::is_safetycat_Set() const{
    return m_safetycat_isSet;
}

bool OAILearningGenaiRootHarm::is_safetycat_Valid() const{
    return m_safetycat_isValid;
}

OAILearningGenaiRootHarmSpiiFilter OAILearningGenaiRootHarm::getSpii() const {
    return m_spii;
}
void OAILearningGenaiRootHarm::setSpii(const OAILearningGenaiRootHarmSpiiFilter &spii) {
    m_spii = spii;
    m_spii_isSet = true;
}

bool OAILearningGenaiRootHarm::is_spii_Set() const{
    return m_spii_isSet;
}

bool OAILearningGenaiRootHarm::is_spii_Valid() const{
    return m_spii_isValid;
}

double OAILearningGenaiRootHarm::getThreshold() const {
    return m_threshold;
}
void OAILearningGenaiRootHarm::setThreshold(const double &threshold) {
    m_threshold = threshold;
    m_threshold_isSet = true;
}

bool OAILearningGenaiRootHarm::is_threshold_Set() const{
    return m_threshold_isSet;
}

bool OAILearningGenaiRootHarm::is_threshold_Valid() const{
    return m_threshold_isValid;
}

bool OAILearningGenaiRootHarm::isVideoFrameCsam() const {
    return m_video_frame_csam;
}
void OAILearningGenaiRootHarm::setVideoFrameCsam(const bool &video_frame_csam) {
    m_video_frame_csam = video_frame_csam;
    m_video_frame_csam_isSet = true;
}

bool OAILearningGenaiRootHarm::is_video_frame_csam_Set() const{
    return m_video_frame_csam_isSet;
}

bool OAILearningGenaiRootHarm::is_video_frame_csam_Valid() const{
    return m_video_frame_csam_isValid;
}

bool OAILearningGenaiRootHarm::isVideoFramePedo() const {
    return m_video_frame_pedo;
}
void OAILearningGenaiRootHarm::setVideoFramePedo(const bool &video_frame_pedo) {
    m_video_frame_pedo = video_frame_pedo;
    m_video_frame_pedo_isSet = true;
}

bool OAILearningGenaiRootHarm::is_video_frame_pedo_Set() const{
    return m_video_frame_pedo_isSet;
}

bool OAILearningGenaiRootHarm::is_video_frame_pedo_Valid() const{
    return m_video_frame_pedo_isValid;
}

bool OAILearningGenaiRootHarm::isVideoFramePorn() const {
    return m_video_frame_porn;
}
void OAILearningGenaiRootHarm::setVideoFramePorn(const bool &video_frame_porn) {
    m_video_frame_porn = video_frame_porn;
    m_video_frame_porn_isSet = true;
}

bool OAILearningGenaiRootHarm::is_video_frame_porn_Set() const{
    return m_video_frame_porn_isSet;
}

bool OAILearningGenaiRootHarm::is_video_frame_porn_Valid() const{
    return m_video_frame_porn_isValid;
}

bool OAILearningGenaiRootHarm::isVideoFrameViolence() const {
    return m_video_frame_violence;
}
void OAILearningGenaiRootHarm::setVideoFrameViolence(const bool &video_frame_violence) {
    m_video_frame_violence = video_frame_violence;
    m_video_frame_violence_isSet = true;
}

bool OAILearningGenaiRootHarm::is_video_frame_violence_Set() const{
    return m_video_frame_violence_isSet;
}

bool OAILearningGenaiRootHarm::is_video_frame_violence_Valid() const{
    return m_video_frame_violence_isValid;
}

bool OAILearningGenaiRootHarm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contextual_dangerous_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_csam_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fringe_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grail_image_harm_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_grail_text_harm_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_csam_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_pedo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_porn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_violence_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pqc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_safetycat.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_spii.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_frame_csam_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_frame_pedo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_frame_porn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_video_frame_violence_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILearningGenaiRootHarm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
