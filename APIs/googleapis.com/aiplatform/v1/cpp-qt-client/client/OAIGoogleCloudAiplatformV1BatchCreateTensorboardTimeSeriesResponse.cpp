/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::~OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse() {}

void OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::initializeModel() {

    m_tensorboard_time_series_isSet = false;
    m_tensorboard_time_series_isValid = false;
}

void OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::fromJsonObject(QJsonObject json) {

    m_tensorboard_time_series_isValid = ::OpenAPI::fromJsonValue(m_tensorboard_time_series, json[QString("tensorboardTimeSeries")]);
    m_tensorboard_time_series_isSet = !json[QString("tensorboardTimeSeries")].isNull() && m_tensorboard_time_series_isValid;
}

QString OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_tensorboard_time_series.size() > 0) {
        obj.insert(QString("tensorboardTimeSeries"), ::OpenAPI::toJsonValue(m_tensorboard_time_series));
    }
    return obj;
}

QList<OAIGoogleCloudAiplatformV1TensorboardTimeSeries> OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::getTensorboardTimeSeries() const {
    return m_tensorboard_time_series;
}
void OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::setTensorboardTimeSeries(const QList<OAIGoogleCloudAiplatformV1TensorboardTimeSeries> &tensorboard_time_series) {
    m_tensorboard_time_series = tensorboard_time_series;
    m_tensorboard_time_series_isSet = true;
}

bool OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::is_tensorboard_time_series_Set() const{
    return m_tensorboard_time_series_isSet;
}

bool OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::is_tensorboard_time_series_Valid() const{
    return m_tensorboard_time_series_isValid;
}

bool OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tensorboard_time_series.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1BatchCreateTensorboardTimeSeriesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
