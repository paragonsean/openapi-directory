/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::~OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams() {}

void OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::initializeModel() {

    m_confidence_threshold_isSet = false;
    m_confidence_threshold_isValid = false;

    m_max_predictions_isSet = false;
    m_max_predictions_isValid = false;

    m_one_sec_interval_classification_isSet = false;
    m_one_sec_interval_classification_isValid = false;

    m_segment_classification_isSet = false;
    m_segment_classification_isValid = false;

    m_shot_classification_isSet = false;
    m_shot_classification_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::fromJsonObject(QJsonObject json) {

    m_confidence_threshold_isValid = ::OpenAPI::fromJsonValue(m_confidence_threshold, json[QString("confidenceThreshold")]);
    m_confidence_threshold_isSet = !json[QString("confidenceThreshold")].isNull() && m_confidence_threshold_isValid;

    m_max_predictions_isValid = ::OpenAPI::fromJsonValue(m_max_predictions, json[QString("maxPredictions")]);
    m_max_predictions_isSet = !json[QString("maxPredictions")].isNull() && m_max_predictions_isValid;

    m_one_sec_interval_classification_isValid = ::OpenAPI::fromJsonValue(m_one_sec_interval_classification, json[QString("oneSecIntervalClassification")]);
    m_one_sec_interval_classification_isSet = !json[QString("oneSecIntervalClassification")].isNull() && m_one_sec_interval_classification_isValid;

    m_segment_classification_isValid = ::OpenAPI::fromJsonValue(m_segment_classification, json[QString("segmentClassification")]);
    m_segment_classification_isSet = !json[QString("segmentClassification")].isNull() && m_segment_classification_isValid;

    m_shot_classification_isValid = ::OpenAPI::fromJsonValue(m_shot_classification, json[QString("shotClassification")]);
    m_shot_classification_isSet = !json[QString("shotClassification")].isNull() && m_shot_classification_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::asJsonObject() const {
    QJsonObject obj;
    if (m_confidence_threshold_isSet) {
        obj.insert(QString("confidenceThreshold"), ::OpenAPI::toJsonValue(m_confidence_threshold));
    }
    if (m_max_predictions_isSet) {
        obj.insert(QString("maxPredictions"), ::OpenAPI::toJsonValue(m_max_predictions));
    }
    if (m_one_sec_interval_classification_isSet) {
        obj.insert(QString("oneSecIntervalClassification"), ::OpenAPI::toJsonValue(m_one_sec_interval_classification));
    }
    if (m_segment_classification_isSet) {
        obj.insert(QString("segmentClassification"), ::OpenAPI::toJsonValue(m_segment_classification));
    }
    if (m_shot_classification_isSet) {
        obj.insert(QString("shotClassification"), ::OpenAPI::toJsonValue(m_shot_classification));
    }
    return obj;
}

float OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::getConfidenceThreshold() const {
    return m_confidence_threshold;
}
void OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::setConfidenceThreshold(const float &confidence_threshold) {
    m_confidence_threshold = confidence_threshold;
    m_confidence_threshold_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_confidence_threshold_Set() const{
    return m_confidence_threshold_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_confidence_threshold_Valid() const{
    return m_confidence_threshold_isValid;
}

qint32 OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::getMaxPredictions() const {
    return m_max_predictions;
}
void OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::setMaxPredictions(const qint32 &max_predictions) {
    m_max_predictions = max_predictions;
    m_max_predictions_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_max_predictions_Set() const{
    return m_max_predictions_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_max_predictions_Valid() const{
    return m_max_predictions_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::isOneSecIntervalClassification() const {
    return m_one_sec_interval_classification;
}
void OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::setOneSecIntervalClassification(const bool &one_sec_interval_classification) {
    m_one_sec_interval_classification = one_sec_interval_classification;
    m_one_sec_interval_classification_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_one_sec_interval_classification_Set() const{
    return m_one_sec_interval_classification_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_one_sec_interval_classification_Valid() const{
    return m_one_sec_interval_classification_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::isSegmentClassification() const {
    return m_segment_classification;
}
void OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::setSegmentClassification(const bool &segment_classification) {
    m_segment_classification = segment_classification;
    m_segment_classification_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_segment_classification_Set() const{
    return m_segment_classification_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_segment_classification_Valid() const{
    return m_segment_classification_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::isShotClassification() const {
    return m_shot_classification;
}
void OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::setShotClassification(const bool &shot_classification) {
    m_shot_classification = shot_classification;
    m_shot_classification_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_shot_classification_Set() const{
    return m_shot_classification_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::is_shot_classification_Valid() const{
    return m_shot_classification_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidence_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_predictions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_one_sec_interval_classification_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_classification_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shot_classification_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsVideoClassificationPredictionParams::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
