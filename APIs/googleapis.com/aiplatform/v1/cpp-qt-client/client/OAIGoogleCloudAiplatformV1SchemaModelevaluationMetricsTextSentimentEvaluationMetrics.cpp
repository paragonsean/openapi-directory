/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::~OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics() {}

void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::initializeModel() {

    m_confusion_matrix_isSet = false;
    m_confusion_matrix_isValid = false;

    m_f1_score_isSet = false;
    m_f1_score_isValid = false;

    m_linear_kappa_isSet = false;
    m_linear_kappa_isValid = false;

    m_mean_absolute_error_isSet = false;
    m_mean_absolute_error_isValid = false;

    m_mean_squared_error_isSet = false;
    m_mean_squared_error_isValid = false;

    m_precision_isSet = false;
    m_precision_isValid = false;

    m_quadratic_kappa_isSet = false;
    m_quadratic_kappa_isValid = false;

    m_recall_isSet = false;
    m_recall_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::fromJsonObject(QJsonObject json) {

    m_confusion_matrix_isValid = ::OpenAPI::fromJsonValue(m_confusion_matrix, json[QString("confusionMatrix")]);
    m_confusion_matrix_isSet = !json[QString("confusionMatrix")].isNull() && m_confusion_matrix_isValid;

    m_f1_score_isValid = ::OpenAPI::fromJsonValue(m_f1_score, json[QString("f1Score")]);
    m_f1_score_isSet = !json[QString("f1Score")].isNull() && m_f1_score_isValid;

    m_linear_kappa_isValid = ::OpenAPI::fromJsonValue(m_linear_kappa, json[QString("linearKappa")]);
    m_linear_kappa_isSet = !json[QString("linearKappa")].isNull() && m_linear_kappa_isValid;

    m_mean_absolute_error_isValid = ::OpenAPI::fromJsonValue(m_mean_absolute_error, json[QString("meanAbsoluteError")]);
    m_mean_absolute_error_isSet = !json[QString("meanAbsoluteError")].isNull() && m_mean_absolute_error_isValid;

    m_mean_squared_error_isValid = ::OpenAPI::fromJsonValue(m_mean_squared_error, json[QString("meanSquaredError")]);
    m_mean_squared_error_isSet = !json[QString("meanSquaredError")].isNull() && m_mean_squared_error_isValid;

    m_precision_isValid = ::OpenAPI::fromJsonValue(m_precision, json[QString("precision")]);
    m_precision_isSet = !json[QString("precision")].isNull() && m_precision_isValid;

    m_quadratic_kappa_isValid = ::OpenAPI::fromJsonValue(m_quadratic_kappa, json[QString("quadraticKappa")]);
    m_quadratic_kappa_isSet = !json[QString("quadraticKappa")].isNull() && m_quadratic_kappa_isValid;

    m_recall_isValid = ::OpenAPI::fromJsonValue(m_recall, json[QString("recall")]);
    m_recall_isSet = !json[QString("recall")].isNull() && m_recall_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_confusion_matrix.isSet()) {
        obj.insert(QString("confusionMatrix"), ::OpenAPI::toJsonValue(m_confusion_matrix));
    }
    if (m_f1_score_isSet) {
        obj.insert(QString("f1Score"), ::OpenAPI::toJsonValue(m_f1_score));
    }
    if (m_linear_kappa_isSet) {
        obj.insert(QString("linearKappa"), ::OpenAPI::toJsonValue(m_linear_kappa));
    }
    if (m_mean_absolute_error_isSet) {
        obj.insert(QString("meanAbsoluteError"), ::OpenAPI::toJsonValue(m_mean_absolute_error));
    }
    if (m_mean_squared_error_isSet) {
        obj.insert(QString("meanSquaredError"), ::OpenAPI::toJsonValue(m_mean_squared_error));
    }
    if (m_precision_isSet) {
        obj.insert(QString("precision"), ::OpenAPI::toJsonValue(m_precision));
    }
    if (m_quadratic_kappa_isSet) {
        obj.insert(QString("quadraticKappa"), ::OpenAPI::toJsonValue(m_quadratic_kappa));
    }
    if (m_recall_isSet) {
        obj.insert(QString("recall"), ::OpenAPI::toJsonValue(m_recall));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::getConfusionMatrix() const {
    return m_confusion_matrix;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::setConfusionMatrix(const OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix &confusion_matrix) {
    m_confusion_matrix = confusion_matrix;
    m_confusion_matrix_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_confusion_matrix_Set() const{
    return m_confusion_matrix_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_confusion_matrix_Valid() const{
    return m_confusion_matrix_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::getF1Score() const {
    return m_f1_score;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::setF1Score(const float &f1_score) {
    m_f1_score = f1_score;
    m_f1_score_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_f1_score_Set() const{
    return m_f1_score_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_f1_score_Valid() const{
    return m_f1_score_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::getLinearKappa() const {
    return m_linear_kappa;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::setLinearKappa(const float &linear_kappa) {
    m_linear_kappa = linear_kappa;
    m_linear_kappa_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_linear_kappa_Set() const{
    return m_linear_kappa_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_linear_kappa_Valid() const{
    return m_linear_kappa_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::getMeanAbsoluteError() const {
    return m_mean_absolute_error;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::setMeanAbsoluteError(const float &mean_absolute_error) {
    m_mean_absolute_error = mean_absolute_error;
    m_mean_absolute_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_mean_absolute_error_Set() const{
    return m_mean_absolute_error_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_mean_absolute_error_Valid() const{
    return m_mean_absolute_error_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::getMeanSquaredError() const {
    return m_mean_squared_error;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::setMeanSquaredError(const float &mean_squared_error) {
    m_mean_squared_error = mean_squared_error;
    m_mean_squared_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_mean_squared_error_Set() const{
    return m_mean_squared_error_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_mean_squared_error_Valid() const{
    return m_mean_squared_error_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::getPrecision() const {
    return m_precision;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::setPrecision(const float &precision) {
    m_precision = precision;
    m_precision_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_precision_Set() const{
    return m_precision_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_precision_Valid() const{
    return m_precision_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::getQuadraticKappa() const {
    return m_quadratic_kappa;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::setQuadraticKappa(const float &quadratic_kappa) {
    m_quadratic_kappa = quadratic_kappa;
    m_quadratic_kappa_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_quadratic_kappa_Set() const{
    return m_quadratic_kappa_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_quadratic_kappa_Valid() const{
    return m_quadratic_kappa_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::getRecall() const {
    return m_recall;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::setRecall(const float &recall) {
    m_recall = recall;
    m_recall_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_recall_Set() const{
    return m_recall_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::is_recall_Valid() const{
    return m_recall_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confusion_matrix.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_f1_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_linear_kappa_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mean_absolute_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mean_squared_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_precision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quadratic_kappa_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recall_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsTextSentimentEvaluationMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
