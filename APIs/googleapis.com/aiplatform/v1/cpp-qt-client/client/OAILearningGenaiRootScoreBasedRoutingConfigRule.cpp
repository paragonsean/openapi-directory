/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILearningGenaiRootScoreBasedRoutingConfigRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILearningGenaiRootScoreBasedRoutingConfigRule::OAILearningGenaiRootScoreBasedRoutingConfigRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILearningGenaiRootScoreBasedRoutingConfigRule::OAILearningGenaiRootScoreBasedRoutingConfigRule() {
    this->initializeModel();
}

OAILearningGenaiRootScoreBasedRoutingConfigRule::~OAILearningGenaiRootScoreBasedRoutingConfigRule() {}

void OAILearningGenaiRootScoreBasedRoutingConfigRule::initializeModel() {

    m_equal_or_greater_than_isSet = false;
    m_equal_or_greater_than_isValid = false;

    m_less_than_isSet = false;
    m_less_than_isValid = false;

    m_model_config_id_isSet = false;
    m_model_config_id_isValid = false;
}

void OAILearningGenaiRootScoreBasedRoutingConfigRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILearningGenaiRootScoreBasedRoutingConfigRule::fromJsonObject(QJsonObject json) {

    m_equal_or_greater_than_isValid = ::OpenAPI::fromJsonValue(m_equal_or_greater_than, json[QString("equalOrGreaterThan")]);
    m_equal_or_greater_than_isSet = !json[QString("equalOrGreaterThan")].isNull() && m_equal_or_greater_than_isValid;

    m_less_than_isValid = ::OpenAPI::fromJsonValue(m_less_than, json[QString("lessThan")]);
    m_less_than_isSet = !json[QString("lessThan")].isNull() && m_less_than_isValid;

    m_model_config_id_isValid = ::OpenAPI::fromJsonValue(m_model_config_id, json[QString("modelConfigId")]);
    m_model_config_id_isSet = !json[QString("modelConfigId")].isNull() && m_model_config_id_isValid;
}

QString OAILearningGenaiRootScoreBasedRoutingConfigRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILearningGenaiRootScoreBasedRoutingConfigRule::asJsonObject() const {
    QJsonObject obj;
    if (m_equal_or_greater_than.isSet()) {
        obj.insert(QString("equalOrGreaterThan"), ::OpenAPI::toJsonValue(m_equal_or_greater_than));
    }
    if (m_less_than.isSet()) {
        obj.insert(QString("lessThan"), ::OpenAPI::toJsonValue(m_less_than));
    }
    if (m_model_config_id_isSet) {
        obj.insert(QString("modelConfigId"), ::OpenAPI::toJsonValue(m_model_config_id));
    }
    return obj;
}

OAILearningGenaiRootScore OAILearningGenaiRootScoreBasedRoutingConfigRule::getEqualOrGreaterThan() const {
    return m_equal_or_greater_than;
}
void OAILearningGenaiRootScoreBasedRoutingConfigRule::setEqualOrGreaterThan(const OAILearningGenaiRootScore &equal_or_greater_than) {
    m_equal_or_greater_than = equal_or_greater_than;
    m_equal_or_greater_than_isSet = true;
}

bool OAILearningGenaiRootScoreBasedRoutingConfigRule::is_equal_or_greater_than_Set() const{
    return m_equal_or_greater_than_isSet;
}

bool OAILearningGenaiRootScoreBasedRoutingConfigRule::is_equal_or_greater_than_Valid() const{
    return m_equal_or_greater_than_isValid;
}

OAILearningGenaiRootScore OAILearningGenaiRootScoreBasedRoutingConfigRule::getLessThan() const {
    return m_less_than;
}
void OAILearningGenaiRootScoreBasedRoutingConfigRule::setLessThan(const OAILearningGenaiRootScore &less_than) {
    m_less_than = less_than;
    m_less_than_isSet = true;
}

bool OAILearningGenaiRootScoreBasedRoutingConfigRule::is_less_than_Set() const{
    return m_less_than_isSet;
}

bool OAILearningGenaiRootScoreBasedRoutingConfigRule::is_less_than_Valid() const{
    return m_less_than_isValid;
}

QString OAILearningGenaiRootScoreBasedRoutingConfigRule::getModelConfigId() const {
    return m_model_config_id;
}
void OAILearningGenaiRootScoreBasedRoutingConfigRule::setModelConfigId(const QString &model_config_id) {
    m_model_config_id = model_config_id;
    m_model_config_id_isSet = true;
}

bool OAILearningGenaiRootScoreBasedRoutingConfigRule::is_model_config_id_Set() const{
    return m_model_config_id_isSet;
}

bool OAILearningGenaiRootScoreBasedRoutingConfigRule::is_model_config_id_Valid() const{
    return m_model_config_id_isValid;
}

bool OAILearningGenaiRootScoreBasedRoutingConfigRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_equal_or_greater_than.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_less_than.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_config_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILearningGenaiRootScoreBasedRoutingConfigRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
