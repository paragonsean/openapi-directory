/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1PredictSchemata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1PredictSchemata::OAIGoogleCloudAiplatformV1PredictSchemata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1PredictSchemata::OAIGoogleCloudAiplatformV1PredictSchemata() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1PredictSchemata::~OAIGoogleCloudAiplatformV1PredictSchemata() {}

void OAIGoogleCloudAiplatformV1PredictSchemata::initializeModel() {

    m_instance_schema_uri_isSet = false;
    m_instance_schema_uri_isValid = false;

    m_parameters_schema_uri_isSet = false;
    m_parameters_schema_uri_isValid = false;

    m_prediction_schema_uri_isSet = false;
    m_prediction_schema_uri_isValid = false;
}

void OAIGoogleCloudAiplatformV1PredictSchemata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1PredictSchemata::fromJsonObject(QJsonObject json) {

    m_instance_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_instance_schema_uri, json[QString("instanceSchemaUri")]);
    m_instance_schema_uri_isSet = !json[QString("instanceSchemaUri")].isNull() && m_instance_schema_uri_isValid;

    m_parameters_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_parameters_schema_uri, json[QString("parametersSchemaUri")]);
    m_parameters_schema_uri_isSet = !json[QString("parametersSchemaUri")].isNull() && m_parameters_schema_uri_isValid;

    m_prediction_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_prediction_schema_uri, json[QString("predictionSchemaUri")]);
    m_prediction_schema_uri_isSet = !json[QString("predictionSchemaUri")].isNull() && m_prediction_schema_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1PredictSchemata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1PredictSchemata::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_schema_uri_isSet) {
        obj.insert(QString("instanceSchemaUri"), ::OpenAPI::toJsonValue(m_instance_schema_uri));
    }
    if (m_parameters_schema_uri_isSet) {
        obj.insert(QString("parametersSchemaUri"), ::OpenAPI::toJsonValue(m_parameters_schema_uri));
    }
    if (m_prediction_schema_uri_isSet) {
        obj.insert(QString("predictionSchemaUri"), ::OpenAPI::toJsonValue(m_prediction_schema_uri));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1PredictSchemata::getInstanceSchemaUri() const {
    return m_instance_schema_uri;
}
void OAIGoogleCloudAiplatformV1PredictSchemata::setInstanceSchemaUri(const QString &instance_schema_uri) {
    m_instance_schema_uri = instance_schema_uri;
    m_instance_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PredictSchemata::is_instance_schema_uri_Set() const{
    return m_instance_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1PredictSchemata::is_instance_schema_uri_Valid() const{
    return m_instance_schema_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1PredictSchemata::getParametersSchemaUri() const {
    return m_parameters_schema_uri;
}
void OAIGoogleCloudAiplatformV1PredictSchemata::setParametersSchemaUri(const QString &parameters_schema_uri) {
    m_parameters_schema_uri = parameters_schema_uri;
    m_parameters_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PredictSchemata::is_parameters_schema_uri_Set() const{
    return m_parameters_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1PredictSchemata::is_parameters_schema_uri_Valid() const{
    return m_parameters_schema_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1PredictSchemata::getPredictionSchemaUri() const {
    return m_prediction_schema_uri;
}
void OAIGoogleCloudAiplatformV1PredictSchemata::setPredictionSchemaUri(const QString &prediction_schema_uri) {
    m_prediction_schema_uri = prediction_schema_uri;
    m_prediction_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PredictSchemata::is_prediction_schema_uri_Set() const{
    return m_prediction_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1PredictSchemata::is_prediction_schema_uri_Valid() const{
    return m_prediction_schema_uri_isValid;
}

bool OAIGoogleCloudAiplatformV1PredictSchemata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prediction_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1PredictSchemata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
