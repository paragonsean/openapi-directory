/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::~OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest() {}

void OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::initializeModel() {

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_tensorboard_run_isSet = false;
    m_tensorboard_run_isValid = false;

    m_tensorboard_run_id_isSet = false;
    m_tensorboard_run_id_isValid = false;
}

void OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::fromJsonObject(QJsonObject json) {

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("parent")]);
    m_parent_isSet = !json[QString("parent")].isNull() && m_parent_isValid;

    m_tensorboard_run_isValid = ::OpenAPI::fromJsonValue(m_tensorboard_run, json[QString("tensorboardRun")]);
    m_tensorboard_run_isSet = !json[QString("tensorboardRun")].isNull() && m_tensorboard_run_isValid;

    m_tensorboard_run_id_isValid = ::OpenAPI::fromJsonValue(m_tensorboard_run_id, json[QString("tensorboardRunId")]);
    m_tensorboard_run_id_isSet = !json[QString("tensorboardRunId")].isNull() && m_tensorboard_run_id_isValid;
}

QString OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_parent_isSet) {
        obj.insert(QString("parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_tensorboard_run.isSet()) {
        obj.insert(QString("tensorboardRun"), ::OpenAPI::toJsonValue(m_tensorboard_run));
    }
    if (m_tensorboard_run_id_isSet) {
        obj.insert(QString("tensorboardRunId"), ::OpenAPI::toJsonValue(m_tensorboard_run_id));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::getParent() const {
    return m_parent;
}
void OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::is_parent_Valid() const{
    return m_parent_isValid;
}

OAIGoogleCloudAiplatformV1TensorboardRun OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::getTensorboardRun() const {
    return m_tensorboard_run;
}
void OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::setTensorboardRun(const OAIGoogleCloudAiplatformV1TensorboardRun &tensorboard_run) {
    m_tensorboard_run = tensorboard_run;
    m_tensorboard_run_isSet = true;
}

bool OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::is_tensorboard_run_Set() const{
    return m_tensorboard_run_isSet;
}

bool OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::is_tensorboard_run_Valid() const{
    return m_tensorboard_run_isValid;
}

QString OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::getTensorboardRunId() const {
    return m_tensorboard_run_id;
}
void OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::setTensorboardRunId(const QString &tensorboard_run_id) {
    m_tensorboard_run_id = tensorboard_run_id;
    m_tensorboard_run_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::is_tensorboard_run_id_Set() const{
    return m_tensorboard_run_id_isSet;
}

bool OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::is_tensorboard_run_id_Valid() const{
    return m_tensorboard_run_id_isValid;
}

bool OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tensorboard_run.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tensorboard_run_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1CreateTensorboardRunRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
