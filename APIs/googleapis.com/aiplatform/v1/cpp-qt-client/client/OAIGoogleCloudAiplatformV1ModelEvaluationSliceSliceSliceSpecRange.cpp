/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::~OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange() {}

void OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::initializeModel() {

    m_high_isSet = false;
    m_high_isValid = false;

    m_low_isSet = false;
    m_low_isValid = false;
}

void OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::fromJsonObject(QJsonObject json) {

    m_high_isValid = ::OpenAPI::fromJsonValue(m_high, json[QString("high")]);
    m_high_isSet = !json[QString("high")].isNull() && m_high_isValid;

    m_low_isValid = ::OpenAPI::fromJsonValue(m_low, json[QString("low")]);
    m_low_isSet = !json[QString("low")].isNull() && m_low_isValid;
}

QString OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::asJsonObject() const {
    QJsonObject obj;
    if (m_high_isSet) {
        obj.insert(QString("high"), ::OpenAPI::toJsonValue(m_high));
    }
    if (m_low_isSet) {
        obj.insert(QString("low"), ::OpenAPI::toJsonValue(m_low));
    }
    return obj;
}

float OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::getHigh() const {
    return m_high;
}
void OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::setHigh(const float &high) {
    m_high = high;
    m_high_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::is_high_Set() const{
    return m_high_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::is_high_Valid() const{
    return m_high_isValid;
}

float OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::getLow() const {
    return m_low;
}
void OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::setLow(const float &low) {
    m_low = low;
    m_low_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::is_low_Set() const{
    return m_low_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::is_low_Valid() const{
    return m_low_isValid;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_high_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluationSliceSliceSliceSpecRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
