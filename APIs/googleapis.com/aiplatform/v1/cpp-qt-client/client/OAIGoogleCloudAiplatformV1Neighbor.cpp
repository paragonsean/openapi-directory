/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1Neighbor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1Neighbor::OAIGoogleCloudAiplatformV1Neighbor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1Neighbor::OAIGoogleCloudAiplatformV1Neighbor() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1Neighbor::~OAIGoogleCloudAiplatformV1Neighbor() {}

void OAIGoogleCloudAiplatformV1Neighbor::initializeModel() {

    m_neighbor_distance_isSet = false;
    m_neighbor_distance_isValid = false;

    m_neighbor_id_isSet = false;
    m_neighbor_id_isValid = false;
}

void OAIGoogleCloudAiplatformV1Neighbor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1Neighbor::fromJsonObject(QJsonObject json) {

    m_neighbor_distance_isValid = ::OpenAPI::fromJsonValue(m_neighbor_distance, json[QString("neighborDistance")]);
    m_neighbor_distance_isSet = !json[QString("neighborDistance")].isNull() && m_neighbor_distance_isValid;

    m_neighbor_id_isValid = ::OpenAPI::fromJsonValue(m_neighbor_id, json[QString("neighborId")]);
    m_neighbor_id_isSet = !json[QString("neighborId")].isNull() && m_neighbor_id_isValid;
}

QString OAIGoogleCloudAiplatformV1Neighbor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1Neighbor::asJsonObject() const {
    QJsonObject obj;
    if (m_neighbor_distance_isSet) {
        obj.insert(QString("neighborDistance"), ::OpenAPI::toJsonValue(m_neighbor_distance));
    }
    if (m_neighbor_id_isSet) {
        obj.insert(QString("neighborId"), ::OpenAPI::toJsonValue(m_neighbor_id));
    }
    return obj;
}

double OAIGoogleCloudAiplatformV1Neighbor::getNeighborDistance() const {
    return m_neighbor_distance;
}
void OAIGoogleCloudAiplatformV1Neighbor::setNeighborDistance(const double &neighbor_distance) {
    m_neighbor_distance = neighbor_distance;
    m_neighbor_distance_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Neighbor::is_neighbor_distance_Set() const{
    return m_neighbor_distance_isSet;
}

bool OAIGoogleCloudAiplatformV1Neighbor::is_neighbor_distance_Valid() const{
    return m_neighbor_distance_isValid;
}

QString OAIGoogleCloudAiplatformV1Neighbor::getNeighborId() const {
    return m_neighbor_id;
}
void OAIGoogleCloudAiplatformV1Neighbor::setNeighborId(const QString &neighbor_id) {
    m_neighbor_id = neighbor_id;
    m_neighbor_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Neighbor::is_neighbor_id_Set() const{
    return m_neighbor_id_isSet;
}

bool OAIGoogleCloudAiplatformV1Neighbor::is_neighbor_id_Valid() const{
    return m_neighbor_id_isValid;
}

bool OAIGoogleCloudAiplatformV1Neighbor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_neighbor_distance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_neighbor_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1Neighbor::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
