/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1SmoothGradConfig.h
 *
 * Config for SmoothGrad approximation of gradients. When enabled, the gradients are approximated by averaging the gradients from noisy samples in the vicinity of the inputs. Adding noise can help improve the computed gradients. Refer to this paper for more details: https://arxiv.org/pdf/1706.03825.pdf
 */

#ifndef OAIGoogleCloudAiplatformV1SmoothGradConfig_H
#define OAIGoogleCloudAiplatformV1SmoothGradConfig_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1FeatureNoiseSigma.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1FeatureNoiseSigma;

class OAIGoogleCloudAiplatformV1SmoothGradConfig : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1SmoothGradConfig();
    OAIGoogleCloudAiplatformV1SmoothGradConfig(QString json);
    ~OAIGoogleCloudAiplatformV1SmoothGradConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleCloudAiplatformV1FeatureNoiseSigma getFeatureNoiseSigma() const;
    void setFeatureNoiseSigma(const OAIGoogleCloudAiplatformV1FeatureNoiseSigma &feature_noise_sigma);
    bool is_feature_noise_sigma_Set() const;
    bool is_feature_noise_sigma_Valid() const;

    float getNoiseSigma() const;
    void setNoiseSigma(const float &noise_sigma);
    bool is_noise_sigma_Set() const;
    bool is_noise_sigma_Valid() const;

    qint32 getNoisySampleCount() const;
    void setNoisySampleCount(const qint32 &noisy_sample_count);
    bool is_noisy_sample_count_Set() const;
    bool is_noisy_sample_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleCloudAiplatformV1FeatureNoiseSigma m_feature_noise_sigma;
    bool m_feature_noise_sigma_isSet;
    bool m_feature_noise_sigma_isValid;

    float m_noise_sigma;
    bool m_noise_sigma_isSet;
    bool m_noise_sigma_isValid;

    qint32 m_noisy_sample_count;
    bool m_noisy_sample_count_isSet;
    bool m_noisy_sample_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1SmoothGradConfig)

#endif // OAIGoogleCloudAiplatformV1SmoothGradConfig_H
