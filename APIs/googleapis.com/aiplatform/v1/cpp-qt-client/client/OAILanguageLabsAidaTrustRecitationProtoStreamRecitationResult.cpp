/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult() {
    this->initializeModel();
}

OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::~OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult() {}

void OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::initializeModel() {

    m_dynamic_segment_results_isSet = false;
    m_dynamic_segment_results_isValid = false;

    m_fully_checked_text_index_isSet = false;
    m_fully_checked_text_index_isValid = false;

    m_recitation_action_isSet = false;
    m_recitation_action_isValid = false;

    m_training_segment_results_isSet = false;
    m_training_segment_results_isValid = false;
}

void OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::fromJsonObject(QJsonObject json) {

    m_dynamic_segment_results_isValid = ::OpenAPI::fromJsonValue(m_dynamic_segment_results, json[QString("dynamicSegmentResults")]);
    m_dynamic_segment_results_isSet = !json[QString("dynamicSegmentResults")].isNull() && m_dynamic_segment_results_isValid;

    m_fully_checked_text_index_isValid = ::OpenAPI::fromJsonValue(m_fully_checked_text_index, json[QString("fullyCheckedTextIndex")]);
    m_fully_checked_text_index_isSet = !json[QString("fullyCheckedTextIndex")].isNull() && m_fully_checked_text_index_isValid;

    m_recitation_action_isValid = ::OpenAPI::fromJsonValue(m_recitation_action, json[QString("recitationAction")]);
    m_recitation_action_isSet = !json[QString("recitationAction")].isNull() && m_recitation_action_isValid;

    m_training_segment_results_isValid = ::OpenAPI::fromJsonValue(m_training_segment_results, json[QString("trainingSegmentResults")]);
    m_training_segment_results_isSet = !json[QString("trainingSegmentResults")].isNull() && m_training_segment_results_isValid;
}

QString OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::asJsonObject() const {
    QJsonObject obj;
    if (m_dynamic_segment_results.size() > 0) {
        obj.insert(QString("dynamicSegmentResults"), ::OpenAPI::toJsonValue(m_dynamic_segment_results));
    }
    if (m_fully_checked_text_index_isSet) {
        obj.insert(QString("fullyCheckedTextIndex"), ::OpenAPI::toJsonValue(m_fully_checked_text_index));
    }
    if (m_recitation_action_isSet) {
        obj.insert(QString("recitationAction"), ::OpenAPI::toJsonValue(m_recitation_action));
    }
    if (m_training_segment_results.size() > 0) {
        obj.insert(QString("trainingSegmentResults"), ::OpenAPI::toJsonValue(m_training_segment_results));
    }
    return obj;
}

QList<OAILanguageLabsAidaTrustRecitationProtoSegmentResult> OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::getDynamicSegmentResults() const {
    return m_dynamic_segment_results;
}
void OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::setDynamicSegmentResults(const QList<OAILanguageLabsAidaTrustRecitationProtoSegmentResult> &dynamic_segment_results) {
    m_dynamic_segment_results = dynamic_segment_results;
    m_dynamic_segment_results_isSet = true;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::is_dynamic_segment_results_Set() const{
    return m_dynamic_segment_results_isSet;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::is_dynamic_segment_results_Valid() const{
    return m_dynamic_segment_results_isValid;
}

qint32 OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::getFullyCheckedTextIndex() const {
    return m_fully_checked_text_index;
}
void OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::setFullyCheckedTextIndex(const qint32 &fully_checked_text_index) {
    m_fully_checked_text_index = fully_checked_text_index;
    m_fully_checked_text_index_isSet = true;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::is_fully_checked_text_index_Set() const{
    return m_fully_checked_text_index_isSet;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::is_fully_checked_text_index_Valid() const{
    return m_fully_checked_text_index_isValid;
}

QString OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::getRecitationAction() const {
    return m_recitation_action;
}
void OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::setRecitationAction(const QString &recitation_action) {
    m_recitation_action = recitation_action;
    m_recitation_action_isSet = true;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::is_recitation_action_Set() const{
    return m_recitation_action_isSet;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::is_recitation_action_Valid() const{
    return m_recitation_action_isValid;
}

QList<OAILanguageLabsAidaTrustRecitationProtoSegmentResult> OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::getTrainingSegmentResults() const {
    return m_training_segment_results;
}
void OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::setTrainingSegmentResults(const QList<OAILanguageLabsAidaTrustRecitationProtoSegmentResult> &training_segment_results) {
    m_training_segment_results = training_segment_results;
    m_training_segment_results_isSet = true;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::is_training_segment_results_Set() const{
    return m_training_segment_results_isSet;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::is_training_segment_results_Valid() const{
    return m_training_segment_results_isValid;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dynamic_segment_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_fully_checked_text_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recitation_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_segment_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILanguageLabsAidaTrustRecitationProtoStreamRecitationResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
