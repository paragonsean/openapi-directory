/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1Model.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1Model::OAIGoogleCloudAiplatformV1Model(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1Model::OAIGoogleCloudAiplatformV1Model() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1Model::~OAIGoogleCloudAiplatformV1Model() {}

void OAIGoogleCloudAiplatformV1Model::initializeModel() {

    m_artifact_uri_isSet = false;
    m_artifact_uri_isValid = false;

    m_container_spec_isSet = false;
    m_container_spec_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_stats_isSet = false;
    m_data_stats_isValid = false;

    m_deployed_models_isSet = false;
    m_deployed_models_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_encryption_spec_isSet = false;
    m_encryption_spec_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_explanation_spec_isSet = false;
    m_explanation_spec_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_metadata_artifact_isSet = false;
    m_metadata_artifact_isValid = false;

    m_metadata_schema_uri_isSet = false;
    m_metadata_schema_uri_isValid = false;

    m_model_source_info_isSet = false;
    m_model_source_info_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_original_model_info_isSet = false;
    m_original_model_info_isValid = false;

    m_pipeline_job_isSet = false;
    m_pipeline_job_isValid = false;

    m_predict_schemata_isSet = false;
    m_predict_schemata_isValid = false;

    m_supported_deployment_resources_types_isSet = false;
    m_supported_deployment_resources_types_isValid = false;

    m_supported_export_formats_isSet = false;
    m_supported_export_formats_isValid = false;

    m_supported_input_storage_formats_isSet = false;
    m_supported_input_storage_formats_isValid = false;

    m_supported_output_storage_formats_isSet = false;
    m_supported_output_storage_formats_isValid = false;

    m_training_pipeline_isSet = false;
    m_training_pipeline_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_version_aliases_isSet = false;
    m_version_aliases_isValid = false;

    m_version_create_time_isSet = false;
    m_version_create_time_isValid = false;

    m_version_description_isSet = false;
    m_version_description_isValid = false;

    m_version_id_isSet = false;
    m_version_id_isValid = false;

    m_version_update_time_isSet = false;
    m_version_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1Model::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1Model::fromJsonObject(QJsonObject json) {

    m_artifact_uri_isValid = ::OpenAPI::fromJsonValue(m_artifact_uri, json[QString("artifactUri")]);
    m_artifact_uri_isSet = !json[QString("artifactUri")].isNull() && m_artifact_uri_isValid;

    m_container_spec_isValid = ::OpenAPI::fromJsonValue(m_container_spec, json[QString("containerSpec")]);
    m_container_spec_isSet = !json[QString("containerSpec")].isNull() && m_container_spec_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_stats_isValid = ::OpenAPI::fromJsonValue(m_data_stats, json[QString("dataStats")]);
    m_data_stats_isSet = !json[QString("dataStats")].isNull() && m_data_stats_isValid;

    m_deployed_models_isValid = ::OpenAPI::fromJsonValue(m_deployed_models, json[QString("deployedModels")]);
    m_deployed_models_isSet = !json[QString("deployedModels")].isNull() && m_deployed_models_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_encryption_spec_isValid = ::OpenAPI::fromJsonValue(m_encryption_spec, json[QString("encryptionSpec")]);
    m_encryption_spec_isSet = !json[QString("encryptionSpec")].isNull() && m_encryption_spec_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_explanation_spec_isValid = ::OpenAPI::fromJsonValue(m_explanation_spec, json[QString("explanationSpec")]);
    m_explanation_spec_isSet = !json[QString("explanationSpec")].isNull() && m_explanation_spec_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_metadata_artifact_isValid = ::OpenAPI::fromJsonValue(m_metadata_artifact, json[QString("metadataArtifact")]);
    m_metadata_artifact_isSet = !json[QString("metadataArtifact")].isNull() && m_metadata_artifact_isValid;

    m_metadata_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_metadata_schema_uri, json[QString("metadataSchemaUri")]);
    m_metadata_schema_uri_isSet = !json[QString("metadataSchemaUri")].isNull() && m_metadata_schema_uri_isValid;

    m_model_source_info_isValid = ::OpenAPI::fromJsonValue(m_model_source_info, json[QString("modelSourceInfo")]);
    m_model_source_info_isSet = !json[QString("modelSourceInfo")].isNull() && m_model_source_info_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_original_model_info_isValid = ::OpenAPI::fromJsonValue(m_original_model_info, json[QString("originalModelInfo")]);
    m_original_model_info_isSet = !json[QString("originalModelInfo")].isNull() && m_original_model_info_isValid;

    m_pipeline_job_isValid = ::OpenAPI::fromJsonValue(m_pipeline_job, json[QString("pipelineJob")]);
    m_pipeline_job_isSet = !json[QString("pipelineJob")].isNull() && m_pipeline_job_isValid;

    m_predict_schemata_isValid = ::OpenAPI::fromJsonValue(m_predict_schemata, json[QString("predictSchemata")]);
    m_predict_schemata_isSet = !json[QString("predictSchemata")].isNull() && m_predict_schemata_isValid;

    m_supported_deployment_resources_types_isValid = ::OpenAPI::fromJsonValue(m_supported_deployment_resources_types, json[QString("supportedDeploymentResourcesTypes")]);
    m_supported_deployment_resources_types_isSet = !json[QString("supportedDeploymentResourcesTypes")].isNull() && m_supported_deployment_resources_types_isValid;

    m_supported_export_formats_isValid = ::OpenAPI::fromJsonValue(m_supported_export_formats, json[QString("supportedExportFormats")]);
    m_supported_export_formats_isSet = !json[QString("supportedExportFormats")].isNull() && m_supported_export_formats_isValid;

    m_supported_input_storage_formats_isValid = ::OpenAPI::fromJsonValue(m_supported_input_storage_formats, json[QString("supportedInputStorageFormats")]);
    m_supported_input_storage_formats_isSet = !json[QString("supportedInputStorageFormats")].isNull() && m_supported_input_storage_formats_isValid;

    m_supported_output_storage_formats_isValid = ::OpenAPI::fromJsonValue(m_supported_output_storage_formats, json[QString("supportedOutputStorageFormats")]);
    m_supported_output_storage_formats_isSet = !json[QString("supportedOutputStorageFormats")].isNull() && m_supported_output_storage_formats_isValid;

    m_training_pipeline_isValid = ::OpenAPI::fromJsonValue(m_training_pipeline, json[QString("trainingPipeline")]);
    m_training_pipeline_isSet = !json[QString("trainingPipeline")].isNull() && m_training_pipeline_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_version_aliases_isValid = ::OpenAPI::fromJsonValue(m_version_aliases, json[QString("versionAliases")]);
    m_version_aliases_isSet = !json[QString("versionAliases")].isNull() && m_version_aliases_isValid;

    m_version_create_time_isValid = ::OpenAPI::fromJsonValue(m_version_create_time, json[QString("versionCreateTime")]);
    m_version_create_time_isSet = !json[QString("versionCreateTime")].isNull() && m_version_create_time_isValid;

    m_version_description_isValid = ::OpenAPI::fromJsonValue(m_version_description, json[QString("versionDescription")]);
    m_version_description_isSet = !json[QString("versionDescription")].isNull() && m_version_description_isValid;

    m_version_id_isValid = ::OpenAPI::fromJsonValue(m_version_id, json[QString("versionId")]);
    m_version_id_isSet = !json[QString("versionId")].isNull() && m_version_id_isValid;

    m_version_update_time_isValid = ::OpenAPI::fromJsonValue(m_version_update_time, json[QString("versionUpdateTime")]);
    m_version_update_time_isSet = !json[QString("versionUpdateTime")].isNull() && m_version_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1Model::asJsonObject() const {
    QJsonObject obj;
    if (m_artifact_uri_isSet) {
        obj.insert(QString("artifactUri"), ::OpenAPI::toJsonValue(m_artifact_uri));
    }
    if (m_container_spec.isSet()) {
        obj.insert(QString("containerSpec"), ::OpenAPI::toJsonValue(m_container_spec));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_stats.isSet()) {
        obj.insert(QString("dataStats"), ::OpenAPI::toJsonValue(m_data_stats));
    }
    if (m_deployed_models.size() > 0) {
        obj.insert(QString("deployedModels"), ::OpenAPI::toJsonValue(m_deployed_models));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_encryption_spec.isSet()) {
        obj.insert(QString("encryptionSpec"), ::OpenAPI::toJsonValue(m_encryption_spec));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_explanation_spec.isSet()) {
        obj.insert(QString("explanationSpec"), ::OpenAPI::toJsonValue(m_explanation_spec));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_metadata_isSet) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_metadata_artifact_isSet) {
        obj.insert(QString("metadataArtifact"), ::OpenAPI::toJsonValue(m_metadata_artifact));
    }
    if (m_metadata_schema_uri_isSet) {
        obj.insert(QString("metadataSchemaUri"), ::OpenAPI::toJsonValue(m_metadata_schema_uri));
    }
    if (m_model_source_info.isSet()) {
        obj.insert(QString("modelSourceInfo"), ::OpenAPI::toJsonValue(m_model_source_info));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_original_model_info.isSet()) {
        obj.insert(QString("originalModelInfo"), ::OpenAPI::toJsonValue(m_original_model_info));
    }
    if (m_pipeline_job_isSet) {
        obj.insert(QString("pipelineJob"), ::OpenAPI::toJsonValue(m_pipeline_job));
    }
    if (m_predict_schemata.isSet()) {
        obj.insert(QString("predictSchemata"), ::OpenAPI::toJsonValue(m_predict_schemata));
    }
    if (m_supported_deployment_resources_types.size() > 0) {
        obj.insert(QString("supportedDeploymentResourcesTypes"), ::OpenAPI::toJsonValue(m_supported_deployment_resources_types));
    }
    if (m_supported_export_formats.size() > 0) {
        obj.insert(QString("supportedExportFormats"), ::OpenAPI::toJsonValue(m_supported_export_formats));
    }
    if (m_supported_input_storage_formats.size() > 0) {
        obj.insert(QString("supportedInputStorageFormats"), ::OpenAPI::toJsonValue(m_supported_input_storage_formats));
    }
    if (m_supported_output_storage_formats.size() > 0) {
        obj.insert(QString("supportedOutputStorageFormats"), ::OpenAPI::toJsonValue(m_supported_output_storage_formats));
    }
    if (m_training_pipeline_isSet) {
        obj.insert(QString("trainingPipeline"), ::OpenAPI::toJsonValue(m_training_pipeline));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_version_aliases.size() > 0) {
        obj.insert(QString("versionAliases"), ::OpenAPI::toJsonValue(m_version_aliases));
    }
    if (m_version_create_time_isSet) {
        obj.insert(QString("versionCreateTime"), ::OpenAPI::toJsonValue(m_version_create_time));
    }
    if (m_version_description_isSet) {
        obj.insert(QString("versionDescription"), ::OpenAPI::toJsonValue(m_version_description));
    }
    if (m_version_id_isSet) {
        obj.insert(QString("versionId"), ::OpenAPI::toJsonValue(m_version_id));
    }
    if (m_version_update_time_isSet) {
        obj.insert(QString("versionUpdateTime"), ::OpenAPI::toJsonValue(m_version_update_time));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1Model::getArtifactUri() const {
    return m_artifact_uri;
}
void OAIGoogleCloudAiplatformV1Model::setArtifactUri(const QString &artifact_uri) {
    m_artifact_uri = artifact_uri;
    m_artifact_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_artifact_uri_Set() const{
    return m_artifact_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_artifact_uri_Valid() const{
    return m_artifact_uri_isValid;
}

OAIGoogleCloudAiplatformV1ModelContainerSpec OAIGoogleCloudAiplatformV1Model::getContainerSpec() const {
    return m_container_spec;
}
void OAIGoogleCloudAiplatformV1Model::setContainerSpec(const OAIGoogleCloudAiplatformV1ModelContainerSpec &container_spec) {
    m_container_spec = container_spec;
    m_container_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_container_spec_Set() const{
    return m_container_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_container_spec_Valid() const{
    return m_container_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1Model::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudAiplatformV1ModelDataStats OAIGoogleCloudAiplatformV1Model::getDataStats() const {
    return m_data_stats;
}
void OAIGoogleCloudAiplatformV1Model::setDataStats(const OAIGoogleCloudAiplatformV1ModelDataStats &data_stats) {
    m_data_stats = data_stats;
    m_data_stats_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_data_stats_Set() const{
    return m_data_stats_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_data_stats_Valid() const{
    return m_data_stats_isValid;
}

QList<OAIGoogleCloudAiplatformV1DeployedModelRef> OAIGoogleCloudAiplatformV1Model::getDeployedModels() const {
    return m_deployed_models;
}
void OAIGoogleCloudAiplatformV1Model::setDeployedModels(const QList<OAIGoogleCloudAiplatformV1DeployedModelRef> &deployed_models) {
    m_deployed_models = deployed_models;
    m_deployed_models_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_deployed_models_Set() const{
    return m_deployed_models_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_deployed_models_Valid() const{
    return m_deployed_models_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getDescription() const {
    return m_description;
}
void OAIGoogleCloudAiplatformV1Model::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1Model::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudAiplatformV1EncryptionSpec OAIGoogleCloudAiplatformV1Model::getEncryptionSpec() const {
    return m_encryption_spec;
}
void OAIGoogleCloudAiplatformV1Model::setEncryptionSpec(const OAIGoogleCloudAiplatformV1EncryptionSpec &encryption_spec) {
    m_encryption_spec = encryption_spec;
    m_encryption_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_encryption_spec_Set() const{
    return m_encryption_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_encryption_spec_Valid() const{
    return m_encryption_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1Model::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIGoogleCloudAiplatformV1ExplanationSpec OAIGoogleCloudAiplatformV1Model::getExplanationSpec() const {
    return m_explanation_spec;
}
void OAIGoogleCloudAiplatformV1Model::setExplanationSpec(const OAIGoogleCloudAiplatformV1ExplanationSpec &explanation_spec) {
    m_explanation_spec = explanation_spec;
    m_explanation_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_explanation_spec_Set() const{
    return m_explanation_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_explanation_spec_Valid() const{
    return m_explanation_spec_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1Model::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1Model::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_labels_Valid() const{
    return m_labels_isValid;
}

QJsonValue OAIGoogleCloudAiplatformV1Model::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudAiplatformV1Model::setMetadata(const QJsonValue &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getMetadataArtifact() const {
    return m_metadata_artifact;
}
void OAIGoogleCloudAiplatformV1Model::setMetadataArtifact(const QString &metadata_artifact) {
    m_metadata_artifact = metadata_artifact;
    m_metadata_artifact_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_metadata_artifact_Set() const{
    return m_metadata_artifact_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_metadata_artifact_Valid() const{
    return m_metadata_artifact_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getMetadataSchemaUri() const {
    return m_metadata_schema_uri;
}
void OAIGoogleCloudAiplatformV1Model::setMetadataSchemaUri(const QString &metadata_schema_uri) {
    m_metadata_schema_uri = metadata_schema_uri;
    m_metadata_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_metadata_schema_uri_Set() const{
    return m_metadata_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_metadata_schema_uri_Valid() const{
    return m_metadata_schema_uri_isValid;
}

OAIGoogleCloudAiplatformV1ModelSourceInfo OAIGoogleCloudAiplatformV1Model::getModelSourceInfo() const {
    return m_model_source_info;
}
void OAIGoogleCloudAiplatformV1Model::setModelSourceInfo(const OAIGoogleCloudAiplatformV1ModelSourceInfo &model_source_info) {
    m_model_source_info = model_source_info;
    m_model_source_info_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_model_source_info_Set() const{
    return m_model_source_info_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_model_source_info_Valid() const{
    return m_model_source_info_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1Model::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudAiplatformV1ModelOriginalModelInfo OAIGoogleCloudAiplatformV1Model::getOriginalModelInfo() const {
    return m_original_model_info;
}
void OAIGoogleCloudAiplatformV1Model::setOriginalModelInfo(const OAIGoogleCloudAiplatformV1ModelOriginalModelInfo &original_model_info) {
    m_original_model_info = original_model_info;
    m_original_model_info_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_original_model_info_Set() const{
    return m_original_model_info_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_original_model_info_Valid() const{
    return m_original_model_info_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getPipelineJob() const {
    return m_pipeline_job;
}
void OAIGoogleCloudAiplatformV1Model::setPipelineJob(const QString &pipeline_job) {
    m_pipeline_job = pipeline_job;
    m_pipeline_job_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_pipeline_job_Set() const{
    return m_pipeline_job_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_pipeline_job_Valid() const{
    return m_pipeline_job_isValid;
}

OAIGoogleCloudAiplatformV1PredictSchemata OAIGoogleCloudAiplatformV1Model::getPredictSchemata() const {
    return m_predict_schemata;
}
void OAIGoogleCloudAiplatformV1Model::setPredictSchemata(const OAIGoogleCloudAiplatformV1PredictSchemata &predict_schemata) {
    m_predict_schemata = predict_schemata;
    m_predict_schemata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_predict_schemata_Set() const{
    return m_predict_schemata_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_predict_schemata_Valid() const{
    return m_predict_schemata_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1Model::getSupportedDeploymentResourcesTypes() const {
    return m_supported_deployment_resources_types;
}
void OAIGoogleCloudAiplatformV1Model::setSupportedDeploymentResourcesTypes(const QList<QString> &supported_deployment_resources_types) {
    m_supported_deployment_resources_types = supported_deployment_resources_types;
    m_supported_deployment_resources_types_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_supported_deployment_resources_types_Set() const{
    return m_supported_deployment_resources_types_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_supported_deployment_resources_types_Valid() const{
    return m_supported_deployment_resources_types_isValid;
}

QList<OAIGoogleCloudAiplatformV1ModelExportFormat> OAIGoogleCloudAiplatformV1Model::getSupportedExportFormats() const {
    return m_supported_export_formats;
}
void OAIGoogleCloudAiplatformV1Model::setSupportedExportFormats(const QList<OAIGoogleCloudAiplatformV1ModelExportFormat> &supported_export_formats) {
    m_supported_export_formats = supported_export_formats;
    m_supported_export_formats_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_supported_export_formats_Set() const{
    return m_supported_export_formats_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_supported_export_formats_Valid() const{
    return m_supported_export_formats_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1Model::getSupportedInputStorageFormats() const {
    return m_supported_input_storage_formats;
}
void OAIGoogleCloudAiplatformV1Model::setSupportedInputStorageFormats(const QList<QString> &supported_input_storage_formats) {
    m_supported_input_storage_formats = supported_input_storage_formats;
    m_supported_input_storage_formats_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_supported_input_storage_formats_Set() const{
    return m_supported_input_storage_formats_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_supported_input_storage_formats_Valid() const{
    return m_supported_input_storage_formats_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1Model::getSupportedOutputStorageFormats() const {
    return m_supported_output_storage_formats;
}
void OAIGoogleCloudAiplatformV1Model::setSupportedOutputStorageFormats(const QList<QString> &supported_output_storage_formats) {
    m_supported_output_storage_formats = supported_output_storage_formats;
    m_supported_output_storage_formats_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_supported_output_storage_formats_Set() const{
    return m_supported_output_storage_formats_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_supported_output_storage_formats_Valid() const{
    return m_supported_output_storage_formats_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getTrainingPipeline() const {
    return m_training_pipeline;
}
void OAIGoogleCloudAiplatformV1Model::setTrainingPipeline(const QString &training_pipeline) {
    m_training_pipeline = training_pipeline;
    m_training_pipeline_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_training_pipeline_Set() const{
    return m_training_pipeline_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_training_pipeline_Valid() const{
    return m_training_pipeline_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1Model::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_update_time_Valid() const{
    return m_update_time_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1Model::getVersionAliases() const {
    return m_version_aliases;
}
void OAIGoogleCloudAiplatformV1Model::setVersionAliases(const QList<QString> &version_aliases) {
    m_version_aliases = version_aliases;
    m_version_aliases_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_aliases_Set() const{
    return m_version_aliases_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_aliases_Valid() const{
    return m_version_aliases_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getVersionCreateTime() const {
    return m_version_create_time;
}
void OAIGoogleCloudAiplatformV1Model::setVersionCreateTime(const QString &version_create_time) {
    m_version_create_time = version_create_time;
    m_version_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_create_time_Set() const{
    return m_version_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_create_time_Valid() const{
    return m_version_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getVersionDescription() const {
    return m_version_description;
}
void OAIGoogleCloudAiplatformV1Model::setVersionDescription(const QString &version_description) {
    m_version_description = version_description;
    m_version_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_description_Set() const{
    return m_version_description_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_description_Valid() const{
    return m_version_description_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getVersionId() const {
    return m_version_id;
}
void OAIGoogleCloudAiplatformV1Model::setVersionId(const QString &version_id) {
    m_version_id = version_id;
    m_version_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_id_Set() const{
    return m_version_id_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_id_Valid() const{
    return m_version_id_isValid;
}

QString OAIGoogleCloudAiplatformV1Model::getVersionUpdateTime() const {
    return m_version_update_time;
}
void OAIGoogleCloudAiplatformV1Model::setVersionUpdateTime(const QString &version_update_time) {
    m_version_update_time = version_update_time;
    m_version_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_update_time_Set() const{
    return m_version_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Model::is_version_update_time_Valid() const{
    return m_version_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1Model::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_artifact_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployed_models.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_explanation_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_artifact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_source_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_model_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pipeline_job_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_predict_schemata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_deployment_resources_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_export_formats.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_input_storage_formats.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_supported_output_storage_formats.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_training_pipeline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_aliases.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1Model::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
