/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::~OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback() {}

void OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::initializeModel() {

    m_block_reason_isSet = false;
    m_block_reason_isValid = false;

    m_block_reason_message_isSet = false;
    m_block_reason_message_isValid = false;

    m_safety_ratings_isSet = false;
    m_safety_ratings_isValid = false;
}

void OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::fromJsonObject(QJsonObject json) {

    m_block_reason_isValid = ::OpenAPI::fromJsonValue(m_block_reason, json[QString("blockReason")]);
    m_block_reason_isSet = !json[QString("blockReason")].isNull() && m_block_reason_isValid;

    m_block_reason_message_isValid = ::OpenAPI::fromJsonValue(m_block_reason_message, json[QString("blockReasonMessage")]);
    m_block_reason_message_isSet = !json[QString("blockReasonMessage")].isNull() && m_block_reason_message_isValid;

    m_safety_ratings_isValid = ::OpenAPI::fromJsonValue(m_safety_ratings, json[QString("safetyRatings")]);
    m_safety_ratings_isSet = !json[QString("safetyRatings")].isNull() && m_safety_ratings_isValid;
}

QString OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::asJsonObject() const {
    QJsonObject obj;
    if (m_block_reason_isSet) {
        obj.insert(QString("blockReason"), ::OpenAPI::toJsonValue(m_block_reason));
    }
    if (m_block_reason_message_isSet) {
        obj.insert(QString("blockReasonMessage"), ::OpenAPI::toJsonValue(m_block_reason_message));
    }
    if (m_safety_ratings.size() > 0) {
        obj.insert(QString("safetyRatings"), ::OpenAPI::toJsonValue(m_safety_ratings));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::getBlockReason() const {
    return m_block_reason;
}
void OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::setBlockReason(const QString &block_reason) {
    m_block_reason = block_reason;
    m_block_reason_isSet = true;
}

bool OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::is_block_reason_Set() const{
    return m_block_reason_isSet;
}

bool OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::is_block_reason_Valid() const{
    return m_block_reason_isValid;
}

QString OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::getBlockReasonMessage() const {
    return m_block_reason_message;
}
void OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::setBlockReasonMessage(const QString &block_reason_message) {
    m_block_reason_message = block_reason_message;
    m_block_reason_message_isSet = true;
}

bool OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::is_block_reason_message_Set() const{
    return m_block_reason_message_isSet;
}

bool OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::is_block_reason_message_Valid() const{
    return m_block_reason_message_isValid;
}

QList<OAIGoogleCloudAiplatformV1SafetyRating> OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::getSafetyRatings() const {
    return m_safety_ratings;
}
void OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::setSafetyRatings(const QList<OAIGoogleCloudAiplatformV1SafetyRating> &safety_ratings) {
    m_safety_ratings = safety_ratings;
    m_safety_ratings_isSet = true;
}

bool OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::is_safety_ratings_Set() const{
    return m_safety_ratings_isSet;
}

bool OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::is_safety_ratings_Valid() const{
    return m_safety_ratings_isValid;
}

bool OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_block_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_block_reason_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_safety_ratings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1GenerateContentResponsePromptFeedback::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
