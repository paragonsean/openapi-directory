/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1PipelineTaskDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1PipelineTaskDetail::OAIGoogleCloudAiplatformV1PipelineTaskDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1PipelineTaskDetail::OAIGoogleCloudAiplatformV1PipelineTaskDetail() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1PipelineTaskDetail::~OAIGoogleCloudAiplatformV1PipelineTaskDetail() {}

void OAIGoogleCloudAiplatformV1PipelineTaskDetail::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_error_isSet = false;
    m_error_isValid = false;

    m_execution_isSet = false;
    m_execution_isValid = false;

    m_executor_detail_isSet = false;
    m_executor_detail_isValid = false;

    m_inputs_isSet = false;
    m_inputs_isValid = false;

    m_outputs_isSet = false;
    m_outputs_isValid = false;

    m_parent_task_id_isSet = false;
    m_parent_task_id_isValid = false;

    m_pipeline_task_status_isSet = false;
    m_pipeline_task_status_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_task_id_isSet = false;
    m_task_id_isValid = false;

    m_task_name_isSet = false;
    m_task_name_isValid = false;
}

void OAIGoogleCloudAiplatformV1PipelineTaskDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1PipelineTaskDetail::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_execution_isValid = ::OpenAPI::fromJsonValue(m_execution, json[QString("execution")]);
    m_execution_isSet = !json[QString("execution")].isNull() && m_execution_isValid;

    m_executor_detail_isValid = ::OpenAPI::fromJsonValue(m_executor_detail, json[QString("executorDetail")]);
    m_executor_detail_isSet = !json[QString("executorDetail")].isNull() && m_executor_detail_isValid;

    m_inputs_isValid = ::OpenAPI::fromJsonValue(m_inputs, json[QString("inputs")]);
    m_inputs_isSet = !json[QString("inputs")].isNull() && m_inputs_isValid;

    m_outputs_isValid = ::OpenAPI::fromJsonValue(m_outputs, json[QString("outputs")]);
    m_outputs_isSet = !json[QString("outputs")].isNull() && m_outputs_isValid;

    m_parent_task_id_isValid = ::OpenAPI::fromJsonValue(m_parent_task_id, json[QString("parentTaskId")]);
    m_parent_task_id_isSet = !json[QString("parentTaskId")].isNull() && m_parent_task_id_isValid;

    m_pipeline_task_status_isValid = ::OpenAPI::fromJsonValue(m_pipeline_task_status, json[QString("pipelineTaskStatus")]);
    m_pipeline_task_status_isSet = !json[QString("pipelineTaskStatus")].isNull() && m_pipeline_task_status_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_task_id_isValid = ::OpenAPI::fromJsonValue(m_task_id, json[QString("taskId")]);
    m_task_id_isSet = !json[QString("taskId")].isNull() && m_task_id_isValid;

    m_task_name_isValid = ::OpenAPI::fromJsonValue(m_task_name, json[QString("taskName")]);
    m_task_name_isSet = !json[QString("taskName")].isNull() && m_task_name_isValid;
}

QString OAIGoogleCloudAiplatformV1PipelineTaskDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1PipelineTaskDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_error.isSet()) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_execution.isSet()) {
        obj.insert(QString("execution"), ::OpenAPI::toJsonValue(m_execution));
    }
    if (m_executor_detail.isSet()) {
        obj.insert(QString("executorDetail"), ::OpenAPI::toJsonValue(m_executor_detail));
    }
    if (m_inputs.size() > 0) {
        obj.insert(QString("inputs"), ::OpenAPI::toJsonValue(m_inputs));
    }
    if (m_outputs.size() > 0) {
        obj.insert(QString("outputs"), ::OpenAPI::toJsonValue(m_outputs));
    }
    if (m_parent_task_id_isSet) {
        obj.insert(QString("parentTaskId"), ::OpenAPI::toJsonValue(m_parent_task_id));
    }
    if (m_pipeline_task_status.size() > 0) {
        obj.insert(QString("pipelineTaskStatus"), ::OpenAPI::toJsonValue(m_pipeline_task_status));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_task_id_isSet) {
        obj.insert(QString("taskId"), ::OpenAPI::toJsonValue(m_task_id));
    }
    if (m_task_name_isSet) {
        obj.insert(QString("taskName"), ::OpenAPI::toJsonValue(m_task_name));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1PipelineTaskDetail::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1PipelineTaskDetail::getEndTime() const {
    return m_end_time;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_end_time_Valid() const{
    return m_end_time_isValid;
}

OAIGoogleRpcStatus OAIGoogleCloudAiplatformV1PipelineTaskDetail::getError() const {
    return m_error;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setError(const OAIGoogleRpcStatus &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_error_Set() const{
    return m_error_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_error_Valid() const{
    return m_error_isValid;
}

OAIGoogleCloudAiplatformV1Execution OAIGoogleCloudAiplatformV1PipelineTaskDetail::getExecution() const {
    return m_execution;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setExecution(const OAIGoogleCloudAiplatformV1Execution &execution) {
    m_execution = execution;
    m_execution_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_execution_Set() const{
    return m_execution_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_execution_Valid() const{
    return m_execution_isValid;
}

OAIGoogleCloudAiplatformV1PipelineTaskExecutorDetail OAIGoogleCloudAiplatformV1PipelineTaskDetail::getExecutorDetail() const {
    return m_executor_detail;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setExecutorDetail(const OAIGoogleCloudAiplatformV1PipelineTaskExecutorDetail &executor_detail) {
    m_executor_detail = executor_detail;
    m_executor_detail_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_executor_detail_Set() const{
    return m_executor_detail_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_executor_detail_Valid() const{
    return m_executor_detail_isValid;
}

QMap<QString, OAIGoogleCloudAiplatformV1PipelineTaskDetailArtifactList> OAIGoogleCloudAiplatformV1PipelineTaskDetail::getInputs() const {
    return m_inputs;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setInputs(const QMap<QString, OAIGoogleCloudAiplatformV1PipelineTaskDetailArtifactList> &inputs) {
    m_inputs = inputs;
    m_inputs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_inputs_Set() const{
    return m_inputs_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_inputs_Valid() const{
    return m_inputs_isValid;
}

QMap<QString, OAIGoogleCloudAiplatformV1PipelineTaskDetailArtifactList> OAIGoogleCloudAiplatformV1PipelineTaskDetail::getOutputs() const {
    return m_outputs;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setOutputs(const QMap<QString, OAIGoogleCloudAiplatformV1PipelineTaskDetailArtifactList> &outputs) {
    m_outputs = outputs;
    m_outputs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_outputs_Set() const{
    return m_outputs_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_outputs_Valid() const{
    return m_outputs_isValid;
}

QString OAIGoogleCloudAiplatformV1PipelineTaskDetail::getParentTaskId() const {
    return m_parent_task_id;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setParentTaskId(const QString &parent_task_id) {
    m_parent_task_id = parent_task_id;
    m_parent_task_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_parent_task_id_Set() const{
    return m_parent_task_id_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_parent_task_id_Valid() const{
    return m_parent_task_id_isValid;
}

QList<OAIGoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus> OAIGoogleCloudAiplatformV1PipelineTaskDetail::getPipelineTaskStatus() const {
    return m_pipeline_task_status;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setPipelineTaskStatus(const QList<OAIGoogleCloudAiplatformV1PipelineTaskDetailPipelineTaskStatus> &pipeline_task_status) {
    m_pipeline_task_status = pipeline_task_status;
    m_pipeline_task_status_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_pipeline_task_status_Set() const{
    return m_pipeline_task_status_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_pipeline_task_status_Valid() const{
    return m_pipeline_task_status_isValid;
}

QString OAIGoogleCloudAiplatformV1PipelineTaskDetail::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAIGoogleCloudAiplatformV1PipelineTaskDetail::getState() const {
    return m_state;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGoogleCloudAiplatformV1PipelineTaskDetail::getTaskId() const {
    return m_task_id;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setTaskId(const QString &task_id) {
    m_task_id = task_id;
    m_task_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_task_id_Set() const{
    return m_task_id_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_task_id_Valid() const{
    return m_task_id_isValid;
}

QString OAIGoogleCloudAiplatformV1PipelineTaskDetail::getTaskName() const {
    return m_task_name;
}
void OAIGoogleCloudAiplatformV1PipelineTaskDetail::setTaskName(const QString &task_name) {
    m_task_name = task_name;
    m_task_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_task_name_Set() const{
    return m_task_name_isSet;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::is_task_name_Valid() const{
    return m_task_name_isValid;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_executor_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inputs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_outputs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_task_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pipeline_task_status.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_task_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_task_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1PipelineTaskDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
