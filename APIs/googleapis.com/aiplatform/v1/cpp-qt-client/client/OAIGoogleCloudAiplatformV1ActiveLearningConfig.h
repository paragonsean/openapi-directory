/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1ActiveLearningConfig.h
 *
 * Parameters that configure the active learning pipeline. Active learning will label the data incrementally by several iterations. For every iteration, it will select a batch of data based on the sampling strategy.
 */

#ifndef OAIGoogleCloudAiplatformV1ActiveLearningConfig_H
#define OAIGoogleCloudAiplatformV1ActiveLearningConfig_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1SampleConfig.h"
#include "OAIGoogleCloudAiplatformV1TrainingConfig.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1SampleConfig;
class OAIGoogleCloudAiplatformV1TrainingConfig;

class OAIGoogleCloudAiplatformV1ActiveLearningConfig : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1ActiveLearningConfig();
    OAIGoogleCloudAiplatformV1ActiveLearningConfig(QString json);
    ~OAIGoogleCloudAiplatformV1ActiveLearningConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMaxDataItemCount() const;
    void setMaxDataItemCount(const QString &max_data_item_count);
    bool is_max_data_item_count_Set() const;
    bool is_max_data_item_count_Valid() const;

    qint32 getMaxDataItemPercentage() const;
    void setMaxDataItemPercentage(const qint32 &max_data_item_percentage);
    bool is_max_data_item_percentage_Set() const;
    bool is_max_data_item_percentage_Valid() const;

    OAIGoogleCloudAiplatformV1SampleConfig getSampleConfig() const;
    void setSampleConfig(const OAIGoogleCloudAiplatformV1SampleConfig &sample_config);
    bool is_sample_config_Set() const;
    bool is_sample_config_Valid() const;

    OAIGoogleCloudAiplatformV1TrainingConfig getTrainingConfig() const;
    void setTrainingConfig(const OAIGoogleCloudAiplatformV1TrainingConfig &training_config);
    bool is_training_config_Set() const;
    bool is_training_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_max_data_item_count;
    bool m_max_data_item_count_isSet;
    bool m_max_data_item_count_isValid;

    qint32 m_max_data_item_percentage;
    bool m_max_data_item_percentage_isSet;
    bool m_max_data_item_percentage_isValid;

    OAIGoogleCloudAiplatformV1SampleConfig m_sample_config;
    bool m_sample_config_isSet;
    bool m_sample_config_isValid;

    OAIGoogleCloudAiplatformV1TrainingConfig m_training_config;
    bool m_training_config_isSet;
    bool m_training_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1ActiveLearningConfig)

#endif // OAIGoogleCloudAiplatformV1ActiveLearningConfig_H
