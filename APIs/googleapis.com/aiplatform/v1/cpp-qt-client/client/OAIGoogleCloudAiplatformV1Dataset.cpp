/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1Dataset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1Dataset::OAIGoogleCloudAiplatformV1Dataset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1Dataset::OAIGoogleCloudAiplatformV1Dataset() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1Dataset::~OAIGoogleCloudAiplatformV1Dataset() {}

void OAIGoogleCloudAiplatformV1Dataset::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_item_count_isSet = false;
    m_data_item_count_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_encryption_spec_isSet = false;
    m_encryption_spec_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_metadata_artifact_isSet = false;
    m_metadata_artifact_isValid = false;

    m_metadata_schema_uri_isSet = false;
    m_metadata_schema_uri_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_saved_queries_isSet = false;
    m_saved_queries_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1Dataset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1Dataset::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_item_count_isValid = ::OpenAPI::fromJsonValue(m_data_item_count, json[QString("dataItemCount")]);
    m_data_item_count_isSet = !json[QString("dataItemCount")].isNull() && m_data_item_count_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_encryption_spec_isValid = ::OpenAPI::fromJsonValue(m_encryption_spec, json[QString("encryptionSpec")]);
    m_encryption_spec_isSet = !json[QString("encryptionSpec")].isNull() && m_encryption_spec_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_metadata_artifact_isValid = ::OpenAPI::fromJsonValue(m_metadata_artifact, json[QString("metadataArtifact")]);
    m_metadata_artifact_isSet = !json[QString("metadataArtifact")].isNull() && m_metadata_artifact_isValid;

    m_metadata_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_metadata_schema_uri, json[QString("metadataSchemaUri")]);
    m_metadata_schema_uri_isSet = !json[QString("metadataSchemaUri")].isNull() && m_metadata_schema_uri_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_saved_queries_isValid = ::OpenAPI::fromJsonValue(m_saved_queries, json[QString("savedQueries")]);
    m_saved_queries_isSet = !json[QString("savedQueries")].isNull() && m_saved_queries_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1Dataset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1Dataset::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_item_count_isSet) {
        obj.insert(QString("dataItemCount"), ::OpenAPI::toJsonValue(m_data_item_count));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_encryption_spec.isSet()) {
        obj.insert(QString("encryptionSpec"), ::OpenAPI::toJsonValue(m_encryption_spec));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_metadata_isSet) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_metadata_artifact_isSet) {
        obj.insert(QString("metadataArtifact"), ::OpenAPI::toJsonValue(m_metadata_artifact));
    }
    if (m_metadata_schema_uri_isSet) {
        obj.insert(QString("metadataSchemaUri"), ::OpenAPI::toJsonValue(m_metadata_schema_uri));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_saved_queries.size() > 0) {
        obj.insert(QString("savedQueries"), ::OpenAPI::toJsonValue(m_saved_queries));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1Dataset::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1Dataset::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1Dataset::getDataItemCount() const {
    return m_data_item_count;
}
void OAIGoogleCloudAiplatformV1Dataset::setDataItemCount(const QString &data_item_count) {
    m_data_item_count = data_item_count;
    m_data_item_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_data_item_count_Set() const{
    return m_data_item_count_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_data_item_count_Valid() const{
    return m_data_item_count_isValid;
}

QString OAIGoogleCloudAiplatformV1Dataset::getDescription() const {
    return m_description;
}
void OAIGoogleCloudAiplatformV1Dataset::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudAiplatformV1Dataset::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1Dataset::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudAiplatformV1EncryptionSpec OAIGoogleCloudAiplatformV1Dataset::getEncryptionSpec() const {
    return m_encryption_spec;
}
void OAIGoogleCloudAiplatformV1Dataset::setEncryptionSpec(const OAIGoogleCloudAiplatformV1EncryptionSpec &encryption_spec) {
    m_encryption_spec = encryption_spec;
    m_encryption_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_encryption_spec_Set() const{
    return m_encryption_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_encryption_spec_Valid() const{
    return m_encryption_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1Dataset::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1Dataset::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_etag_Valid() const{
    return m_etag_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1Dataset::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1Dataset::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_labels_Valid() const{
    return m_labels_isValid;
}

QJsonValue OAIGoogleCloudAiplatformV1Dataset::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudAiplatformV1Dataset::setMetadata(const QJsonValue &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleCloudAiplatformV1Dataset::getMetadataArtifact() const {
    return m_metadata_artifact;
}
void OAIGoogleCloudAiplatformV1Dataset::setMetadataArtifact(const QString &metadata_artifact) {
    m_metadata_artifact = metadata_artifact;
    m_metadata_artifact_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_metadata_artifact_Set() const{
    return m_metadata_artifact_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_metadata_artifact_Valid() const{
    return m_metadata_artifact_isValid;
}

QString OAIGoogleCloudAiplatformV1Dataset::getMetadataSchemaUri() const {
    return m_metadata_schema_uri;
}
void OAIGoogleCloudAiplatformV1Dataset::setMetadataSchemaUri(const QString &metadata_schema_uri) {
    m_metadata_schema_uri = metadata_schema_uri;
    m_metadata_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_metadata_schema_uri_Set() const{
    return m_metadata_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_metadata_schema_uri_Valid() const{
    return m_metadata_schema_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1Dataset::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1Dataset::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIGoogleCloudAiplatformV1SavedQuery> OAIGoogleCloudAiplatformV1Dataset::getSavedQueries() const {
    return m_saved_queries;
}
void OAIGoogleCloudAiplatformV1Dataset::setSavedQueries(const QList<OAIGoogleCloudAiplatformV1SavedQuery> &saved_queries) {
    m_saved_queries = saved_queries;
    m_saved_queries_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_saved_queries_Set() const{
    return m_saved_queries_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_saved_queries_Valid() const{
    return m_saved_queries_isValid;
}

QString OAIGoogleCloudAiplatformV1Dataset::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1Dataset::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Dataset::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1Dataset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_item_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_artifact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_saved_queries.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1Dataset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
