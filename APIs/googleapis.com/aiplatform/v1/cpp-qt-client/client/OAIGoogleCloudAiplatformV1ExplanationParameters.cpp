/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1ExplanationParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1ExplanationParameters::OAIGoogleCloudAiplatformV1ExplanationParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1ExplanationParameters::OAIGoogleCloudAiplatformV1ExplanationParameters() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1ExplanationParameters::~OAIGoogleCloudAiplatformV1ExplanationParameters() {}

void OAIGoogleCloudAiplatformV1ExplanationParameters::initializeModel() {

    m_examples_isSet = false;
    m_examples_isValid = false;

    m_integrated_gradients_attribution_isSet = false;
    m_integrated_gradients_attribution_isValid = false;

    m_output_indices_isSet = false;
    m_output_indices_isValid = false;

    m_sampled_shapley_attribution_isSet = false;
    m_sampled_shapley_attribution_isValid = false;

    m_top_k_isSet = false;
    m_top_k_isValid = false;

    m_xrai_attribution_isSet = false;
    m_xrai_attribution_isValid = false;
}

void OAIGoogleCloudAiplatformV1ExplanationParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1ExplanationParameters::fromJsonObject(QJsonObject json) {

    m_examples_isValid = ::OpenAPI::fromJsonValue(m_examples, json[QString("examples")]);
    m_examples_isSet = !json[QString("examples")].isNull() && m_examples_isValid;

    m_integrated_gradients_attribution_isValid = ::OpenAPI::fromJsonValue(m_integrated_gradients_attribution, json[QString("integratedGradientsAttribution")]);
    m_integrated_gradients_attribution_isSet = !json[QString("integratedGradientsAttribution")].isNull() && m_integrated_gradients_attribution_isValid;

    m_output_indices_isValid = ::OpenAPI::fromJsonValue(m_output_indices, json[QString("outputIndices")]);
    m_output_indices_isSet = !json[QString("outputIndices")].isNull() && m_output_indices_isValid;

    m_sampled_shapley_attribution_isValid = ::OpenAPI::fromJsonValue(m_sampled_shapley_attribution, json[QString("sampledShapleyAttribution")]);
    m_sampled_shapley_attribution_isSet = !json[QString("sampledShapleyAttribution")].isNull() && m_sampled_shapley_attribution_isValid;

    m_top_k_isValid = ::OpenAPI::fromJsonValue(m_top_k, json[QString("topK")]);
    m_top_k_isSet = !json[QString("topK")].isNull() && m_top_k_isValid;

    m_xrai_attribution_isValid = ::OpenAPI::fromJsonValue(m_xrai_attribution, json[QString("xraiAttribution")]);
    m_xrai_attribution_isSet = !json[QString("xraiAttribution")].isNull() && m_xrai_attribution_isValid;
}

QString OAIGoogleCloudAiplatformV1ExplanationParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1ExplanationParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_examples.isSet()) {
        obj.insert(QString("examples"), ::OpenAPI::toJsonValue(m_examples));
    }
    if (m_integrated_gradients_attribution.isSet()) {
        obj.insert(QString("integratedGradientsAttribution"), ::OpenAPI::toJsonValue(m_integrated_gradients_attribution));
    }
    if (m_output_indices.size() > 0) {
        obj.insert(QString("outputIndices"), ::OpenAPI::toJsonValue(m_output_indices));
    }
    if (m_sampled_shapley_attribution.isSet()) {
        obj.insert(QString("sampledShapleyAttribution"), ::OpenAPI::toJsonValue(m_sampled_shapley_attribution));
    }
    if (m_top_k_isSet) {
        obj.insert(QString("topK"), ::OpenAPI::toJsonValue(m_top_k));
    }
    if (m_xrai_attribution.isSet()) {
        obj.insert(QString("xraiAttribution"), ::OpenAPI::toJsonValue(m_xrai_attribution));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1Examples OAIGoogleCloudAiplatformV1ExplanationParameters::getExamples() const {
    return m_examples;
}
void OAIGoogleCloudAiplatformV1ExplanationParameters::setExamples(const OAIGoogleCloudAiplatformV1Examples &examples) {
    m_examples = examples;
    m_examples_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_examples_Set() const{
    return m_examples_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_examples_Valid() const{
    return m_examples_isValid;
}

OAIGoogleCloudAiplatformV1IntegratedGradientsAttribution OAIGoogleCloudAiplatformV1ExplanationParameters::getIntegratedGradientsAttribution() const {
    return m_integrated_gradients_attribution;
}
void OAIGoogleCloudAiplatformV1ExplanationParameters::setIntegratedGradientsAttribution(const OAIGoogleCloudAiplatformV1IntegratedGradientsAttribution &integrated_gradients_attribution) {
    m_integrated_gradients_attribution = integrated_gradients_attribution;
    m_integrated_gradients_attribution_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_integrated_gradients_attribution_Set() const{
    return m_integrated_gradients_attribution_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_integrated_gradients_attribution_Valid() const{
    return m_integrated_gradients_attribution_isValid;
}

QList<QJsonValue> OAIGoogleCloudAiplatformV1ExplanationParameters::getOutputIndices() const {
    return m_output_indices;
}
void OAIGoogleCloudAiplatformV1ExplanationParameters::setOutputIndices(const QList<QJsonValue> &output_indices) {
    m_output_indices = output_indices;
    m_output_indices_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_output_indices_Set() const{
    return m_output_indices_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_output_indices_Valid() const{
    return m_output_indices_isValid;
}

OAIGoogleCloudAiplatformV1SampledShapleyAttribution OAIGoogleCloudAiplatformV1ExplanationParameters::getSampledShapleyAttribution() const {
    return m_sampled_shapley_attribution;
}
void OAIGoogleCloudAiplatformV1ExplanationParameters::setSampledShapleyAttribution(const OAIGoogleCloudAiplatformV1SampledShapleyAttribution &sampled_shapley_attribution) {
    m_sampled_shapley_attribution = sampled_shapley_attribution;
    m_sampled_shapley_attribution_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_sampled_shapley_attribution_Set() const{
    return m_sampled_shapley_attribution_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_sampled_shapley_attribution_Valid() const{
    return m_sampled_shapley_attribution_isValid;
}

qint32 OAIGoogleCloudAiplatformV1ExplanationParameters::getTopK() const {
    return m_top_k;
}
void OAIGoogleCloudAiplatformV1ExplanationParameters::setTopK(const qint32 &top_k) {
    m_top_k = top_k;
    m_top_k_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_top_k_Set() const{
    return m_top_k_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_top_k_Valid() const{
    return m_top_k_isValid;
}

OAIGoogleCloudAiplatformV1XraiAttribution OAIGoogleCloudAiplatformV1ExplanationParameters::getXraiAttribution() const {
    return m_xrai_attribution;
}
void OAIGoogleCloudAiplatformV1ExplanationParameters::setXraiAttribution(const OAIGoogleCloudAiplatformV1XraiAttribution &xrai_attribution) {
    m_xrai_attribution = xrai_attribution;
    m_xrai_attribution_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_xrai_attribution_Set() const{
    return m_xrai_attribution_isSet;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::is_xrai_attribution_Valid() const{
    return m_xrai_attribution_isValid;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_examples.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_integrated_gradients_attribution.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_indices.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sampled_shapley_attribution.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_top_k_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_xrai_attribution.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1ExplanationParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
