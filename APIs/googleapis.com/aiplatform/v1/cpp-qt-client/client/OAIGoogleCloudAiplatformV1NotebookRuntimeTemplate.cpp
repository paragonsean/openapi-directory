/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::~OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate() {}

void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_persistent_disk_spec_isSet = false;
    m_data_persistent_disk_spec_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_euc_config_isSet = false;
    m_euc_config_isValid = false;

    m_idle_shutdown_config_isSet = false;
    m_idle_shutdown_config_isValid = false;

    m_is_default_isSet = false;
    m_is_default_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_machine_spec_isSet = false;
    m_machine_spec_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_network_spec_isSet = false;
    m_network_spec_isValid = false;

    m_network_tags_isSet = false;
    m_network_tags_isValid = false;

    m_notebook_runtime_type_isSet = false;
    m_notebook_runtime_type_isValid = false;

    m_reservation_affinity_isSet = false;
    m_reservation_affinity_isValid = false;

    m_service_account_isSet = false;
    m_service_account_isValid = false;

    m_shielded_vm_config_isSet = false;
    m_shielded_vm_config_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_persistent_disk_spec_isValid = ::OpenAPI::fromJsonValue(m_data_persistent_disk_spec, json[QString("dataPersistentDiskSpec")]);
    m_data_persistent_disk_spec_isSet = !json[QString("dataPersistentDiskSpec")].isNull() && m_data_persistent_disk_spec_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_euc_config_isValid = ::OpenAPI::fromJsonValue(m_euc_config, json[QString("eucConfig")]);
    m_euc_config_isSet = !json[QString("eucConfig")].isNull() && m_euc_config_isValid;

    m_idle_shutdown_config_isValid = ::OpenAPI::fromJsonValue(m_idle_shutdown_config, json[QString("idleShutdownConfig")]);
    m_idle_shutdown_config_isSet = !json[QString("idleShutdownConfig")].isNull() && m_idle_shutdown_config_isValid;

    m_is_default_isValid = ::OpenAPI::fromJsonValue(m_is_default, json[QString("isDefault")]);
    m_is_default_isSet = !json[QString("isDefault")].isNull() && m_is_default_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_machine_spec_isValid = ::OpenAPI::fromJsonValue(m_machine_spec, json[QString("machineSpec")]);
    m_machine_spec_isSet = !json[QString("machineSpec")].isNull() && m_machine_spec_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_network_spec_isValid = ::OpenAPI::fromJsonValue(m_network_spec, json[QString("networkSpec")]);
    m_network_spec_isSet = !json[QString("networkSpec")].isNull() && m_network_spec_isValid;

    m_network_tags_isValid = ::OpenAPI::fromJsonValue(m_network_tags, json[QString("networkTags")]);
    m_network_tags_isSet = !json[QString("networkTags")].isNull() && m_network_tags_isValid;

    m_notebook_runtime_type_isValid = ::OpenAPI::fromJsonValue(m_notebook_runtime_type, json[QString("notebookRuntimeType")]);
    m_notebook_runtime_type_isSet = !json[QString("notebookRuntimeType")].isNull() && m_notebook_runtime_type_isValid;

    m_reservation_affinity_isValid = ::OpenAPI::fromJsonValue(m_reservation_affinity, json[QString("reservationAffinity")]);
    m_reservation_affinity_isSet = !json[QString("reservationAffinity")].isNull() && m_reservation_affinity_isValid;

    m_service_account_isValid = ::OpenAPI::fromJsonValue(m_service_account, json[QString("serviceAccount")]);
    m_service_account_isSet = !json[QString("serviceAccount")].isNull() && m_service_account_isValid;

    m_shielded_vm_config_isValid = ::OpenAPI::fromJsonValue(m_shielded_vm_config, json[QString("shieldedVmConfig")]);
    m_shielded_vm_config_isSet = !json[QString("shieldedVmConfig")].isNull() && m_shielded_vm_config_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_persistent_disk_spec.isSet()) {
        obj.insert(QString("dataPersistentDiskSpec"), ::OpenAPI::toJsonValue(m_data_persistent_disk_spec));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_euc_config.isSet()) {
        obj.insert(QString("eucConfig"), ::OpenAPI::toJsonValue(m_euc_config));
    }
    if (m_idle_shutdown_config.isSet()) {
        obj.insert(QString("idleShutdownConfig"), ::OpenAPI::toJsonValue(m_idle_shutdown_config));
    }
    if (m_is_default_isSet) {
        obj.insert(QString("isDefault"), ::OpenAPI::toJsonValue(m_is_default));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_machine_spec.isSet()) {
        obj.insert(QString("machineSpec"), ::OpenAPI::toJsonValue(m_machine_spec));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_network_spec.isSet()) {
        obj.insert(QString("networkSpec"), ::OpenAPI::toJsonValue(m_network_spec));
    }
    if (m_network_tags.size() > 0) {
        obj.insert(QString("networkTags"), ::OpenAPI::toJsonValue(m_network_tags));
    }
    if (m_notebook_runtime_type_isSet) {
        obj.insert(QString("notebookRuntimeType"), ::OpenAPI::toJsonValue(m_notebook_runtime_type));
    }
    if (m_reservation_affinity.isSet()) {
        obj.insert(QString("reservationAffinity"), ::OpenAPI::toJsonValue(m_reservation_affinity));
    }
    if (m_service_account_isSet) {
        obj.insert(QString("serviceAccount"), ::OpenAPI::toJsonValue(m_service_account));
    }
    if (m_shielded_vm_config.isSet()) {
        obj.insert(QString("shieldedVmConfig"), ::OpenAPI::toJsonValue(m_shielded_vm_config));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudAiplatformV1PersistentDiskSpec OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getDataPersistentDiskSpec() const {
    return m_data_persistent_disk_spec;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setDataPersistentDiskSpec(const OAIGoogleCloudAiplatformV1PersistentDiskSpec &data_persistent_disk_spec) {
    m_data_persistent_disk_spec = data_persistent_disk_spec;
    m_data_persistent_disk_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_data_persistent_disk_spec_Set() const{
    return m_data_persistent_disk_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_data_persistent_disk_spec_Valid() const{
    return m_data_persistent_disk_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getDescription() const {
    return m_description;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIGoogleCloudAiplatformV1NotebookEucConfig OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getEucConfig() const {
    return m_euc_config;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setEucConfig(const OAIGoogleCloudAiplatformV1NotebookEucConfig &euc_config) {
    m_euc_config = euc_config;
    m_euc_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_euc_config_Set() const{
    return m_euc_config_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_euc_config_Valid() const{
    return m_euc_config_isValid;
}

OAIGoogleCloudAiplatformV1NotebookIdleShutdownConfig OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getIdleShutdownConfig() const {
    return m_idle_shutdown_config;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setIdleShutdownConfig(const OAIGoogleCloudAiplatformV1NotebookIdleShutdownConfig &idle_shutdown_config) {
    m_idle_shutdown_config = idle_shutdown_config;
    m_idle_shutdown_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_idle_shutdown_config_Set() const{
    return m_idle_shutdown_config_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_idle_shutdown_config_Valid() const{
    return m_idle_shutdown_config_isValid;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::isIsDefault() const {
    return m_is_default;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setIsDefault(const bool &is_default) {
    m_is_default = is_default;
    m_is_default_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_is_default_Set() const{
    return m_is_default_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_is_default_Valid() const{
    return m_is_default_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_labels_Valid() const{
    return m_labels_isValid;
}

OAIGoogleCloudAiplatformV1MachineSpec OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getMachineSpec() const {
    return m_machine_spec;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setMachineSpec(const OAIGoogleCloudAiplatformV1MachineSpec &machine_spec) {
    m_machine_spec = machine_spec;
    m_machine_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_machine_spec_Set() const{
    return m_machine_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_machine_spec_Valid() const{
    return m_machine_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_name_Valid() const{
    return m_name_isValid;
}

OAIGoogleCloudAiplatformV1NetworkSpec OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getNetworkSpec() const {
    return m_network_spec;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setNetworkSpec(const OAIGoogleCloudAiplatformV1NetworkSpec &network_spec) {
    m_network_spec = network_spec;
    m_network_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_network_spec_Set() const{
    return m_network_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_network_spec_Valid() const{
    return m_network_spec_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getNetworkTags() const {
    return m_network_tags;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setNetworkTags(const QList<QString> &network_tags) {
    m_network_tags = network_tags;
    m_network_tags_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_network_tags_Set() const{
    return m_network_tags_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_network_tags_Valid() const{
    return m_network_tags_isValid;
}

QString OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getNotebookRuntimeType() const {
    return m_notebook_runtime_type;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setNotebookRuntimeType(const QString &notebook_runtime_type) {
    m_notebook_runtime_type = notebook_runtime_type;
    m_notebook_runtime_type_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_notebook_runtime_type_Set() const{
    return m_notebook_runtime_type_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_notebook_runtime_type_Valid() const{
    return m_notebook_runtime_type_isValid;
}

OAIGoogleCloudAiplatformV1NotebookReservationAffinity OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getReservationAffinity() const {
    return m_reservation_affinity;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setReservationAffinity(const OAIGoogleCloudAiplatformV1NotebookReservationAffinity &reservation_affinity) {
    m_reservation_affinity = reservation_affinity;
    m_reservation_affinity_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_reservation_affinity_Set() const{
    return m_reservation_affinity_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_reservation_affinity_Valid() const{
    return m_reservation_affinity_isValid;
}

QString OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getServiceAccount() const {
    return m_service_account;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setServiceAccount(const QString &service_account) {
    m_service_account = service_account;
    m_service_account_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_service_account_Set() const{
    return m_service_account_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_service_account_Valid() const{
    return m_service_account_isValid;
}

OAIGoogleCloudAiplatformV1ShieldedVmConfig OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getShieldedVmConfig() const {
    return m_shielded_vm_config;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setShieldedVmConfig(const OAIGoogleCloudAiplatformV1ShieldedVmConfig &shielded_vm_config) {
    m_shielded_vm_config = shielded_vm_config;
    m_shielded_vm_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_shielded_vm_config_Set() const{
    return m_shielded_vm_config_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_shielded_vm_config_Valid() const{
    return m_shielded_vm_config_isValid;
}

QString OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_persistent_disk_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_euc_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_idle_shutdown_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_machine_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_notebook_runtime_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_affinity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shielded_vm_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1NotebookRuntimeTemplate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
