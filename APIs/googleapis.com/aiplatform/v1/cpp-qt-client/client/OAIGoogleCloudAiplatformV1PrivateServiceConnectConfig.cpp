/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::~OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig() {}

void OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::initializeModel() {

    m_enable_private_service_connect_isSet = false;
    m_enable_private_service_connect_isValid = false;

    m_project_allowlist_isSet = false;
    m_project_allowlist_isValid = false;
}

void OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::fromJsonObject(QJsonObject json) {

    m_enable_private_service_connect_isValid = ::OpenAPI::fromJsonValue(m_enable_private_service_connect, json[QString("enablePrivateServiceConnect")]);
    m_enable_private_service_connect_isSet = !json[QString("enablePrivateServiceConnect")].isNull() && m_enable_private_service_connect_isValid;

    m_project_allowlist_isValid = ::OpenAPI::fromJsonValue(m_project_allowlist, json[QString("projectAllowlist")]);
    m_project_allowlist_isSet = !json[QString("projectAllowlist")].isNull() && m_project_allowlist_isValid;
}

QString OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_private_service_connect_isSet) {
        obj.insert(QString("enablePrivateServiceConnect"), ::OpenAPI::toJsonValue(m_enable_private_service_connect));
    }
    if (m_project_allowlist.size() > 0) {
        obj.insert(QString("projectAllowlist"), ::OpenAPI::toJsonValue(m_project_allowlist));
    }
    return obj;
}

bool OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::isEnablePrivateServiceConnect() const {
    return m_enable_private_service_connect;
}
void OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::setEnablePrivateServiceConnect(const bool &enable_private_service_connect) {
    m_enable_private_service_connect = enable_private_service_connect;
    m_enable_private_service_connect_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::is_enable_private_service_connect_Set() const{
    return m_enable_private_service_connect_isSet;
}

bool OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::is_enable_private_service_connect_Valid() const{
    return m_enable_private_service_connect_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::getProjectAllowlist() const {
    return m_project_allowlist;
}
void OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::setProjectAllowlist(const QList<QString> &project_allowlist) {
    m_project_allowlist = project_allowlist;
    m_project_allowlist_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::is_project_allowlist_Set() const{
    return m_project_allowlist_isSet;
}

bool OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::is_project_allowlist_Valid() const{
    return m_project_allowlist_isValid;
}

bool OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_private_service_connect_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_allowlist.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
