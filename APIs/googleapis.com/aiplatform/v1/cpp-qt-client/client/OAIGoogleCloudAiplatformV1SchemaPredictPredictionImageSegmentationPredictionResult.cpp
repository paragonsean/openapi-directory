/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::~OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult() {}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::initializeModel() {

    m_category_mask_isSet = false;
    m_category_mask_isValid = false;

    m_confidence_mask_isSet = false;
    m_confidence_mask_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::fromJsonObject(QJsonObject json) {

    m_category_mask_isValid = ::OpenAPI::fromJsonValue(m_category_mask, json[QString("categoryMask")]);
    m_category_mask_isSet = !json[QString("categoryMask")].isNull() && m_category_mask_isValid;

    m_confidence_mask_isValid = ::OpenAPI::fromJsonValue(m_confidence_mask, json[QString("confidenceMask")]);
    m_confidence_mask_isSet = !json[QString("confidenceMask")].isNull() && m_confidence_mask_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::asJsonObject() const {
    QJsonObject obj;
    if (m_category_mask_isSet) {
        obj.insert(QString("categoryMask"), ::OpenAPI::toJsonValue(m_category_mask));
    }
    if (m_confidence_mask_isSet) {
        obj.insert(QString("confidenceMask"), ::OpenAPI::toJsonValue(m_confidence_mask));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::getCategoryMask() const {
    return m_category_mask;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::setCategoryMask(const QString &category_mask) {
    m_category_mask = category_mask;
    m_category_mask_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::is_category_mask_Set() const{
    return m_category_mask_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::is_category_mask_Valid() const{
    return m_category_mask_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::getConfidenceMask() const {
    return m_confidence_mask;
}
void OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::setConfidenceMask(const QString &confidence_mask) {
    m_confidence_mask = confidence_mask;
    m_confidence_mask_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::is_confidence_mask_Set() const{
    return m_confidence_mask_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::is_confidence_mask_Valid() const{
    return m_confidence_mask_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictPredictionImageSegmentationPredictionResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
