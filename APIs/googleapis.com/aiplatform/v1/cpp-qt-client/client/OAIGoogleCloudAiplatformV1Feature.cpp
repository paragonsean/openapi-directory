/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1Feature.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1Feature::OAIGoogleCloudAiplatformV1Feature(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1Feature::OAIGoogleCloudAiplatformV1Feature() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1Feature::~OAIGoogleCloudAiplatformV1Feature() {}

void OAIGoogleCloudAiplatformV1Feature::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_disable_monitoring_isSet = false;
    m_disable_monitoring_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_monitoring_stats_anomalies_isSet = false;
    m_monitoring_stats_anomalies_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_point_of_contact_isSet = false;
    m_point_of_contact_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;

    m_value_type_isSet = false;
    m_value_type_isValid = false;

    m_version_column_name_isSet = false;
    m_version_column_name_isValid = false;
}

void OAIGoogleCloudAiplatformV1Feature::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1Feature::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_disable_monitoring_isValid = ::OpenAPI::fromJsonValue(m_disable_monitoring, json[QString("disableMonitoring")]);
    m_disable_monitoring_isSet = !json[QString("disableMonitoring")].isNull() && m_disable_monitoring_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_monitoring_stats_anomalies_isValid = ::OpenAPI::fromJsonValue(m_monitoring_stats_anomalies, json[QString("monitoringStatsAnomalies")]);
    m_monitoring_stats_anomalies_isSet = !json[QString("monitoringStatsAnomalies")].isNull() && m_monitoring_stats_anomalies_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_point_of_contact_isValid = ::OpenAPI::fromJsonValue(m_point_of_contact, json[QString("pointOfContact")]);
    m_point_of_contact_isSet = !json[QString("pointOfContact")].isNull() && m_point_of_contact_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;

    m_value_type_isValid = ::OpenAPI::fromJsonValue(m_value_type, json[QString("valueType")]);
    m_value_type_isSet = !json[QString("valueType")].isNull() && m_value_type_isValid;

    m_version_column_name_isValid = ::OpenAPI::fromJsonValue(m_version_column_name, json[QString("versionColumnName")]);
    m_version_column_name_isSet = !json[QString("versionColumnName")].isNull() && m_version_column_name_isValid;
}

QString OAIGoogleCloudAiplatformV1Feature::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1Feature::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_disable_monitoring_isSet) {
        obj.insert(QString("disableMonitoring"), ::OpenAPI::toJsonValue(m_disable_monitoring));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_monitoring_stats_anomalies.size() > 0) {
        obj.insert(QString("monitoringStatsAnomalies"), ::OpenAPI::toJsonValue(m_monitoring_stats_anomalies));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_point_of_contact_isSet) {
        obj.insert(QString("pointOfContact"), ::OpenAPI::toJsonValue(m_point_of_contact));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    if (m_value_type_isSet) {
        obj.insert(QString("valueType"), ::OpenAPI::toJsonValue(m_value_type));
    }
    if (m_version_column_name_isSet) {
        obj.insert(QString("versionColumnName"), ::OpenAPI::toJsonValue(m_version_column_name));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1Feature::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1Feature::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1Feature::getDescription() const {
    return m_description;
}
void OAIGoogleCloudAiplatformV1Feature::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIGoogleCloudAiplatformV1Feature::isDisableMonitoring() const {
    return m_disable_monitoring;
}
void OAIGoogleCloudAiplatformV1Feature::setDisableMonitoring(const bool &disable_monitoring) {
    m_disable_monitoring = disable_monitoring;
    m_disable_monitoring_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_disable_monitoring_Set() const{
    return m_disable_monitoring_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_disable_monitoring_Valid() const{
    return m_disable_monitoring_isValid;
}

QString OAIGoogleCloudAiplatformV1Feature::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1Feature::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_etag_Valid() const{
    return m_etag_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1Feature::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1Feature::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_labels_Valid() const{
    return m_labels_isValid;
}

QList<OAIGoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly> OAIGoogleCloudAiplatformV1Feature::getMonitoringStatsAnomalies() const {
    return m_monitoring_stats_anomalies;
}
void OAIGoogleCloudAiplatformV1Feature::setMonitoringStatsAnomalies(const QList<OAIGoogleCloudAiplatformV1FeatureMonitoringStatsAnomaly> &monitoring_stats_anomalies) {
    m_monitoring_stats_anomalies = monitoring_stats_anomalies;
    m_monitoring_stats_anomalies_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_monitoring_stats_anomalies_Set() const{
    return m_monitoring_stats_anomalies_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_monitoring_stats_anomalies_Valid() const{
    return m_monitoring_stats_anomalies_isValid;
}

QString OAIGoogleCloudAiplatformV1Feature::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1Feature::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudAiplatformV1Feature::getPointOfContact() const {
    return m_point_of_contact;
}
void OAIGoogleCloudAiplatformV1Feature::setPointOfContact(const QString &point_of_contact) {
    m_point_of_contact = point_of_contact;
    m_point_of_contact_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_point_of_contact_Set() const{
    return m_point_of_contact_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_point_of_contact_Valid() const{
    return m_point_of_contact_isValid;
}

QString OAIGoogleCloudAiplatformV1Feature::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1Feature::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_update_time_Valid() const{
    return m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1Feature::getValueType() const {
    return m_value_type;
}
void OAIGoogleCloudAiplatformV1Feature::setValueType(const QString &value_type) {
    m_value_type = value_type;
    m_value_type_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_value_type_Set() const{
    return m_value_type_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_value_type_Valid() const{
    return m_value_type_isValid;
}

QString OAIGoogleCloudAiplatformV1Feature::getVersionColumnName() const {
    return m_version_column_name;
}
void OAIGoogleCloudAiplatformV1Feature::setVersionColumnName(const QString &version_column_name) {
    m_version_column_name = version_column_name;
    m_version_column_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Feature::is_version_column_name_Set() const{
    return m_version_column_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Feature::is_version_column_name_Valid() const{
    return m_version_column_name_isValid;
}

bool OAIGoogleCloudAiplatformV1Feature::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_monitoring_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring_stats_anomalies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_point_of_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1Feature::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
