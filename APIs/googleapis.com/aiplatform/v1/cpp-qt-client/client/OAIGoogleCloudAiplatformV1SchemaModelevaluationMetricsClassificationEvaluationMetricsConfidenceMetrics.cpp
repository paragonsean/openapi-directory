/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::~OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics() {}

void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::initializeModel() {

    m_confidence_threshold_isSet = false;
    m_confidence_threshold_isValid = false;

    m_confusion_matrix_isSet = false;
    m_confusion_matrix_isValid = false;

    m_f1_score_isSet = false;
    m_f1_score_isValid = false;

    m_f1_score_at1_isSet = false;
    m_f1_score_at1_isValid = false;

    m_f1_score_macro_isSet = false;
    m_f1_score_macro_isValid = false;

    m_f1_score_micro_isSet = false;
    m_f1_score_micro_isValid = false;

    m_false_negative_count_isSet = false;
    m_false_negative_count_isValid = false;

    m_false_positive_count_isSet = false;
    m_false_positive_count_isValid = false;

    m_false_positive_rate_isSet = false;
    m_false_positive_rate_isValid = false;

    m_false_positive_rate_at1_isSet = false;
    m_false_positive_rate_at1_isValid = false;

    m_max_predictions_isSet = false;
    m_max_predictions_isValid = false;

    m_precision_isSet = false;
    m_precision_isValid = false;

    m_precision_at1_isSet = false;
    m_precision_at1_isValid = false;

    m_recall_isSet = false;
    m_recall_isValid = false;

    m_recall_at1_isSet = false;
    m_recall_at1_isValid = false;

    m_true_negative_count_isSet = false;
    m_true_negative_count_isValid = false;

    m_true_positive_count_isSet = false;
    m_true_positive_count_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::fromJsonObject(QJsonObject json) {

    m_confidence_threshold_isValid = ::OpenAPI::fromJsonValue(m_confidence_threshold, json[QString("confidenceThreshold")]);
    m_confidence_threshold_isSet = !json[QString("confidenceThreshold")].isNull() && m_confidence_threshold_isValid;

    m_confusion_matrix_isValid = ::OpenAPI::fromJsonValue(m_confusion_matrix, json[QString("confusionMatrix")]);
    m_confusion_matrix_isSet = !json[QString("confusionMatrix")].isNull() && m_confusion_matrix_isValid;

    m_f1_score_isValid = ::OpenAPI::fromJsonValue(m_f1_score, json[QString("f1Score")]);
    m_f1_score_isSet = !json[QString("f1Score")].isNull() && m_f1_score_isValid;

    m_f1_score_at1_isValid = ::OpenAPI::fromJsonValue(m_f1_score_at1, json[QString("f1ScoreAt1")]);
    m_f1_score_at1_isSet = !json[QString("f1ScoreAt1")].isNull() && m_f1_score_at1_isValid;

    m_f1_score_macro_isValid = ::OpenAPI::fromJsonValue(m_f1_score_macro, json[QString("f1ScoreMacro")]);
    m_f1_score_macro_isSet = !json[QString("f1ScoreMacro")].isNull() && m_f1_score_macro_isValid;

    m_f1_score_micro_isValid = ::OpenAPI::fromJsonValue(m_f1_score_micro, json[QString("f1ScoreMicro")]);
    m_f1_score_micro_isSet = !json[QString("f1ScoreMicro")].isNull() && m_f1_score_micro_isValid;

    m_false_negative_count_isValid = ::OpenAPI::fromJsonValue(m_false_negative_count, json[QString("falseNegativeCount")]);
    m_false_negative_count_isSet = !json[QString("falseNegativeCount")].isNull() && m_false_negative_count_isValid;

    m_false_positive_count_isValid = ::OpenAPI::fromJsonValue(m_false_positive_count, json[QString("falsePositiveCount")]);
    m_false_positive_count_isSet = !json[QString("falsePositiveCount")].isNull() && m_false_positive_count_isValid;

    m_false_positive_rate_isValid = ::OpenAPI::fromJsonValue(m_false_positive_rate, json[QString("falsePositiveRate")]);
    m_false_positive_rate_isSet = !json[QString("falsePositiveRate")].isNull() && m_false_positive_rate_isValid;

    m_false_positive_rate_at1_isValid = ::OpenAPI::fromJsonValue(m_false_positive_rate_at1, json[QString("falsePositiveRateAt1")]);
    m_false_positive_rate_at1_isSet = !json[QString("falsePositiveRateAt1")].isNull() && m_false_positive_rate_at1_isValid;

    m_max_predictions_isValid = ::OpenAPI::fromJsonValue(m_max_predictions, json[QString("maxPredictions")]);
    m_max_predictions_isSet = !json[QString("maxPredictions")].isNull() && m_max_predictions_isValid;

    m_precision_isValid = ::OpenAPI::fromJsonValue(m_precision, json[QString("precision")]);
    m_precision_isSet = !json[QString("precision")].isNull() && m_precision_isValid;

    m_precision_at1_isValid = ::OpenAPI::fromJsonValue(m_precision_at1, json[QString("precisionAt1")]);
    m_precision_at1_isSet = !json[QString("precisionAt1")].isNull() && m_precision_at1_isValid;

    m_recall_isValid = ::OpenAPI::fromJsonValue(m_recall, json[QString("recall")]);
    m_recall_isSet = !json[QString("recall")].isNull() && m_recall_isValid;

    m_recall_at1_isValid = ::OpenAPI::fromJsonValue(m_recall_at1, json[QString("recallAt1")]);
    m_recall_at1_isSet = !json[QString("recallAt1")].isNull() && m_recall_at1_isValid;

    m_true_negative_count_isValid = ::OpenAPI::fromJsonValue(m_true_negative_count, json[QString("trueNegativeCount")]);
    m_true_negative_count_isSet = !json[QString("trueNegativeCount")].isNull() && m_true_negative_count_isValid;

    m_true_positive_count_isValid = ::OpenAPI::fromJsonValue(m_true_positive_count, json[QString("truePositiveCount")]);
    m_true_positive_count_isSet = !json[QString("truePositiveCount")].isNull() && m_true_positive_count_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_confidence_threshold_isSet) {
        obj.insert(QString("confidenceThreshold"), ::OpenAPI::toJsonValue(m_confidence_threshold));
    }
    if (m_confusion_matrix.isSet()) {
        obj.insert(QString("confusionMatrix"), ::OpenAPI::toJsonValue(m_confusion_matrix));
    }
    if (m_f1_score_isSet) {
        obj.insert(QString("f1Score"), ::OpenAPI::toJsonValue(m_f1_score));
    }
    if (m_f1_score_at1_isSet) {
        obj.insert(QString("f1ScoreAt1"), ::OpenAPI::toJsonValue(m_f1_score_at1));
    }
    if (m_f1_score_macro_isSet) {
        obj.insert(QString("f1ScoreMacro"), ::OpenAPI::toJsonValue(m_f1_score_macro));
    }
    if (m_f1_score_micro_isSet) {
        obj.insert(QString("f1ScoreMicro"), ::OpenAPI::toJsonValue(m_f1_score_micro));
    }
    if (m_false_negative_count_isSet) {
        obj.insert(QString("falseNegativeCount"), ::OpenAPI::toJsonValue(m_false_negative_count));
    }
    if (m_false_positive_count_isSet) {
        obj.insert(QString("falsePositiveCount"), ::OpenAPI::toJsonValue(m_false_positive_count));
    }
    if (m_false_positive_rate_isSet) {
        obj.insert(QString("falsePositiveRate"), ::OpenAPI::toJsonValue(m_false_positive_rate));
    }
    if (m_false_positive_rate_at1_isSet) {
        obj.insert(QString("falsePositiveRateAt1"), ::OpenAPI::toJsonValue(m_false_positive_rate_at1));
    }
    if (m_max_predictions_isSet) {
        obj.insert(QString("maxPredictions"), ::OpenAPI::toJsonValue(m_max_predictions));
    }
    if (m_precision_isSet) {
        obj.insert(QString("precision"), ::OpenAPI::toJsonValue(m_precision));
    }
    if (m_precision_at1_isSet) {
        obj.insert(QString("precisionAt1"), ::OpenAPI::toJsonValue(m_precision_at1));
    }
    if (m_recall_isSet) {
        obj.insert(QString("recall"), ::OpenAPI::toJsonValue(m_recall));
    }
    if (m_recall_at1_isSet) {
        obj.insert(QString("recallAt1"), ::OpenAPI::toJsonValue(m_recall_at1));
    }
    if (m_true_negative_count_isSet) {
        obj.insert(QString("trueNegativeCount"), ::OpenAPI::toJsonValue(m_true_negative_count));
    }
    if (m_true_positive_count_isSet) {
        obj.insert(QString("truePositiveCount"), ::OpenAPI::toJsonValue(m_true_positive_count));
    }
    return obj;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getConfidenceThreshold() const {
    return m_confidence_threshold;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setConfidenceThreshold(const float &confidence_threshold) {
    m_confidence_threshold = confidence_threshold;
    m_confidence_threshold_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_confidence_threshold_Set() const{
    return m_confidence_threshold_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_confidence_threshold_Valid() const{
    return m_confidence_threshold_isValid;
}

OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getConfusionMatrix() const {
    return m_confusion_matrix;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setConfusionMatrix(const OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix &confusion_matrix) {
    m_confusion_matrix = confusion_matrix;
    m_confusion_matrix_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_confusion_matrix_Set() const{
    return m_confusion_matrix_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_confusion_matrix_Valid() const{
    return m_confusion_matrix_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getF1Score() const {
    return m_f1_score;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setF1Score(const float &f1_score) {
    m_f1_score = f1_score;
    m_f1_score_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_f1_score_Set() const{
    return m_f1_score_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_f1_score_Valid() const{
    return m_f1_score_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getF1ScoreAt1() const {
    return m_f1_score_at1;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setF1ScoreAt1(const float &f1_score_at1) {
    m_f1_score_at1 = f1_score_at1;
    m_f1_score_at1_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_f1_score_at1_Set() const{
    return m_f1_score_at1_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_f1_score_at1_Valid() const{
    return m_f1_score_at1_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getF1ScoreMacro() const {
    return m_f1_score_macro;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setF1ScoreMacro(const float &f1_score_macro) {
    m_f1_score_macro = f1_score_macro;
    m_f1_score_macro_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_f1_score_macro_Set() const{
    return m_f1_score_macro_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_f1_score_macro_Valid() const{
    return m_f1_score_macro_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getF1ScoreMicro() const {
    return m_f1_score_micro;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setF1ScoreMicro(const float &f1_score_micro) {
    m_f1_score_micro = f1_score_micro;
    m_f1_score_micro_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_f1_score_micro_Set() const{
    return m_f1_score_micro_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_f1_score_micro_Valid() const{
    return m_f1_score_micro_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getFalseNegativeCount() const {
    return m_false_negative_count;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setFalseNegativeCount(const QString &false_negative_count) {
    m_false_negative_count = false_negative_count;
    m_false_negative_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_false_negative_count_Set() const{
    return m_false_negative_count_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_false_negative_count_Valid() const{
    return m_false_negative_count_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getFalsePositiveCount() const {
    return m_false_positive_count;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setFalsePositiveCount(const QString &false_positive_count) {
    m_false_positive_count = false_positive_count;
    m_false_positive_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_false_positive_count_Set() const{
    return m_false_positive_count_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_false_positive_count_Valid() const{
    return m_false_positive_count_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getFalsePositiveRate() const {
    return m_false_positive_rate;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setFalsePositiveRate(const float &false_positive_rate) {
    m_false_positive_rate = false_positive_rate;
    m_false_positive_rate_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_false_positive_rate_Set() const{
    return m_false_positive_rate_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_false_positive_rate_Valid() const{
    return m_false_positive_rate_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getFalsePositiveRateAt1() const {
    return m_false_positive_rate_at1;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setFalsePositiveRateAt1(const float &false_positive_rate_at1) {
    m_false_positive_rate_at1 = false_positive_rate_at1;
    m_false_positive_rate_at1_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_false_positive_rate_at1_Set() const{
    return m_false_positive_rate_at1_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_false_positive_rate_at1_Valid() const{
    return m_false_positive_rate_at1_isValid;
}

qint32 OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getMaxPredictions() const {
    return m_max_predictions;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setMaxPredictions(const qint32 &max_predictions) {
    m_max_predictions = max_predictions;
    m_max_predictions_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_max_predictions_Set() const{
    return m_max_predictions_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_max_predictions_Valid() const{
    return m_max_predictions_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getPrecision() const {
    return m_precision;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setPrecision(const float &precision) {
    m_precision = precision;
    m_precision_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_precision_Set() const{
    return m_precision_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_precision_Valid() const{
    return m_precision_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getPrecisionAt1() const {
    return m_precision_at1;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setPrecisionAt1(const float &precision_at1) {
    m_precision_at1 = precision_at1;
    m_precision_at1_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_precision_at1_Set() const{
    return m_precision_at1_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_precision_at1_Valid() const{
    return m_precision_at1_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getRecall() const {
    return m_recall;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setRecall(const float &recall) {
    m_recall = recall;
    m_recall_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_recall_Set() const{
    return m_recall_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_recall_Valid() const{
    return m_recall_isValid;
}

float OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getRecallAt1() const {
    return m_recall_at1;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setRecallAt1(const float &recall_at1) {
    m_recall_at1 = recall_at1;
    m_recall_at1_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_recall_at1_Set() const{
    return m_recall_at1_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_recall_at1_Valid() const{
    return m_recall_at1_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getTrueNegativeCount() const {
    return m_true_negative_count;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setTrueNegativeCount(const QString &true_negative_count) {
    m_true_negative_count = true_negative_count;
    m_true_negative_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_true_negative_count_Set() const{
    return m_true_negative_count_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_true_negative_count_Valid() const{
    return m_true_negative_count_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::getTruePositiveCount() const {
    return m_true_positive_count;
}
void OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::setTruePositiveCount(const QString &true_positive_count) {
    m_true_positive_count = true_positive_count;
    m_true_positive_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_true_positive_count_Set() const{
    return m_true_positive_count_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::is_true_positive_count_Valid() const{
    return m_true_positive_count_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidence_threshold_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confusion_matrix.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_f1_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_f1_score_at1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_f1_score_macro_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_f1_score_micro_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_false_negative_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_false_positive_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_false_positive_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_false_positive_rate_at1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_predictions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_precision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_precision_at1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recall_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recall_at1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_true_negative_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_true_positive_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaModelevaluationMetricsClassificationEvaluationMetricsConfidenceMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
