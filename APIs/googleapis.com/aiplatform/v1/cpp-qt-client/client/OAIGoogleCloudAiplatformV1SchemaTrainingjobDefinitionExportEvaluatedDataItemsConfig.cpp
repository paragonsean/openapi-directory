/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::~OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig() {}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::initializeModel() {

    m_destination_bigquery_uri_isSet = false;
    m_destination_bigquery_uri_isValid = false;

    m_override_existing_table_isSet = false;
    m_override_existing_table_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::fromJsonObject(QJsonObject json) {

    m_destination_bigquery_uri_isValid = ::OpenAPI::fromJsonValue(m_destination_bigquery_uri, json[QString("destinationBigqueryUri")]);
    m_destination_bigquery_uri_isSet = !json[QString("destinationBigqueryUri")].isNull() && m_destination_bigquery_uri_isValid;

    m_override_existing_table_isValid = ::OpenAPI::fromJsonValue(m_override_existing_table, json[QString("overrideExistingTable")]);
    m_override_existing_table_isSet = !json[QString("overrideExistingTable")].isNull() && m_override_existing_table_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_destination_bigquery_uri_isSet) {
        obj.insert(QString("destinationBigqueryUri"), ::OpenAPI::toJsonValue(m_destination_bigquery_uri));
    }
    if (m_override_existing_table_isSet) {
        obj.insert(QString("overrideExistingTable"), ::OpenAPI::toJsonValue(m_override_existing_table));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::getDestinationBigqueryUri() const {
    return m_destination_bigquery_uri;
}
void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::setDestinationBigqueryUri(const QString &destination_bigquery_uri) {
    m_destination_bigquery_uri = destination_bigquery_uri;
    m_destination_bigquery_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::is_destination_bigquery_uri_Set() const{
    return m_destination_bigquery_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::is_destination_bigquery_uri_Valid() const{
    return m_destination_bigquery_uri_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::isOverrideExistingTable() const {
    return m_override_existing_table;
}
void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::setOverrideExistingTable(const bool &override_existing_table) {
    m_override_existing_table = override_existing_table;
    m_override_existing_table_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::is_override_existing_table_Set() const{
    return m_override_existing_table_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::is_override_existing_table_Valid() const{
    return m_override_existing_table_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_destination_bigquery_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_existing_table_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionExportEvaluatedDataItemsConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
