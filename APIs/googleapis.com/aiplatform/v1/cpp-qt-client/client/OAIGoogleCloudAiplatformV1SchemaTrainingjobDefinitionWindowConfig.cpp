/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::~OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig() {}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::initializeModel() {

    m_column_isSet = false;
    m_column_isValid = false;

    m_max_count_isSet = false;
    m_max_count_isValid = false;

    m_stride_length_isSet = false;
    m_stride_length_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::fromJsonObject(QJsonObject json) {

    m_column_isValid = ::OpenAPI::fromJsonValue(m_column, json[QString("column")]);
    m_column_isSet = !json[QString("column")].isNull() && m_column_isValid;

    m_max_count_isValid = ::OpenAPI::fromJsonValue(m_max_count, json[QString("maxCount")]);
    m_max_count_isSet = !json[QString("maxCount")].isNull() && m_max_count_isValid;

    m_stride_length_isValid = ::OpenAPI::fromJsonValue(m_stride_length, json[QString("strideLength")]);
    m_stride_length_isSet = !json[QString("strideLength")].isNull() && m_stride_length_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_column_isSet) {
        obj.insert(QString("column"), ::OpenAPI::toJsonValue(m_column));
    }
    if (m_max_count_isSet) {
        obj.insert(QString("maxCount"), ::OpenAPI::toJsonValue(m_max_count));
    }
    if (m_stride_length_isSet) {
        obj.insert(QString("strideLength"), ::OpenAPI::toJsonValue(m_stride_length));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::getColumn() const {
    return m_column;
}
void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::setColumn(const QString &column) {
    m_column = column;
    m_column_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::is_column_Set() const{
    return m_column_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::is_column_Valid() const{
    return m_column_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::getMaxCount() const {
    return m_max_count;
}
void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::setMaxCount(const QString &max_count) {
    m_max_count = max_count;
    m_max_count_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::is_max_count_Set() const{
    return m_max_count_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::is_max_count_Valid() const{
    return m_max_count_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::getStrideLength() const {
    return m_stride_length;
}
void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::setStrideLength(const QString &stride_length) {
    m_stride_length = stride_length;
    m_stride_length_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::is_stride_length_Set() const{
    return m_stride_length_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::is_stride_length_Valid() const{
    return m_stride_length_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_column_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stride_length_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionWindowConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
