/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1Index.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1Index::OAIGoogleCloudAiplatformV1Index(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1Index::OAIGoogleCloudAiplatformV1Index() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1Index::~OAIGoogleCloudAiplatformV1Index() {}

void OAIGoogleCloudAiplatformV1Index::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_deployed_indexes_isSet = false;
    m_deployed_indexes_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_encryption_spec_isSet = false;
    m_encryption_spec_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_index_stats_isSet = false;
    m_index_stats_isValid = false;

    m_index_update_method_isSet = false;
    m_index_update_method_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_metadata_schema_uri_isSet = false;
    m_metadata_schema_uri_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1Index::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1Index::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_deployed_indexes_isValid = ::OpenAPI::fromJsonValue(m_deployed_indexes, json[QString("deployedIndexes")]);
    m_deployed_indexes_isSet = !json[QString("deployedIndexes")].isNull() && m_deployed_indexes_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_encryption_spec_isValid = ::OpenAPI::fromJsonValue(m_encryption_spec, json[QString("encryptionSpec")]);
    m_encryption_spec_isSet = !json[QString("encryptionSpec")].isNull() && m_encryption_spec_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_index_stats_isValid = ::OpenAPI::fromJsonValue(m_index_stats, json[QString("indexStats")]);
    m_index_stats_isSet = !json[QString("indexStats")].isNull() && m_index_stats_isValid;

    m_index_update_method_isValid = ::OpenAPI::fromJsonValue(m_index_update_method, json[QString("indexUpdateMethod")]);
    m_index_update_method_isSet = !json[QString("indexUpdateMethod")].isNull() && m_index_update_method_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_metadata_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_metadata_schema_uri, json[QString("metadataSchemaUri")]);
    m_metadata_schema_uri_isSet = !json[QString("metadataSchemaUri")].isNull() && m_metadata_schema_uri_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1Index::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1Index::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_deployed_indexes.size() > 0) {
        obj.insert(QString("deployedIndexes"), ::OpenAPI::toJsonValue(m_deployed_indexes));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_encryption_spec.isSet()) {
        obj.insert(QString("encryptionSpec"), ::OpenAPI::toJsonValue(m_encryption_spec));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_index_stats.isSet()) {
        obj.insert(QString("indexStats"), ::OpenAPI::toJsonValue(m_index_stats));
    }
    if (m_index_update_method_isSet) {
        obj.insert(QString("indexUpdateMethod"), ::OpenAPI::toJsonValue(m_index_update_method));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_metadata_isSet) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_metadata_schema_uri_isSet) {
        obj.insert(QString("metadataSchemaUri"), ::OpenAPI::toJsonValue(m_metadata_schema_uri));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1Index::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1Index::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QList<OAIGoogleCloudAiplatformV1DeployedIndexRef> OAIGoogleCloudAiplatformV1Index::getDeployedIndexes() const {
    return m_deployed_indexes;
}
void OAIGoogleCloudAiplatformV1Index::setDeployedIndexes(const QList<OAIGoogleCloudAiplatformV1DeployedIndexRef> &deployed_indexes) {
    m_deployed_indexes = deployed_indexes;
    m_deployed_indexes_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_deployed_indexes_Set() const{
    return m_deployed_indexes_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_deployed_indexes_Valid() const{
    return m_deployed_indexes_isValid;
}

QString OAIGoogleCloudAiplatformV1Index::getDescription() const {
    return m_description;
}
void OAIGoogleCloudAiplatformV1Index::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudAiplatformV1Index::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1Index::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_display_name_Valid() const{
    return m_display_name_isValid;
}

OAIGoogleCloudAiplatformV1EncryptionSpec OAIGoogleCloudAiplatformV1Index::getEncryptionSpec() const {
    return m_encryption_spec;
}
void OAIGoogleCloudAiplatformV1Index::setEncryptionSpec(const OAIGoogleCloudAiplatformV1EncryptionSpec &encryption_spec) {
    m_encryption_spec = encryption_spec;
    m_encryption_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_encryption_spec_Set() const{
    return m_encryption_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_encryption_spec_Valid() const{
    return m_encryption_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1Index::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1Index::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIGoogleCloudAiplatformV1IndexStats OAIGoogleCloudAiplatformV1Index::getIndexStats() const {
    return m_index_stats;
}
void OAIGoogleCloudAiplatformV1Index::setIndexStats(const OAIGoogleCloudAiplatformV1IndexStats &index_stats) {
    m_index_stats = index_stats;
    m_index_stats_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_index_stats_Set() const{
    return m_index_stats_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_index_stats_Valid() const{
    return m_index_stats_isValid;
}

QString OAIGoogleCloudAiplatformV1Index::getIndexUpdateMethod() const {
    return m_index_update_method;
}
void OAIGoogleCloudAiplatformV1Index::setIndexUpdateMethod(const QString &index_update_method) {
    m_index_update_method = index_update_method;
    m_index_update_method_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_index_update_method_Set() const{
    return m_index_update_method_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_index_update_method_Valid() const{
    return m_index_update_method_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1Index::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1Index::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_labels_Valid() const{
    return m_labels_isValid;
}

QJsonValue OAIGoogleCloudAiplatformV1Index::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudAiplatformV1Index::setMetadata(const QJsonValue &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIGoogleCloudAiplatformV1Index::getMetadataSchemaUri() const {
    return m_metadata_schema_uri;
}
void OAIGoogleCloudAiplatformV1Index::setMetadataSchemaUri(const QString &metadata_schema_uri) {
    m_metadata_schema_uri = metadata_schema_uri;
    m_metadata_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_metadata_schema_uri_Set() const{
    return m_metadata_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_metadata_schema_uri_Valid() const{
    return m_metadata_schema_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1Index::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1Index::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudAiplatformV1Index::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1Index::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Index::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1Index::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1Index::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployed_indexes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_index_update_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1Index::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
