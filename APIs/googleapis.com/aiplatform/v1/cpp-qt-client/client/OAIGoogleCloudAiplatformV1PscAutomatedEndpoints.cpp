/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1PscAutomatedEndpoints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::OAIGoogleCloudAiplatformV1PscAutomatedEndpoints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::OAIGoogleCloudAiplatformV1PscAutomatedEndpoints() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::~OAIGoogleCloudAiplatformV1PscAutomatedEndpoints() {}

void OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::initializeModel() {

    m_match_address_isSet = false;
    m_match_address_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;
}

void OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::fromJsonObject(QJsonObject json) {

    m_match_address_isValid = ::OpenAPI::fromJsonValue(m_match_address, json[QString("matchAddress")]);
    m_match_address_isSet = !json[QString("matchAddress")].isNull() && m_match_address_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;
}

QString OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::asJsonObject() const {
    QJsonObject obj;
    if (m_match_address_isSet) {
        obj.insert(QString("matchAddress"), ::OpenAPI::toJsonValue(m_match_address));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::getMatchAddress() const {
    return m_match_address;
}
void OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::setMatchAddress(const QString &match_address) {
    m_match_address = match_address;
    m_match_address_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::is_match_address_Set() const{
    return m_match_address_isSet;
}

bool OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::is_match_address_Valid() const{
    return m_match_address_isValid;
}

QString OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::getNetwork() const {
    return m_network;
}
void OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::is_network_Set() const{
    return m_network_isSet;
}

bool OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::is_network_Valid() const{
    return m_network_isValid;
}

QString OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::getProjectId() const {
    return m_project_id;
}
void OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::is_project_id_Valid() const{
    return m_project_id_isValid;
}

bool OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_match_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1PscAutomatedEndpoints::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
