/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudAiLargeModelsVisionImage.h
 *
 * Image.
 */

#ifndef OAICloudAiLargeModelsVisionImage_H
#define OAICloudAiLargeModelsVisionImage_H

#include <QJsonObject>

#include "OAICloudAiLargeModelsVisionImageRAIScores.h"
#include "OAICloudAiLargeModelsVisionRaiInfo.h"
#include "OAICloudAiLargeModelsVisionSemanticFilterResponse.h"
#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICloudAiLargeModelsVisionImageRAIScores;
class OAICloudAiLargeModelsVisionRaiInfo;
class OAICloudAiLargeModelsVisionSemanticFilterResponse;

class OAICloudAiLargeModelsVisionImage : public OAIObject {
public:
    OAICloudAiLargeModelsVisionImage();
    OAICloudAiLargeModelsVisionImage(QString json);
    ~OAICloudAiLargeModelsVisionImage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEncoding() const;
    void setEncoding(const QString &encoding);
    bool is_encoding_Set() const;
    bool is_encoding_Valid() const;

    QByteArray getImage() const;
    void setImage(const QByteArray &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    OAICloudAiLargeModelsVisionImageRAIScores getImageRaiScores() const;
    void setImageRaiScores(const OAICloudAiLargeModelsVisionImageRAIScores &image_rai_scores);
    bool is_image_rai_scores_Set() const;
    bool is_image_rai_scores_Valid() const;

    OAICloudAiLargeModelsVisionRaiInfo getRaiInfo() const;
    void setRaiInfo(const OAICloudAiLargeModelsVisionRaiInfo &rai_info);
    bool is_rai_info_Set() const;
    bool is_rai_info_Valid() const;

    OAICloudAiLargeModelsVisionSemanticFilterResponse getSemanticFilterResponse() const;
    void setSemanticFilterResponse(const OAICloudAiLargeModelsVisionSemanticFilterResponse &semantic_filter_response);
    bool is_semantic_filter_response_Set() const;
    bool is_semantic_filter_response_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_encoding;
    bool m_encoding_isSet;
    bool m_encoding_isValid;

    QByteArray m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    OAICloudAiLargeModelsVisionImageRAIScores m_image_rai_scores;
    bool m_image_rai_scores_isSet;
    bool m_image_rai_scores_isValid;

    OAICloudAiLargeModelsVisionRaiInfo m_rai_info;
    bool m_rai_info_isSet;
    bool m_rai_info_isValid;

    OAICloudAiLargeModelsVisionSemanticFilterResponse m_semantic_filter_response;
    bool m_semantic_filter_response_isSet;
    bool m_semantic_filter_response_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudAiLargeModelsVisionImage)

#endif // OAICloudAiLargeModelsVisionImage_H
