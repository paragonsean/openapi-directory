/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::~OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig() {}

void OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::initializeModel() {

    m_attribution_score_drift_thresholds_isSet = false;
    m_attribution_score_drift_thresholds_isValid = false;

    m_default_drift_threshold_isSet = false;
    m_default_drift_threshold_isValid = false;

    m_drift_thresholds_isSet = false;
    m_drift_thresholds_isValid = false;
}

void OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::fromJsonObject(QJsonObject json) {

    m_attribution_score_drift_thresholds_isValid = ::OpenAPI::fromJsonValue(m_attribution_score_drift_thresholds, json[QString("attributionScoreDriftThresholds")]);
    m_attribution_score_drift_thresholds_isSet = !json[QString("attributionScoreDriftThresholds")].isNull() && m_attribution_score_drift_thresholds_isValid;

    m_default_drift_threshold_isValid = ::OpenAPI::fromJsonValue(m_default_drift_threshold, json[QString("defaultDriftThreshold")]);
    m_default_drift_threshold_isSet = !json[QString("defaultDriftThreshold")].isNull() && m_default_drift_threshold_isValid;

    m_drift_thresholds_isValid = ::OpenAPI::fromJsonValue(m_drift_thresholds, json[QString("driftThresholds")]);
    m_drift_thresholds_isSet = !json[QString("driftThresholds")].isNull() && m_drift_thresholds_isValid;
}

QString OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_attribution_score_drift_thresholds.size() > 0) {
        obj.insert(QString("attributionScoreDriftThresholds"), ::OpenAPI::toJsonValue(m_attribution_score_drift_thresholds));
    }
    if (m_default_drift_threshold.isSet()) {
        obj.insert(QString("defaultDriftThreshold"), ::OpenAPI::toJsonValue(m_default_drift_threshold));
    }
    if (m_drift_thresholds.size() > 0) {
        obj.insert(QString("driftThresholds"), ::OpenAPI::toJsonValue(m_drift_thresholds));
    }
    return obj;
}

QMap<QString, OAIGoogleCloudAiplatformV1ThresholdConfig> OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::getAttributionScoreDriftThresholds() const {
    return m_attribution_score_drift_thresholds;
}
void OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::setAttributionScoreDriftThresholds(const QMap<QString, OAIGoogleCloudAiplatformV1ThresholdConfig> &attribution_score_drift_thresholds) {
    m_attribution_score_drift_thresholds = attribution_score_drift_thresholds;
    m_attribution_score_drift_thresholds_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::is_attribution_score_drift_thresholds_Set() const{
    return m_attribution_score_drift_thresholds_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::is_attribution_score_drift_thresholds_Valid() const{
    return m_attribution_score_drift_thresholds_isValid;
}

OAIGoogleCloudAiplatformV1ThresholdConfig OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::getDefaultDriftThreshold() const {
    return m_default_drift_threshold;
}
void OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::setDefaultDriftThreshold(const OAIGoogleCloudAiplatformV1ThresholdConfig &default_drift_threshold) {
    m_default_drift_threshold = default_drift_threshold;
    m_default_drift_threshold_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::is_default_drift_threshold_Set() const{
    return m_default_drift_threshold_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::is_default_drift_threshold_Valid() const{
    return m_default_drift_threshold_isValid;
}

QMap<QString, OAIGoogleCloudAiplatformV1ThresholdConfig> OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::getDriftThresholds() const {
    return m_drift_thresholds;
}
void OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::setDriftThresholds(const QMap<QString, OAIGoogleCloudAiplatformV1ThresholdConfig> &drift_thresholds) {
    m_drift_thresholds = drift_thresholds;
    m_drift_thresholds_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::is_drift_thresholds_Set() const{
    return m_drift_thresholds_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::is_drift_thresholds_Valid() const{
    return m_drift_thresholds_isValid;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribution_score_drift_thresholds.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_drift_threshold.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_drift_thresholds.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringObjectiveConfigPredictionDriftDetectionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
