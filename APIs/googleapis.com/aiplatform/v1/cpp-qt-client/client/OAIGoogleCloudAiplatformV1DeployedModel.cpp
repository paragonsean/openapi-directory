/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1DeployedModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1DeployedModel::OAIGoogleCloudAiplatformV1DeployedModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1DeployedModel::OAIGoogleCloudAiplatformV1DeployedModel() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1DeployedModel::~OAIGoogleCloudAiplatformV1DeployedModel() {}

void OAIGoogleCloudAiplatformV1DeployedModel::initializeModel() {

    m_automatic_resources_isSet = false;
    m_automatic_resources_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_dedicated_resources_isSet = false;
    m_dedicated_resources_isValid = false;

    m_disable_container_logging_isSet = false;
    m_disable_container_logging_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_enable_access_logging_isSet = false;
    m_enable_access_logging_isValid = false;

    m_explanation_spec_isSet = false;
    m_explanation_spec_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_model_isSet = false;
    m_model_isValid = false;

    m_model_version_id_isSet = false;
    m_model_version_id_isValid = false;

    m_private_endpoints_isSet = false;
    m_private_endpoints_isValid = false;

    m_service_account_isSet = false;
    m_service_account_isValid = false;

    m_shared_resources_isSet = false;
    m_shared_resources_isValid = false;
}

void OAIGoogleCloudAiplatformV1DeployedModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1DeployedModel::fromJsonObject(QJsonObject json) {

    m_automatic_resources_isValid = ::OpenAPI::fromJsonValue(m_automatic_resources, json[QString("automaticResources")]);
    m_automatic_resources_isSet = !json[QString("automaticResources")].isNull() && m_automatic_resources_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_dedicated_resources_isValid = ::OpenAPI::fromJsonValue(m_dedicated_resources, json[QString("dedicatedResources")]);
    m_dedicated_resources_isSet = !json[QString("dedicatedResources")].isNull() && m_dedicated_resources_isValid;

    m_disable_container_logging_isValid = ::OpenAPI::fromJsonValue(m_disable_container_logging, json[QString("disableContainerLogging")]);
    m_disable_container_logging_isSet = !json[QString("disableContainerLogging")].isNull() && m_disable_container_logging_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_enable_access_logging_isValid = ::OpenAPI::fromJsonValue(m_enable_access_logging, json[QString("enableAccessLogging")]);
    m_enable_access_logging_isSet = !json[QString("enableAccessLogging")].isNull() && m_enable_access_logging_isValid;

    m_explanation_spec_isValid = ::OpenAPI::fromJsonValue(m_explanation_spec, json[QString("explanationSpec")]);
    m_explanation_spec_isSet = !json[QString("explanationSpec")].isNull() && m_explanation_spec_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;

    m_model_version_id_isValid = ::OpenAPI::fromJsonValue(m_model_version_id, json[QString("modelVersionId")]);
    m_model_version_id_isSet = !json[QString("modelVersionId")].isNull() && m_model_version_id_isValid;

    m_private_endpoints_isValid = ::OpenAPI::fromJsonValue(m_private_endpoints, json[QString("privateEndpoints")]);
    m_private_endpoints_isSet = !json[QString("privateEndpoints")].isNull() && m_private_endpoints_isValid;

    m_service_account_isValid = ::OpenAPI::fromJsonValue(m_service_account, json[QString("serviceAccount")]);
    m_service_account_isSet = !json[QString("serviceAccount")].isNull() && m_service_account_isValid;

    m_shared_resources_isValid = ::OpenAPI::fromJsonValue(m_shared_resources, json[QString("sharedResources")]);
    m_shared_resources_isSet = !json[QString("sharedResources")].isNull() && m_shared_resources_isValid;
}

QString OAIGoogleCloudAiplatformV1DeployedModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1DeployedModel::asJsonObject() const {
    QJsonObject obj;
    if (m_automatic_resources.isSet()) {
        obj.insert(QString("automaticResources"), ::OpenAPI::toJsonValue(m_automatic_resources));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_dedicated_resources.isSet()) {
        obj.insert(QString("dedicatedResources"), ::OpenAPI::toJsonValue(m_dedicated_resources));
    }
    if (m_disable_container_logging_isSet) {
        obj.insert(QString("disableContainerLogging"), ::OpenAPI::toJsonValue(m_disable_container_logging));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_enable_access_logging_isSet) {
        obj.insert(QString("enableAccessLogging"), ::OpenAPI::toJsonValue(m_enable_access_logging));
    }
    if (m_explanation_spec.isSet()) {
        obj.insert(QString("explanationSpec"), ::OpenAPI::toJsonValue(m_explanation_spec));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_model_isSet) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    if (m_model_version_id_isSet) {
        obj.insert(QString("modelVersionId"), ::OpenAPI::toJsonValue(m_model_version_id));
    }
    if (m_private_endpoints.isSet()) {
        obj.insert(QString("privateEndpoints"), ::OpenAPI::toJsonValue(m_private_endpoints));
    }
    if (m_service_account_isSet) {
        obj.insert(QString("serviceAccount"), ::OpenAPI::toJsonValue(m_service_account));
    }
    if (m_shared_resources_isSet) {
        obj.insert(QString("sharedResources"), ::OpenAPI::toJsonValue(m_shared_resources));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1AutomaticResources OAIGoogleCloudAiplatformV1DeployedModel::getAutomaticResources() const {
    return m_automatic_resources;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setAutomaticResources(const OAIGoogleCloudAiplatformV1AutomaticResources &automatic_resources) {
    m_automatic_resources = automatic_resources;
    m_automatic_resources_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_automatic_resources_Set() const{
    return m_automatic_resources_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_automatic_resources_Valid() const{
    return m_automatic_resources_isValid;
}

QString OAIGoogleCloudAiplatformV1DeployedModel::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_create_time_Valid() const{
    return m_create_time_isValid;
}

OAIGoogleCloudAiplatformV1DedicatedResources OAIGoogleCloudAiplatformV1DeployedModel::getDedicatedResources() const {
    return m_dedicated_resources;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setDedicatedResources(const OAIGoogleCloudAiplatformV1DedicatedResources &dedicated_resources) {
    m_dedicated_resources = dedicated_resources;
    m_dedicated_resources_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_dedicated_resources_Set() const{
    return m_dedicated_resources_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_dedicated_resources_Valid() const{
    return m_dedicated_resources_isValid;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::isDisableContainerLogging() const {
    return m_disable_container_logging;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setDisableContainerLogging(const bool &disable_container_logging) {
    m_disable_container_logging = disable_container_logging;
    m_disable_container_logging_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_disable_container_logging_Set() const{
    return m_disable_container_logging_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_disable_container_logging_Valid() const{
    return m_disable_container_logging_isValid;
}

QString OAIGoogleCloudAiplatformV1DeployedModel::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::isEnableAccessLogging() const {
    return m_enable_access_logging;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setEnableAccessLogging(const bool &enable_access_logging) {
    m_enable_access_logging = enable_access_logging;
    m_enable_access_logging_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_enable_access_logging_Set() const{
    return m_enable_access_logging_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_enable_access_logging_Valid() const{
    return m_enable_access_logging_isValid;
}

OAIGoogleCloudAiplatformV1ExplanationSpec OAIGoogleCloudAiplatformV1DeployedModel::getExplanationSpec() const {
    return m_explanation_spec;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setExplanationSpec(const OAIGoogleCloudAiplatformV1ExplanationSpec &explanation_spec) {
    m_explanation_spec = explanation_spec;
    m_explanation_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_explanation_spec_Set() const{
    return m_explanation_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_explanation_spec_Valid() const{
    return m_explanation_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1DeployedModel::getId() const {
    return m_id;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleCloudAiplatformV1DeployedModel::getModel() const {
    return m_model;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_model_Set() const{
    return m_model_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_model_Valid() const{
    return m_model_isValid;
}

QString OAIGoogleCloudAiplatformV1DeployedModel::getModelVersionId() const {
    return m_model_version_id;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setModelVersionId(const QString &model_version_id) {
    m_model_version_id = model_version_id;
    m_model_version_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_model_version_id_Set() const{
    return m_model_version_id_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_model_version_id_Valid() const{
    return m_model_version_id_isValid;
}

OAIGoogleCloudAiplatformV1PrivateEndpoints OAIGoogleCloudAiplatformV1DeployedModel::getPrivateEndpoints() const {
    return m_private_endpoints;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setPrivateEndpoints(const OAIGoogleCloudAiplatformV1PrivateEndpoints &private_endpoints) {
    m_private_endpoints = private_endpoints;
    m_private_endpoints_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_private_endpoints_Set() const{
    return m_private_endpoints_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_private_endpoints_Valid() const{
    return m_private_endpoints_isValid;
}

QString OAIGoogleCloudAiplatformV1DeployedModel::getServiceAccount() const {
    return m_service_account;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setServiceAccount(const QString &service_account) {
    m_service_account = service_account;
    m_service_account_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_service_account_Set() const{
    return m_service_account_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_service_account_Valid() const{
    return m_service_account_isValid;
}

QString OAIGoogleCloudAiplatformV1DeployedModel::getSharedResources() const {
    return m_shared_resources;
}
void OAIGoogleCloudAiplatformV1DeployedModel::setSharedResources(const QString &shared_resources) {
    m_shared_resources = shared_resources;
    m_shared_resources_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_shared_resources_Set() const{
    return m_shared_resources_isSet;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::is_shared_resources_Valid() const{
    return m_shared_resources_isValid;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_automatic_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dedicated_resources.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_container_logging_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_access_logging_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_explanation_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_version_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_endpoints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shared_resources_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1DeployedModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
