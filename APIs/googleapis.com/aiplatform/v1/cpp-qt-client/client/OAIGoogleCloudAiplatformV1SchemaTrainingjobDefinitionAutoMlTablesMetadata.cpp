/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::~OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata() {}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::initializeModel() {

    m_evaluated_data_items_bigquery_uri_isSet = false;
    m_evaluated_data_items_bigquery_uri_isValid = false;

    m_train_cost_milli_node_hours_isSet = false;
    m_train_cost_milli_node_hours_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::fromJsonObject(QJsonObject json) {

    m_evaluated_data_items_bigquery_uri_isValid = ::OpenAPI::fromJsonValue(m_evaluated_data_items_bigquery_uri, json[QString("evaluatedDataItemsBigqueryUri")]);
    m_evaluated_data_items_bigquery_uri_isSet = !json[QString("evaluatedDataItemsBigqueryUri")].isNull() && m_evaluated_data_items_bigquery_uri_isValid;

    m_train_cost_milli_node_hours_isValid = ::OpenAPI::fromJsonValue(m_train_cost_milli_node_hours, json[QString("trainCostMilliNodeHours")]);
    m_train_cost_milli_node_hours_isSet = !json[QString("trainCostMilliNodeHours")].isNull() && m_train_cost_milli_node_hours_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_evaluated_data_items_bigquery_uri_isSet) {
        obj.insert(QString("evaluatedDataItemsBigqueryUri"), ::OpenAPI::toJsonValue(m_evaluated_data_items_bigquery_uri));
    }
    if (m_train_cost_milli_node_hours_isSet) {
        obj.insert(QString("trainCostMilliNodeHours"), ::OpenAPI::toJsonValue(m_train_cost_milli_node_hours));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::getEvaluatedDataItemsBigqueryUri() const {
    return m_evaluated_data_items_bigquery_uri;
}
void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::setEvaluatedDataItemsBigqueryUri(const QString &evaluated_data_items_bigquery_uri) {
    m_evaluated_data_items_bigquery_uri = evaluated_data_items_bigquery_uri;
    m_evaluated_data_items_bigquery_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::is_evaluated_data_items_bigquery_uri_Set() const{
    return m_evaluated_data_items_bigquery_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::is_evaluated_data_items_bigquery_uri_Valid() const{
    return m_evaluated_data_items_bigquery_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::getTrainCostMilliNodeHours() const {
    return m_train_cost_milli_node_hours;
}
void OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::setTrainCostMilliNodeHours(const QString &train_cost_milli_node_hours) {
    m_train_cost_milli_node_hours = train_cost_milli_node_hours;
    m_train_cost_milli_node_hours_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::is_train_cost_milli_node_hours_Set() const{
    return m_train_cost_milli_node_hours_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::is_train_cost_milli_node_hours_Valid() const{
    return m_train_cost_milli_node_hours_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_evaluated_data_items_bigquery_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_train_cost_milli_node_hours_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaTrainingjobDefinitionAutoMlTablesMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
