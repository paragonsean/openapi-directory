/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::~OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse() {}

void OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::initializeModel() {

    m_key_values_isSet = false;
    m_key_values_isValid = false;

    m_proto_struct_isSet = false;
    m_proto_struct_isValid = false;
}

void OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::fromJsonObject(QJsonObject json) {

    m_key_values_isValid = ::OpenAPI::fromJsonValue(m_key_values, json[QString("keyValues")]);
    m_key_values_isSet = !json[QString("keyValues")].isNull() && m_key_values_isValid;

    m_proto_struct_isValid = ::OpenAPI::fromJsonValue(m_proto_struct, json[QString("protoStruct")]);
    m_proto_struct_isSet = !json[QString("protoStruct")].isNull() && m_proto_struct_isValid;
}

QString OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_key_values.isSet()) {
        obj.insert(QString("keyValues"), ::OpenAPI::toJsonValue(m_key_values));
    }
    if (m_proto_struct.size() > 0) {
        obj.insert(QString("protoStruct"), ::OpenAPI::toJsonValue(m_proto_struct));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::getKeyValues() const {
    return m_key_values;
}
void OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::setKeyValues(const OAIGoogleCloudAiplatformV1FetchFeatureValuesResponseFeatureNameValuePairList &key_values) {
    m_key_values = key_values;
    m_key_values_isSet = true;
}

bool OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::is_key_values_Set() const{
    return m_key_values_isSet;
}

bool OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::is_key_values_Valid() const{
    return m_key_values_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::getProtoStruct() const {
    return m_proto_struct;
}
void OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::setProtoStruct(const QMap<QString, QJsonValue> &proto_struct) {
    m_proto_struct = proto_struct;
    m_proto_struct_isSet = true;
}

bool OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::is_proto_struct_Set() const{
    return m_proto_struct_isSet;
}

bool OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::is_proto_struct_Valid() const{
    return m_proto_struct_isValid;
}

bool OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_values.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_proto_struct.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1FetchFeatureValuesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
