/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1FeatureGroupBigQuery.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::OAIGoogleCloudAiplatformV1FeatureGroupBigQuery(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::OAIGoogleCloudAiplatformV1FeatureGroupBigQuery() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::~OAIGoogleCloudAiplatformV1FeatureGroupBigQuery() {}

void OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::initializeModel() {

    m_big_query_source_isSet = false;
    m_big_query_source_isValid = false;

    m_entity_id_columns_isSet = false;
    m_entity_id_columns_isValid = false;
}

void OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::fromJsonObject(QJsonObject json) {

    m_big_query_source_isValid = ::OpenAPI::fromJsonValue(m_big_query_source, json[QString("bigQuerySource")]);
    m_big_query_source_isSet = !json[QString("bigQuerySource")].isNull() && m_big_query_source_isValid;

    m_entity_id_columns_isValid = ::OpenAPI::fromJsonValue(m_entity_id_columns, json[QString("entityIdColumns")]);
    m_entity_id_columns_isSet = !json[QString("entityIdColumns")].isNull() && m_entity_id_columns_isValid;
}

QString OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::asJsonObject() const {
    QJsonObject obj;
    if (m_big_query_source.isSet()) {
        obj.insert(QString("bigQuerySource"), ::OpenAPI::toJsonValue(m_big_query_source));
    }
    if (m_entity_id_columns.size() > 0) {
        obj.insert(QString("entityIdColumns"), ::OpenAPI::toJsonValue(m_entity_id_columns));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1BigQuerySource OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::getBigQuerySource() const {
    return m_big_query_source;
}
void OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::setBigQuerySource(const OAIGoogleCloudAiplatformV1BigQuerySource &big_query_source) {
    m_big_query_source = big_query_source;
    m_big_query_source_isSet = true;
}

bool OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::is_big_query_source_Set() const{
    return m_big_query_source_isSet;
}

bool OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::is_big_query_source_Valid() const{
    return m_big_query_source_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::getEntityIdColumns() const {
    return m_entity_id_columns;
}
void OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::setEntityIdColumns(const QList<QString> &entity_id_columns) {
    m_entity_id_columns = entity_id_columns;
    m_entity_id_columns_isSet = true;
}

bool OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::is_entity_id_columns_Set() const{
    return m_entity_id_columns_isSet;
}

bool OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::is_entity_id_columns_Valid() const{
    return m_entity_id_columns_isValid;
}

bool OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_big_query_source.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_id_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1FeatureGroupBigQuery::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
