/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::~OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry() {}

void OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::initializeModel() {

    m_enterprise_datastore_isSet = false;
    m_enterprise_datastore_isValid = false;

    m_inline_context_isSet = false;
    m_inline_context_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_vertex_ai_search_datastore_isSet = false;
    m_vertex_ai_search_datastore_isValid = false;
}

void OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::fromJsonObject(QJsonObject json) {

    m_enterprise_datastore_isValid = ::OpenAPI::fromJsonValue(m_enterprise_datastore, json[QString("enterpriseDatastore")]);
    m_enterprise_datastore_isSet = !json[QString("enterpriseDatastore")].isNull() && m_enterprise_datastore_isValid;

    m_inline_context_isValid = ::OpenAPI::fromJsonValue(m_inline_context, json[QString("inlineContext")]);
    m_inline_context_isSet = !json[QString("inlineContext")].isNull() && m_inline_context_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_vertex_ai_search_datastore_isValid = ::OpenAPI::fromJsonValue(m_vertex_ai_search_datastore, json[QString("vertexAiSearchDatastore")]);
    m_vertex_ai_search_datastore_isSet = !json[QString("vertexAiSearchDatastore")].isNull() && m_vertex_ai_search_datastore_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_enterprise_datastore_isSet) {
        obj.insert(QString("enterpriseDatastore"), ::OpenAPI::toJsonValue(m_enterprise_datastore));
    }
    if (m_inline_context_isSet) {
        obj.insert(QString("inlineContext"), ::OpenAPI::toJsonValue(m_inline_context));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_vertex_ai_search_datastore_isSet) {
        obj.insert(QString("vertexAiSearchDatastore"), ::OpenAPI::toJsonValue(m_vertex_ai_search_datastore));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::getEnterpriseDatastore() const {
    return m_enterprise_datastore;
}
void OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::setEnterpriseDatastore(const QString &enterprise_datastore) {
    m_enterprise_datastore = enterprise_datastore;
    m_enterprise_datastore_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::is_enterprise_datastore_Set() const{
    return m_enterprise_datastore_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::is_enterprise_datastore_Valid() const{
    return m_enterprise_datastore_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::getInlineContext() const {
    return m_inline_context;
}
void OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::setInlineContext(const QString &inline_context) {
    m_inline_context = inline_context;
    m_inline_context_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::is_inline_context_Set() const{
    return m_inline_context_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::is_inline_context_Valid() const{
    return m_inline_context_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::getType() const {
    return m_type;
}
void OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::is_type_Set() const{
    return m_type_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::getVertexAiSearchDatastore() const {
    return m_vertex_ai_search_datastore;
}
void OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::setVertexAiSearchDatastore(const QString &vertex_ai_search_datastore) {
    m_vertex_ai_search_datastore = vertex_ai_search_datastore;
    m_vertex_ai_search_datastore_isSet = true;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::is_vertex_ai_search_datastore_Set() const{
    return m_vertex_ai_search_datastore_isSet;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::is_vertex_ai_search_datastore_Valid() const{
    return m_vertex_ai_search_datastore_isValid;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enterprise_datastore_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inline_context_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vertex_ai_search_datastore_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1SchemaPredictParamsGroundingConfigSourceEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
