/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1ComputeTokensRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1ComputeTokensRequest::OAIGoogleCloudAiplatformV1ComputeTokensRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1ComputeTokensRequest::OAIGoogleCloudAiplatformV1ComputeTokensRequest() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1ComputeTokensRequest::~OAIGoogleCloudAiplatformV1ComputeTokensRequest() {}

void OAIGoogleCloudAiplatformV1ComputeTokensRequest::initializeModel() {

    m_instances_isSet = false;
    m_instances_isValid = false;
}

void OAIGoogleCloudAiplatformV1ComputeTokensRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1ComputeTokensRequest::fromJsonObject(QJsonObject json) {

    m_instances_isValid = ::OpenAPI::fromJsonValue(m_instances, json[QString("instances")]);
    m_instances_isSet = !json[QString("instances")].isNull() && m_instances_isValid;
}

QString OAIGoogleCloudAiplatformV1ComputeTokensRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1ComputeTokensRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_instances.size() > 0) {
        obj.insert(QString("instances"), ::OpenAPI::toJsonValue(m_instances));
    }
    return obj;
}

QList<QJsonValue> OAIGoogleCloudAiplatformV1ComputeTokensRequest::getInstances() const {
    return m_instances;
}
void OAIGoogleCloudAiplatformV1ComputeTokensRequest::setInstances(const QList<QJsonValue> &instances) {
    m_instances = instances;
    m_instances_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ComputeTokensRequest::is_instances_Set() const{
    return m_instances_isSet;
}

bool OAIGoogleCloudAiplatformV1ComputeTokensRequest::is_instances_Valid() const{
    return m_instances_isValid;
}

bool OAIGoogleCloudAiplatformV1ComputeTokensRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instances.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1ComputeTokensRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
