/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1NetworkSpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1NetworkSpec::OAIGoogleCloudAiplatformV1NetworkSpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1NetworkSpec::OAIGoogleCloudAiplatformV1NetworkSpec() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1NetworkSpec::~OAIGoogleCloudAiplatformV1NetworkSpec() {}

void OAIGoogleCloudAiplatformV1NetworkSpec::initializeModel() {

    m_enable_internet_access_isSet = false;
    m_enable_internet_access_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_subnetwork_isSet = false;
    m_subnetwork_isValid = false;
}

void OAIGoogleCloudAiplatformV1NetworkSpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1NetworkSpec::fromJsonObject(QJsonObject json) {

    m_enable_internet_access_isValid = ::OpenAPI::fromJsonValue(m_enable_internet_access, json[QString("enableInternetAccess")]);
    m_enable_internet_access_isSet = !json[QString("enableInternetAccess")].isNull() && m_enable_internet_access_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_subnetwork_isValid = ::OpenAPI::fromJsonValue(m_subnetwork, json[QString("subnetwork")]);
    m_subnetwork_isSet = !json[QString("subnetwork")].isNull() && m_subnetwork_isValid;
}

QString OAIGoogleCloudAiplatformV1NetworkSpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1NetworkSpec::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_internet_access_isSet) {
        obj.insert(QString("enableInternetAccess"), ::OpenAPI::toJsonValue(m_enable_internet_access));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_subnetwork_isSet) {
        obj.insert(QString("subnetwork"), ::OpenAPI::toJsonValue(m_subnetwork));
    }
    return obj;
}

bool OAIGoogleCloudAiplatformV1NetworkSpec::isEnableInternetAccess() const {
    return m_enable_internet_access;
}
void OAIGoogleCloudAiplatformV1NetworkSpec::setEnableInternetAccess(const bool &enable_internet_access) {
    m_enable_internet_access = enable_internet_access;
    m_enable_internet_access_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NetworkSpec::is_enable_internet_access_Set() const{
    return m_enable_internet_access_isSet;
}

bool OAIGoogleCloudAiplatformV1NetworkSpec::is_enable_internet_access_Valid() const{
    return m_enable_internet_access_isValid;
}

QString OAIGoogleCloudAiplatformV1NetworkSpec::getNetwork() const {
    return m_network;
}
void OAIGoogleCloudAiplatformV1NetworkSpec::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NetworkSpec::is_network_Set() const{
    return m_network_isSet;
}

bool OAIGoogleCloudAiplatformV1NetworkSpec::is_network_Valid() const{
    return m_network_isValid;
}

QString OAIGoogleCloudAiplatformV1NetworkSpec::getSubnetwork() const {
    return m_subnetwork;
}
void OAIGoogleCloudAiplatformV1NetworkSpec::setSubnetwork(const QString &subnetwork) {
    m_subnetwork = subnetwork;
    m_subnetwork_isSet = true;
}

bool OAIGoogleCloudAiplatformV1NetworkSpec::is_subnetwork_Set() const{
    return m_subnetwork_isSet;
}

bool OAIGoogleCloudAiplatformV1NetworkSpec::is_subnetwork_Valid() const{
    return m_subnetwork_isValid;
}

bool OAIGoogleCloudAiplatformV1NetworkSpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_internet_access_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subnetwork_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1NetworkSpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
