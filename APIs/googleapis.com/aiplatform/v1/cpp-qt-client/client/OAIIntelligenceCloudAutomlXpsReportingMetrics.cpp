/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIntelligenceCloudAutomlXpsReportingMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIntelligenceCloudAutomlXpsReportingMetrics::OAIIntelligenceCloudAutomlXpsReportingMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIntelligenceCloudAutomlXpsReportingMetrics::OAIIntelligenceCloudAutomlXpsReportingMetrics() {
    this->initializeModel();
}

OAIIntelligenceCloudAutomlXpsReportingMetrics::~OAIIntelligenceCloudAutomlXpsReportingMetrics() {}

void OAIIntelligenceCloudAutomlXpsReportingMetrics::initializeModel() {

    m_effective_training_duration_isSet = false;
    m_effective_training_duration_isValid = false;

    m_metric_entries_isSet = false;
    m_metric_entries_isValid = false;
}

void OAIIntelligenceCloudAutomlXpsReportingMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIntelligenceCloudAutomlXpsReportingMetrics::fromJsonObject(QJsonObject json) {

    m_effective_training_duration_isValid = ::OpenAPI::fromJsonValue(m_effective_training_duration, json[QString("effectiveTrainingDuration")]);
    m_effective_training_duration_isSet = !json[QString("effectiveTrainingDuration")].isNull() && m_effective_training_duration_isValid;

    m_metric_entries_isValid = ::OpenAPI::fromJsonValue(m_metric_entries, json[QString("metricEntries")]);
    m_metric_entries_isSet = !json[QString("metricEntries")].isNull() && m_metric_entries_isValid;
}

QString OAIIntelligenceCloudAutomlXpsReportingMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIntelligenceCloudAutomlXpsReportingMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_effective_training_duration_isSet) {
        obj.insert(QString("effectiveTrainingDuration"), ::OpenAPI::toJsonValue(m_effective_training_duration));
    }
    if (m_metric_entries.size() > 0) {
        obj.insert(QString("metricEntries"), ::OpenAPI::toJsonValue(m_metric_entries));
    }
    return obj;
}

QString OAIIntelligenceCloudAutomlXpsReportingMetrics::getEffectiveTrainingDuration() const {
    return m_effective_training_duration;
}
void OAIIntelligenceCloudAutomlXpsReportingMetrics::setEffectiveTrainingDuration(const QString &effective_training_duration) {
    m_effective_training_duration = effective_training_duration;
    m_effective_training_duration_isSet = true;
}

bool OAIIntelligenceCloudAutomlXpsReportingMetrics::is_effective_training_duration_Set() const{
    return m_effective_training_duration_isSet;
}

bool OAIIntelligenceCloudAutomlXpsReportingMetrics::is_effective_training_duration_Valid() const{
    return m_effective_training_duration_isValid;
}

QList<OAIIntelligenceCloudAutomlXpsMetricEntry> OAIIntelligenceCloudAutomlXpsReportingMetrics::getMetricEntries() const {
    return m_metric_entries;
}
void OAIIntelligenceCloudAutomlXpsReportingMetrics::setMetricEntries(const QList<OAIIntelligenceCloudAutomlXpsMetricEntry> &metric_entries) {
    m_metric_entries = metric_entries;
    m_metric_entries_isSet = true;
}

bool OAIIntelligenceCloudAutomlXpsReportingMetrics::is_metric_entries_Set() const{
    return m_metric_entries_isSet;
}

bool OAIIntelligenceCloudAutomlXpsReportingMetrics::is_metric_entries_Valid() const{
    return m_metric_entries_isValid;
}

bool OAIIntelligenceCloudAutomlXpsReportingMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_effective_training_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_entries.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIntelligenceCloudAutomlXpsReportingMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
