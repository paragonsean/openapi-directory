/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILearningGenaiRootCodeyOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILearningGenaiRootCodeyOutput::OAILearningGenaiRootCodeyOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILearningGenaiRootCodeyOutput::OAILearningGenaiRootCodeyOutput() {
    this->initializeModel();
}

OAILearningGenaiRootCodeyOutput::~OAILearningGenaiRootCodeyOutput() {}

void OAILearningGenaiRootCodeyOutput::initializeModel() {

    m_codey_chat_metadata_isSet = false;
    m_codey_chat_metadata_isValid = false;

    m_codey_completion_metadata_isSet = false;
    m_codey_completion_metadata_isValid = false;
}

void OAILearningGenaiRootCodeyOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILearningGenaiRootCodeyOutput::fromJsonObject(QJsonObject json) {

    m_codey_chat_metadata_isValid = ::OpenAPI::fromJsonValue(m_codey_chat_metadata, json[QString("codeyChatMetadata")]);
    m_codey_chat_metadata_isSet = !json[QString("codeyChatMetadata")].isNull() && m_codey_chat_metadata_isValid;

    m_codey_completion_metadata_isValid = ::OpenAPI::fromJsonValue(m_codey_completion_metadata, json[QString("codeyCompletionMetadata")]);
    m_codey_completion_metadata_isSet = !json[QString("codeyCompletionMetadata")].isNull() && m_codey_completion_metadata_isValid;
}

QString OAILearningGenaiRootCodeyOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILearningGenaiRootCodeyOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_codey_chat_metadata.isSet()) {
        obj.insert(QString("codeyChatMetadata"), ::OpenAPI::toJsonValue(m_codey_chat_metadata));
    }
    if (m_codey_completion_metadata.isSet()) {
        obj.insert(QString("codeyCompletionMetadata"), ::OpenAPI::toJsonValue(m_codey_completion_metadata));
    }
    return obj;
}

OAILearningGenaiRootCodeyChatMetadata OAILearningGenaiRootCodeyOutput::getCodeyChatMetadata() const {
    return m_codey_chat_metadata;
}
void OAILearningGenaiRootCodeyOutput::setCodeyChatMetadata(const OAILearningGenaiRootCodeyChatMetadata &codey_chat_metadata) {
    m_codey_chat_metadata = codey_chat_metadata;
    m_codey_chat_metadata_isSet = true;
}

bool OAILearningGenaiRootCodeyOutput::is_codey_chat_metadata_Set() const{
    return m_codey_chat_metadata_isSet;
}

bool OAILearningGenaiRootCodeyOutput::is_codey_chat_metadata_Valid() const{
    return m_codey_chat_metadata_isValid;
}

OAILearningGenaiRootCodeyCompletionMetadata OAILearningGenaiRootCodeyOutput::getCodeyCompletionMetadata() const {
    return m_codey_completion_metadata;
}
void OAILearningGenaiRootCodeyOutput::setCodeyCompletionMetadata(const OAILearningGenaiRootCodeyCompletionMetadata &codey_completion_metadata) {
    m_codey_completion_metadata = codey_completion_metadata;
    m_codey_completion_metadata_isSet = true;
}

bool OAILearningGenaiRootCodeyOutput::is_codey_completion_metadata_Set() const{
    return m_codey_completion_metadata_isSet;
}

bool OAILearningGenaiRootCodeyOutput::is_codey_completion_metadata_Valid() const{
    return m_codey_completion_metadata_isValid;
}

bool OAILearningGenaiRootCodeyOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_codey_chat_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_codey_completion_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILearningGenaiRootCodeyOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
