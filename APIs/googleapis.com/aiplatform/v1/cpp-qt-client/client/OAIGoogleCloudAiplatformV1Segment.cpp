/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1Segment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1Segment::OAIGoogleCloudAiplatformV1Segment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1Segment::OAIGoogleCloudAiplatformV1Segment() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1Segment::~OAIGoogleCloudAiplatformV1Segment() {}

void OAIGoogleCloudAiplatformV1Segment::initializeModel() {

    m_end_index_isSet = false;
    m_end_index_isValid = false;

    m_part_index_isSet = false;
    m_part_index_isValid = false;

    m_start_index_isSet = false;
    m_start_index_isValid = false;
}

void OAIGoogleCloudAiplatformV1Segment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1Segment::fromJsonObject(QJsonObject json) {

    m_end_index_isValid = ::OpenAPI::fromJsonValue(m_end_index, json[QString("endIndex")]);
    m_end_index_isSet = !json[QString("endIndex")].isNull() && m_end_index_isValid;

    m_part_index_isValid = ::OpenAPI::fromJsonValue(m_part_index, json[QString("partIndex")]);
    m_part_index_isSet = !json[QString("partIndex")].isNull() && m_part_index_isValid;

    m_start_index_isValid = ::OpenAPI::fromJsonValue(m_start_index, json[QString("startIndex")]);
    m_start_index_isSet = !json[QString("startIndex")].isNull() && m_start_index_isValid;
}

QString OAIGoogleCloudAiplatformV1Segment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1Segment::asJsonObject() const {
    QJsonObject obj;
    if (m_end_index_isSet) {
        obj.insert(QString("endIndex"), ::OpenAPI::toJsonValue(m_end_index));
    }
    if (m_part_index_isSet) {
        obj.insert(QString("partIndex"), ::OpenAPI::toJsonValue(m_part_index));
    }
    if (m_start_index_isSet) {
        obj.insert(QString("startIndex"), ::OpenAPI::toJsonValue(m_start_index));
    }
    return obj;
}

qint32 OAIGoogleCloudAiplatformV1Segment::getEndIndex() const {
    return m_end_index;
}
void OAIGoogleCloudAiplatformV1Segment::setEndIndex(const qint32 &end_index) {
    m_end_index = end_index;
    m_end_index_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Segment::is_end_index_Set() const{
    return m_end_index_isSet;
}

bool OAIGoogleCloudAiplatformV1Segment::is_end_index_Valid() const{
    return m_end_index_isValid;
}

qint32 OAIGoogleCloudAiplatformV1Segment::getPartIndex() const {
    return m_part_index;
}
void OAIGoogleCloudAiplatformV1Segment::setPartIndex(const qint32 &part_index) {
    m_part_index = part_index;
    m_part_index_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Segment::is_part_index_Set() const{
    return m_part_index_isSet;
}

bool OAIGoogleCloudAiplatformV1Segment::is_part_index_Valid() const{
    return m_part_index_isValid;
}

qint32 OAIGoogleCloudAiplatformV1Segment::getStartIndex() const {
    return m_start_index;
}
void OAIGoogleCloudAiplatformV1Segment::setStartIndex(const qint32 &start_index) {
    m_start_index = start_index;
    m_start_index_isSet = true;
}

bool OAIGoogleCloudAiplatformV1Segment::is_start_index_Set() const{
    return m_start_index_isSet;
}

bool OAIGoogleCloudAiplatformV1Segment::is_start_index_Valid() const{
    return m_start_index_isValid;
}

bool OAIGoogleCloudAiplatformV1Segment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_part_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_index_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1Segment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
