/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1ModelEvaluation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1ModelEvaluation::OAIGoogleCloudAiplatformV1ModelEvaluation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1ModelEvaluation::OAIGoogleCloudAiplatformV1ModelEvaluation() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1ModelEvaluation::~OAIGoogleCloudAiplatformV1ModelEvaluation() {}

void OAIGoogleCloudAiplatformV1ModelEvaluation::initializeModel() {

    m_annotation_schema_uri_isSet = false;
    m_annotation_schema_uri_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_data_item_schema_uri_isSet = false;
    m_data_item_schema_uri_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_explanation_specs_isSet = false;
    m_explanation_specs_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_metrics_schema_uri_isSet = false;
    m_metrics_schema_uri_isValid = false;

    m_model_explanation_isSet = false;
    m_model_explanation_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_slice_dimensions_isSet = false;
    m_slice_dimensions_isValid = false;
}

void OAIGoogleCloudAiplatformV1ModelEvaluation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1ModelEvaluation::fromJsonObject(QJsonObject json) {

    m_annotation_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_annotation_schema_uri, json[QString("annotationSchemaUri")]);
    m_annotation_schema_uri_isSet = !json[QString("annotationSchemaUri")].isNull() && m_annotation_schema_uri_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_data_item_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_data_item_schema_uri, json[QString("dataItemSchemaUri")]);
    m_data_item_schema_uri_isSet = !json[QString("dataItemSchemaUri")].isNull() && m_data_item_schema_uri_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_explanation_specs_isValid = ::OpenAPI::fromJsonValue(m_explanation_specs, json[QString("explanationSpecs")]);
    m_explanation_specs_isSet = !json[QString("explanationSpecs")].isNull() && m_explanation_specs_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_metrics_schema_uri_isValid = ::OpenAPI::fromJsonValue(m_metrics_schema_uri, json[QString("metricsSchemaUri")]);
    m_metrics_schema_uri_isSet = !json[QString("metricsSchemaUri")].isNull() && m_metrics_schema_uri_isValid;

    m_model_explanation_isValid = ::OpenAPI::fromJsonValue(m_model_explanation, json[QString("modelExplanation")]);
    m_model_explanation_isSet = !json[QString("modelExplanation")].isNull() && m_model_explanation_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_slice_dimensions_isValid = ::OpenAPI::fromJsonValue(m_slice_dimensions, json[QString("sliceDimensions")]);
    m_slice_dimensions_isSet = !json[QString("sliceDimensions")].isNull() && m_slice_dimensions_isValid;
}

QString OAIGoogleCloudAiplatformV1ModelEvaluation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1ModelEvaluation::asJsonObject() const {
    QJsonObject obj;
    if (m_annotation_schema_uri_isSet) {
        obj.insert(QString("annotationSchemaUri"), ::OpenAPI::toJsonValue(m_annotation_schema_uri));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_data_item_schema_uri_isSet) {
        obj.insert(QString("dataItemSchemaUri"), ::OpenAPI::toJsonValue(m_data_item_schema_uri));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_explanation_specs.size() > 0) {
        obj.insert(QString("explanationSpecs"), ::OpenAPI::toJsonValue(m_explanation_specs));
    }
    if (m_metadata_isSet) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_metrics_isSet) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_metrics_schema_uri_isSet) {
        obj.insert(QString("metricsSchemaUri"), ::OpenAPI::toJsonValue(m_metrics_schema_uri));
    }
    if (m_model_explanation.isSet()) {
        obj.insert(QString("modelExplanation"), ::OpenAPI::toJsonValue(m_model_explanation));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_slice_dimensions.size() > 0) {
        obj.insert(QString("sliceDimensions"), ::OpenAPI::toJsonValue(m_slice_dimensions));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1ModelEvaluation::getAnnotationSchemaUri() const {
    return m_annotation_schema_uri;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setAnnotationSchemaUri(const QString &annotation_schema_uri) {
    m_annotation_schema_uri = annotation_schema_uri;
    m_annotation_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_annotation_schema_uri_Set() const{
    return m_annotation_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_annotation_schema_uri_Valid() const{
    return m_annotation_schema_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1ModelEvaluation::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleCloudAiplatformV1ModelEvaluation::getDataItemSchemaUri() const {
    return m_data_item_schema_uri;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setDataItemSchemaUri(const QString &data_item_schema_uri) {
    m_data_item_schema_uri = data_item_schema_uri;
    m_data_item_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_data_item_schema_uri_Set() const{
    return m_data_item_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_data_item_schema_uri_Valid() const{
    return m_data_item_schema_uri_isValid;
}

QString OAIGoogleCloudAiplatformV1ModelEvaluation::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QList<OAIGoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec> OAIGoogleCloudAiplatformV1ModelEvaluation::getExplanationSpecs() const {
    return m_explanation_specs;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setExplanationSpecs(const QList<OAIGoogleCloudAiplatformV1ModelEvaluationModelEvaluationExplanationSpec> &explanation_specs) {
    m_explanation_specs = explanation_specs;
    m_explanation_specs_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_explanation_specs_Set() const{
    return m_explanation_specs_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_explanation_specs_Valid() const{
    return m_explanation_specs_isValid;
}

QJsonValue OAIGoogleCloudAiplatformV1ModelEvaluation::getMetadata() const {
    return m_metadata;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setMetadata(const QJsonValue &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QJsonValue OAIGoogleCloudAiplatformV1ModelEvaluation::getMetrics() const {
    return m_metrics;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setMetrics(const QJsonValue &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_metrics_Valid() const{
    return m_metrics_isValid;
}

QString OAIGoogleCloudAiplatformV1ModelEvaluation::getMetricsSchemaUri() const {
    return m_metrics_schema_uri;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setMetricsSchemaUri(const QString &metrics_schema_uri) {
    m_metrics_schema_uri = metrics_schema_uri;
    m_metrics_schema_uri_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_metrics_schema_uri_Set() const{
    return m_metrics_schema_uri_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_metrics_schema_uri_Valid() const{
    return m_metrics_schema_uri_isValid;
}

OAIGoogleCloudAiplatformV1ModelExplanation OAIGoogleCloudAiplatformV1ModelEvaluation::getModelExplanation() const {
    return m_model_explanation;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setModelExplanation(const OAIGoogleCloudAiplatformV1ModelExplanation &model_explanation) {
    m_model_explanation = model_explanation;
    m_model_explanation_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_model_explanation_Set() const{
    return m_model_explanation_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_model_explanation_Valid() const{
    return m_model_explanation_isValid;
}

QString OAIGoogleCloudAiplatformV1ModelEvaluation::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1ModelEvaluation::getSliceDimensions() const {
    return m_slice_dimensions;
}
void OAIGoogleCloudAiplatformV1ModelEvaluation::setSliceDimensions(const QList<QString> &slice_dimensions) {
    m_slice_dimensions = slice_dimensions;
    m_slice_dimensions_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_slice_dimensions_Set() const{
    return m_slice_dimensions_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::is_slice_dimensions_Valid() const{
    return m_slice_dimensions_isValid;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_annotation_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_item_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_explanation_specs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics_schema_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_explanation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slice_dimensions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1ModelEvaluation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
