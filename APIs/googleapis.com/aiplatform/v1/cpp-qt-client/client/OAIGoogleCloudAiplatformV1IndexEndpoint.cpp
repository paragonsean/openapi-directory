/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1IndexEndpoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1IndexEndpoint::OAIGoogleCloudAiplatformV1IndexEndpoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1IndexEndpoint::OAIGoogleCloudAiplatformV1IndexEndpoint() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1IndexEndpoint::~OAIGoogleCloudAiplatformV1IndexEndpoint() {}

void OAIGoogleCloudAiplatformV1IndexEndpoint::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_deployed_indexes_isSet = false;
    m_deployed_indexes_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_enable_private_service_connect_isSet = false;
    m_enable_private_service_connect_isValid = false;

    m_encryption_spec_isSet = false;
    m_encryption_spec_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_private_service_connect_config_isSet = false;
    m_private_service_connect_config_isValid = false;

    m_public_endpoint_domain_name_isSet = false;
    m_public_endpoint_domain_name_isValid = false;

    m_public_endpoint_enabled_isSet = false;
    m_public_endpoint_enabled_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAIGoogleCloudAiplatformV1IndexEndpoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1IndexEndpoint::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_deployed_indexes_isValid = ::OpenAPI::fromJsonValue(m_deployed_indexes, json[QString("deployedIndexes")]);
    m_deployed_indexes_isSet = !json[QString("deployedIndexes")].isNull() && m_deployed_indexes_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_enable_private_service_connect_isValid = ::OpenAPI::fromJsonValue(m_enable_private_service_connect, json[QString("enablePrivateServiceConnect")]);
    m_enable_private_service_connect_isSet = !json[QString("enablePrivateServiceConnect")].isNull() && m_enable_private_service_connect_isValid;

    m_encryption_spec_isValid = ::OpenAPI::fromJsonValue(m_encryption_spec, json[QString("encryptionSpec")]);
    m_encryption_spec_isSet = !json[QString("encryptionSpec")].isNull() && m_encryption_spec_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_private_service_connect_config_isValid = ::OpenAPI::fromJsonValue(m_private_service_connect_config, json[QString("privateServiceConnectConfig")]);
    m_private_service_connect_config_isSet = !json[QString("privateServiceConnectConfig")].isNull() && m_private_service_connect_config_isValid;

    m_public_endpoint_domain_name_isValid = ::OpenAPI::fromJsonValue(m_public_endpoint_domain_name, json[QString("publicEndpointDomainName")]);
    m_public_endpoint_domain_name_isSet = !json[QString("publicEndpointDomainName")].isNull() && m_public_endpoint_domain_name_isValid;

    m_public_endpoint_enabled_isValid = ::OpenAPI::fromJsonValue(m_public_endpoint_enabled, json[QString("publicEndpointEnabled")]);
    m_public_endpoint_enabled_isSet = !json[QString("publicEndpointEnabled")].isNull() && m_public_endpoint_enabled_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAIGoogleCloudAiplatformV1IndexEndpoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1IndexEndpoint::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_deployed_indexes.size() > 0) {
        obj.insert(QString("deployedIndexes"), ::OpenAPI::toJsonValue(m_deployed_indexes));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_enable_private_service_connect_isSet) {
        obj.insert(QString("enablePrivateServiceConnect"), ::OpenAPI::toJsonValue(m_enable_private_service_connect));
    }
    if (m_encryption_spec.isSet()) {
        obj.insert(QString("encryptionSpec"), ::OpenAPI::toJsonValue(m_encryption_spec));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_private_service_connect_config.isSet()) {
        obj.insert(QString("privateServiceConnectConfig"), ::OpenAPI::toJsonValue(m_private_service_connect_config));
    }
    if (m_public_endpoint_domain_name_isSet) {
        obj.insert(QString("publicEndpointDomainName"), ::OpenAPI::toJsonValue(m_public_endpoint_domain_name));
    }
    if (m_public_endpoint_enabled_isSet) {
        obj.insert(QString("publicEndpointEnabled"), ::OpenAPI::toJsonValue(m_public_endpoint_enabled));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1IndexEndpoint::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QList<OAIGoogleCloudAiplatformV1DeployedIndex> OAIGoogleCloudAiplatformV1IndexEndpoint::getDeployedIndexes() const {
    return m_deployed_indexes;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setDeployedIndexes(const QList<OAIGoogleCloudAiplatformV1DeployedIndex> &deployed_indexes) {
    m_deployed_indexes = deployed_indexes;
    m_deployed_indexes_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_deployed_indexes_Set() const{
    return m_deployed_indexes_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_deployed_indexes_Valid() const{
    return m_deployed_indexes_isValid;
}

QString OAIGoogleCloudAiplatformV1IndexEndpoint::getDescription() const {
    return m_description;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudAiplatformV1IndexEndpoint::getDisplayName() const {
    return m_display_name;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::isEnablePrivateServiceConnect() const {
    return m_enable_private_service_connect;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setEnablePrivateServiceConnect(const bool &enable_private_service_connect) {
    m_enable_private_service_connect = enable_private_service_connect;
    m_enable_private_service_connect_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_enable_private_service_connect_Set() const{
    return m_enable_private_service_connect_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_enable_private_service_connect_Valid() const{
    return m_enable_private_service_connect_isValid;
}

OAIGoogleCloudAiplatformV1EncryptionSpec OAIGoogleCloudAiplatformV1IndexEndpoint::getEncryptionSpec() const {
    return m_encryption_spec;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setEncryptionSpec(const OAIGoogleCloudAiplatformV1EncryptionSpec &encryption_spec) {
    m_encryption_spec = encryption_spec;
    m_encryption_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_encryption_spec_Set() const{
    return m_encryption_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_encryption_spec_Valid() const{
    return m_encryption_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1IndexEndpoint::getEtag() const {
    return m_etag;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_etag_Valid() const{
    return m_etag_isValid;
}

QMap<QString, QString> OAIGoogleCloudAiplatformV1IndexEndpoint::getLabels() const {
    return m_labels;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIGoogleCloudAiplatformV1IndexEndpoint::getName() const {
    return m_name;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleCloudAiplatformV1IndexEndpoint::getNetwork() const {
    return m_network;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_network_Set() const{
    return m_network_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_network_Valid() const{
    return m_network_isValid;
}

OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig OAIGoogleCloudAiplatformV1IndexEndpoint::getPrivateServiceConnectConfig() const {
    return m_private_service_connect_config;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setPrivateServiceConnectConfig(const OAIGoogleCloudAiplatformV1PrivateServiceConnectConfig &private_service_connect_config) {
    m_private_service_connect_config = private_service_connect_config;
    m_private_service_connect_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_private_service_connect_config_Set() const{
    return m_private_service_connect_config_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_private_service_connect_config_Valid() const{
    return m_private_service_connect_config_isValid;
}

QString OAIGoogleCloudAiplatformV1IndexEndpoint::getPublicEndpointDomainName() const {
    return m_public_endpoint_domain_name;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setPublicEndpointDomainName(const QString &public_endpoint_domain_name) {
    m_public_endpoint_domain_name = public_endpoint_domain_name;
    m_public_endpoint_domain_name_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_public_endpoint_domain_name_Set() const{
    return m_public_endpoint_domain_name_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_public_endpoint_domain_name_Valid() const{
    return m_public_endpoint_domain_name_isValid;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::isPublicEndpointEnabled() const {
    return m_public_endpoint_enabled;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setPublicEndpointEnabled(const bool &public_endpoint_enabled) {
    m_public_endpoint_enabled = public_endpoint_enabled;
    m_public_endpoint_enabled_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_public_endpoint_enabled_Set() const{
    return m_public_endpoint_enabled_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_public_endpoint_enabled_Valid() const{
    return m_public_endpoint_enabled_isValid;
}

QString OAIGoogleCloudAiplatformV1IndexEndpoint::getUpdateTime() const {
    return m_update_time;
}
void OAIGoogleCloudAiplatformV1IndexEndpoint::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployed_indexes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_private_service_connect_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_encryption_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_service_connect_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_endpoint_domain_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_endpoint_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1IndexEndpoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
