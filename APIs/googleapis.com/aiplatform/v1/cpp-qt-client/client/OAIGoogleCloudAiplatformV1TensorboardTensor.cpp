/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1TensorboardTensor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1TensorboardTensor::OAIGoogleCloudAiplatformV1TensorboardTensor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1TensorboardTensor::OAIGoogleCloudAiplatformV1TensorboardTensor() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1TensorboardTensor::~OAIGoogleCloudAiplatformV1TensorboardTensor() {}

void OAIGoogleCloudAiplatformV1TensorboardTensor::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;

    m_version_number_isSet = false;
    m_version_number_isValid = false;
}

void OAIGoogleCloudAiplatformV1TensorboardTensor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1TensorboardTensor::fromJsonObject(QJsonObject json) {

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;

    m_version_number_isValid = ::OpenAPI::fromJsonValue(m_version_number, json[QString("versionNumber")]);
    m_version_number_isSet = !json[QString("versionNumber")].isNull() && m_version_number_isValid;
}

QString OAIGoogleCloudAiplatformV1TensorboardTensor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1TensorboardTensor::asJsonObject() const {
    QJsonObject obj;
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    if (m_version_number_isSet) {
        obj.insert(QString("versionNumber"), ::OpenAPI::toJsonValue(m_version_number));
    }
    return obj;
}

QByteArray OAIGoogleCloudAiplatformV1TensorboardTensor::getValue() const {
    return m_value;
}
void OAIGoogleCloudAiplatformV1TensorboardTensor::setValue(const QByteArray &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIGoogleCloudAiplatformV1TensorboardTensor::is_value_Set() const{
    return m_value_isSet;
}

bool OAIGoogleCloudAiplatformV1TensorboardTensor::is_value_Valid() const{
    return m_value_isValid;
}

qint32 OAIGoogleCloudAiplatformV1TensorboardTensor::getVersionNumber() const {
    return m_version_number;
}
void OAIGoogleCloudAiplatformV1TensorboardTensor::setVersionNumber(const qint32 &version_number) {
    m_version_number = version_number;
    m_version_number_isSet = true;
}

bool OAIGoogleCloudAiplatformV1TensorboardTensor::is_version_number_Set() const{
    return m_version_number_isSet;
}

bool OAIGoogleCloudAiplatformV1TensorboardTensor::is_version_number_Valid() const{
    return m_version_number_isValid;
}

bool OAIGoogleCloudAiplatformV1TensorboardTensor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1TensorboardTensor::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
