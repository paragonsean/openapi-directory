/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata.h
 *
 * Metadata of the input of a feature. Fields other than InputMetadata.input_baselines are applicable only for Models that are using Vertex AI-provided images for Tensorflow.
 */

#ifndef OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata_H
#define OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata_H

#include <QJsonObject>

#include "OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain.h"
#include "OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain;
class OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization;

class OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata : public OAIObject {
public:
    OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata();
    OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata(QString json);
    ~OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDenseShapeTensorName() const;
    void setDenseShapeTensorName(const QString &dense_shape_tensor_name);
    bool is_dense_shape_tensor_name_Set() const;
    bool is_dense_shape_tensor_name_Valid() const;

    QList<QJsonValue> getEncodedBaselines() const;
    void setEncodedBaselines(const QList<QJsonValue> &encoded_baselines);
    bool is_encoded_baselines_Set() const;
    bool is_encoded_baselines_Valid() const;

    QString getEncodedTensorName() const;
    void setEncodedTensorName(const QString &encoded_tensor_name);
    bool is_encoded_tensor_name_Set() const;
    bool is_encoded_tensor_name_Valid() const;

    QString getEncoding() const;
    void setEncoding(const QString &encoding);
    bool is_encoding_Set() const;
    bool is_encoding_Valid() const;

    OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain getFeatureValueDomain() const;
    void setFeatureValueDomain(const OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain &feature_value_domain);
    bool is_feature_value_domain_Set() const;
    bool is_feature_value_domain_Valid() const;

    QString getGroupName() const;
    void setGroupName(const QString &group_name);
    bool is_group_name_Set() const;
    bool is_group_name_Valid() const;

    QList<QString> getIndexFeatureMapping() const;
    void setIndexFeatureMapping(const QList<QString> &index_feature_mapping);
    bool is_index_feature_mapping_Set() const;
    bool is_index_feature_mapping_Valid() const;

    QString getIndicesTensorName() const;
    void setIndicesTensorName(const QString &indices_tensor_name);
    bool is_indices_tensor_name_Set() const;
    bool is_indices_tensor_name_Valid() const;

    QList<QJsonValue> getInputBaselines() const;
    void setInputBaselines(const QList<QJsonValue> &input_baselines);
    bool is_input_baselines_Set() const;
    bool is_input_baselines_Valid() const;

    QString getInputTensorName() const;
    void setInputTensorName(const QString &input_tensor_name);
    bool is_input_tensor_name_Set() const;
    bool is_input_tensor_name_Valid() const;

    QString getModality() const;
    void setModality(const QString &modality);
    bool is_modality_Set() const;
    bool is_modality_Valid() const;

    OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization getVisualization() const;
    void setVisualization(const OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization &visualization);
    bool is_visualization_Set() const;
    bool is_visualization_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_dense_shape_tensor_name;
    bool m_dense_shape_tensor_name_isSet;
    bool m_dense_shape_tensor_name_isValid;

    QList<QJsonValue> m_encoded_baselines;
    bool m_encoded_baselines_isSet;
    bool m_encoded_baselines_isValid;

    QString m_encoded_tensor_name;
    bool m_encoded_tensor_name_isSet;
    bool m_encoded_tensor_name_isValid;

    QString m_encoding;
    bool m_encoding_isSet;
    bool m_encoding_isValid;

    OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataFeatureValueDomain m_feature_value_domain;
    bool m_feature_value_domain_isSet;
    bool m_feature_value_domain_isValid;

    QString m_group_name;
    bool m_group_name_isSet;
    bool m_group_name_isValid;

    QList<QString> m_index_feature_mapping;
    bool m_index_feature_mapping_isSet;
    bool m_index_feature_mapping_isValid;

    QString m_indices_tensor_name;
    bool m_indices_tensor_name_isSet;
    bool m_indices_tensor_name_isValid;

    QList<QJsonValue> m_input_baselines;
    bool m_input_baselines_isSet;
    bool m_input_baselines_isValid;

    QString m_input_tensor_name;
    bool m_input_tensor_name_isSet;
    bool m_input_tensor_name_isValid;

    QString m_modality;
    bool m_modality_isSet;
    bool m_modality_isValid;

    OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadataVisualization m_visualization;
    bool m_visualization_isSet;
    bool m_visualization_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata)

#endif // OAIGoogleCloudAiplatformV1ExplanationMetadataInputMetadata_H
