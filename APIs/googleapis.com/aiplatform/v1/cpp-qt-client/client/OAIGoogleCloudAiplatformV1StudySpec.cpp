/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1StudySpec.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1StudySpec::OAIGoogleCloudAiplatformV1StudySpec(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1StudySpec::OAIGoogleCloudAiplatformV1StudySpec() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1StudySpec::~OAIGoogleCloudAiplatformV1StudySpec() {}

void OAIGoogleCloudAiplatformV1StudySpec::initializeModel() {

    m_algorithm_isSet = false;
    m_algorithm_isValid = false;

    m_convex_automated_stopping_spec_isSet = false;
    m_convex_automated_stopping_spec_isValid = false;

    m_decay_curve_stopping_spec_isSet = false;
    m_decay_curve_stopping_spec_isValid = false;

    m_measurement_selection_type_isSet = false;
    m_measurement_selection_type_isValid = false;

    m_median_automated_stopping_spec_isSet = false;
    m_median_automated_stopping_spec_isValid = false;

    m_metrics_isSet = false;
    m_metrics_isValid = false;

    m_observation_noise_isSet = false;
    m_observation_noise_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_study_stopping_config_isSet = false;
    m_study_stopping_config_isValid = false;
}

void OAIGoogleCloudAiplatformV1StudySpec::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1StudySpec::fromJsonObject(QJsonObject json) {

    m_algorithm_isValid = ::OpenAPI::fromJsonValue(m_algorithm, json[QString("algorithm")]);
    m_algorithm_isSet = !json[QString("algorithm")].isNull() && m_algorithm_isValid;

    m_convex_automated_stopping_spec_isValid = ::OpenAPI::fromJsonValue(m_convex_automated_stopping_spec, json[QString("convexAutomatedStoppingSpec")]);
    m_convex_automated_stopping_spec_isSet = !json[QString("convexAutomatedStoppingSpec")].isNull() && m_convex_automated_stopping_spec_isValid;

    m_decay_curve_stopping_spec_isValid = ::OpenAPI::fromJsonValue(m_decay_curve_stopping_spec, json[QString("decayCurveStoppingSpec")]);
    m_decay_curve_stopping_spec_isSet = !json[QString("decayCurveStoppingSpec")].isNull() && m_decay_curve_stopping_spec_isValid;

    m_measurement_selection_type_isValid = ::OpenAPI::fromJsonValue(m_measurement_selection_type, json[QString("measurementSelectionType")]);
    m_measurement_selection_type_isSet = !json[QString("measurementSelectionType")].isNull() && m_measurement_selection_type_isValid;

    m_median_automated_stopping_spec_isValid = ::OpenAPI::fromJsonValue(m_median_automated_stopping_spec, json[QString("medianAutomatedStoppingSpec")]);
    m_median_automated_stopping_spec_isSet = !json[QString("medianAutomatedStoppingSpec")].isNull() && m_median_automated_stopping_spec_isValid;

    m_metrics_isValid = ::OpenAPI::fromJsonValue(m_metrics, json[QString("metrics")]);
    m_metrics_isSet = !json[QString("metrics")].isNull() && m_metrics_isValid;

    m_observation_noise_isValid = ::OpenAPI::fromJsonValue(m_observation_noise, json[QString("observationNoise")]);
    m_observation_noise_isSet = !json[QString("observationNoise")].isNull() && m_observation_noise_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_study_stopping_config_isValid = ::OpenAPI::fromJsonValue(m_study_stopping_config, json[QString("studyStoppingConfig")]);
    m_study_stopping_config_isSet = !json[QString("studyStoppingConfig")].isNull() && m_study_stopping_config_isValid;
}

QString OAIGoogleCloudAiplatformV1StudySpec::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1StudySpec::asJsonObject() const {
    QJsonObject obj;
    if (m_algorithm_isSet) {
        obj.insert(QString("algorithm"), ::OpenAPI::toJsonValue(m_algorithm));
    }
    if (m_convex_automated_stopping_spec.isSet()) {
        obj.insert(QString("convexAutomatedStoppingSpec"), ::OpenAPI::toJsonValue(m_convex_automated_stopping_spec));
    }
    if (m_decay_curve_stopping_spec.isSet()) {
        obj.insert(QString("decayCurveStoppingSpec"), ::OpenAPI::toJsonValue(m_decay_curve_stopping_spec));
    }
    if (m_measurement_selection_type_isSet) {
        obj.insert(QString("measurementSelectionType"), ::OpenAPI::toJsonValue(m_measurement_selection_type));
    }
    if (m_median_automated_stopping_spec.isSet()) {
        obj.insert(QString("medianAutomatedStoppingSpec"), ::OpenAPI::toJsonValue(m_median_automated_stopping_spec));
    }
    if (m_metrics.size() > 0) {
        obj.insert(QString("metrics"), ::OpenAPI::toJsonValue(m_metrics));
    }
    if (m_observation_noise_isSet) {
        obj.insert(QString("observationNoise"), ::OpenAPI::toJsonValue(m_observation_noise));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_study_stopping_config.isSet()) {
        obj.insert(QString("studyStoppingConfig"), ::OpenAPI::toJsonValue(m_study_stopping_config));
    }
    return obj;
}

QString OAIGoogleCloudAiplatformV1StudySpec::getAlgorithm() const {
    return m_algorithm;
}
void OAIGoogleCloudAiplatformV1StudySpec::setAlgorithm(const QString &algorithm) {
    m_algorithm = algorithm;
    m_algorithm_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_algorithm_Set() const{
    return m_algorithm_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_algorithm_Valid() const{
    return m_algorithm_isValid;
}

OAIGoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec OAIGoogleCloudAiplatformV1StudySpec::getConvexAutomatedStoppingSpec() const {
    return m_convex_automated_stopping_spec;
}
void OAIGoogleCloudAiplatformV1StudySpec::setConvexAutomatedStoppingSpec(const OAIGoogleCloudAiplatformV1StudySpecConvexAutomatedStoppingSpec &convex_automated_stopping_spec) {
    m_convex_automated_stopping_spec = convex_automated_stopping_spec;
    m_convex_automated_stopping_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_convex_automated_stopping_spec_Set() const{
    return m_convex_automated_stopping_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_convex_automated_stopping_spec_Valid() const{
    return m_convex_automated_stopping_spec_isValid;
}

OAIGoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec OAIGoogleCloudAiplatformV1StudySpec::getDecayCurveStoppingSpec() const {
    return m_decay_curve_stopping_spec;
}
void OAIGoogleCloudAiplatformV1StudySpec::setDecayCurveStoppingSpec(const OAIGoogleCloudAiplatformV1StudySpecDecayCurveAutomatedStoppingSpec &decay_curve_stopping_spec) {
    m_decay_curve_stopping_spec = decay_curve_stopping_spec;
    m_decay_curve_stopping_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_decay_curve_stopping_spec_Set() const{
    return m_decay_curve_stopping_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_decay_curve_stopping_spec_Valid() const{
    return m_decay_curve_stopping_spec_isValid;
}

QString OAIGoogleCloudAiplatformV1StudySpec::getMeasurementSelectionType() const {
    return m_measurement_selection_type;
}
void OAIGoogleCloudAiplatformV1StudySpec::setMeasurementSelectionType(const QString &measurement_selection_type) {
    m_measurement_selection_type = measurement_selection_type;
    m_measurement_selection_type_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_measurement_selection_type_Set() const{
    return m_measurement_selection_type_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_measurement_selection_type_Valid() const{
    return m_measurement_selection_type_isValid;
}

OAIGoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec OAIGoogleCloudAiplatformV1StudySpec::getMedianAutomatedStoppingSpec() const {
    return m_median_automated_stopping_spec;
}
void OAIGoogleCloudAiplatformV1StudySpec::setMedianAutomatedStoppingSpec(const OAIGoogleCloudAiplatformV1StudySpecMedianAutomatedStoppingSpec &median_automated_stopping_spec) {
    m_median_automated_stopping_spec = median_automated_stopping_spec;
    m_median_automated_stopping_spec_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_median_automated_stopping_spec_Set() const{
    return m_median_automated_stopping_spec_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_median_automated_stopping_spec_Valid() const{
    return m_median_automated_stopping_spec_isValid;
}

QList<OAIGoogleCloudAiplatformV1StudySpecMetricSpec> OAIGoogleCloudAiplatformV1StudySpec::getMetrics() const {
    return m_metrics;
}
void OAIGoogleCloudAiplatformV1StudySpec::setMetrics(const QList<OAIGoogleCloudAiplatformV1StudySpecMetricSpec> &metrics) {
    m_metrics = metrics;
    m_metrics_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_metrics_Set() const{
    return m_metrics_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_metrics_Valid() const{
    return m_metrics_isValid;
}

QString OAIGoogleCloudAiplatformV1StudySpec::getObservationNoise() const {
    return m_observation_noise;
}
void OAIGoogleCloudAiplatformV1StudySpec::setObservationNoise(const QString &observation_noise) {
    m_observation_noise = observation_noise;
    m_observation_noise_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_observation_noise_Set() const{
    return m_observation_noise_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_observation_noise_Valid() const{
    return m_observation_noise_isValid;
}

QList<OAIGoogleCloudAiplatformV1StudySpecParameterSpec> OAIGoogleCloudAiplatformV1StudySpec::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudAiplatformV1StudySpec::setParameters(const QList<OAIGoogleCloudAiplatformV1StudySpecParameterSpec> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_parameters_Valid() const{
    return m_parameters_isValid;
}

OAIGoogleCloudAiplatformV1StudySpecStudyStoppingConfig OAIGoogleCloudAiplatformV1StudySpec::getStudyStoppingConfig() const {
    return m_study_stopping_config;
}
void OAIGoogleCloudAiplatformV1StudySpec::setStudyStoppingConfig(const OAIGoogleCloudAiplatformV1StudySpecStudyStoppingConfig &study_stopping_config) {
    m_study_stopping_config = study_stopping_config;
    m_study_stopping_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_study_stopping_config_Set() const{
    return m_study_stopping_config_isSet;
}

bool OAIGoogleCloudAiplatformV1StudySpec::is_study_stopping_config_Valid() const{
    return m_study_stopping_config_isValid;
}

bool OAIGoogleCloudAiplatformV1StudySpec::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_algorithm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_convex_automated_stopping_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_decay_curve_stopping_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_measurement_selection_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_median_automated_stopping_spec.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_observation_noise_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_study_stopping_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1StudySpec::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
