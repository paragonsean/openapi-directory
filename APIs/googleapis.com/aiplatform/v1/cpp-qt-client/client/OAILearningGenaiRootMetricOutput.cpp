/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILearningGenaiRootMetricOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILearningGenaiRootMetricOutput::OAILearningGenaiRootMetricOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILearningGenaiRootMetricOutput::OAILearningGenaiRootMetricOutput() {
    this->initializeModel();
}

OAILearningGenaiRootMetricOutput::~OAILearningGenaiRootMetricOutput() {}

void OAILearningGenaiRootMetricOutput::initializeModel() {

    m_debug_isSet = false;
    m_debug_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_numeric_value_isSet = false;
    m_numeric_value_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_string_value_isSet = false;
    m_string_value_isValid = false;
}

void OAILearningGenaiRootMetricOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILearningGenaiRootMetricOutput::fromJsonObject(QJsonObject json) {

    m_debug_isValid = ::OpenAPI::fromJsonValue(m_debug, json[QString("debug")]);
    m_debug_isSet = !json[QString("debug")].isNull() && m_debug_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_numeric_value_isValid = ::OpenAPI::fromJsonValue(m_numeric_value, json[QString("numericValue")]);
    m_numeric_value_isSet = !json[QString("numericValue")].isNull() && m_numeric_value_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_string_value_isValid = ::OpenAPI::fromJsonValue(m_string_value, json[QString("stringValue")]);
    m_string_value_isSet = !json[QString("stringValue")].isNull() && m_string_value_isValid;
}

QString OAILearningGenaiRootMetricOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILearningGenaiRootMetricOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_debug_isSet) {
        obj.insert(QString("debug"), ::OpenAPI::toJsonValue(m_debug));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_numeric_value_isSet) {
        obj.insert(QString("numericValue"), ::OpenAPI::toJsonValue(m_numeric_value));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_string_value_isSet) {
        obj.insert(QString("stringValue"), ::OpenAPI::toJsonValue(m_string_value));
    }
    return obj;
}

QString OAILearningGenaiRootMetricOutput::getDebug() const {
    return m_debug;
}
void OAILearningGenaiRootMetricOutput::setDebug(const QString &debug) {
    m_debug = debug;
    m_debug_isSet = true;
}

bool OAILearningGenaiRootMetricOutput::is_debug_Set() const{
    return m_debug_isSet;
}

bool OAILearningGenaiRootMetricOutput::is_debug_Valid() const{
    return m_debug_isValid;
}

QString OAILearningGenaiRootMetricOutput::getName() const {
    return m_name;
}
void OAILearningGenaiRootMetricOutput::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILearningGenaiRootMetricOutput::is_name_Set() const{
    return m_name_isSet;
}

bool OAILearningGenaiRootMetricOutput::is_name_Valid() const{
    return m_name_isValid;
}

double OAILearningGenaiRootMetricOutput::getNumericValue() const {
    return m_numeric_value;
}
void OAILearningGenaiRootMetricOutput::setNumericValue(const double &numeric_value) {
    m_numeric_value = numeric_value;
    m_numeric_value_isSet = true;
}

bool OAILearningGenaiRootMetricOutput::is_numeric_value_Set() const{
    return m_numeric_value_isSet;
}

bool OAILearningGenaiRootMetricOutput::is_numeric_value_Valid() const{
    return m_numeric_value_isValid;
}

OAIUtilStatusProto OAILearningGenaiRootMetricOutput::getStatus() const {
    return m_status;
}
void OAILearningGenaiRootMetricOutput::setStatus(const OAIUtilStatusProto &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAILearningGenaiRootMetricOutput::is_status_Set() const{
    return m_status_isSet;
}

bool OAILearningGenaiRootMetricOutput::is_status_Valid() const{
    return m_status_isValid;
}

QString OAILearningGenaiRootMetricOutput::getStringValue() const {
    return m_string_value;
}
void OAILearningGenaiRootMetricOutput::setStringValue(const QString &string_value) {
    m_string_value = string_value;
    m_string_value_isSet = true;
}

bool OAILearningGenaiRootMetricOutput::is_string_value_Set() const{
    return m_string_value_isSet;
}

bool OAILearningGenaiRootMetricOutput::is_string_value_Valid() const{
    return m_string_value_isValid;
}

bool OAILearningGenaiRootMetricOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_debug_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_numeric_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_string_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILearningGenaiRootMetricOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
