/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::~OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest() {}

void OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::initializeModel() {

    m_select_entity_isSet = false;
    m_select_entity_isValid = false;

    m_select_time_range_and_feature_isSet = false;
    m_select_time_range_and_feature_isValid = false;
}

void OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::fromJsonObject(QJsonObject json) {

    m_select_entity_isValid = ::OpenAPI::fromJsonValue(m_select_entity, json[QString("selectEntity")]);
    m_select_entity_isSet = !json[QString("selectEntity")].isNull() && m_select_entity_isValid;

    m_select_time_range_and_feature_isValid = ::OpenAPI::fromJsonValue(m_select_time_range_and_feature, json[QString("selectTimeRangeAndFeature")]);
    m_select_time_range_and_feature_isSet = !json[QString("selectTimeRangeAndFeature")].isNull() && m_select_time_range_and_feature_isValid;
}

QString OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_select_entity.isSet()) {
        obj.insert(QString("selectEntity"), ::OpenAPI::toJsonValue(m_select_entity));
    }
    if (m_select_time_range_and_feature.isSet()) {
        obj.insert(QString("selectTimeRangeAndFeature"), ::OpenAPI::toJsonValue(m_select_time_range_and_feature));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::getSelectEntity() const {
    return m_select_entity;
}
void OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::setSelectEntity(const OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectEntity &select_entity) {
    m_select_entity = select_entity;
    m_select_entity_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::is_select_entity_Set() const{
    return m_select_entity_isSet;
}

bool OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::is_select_entity_Valid() const{
    return m_select_entity_isValid;
}

OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::getSelectTimeRangeAndFeature() const {
    return m_select_time_range_and_feature;
}
void OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::setSelectTimeRangeAndFeature(const OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequestSelectTimeRangeAndFeature &select_time_range_and_feature) {
    m_select_time_range_and_feature = select_time_range_and_feature;
    m_select_time_range_and_feature_isSet = true;
}

bool OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::is_select_time_range_and_feature_Set() const{
    return m_select_time_range_and_feature_isSet;
}

bool OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::is_select_time_range_and_feature_Valid() const{
    return m_select_time_range_and_feature_isValid;
}

bool OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_select_entity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_select_time_range_and_feature.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1DeleteFeatureValuesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
