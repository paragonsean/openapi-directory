/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::~OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig() {}

void OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::initializeModel() {

    m_email_alert_config_isSet = false;
    m_email_alert_config_isValid = false;

    m_enable_logging_isSet = false;
    m_enable_logging_isValid = false;

    m_notification_channels_isSet = false;
    m_notification_channels_isValid = false;
}

void OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::fromJsonObject(QJsonObject json) {

    m_email_alert_config_isValid = ::OpenAPI::fromJsonValue(m_email_alert_config, json[QString("emailAlertConfig")]);
    m_email_alert_config_isSet = !json[QString("emailAlertConfig")].isNull() && m_email_alert_config_isValid;

    m_enable_logging_isValid = ::OpenAPI::fromJsonValue(m_enable_logging, json[QString("enableLogging")]);
    m_enable_logging_isSet = !json[QString("enableLogging")].isNull() && m_enable_logging_isValid;

    m_notification_channels_isValid = ::OpenAPI::fromJsonValue(m_notification_channels, json[QString("notificationChannels")]);
    m_notification_channels_isSet = !json[QString("notificationChannels")].isNull() && m_notification_channels_isValid;
}

QString OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_email_alert_config.isSet()) {
        obj.insert(QString("emailAlertConfig"), ::OpenAPI::toJsonValue(m_email_alert_config));
    }
    if (m_enable_logging_isSet) {
        obj.insert(QString("enableLogging"), ::OpenAPI::toJsonValue(m_enable_logging));
    }
    if (m_notification_channels.size() > 0) {
        obj.insert(QString("notificationChannels"), ::OpenAPI::toJsonValue(m_notification_channels));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::getEmailAlertConfig() const {
    return m_email_alert_config;
}
void OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::setEmailAlertConfig(const OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig &email_alert_config) {
    m_email_alert_config = email_alert_config;
    m_email_alert_config_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::is_email_alert_config_Set() const{
    return m_email_alert_config_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::is_email_alert_config_Valid() const{
    return m_email_alert_config_isValid;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::isEnableLogging() const {
    return m_enable_logging;
}
void OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::setEnableLogging(const bool &enable_logging) {
    m_enable_logging = enable_logging;
    m_enable_logging_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::is_enable_logging_Set() const{
    return m_enable_logging_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::is_enable_logging_Valid() const{
    return m_enable_logging_isValid;
}

QList<QString> OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::getNotificationChannels() const {
    return m_notification_channels;
}
void OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::setNotificationChannels(const QList<QString> &notification_channels) {
    m_notification_channels = notification_channels;
    m_notification_channels_isSet = true;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::is_notification_channels_Set() const{
    return m_notification_channels_isSet;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::is_notification_channels_Valid() const{
    return m_notification_channels_isValid;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_alert_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_enable_logging_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_channels.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1ModelMonitoringAlertConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
