/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest() {
    this->initializeModel();
}

OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::~OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest() {}

void OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::initializeModel() {

    m_deployment_resource_pool_isSet = false;
    m_deployment_resource_pool_isValid = false;

    m_deployment_resource_pool_id_isSet = false;
    m_deployment_resource_pool_id_isValid = false;
}

void OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::fromJsonObject(QJsonObject json) {

    m_deployment_resource_pool_isValid = ::OpenAPI::fromJsonValue(m_deployment_resource_pool, json[QString("deploymentResourcePool")]);
    m_deployment_resource_pool_isSet = !json[QString("deploymentResourcePool")].isNull() && m_deployment_resource_pool_isValid;

    m_deployment_resource_pool_id_isValid = ::OpenAPI::fromJsonValue(m_deployment_resource_pool_id, json[QString("deploymentResourcePoolId")]);
    m_deployment_resource_pool_id_isSet = !json[QString("deploymentResourcePoolId")].isNull() && m_deployment_resource_pool_id_isValid;
}

QString OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_deployment_resource_pool.isSet()) {
        obj.insert(QString("deploymentResourcePool"), ::OpenAPI::toJsonValue(m_deployment_resource_pool));
    }
    if (m_deployment_resource_pool_id_isSet) {
        obj.insert(QString("deploymentResourcePoolId"), ::OpenAPI::toJsonValue(m_deployment_resource_pool_id));
    }
    return obj;
}

OAIGoogleCloudAiplatformV1DeploymentResourcePool OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::getDeploymentResourcePool() const {
    return m_deployment_resource_pool;
}
void OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::setDeploymentResourcePool(const OAIGoogleCloudAiplatformV1DeploymentResourcePool &deployment_resource_pool) {
    m_deployment_resource_pool = deployment_resource_pool;
    m_deployment_resource_pool_isSet = true;
}

bool OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::is_deployment_resource_pool_Set() const{
    return m_deployment_resource_pool_isSet;
}

bool OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::is_deployment_resource_pool_Valid() const{
    return m_deployment_resource_pool_isValid;
}

QString OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::getDeploymentResourcePoolId() const {
    return m_deployment_resource_pool_id;
}
void OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::setDeploymentResourcePoolId(const QString &deployment_resource_pool_id) {
    m_deployment_resource_pool_id = deployment_resource_pool_id;
    m_deployment_resource_pool_id_isSet = true;
}

bool OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::is_deployment_resource_pool_id_Set() const{
    return m_deployment_resource_pool_id_isSet;
}

bool OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::is_deployment_resource_pool_id_Valid() const{
    return m_deployment_resource_pool_id_isValid;
}

bool OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deployment_resource_pool.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_deployment_resource_pool_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudAiplatformV1CreateDeploymentResourcePoolRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
