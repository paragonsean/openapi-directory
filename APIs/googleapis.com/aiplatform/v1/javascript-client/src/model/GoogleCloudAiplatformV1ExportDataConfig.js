/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1ExportFilterSplit from './GoogleCloudAiplatformV1ExportFilterSplit';
import GoogleCloudAiplatformV1ExportFractionSplit from './GoogleCloudAiplatformV1ExportFractionSplit';
import GoogleCloudAiplatformV1GcsDestination from './GoogleCloudAiplatformV1GcsDestination';

/**
 * The GoogleCloudAiplatformV1ExportDataConfig model module.
 * @module model/GoogleCloudAiplatformV1ExportDataConfig
 * @version v1
 */
class GoogleCloudAiplatformV1ExportDataConfig {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1ExportDataConfig</code>.
     * Describes what part of the Dataset is to be exported, the destination of the export and how to export.
     * @alias module:model/GoogleCloudAiplatformV1ExportDataConfig
     */
    constructor() { 
        
        GoogleCloudAiplatformV1ExportDataConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1ExportDataConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1ExportDataConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1ExportDataConfig} The populated <code>GoogleCloudAiplatformV1ExportDataConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1ExportDataConfig();

            if (data.hasOwnProperty('annotationSchemaUri')) {
                obj['annotationSchemaUri'] = ApiClient.convertToType(data['annotationSchemaUri'], 'String');
            }
            if (data.hasOwnProperty('annotationsFilter')) {
                obj['annotationsFilter'] = ApiClient.convertToType(data['annotationsFilter'], 'String');
            }
            if (data.hasOwnProperty('exportUse')) {
                obj['exportUse'] = ApiClient.convertToType(data['exportUse'], 'String');
            }
            if (data.hasOwnProperty('filterSplit')) {
                obj['filterSplit'] = GoogleCloudAiplatformV1ExportFilterSplit.constructFromObject(data['filterSplit']);
            }
            if (data.hasOwnProperty('fractionSplit')) {
                obj['fractionSplit'] = GoogleCloudAiplatformV1ExportFractionSplit.constructFromObject(data['fractionSplit']);
            }
            if (data.hasOwnProperty('gcsDestination')) {
                obj['gcsDestination'] = GoogleCloudAiplatformV1GcsDestination.constructFromObject(data['gcsDestination']);
            }
            if (data.hasOwnProperty('savedQueryId')) {
                obj['savedQueryId'] = ApiClient.convertToType(data['savedQueryId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1ExportDataConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1ExportDataConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['annotationSchemaUri'] && !(typeof data['annotationSchemaUri'] === 'string' || data['annotationSchemaUri'] instanceof String)) {
            throw new Error("Expected the field `annotationSchemaUri` to be a primitive type in the JSON string but got " + data['annotationSchemaUri']);
        }
        // ensure the json data is a string
        if (data['annotationsFilter'] && !(typeof data['annotationsFilter'] === 'string' || data['annotationsFilter'] instanceof String)) {
            throw new Error("Expected the field `annotationsFilter` to be a primitive type in the JSON string but got " + data['annotationsFilter']);
        }
        // ensure the json data is a string
        if (data['exportUse'] && !(typeof data['exportUse'] === 'string' || data['exportUse'] instanceof String)) {
            throw new Error("Expected the field `exportUse` to be a primitive type in the JSON string but got " + data['exportUse']);
        }
        // validate the optional field `filterSplit`
        if (data['filterSplit']) { // data not null
          GoogleCloudAiplatformV1ExportFilterSplit.validateJSON(data['filterSplit']);
        }
        // validate the optional field `fractionSplit`
        if (data['fractionSplit']) { // data not null
          GoogleCloudAiplatformV1ExportFractionSplit.validateJSON(data['fractionSplit']);
        }
        // validate the optional field `gcsDestination`
        if (data['gcsDestination']) { // data not null
          GoogleCloudAiplatformV1GcsDestination.validateJSON(data['gcsDestination']);
        }
        // ensure the json data is a string
        if (data['savedQueryId'] && !(typeof data['savedQueryId'] === 'string' || data['savedQueryId'] instanceof String)) {
            throw new Error("Expected the field `savedQueryId` to be a primitive type in the JSON string but got " + data['savedQueryId']);
        }

        return true;
    }


}



/**
 * The Cloud Storage URI that points to a YAML file describing the annotation schema. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with metadata of the Dataset specified by dataset_id. Only used for custom training data export use cases. Only applicable to Datasets that have DataItems and Annotations. Only Annotations that both match this schema and belong to DataItems not ignored by the split method are used in respectively training, validation or test role, depending on the role of the DataItem they are on. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both annotations_filter and annotation_schema_uri.
 * @member {String} annotationSchemaUri
 */
GoogleCloudAiplatformV1ExportDataConfig.prototype['annotationSchemaUri'] = undefined;

/**
 * An expression for filtering what part of the Dataset is to be exported. Only Annotations that match this filter will be exported. The filter syntax is the same as in ListAnnotations.
 * @member {String} annotationsFilter
 */
GoogleCloudAiplatformV1ExportDataConfig.prototype['annotationsFilter'] = undefined;

/**
 * Indicates the usage of the exported files.
 * @member {module:model/GoogleCloudAiplatformV1ExportDataConfig.ExportUseEnum} exportUse
 */
GoogleCloudAiplatformV1ExportDataConfig.prototype['exportUse'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1ExportFilterSplit} filterSplit
 */
GoogleCloudAiplatformV1ExportDataConfig.prototype['filterSplit'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1ExportFractionSplit} fractionSplit
 */
GoogleCloudAiplatformV1ExportDataConfig.prototype['fractionSplit'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1GcsDestination} gcsDestination
 */
GoogleCloudAiplatformV1ExportDataConfig.prototype['gcsDestination'] = undefined;

/**
 * The ID of a SavedQuery (annotation set) under the Dataset specified by dataset_id used for filtering Annotations for training. Only used for custom training data export use cases. Only applicable to Datasets that have SavedQueries. Only Annotations that are associated with this SavedQuery are used in respectively training. When used in conjunction with annotations_filter, the Annotations used for training are filtered by both saved_query_id and annotations_filter. Only one of saved_query_id and annotation_schema_uri should be specified as both of them represent the same thing: problem type.
 * @member {String} savedQueryId
 */
GoogleCloudAiplatformV1ExportDataConfig.prototype['savedQueryId'] = undefined;





/**
 * Allowed values for the <code>exportUse</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1ExportDataConfig['ExportUseEnum'] = {

    /**
     * value: "EXPORT_USE_UNSPECIFIED"
     * @const
     */
    "EXPORT_USE_UNSPECIFIED": "EXPORT_USE_UNSPECIFIED",

    /**
     * value: "CUSTOM_CODE_TRAINING"
     * @const
     */
    "CUSTOM_CODE_TRAINING": "CUSTOM_CODE_TRAINING"
};



export default GoogleCloudAiplatformV1ExportDataConfig;

