/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1Model from './GoogleCloudAiplatformV1Model';

/**
 * The GoogleCloudAiplatformV1UploadModelRequest model module.
 * @module model/GoogleCloudAiplatformV1UploadModelRequest
 * @version v1
 */
class GoogleCloudAiplatformV1UploadModelRequest {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1UploadModelRequest</code>.
     * Request message for ModelService.UploadModel.
     * @alias module:model/GoogleCloudAiplatformV1UploadModelRequest
     */
    constructor() { 
        
        GoogleCloudAiplatformV1UploadModelRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1UploadModelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1UploadModelRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1UploadModelRequest} The populated <code>GoogleCloudAiplatformV1UploadModelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1UploadModelRequest();

            if (data.hasOwnProperty('model')) {
                obj['model'] = GoogleCloudAiplatformV1Model.constructFromObject(data['model']);
            }
            if (data.hasOwnProperty('modelId')) {
                obj['modelId'] = ApiClient.convertToType(data['modelId'], 'String');
            }
            if (data.hasOwnProperty('parentModel')) {
                obj['parentModel'] = ApiClient.convertToType(data['parentModel'], 'String');
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1UploadModelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1UploadModelRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `model`
        if (data['model']) { // data not null
          GoogleCloudAiplatformV1Model.validateJSON(data['model']);
        }
        // ensure the json data is a string
        if (data['modelId'] && !(typeof data['modelId'] === 'string' || data['modelId'] instanceof String)) {
            throw new Error("Expected the field `modelId` to be a primitive type in the JSON string but got " + data['modelId']);
        }
        // ensure the json data is a string
        if (data['parentModel'] && !(typeof data['parentModel'] === 'string' || data['parentModel'] instanceof String)) {
            throw new Error("Expected the field `parentModel` to be a primitive type in the JSON string but got " + data['parentModel']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1Model} model
 */
GoogleCloudAiplatformV1UploadModelRequest.prototype['model'] = undefined;

/**
 * Optional. The ID to use for the uploaded Model, which will become the final component of the model resource name. This value may be up to 63 characters, and valid characters are `[a-z0-9_-]`. The first character cannot be a number or hyphen.
 * @member {String} modelId
 */
GoogleCloudAiplatformV1UploadModelRequest.prototype['modelId'] = undefined;

/**
 * Optional. The resource name of the model into which to upload the version. Only specify this field when uploading a new version.
 * @member {String} parentModel
 */
GoogleCloudAiplatformV1UploadModelRequest.prototype['parentModel'] = undefined;

/**
 * Optional. The user-provided custom service account to use to do the model upload. If empty, [Vertex AI Service Agent](https://cloud.google.com/vertex-ai/docs/general/access-control#service-agents) will be used to access resources needed to upload the model. This account must belong to the target project where the model is uploaded to, i.e., the project specified in the `parent` field of this request and have necessary read permissions (to Google Cloud Storage, Artifact Registry, etc.).
 * @member {String} serviceAccount
 */
GoogleCloudAiplatformV1UploadModelRequest.prototype['serviceAccount'] = undefined;






export default GoogleCloudAiplatformV1UploadModelRequest;

