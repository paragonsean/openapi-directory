/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudAiplatformV1SchemaImageDataItem model module.
 * @module model/GoogleCloudAiplatformV1SchemaImageDataItem
 * @version v1
 */
class GoogleCloudAiplatformV1SchemaImageDataItem {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1SchemaImageDataItem</code>.
     * Payload of Image DataItem.
     * @alias module:model/GoogleCloudAiplatformV1SchemaImageDataItem
     */
    constructor() { 
        
        GoogleCloudAiplatformV1SchemaImageDataItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1SchemaImageDataItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1SchemaImageDataItem} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1SchemaImageDataItem} The populated <code>GoogleCloudAiplatformV1SchemaImageDataItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1SchemaImageDataItem();

            if (data.hasOwnProperty('gcsUri')) {
                obj['gcsUri'] = ApiClient.convertToType(data['gcsUri'], 'String');
            }
            if (data.hasOwnProperty('mimeType')) {
                obj['mimeType'] = ApiClient.convertToType(data['mimeType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1SchemaImageDataItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1SchemaImageDataItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gcsUri'] && !(typeof data['gcsUri'] === 'string' || data['gcsUri'] instanceof String)) {
            throw new Error("Expected the field `gcsUri` to be a primitive type in the JSON string but got " + data['gcsUri']);
        }
        // ensure the json data is a string
        if (data['mimeType'] && !(typeof data['mimeType'] === 'string' || data['mimeType'] instanceof String)) {
            throw new Error("Expected the field `mimeType` to be a primitive type in the JSON string but got " + data['mimeType']);
        }

        return true;
    }


}



/**
 * Required. Google Cloud Storage URI points to the original image in user's bucket. The image is up to 30MB in size.
 * @member {String} gcsUri
 */
GoogleCloudAiplatformV1SchemaImageDataItem.prototype['gcsUri'] = undefined;

/**
 * Output only. The mime type of the content of the image. Only the images in below listed mime types are supported. - image/jpeg - image/gif - image/png - image/webp - image/bmp - image/tiff - image/vnd.microsoft.icon
 * @member {String} mimeType
 */
GoogleCloudAiplatformV1SchemaImageDataItem.prototype['mimeType'] = undefined;






export default GoogleCloudAiplatformV1SchemaImageDataItem;

