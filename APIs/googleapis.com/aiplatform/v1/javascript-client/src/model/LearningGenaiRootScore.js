/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LearningGenaiRootCalculationType from './LearningGenaiRootCalculationType';
import LearningGenaiRootInternalMetadata from './LearningGenaiRootInternalMetadata';
import LearningGenaiRootThresholdType from './LearningGenaiRootThresholdType';
import LearningGenaiRootTokensAndLogProbPerDecodingStep from './LearningGenaiRootTokensAndLogProbPerDecodingStep';

/**
 * The LearningGenaiRootScore model module.
 * @module model/LearningGenaiRootScore
 * @version v1
 */
class LearningGenaiRootScore {
    /**
     * Constructs a new <code>LearningGenaiRootScore</code>.
     * @alias module:model/LearningGenaiRootScore
     */
    constructor() { 
        
        LearningGenaiRootScore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootScore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootScore} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootScore} The populated <code>LearningGenaiRootScore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootScore();

            if (data.hasOwnProperty('calculationType')) {
                obj['calculationType'] = LearningGenaiRootCalculationType.constructFromObject(data['calculationType']);
            }
            if (data.hasOwnProperty('internalMetadata')) {
                obj['internalMetadata'] = LearningGenaiRootInternalMetadata.constructFromObject(data['internalMetadata']);
            }
            if (data.hasOwnProperty('thresholdType')) {
                obj['thresholdType'] = LearningGenaiRootThresholdType.constructFromObject(data['thresholdType']);
            }
            if (data.hasOwnProperty('tokensAndLogprobPerDecodingStep')) {
                obj['tokensAndLogprobPerDecodingStep'] = LearningGenaiRootTokensAndLogProbPerDecodingStep.constructFromObject(data['tokensAndLogprobPerDecodingStep']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootScore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootScore</code>.
     */
    static validateJSON(data) {
        // validate the optional field `calculationType`
        if (data['calculationType']) { // data not null
          LearningGenaiRootCalculationType.validateJSON(data['calculationType']);
        }
        // validate the optional field `internalMetadata`
        if (data['internalMetadata']) { // data not null
          LearningGenaiRootInternalMetadata.validateJSON(data['internalMetadata']);
        }
        // validate the optional field `thresholdType`
        if (data['thresholdType']) { // data not null
          LearningGenaiRootThresholdType.validateJSON(data['thresholdType']);
        }
        // validate the optional field `tokensAndLogprobPerDecodingStep`
        if (data['tokensAndLogprobPerDecodingStep']) { // data not null
          LearningGenaiRootTokensAndLogProbPerDecodingStep.validateJSON(data['tokensAndLogprobPerDecodingStep']);
        }

        return true;
    }


}



/**
 * @member {module:model/LearningGenaiRootCalculationType} calculationType
 */
LearningGenaiRootScore.prototype['calculationType'] = undefined;

/**
 * @member {module:model/LearningGenaiRootInternalMetadata} internalMetadata
 */
LearningGenaiRootScore.prototype['internalMetadata'] = undefined;

/**
 * @member {module:model/LearningGenaiRootThresholdType} thresholdType
 */
LearningGenaiRootScore.prototype['thresholdType'] = undefined;

/**
 * @member {module:model/LearningGenaiRootTokensAndLogProbPerDecodingStep} tokensAndLogprobPerDecodingStep
 */
LearningGenaiRootScore.prototype['tokensAndLogprobPerDecodingStep'] = undefined;

/**
 * @member {Number} value
 */
LearningGenaiRootScore.prototype['value'] = undefined;






export default LearningGenaiRootScore;

