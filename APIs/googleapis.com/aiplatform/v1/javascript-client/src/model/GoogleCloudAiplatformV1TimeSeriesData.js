/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1TimeSeriesDataPoint from './GoogleCloudAiplatformV1TimeSeriesDataPoint';

/**
 * The GoogleCloudAiplatformV1TimeSeriesData model module.
 * @module model/GoogleCloudAiplatformV1TimeSeriesData
 * @version v1
 */
class GoogleCloudAiplatformV1TimeSeriesData {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1TimeSeriesData</code>.
     * All the data stored in a TensorboardTimeSeries.
     * @alias module:model/GoogleCloudAiplatformV1TimeSeriesData
     */
    constructor() { 
        
        GoogleCloudAiplatformV1TimeSeriesData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1TimeSeriesData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1TimeSeriesData} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1TimeSeriesData} The populated <code>GoogleCloudAiplatformV1TimeSeriesData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1TimeSeriesData();

            if (data.hasOwnProperty('tensorboardTimeSeriesId')) {
                obj['tensorboardTimeSeriesId'] = ApiClient.convertToType(data['tensorboardTimeSeriesId'], 'String');
            }
            if (data.hasOwnProperty('valueType')) {
                obj['valueType'] = ApiClient.convertToType(data['valueType'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [GoogleCloudAiplatformV1TimeSeriesDataPoint]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1TimeSeriesData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1TimeSeriesData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tensorboardTimeSeriesId'] && !(typeof data['tensorboardTimeSeriesId'] === 'string' || data['tensorboardTimeSeriesId'] instanceof String)) {
            throw new Error("Expected the field `tensorboardTimeSeriesId` to be a primitive type in the JSON string but got " + data['tensorboardTimeSeriesId']);
        }
        // ensure the json data is a string
        if (data['valueType'] && !(typeof data['valueType'] === 'string' || data['valueType'] instanceof String)) {
            throw new Error("Expected the field `valueType` to be a primitive type in the JSON string but got " + data['valueType']);
        }
        if (data['values']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['values'])) {
                throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
            }
            // validate the optional field `values` (array)
            for (const item of data['values']) {
                GoogleCloudAiplatformV1TimeSeriesDataPoint.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. The ID of the TensorboardTimeSeries, which will become the final component of the TensorboardTimeSeries' resource name
 * @member {String} tensorboardTimeSeriesId
 */
GoogleCloudAiplatformV1TimeSeriesData.prototype['tensorboardTimeSeriesId'] = undefined;

/**
 * Required. Immutable. The value type of this time series. All the values in this time series data must match this value type.
 * @member {module:model/GoogleCloudAiplatformV1TimeSeriesData.ValueTypeEnum} valueType
 */
GoogleCloudAiplatformV1TimeSeriesData.prototype['valueType'] = undefined;

/**
 * Required. Data points in this time series.
 * @member {Array.<module:model/GoogleCloudAiplatformV1TimeSeriesDataPoint>} values
 */
GoogleCloudAiplatformV1TimeSeriesData.prototype['values'] = undefined;





/**
 * Allowed values for the <code>valueType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1TimeSeriesData['ValueTypeEnum'] = {

    /**
     * value: "VALUE_TYPE_UNSPECIFIED"
     * @const
     */
    "VALUE_TYPE_UNSPECIFIED": "VALUE_TYPE_UNSPECIFIED",

    /**
     * value: "SCALAR"
     * @const
     */
    "SCALAR": "SCALAR",

    /**
     * value: "TENSOR"
     * @const
     */
    "TENSOR": "TENSOR",

    /**
     * value: "BLOB_SEQUENCE"
     * @const
     */
    "BLOB_SEQUENCE": "BLOB_SEQUENCE"
};



export default GoogleCloudAiplatformV1TimeSeriesData;

