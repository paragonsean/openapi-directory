/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata from './GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata';

/**
 * The GoogleCloudAiplatformV1TensorboardTimeSeries model module.
 * @module model/GoogleCloudAiplatformV1TensorboardTimeSeries
 * @version v1
 */
class GoogleCloudAiplatformV1TensorboardTimeSeries {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1TensorboardTimeSeries</code>.
     * TensorboardTimeSeries maps to times series produced in training runs
     * @alias module:model/GoogleCloudAiplatformV1TensorboardTimeSeries
     */
    constructor() { 
        
        GoogleCloudAiplatformV1TensorboardTimeSeries.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1TensorboardTimeSeries</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1TensorboardTimeSeries} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1TensorboardTimeSeries} The populated <code>GoogleCloudAiplatformV1TensorboardTimeSeries</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1TensorboardTimeSeries();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pluginData')) {
                obj['pluginData'] = ApiClient.convertToType(data['pluginData'], 'Blob');
            }
            if (data.hasOwnProperty('pluginName')) {
                obj['pluginName'] = ApiClient.convertToType(data['pluginName'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('valueType')) {
                obj['valueType'] = ApiClient.convertToType(data['valueType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1TensorboardTimeSeries</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1TensorboardTimeSeries</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['pluginName'] && !(typeof data['pluginName'] === 'string' || data['pluginName'] instanceof String)) {
            throw new Error("Expected the field `pluginName` to be a primitive type in the JSON string but got " + data['pluginName']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        // ensure the json data is a string
        if (data['valueType'] && !(typeof data['valueType'] === 'string' || data['valueType'] instanceof String)) {
            throw new Error("Expected the field `valueType` to be a primitive type in the JSON string but got " + data['valueType']);
        }

        return true;
    }


}



/**
 * Output only. Timestamp when this TensorboardTimeSeries was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['createTime'] = undefined;

/**
 * Description of this TensorboardTimeSeries.
 * @member {String} description
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['description'] = undefined;

/**
 * Required. User provided name of this TensorboardTimeSeries. This value should be unique among all TensorboardTimeSeries resources belonging to the same TensorboardRun resource (parent resource).
 * @member {String} displayName
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['displayName'] = undefined;

/**
 * Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.
 * @member {String} etag
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['etag'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1TensorboardTimeSeriesMetadata} metadata
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['metadata'] = undefined;

/**
 * Output only. Name of the TensorboardTimeSeries.
 * @member {String} name
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['name'] = undefined;

/**
 * Data of the current plugin, with the size limited to 65KB.
 * @member {Blob} pluginData
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['pluginData'] = undefined;

/**
 * Immutable. Name of the plugin this time series pertain to. Such as Scalar, Tensor, Blob
 * @member {String} pluginName
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['pluginName'] = undefined;

/**
 * Output only. Timestamp when this TensorboardTimeSeries was last updated.
 * @member {String} updateTime
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['updateTime'] = undefined;

/**
 * Required. Immutable. Type of TensorboardTimeSeries value.
 * @member {module:model/GoogleCloudAiplatformV1TensorboardTimeSeries.ValueTypeEnum} valueType
 */
GoogleCloudAiplatformV1TensorboardTimeSeries.prototype['valueType'] = undefined;





/**
 * Allowed values for the <code>valueType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1TensorboardTimeSeries['ValueTypeEnum'] = {

    /**
     * value: "VALUE_TYPE_UNSPECIFIED"
     * @const
     */
    "VALUE_TYPE_UNSPECIFIED": "VALUE_TYPE_UNSPECIFIED",

    /**
     * value: "SCALAR"
     * @const
     */
    "SCALAR": "SCALAR",

    /**
     * value: "TENSOR"
     * @const
     */
    "TENSOR": "TENSOR",

    /**
     * value: "BLOB_SEQUENCE"
     * @const
     */
    "BLOB_SEQUENCE": "BLOB_SEQUENCE"
};



export default GoogleCloudAiplatformV1TensorboardTimeSeries;

