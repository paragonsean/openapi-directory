/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LearningGenaiRootRuleOutput model module.
 * @module model/LearningGenaiRootRuleOutput
 * @version v1
 */
class LearningGenaiRootRuleOutput {
    /**
     * Constructs a new <code>LearningGenaiRootRuleOutput</code>.
     * @alias module:model/LearningGenaiRootRuleOutput
     */
    constructor() { 
        
        LearningGenaiRootRuleOutput.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootRuleOutput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootRuleOutput} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootRuleOutput} The populated <code>LearningGenaiRootRuleOutput</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootRuleOutput();

            if (data.hasOwnProperty('decision')) {
                obj['decision'] = ApiClient.convertToType(data['decision'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootRuleOutput</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootRuleOutput</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['decision'] && !(typeof data['decision'] === 'string' || data['decision'] instanceof String)) {
            throw new Error("Expected the field `decision` to be a primitive type in the JSON string but got " + data['decision']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/LearningGenaiRootRuleOutput.DecisionEnum} decision
 */
LearningGenaiRootRuleOutput.prototype['decision'] = undefined;

/**
 * @member {String} name
 */
LearningGenaiRootRuleOutput.prototype['name'] = undefined;





/**
 * Allowed values for the <code>decision</code> property.
 * @enum {String}
 * @readonly
 */
LearningGenaiRootRuleOutput['DecisionEnum'] = {

    /**
     * value: "NO_MATCH"
     * @const
     */
    "NO_MATCH": "NO_MATCH",

    /**
     * value: "MATCH"
     * @const
     */
    "MATCH": "MATCH"
};



export default LearningGenaiRootRuleOutput;

