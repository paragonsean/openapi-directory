/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CloudAiLargeModelsVisionRelativeTemporalPartition model module.
 * @module model/CloudAiLargeModelsVisionRelativeTemporalPartition
 * @version v1
 */
class CloudAiLargeModelsVisionRelativeTemporalPartition {
    /**
     * Constructs a new <code>CloudAiLargeModelsVisionRelativeTemporalPartition</code>.
     * For ease of use, assume that the start_offset is inclusive and the end_offset is exclusive. In mathematical terms, the partition would be written as [start_offset, end_offset).
     * @alias module:model/CloudAiLargeModelsVisionRelativeTemporalPartition
     */
    constructor() { 
        
        CloudAiLargeModelsVisionRelativeTemporalPartition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudAiLargeModelsVisionRelativeTemporalPartition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudAiLargeModelsVisionRelativeTemporalPartition} obj Optional instance to populate.
     * @return {module:model/CloudAiLargeModelsVisionRelativeTemporalPartition} The populated <code>CloudAiLargeModelsVisionRelativeTemporalPartition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudAiLargeModelsVisionRelativeTemporalPartition();

            if (data.hasOwnProperty('endOffset')) {
                obj['endOffset'] = ApiClient.convertToType(data['endOffset'], 'String');
            }
            if (data.hasOwnProperty('startOffset')) {
                obj['startOffset'] = ApiClient.convertToType(data['startOffset'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudAiLargeModelsVisionRelativeTemporalPartition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudAiLargeModelsVisionRelativeTemporalPartition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endOffset'] && !(typeof data['endOffset'] === 'string' || data['endOffset'] instanceof String)) {
            throw new Error("Expected the field `endOffset` to be a primitive type in the JSON string but got " + data['endOffset']);
        }
        // ensure the json data is a string
        if (data['startOffset'] && !(typeof data['startOffset'] === 'string' || data['startOffset'] instanceof String)) {
            throw new Error("Expected the field `startOffset` to be a primitive type in the JSON string but got " + data['startOffset']);
        }

        return true;
    }


}



/**
 * End time offset of the partition.
 * @member {String} endOffset
 */
CloudAiLargeModelsVisionRelativeTemporalPartition.prototype['endOffset'] = undefined;

/**
 * Start time offset of the partition.
 * @member {String} startOffset
 */
CloudAiLargeModelsVisionRelativeTemporalPartition.prototype['startOffset'] = undefined;






export default CloudAiLargeModelsVisionRelativeTemporalPartition;

