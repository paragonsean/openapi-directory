/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem from './GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem';

/**
 * The GoogleCloudAiplatformV1ErrorAnalysisAnnotation model module.
 * @module model/GoogleCloudAiplatformV1ErrorAnalysisAnnotation
 * @version v1
 */
class GoogleCloudAiplatformV1ErrorAnalysisAnnotation {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1ErrorAnalysisAnnotation</code>.
     * Model error analysis for each annotation.
     * @alias module:model/GoogleCloudAiplatformV1ErrorAnalysisAnnotation
     */
    constructor() { 
        
        GoogleCloudAiplatformV1ErrorAnalysisAnnotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1ErrorAnalysisAnnotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1ErrorAnalysisAnnotation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1ErrorAnalysisAnnotation} The populated <code>GoogleCloudAiplatformV1ErrorAnalysisAnnotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1ErrorAnalysisAnnotation();

            if (data.hasOwnProperty('attributedItems')) {
                obj['attributedItems'] = ApiClient.convertToType(data['attributedItems'], [GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem]);
            }
            if (data.hasOwnProperty('outlierScore')) {
                obj['outlierScore'] = ApiClient.convertToType(data['outlierScore'], 'Number');
            }
            if (data.hasOwnProperty('outlierThreshold')) {
                obj['outlierThreshold'] = ApiClient.convertToType(data['outlierThreshold'], 'Number');
            }
            if (data.hasOwnProperty('queryType')) {
                obj['queryType'] = ApiClient.convertToType(data['queryType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1ErrorAnalysisAnnotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1ErrorAnalysisAnnotation</code>.
     */
    static validateJSON(data) {
        if (data['attributedItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attributedItems'])) {
                throw new Error("Expected the field `attributedItems` to be an array in the JSON data but got " + data['attributedItems']);
            }
            // validate the optional field `attributedItems` (array)
            for (const item of data['attributedItems']) {
                GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['queryType'] && !(typeof data['queryType'] === 'string' || data['queryType'] instanceof String)) {
            throw new Error("Expected the field `queryType` to be a primitive type in the JSON string but got " + data['queryType']);
        }

        return true;
    }


}



/**
 * Attributed items for a given annotation, typically representing neighbors from the training sets constrained by the query type.
 * @member {Array.<module:model/GoogleCloudAiplatformV1ErrorAnalysisAnnotationAttributedItem>} attributedItems
 */
GoogleCloudAiplatformV1ErrorAnalysisAnnotation.prototype['attributedItems'] = undefined;

/**
 * The outlier score of this annotated item. Usually defined as the min of all distances from attributed items.
 * @member {Number} outlierScore
 */
GoogleCloudAiplatformV1ErrorAnalysisAnnotation.prototype['outlierScore'] = undefined;

/**
 * The threshold used to determine if this annotation is an outlier or not.
 * @member {Number} outlierThreshold
 */
GoogleCloudAiplatformV1ErrorAnalysisAnnotation.prototype['outlierThreshold'] = undefined;

/**
 * The query type used for finding the attributed items.
 * @member {module:model/GoogleCloudAiplatformV1ErrorAnalysisAnnotation.QueryTypeEnum} queryType
 */
GoogleCloudAiplatformV1ErrorAnalysisAnnotation.prototype['queryType'] = undefined;





/**
 * Allowed values for the <code>queryType</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1ErrorAnalysisAnnotation['QueryTypeEnum'] = {

    /**
     * value: "QUERY_TYPE_UNSPECIFIED"
     * @const
     */
    "QUERY_TYPE_UNSPECIFIED": "QUERY_TYPE_UNSPECIFIED",

    /**
     * value: "ALL_SIMILAR"
     * @const
     */
    "ALL_SIMILAR": "ALL_SIMILAR",

    /**
     * value: "SAME_CLASS_SIMILAR"
     * @const
     */
    "SAME_CLASS_SIMILAR": "SAME_CLASS_SIMILAR",

    /**
     * value: "SAME_CLASS_DISSIMILAR"
     * @const
     */
    "SAME_CLASS_DISSIMILAR": "SAME_CLASS_DISSIMILAR"
};



export default GoogleCloudAiplatformV1ErrorAnalysisAnnotation;

