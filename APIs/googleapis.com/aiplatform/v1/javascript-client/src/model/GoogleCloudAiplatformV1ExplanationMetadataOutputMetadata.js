/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata model module.
 * @module model/GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata
 * @version v1
 */
class GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata</code>.
     * Metadata of the prediction output to be explained.
     * @alias module:model/GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata
     */
    constructor() { 
        
        GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata} The populated <code>GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata();

            if (data.hasOwnProperty('displayNameMappingKey')) {
                obj['displayNameMappingKey'] = ApiClient.convertToType(data['displayNameMappingKey'], 'String');
            }
            if (data.hasOwnProperty('indexDisplayNameMapping')) {
                obj['indexDisplayNameMapping'] = ApiClient.convertToType(data['indexDisplayNameMapping'], Object);
            }
            if (data.hasOwnProperty('outputTensorName')) {
                obj['outputTensorName'] = ApiClient.convertToType(data['outputTensorName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayNameMappingKey'] && !(typeof data['displayNameMappingKey'] === 'string' || data['displayNameMappingKey'] instanceof String)) {
            throw new Error("Expected the field `displayNameMappingKey` to be a primitive type in the JSON string but got " + data['displayNameMappingKey']);
        }
        // ensure the json data is a string
        if (data['outputTensorName'] && !(typeof data['outputTensorName'] === 'string' || data['outputTensorName'] instanceof String)) {
            throw new Error("Expected the field `outputTensorName` to be a primitive type in the JSON string but got " + data['outputTensorName']);
        }

        return true;
    }


}



/**
 * Specify a field name in the prediction to look for the display name. Use this if the prediction contains the display names for the outputs. The display names in the prediction must have the same shape of the outputs, so that it can be located by Attribution.output_index for a specific output.
 * @member {String} displayNameMappingKey
 */
GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.prototype['displayNameMappingKey'] = undefined;

/**
 * Static mapping between the index and display name. Use this if the outputs are a deterministic n-dimensional array, e.g. a list of scores of all the classes in a pre-defined order for a multi-classification Model. It's not feasible if the outputs are non-deterministic, e.g. the Model produces top-k classes or sort the outputs by their values. The shape of the value must be an n-dimensional array of strings. The number of dimensions must match that of the outputs to be explained. The Attribution.output_display_name is populated by locating in the mapping with Attribution.output_index.
 * @member {Object} indexDisplayNameMapping
 */
GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.prototype['indexDisplayNameMapping'] = undefined;

/**
 * Name of the output tensor. Required and is only applicable to Vertex AI provided images for Tensorflow.
 * @member {String} outputTensorName
 */
GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata.prototype['outputTensorName'] = undefined;






export default GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata;

