/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1IndexDatapointCrowdingTag from './GoogleCloudAiplatformV1IndexDatapointCrowdingTag';
import GoogleCloudAiplatformV1IndexDatapointNumericRestriction from './GoogleCloudAiplatformV1IndexDatapointNumericRestriction';
import GoogleCloudAiplatformV1IndexDatapointRestriction from './GoogleCloudAiplatformV1IndexDatapointRestriction';

/**
 * The GoogleCloudAiplatformV1IndexDatapoint model module.
 * @module model/GoogleCloudAiplatformV1IndexDatapoint
 * @version v1
 */
class GoogleCloudAiplatformV1IndexDatapoint {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1IndexDatapoint</code>.
     * A datapoint of Index.
     * @alias module:model/GoogleCloudAiplatformV1IndexDatapoint
     */
    constructor() { 
        
        GoogleCloudAiplatformV1IndexDatapoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1IndexDatapoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1IndexDatapoint} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1IndexDatapoint} The populated <code>GoogleCloudAiplatformV1IndexDatapoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1IndexDatapoint();

            if (data.hasOwnProperty('crowdingTag')) {
                obj['crowdingTag'] = GoogleCloudAiplatformV1IndexDatapointCrowdingTag.constructFromObject(data['crowdingTag']);
            }
            if (data.hasOwnProperty('datapointId')) {
                obj['datapointId'] = ApiClient.convertToType(data['datapointId'], 'String');
            }
            if (data.hasOwnProperty('featureVector')) {
                obj['featureVector'] = ApiClient.convertToType(data['featureVector'], ['Number']);
            }
            if (data.hasOwnProperty('numericRestricts')) {
                obj['numericRestricts'] = ApiClient.convertToType(data['numericRestricts'], [GoogleCloudAiplatformV1IndexDatapointNumericRestriction]);
            }
            if (data.hasOwnProperty('restricts')) {
                obj['restricts'] = ApiClient.convertToType(data['restricts'], [GoogleCloudAiplatformV1IndexDatapointRestriction]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1IndexDatapoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1IndexDatapoint</code>.
     */
    static validateJSON(data) {
        // validate the optional field `crowdingTag`
        if (data['crowdingTag']) { // data not null
          GoogleCloudAiplatformV1IndexDatapointCrowdingTag.validateJSON(data['crowdingTag']);
        }
        // ensure the json data is a string
        if (data['datapointId'] && !(typeof data['datapointId'] === 'string' || data['datapointId'] instanceof String)) {
            throw new Error("Expected the field `datapointId` to be a primitive type in the JSON string but got " + data['datapointId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['featureVector'])) {
            throw new Error("Expected the field `featureVector` to be an array in the JSON data but got " + data['featureVector']);
        }
        if (data['numericRestricts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['numericRestricts'])) {
                throw new Error("Expected the field `numericRestricts` to be an array in the JSON data but got " + data['numericRestricts']);
            }
            // validate the optional field `numericRestricts` (array)
            for (const item of data['numericRestricts']) {
                GoogleCloudAiplatformV1IndexDatapointNumericRestriction.validateJSON(item);
            };
        }
        if (data['restricts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['restricts'])) {
                throw new Error("Expected the field `restricts` to be an array in the JSON data but got " + data['restricts']);
            }
            // validate the optional field `restricts` (array)
            for (const item of data['restricts']) {
                GoogleCloudAiplatformV1IndexDatapointRestriction.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1IndexDatapointCrowdingTag} crowdingTag
 */
GoogleCloudAiplatformV1IndexDatapoint.prototype['crowdingTag'] = undefined;

/**
 * Required. Unique identifier of the datapoint.
 * @member {String} datapointId
 */
GoogleCloudAiplatformV1IndexDatapoint.prototype['datapointId'] = undefined;

/**
 * Required. Feature embedding vector. An array of numbers with the length of [NearestNeighborSearchConfig.dimensions].
 * @member {Array.<Number>} featureVector
 */
GoogleCloudAiplatformV1IndexDatapoint.prototype['featureVector'] = undefined;

/**
 * Optional. List of Restrict of the datapoint, used to perform \"restricted searches\" where boolean rule are used to filter the subset of the database eligible for matching. This uses numeric comparisons.
 * @member {Array.<module:model/GoogleCloudAiplatformV1IndexDatapointNumericRestriction>} numericRestricts
 */
GoogleCloudAiplatformV1IndexDatapoint.prototype['numericRestricts'] = undefined;

/**
 * Optional. List of Restrict of the datapoint, used to perform \"restricted searches\" where boolean rule are used to filter the subset of the database eligible for matching. This uses categorical tokens. See: https://cloud.google.com/vertex-ai/docs/matching-engine/filtering
 * @member {Array.<module:model/GoogleCloudAiplatformV1IndexDatapointRestriction>} restricts
 */
GoogleCloudAiplatformV1IndexDatapoint.prototype['restricts'] = undefined;






export default GoogleCloudAiplatformV1IndexDatapoint;

