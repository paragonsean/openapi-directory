/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LearningGenaiRootGroundingMetadataCitation from './LearningGenaiRootGroundingMetadataCitation';

/**
 * The LearningGenaiRootGroundingMetadata model module.
 * @module model/LearningGenaiRootGroundingMetadata
 * @version v1
 */
class LearningGenaiRootGroundingMetadata {
    /**
     * Constructs a new <code>LearningGenaiRootGroundingMetadata</code>.
     * @alias module:model/LearningGenaiRootGroundingMetadata
     */
    constructor() { 
        
        LearningGenaiRootGroundingMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootGroundingMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootGroundingMetadata} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootGroundingMetadata} The populated <code>LearningGenaiRootGroundingMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootGroundingMetadata();

            if (data.hasOwnProperty('citations')) {
                obj['citations'] = ApiClient.convertToType(data['citations'], [LearningGenaiRootGroundingMetadataCitation]);
            }
            if (data.hasOwnProperty('groundingCancelled')) {
                obj['groundingCancelled'] = ApiClient.convertToType(data['groundingCancelled'], 'Boolean');
            }
            if (data.hasOwnProperty('searchQueries')) {
                obj['searchQueries'] = ApiClient.convertToType(data['searchQueries'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootGroundingMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootGroundingMetadata</code>.
     */
    static validateJSON(data) {
        if (data['citations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['citations'])) {
                throw new Error("Expected the field `citations` to be an array in the JSON data but got " + data['citations']);
            }
            // validate the optional field `citations` (array)
            for (const item of data['citations']) {
                LearningGenaiRootGroundingMetadataCitation.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['searchQueries'])) {
            throw new Error("Expected the field `searchQueries` to be an array in the JSON data but got " + data['searchQueries']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/LearningGenaiRootGroundingMetadataCitation>} citations
 */
LearningGenaiRootGroundingMetadata.prototype['citations'] = undefined;

/**
 * True if grounding is cancelled, for example, no facts being retrieved.
 * @member {Boolean} groundingCancelled
 */
LearningGenaiRootGroundingMetadata.prototype['groundingCancelled'] = undefined;

/**
 * @member {Array.<String>} searchQueries
 */
LearningGenaiRootGroundingMetadata.prototype['searchQueries'] = undefined;






export default LearningGenaiRootGroundingMetadata;

