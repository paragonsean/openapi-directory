/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1CustomJobSpec from './GoogleCloudAiplatformV1CustomJobSpec';
import GoogleCloudAiplatformV1EncryptionSpec from './GoogleCloudAiplatformV1EncryptionSpec';
import GoogleCloudAiplatformV1StudySpec from './GoogleCloudAiplatformV1StudySpec';
import GoogleCloudAiplatformV1Trial from './GoogleCloudAiplatformV1Trial';
import GoogleRpcStatus from './GoogleRpcStatus';

/**
 * The GoogleCloudAiplatformV1HyperparameterTuningJob model module.
 * @module model/GoogleCloudAiplatformV1HyperparameterTuningJob
 * @version v1
 */
class GoogleCloudAiplatformV1HyperparameterTuningJob {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1HyperparameterTuningJob</code>.
     * Represents a HyperparameterTuningJob. A HyperparameterTuningJob has a Study specification and multiple CustomJobs with identical CustomJob specification.
     * @alias module:model/GoogleCloudAiplatformV1HyperparameterTuningJob
     */
    constructor() { 
        
        GoogleCloudAiplatformV1HyperparameterTuningJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1HyperparameterTuningJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1HyperparameterTuningJob} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1HyperparameterTuningJob} The populated <code>GoogleCloudAiplatformV1HyperparameterTuningJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1HyperparameterTuningJob();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('encryptionSpec')) {
                obj['encryptionSpec'] = GoogleCloudAiplatformV1EncryptionSpec.constructFromObject(data['encryptionSpec']);
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = GoogleRpcStatus.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('maxFailedTrialCount')) {
                obj['maxFailedTrialCount'] = ApiClient.convertToType(data['maxFailedTrialCount'], 'Number');
            }
            if (data.hasOwnProperty('maxTrialCount')) {
                obj['maxTrialCount'] = ApiClient.convertToType(data['maxTrialCount'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parallelTrialCount')) {
                obj['parallelTrialCount'] = ApiClient.convertToType(data['parallelTrialCount'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('studySpec')) {
                obj['studySpec'] = GoogleCloudAiplatformV1StudySpec.constructFromObject(data['studySpec']);
            }
            if (data.hasOwnProperty('trialJobSpec')) {
                obj['trialJobSpec'] = GoogleCloudAiplatformV1CustomJobSpec.constructFromObject(data['trialJobSpec']);
            }
            if (data.hasOwnProperty('trials')) {
                obj['trials'] = ApiClient.convertToType(data['trials'], [GoogleCloudAiplatformV1Trial]);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1HyperparameterTuningJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1HyperparameterTuningJob</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `encryptionSpec`
        if (data['encryptionSpec']) { // data not null
          GoogleCloudAiplatformV1EncryptionSpec.validateJSON(data['encryptionSpec']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          GoogleRpcStatus.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `studySpec`
        if (data['studySpec']) { // data not null
          GoogleCloudAiplatformV1StudySpec.validateJSON(data['studySpec']);
        }
        // validate the optional field `trialJobSpec`
        if (data['trialJobSpec']) { // data not null
          GoogleCloudAiplatformV1CustomJobSpec.validateJSON(data['trialJobSpec']);
        }
        if (data['trials']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['trials'])) {
                throw new Error("Expected the field `trials` to be an array in the JSON data but got " + data['trials']);
            }
            // validate the optional field `trials` (array)
            for (const item of data['trials']) {
                GoogleCloudAiplatformV1Trial.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. Time when the HyperparameterTuningJob was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['createTime'] = undefined;

/**
 * Required. The display name of the HyperparameterTuningJob. The name can be up to 128 characters long and can consist of any UTF-8 characters.
 * @member {String} displayName
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1EncryptionSpec} encryptionSpec
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['encryptionSpec'] = undefined;

/**
 * Output only. Time when the HyperparameterTuningJob entered any of the following states: `JOB_STATE_SUCCEEDED`, `JOB_STATE_FAILED`, `JOB_STATE_CANCELLED`.
 * @member {String} endTime
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['endTime'] = undefined;

/**
 * @member {module:model/GoogleRpcStatus} error
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['error'] = undefined;

/**
 * The labels with user-defined metadata to organize HyperparameterTuningJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels.
 * @member {Object.<String, String>} labels
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['labels'] = undefined;

/**
 * The number of failed Trials that need to be seen before failing the HyperparameterTuningJob. If set to 0, Vertex AI decides how many Trials must fail before the whole job fails.
 * @member {Number} maxFailedTrialCount
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['maxFailedTrialCount'] = undefined;

/**
 * Required. The desired total number of Trials.
 * @member {Number} maxTrialCount
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['maxTrialCount'] = undefined;

/**
 * Output only. Resource name of the HyperparameterTuningJob.
 * @member {String} name
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['name'] = undefined;

/**
 * Required. The desired number of Trials to run in parallel.
 * @member {Number} parallelTrialCount
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['parallelTrialCount'] = undefined;

/**
 * Output only. Time when the HyperparameterTuningJob for the first time entered the `JOB_STATE_RUNNING` state.
 * @member {String} startTime
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['startTime'] = undefined;

/**
 * Output only. The detailed state of the job.
 * @member {module:model/GoogleCloudAiplatformV1HyperparameterTuningJob.StateEnum} state
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['state'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1StudySpec} studySpec
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['studySpec'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1CustomJobSpec} trialJobSpec
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['trialJobSpec'] = undefined;

/**
 * Output only. Trials of the HyperparameterTuningJob.
 * @member {Array.<module:model/GoogleCloudAiplatformV1Trial>} trials
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['trials'] = undefined;

/**
 * Output only. Time when the HyperparameterTuningJob was most recently updated.
 * @member {String} updateTime
 */
GoogleCloudAiplatformV1HyperparameterTuningJob.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1HyperparameterTuningJob['StateEnum'] = {

    /**
     * value: "JOB_STATE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "JOB_STATE_UNSPECIFIED",

    /**
     * value: "JOB_STATE_QUEUED"
     * @const
     */
    "QUEUED": "JOB_STATE_QUEUED",

    /**
     * value: "JOB_STATE_PENDING"
     * @const
     */
    "PENDING": "JOB_STATE_PENDING",

    /**
     * value: "JOB_STATE_RUNNING"
     * @const
     */
    "RUNNING": "JOB_STATE_RUNNING",

    /**
     * value: "JOB_STATE_SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "JOB_STATE_SUCCEEDED",

    /**
     * value: "JOB_STATE_FAILED"
     * @const
     */
    "FAILED": "JOB_STATE_FAILED",

    /**
     * value: "JOB_STATE_CANCELLING"
     * @const
     */
    "CANCELLING": "JOB_STATE_CANCELLING",

    /**
     * value: "JOB_STATE_CANCELLED"
     * @const
     */
    "CANCELLED": "JOB_STATE_CANCELLED",

    /**
     * value: "JOB_STATE_PAUSED"
     * @const
     */
    "PAUSED": "JOB_STATE_PAUSED",

    /**
     * value: "JOB_STATE_EXPIRED"
     * @const
     */
    "EXPIRED": "JOB_STATE_EXPIRED",

    /**
     * value: "JOB_STATE_UPDATING"
     * @const
     */
    "UPDATING": "JOB_STATE_UPDATING",

    /**
     * value: "JOB_STATE_PARTIALLY_SUCCEEDED"
     * @const
     */
    "PARTIALLY_SUCCEEDED": "JOB_STATE_PARTIALLY_SUCCEEDED"
};



export default GoogleCloudAiplatformV1HyperparameterTuningJob;

