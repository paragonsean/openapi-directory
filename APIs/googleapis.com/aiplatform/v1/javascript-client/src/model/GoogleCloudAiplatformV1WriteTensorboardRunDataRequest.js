/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1TimeSeriesData from './GoogleCloudAiplatformV1TimeSeriesData';

/**
 * The GoogleCloudAiplatformV1WriteTensorboardRunDataRequest model module.
 * @module model/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest
 * @version v1
 */
class GoogleCloudAiplatformV1WriteTensorboardRunDataRequest {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1WriteTensorboardRunDataRequest</code>.
     * Request message for TensorboardService.WriteTensorboardRunData.
     * @alias module:model/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest
     */
    constructor() { 
        
        GoogleCloudAiplatformV1WriteTensorboardRunDataRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1WriteTensorboardRunDataRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1WriteTensorboardRunDataRequest} The populated <code>GoogleCloudAiplatformV1WriteTensorboardRunDataRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1WriteTensorboardRunDataRequest();

            if (data.hasOwnProperty('tensorboardRun')) {
                obj['tensorboardRun'] = ApiClient.convertToType(data['tensorboardRun'], 'String');
            }
            if (data.hasOwnProperty('timeSeriesData')) {
                obj['timeSeriesData'] = ApiClient.convertToType(data['timeSeriesData'], [GoogleCloudAiplatformV1TimeSeriesData]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1WriteTensorboardRunDataRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1WriteTensorboardRunDataRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['tensorboardRun'] && !(typeof data['tensorboardRun'] === 'string' || data['tensorboardRun'] instanceof String)) {
            throw new Error("Expected the field `tensorboardRun` to be a primitive type in the JSON string but got " + data['tensorboardRun']);
        }
        if (data['timeSeriesData']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['timeSeriesData'])) {
                throw new Error("Expected the field `timeSeriesData` to be an array in the JSON data but got " + data['timeSeriesData']);
            }
            // validate the optional field `timeSeriesData` (array)
            for (const item of data['timeSeriesData']) {
                GoogleCloudAiplatformV1TimeSeriesData.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. The resource name of the TensorboardRun to write data to. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}/experiments/{experiment}/runs/{run}`
 * @member {String} tensorboardRun
 */
GoogleCloudAiplatformV1WriteTensorboardRunDataRequest.prototype['tensorboardRun'] = undefined;

/**
 * Required. The TensorboardTimeSeries data to write. Values with in a time series are indexed by their step value. Repeated writes to the same step will overwrite the existing value for that step. The upper limit of data points per write request is 5000.
 * @member {Array.<module:model/GoogleCloudAiplatformV1TimeSeriesData>} timeSeriesData
 */
GoogleCloudAiplatformV1WriteTensorboardRunDataRequest.prototype['timeSeriesData'] = undefined;






export default GoogleCloudAiplatformV1WriteTensorboardRunDataRequest;

