/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IntelligenceCloudAutomlXpsMetricEntryLabel from './IntelligenceCloudAutomlXpsMetricEntryLabel';

/**
 * The IntelligenceCloudAutomlXpsMetricEntry model module.
 * @module model/IntelligenceCloudAutomlXpsMetricEntry
 * @version v1
 */
class IntelligenceCloudAutomlXpsMetricEntry {
    /**
     * Constructs a new <code>IntelligenceCloudAutomlXpsMetricEntry</code>.
     * @alias module:model/IntelligenceCloudAutomlXpsMetricEntry
     */
    constructor() { 
        
        IntelligenceCloudAutomlXpsMetricEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IntelligenceCloudAutomlXpsMetricEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntelligenceCloudAutomlXpsMetricEntry} obj Optional instance to populate.
     * @return {module:model/IntelligenceCloudAutomlXpsMetricEntry} The populated <code>IntelligenceCloudAutomlXpsMetricEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntelligenceCloudAutomlXpsMetricEntry();

            if (data.hasOwnProperty('argentumMetricId')) {
                obj['argentumMetricId'] = ApiClient.convertToType(data['argentumMetricId'], 'String');
            }
            if (data.hasOwnProperty('doubleValue')) {
                obj['doubleValue'] = ApiClient.convertToType(data['doubleValue'], 'Number');
            }
            if (data.hasOwnProperty('int64Value')) {
                obj['int64Value'] = ApiClient.convertToType(data['int64Value'], 'String');
            }
            if (data.hasOwnProperty('metricName')) {
                obj['metricName'] = ApiClient.convertToType(data['metricName'], 'String');
            }
            if (data.hasOwnProperty('systemLabels')) {
                obj['systemLabels'] = ApiClient.convertToType(data['systemLabels'], [IntelligenceCloudAutomlXpsMetricEntryLabel]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntelligenceCloudAutomlXpsMetricEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntelligenceCloudAutomlXpsMetricEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['argentumMetricId'] && !(typeof data['argentumMetricId'] === 'string' || data['argentumMetricId'] instanceof String)) {
            throw new Error("Expected the field `argentumMetricId` to be a primitive type in the JSON string but got " + data['argentumMetricId']);
        }
        // ensure the json data is a string
        if (data['int64Value'] && !(typeof data['int64Value'] === 'string' || data['int64Value'] instanceof String)) {
            throw new Error("Expected the field `int64Value` to be a primitive type in the JSON string but got " + data['int64Value']);
        }
        // ensure the json data is a string
        if (data['metricName'] && !(typeof data['metricName'] === 'string' || data['metricName'] instanceof String)) {
            throw new Error("Expected the field `metricName` to be a primitive type in the JSON string but got " + data['metricName']);
        }
        if (data['systemLabels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['systemLabels'])) {
                throw new Error("Expected the field `systemLabels` to be an array in the JSON data but got " + data['systemLabels']);
            }
            // validate the optional field `systemLabels` (array)
            for (const item of data['systemLabels']) {
                IntelligenceCloudAutomlXpsMetricEntryLabel.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * For billing metrics that are using legacy sku's, set the legacy billing metric id here. This will be sent to Chemist as the \"cloudbilling.googleapis.com/argentum_metric_id\" label. Otherwise leave empty.
 * @member {String} argentumMetricId
 */
IntelligenceCloudAutomlXpsMetricEntry.prototype['argentumMetricId'] = undefined;

/**
 * A double value.
 * @member {Number} doubleValue
 */
IntelligenceCloudAutomlXpsMetricEntry.prototype['doubleValue'] = undefined;

/**
 * A signed 64-bit integer value.
 * @member {String} int64Value
 */
IntelligenceCloudAutomlXpsMetricEntry.prototype['int64Value'] = undefined;

/**
 * The metric name defined in the service configuration.
 * @member {String} metricName
 */
IntelligenceCloudAutomlXpsMetricEntry.prototype['metricName'] = undefined;

/**
 * Billing system labels for this (metric, value) pair.
 * @member {Array.<module:model/IntelligenceCloudAutomlXpsMetricEntryLabel>} systemLabels
 */
IntelligenceCloudAutomlXpsMetricEntry.prototype['systemLabels'] = undefined;






export default IntelligenceCloudAutomlXpsMetricEntry;

