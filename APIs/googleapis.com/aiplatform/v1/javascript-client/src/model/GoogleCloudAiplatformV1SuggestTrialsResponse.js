/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1Trial from './GoogleCloudAiplatformV1Trial';

/**
 * The GoogleCloudAiplatformV1SuggestTrialsResponse model module.
 * @module model/GoogleCloudAiplatformV1SuggestTrialsResponse
 * @version v1
 */
class GoogleCloudAiplatformV1SuggestTrialsResponse {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1SuggestTrialsResponse</code>.
     * Response message for VizierService.SuggestTrials.
     * @alias module:model/GoogleCloudAiplatformV1SuggestTrialsResponse
     */
    constructor() { 
        
        GoogleCloudAiplatformV1SuggestTrialsResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1SuggestTrialsResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1SuggestTrialsResponse} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1SuggestTrialsResponse} The populated <code>GoogleCloudAiplatformV1SuggestTrialsResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1SuggestTrialsResponse();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('studyState')) {
                obj['studyState'] = ApiClient.convertToType(data['studyState'], 'String');
            }
            if (data.hasOwnProperty('trials')) {
                obj['trials'] = ApiClient.convertToType(data['trials'], [GoogleCloudAiplatformV1Trial]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1SuggestTrialsResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1SuggestTrialsResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['studyState'] && !(typeof data['studyState'] === 'string' || data['studyState'] instanceof String)) {
            throw new Error("Expected the field `studyState` to be a primitive type in the JSON string but got " + data['studyState']);
        }
        if (data['trials']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['trials'])) {
                throw new Error("Expected the field `trials` to be an array in the JSON data but got " + data['trials']);
            }
            // validate the optional field `trials` (array)
            for (const item of data['trials']) {
                GoogleCloudAiplatformV1Trial.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The time at which operation processing completed.
 * @member {String} endTime
 */
GoogleCloudAiplatformV1SuggestTrialsResponse.prototype['endTime'] = undefined;

/**
 * The time at which the operation was started.
 * @member {String} startTime
 */
GoogleCloudAiplatformV1SuggestTrialsResponse.prototype['startTime'] = undefined;

/**
 * The state of the Study.
 * @member {module:model/GoogleCloudAiplatformV1SuggestTrialsResponse.StudyStateEnum} studyState
 */
GoogleCloudAiplatformV1SuggestTrialsResponse.prototype['studyState'] = undefined;

/**
 * A list of Trials.
 * @member {Array.<module:model/GoogleCloudAiplatformV1Trial>} trials
 */
GoogleCloudAiplatformV1SuggestTrialsResponse.prototype['trials'] = undefined;





/**
 * Allowed values for the <code>studyState</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1SuggestTrialsResponse['StudyStateEnum'] = {

    /**
     * value: "STATE_UNSPECIFIED"
     * @const
     */
    "STATE_UNSPECIFIED": "STATE_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE",

    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED"
};



export default GoogleCloudAiplatformV1SuggestTrialsResponse;

