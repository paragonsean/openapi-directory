/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation from './GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation';
import GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation from './GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation';
import GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation from './GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation';

/**
 * The GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation model module.
 * @module model/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation
 * @version v1
 */
class GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation</code>.
     * Annotation details specific to image segmentation.
     * @alias module:model/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation
     */
    constructor() { 
        
        GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation} The populated <code>GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation();

            if (data.hasOwnProperty('maskAnnotation')) {
                obj['maskAnnotation'] = GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation.constructFromObject(data['maskAnnotation']);
            }
            if (data.hasOwnProperty('polygonAnnotation')) {
                obj['polygonAnnotation'] = GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation.constructFromObject(data['polygonAnnotation']);
            }
            if (data.hasOwnProperty('polylineAnnotation')) {
                obj['polylineAnnotation'] = GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation.constructFromObject(data['polylineAnnotation']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `maskAnnotation`
        if (data['maskAnnotation']) { // data not null
          GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation.validateJSON(data['maskAnnotation']);
        }
        // validate the optional field `polygonAnnotation`
        if (data['polygonAnnotation']) { // data not null
          GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation.validateJSON(data['polygonAnnotation']);
        }
        // validate the optional field `polylineAnnotation`
        if (data['polylineAnnotation']) { // data not null
          GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation.validateJSON(data['polylineAnnotation']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationMaskAnnotation} maskAnnotation
 */
GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation.prototype['maskAnnotation'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolygonAnnotation} polygonAnnotation
 */
GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation.prototype['polygonAnnotation'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1SchemaImageSegmentationAnnotationPolylineAnnotation} polylineAnnotation
 */
GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation.prototype['polylineAnnotation'] = undefined;






export default GoogleCloudAiplatformV1SchemaImageSegmentationAnnotation;

