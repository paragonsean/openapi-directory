/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LearningGenaiRootMetricOutput from './LearningGenaiRootMetricOutput';
import LearningGenaiRootRuleOutput from './LearningGenaiRootRuleOutput';

/**
 * The LearningGenaiRootClassifierOutputSummary model module.
 * @module model/LearningGenaiRootClassifierOutputSummary
 * @version v1
 */
class LearningGenaiRootClassifierOutputSummary {
    /**
     * Constructs a new <code>LearningGenaiRootClassifierOutputSummary</code>.
     * @alias module:model/LearningGenaiRootClassifierOutputSummary
     */
    constructor() { 
        
        LearningGenaiRootClassifierOutputSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootClassifierOutputSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootClassifierOutputSummary} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootClassifierOutputSummary} The populated <code>LearningGenaiRootClassifierOutputSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootClassifierOutputSummary();

            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], [LearningGenaiRootMetricOutput]);
            }
            if (data.hasOwnProperty('ruleOutput')) {
                obj['ruleOutput'] = LearningGenaiRootRuleOutput.constructFromObject(data['ruleOutput']);
            }
            if (data.hasOwnProperty('ruleOutputs')) {
                obj['ruleOutputs'] = ApiClient.convertToType(data['ruleOutputs'], [LearningGenaiRootRuleOutput]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootClassifierOutputSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootClassifierOutputSummary</code>.
     */
    static validateJSON(data) {
        if (data['metrics']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metrics'])) {
                throw new Error("Expected the field `metrics` to be an array in the JSON data but got " + data['metrics']);
            }
            // validate the optional field `metrics` (array)
            for (const item of data['metrics']) {
                LearningGenaiRootMetricOutput.validateJSON(item);
            };
        }
        // validate the optional field `ruleOutput`
        if (data['ruleOutput']) { // data not null
          LearningGenaiRootRuleOutput.validateJSON(data['ruleOutput']);
        }
        if (data['ruleOutputs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ruleOutputs'])) {
                throw new Error("Expected the field `ruleOutputs` to be an array in the JSON data but got " + data['ruleOutputs']);
            }
            // validate the optional field `ruleOutputs` (array)
            for (const item of data['ruleOutputs']) {
                LearningGenaiRootRuleOutput.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/LearningGenaiRootMetricOutput>} metrics
 */
LearningGenaiRootClassifierOutputSummary.prototype['metrics'] = undefined;

/**
 * @member {module:model/LearningGenaiRootRuleOutput} ruleOutput
 */
LearningGenaiRootClassifierOutputSummary.prototype['ruleOutput'] = undefined;

/**
 * outputs of all matching rule.
 * @member {Array.<module:model/LearningGenaiRootRuleOutput>} ruleOutputs
 */
LearningGenaiRootClassifierOutputSummary.prototype['ruleOutputs'] = undefined;






export default LearningGenaiRootClassifierOutputSummary;

