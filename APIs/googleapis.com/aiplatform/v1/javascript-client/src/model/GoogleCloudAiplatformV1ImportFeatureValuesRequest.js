/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1AvroSource from './GoogleCloudAiplatformV1AvroSource';
import GoogleCloudAiplatformV1BigQuerySource from './GoogleCloudAiplatformV1BigQuerySource';
import GoogleCloudAiplatformV1CsvSource from './GoogleCloudAiplatformV1CsvSource';
import GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec from './GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec';

/**
 * The GoogleCloudAiplatformV1ImportFeatureValuesRequest model module.
 * @module model/GoogleCloudAiplatformV1ImportFeatureValuesRequest
 * @version v1
 */
class GoogleCloudAiplatformV1ImportFeatureValuesRequest {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1ImportFeatureValuesRequest</code>.
     * Request message for FeaturestoreService.ImportFeatureValues.
     * @alias module:model/GoogleCloudAiplatformV1ImportFeatureValuesRequest
     */
    constructor() { 
        
        GoogleCloudAiplatformV1ImportFeatureValuesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1ImportFeatureValuesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1ImportFeatureValuesRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1ImportFeatureValuesRequest} The populated <code>GoogleCloudAiplatformV1ImportFeatureValuesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1ImportFeatureValuesRequest();

            if (data.hasOwnProperty('avroSource')) {
                obj['avroSource'] = GoogleCloudAiplatformV1AvroSource.constructFromObject(data['avroSource']);
            }
            if (data.hasOwnProperty('bigquerySource')) {
                obj['bigquerySource'] = GoogleCloudAiplatformV1BigQuerySource.constructFromObject(data['bigquerySource']);
            }
            if (data.hasOwnProperty('csvSource')) {
                obj['csvSource'] = GoogleCloudAiplatformV1CsvSource.constructFromObject(data['csvSource']);
            }
            if (data.hasOwnProperty('disableIngestionAnalysis')) {
                obj['disableIngestionAnalysis'] = ApiClient.convertToType(data['disableIngestionAnalysis'], 'Boolean');
            }
            if (data.hasOwnProperty('disableOnlineServing')) {
                obj['disableOnlineServing'] = ApiClient.convertToType(data['disableOnlineServing'], 'Boolean');
            }
            if (data.hasOwnProperty('entityIdField')) {
                obj['entityIdField'] = ApiClient.convertToType(data['entityIdField'], 'String');
            }
            if (data.hasOwnProperty('featureSpecs')) {
                obj['featureSpecs'] = ApiClient.convertToType(data['featureSpecs'], [GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec]);
            }
            if (data.hasOwnProperty('featureTime')) {
                obj['featureTime'] = ApiClient.convertToType(data['featureTime'], 'String');
            }
            if (data.hasOwnProperty('featureTimeField')) {
                obj['featureTimeField'] = ApiClient.convertToType(data['featureTimeField'], 'String');
            }
            if (data.hasOwnProperty('workerCount')) {
                obj['workerCount'] = ApiClient.convertToType(data['workerCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1ImportFeatureValuesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1ImportFeatureValuesRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `avroSource`
        if (data['avroSource']) { // data not null
          GoogleCloudAiplatformV1AvroSource.validateJSON(data['avroSource']);
        }
        // validate the optional field `bigquerySource`
        if (data['bigquerySource']) { // data not null
          GoogleCloudAiplatformV1BigQuerySource.validateJSON(data['bigquerySource']);
        }
        // validate the optional field `csvSource`
        if (data['csvSource']) { // data not null
          GoogleCloudAiplatformV1CsvSource.validateJSON(data['csvSource']);
        }
        // ensure the json data is a string
        if (data['entityIdField'] && !(typeof data['entityIdField'] === 'string' || data['entityIdField'] instanceof String)) {
            throw new Error("Expected the field `entityIdField` to be a primitive type in the JSON string but got " + data['entityIdField']);
        }
        if (data['featureSpecs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['featureSpecs'])) {
                throw new Error("Expected the field `featureSpecs` to be an array in the JSON data but got " + data['featureSpecs']);
            }
            // validate the optional field `featureSpecs` (array)
            for (const item of data['featureSpecs']) {
                GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['featureTime'] && !(typeof data['featureTime'] === 'string' || data['featureTime'] instanceof String)) {
            throw new Error("Expected the field `featureTime` to be a primitive type in the JSON string but got " + data['featureTime']);
        }
        // ensure the json data is a string
        if (data['featureTimeField'] && !(typeof data['featureTimeField'] === 'string' || data['featureTimeField'] instanceof String)) {
            throw new Error("Expected the field `featureTimeField` to be a primitive type in the JSON string but got " + data['featureTimeField']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1AvroSource} avroSource
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['avroSource'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1BigQuerySource} bigquerySource
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['bigquerySource'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1CsvSource} csvSource
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['csvSource'] = undefined;

/**
 * If true, API doesn't start ingestion analysis pipeline.
 * @member {Boolean} disableIngestionAnalysis
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['disableIngestionAnalysis'] = undefined;

/**
 * If set, data will not be imported for online serving. This is typically used for backfilling, where Feature generation timestamps are not in the timestamp range needed for online serving.
 * @member {Boolean} disableOnlineServing
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['disableOnlineServing'] = undefined;

/**
 * Source column that holds entity IDs. If not provided, entity IDs are extracted from the column named entity_id.
 * @member {String} entityIdField
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['entityIdField'] = undefined;

/**
 * Required. Specifications defining which Feature values to import from the entity. The request fails if no feature_specs are provided, and having multiple feature_specs for one Feature is not allowed.
 * @member {Array.<module:model/GoogleCloudAiplatformV1ImportFeatureValuesRequestFeatureSpec>} featureSpecs
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['featureSpecs'] = undefined;

/**
 * Single Feature timestamp for all entities being imported. The timestamp must not have higher than millisecond precision.
 * @member {String} featureTime
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['featureTime'] = undefined;

/**
 * Source column that holds the Feature timestamp for all Feature values in each entity.
 * @member {String} featureTimeField
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['featureTimeField'] = undefined;

/**
 * Specifies the number of workers that are used to write data to the Featurestore. Consider the online serving capacity that you require to achieve the desired import throughput without interfering with online serving. The value must be positive, and less than or equal to 100. If not set, defaults to using 1 worker. The low count ensures minimal impact on online serving performance.
 * @member {Number} workerCount
 */
GoogleCloudAiplatformV1ImportFeatureValuesRequest.prototype['workerCount'] = undefined;






export default GoogleCloudAiplatformV1ImportFeatureValuesRequest;

