/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LearningGenaiRootCodeyTruncatorMetadata from './LearningGenaiRootCodeyTruncatorMetadata';

/**
 * The LearningGenaiRootCodeyCheckpoint model module.
 * @module model/LearningGenaiRootCodeyCheckpoint
 * @version v1
 */
class LearningGenaiRootCodeyCheckpoint {
    /**
     * Constructs a new <code>LearningGenaiRootCodeyCheckpoint</code>.
     * Describes a sample at a checkpoint for post-processing.
     * @alias module:model/LearningGenaiRootCodeyCheckpoint
     */
    constructor() { 
        
        LearningGenaiRootCodeyCheckpoint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootCodeyCheckpoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootCodeyCheckpoint} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootCodeyCheckpoint} The populated <code>LearningGenaiRootCodeyCheckpoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootCodeyCheckpoint();

            if (data.hasOwnProperty('codeyTruncatorMetadata')) {
                obj['codeyTruncatorMetadata'] = LearningGenaiRootCodeyTruncatorMetadata.constructFromObject(data['codeyTruncatorMetadata']);
            }
            if (data.hasOwnProperty('currentSample')) {
                obj['currentSample'] = ApiClient.convertToType(data['currentSample'], 'String');
            }
            if (data.hasOwnProperty('postInferenceStep')) {
                obj['postInferenceStep'] = ApiClient.convertToType(data['postInferenceStep'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootCodeyCheckpoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootCodeyCheckpoint</code>.
     */
    static validateJSON(data) {
        // validate the optional field `codeyTruncatorMetadata`
        if (data['codeyTruncatorMetadata']) { // data not null
          LearningGenaiRootCodeyTruncatorMetadata.validateJSON(data['codeyTruncatorMetadata']);
        }
        // ensure the json data is a string
        if (data['currentSample'] && !(typeof data['currentSample'] === 'string' || data['currentSample'] instanceof String)) {
            throw new Error("Expected the field `currentSample` to be a primitive type in the JSON string but got " + data['currentSample']);
        }
        // ensure the json data is a string
        if (data['postInferenceStep'] && !(typeof data['postInferenceStep'] === 'string' || data['postInferenceStep'] instanceof String)) {
            throw new Error("Expected the field `postInferenceStep` to be a primitive type in the JSON string but got " + data['postInferenceStep']);
        }

        return true;
    }


}



/**
 * @member {module:model/LearningGenaiRootCodeyTruncatorMetadata} codeyTruncatorMetadata
 */
LearningGenaiRootCodeyCheckpoint.prototype['codeyTruncatorMetadata'] = undefined;

/**
 * Current state of the sample after truncator.
 * @member {String} currentSample
 */
LearningGenaiRootCodeyCheckpoint.prototype['currentSample'] = undefined;

/**
 * Postprocessor run that yielded this checkpoint.
 * @member {module:model/LearningGenaiRootCodeyCheckpoint.PostInferenceStepEnum} postInferenceStep
 */
LearningGenaiRootCodeyCheckpoint.prototype['postInferenceStep'] = undefined;





/**
 * Allowed values for the <code>postInferenceStep</code> property.
 * @enum {String}
 * @readonly
 */
LearningGenaiRootCodeyCheckpoint['PostInferenceStepEnum'] = {

    /**
     * value: "STEP_POST_PROCESSING_STEP_UNSPECIFIED"
     * @const
     */
    "POST_PROCESSING_STEP_UNSPECIFIED": "STEP_POST_PROCESSING_STEP_UNSPECIFIED",

    /**
     * value: "STEP_ORIGINAL_MODEL_OUTPUT"
     * @const
     */
    "ORIGINAL_MODEL_OUTPUT": "STEP_ORIGINAL_MODEL_OUTPUT",

    /**
     * value: "STEP_MODEL_OUTPUT_DEDUPLICATION"
     * @const
     */
    "MODEL_OUTPUT_DEDUPLICATION": "STEP_MODEL_OUTPUT_DEDUPLICATION",

    /**
     * value: "STEP_STOP_SEQUENCE_TRUNCATION"
     * @const
     */
    "STOP_SEQUENCE_TRUNCATION": "STEP_STOP_SEQUENCE_TRUNCATION",

    /**
     * value: "STEP_HEURISTIC_TRUNCATION"
     * @const
     */
    "HEURISTIC_TRUNCATION": "STEP_HEURISTIC_TRUNCATION",

    /**
     * value: "STEP_WALD_TRUNCATION"
     * @const
     */
    "WALD_TRUNCATION": "STEP_WALD_TRUNCATION",

    /**
     * value: "STEP_WHITESPACE_TRUNCATION"
     * @const
     */
    "WHITESPACE_TRUNCATION": "STEP_WHITESPACE_TRUNCATION",

    /**
     * value: "STEP_FINAL_DEDUPLICATION"
     * @const
     */
    "FINAL_DEDUPLICATION": "STEP_FINAL_DEDUPLICATION",

    /**
     * value: "STEP_TOXICITY_CHECK"
     * @const
     */
    "TOXICITY_CHECK": "STEP_TOXICITY_CHECK",

    /**
     * value: "STEP_RECITATION_CHECK"
     * @const
     */
    "RECITATION_CHECK": "STEP_RECITATION_CHECK",

    /**
     * value: "STEP_RETURNED"
     * @const
     */
    "RETURNED": "STEP_RETURNED",

    /**
     * value: "STEP_WALKBACK_CORRECTION"
     * @const
     */
    "WALKBACK_CORRECTION": "STEP_WALKBACK_CORRECTION",

    /**
     * value: "STEP_SCORE_THRESHOLDING"
     * @const
     */
    "SCORE_THRESHOLDING": "STEP_SCORE_THRESHOLDING",

    /**
     * value: "STEP_MODEL_CONFIG_STOP_SEQUENCE_TRUNCATION"
     * @const
     */
    "MODEL_CONFIG_STOP_SEQUENCE_TRUNCATION": "STEP_MODEL_CONFIG_STOP_SEQUENCE_TRUNCATION",

    /**
     * value: "STEP_CUSTOM_STOP_SEQUENCE_TRUNCATION"
     * @const
     */
    "CUSTOM_STOP_SEQUENCE_TRUNCATION": "STEP_CUSTOM_STOP_SEQUENCE_TRUNCATION",

    /**
     * value: "STEP_EXPECTED_SAMPLE_SIZE"
     * @const
     */
    "EXPECTED_SAMPLE_SIZE": "STEP_EXPECTED_SAMPLE_SIZE"
};



export default LearningGenaiRootCodeyCheckpoint;

