/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1ExplanationMetadataInputMetadata from './GoogleCloudAiplatformV1ExplanationMetadataInputMetadata';
import GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata from './GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata';

/**
 * The GoogleCloudAiplatformV1ExplanationMetadata model module.
 * @module model/GoogleCloudAiplatformV1ExplanationMetadata
 * @version v1
 */
class GoogleCloudAiplatformV1ExplanationMetadata {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1ExplanationMetadata</code>.
     * Metadata describing the Model&#39;s input and output for explanation.
     * @alias module:model/GoogleCloudAiplatformV1ExplanationMetadata
     */
    constructor() { 
        
        GoogleCloudAiplatformV1ExplanationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1ExplanationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1ExplanationMetadata} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1ExplanationMetadata} The populated <code>GoogleCloudAiplatformV1ExplanationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1ExplanationMetadata();

            if (data.hasOwnProperty('featureAttributionsSchemaUri')) {
                obj['featureAttributionsSchemaUri'] = ApiClient.convertToType(data['featureAttributionsSchemaUri'], 'String');
            }
            if (data.hasOwnProperty('inputs')) {
                obj['inputs'] = ApiClient.convertToType(data['inputs'], {'String': GoogleCloudAiplatformV1ExplanationMetadataInputMetadata});
            }
            if (data.hasOwnProperty('latentSpaceSource')) {
                obj['latentSpaceSource'] = ApiClient.convertToType(data['latentSpaceSource'], 'String');
            }
            if (data.hasOwnProperty('outputs')) {
                obj['outputs'] = ApiClient.convertToType(data['outputs'], {'String': GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1ExplanationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1ExplanationMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['featureAttributionsSchemaUri'] && !(typeof data['featureAttributionsSchemaUri'] === 'string' || data['featureAttributionsSchemaUri'] instanceof String)) {
            throw new Error("Expected the field `featureAttributionsSchemaUri` to be a primitive type in the JSON string but got " + data['featureAttributionsSchemaUri']);
        }
        // ensure the json data is a string
        if (data['latentSpaceSource'] && !(typeof data['latentSpaceSource'] === 'string' || data['latentSpaceSource'] instanceof String)) {
            throw new Error("Expected the field `latentSpaceSource` to be a primitive type in the JSON string but got " + data['latentSpaceSource']);
        }

        return true;
    }


}



/**
 * Points to a YAML file stored on Google Cloud Storage describing the format of the feature attributions. The schema is defined as an OpenAPI 3.0.2 [Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). AutoML tabular Models always have this field populated by Vertex AI. Note: The URI given on output may be different, including the URI scheme, than the one given on input. The output URI will point to a location where the user only has a read access.
 * @member {String} featureAttributionsSchemaUri
 */
GoogleCloudAiplatformV1ExplanationMetadata.prototype['featureAttributionsSchemaUri'] = undefined;

/**
 * Required. Map from feature names to feature input metadata. Keys are the name of the features. Values are the specification of the feature. An empty InputMetadata is valid. It describes a text feature which has the name specified as the key in ExplanationMetadata.inputs. The baseline of the empty feature is chosen by Vertex AI. For Vertex AI-provided Tensorflow images, the key can be any friendly name of the feature. Once specified, featureAttributions are keyed by this key (if not grouped with another feature). For custom images, the key must match with the key in instance.
 * @member {Object.<String, module:model/GoogleCloudAiplatformV1ExplanationMetadataInputMetadata>} inputs
 */
GoogleCloudAiplatformV1ExplanationMetadata.prototype['inputs'] = undefined;

/**
 * Name of the source to generate embeddings for example based explanations.
 * @member {String} latentSpaceSource
 */
GoogleCloudAiplatformV1ExplanationMetadata.prototype['latentSpaceSource'] = undefined;

/**
 * Required. Map from output names to output metadata. For Vertex AI-provided Tensorflow images, keys can be any user defined string that consists of any UTF-8 characters. For custom images, keys are the name of the output field in the prediction to be explained. Currently only one key is allowed.
 * @member {Object.<String, module:model/GoogleCloudAiplatformV1ExplanationMetadataOutputMetadata>} outputs
 */
GoogleCloudAiplatformV1ExplanationMetadata.prototype['outputs'] = undefined;






export default GoogleCloudAiplatformV1ExplanationMetadata;

