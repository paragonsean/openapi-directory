/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1UserActionReference from './GoogleCloudAiplatformV1UserActionReference';

/**
 * The GoogleCloudAiplatformV1Annotation model module.
 * @module model/GoogleCloudAiplatformV1Annotation
 * @version v1
 */
class GoogleCloudAiplatformV1Annotation {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1Annotation</code>.
     * Used to assign specific AnnotationSpec to a particular area of a DataItem or the whole part of the DataItem.
     * @alias module:model/GoogleCloudAiplatformV1Annotation
     */
    constructor() { 
        
        GoogleCloudAiplatformV1Annotation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1Annotation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1Annotation} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1Annotation} The populated <code>GoogleCloudAiplatformV1Annotation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1Annotation();

            if (data.hasOwnProperty('annotationSource')) {
                obj['annotationSource'] = GoogleCloudAiplatformV1UserActionReference.constructFromObject(data['annotationSource']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], Object);
            }
            if (data.hasOwnProperty('payloadSchemaUri')) {
                obj['payloadSchemaUri'] = ApiClient.convertToType(data['payloadSchemaUri'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1Annotation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1Annotation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `annotationSource`
        if (data['annotationSource']) { // data not null
          GoogleCloudAiplatformV1UserActionReference.validateJSON(data['annotationSource']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['payloadSchemaUri'] && !(typeof data['payloadSchemaUri'] === 'string' || data['payloadSchemaUri'] instanceof String)) {
            throw new Error("Expected the field `payloadSchemaUri` to be a primitive type in the JSON string but got " + data['payloadSchemaUri']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1UserActionReference} annotationSource
 */
GoogleCloudAiplatformV1Annotation.prototype['annotationSource'] = undefined;

/**
 * Output only. Timestamp when this Annotation was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1Annotation.prototype['createTime'] = undefined;

/**
 * Optional. Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.
 * @member {String} etag
 */
GoogleCloudAiplatformV1Annotation.prototype['etag'] = undefined;

/**
 * Optional. The labels with user-defined metadata to organize your Annotations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Annotation(System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each Annotation: * \"aiplatform.googleapis.com/annotation_set_name\": optional, name of the UI's annotation set this Annotation belongs to. If not set, the Annotation is not visible in the UI. * \"aiplatform.googleapis.com/payload_schema\": output only, its value is the payload_schema's title.
 * @member {Object.<String, String>} labels
 */
GoogleCloudAiplatformV1Annotation.prototype['labels'] = undefined;

/**
 * Output only. Resource name of the Annotation.
 * @member {String} name
 */
GoogleCloudAiplatformV1Annotation.prototype['name'] = undefined;

/**
 * Required. The schema of the payload can be found in payload_schema.
 * @member {Object} payload
 */
GoogleCloudAiplatformV1Annotation.prototype['payload'] = undefined;

/**
 * Required. Google Cloud Storage URI points to a YAML file describing payload. The schema is defined as an [OpenAPI 3.0.2 Schema Object](https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.2.md#schemaObject). The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/annotation/, note that the chosen schema must be consistent with the parent Dataset's metadata.
 * @member {String} payloadSchemaUri
 */
GoogleCloudAiplatformV1Annotation.prototype['payloadSchemaUri'] = undefined;

/**
 * Output only. Timestamp when this Annotation was last updated.
 * @member {String} updateTime
 */
GoogleCloudAiplatformV1Annotation.prototype['updateTime'] = undefined;






export default GoogleCloudAiplatformV1Annotation;

