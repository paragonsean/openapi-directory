/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudAiNlLlmProtoServiceRaiResult from './CloudAiNlLlmProtoServiceRaiResult';
import CloudAiNlLlmProtoServiceRaiSignal from './CloudAiNlLlmProtoServiceRaiSignal';
import LanguageLabsAidaTrustRecitationProtoStreamRecitationResult from './LanguageLabsAidaTrustRecitationProtoStreamRecitationResult';
import LearningGenaiRootClassifierOutput from './LearningGenaiRootClassifierOutput';
import LearningGenaiRootLanguageFilterResult from './LearningGenaiRootLanguageFilterResult';
import LearningGenaiRootRAIOutput from './LearningGenaiRootRAIOutput';
import LearningGenaiRootTakedownResult from './LearningGenaiRootTakedownResult';
import LearningGenaiRootToxicityResult from './LearningGenaiRootToxicityResult';

/**
 * The LearningGenaiRootFilterMetadataFilterDebugInfo model module.
 * @module model/LearningGenaiRootFilterMetadataFilterDebugInfo
 * @version v1
 */
class LearningGenaiRootFilterMetadataFilterDebugInfo {
    /**
     * Constructs a new <code>LearningGenaiRootFilterMetadataFilterDebugInfo</code>.
     * @alias module:model/LearningGenaiRootFilterMetadataFilterDebugInfo
     */
    constructor() { 
        
        LearningGenaiRootFilterMetadataFilterDebugInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootFilterMetadataFilterDebugInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootFilterMetadataFilterDebugInfo} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootFilterMetadataFilterDebugInfo} The populated <code>LearningGenaiRootFilterMetadataFilterDebugInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootFilterMetadataFilterDebugInfo();

            if (data.hasOwnProperty('classifierOutput')) {
                obj['classifierOutput'] = LearningGenaiRootClassifierOutput.constructFromObject(data['classifierOutput']);
            }
            if (data.hasOwnProperty('defaultMetadata')) {
                obj['defaultMetadata'] = ApiClient.convertToType(data['defaultMetadata'], 'String');
            }
            if (data.hasOwnProperty('languageFilterResult')) {
                obj['languageFilterResult'] = LearningGenaiRootLanguageFilterResult.constructFromObject(data['languageFilterResult']);
            }
            if (data.hasOwnProperty('raiOutput')) {
                obj['raiOutput'] = LearningGenaiRootRAIOutput.constructFromObject(data['raiOutput']);
            }
            if (data.hasOwnProperty('raiResult')) {
                obj['raiResult'] = CloudAiNlLlmProtoServiceRaiResult.constructFromObject(data['raiResult']);
            }
            if (data.hasOwnProperty('raiSignal')) {
                obj['raiSignal'] = CloudAiNlLlmProtoServiceRaiSignal.constructFromObject(data['raiSignal']);
            }
            if (data.hasOwnProperty('streamRecitationResult')) {
                obj['streamRecitationResult'] = LanguageLabsAidaTrustRecitationProtoStreamRecitationResult.constructFromObject(data['streamRecitationResult']);
            }
            if (data.hasOwnProperty('takedownResult')) {
                obj['takedownResult'] = LearningGenaiRootTakedownResult.constructFromObject(data['takedownResult']);
            }
            if (data.hasOwnProperty('toxicityResult')) {
                obj['toxicityResult'] = LearningGenaiRootToxicityResult.constructFromObject(data['toxicityResult']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootFilterMetadataFilterDebugInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootFilterMetadataFilterDebugInfo</code>.
     */
    static validateJSON(data) {
        // validate the optional field `classifierOutput`
        if (data['classifierOutput']) { // data not null
          LearningGenaiRootClassifierOutput.validateJSON(data['classifierOutput']);
        }
        // ensure the json data is a string
        if (data['defaultMetadata'] && !(typeof data['defaultMetadata'] === 'string' || data['defaultMetadata'] instanceof String)) {
            throw new Error("Expected the field `defaultMetadata` to be a primitive type in the JSON string but got " + data['defaultMetadata']);
        }
        // validate the optional field `languageFilterResult`
        if (data['languageFilterResult']) { // data not null
          LearningGenaiRootLanguageFilterResult.validateJSON(data['languageFilterResult']);
        }
        // validate the optional field `raiOutput`
        if (data['raiOutput']) { // data not null
          LearningGenaiRootRAIOutput.validateJSON(data['raiOutput']);
        }
        // validate the optional field `raiResult`
        if (data['raiResult']) { // data not null
          CloudAiNlLlmProtoServiceRaiResult.validateJSON(data['raiResult']);
        }
        // validate the optional field `raiSignal`
        if (data['raiSignal']) { // data not null
          CloudAiNlLlmProtoServiceRaiSignal.validateJSON(data['raiSignal']);
        }
        // validate the optional field `streamRecitationResult`
        if (data['streamRecitationResult']) { // data not null
          LanguageLabsAidaTrustRecitationProtoStreamRecitationResult.validateJSON(data['streamRecitationResult']);
        }
        // validate the optional field `takedownResult`
        if (data['takedownResult']) { // data not null
          LearningGenaiRootTakedownResult.validateJSON(data['takedownResult']);
        }
        // validate the optional field `toxicityResult`
        if (data['toxicityResult']) { // data not null
          LearningGenaiRootToxicityResult.validateJSON(data['toxicityResult']);
        }

        return true;
    }


}



/**
 * @member {module:model/LearningGenaiRootClassifierOutput} classifierOutput
 */
LearningGenaiRootFilterMetadataFilterDebugInfo.prototype['classifierOutput'] = undefined;

/**
 * @member {String} defaultMetadata
 */
LearningGenaiRootFilterMetadataFilterDebugInfo.prototype['defaultMetadata'] = undefined;

/**
 * @member {module:model/LearningGenaiRootLanguageFilterResult} languageFilterResult
 */
LearningGenaiRootFilterMetadataFilterDebugInfo.prototype['languageFilterResult'] = undefined;

/**
 * @member {module:model/LearningGenaiRootRAIOutput} raiOutput
 */
LearningGenaiRootFilterMetadataFilterDebugInfo.prototype['raiOutput'] = undefined;

/**
 * @member {module:model/CloudAiNlLlmProtoServiceRaiResult} raiResult
 */
LearningGenaiRootFilterMetadataFilterDebugInfo.prototype['raiResult'] = undefined;

/**
 * @member {module:model/CloudAiNlLlmProtoServiceRaiSignal} raiSignal
 */
LearningGenaiRootFilterMetadataFilterDebugInfo.prototype['raiSignal'] = undefined;

/**
 * @member {module:model/LanguageLabsAidaTrustRecitationProtoStreamRecitationResult} streamRecitationResult
 */
LearningGenaiRootFilterMetadataFilterDebugInfo.prototype['streamRecitationResult'] = undefined;

/**
 * @member {module:model/LearningGenaiRootTakedownResult} takedownResult
 */
LearningGenaiRootFilterMetadataFilterDebugInfo.prototype['takedownResult'] = undefined;

/**
 * @member {module:model/LearningGenaiRootToxicityResult} toxicityResult
 */
LearningGenaiRootFilterMetadataFilterDebugInfo.prototype['toxicityResult'] = undefined;






export default LearningGenaiRootFilterMetadataFilterDebugInfo;

