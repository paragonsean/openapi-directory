/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudAiplatformV1ExportFilterSplit model module.
 * @module model/GoogleCloudAiplatformV1ExportFilterSplit
 * @version v1
 */
class GoogleCloudAiplatformV1ExportFilterSplit {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1ExportFilterSplit</code>.
     * Assigns input data to training, validation, and test sets based on the given filters, data pieces not matched by any filter are ignored. Currently only supported for Datasets containing DataItems. If any of the filters in this message are to match nothing, then they can be set as &#39;-&#39; (the minus sign). Supported only for unstructured Datasets.
     * @alias module:model/GoogleCloudAiplatformV1ExportFilterSplit
     */
    constructor() { 
        
        GoogleCloudAiplatformV1ExportFilterSplit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1ExportFilterSplit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1ExportFilterSplit} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1ExportFilterSplit} The populated <code>GoogleCloudAiplatformV1ExportFilterSplit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1ExportFilterSplit();

            if (data.hasOwnProperty('testFilter')) {
                obj['testFilter'] = ApiClient.convertToType(data['testFilter'], 'String');
            }
            if (data.hasOwnProperty('trainingFilter')) {
                obj['trainingFilter'] = ApiClient.convertToType(data['trainingFilter'], 'String');
            }
            if (data.hasOwnProperty('validationFilter')) {
                obj['validationFilter'] = ApiClient.convertToType(data['validationFilter'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1ExportFilterSplit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1ExportFilterSplit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['testFilter'] && !(typeof data['testFilter'] === 'string' || data['testFilter'] instanceof String)) {
            throw new Error("Expected the field `testFilter` to be a primitive type in the JSON string but got " + data['testFilter']);
        }
        // ensure the json data is a string
        if (data['trainingFilter'] && !(typeof data['trainingFilter'] === 'string' || data['trainingFilter'] instanceof String)) {
            throw new Error("Expected the field `trainingFilter` to be a primitive type in the JSON string but got " + data['trainingFilter']);
        }
        // ensure the json data is a string
        if (data['validationFilter'] && !(typeof data['validationFilter'] === 'string' || data['validationFilter'] instanceof String)) {
            throw new Error("Expected the field `validationFilter` to be a primitive type in the JSON string but got " + data['validationFilter']);
        }

        return true;
    }


}



/**
 * Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to test the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
 * @member {String} testFilter
 */
GoogleCloudAiplatformV1ExportFilterSplit.prototype['testFilter'] = undefined;

/**
 * Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to train the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
 * @member {String} trainingFilter
 */
GoogleCloudAiplatformV1ExportFilterSplit.prototype['trainingFilter'] = undefined;

/**
 * Required. A filter on DataItems of the Dataset. DataItems that match this filter are used to validate the Model. A filter with same syntax as the one used in DatasetService.ListDataItems may be used. If a single DataItem is matched by more than one of the FilterSplit filters, then it is assigned to the first set that applies to it in the training, validation, test order.
 * @member {String} validationFilter
 */
GoogleCloudAiplatformV1ExportFilterSplit.prototype['validationFilter'] = undefined;






export default GoogleCloudAiplatformV1ExportFilterSplit;

