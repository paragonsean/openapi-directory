/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef from './GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef';

/**
 * The GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix model module.
 * @module model/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
 * @version v1
 */
class GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix</code>.
     * @alias module:model/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix
     */
    constructor() { 
        
        GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix} The populated <code>GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix();

            if (data.hasOwnProperty('annotationSpecs')) {
                obj['annotationSpecs'] = ApiClient.convertToType(data['annotationSpecs'], [GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef]);
            }
            if (data.hasOwnProperty('rows')) {
                obj['rows'] = ApiClient.convertToType(data['rows'], [[Object]]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix</code>.
     */
    static validateJSON(data) {
        if (data['annotationSpecs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['annotationSpecs'])) {
                throw new Error("Expected the field `annotationSpecs` to be an array in the JSON data but got " + data['annotationSpecs']);
            }
            // validate the optional field `annotationSpecs` (array)
            for (const item of data['annotationSpecs']) {
                GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['rows'])) {
            throw new Error("Expected the field `rows` to be an array in the JSON data but got " + data['rows']);
        }

        return true;
    }


}



/**
 * AnnotationSpecs used in the confusion matrix. For AutoML Text Extraction, a special negative AnnotationSpec with empty `id` and `displayName` of \"NULL\" will be added as the last element.
 * @member {Array.<module:model/GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrixAnnotationSpecRef>} annotationSpecs
 */
GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix.prototype['annotationSpecs'] = undefined;

/**
 * Rows in the confusion matrix. The number of rows is equal to the size of `annotationSpecs`. `rowsi` is the number of DataItems that have ground truth of the `annotationSpecs[i]` and are predicted as `annotationSpecs[j]` by the Model being evaluated. For Text Extraction, when `annotationSpecs[i]` is the last element in `annotationSpecs`, i.e. the special negative AnnotationSpec, `rowsi` is the number of predicted entities of `annoatationSpec[j]` that are not labeled as any of the ground truth AnnotationSpec. When annotationSpecs[j] is the special negative AnnotationSpec, `rowsi` is the number of entities have ground truth of `annotationSpec[i]` that are not predicted as an entity by the Model. The value of the last cell, i.e. `rowi` where i == j and `annotationSpec[i]` is the special negative AnnotationSpec, is always 0.
 * @member {Array.<Array.<Object>>} rows
 */
GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix.prototype['rows'] = undefined;






export default GoogleCloudAiplatformV1SchemaModelevaluationMetricsConfusionMatrix;

