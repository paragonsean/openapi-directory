/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CloudAiNlLlmProtoServiceCandidate from './CloudAiNlLlmProtoServiceCandidate';
import CloudAiNlLlmProtoServiceFact from './CloudAiNlLlmProtoServiceFact';
import CloudAiNlLlmProtoServiceMessageMetadata from './CloudAiNlLlmProtoServiceMessageMetadata';
import CloudAiNlLlmProtoServicePromptFeedback from './CloudAiNlLlmProtoServicePromptFeedback';
import CloudAiNlLlmProtoServiceUsageMetadata from './CloudAiNlLlmProtoServiceUsageMetadata';
import IntelligenceCloudAutomlXpsReportingMetrics from './IntelligenceCloudAutomlXpsReportingMetrics';

/**
 * The CloudAiNlLlmProtoServiceGenerateMultiModalResponse model module.
 * @module model/CloudAiNlLlmProtoServiceGenerateMultiModalResponse
 * @version v1
 */
class CloudAiNlLlmProtoServiceGenerateMultiModalResponse {
    /**
     * Constructs a new <code>CloudAiNlLlmProtoServiceGenerateMultiModalResponse</code>.
     * @alias module:model/CloudAiNlLlmProtoServiceGenerateMultiModalResponse
     */
    constructor() { 
        
        CloudAiNlLlmProtoServiceGenerateMultiModalResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudAiNlLlmProtoServiceGenerateMultiModalResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudAiNlLlmProtoServiceGenerateMultiModalResponse} obj Optional instance to populate.
     * @return {module:model/CloudAiNlLlmProtoServiceGenerateMultiModalResponse} The populated <code>CloudAiNlLlmProtoServiceGenerateMultiModalResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudAiNlLlmProtoServiceGenerateMultiModalResponse();

            if (data.hasOwnProperty('candidates')) {
                obj['candidates'] = ApiClient.convertToType(data['candidates'], [CloudAiNlLlmProtoServiceCandidate]);
            }
            if (data.hasOwnProperty('debugMetadata')) {
                obj['debugMetadata'] = CloudAiNlLlmProtoServiceMessageMetadata.constructFromObject(data['debugMetadata']);
            }
            if (data.hasOwnProperty('facts')) {
                obj['facts'] = ApiClient.convertToType(data['facts'], [CloudAiNlLlmProtoServiceFact]);
            }
            if (data.hasOwnProperty('promptFeedback')) {
                obj['promptFeedback'] = CloudAiNlLlmProtoServicePromptFeedback.constructFromObject(data['promptFeedback']);
            }
            if (data.hasOwnProperty('reportingMetrics')) {
                obj['reportingMetrics'] = IntelligenceCloudAutomlXpsReportingMetrics.constructFromObject(data['reportingMetrics']);
            }
            if (data.hasOwnProperty('usageMetadata')) {
                obj['usageMetadata'] = CloudAiNlLlmProtoServiceUsageMetadata.constructFromObject(data['usageMetadata']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudAiNlLlmProtoServiceGenerateMultiModalResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudAiNlLlmProtoServiceGenerateMultiModalResponse</code>.
     */
    static validateJSON(data) {
        if (data['candidates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['candidates'])) {
                throw new Error("Expected the field `candidates` to be an array in the JSON data but got " + data['candidates']);
            }
            // validate the optional field `candidates` (array)
            for (const item of data['candidates']) {
                CloudAiNlLlmProtoServiceCandidate.validateJSON(item);
            };
        }
        // validate the optional field `debugMetadata`
        if (data['debugMetadata']) { // data not null
          CloudAiNlLlmProtoServiceMessageMetadata.validateJSON(data['debugMetadata']);
        }
        if (data['facts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['facts'])) {
                throw new Error("Expected the field `facts` to be an array in the JSON data but got " + data['facts']);
            }
            // validate the optional field `facts` (array)
            for (const item of data['facts']) {
                CloudAiNlLlmProtoServiceFact.validateJSON(item);
            };
        }
        // validate the optional field `promptFeedback`
        if (data['promptFeedback']) { // data not null
          CloudAiNlLlmProtoServicePromptFeedback.validateJSON(data['promptFeedback']);
        }
        // validate the optional field `reportingMetrics`
        if (data['reportingMetrics']) { // data not null
          IntelligenceCloudAutomlXpsReportingMetrics.validateJSON(data['reportingMetrics']);
        }
        // validate the optional field `usageMetadata`
        if (data['usageMetadata']) { // data not null
          CloudAiNlLlmProtoServiceUsageMetadata.validateJSON(data['usageMetadata']);
        }

        return true;
    }


}



/**
 * Possible candidate responses to the conversation up until this point.
 * @member {Array.<module:model/CloudAiNlLlmProtoServiceCandidate>} candidates
 */
CloudAiNlLlmProtoServiceGenerateMultiModalResponse.prototype['candidates'] = undefined;

/**
 * @member {module:model/CloudAiNlLlmProtoServiceMessageMetadata} debugMetadata
 */
CloudAiNlLlmProtoServiceGenerateMultiModalResponse.prototype['debugMetadata'] = undefined;

/**
 * External facts retrieved for factuality/grounding.
 * @member {Array.<module:model/CloudAiNlLlmProtoServiceFact>} facts
 */
CloudAiNlLlmProtoServiceGenerateMultiModalResponse.prototype['facts'] = undefined;

/**
 * @member {module:model/CloudAiNlLlmProtoServicePromptFeedback} promptFeedback
 */
CloudAiNlLlmProtoServiceGenerateMultiModalResponse.prototype['promptFeedback'] = undefined;

/**
 * @member {module:model/IntelligenceCloudAutomlXpsReportingMetrics} reportingMetrics
 */
CloudAiNlLlmProtoServiceGenerateMultiModalResponse.prototype['reportingMetrics'] = undefined;

/**
 * @member {module:model/CloudAiNlLlmProtoServiceUsageMetadata} usageMetadata
 */
CloudAiNlLlmProtoServiceGenerateMultiModalResponse.prototype['usageMetadata'] = undefined;






export default CloudAiNlLlmProtoServiceGenerateMultiModalResponse;

