/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LearningGenaiRootHarmGrailTextHarmType model module.
 * @module model/LearningGenaiRootHarmGrailTextHarmType
 * @version v1
 */
class LearningGenaiRootHarmGrailTextHarmType {
    /**
     * Constructs a new <code>LearningGenaiRootHarmGrailTextHarmType</code>.
     * Harm type for text
     * @alias module:model/LearningGenaiRootHarmGrailTextHarmType
     */
    constructor() { 
        
        LearningGenaiRootHarmGrailTextHarmType.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LearningGenaiRootHarmGrailTextHarmType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LearningGenaiRootHarmGrailTextHarmType} obj Optional instance to populate.
     * @return {module:model/LearningGenaiRootHarmGrailTextHarmType} The populated <code>LearningGenaiRootHarmGrailTextHarmType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LearningGenaiRootHarmGrailTextHarmType();

            if (data.hasOwnProperty('harmType')) {
                obj['harmType'] = ApiClient.convertToType(data['harmType'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LearningGenaiRootHarmGrailTextHarmType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LearningGenaiRootHarmGrailTextHarmType</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['harmType'])) {
            throw new Error("Expected the field `harmType` to be an array in the JSON data but got " + data['harmType']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/LearningGenaiRootHarmGrailTextHarmType.HarmTypeEnum>} harmType
 */
LearningGenaiRootHarmGrailTextHarmType.prototype['harmType'] = undefined;





/**
 * Allowed values for the <code>harmType</code> property.
 * @enum {String}
 * @readonly
 */
LearningGenaiRootHarmGrailTextHarmType['HarmTypeEnum'] = {

    /**
     * value: "HARM_TYPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "HARM_TYPE_UNSPECIFIED",

    /**
     * value: "HARM_TYPE_HATE"
     * @const
     */
    "HATE": "HARM_TYPE_HATE",

    /**
     * value: "HARM_TYPE_TOXICITY"
     * @const
     */
    "TOXICITY": "HARM_TYPE_TOXICITY",

    /**
     * value: "HARM_TYPE_VIOLENCE"
     * @const
     */
    "VIOLENCE": "HARM_TYPE_VIOLENCE",

    /**
     * value: "HARM_TYPE_CSAI"
     * @const
     */
    "CSAI": "HARM_TYPE_CSAI",

    /**
     * value: "HARM_TYPE_SEXUAL"
     * @const
     */
    "SEXUAL": "HARM_TYPE_SEXUAL",

    /**
     * value: "HARM_TYPE_FRINGE"
     * @const
     */
    "FRINGE": "HARM_TYPE_FRINGE",

    /**
     * value: "HARM_TYPE_POLITICAL"
     * @const
     */
    "POLITICAL": "HARM_TYPE_POLITICAL",

    /**
     * value: "HARM_TYPE_MEMORIZATION"
     * @const
     */
    "MEMORIZATION": "HARM_TYPE_MEMORIZATION",

    /**
     * value: "HARM_TYPE_SPII"
     * @const
     */
    "SPII": "HARM_TYPE_SPII",

    /**
     * value: "HARM_TYPE_NEW_DANGEROUS"
     * @const
     */
    "NEW_DANGEROUS": "HARM_TYPE_NEW_DANGEROUS",

    /**
     * value: "HARM_TYPE_MEDICAL"
     * @const
     */
    "MEDICAL": "HARM_TYPE_MEDICAL",

    /**
     * value: "HARM_TYPE_HARASSMENT"
     * @const
     */
    "HARASSMENT": "HARM_TYPE_HARASSMENT"
};



export default LearningGenaiRootHarmGrailTextHarmType;

