/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1EncryptionSpec from './GoogleCloudAiplatformV1EncryptionSpec';

/**
 * The GoogleCloudAiplatformV1Tensorboard model module.
 * @module model/GoogleCloudAiplatformV1Tensorboard
 * @version v1
 */
class GoogleCloudAiplatformV1Tensorboard {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1Tensorboard</code>.
     * Tensorboard is a physical database that stores users&#39; training metrics. A default Tensorboard is provided in each region of a Google Cloud project. If needed users can also create extra Tensorboards in their projects.
     * @alias module:model/GoogleCloudAiplatformV1Tensorboard
     */
    constructor() { 
        
        GoogleCloudAiplatformV1Tensorboard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1Tensorboard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1Tensorboard} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1Tensorboard} The populated <code>GoogleCloudAiplatformV1Tensorboard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1Tensorboard();

            if (data.hasOwnProperty('blobStoragePathPrefix')) {
                obj['blobStoragePathPrefix'] = ApiClient.convertToType(data['blobStoragePathPrefix'], 'String');
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('encryptionSpec')) {
                obj['encryptionSpec'] = GoogleCloudAiplatformV1EncryptionSpec.constructFromObject(data['encryptionSpec']);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('runCount')) {
                obj['runCount'] = ApiClient.convertToType(data['runCount'], 'Number');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1Tensorboard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1Tensorboard</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['blobStoragePathPrefix'] && !(typeof data['blobStoragePathPrefix'] === 'string' || data['blobStoragePathPrefix'] instanceof String)) {
            throw new Error("Expected the field `blobStoragePathPrefix` to be a primitive type in the JSON string but got " + data['blobStoragePathPrefix']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `encryptionSpec`
        if (data['encryptionSpec']) { // data not null
          GoogleCloudAiplatformV1EncryptionSpec.validateJSON(data['encryptionSpec']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. Consumer project Cloud Storage path prefix used to store blob data, which can either be a bucket or directory. Does not end with a '/'.
 * @member {String} blobStoragePathPrefix
 */
GoogleCloudAiplatformV1Tensorboard.prototype['blobStoragePathPrefix'] = undefined;

/**
 * Output only. Timestamp when this Tensorboard was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1Tensorboard.prototype['createTime'] = undefined;

/**
 * Description of this Tensorboard.
 * @member {String} description
 */
GoogleCloudAiplatformV1Tensorboard.prototype['description'] = undefined;

/**
 * Required. User provided name of this Tensorboard.
 * @member {String} displayName
 */
GoogleCloudAiplatformV1Tensorboard.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1EncryptionSpec} encryptionSpec
 */
GoogleCloudAiplatformV1Tensorboard.prototype['encryptionSpec'] = undefined;

/**
 * Used to perform a consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.
 * @member {String} etag
 */
GoogleCloudAiplatformV1Tensorboard.prototype['etag'] = undefined;

/**
 * Used to indicate if the TensorBoard instance is the default one. Each project & region can have at most one default TensorBoard instance. Creation of a default TensorBoard instance and updating an existing TensorBoard instance to be default will mark all other TensorBoard instances (if any) as non default.
 * @member {Boolean} isDefault
 */
GoogleCloudAiplatformV1Tensorboard.prototype['isDefault'] = undefined;

/**
 * The labels with user-defined metadata to organize your Tensorboards. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one Tensorboard (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.
 * @member {Object.<String, String>} labels
 */
GoogleCloudAiplatformV1Tensorboard.prototype['labels'] = undefined;

/**
 * Output only. Name of the Tensorboard. Format: `projects/{project}/locations/{location}/tensorboards/{tensorboard}`
 * @member {String} name
 */
GoogleCloudAiplatformV1Tensorboard.prototype['name'] = undefined;

/**
 * Output only. The number of Runs stored in this Tensorboard.
 * @member {Number} runCount
 */
GoogleCloudAiplatformV1Tensorboard.prototype['runCount'] = undefined;

/**
 * Output only. Timestamp when this Tensorboard was last updated.
 * @member {String} updateTime
 */
GoogleCloudAiplatformV1Tensorboard.prototype['updateTime'] = undefined;






export default GoogleCloudAiplatformV1Tensorboard;

