/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1TrialParameter from './GoogleCloudAiplatformV1TrialParameter';

/**
 * The GoogleCloudAiplatformV1TrialContext model module.
 * @module model/GoogleCloudAiplatformV1TrialContext
 * @version v1
 */
class GoogleCloudAiplatformV1TrialContext {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1TrialContext</code>.
     * Next ID: 3
     * @alias module:model/GoogleCloudAiplatformV1TrialContext
     */
    constructor() { 
        
        GoogleCloudAiplatformV1TrialContext.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1TrialContext</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1TrialContext} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1TrialContext} The populated <code>GoogleCloudAiplatformV1TrialContext</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1TrialContext();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [GoogleCloudAiplatformV1TrialParameter]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1TrialContext</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1TrialContext</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                GoogleCloudAiplatformV1TrialParameter.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A human-readable field which can store a description of this context. This will become part of the resulting Trial's description field.
 * @member {String} description
 */
GoogleCloudAiplatformV1TrialContext.prototype['description'] = undefined;

/**
 * If/when a Trial is generated or selected from this Context, its Parameters will match any parameters specified here. (I.e. if this context specifies parameter name:'a' int_value:3, then a resulting Trial will have int_value:3 for its parameter named 'a'.) Note that we first attempt to match existing REQUESTED Trials with contexts, and if there are no matches, we generate suggestions in the subspace defined by the parameters specified here. NOTE: a Context without any Parameters matches the entire feasible search space.
 * @member {Array.<module:model/GoogleCloudAiplatformV1TrialParameter>} parameters
 */
GoogleCloudAiplatformV1TrialContext.prototype['parameters'] = undefined;






export default GoogleCloudAiplatformV1TrialContext;

