/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudAiplatformV1NearestNeighborQueryStringFilter model module.
 * @module model/GoogleCloudAiplatformV1NearestNeighborQueryStringFilter
 * @version v1
 */
class GoogleCloudAiplatformV1NearestNeighborQueryStringFilter {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1NearestNeighborQueryStringFilter</code>.
     * String filter is used to search a subset of the entities by using boolean rules on string columns. For example: if a query specifies string filter with &#39;name &#x3D; color, allow_tokens &#x3D; {red, blue}, deny_tokens &#x3D; {purple}&#39;,&#39; then that query will match entities that are red or blue, but if those points are also purple, then they will be excluded even if they are red/blue. Only string filter is supported for now, numeric filter will be supported in the near future.
     * @alias module:model/GoogleCloudAiplatformV1NearestNeighborQueryStringFilter
     */
    constructor() { 
        
        GoogleCloudAiplatformV1NearestNeighborQueryStringFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1NearestNeighborQueryStringFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1NearestNeighborQueryStringFilter} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1NearestNeighborQueryStringFilter} The populated <code>GoogleCloudAiplatformV1NearestNeighborQueryStringFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1NearestNeighborQueryStringFilter();

            if (data.hasOwnProperty('allowTokens')) {
                obj['allowTokens'] = ApiClient.convertToType(data['allowTokens'], ['String']);
            }
            if (data.hasOwnProperty('denyTokens')) {
                obj['denyTokens'] = ApiClient.convertToType(data['denyTokens'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1NearestNeighborQueryStringFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1NearestNeighborQueryStringFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowTokens'])) {
            throw new Error("Expected the field `allowTokens` to be an array in the JSON data but got " + data['allowTokens']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['denyTokens'])) {
            throw new Error("Expected the field `denyTokens` to be an array in the JSON data but got " + data['denyTokens']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * Optional. The allowed tokens.
 * @member {Array.<String>} allowTokens
 */
GoogleCloudAiplatformV1NearestNeighborQueryStringFilter.prototype['allowTokens'] = undefined;

/**
 * Optional. The denied tokens.
 * @member {Array.<String>} denyTokens
 */
GoogleCloudAiplatformV1NearestNeighborQueryStringFilter.prototype['denyTokens'] = undefined;

/**
 * Required. Column names in BigQuery that used as filters.
 * @member {String} name
 */
GoogleCloudAiplatformV1NearestNeighborQueryStringFilter.prototype['name'] = undefined;






export default GoogleCloudAiplatformV1NearestNeighborQueryStringFilter;

