/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig from './GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig';

/**
 * The GoogleCloudAiplatformV1ModelMonitoringAlertConfig model module.
 * @module model/GoogleCloudAiplatformV1ModelMonitoringAlertConfig
 * @version v1
 */
class GoogleCloudAiplatformV1ModelMonitoringAlertConfig {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1ModelMonitoringAlertConfig</code>.
     * The alert config for model monitoring.
     * @alias module:model/GoogleCloudAiplatformV1ModelMonitoringAlertConfig
     */
    constructor() { 
        
        GoogleCloudAiplatformV1ModelMonitoringAlertConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1ModelMonitoringAlertConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1ModelMonitoringAlertConfig} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1ModelMonitoringAlertConfig} The populated <code>GoogleCloudAiplatformV1ModelMonitoringAlertConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1ModelMonitoringAlertConfig();

            if (data.hasOwnProperty('emailAlertConfig')) {
                obj['emailAlertConfig'] = GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig.constructFromObject(data['emailAlertConfig']);
            }
            if (data.hasOwnProperty('enableLogging')) {
                obj['enableLogging'] = ApiClient.convertToType(data['enableLogging'], 'Boolean');
            }
            if (data.hasOwnProperty('notificationChannels')) {
                obj['notificationChannels'] = ApiClient.convertToType(data['notificationChannels'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1ModelMonitoringAlertConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1ModelMonitoringAlertConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `emailAlertConfig`
        if (data['emailAlertConfig']) { // data not null
          GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig.validateJSON(data['emailAlertConfig']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['notificationChannels'])) {
            throw new Error("Expected the field `notificationChannels` to be an array in the JSON data but got " + data['notificationChannels']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1ModelMonitoringAlertConfigEmailAlertConfig} emailAlertConfig
 */
GoogleCloudAiplatformV1ModelMonitoringAlertConfig.prototype['emailAlertConfig'] = undefined;

/**
 * Dump the anomalies to Cloud Logging. The anomalies will be put to json payload encoded from proto google.cloud.aiplatform.logging.ModelMonitoringAnomaliesLogEntry. This can be further sinked to Pub/Sub or any other services supported by Cloud Logging.
 * @member {Boolean} enableLogging
 */
GoogleCloudAiplatformV1ModelMonitoringAlertConfig.prototype['enableLogging'] = undefined;

/**
 * Resource names of the NotificationChannels to send alert. Must be of the format `projects//notificationChannels/`
 * @member {Array.<String>} notificationChannels
 */
GoogleCloudAiplatformV1ModelMonitoringAlertConfig.prototype['notificationChannels'] = undefined;






export default GoogleCloudAiplatformV1ModelMonitoringAlertConfig;

