/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudAiplatformV1ActiveLearningConfig from './GoogleCloudAiplatformV1ActiveLearningConfig';
import GoogleCloudAiplatformV1EncryptionSpec from './GoogleCloudAiplatformV1EncryptionSpec';
import GoogleRpcStatus from './GoogleRpcStatus';
import GoogleTypeMoney from './GoogleTypeMoney';

/**
 * The GoogleCloudAiplatformV1DataLabelingJob model module.
 * @module model/GoogleCloudAiplatformV1DataLabelingJob
 * @version v1
 */
class GoogleCloudAiplatformV1DataLabelingJob {
    /**
     * Constructs a new <code>GoogleCloudAiplatformV1DataLabelingJob</code>.
     * DataLabelingJob is used to trigger a human labeling job on unlabeled data from the following Dataset:
     * @alias module:model/GoogleCloudAiplatformV1DataLabelingJob
     */
    constructor() { 
        
        GoogleCloudAiplatformV1DataLabelingJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudAiplatformV1DataLabelingJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudAiplatformV1DataLabelingJob} obj Optional instance to populate.
     * @return {module:model/GoogleCloudAiplatformV1DataLabelingJob} The populated <code>GoogleCloudAiplatformV1DataLabelingJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudAiplatformV1DataLabelingJob();

            if (data.hasOwnProperty('activeLearningConfig')) {
                obj['activeLearningConfig'] = GoogleCloudAiplatformV1ActiveLearningConfig.constructFromObject(data['activeLearningConfig']);
            }
            if (data.hasOwnProperty('annotationLabels')) {
                obj['annotationLabels'] = ApiClient.convertToType(data['annotationLabels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('currentSpend')) {
                obj['currentSpend'] = GoogleTypeMoney.constructFromObject(data['currentSpend']);
            }
            if (data.hasOwnProperty('datasets')) {
                obj['datasets'] = ApiClient.convertToType(data['datasets'], ['String']);
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('encryptionSpec')) {
                obj['encryptionSpec'] = GoogleCloudAiplatformV1EncryptionSpec.constructFromObject(data['encryptionSpec']);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = GoogleRpcStatus.constructFromObject(data['error']);
            }
            if (data.hasOwnProperty('inputs')) {
                obj['inputs'] = ApiClient.convertToType(data['inputs'], Object);
            }
            if (data.hasOwnProperty('inputsSchemaUri')) {
                obj['inputsSchemaUri'] = ApiClient.convertToType(data['inputsSchemaUri'], 'String');
            }
            if (data.hasOwnProperty('instructionUri')) {
                obj['instructionUri'] = ApiClient.convertToType(data['instructionUri'], 'String');
            }
            if (data.hasOwnProperty('labelerCount')) {
                obj['labelerCount'] = ApiClient.convertToType(data['labelerCount'], 'Number');
            }
            if (data.hasOwnProperty('labelingProgress')) {
                obj['labelingProgress'] = ApiClient.convertToType(data['labelingProgress'], 'Number');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('specialistPools')) {
                obj['specialistPools'] = ApiClient.convertToType(data['specialistPools'], ['String']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudAiplatformV1DataLabelingJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudAiplatformV1DataLabelingJob</code>.
     */
    static validateJSON(data) {
        // validate the optional field `activeLearningConfig`
        if (data['activeLearningConfig']) { // data not null
          GoogleCloudAiplatformV1ActiveLearningConfig.validateJSON(data['activeLearningConfig']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // validate the optional field `currentSpend`
        if (data['currentSpend']) { // data not null
          GoogleTypeMoney.validateJSON(data['currentSpend']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['datasets'])) {
            throw new Error("Expected the field `datasets` to be an array in the JSON data but got " + data['datasets']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // validate the optional field `encryptionSpec`
        if (data['encryptionSpec']) { // data not null
          GoogleCloudAiplatformV1EncryptionSpec.validateJSON(data['encryptionSpec']);
        }
        // validate the optional field `error`
        if (data['error']) { // data not null
          GoogleRpcStatus.validateJSON(data['error']);
        }
        // ensure the json data is a string
        if (data['inputsSchemaUri'] && !(typeof data['inputsSchemaUri'] === 'string' || data['inputsSchemaUri'] instanceof String)) {
            throw new Error("Expected the field `inputsSchemaUri` to be a primitive type in the JSON string but got " + data['inputsSchemaUri']);
        }
        // ensure the json data is a string
        if (data['instructionUri'] && !(typeof data['instructionUri'] === 'string' || data['instructionUri'] instanceof String)) {
            throw new Error("Expected the field `instructionUri` to be a primitive type in the JSON string but got " + data['instructionUri']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['specialistPools'])) {
            throw new Error("Expected the field `specialistPools` to be an array in the JSON data but got " + data['specialistPools']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleCloudAiplatformV1ActiveLearningConfig} activeLearningConfig
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['activeLearningConfig'] = undefined;

/**
 * Labels to assign to annotations generated by this DataLabelingJob. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable.
 * @member {Object.<String, String>} annotationLabels
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['annotationLabels'] = undefined;

/**
 * Output only. Timestamp when this DataLabelingJob was created.
 * @member {String} createTime
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['createTime'] = undefined;

/**
 * @member {module:model/GoogleTypeMoney} currentSpend
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['currentSpend'] = undefined;

/**
 * Required. Dataset resource names. Right now we only support labeling from a single Dataset. Format: `projects/{project}/locations/{location}/datasets/{dataset}`
 * @member {Array.<String>} datasets
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['datasets'] = undefined;

/**
 * Required. The user-defined name of the DataLabelingJob. The name can be up to 128 characters long and can consist of any UTF-8 characters. Display name of a DataLabelingJob.
 * @member {String} displayName
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['displayName'] = undefined;

/**
 * @member {module:model/GoogleCloudAiplatformV1EncryptionSpec} encryptionSpec
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['encryptionSpec'] = undefined;

/**
 * @member {module:model/GoogleRpcStatus} error
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['error'] = undefined;

/**
 * Required. Input config parameters for the DataLabelingJob.
 * @member {Object} inputs
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['inputs'] = undefined;

/**
 * Required. Points to a YAML file stored on Google Cloud Storage describing the config for a specific type of DataLabelingJob. The schema files that can be used here are found in the https://storage.googleapis.com/google-cloud-aiplatform bucket in the /schema/datalabelingjob/inputs/ folder.
 * @member {String} inputsSchemaUri
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['inputsSchemaUri'] = undefined;

/**
 * Required. The Google Cloud Storage location of the instruction pdf. This pdf is shared with labelers, and provides detailed description on how to label DataItems in Datasets.
 * @member {String} instructionUri
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['instructionUri'] = undefined;

/**
 * Required. Number of labelers to work on each DataItem.
 * @member {Number} labelerCount
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['labelerCount'] = undefined;

/**
 * Output only. Current labeling job progress percentage scaled in interval [0, 100], indicating the percentage of DataItems that has been finished.
 * @member {Number} labelingProgress
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['labelingProgress'] = undefined;

/**
 * The labels with user-defined metadata to organize your DataLabelingJobs. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"aiplatform.googleapis.com/\" and are immutable. Following system labels exist for each DataLabelingJob: * \"aiplatform.googleapis.com/schema\": output only, its value is the inputs_schema's title.
 * @member {Object.<String, String>} labels
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['labels'] = undefined;

/**
 * Output only. Resource name of the DataLabelingJob.
 * @member {String} name
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['name'] = undefined;

/**
 * The SpecialistPools' resource names associated with this job.
 * @member {Array.<String>} specialistPools
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['specialistPools'] = undefined;

/**
 * Output only. The detailed state of the job.
 * @member {module:model/GoogleCloudAiplatformV1DataLabelingJob.StateEnum} state
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['state'] = undefined;

/**
 * Output only. Timestamp when this DataLabelingJob was updated most recently.
 * @member {String} updateTime
 */
GoogleCloudAiplatformV1DataLabelingJob.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudAiplatformV1DataLabelingJob['StateEnum'] = {

    /**
     * value: "JOB_STATE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "JOB_STATE_UNSPECIFIED",

    /**
     * value: "JOB_STATE_QUEUED"
     * @const
     */
    "QUEUED": "JOB_STATE_QUEUED",

    /**
     * value: "JOB_STATE_PENDING"
     * @const
     */
    "PENDING": "JOB_STATE_PENDING",

    /**
     * value: "JOB_STATE_RUNNING"
     * @const
     */
    "RUNNING": "JOB_STATE_RUNNING",

    /**
     * value: "JOB_STATE_SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "JOB_STATE_SUCCEEDED",

    /**
     * value: "JOB_STATE_FAILED"
     * @const
     */
    "FAILED": "JOB_STATE_FAILED",

    /**
     * value: "JOB_STATE_CANCELLING"
     * @const
     */
    "CANCELLING": "JOB_STATE_CANCELLING",

    /**
     * value: "JOB_STATE_CANCELLED"
     * @const
     */
    "CANCELLED": "JOB_STATE_CANCELLED",

    /**
     * value: "JOB_STATE_PAUSED"
     * @const
     */
    "PAUSED": "JOB_STATE_PAUSED",

    /**
     * value: "JOB_STATE_EXPIRED"
     * @const
     */
    "EXPIRED": "JOB_STATE_EXPIRED",

    /**
     * value: "JOB_STATE_UPDATING"
     * @const
     */
    "UPDATING": "JOB_STATE_UPDATING",

    /**
     * value: "JOB_STATE_PARTIALLY_SUCCEEDED"
     * @const
     */
    "PARTIALLY_SUCCEEDED": "JOB_STATE_PARTIALLY_SUCCEEDED"
};



export default GoogleCloudAiplatformV1DataLabelingJob;

