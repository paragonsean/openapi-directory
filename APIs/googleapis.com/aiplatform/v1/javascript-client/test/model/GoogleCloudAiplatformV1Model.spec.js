/**
 * Vertex AI API
 * Train high-quality custom machine learning models with minimal machine learning expertise and effort.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VertexAiApi);
  }
}(this, function(expect, VertexAiApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GoogleCloudAiplatformV1Model', function() {
    it('should create an instance of GoogleCloudAiplatformV1Model', function() {
      // uncomment below and update the code to test GoogleCloudAiplatformV1Model
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be.a(VertexAiApi.GoogleCloudAiplatformV1Model);
    });

    it('should have the property artifactUri (base name: "artifactUri")', function() {
      // uncomment below and update the code to test the property artifactUri
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property containerSpec (base name: "containerSpec")', function() {
      // uncomment below and update the code to test the property containerSpec
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property dataStats (base name: "dataStats")', function() {
      // uncomment below and update the code to test the property dataStats
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property deployedModels (base name: "deployedModels")', function() {
      // uncomment below and update the code to test the property deployedModels
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property encryptionSpec (base name: "encryptionSpec")', function() {
      // uncomment below and update the code to test the property encryptionSpec
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property explanationSpec (base name: "explanationSpec")', function() {
      // uncomment below and update the code to test the property explanationSpec
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property metadataArtifact (base name: "metadataArtifact")', function() {
      // uncomment below and update the code to test the property metadataArtifact
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property metadataSchemaUri (base name: "metadataSchemaUri")', function() {
      // uncomment below and update the code to test the property metadataSchemaUri
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property modelSourceInfo (base name: "modelSourceInfo")', function() {
      // uncomment below and update the code to test the property modelSourceInfo
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property originalModelInfo (base name: "originalModelInfo")', function() {
      // uncomment below and update the code to test the property originalModelInfo
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property pipelineJob (base name: "pipelineJob")', function() {
      // uncomment below and update the code to test the property pipelineJob
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property predictSchemata (base name: "predictSchemata")', function() {
      // uncomment below and update the code to test the property predictSchemata
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property supportedDeploymentResourcesTypes (base name: "supportedDeploymentResourcesTypes")', function() {
      // uncomment below and update the code to test the property supportedDeploymentResourcesTypes
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property supportedExportFormats (base name: "supportedExportFormats")', function() {
      // uncomment below and update the code to test the property supportedExportFormats
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property supportedInputStorageFormats (base name: "supportedInputStorageFormats")', function() {
      // uncomment below and update the code to test the property supportedInputStorageFormats
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property supportedOutputStorageFormats (base name: "supportedOutputStorageFormats")', function() {
      // uncomment below and update the code to test the property supportedOutputStorageFormats
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property trainingPipeline (base name: "trainingPipeline")', function() {
      // uncomment below and update the code to test the property trainingPipeline
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property versionAliases (base name: "versionAliases")', function() {
      // uncomment below and update the code to test the property versionAliases
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property versionCreateTime (base name: "versionCreateTime")', function() {
      // uncomment below and update the code to test the property versionCreateTime
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property versionDescription (base name: "versionDescription")', function() {
      // uncomment below and update the code to test the property versionDescription
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property versionId (base name: "versionId")', function() {
      // uncomment below and update the code to test the property versionId
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

    it('should have the property versionUpdateTime (base name: "versionUpdateTime")', function() {
      // uncomment below and update the code to test the property versionUpdateTime
      //var instance = new VertexAiApi.GoogleCloudAiplatformV1Model();
      //expect(instance).to.be();
    });

  });

}));
