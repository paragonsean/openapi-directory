/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGenerateConfigReportResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGenerateConfigReportResponse::OAIGenerateConfigReportResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGenerateConfigReportResponse::OAIGenerateConfigReportResponse() {
    this->initializeModel();
}

OAIGenerateConfigReportResponse::~OAIGenerateConfigReportResponse() {}

void OAIGenerateConfigReportResponse::initializeModel() {

    m_change_reports_isSet = false;
    m_change_reports_isValid = false;

    m_diagnostics_isSet = false;
    m_diagnostics_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_service_name_isSet = false;
    m_service_name_isValid = false;
}

void OAIGenerateConfigReportResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGenerateConfigReportResponse::fromJsonObject(QJsonObject json) {

    m_change_reports_isValid = ::OpenAPI::fromJsonValue(m_change_reports, json[QString("changeReports")]);
    m_change_reports_isSet = !json[QString("changeReports")].isNull() && m_change_reports_isValid;

    m_diagnostics_isValid = ::OpenAPI::fromJsonValue(m_diagnostics, json[QString("diagnostics")]);
    m_diagnostics_isSet = !json[QString("diagnostics")].isNull() && m_diagnostics_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_service_name_isValid = ::OpenAPI::fromJsonValue(m_service_name, json[QString("serviceName")]);
    m_service_name_isSet = !json[QString("serviceName")].isNull() && m_service_name_isValid;
}

QString OAIGenerateConfigReportResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGenerateConfigReportResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_change_reports.size() > 0) {
        obj.insert(QString("changeReports"), ::OpenAPI::toJsonValue(m_change_reports));
    }
    if (m_diagnostics.size() > 0) {
        obj.insert(QString("diagnostics"), ::OpenAPI::toJsonValue(m_diagnostics));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_service_name_isSet) {
        obj.insert(QString("serviceName"), ::OpenAPI::toJsonValue(m_service_name));
    }
    return obj;
}

QList<OAIChangeReport> OAIGenerateConfigReportResponse::getChangeReports() const {
    return m_change_reports;
}
void OAIGenerateConfigReportResponse::setChangeReports(const QList<OAIChangeReport> &change_reports) {
    m_change_reports = change_reports;
    m_change_reports_isSet = true;
}

bool OAIGenerateConfigReportResponse::is_change_reports_Set() const{
    return m_change_reports_isSet;
}

bool OAIGenerateConfigReportResponse::is_change_reports_Valid() const{
    return m_change_reports_isValid;
}

QList<OAIDiagnostic> OAIGenerateConfigReportResponse::getDiagnostics() const {
    return m_diagnostics;
}
void OAIGenerateConfigReportResponse::setDiagnostics(const QList<OAIDiagnostic> &diagnostics) {
    m_diagnostics = diagnostics;
    m_diagnostics_isSet = true;
}

bool OAIGenerateConfigReportResponse::is_diagnostics_Set() const{
    return m_diagnostics_isSet;
}

bool OAIGenerateConfigReportResponse::is_diagnostics_Valid() const{
    return m_diagnostics_isValid;
}

QString OAIGenerateConfigReportResponse::getId() const {
    return m_id;
}
void OAIGenerateConfigReportResponse::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGenerateConfigReportResponse::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGenerateConfigReportResponse::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGenerateConfigReportResponse::getServiceName() const {
    return m_service_name;
}
void OAIGenerateConfigReportResponse::setServiceName(const QString &service_name) {
    m_service_name = service_name;
    m_service_name_isSet = true;
}

bool OAIGenerateConfigReportResponse::is_service_name_Set() const{
    return m_service_name_isSet;
}

bool OAIGenerateConfigReportResponse::is_service_name_Valid() const{
    return m_service_name_isValid;
}

bool OAIGenerateConfigReportResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_reports.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_diagnostics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGenerateConfigReportResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
