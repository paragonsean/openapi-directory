/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILabelDescriptor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILabelDescriptor::OAILabelDescriptor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILabelDescriptor::OAILabelDescriptor() {
    this->initializeModel();
}

OAILabelDescriptor::~OAILabelDescriptor() {}

void OAILabelDescriptor::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_value_type_isSet = false;
    m_value_type_isValid = false;
}

void OAILabelDescriptor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILabelDescriptor::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_value_type_isValid = ::OpenAPI::fromJsonValue(m_value_type, json[QString("valueType")]);
    m_value_type_isSet = !json[QString("valueType")].isNull() && m_value_type_isValid;
}

QString OAILabelDescriptor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILabelDescriptor::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_value_type_isSet) {
        obj.insert(QString("valueType"), ::OpenAPI::toJsonValue(m_value_type));
    }
    return obj;
}

QString OAILabelDescriptor::getDescription() const {
    return m_description;
}
void OAILabelDescriptor::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAILabelDescriptor::is_description_Set() const{
    return m_description_isSet;
}

bool OAILabelDescriptor::is_description_Valid() const{
    return m_description_isValid;
}

QString OAILabelDescriptor::getKey() const {
    return m_key;
}
void OAILabelDescriptor::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAILabelDescriptor::is_key_Set() const{
    return m_key_isSet;
}

bool OAILabelDescriptor::is_key_Valid() const{
    return m_key_isValid;
}

QString OAILabelDescriptor::getValueType() const {
    return m_value_type;
}
void OAILabelDescriptor::setValueType(const QString &value_type) {
    m_value_type = value_type;
    m_value_type_isSet = true;
}

bool OAILabelDescriptor::is_value_type_Set() const{
    return m_value_type_isSet;
}

bool OAILabelDescriptor::is_value_type_Valid() const{
    return m_value_type_isValid;
}

bool OAILabelDescriptor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILabelDescriptor::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
