/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrafficPercentStrategy.h
 *
 * Strategy that specifies how clients of Google Service Controller want to send traffic to use different config versions. This is generally used by API proxy to split traffic based on your configured percentage for each config version. One example of how to gradually rollout a new service configuration using this strategy: Day 1 Rollout { id: \&quot;example.googleapis.com/rollout_20160206\&quot; traffic_percent_strategy { percentages: { \&quot;example.googleapis.com/20160201\&quot;: 70.00 \&quot;example.googleapis.com/20160206\&quot;: 30.00 } } } Day 2 Rollout { id: \&quot;example.googleapis.com/rollout_20160207\&quot; traffic_percent_strategy: { percentages: { \&quot;example.googleapis.com/20160206\&quot;: 100.00 } } }
 */

#ifndef OAITrafficPercentStrategy_H
#define OAITrafficPercentStrategy_H

#include <QJsonObject>

#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITrafficPercentStrategy : public OAIObject {
public:
    OAITrafficPercentStrategy();
    OAITrafficPercentStrategy(QString json);
    ~OAITrafficPercentStrategy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, double> getPercentages() const;
    void setPercentages(const QMap<QString, double> &percentages);
    bool is_percentages_Set() const;
    bool is_percentages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, double> m_percentages;
    bool m_percentages_isSet;
    bool m_percentages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrafficPercentStrategy)

#endif // OAITrafficPercentStrategy_H
