/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOperationMetadata::OAIOperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOperationMetadata::OAIOperationMetadata() {
    this->initializeModel();
}

OAIOperationMetadata::~OAIOperationMetadata() {}

void OAIOperationMetadata::initializeModel() {

    m_progress_percentage_isSet = false;
    m_progress_percentage_isValid = false;

    m_resource_names_isSet = false;
    m_resource_names_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_steps_isSet = false;
    m_steps_isValid = false;
}

void OAIOperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOperationMetadata::fromJsonObject(QJsonObject json) {

    m_progress_percentage_isValid = ::OpenAPI::fromJsonValue(m_progress_percentage, json[QString("progressPercentage")]);
    m_progress_percentage_isSet = !json[QString("progressPercentage")].isNull() && m_progress_percentage_isValid;

    m_resource_names_isValid = ::OpenAPI::fromJsonValue(m_resource_names, json[QString("resourceNames")]);
    m_resource_names_isSet = !json[QString("resourceNames")].isNull() && m_resource_names_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_steps_isValid = ::OpenAPI::fromJsonValue(m_steps, json[QString("steps")]);
    m_steps_isSet = !json[QString("steps")].isNull() && m_steps_isValid;
}

QString OAIOperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_progress_percentage_isSet) {
        obj.insert(QString("progressPercentage"), ::OpenAPI::toJsonValue(m_progress_percentage));
    }
    if (m_resource_names.size() > 0) {
        obj.insert(QString("resourceNames"), ::OpenAPI::toJsonValue(m_resource_names));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_steps.size() > 0) {
        obj.insert(QString("steps"), ::OpenAPI::toJsonValue(m_steps));
    }
    return obj;
}

qint32 OAIOperationMetadata::getProgressPercentage() const {
    return m_progress_percentage;
}
void OAIOperationMetadata::setProgressPercentage(const qint32 &progress_percentage) {
    m_progress_percentage = progress_percentage;
    m_progress_percentage_isSet = true;
}

bool OAIOperationMetadata::is_progress_percentage_Set() const{
    return m_progress_percentage_isSet;
}

bool OAIOperationMetadata::is_progress_percentage_Valid() const{
    return m_progress_percentage_isValid;
}

QList<QString> OAIOperationMetadata::getResourceNames() const {
    return m_resource_names;
}
void OAIOperationMetadata::setResourceNames(const QList<QString> &resource_names) {
    m_resource_names = resource_names;
    m_resource_names_isSet = true;
}

bool OAIOperationMetadata::is_resource_names_Set() const{
    return m_resource_names_isSet;
}

bool OAIOperationMetadata::is_resource_names_Valid() const{
    return m_resource_names_isValid;
}

QString OAIOperationMetadata::getStartTime() const {
    return m_start_time;
}
void OAIOperationMetadata::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIOperationMetadata::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIOperationMetadata::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QList<OAIStep> OAIOperationMetadata::getSteps() const {
    return m_steps;
}
void OAIOperationMetadata::setSteps(const QList<OAIStep> &steps) {
    m_steps = steps;
    m_steps_isSet = true;
}

bool OAIOperationMetadata::is_steps_Set() const{
    return m_steps_isSet;
}

bool OAIOperationMetadata::is_steps_Valid() const{
    return m_steps_isValid;
}

bool OAIOperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_progress_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_steps.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
