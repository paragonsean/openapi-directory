/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigFile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigFile::OAIConfigFile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigFile::OAIConfigFile() {
    this->initializeModel();
}

OAIConfigFile::~OAIConfigFile() {}

void OAIConfigFile::initializeModel() {

    m_file_contents_isSet = false;
    m_file_contents_isValid = false;

    m_file_path_isSet = false;
    m_file_path_isValid = false;

    m_file_type_isSet = false;
    m_file_type_isValid = false;
}

void OAIConfigFile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigFile::fromJsonObject(QJsonObject json) {

    m_file_contents_isValid = ::OpenAPI::fromJsonValue(m_file_contents, json[QString("fileContents")]);
    m_file_contents_isSet = !json[QString("fileContents")].isNull() && m_file_contents_isValid;

    m_file_path_isValid = ::OpenAPI::fromJsonValue(m_file_path, json[QString("filePath")]);
    m_file_path_isSet = !json[QString("filePath")].isNull() && m_file_path_isValid;

    m_file_type_isValid = ::OpenAPI::fromJsonValue(m_file_type, json[QString("fileType")]);
    m_file_type_isSet = !json[QString("fileType")].isNull() && m_file_type_isValid;
}

QString OAIConfigFile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigFile::asJsonObject() const {
    QJsonObject obj;
    if (m_file_contents_isSet) {
        obj.insert(QString("fileContents"), ::OpenAPI::toJsonValue(m_file_contents));
    }
    if (m_file_path_isSet) {
        obj.insert(QString("filePath"), ::OpenAPI::toJsonValue(m_file_path));
    }
    if (m_file_type_isSet) {
        obj.insert(QString("fileType"), ::OpenAPI::toJsonValue(m_file_type));
    }
    return obj;
}

QByteArray OAIConfigFile::getFileContents() const {
    return m_file_contents;
}
void OAIConfigFile::setFileContents(const QByteArray &file_contents) {
    m_file_contents = file_contents;
    m_file_contents_isSet = true;
}

bool OAIConfigFile::is_file_contents_Set() const{
    return m_file_contents_isSet;
}

bool OAIConfigFile::is_file_contents_Valid() const{
    return m_file_contents_isValid;
}

QString OAIConfigFile::getFilePath() const {
    return m_file_path;
}
void OAIConfigFile::setFilePath(const QString &file_path) {
    m_file_path = file_path;
    m_file_path_isSet = true;
}

bool OAIConfigFile::is_file_path_Set() const{
    return m_file_path_isSet;
}

bool OAIConfigFile::is_file_path_Valid() const{
    return m_file_path_isValid;
}

QString OAIConfigFile::getFileType() const {
    return m_file_type;
}
void OAIConfigFile::setFileType(const QString &file_type) {
    m_file_type = file_type;
    m_file_type_isSet = true;
}

bool OAIConfigFile::is_file_type_Set() const{
    return m_file_type_isSet;
}

bool OAIConfigFile::is_file_type_Valid() const{
    return m_file_type_isValid;
}

bool OAIConfigFile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_contents_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigFile::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
