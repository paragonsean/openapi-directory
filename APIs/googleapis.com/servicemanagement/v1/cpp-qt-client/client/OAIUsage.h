/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsage.h
 *
 * Configuration controlling usage of a service.
 */

#ifndef OAIUsage_H
#define OAIUsage_H

#include <QJsonObject>

#include "OAIUsageRule.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUsageRule;

class OAIUsage : public OAIObject {
public:
    OAIUsage();
    OAIUsage(QString json);
    ~OAIUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getProducerNotificationChannel() const;
    void setProducerNotificationChannel(const QString &producer_notification_channel);
    bool is_producer_notification_channel_Set() const;
    bool is_producer_notification_channel_Valid() const;

    QList<QString> getRequirements() const;
    void setRequirements(const QList<QString> &requirements);
    bool is_requirements_Set() const;
    bool is_requirements_Valid() const;

    QList<OAIUsageRule> getRules() const;
    void setRules(const QList<OAIUsageRule> &rules);
    bool is_rules_Set() const;
    bool is_rules_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_producer_notification_channel;
    bool m_producer_notification_channel_isSet;
    bool m_producer_notification_channel_isValid;

    QList<QString> m_requirements;
    bool m_requirements_isSet;
    bool m_requirements_isValid;

    QList<OAIUsageRule> m_rules;
    bool m_rules_isSet;
    bool m_rules_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsage)

#endif // OAIUsage_H
