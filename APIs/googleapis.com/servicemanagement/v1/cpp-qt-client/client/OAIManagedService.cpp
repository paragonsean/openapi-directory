/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedService.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedService::OAIManagedService(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedService::OAIManagedService() {
    this->initializeModel();
}

OAIManagedService::~OAIManagedService() {}

void OAIManagedService::initializeModel() {

    m_producer_project_id_isSet = false;
    m_producer_project_id_isValid = false;

    m_service_name_isSet = false;
    m_service_name_isValid = false;
}

void OAIManagedService::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedService::fromJsonObject(QJsonObject json) {

    m_producer_project_id_isValid = ::OpenAPI::fromJsonValue(m_producer_project_id, json[QString("producerProjectId")]);
    m_producer_project_id_isSet = !json[QString("producerProjectId")].isNull() && m_producer_project_id_isValid;

    m_service_name_isValid = ::OpenAPI::fromJsonValue(m_service_name, json[QString("serviceName")]);
    m_service_name_isSet = !json[QString("serviceName")].isNull() && m_service_name_isValid;
}

QString OAIManagedService::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedService::asJsonObject() const {
    QJsonObject obj;
    if (m_producer_project_id_isSet) {
        obj.insert(QString("producerProjectId"), ::OpenAPI::toJsonValue(m_producer_project_id));
    }
    if (m_service_name_isSet) {
        obj.insert(QString("serviceName"), ::OpenAPI::toJsonValue(m_service_name));
    }
    return obj;
}

QString OAIManagedService::getProducerProjectId() const {
    return m_producer_project_id;
}
void OAIManagedService::setProducerProjectId(const QString &producer_project_id) {
    m_producer_project_id = producer_project_id;
    m_producer_project_id_isSet = true;
}

bool OAIManagedService::is_producer_project_id_Set() const{
    return m_producer_project_id_isSet;
}

bool OAIManagedService::is_producer_project_id_Valid() const{
    return m_producer_project_id_isValid;
}

QString OAIManagedService::getServiceName() const {
    return m_service_name;
}
void OAIManagedService::setServiceName(const QString &service_name) {
    m_service_name = service_name;
    m_service_name_isSet = true;
}

bool OAIManagedService::is_service_name_Set() const{
    return m_service_name_isSet;
}

bool OAIManagedService::is_service_name_Valid() const{
    return m_service_name_isValid;
}

bool OAIManagedService::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_producer_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedService::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
