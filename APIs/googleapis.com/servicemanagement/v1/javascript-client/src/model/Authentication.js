/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthProvider from './AuthProvider';
import AuthenticationRule from './AuthenticationRule';

/**
 * The Authentication model module.
 * @module model/Authentication
 * @version v1
 */
class Authentication {
    /**
     * Constructs a new <code>Authentication</code>.
     * &#x60;Authentication&#x60; defines the authentication configuration for API methods provided by an API service. Example: name: calendar.googleapis.com authentication: providers: - id: google_calendar_auth jwks_uri: https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: \&quot;*\&quot; requirements: provider_id: google_calendar_auth - selector: google.calendar.Delegate oauth: canonical_scopes: https://www.googleapis.com/auth/calendar.read
     * @alias module:model/Authentication
     */
    constructor() { 
        
        Authentication.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Authentication</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Authentication} obj Optional instance to populate.
     * @return {module:model/Authentication} The populated <code>Authentication</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Authentication();

            if (data.hasOwnProperty('providers')) {
                obj['providers'] = ApiClient.convertToType(data['providers'], [AuthProvider]);
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], [AuthenticationRule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Authentication</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Authentication</code>.
     */
    static validateJSON(data) {
        if (data['providers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['providers'])) {
                throw new Error("Expected the field `providers` to be an array in the JSON data but got " + data['providers']);
            }
            // validate the optional field `providers` (array)
            for (const item of data['providers']) {
                AuthProvider.validateJSON(item);
            };
        }
        if (data['rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rules'])) {
                throw new Error("Expected the field `rules` to be an array in the JSON data but got " + data['rules']);
            }
            // validate the optional field `rules` (array)
            for (const item of data['rules']) {
                AuthenticationRule.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Defines a set of authentication providers that a service supports.
 * @member {Array.<module:model/AuthProvider>} providers
 */
Authentication.prototype['providers'] = undefined;

/**
 * A list of authentication rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order.
 * @member {Array.<module:model/AuthenticationRule>} rules
 */
Authentication.prototype['rules'] = undefined;






export default Authentication;

