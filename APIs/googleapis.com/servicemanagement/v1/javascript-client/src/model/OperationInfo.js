/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OperationInfo model module.
 * @module model/OperationInfo
 * @version v1
 */
class OperationInfo {
    /**
     * Constructs a new <code>OperationInfo</code>.
     * A message representing the message types used by a long-running operation. Example: rpc Export(ExportRequest) returns (google.longrunning.Operation) { option (google.longrunning.operation_info) &#x3D; { response_type: \&quot;ExportResponse\&quot; metadata_type: \&quot;ExportMetadata\&quot; }; }
     * @alias module:model/OperationInfo
     */
    constructor() { 
        
        OperationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OperationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OperationInfo} obj Optional instance to populate.
     * @return {module:model/OperationInfo} The populated <code>OperationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OperationInfo();

            if (data.hasOwnProperty('metadataType')) {
                obj['metadataType'] = ApiClient.convertToType(data['metadataType'], 'String');
            }
            if (data.hasOwnProperty('responseType')) {
                obj['responseType'] = ApiClient.convertToType(data['responseType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OperationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OperationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['metadataType'] && !(typeof data['metadataType'] === 'string' || data['metadataType'] instanceof String)) {
            throw new Error("Expected the field `metadataType` to be a primitive type in the JSON string but got " + data['metadataType']);
        }
        // ensure the json data is a string
        if (data['responseType'] && !(typeof data['responseType'] === 'string' || data['responseType'] instanceof String)) {
            throw new Error("Expected the field `responseType` to be a primitive type in the JSON string but got " + data['responseType']);
        }

        return true;
    }


}



/**
 * Required. The message name of the metadata type for this long-running operation. If the response is in a different package from the rpc, a fully-qualified message name must be used (e.g. `google.protobuf.Struct`). Note: Altering this value constitutes a breaking change.
 * @member {String} metadataType
 */
OperationInfo.prototype['metadataType'] = undefined;

/**
 * Required. The message name of the primary return type for this long-running operation. This type will be used to deserialize the LRO's response. If the response is in a different package from the rpc, a fully-qualified message name must be used (e.g. `google.protobuf.Struct`). Note: Altering this value constitutes a breaking change.
 * @member {String} responseType
 */
OperationInfo.prototype['responseType'] = undefined;






export default OperationInfo;

