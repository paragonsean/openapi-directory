/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TrafficPercentStrategy model module.
 * @module model/TrafficPercentStrategy
 * @version v1
 */
class TrafficPercentStrategy {
    /**
     * Constructs a new <code>TrafficPercentStrategy</code>.
     * Strategy that specifies how clients of Google Service Controller want to send traffic to use different config versions. This is generally used by API proxy to split traffic based on your configured percentage for each config version. One example of how to gradually rollout a new service configuration using this strategy: Day 1 Rollout { id: \&quot;example.googleapis.com/rollout_20160206\&quot; traffic_percent_strategy { percentages: { \&quot;example.googleapis.com/20160201\&quot;: 70.00 \&quot;example.googleapis.com/20160206\&quot;: 30.00 } } } Day 2 Rollout { id: \&quot;example.googleapis.com/rollout_20160207\&quot; traffic_percent_strategy: { percentages: { \&quot;example.googleapis.com/20160206\&quot;: 100.00 } } }
     * @alias module:model/TrafficPercentStrategy
     */
    constructor() { 
        
        TrafficPercentStrategy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TrafficPercentStrategy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrafficPercentStrategy} obj Optional instance to populate.
     * @return {module:model/TrafficPercentStrategy} The populated <code>TrafficPercentStrategy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrafficPercentStrategy();

            if (data.hasOwnProperty('percentages')) {
                obj['percentages'] = ApiClient.convertToType(data['percentages'], {'String': 'Number'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrafficPercentStrategy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrafficPercentStrategy</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Maps service configuration IDs to their corresponding traffic percentage. Key is the service configuration ID, Value is the traffic percentage which must be greater than 0.0 and the sum must equal to 100.0.
 * @member {Object.<String, Number>} percentages
 */
TrafficPercentStrategy.prototype['percentages'] = undefined;






export default TrafficPercentStrategy;

