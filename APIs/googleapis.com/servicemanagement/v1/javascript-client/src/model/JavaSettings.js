/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CommonLanguageSettings from './CommonLanguageSettings';

/**
 * The JavaSettings model module.
 * @module model/JavaSettings
 * @version v1
 */
class JavaSettings {
    /**
     * Constructs a new <code>JavaSettings</code>.
     * Settings for Java client libraries.
     * @alias module:model/JavaSettings
     */
    constructor() { 
        
        JavaSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JavaSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JavaSettings} obj Optional instance to populate.
     * @return {module:model/JavaSettings} The populated <code>JavaSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JavaSettings();

            if (data.hasOwnProperty('common')) {
                obj['common'] = CommonLanguageSettings.constructFromObject(data['common']);
            }
            if (data.hasOwnProperty('libraryPackage')) {
                obj['libraryPackage'] = ApiClient.convertToType(data['libraryPackage'], 'String');
            }
            if (data.hasOwnProperty('serviceClassNames')) {
                obj['serviceClassNames'] = ApiClient.convertToType(data['serviceClassNames'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JavaSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JavaSettings</code>.
     */
    static validateJSON(data) {
        // validate the optional field `common`
        if (data['common']) { // data not null
          CommonLanguageSettings.validateJSON(data['common']);
        }
        // ensure the json data is a string
        if (data['libraryPackage'] && !(typeof data['libraryPackage'] === 'string' || data['libraryPackage'] instanceof String)) {
            throw new Error("Expected the field `libraryPackage` to be a primitive type in the JSON string but got " + data['libraryPackage']);
        }

        return true;
    }


}



/**
 * @member {module:model/CommonLanguageSettings} common
 */
JavaSettings.prototype['common'] = undefined;

/**
 * The package name to use in Java. Clobbers the java_package option set in the protobuf. This should be used **only** by APIs who have already set the language_settings.java.package_name\" field in gapic.yaml. API teams should use the protobuf java_package option where possible. Example of a YAML configuration:: publishing: java_settings: library_package: com.google.cloud.pubsub.v1
 * @member {String} libraryPackage
 */
JavaSettings.prototype['libraryPackage'] = undefined;

/**
 * Configure the Java class name to use instead of the service's for its corresponding generated GAPIC client. Keys are fully-qualified service names as they appear in the protobuf (including the full the language_settings.java.interface_names\" field in gapic.yaml. API teams should otherwise use the service name as it appears in the protobuf. Example of a YAML configuration:: publishing: java_settings: service_class_names: - google.pubsub.v1.Publisher: TopicAdmin - google.pubsub.v1.Subscriber: SubscriptionAdmin
 * @member {Object.<String, String>} serviceClassNames
 */
JavaSettings.prototype['serviceClassNames'] = undefined;






export default JavaSettings;

