/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SystemParameter model module.
 * @module model/SystemParameter
 * @version v1
 */
class SystemParameter {
    /**
     * Constructs a new <code>SystemParameter</code>.
     * Define a parameter&#39;s name and location. The parameter may be passed as either an HTTP header or a URL query parameter, and if both are passed the behavior is implementation-dependent.
     * @alias module:model/SystemParameter
     */
    constructor() { 
        
        SystemParameter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SystemParameter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SystemParameter} obj Optional instance to populate.
     * @return {module:model/SystemParameter} The populated <code>SystemParameter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SystemParameter();

            if (data.hasOwnProperty('httpHeader')) {
                obj['httpHeader'] = ApiClient.convertToType(data['httpHeader'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('urlQueryParameter')) {
                obj['urlQueryParameter'] = ApiClient.convertToType(data['urlQueryParameter'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SystemParameter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SystemParameter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['httpHeader'] && !(typeof data['httpHeader'] === 'string' || data['httpHeader'] instanceof String)) {
            throw new Error("Expected the field `httpHeader` to be a primitive type in the JSON string but got " + data['httpHeader']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['urlQueryParameter'] && !(typeof data['urlQueryParameter'] === 'string' || data['urlQueryParameter'] instanceof String)) {
            throw new Error("Expected the field `urlQueryParameter` to be a primitive type in the JSON string but got " + data['urlQueryParameter']);
        }

        return true;
    }


}



/**
 * Define the HTTP header name to use for the parameter. It is case insensitive.
 * @member {String} httpHeader
 */
SystemParameter.prototype['httpHeader'] = undefined;

/**
 * Define the name of the parameter, such as \"api_key\" . It is case sensitive.
 * @member {String} name
 */
SystemParameter.prototype['name'] = undefined;

/**
 * Define the URL query parameter name to use for the parameter. It is case sensitive.
 * @member {String} urlQueryParameter
 */
SystemParameter.prototype['urlQueryParameter'] = undefined;






export default SystemParameter;

