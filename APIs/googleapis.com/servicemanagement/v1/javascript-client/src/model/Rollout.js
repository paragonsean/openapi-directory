/**
 * Service Management API
 * Google Service Management allows service producers to publish their services on Google Cloud Platform so that they can be discovered and used by service consumers.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TrafficPercentStrategy from './TrafficPercentStrategy';

/**
 * The Rollout model module.
 * @module model/Rollout
 * @version v1
 */
class Rollout {
    /**
     * Constructs a new <code>Rollout</code>.
     * A rollout resource that defines how service configuration versions are pushed to control plane systems. Typically, you create a new version of the service config, and then create a Rollout to push the service config.
     * @alias module:model/Rollout
     */
    constructor() { 
        
        Rollout.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Rollout</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Rollout} obj Optional instance to populate.
     * @return {module:model/Rollout} The populated <code>Rollout</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Rollout();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('deleteServiceStrategy')) {
                obj['deleteServiceStrategy'] = ApiClient.convertToType(data['deleteServiceStrategy'], Object);
            }
            if (data.hasOwnProperty('rolloutId')) {
                obj['rolloutId'] = ApiClient.convertToType(data['rolloutId'], 'String');
            }
            if (data.hasOwnProperty('serviceName')) {
                obj['serviceName'] = ApiClient.convertToType(data['serviceName'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('trafficPercentStrategy')) {
                obj['trafficPercentStrategy'] = TrafficPercentStrategy.constructFromObject(data['trafficPercentStrategy']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Rollout</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Rollout</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['createdBy'] && !(typeof data['createdBy'] === 'string' || data['createdBy'] instanceof String)) {
            throw new Error("Expected the field `createdBy` to be a primitive type in the JSON string but got " + data['createdBy']);
        }
        // ensure the json data is a string
        if (data['rolloutId'] && !(typeof data['rolloutId'] === 'string' || data['rolloutId'] instanceof String)) {
            throw new Error("Expected the field `rolloutId` to be a primitive type in the JSON string but got " + data['rolloutId']);
        }
        // ensure the json data is a string
        if (data['serviceName'] && !(typeof data['serviceName'] === 'string' || data['serviceName'] instanceof String)) {
            throw new Error("Expected the field `serviceName` to be a primitive type in the JSON string but got " + data['serviceName']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `trafficPercentStrategy`
        if (data['trafficPercentStrategy']) { // data not null
          TrafficPercentStrategy.validateJSON(data['trafficPercentStrategy']);
        }

        return true;
    }


}



/**
 * Creation time of the rollout. Readonly.
 * @member {String} createTime
 */
Rollout.prototype['createTime'] = undefined;

/**
 * The user who created the Rollout. Readonly.
 * @member {String} createdBy
 */
Rollout.prototype['createdBy'] = undefined;

/**
 * Strategy used to delete a service. This strategy is a placeholder only used by the system generated rollout to delete a service.
 * @member {Object} deleteServiceStrategy
 */
Rollout.prototype['deleteServiceStrategy'] = undefined;

/**
 * Optional. Unique identifier of this Rollout. Must be no longer than 63 characters and only lower case letters, digits, '.', '_' and '-' are allowed. If not specified by client, the server will generate one. The generated id will have the form of , where \"date\" is the create date in ISO 8601 format. \"revision number\" is a monotonically increasing positive number that is reset every day for each service. An example of the generated rollout_id is '2016-02-16r1'
 * @member {String} rolloutId
 */
Rollout.prototype['rolloutId'] = undefined;

/**
 * The name of the service associated with this Rollout.
 * @member {String} serviceName
 */
Rollout.prototype['serviceName'] = undefined;

/**
 * The status of this rollout. Readonly. In case of a failed rollout, the system will automatically rollback to the current Rollout version. Readonly.
 * @member {module:model/Rollout.StatusEnum} status
 */
Rollout.prototype['status'] = undefined;

/**
 * @member {module:model/TrafficPercentStrategy} trafficPercentStrategy
 */
Rollout.prototype['trafficPercentStrategy'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Rollout['StatusEnum'] = {

    /**
     * value: "ROLLOUT_STATUS_UNSPECIFIED"
     * @const
     */
    "ROLLOUT_STATUS_UNSPECIFIED": "ROLLOUT_STATUS_UNSPECIFIED",

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "SUCCESS"
     * @const
     */
    "SUCCESS": "SUCCESS",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "FAILED_ROLLED_BACK"
     * @const
     */
    "FAILED_ROLLED_BACK": "FAILED_ROLLED_BACK"
};



export default Rollout;

