# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_change import ConfigChange
from openapi_server import util


class ChangeReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config_changes: List[ConfigChange]=None):
        """ChangeReport - a model defined in OpenAPI

        :param config_changes: The config_changes of this ChangeReport.
        """
        self.openapi_types = {
            'config_changes': List[ConfigChange]
        }

        self.attribute_map = {
            'config_changes': 'configChanges'
        }

        self._config_changes = config_changes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangeReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangeReport of this ChangeReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_changes(self):
        """Gets the config_changes of this ChangeReport.

        List of changes between two service configurations. The changes will be alphabetically sorted based on the identifier of each change. A ConfigChange identifier is a dot separated path to the configuration. Example: visibility.rules[selector='LibraryService.CreateBook'].restriction

        :return: The config_changes of this ChangeReport.
        :rtype: List[ConfigChange]
        """
        return self._config_changes

    @config_changes.setter
    def config_changes(self, config_changes):
        """Sets the config_changes of this ChangeReport.

        List of changes between two service configurations. The changes will be alphabetically sorted based on the identifier of each change. A ConfigChange identifier is a dot separated path to the configuration. Example: visibility.rules[selector='LibraryService.CreateBook'].restriction

        :param config_changes: The config_changes of this ChangeReport.
        :type config_changes: List[ConfigChange]
        """

        self._config_changes = config_changes
