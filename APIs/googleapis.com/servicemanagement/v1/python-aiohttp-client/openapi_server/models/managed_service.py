# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManagedService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, producer_project_id: str=None, service_name: str=None):
        """ManagedService - a model defined in OpenAPI

        :param producer_project_id: The producer_project_id of this ManagedService.
        :param service_name: The service_name of this ManagedService.
        """
        self.openapi_types = {
            'producer_project_id': str,
            'service_name': str
        }

        self.attribute_map = {
            'producer_project_id': 'producerProjectId',
            'service_name': 'serviceName'
        }

        self._producer_project_id = producer_project_id
        self._service_name = service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedService of this ManagedService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def producer_project_id(self):
        """Gets the producer_project_id of this ManagedService.

        ID of the project that produces and owns this service.

        :return: The producer_project_id of this ManagedService.
        :rtype: str
        """
        return self._producer_project_id

    @producer_project_id.setter
    def producer_project_id(self, producer_project_id):
        """Sets the producer_project_id of this ManagedService.

        ID of the project that produces and owns this service.

        :param producer_project_id: The producer_project_id of this ManagedService.
        :type producer_project_id: str
        """

        self._producer_project_id = producer_project_id

    @property
    def service_name(self):
        """Gets the service_name of this ManagedService.

        The name of the service. See the [overview](https://cloud.google.com/service-infrastructure/docs/overview) for naming requirements.

        :return: The service_name of this ManagedService.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ManagedService.

        The name of the service. See the [overview](https://cloud.google.com/service-infrastructure/docs/overview) for naming requirements.

        :param service_name: The service_name of this ManagedService.
        :type service_name: str
        """

        self._service_name = service_name
