# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AuthRequirement(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audiences: str=None, provider_id: str=None):
        """AuthRequirement - a model defined in OpenAPI

        :param audiences: The audiences of this AuthRequirement.
        :param provider_id: The provider_id of this AuthRequirement.
        """
        self.openapi_types = {
            'audiences': str,
            'provider_id': str
        }

        self.attribute_map = {
            'audiences': 'audiences',
            'provider_id': 'providerId'
        }

        self._audiences = audiences
        self._provider_id = provider_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthRequirement':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthRequirement of this AuthRequirement.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audiences(self):
        """Gets the audiences of this AuthRequirement.

        NOTE: This will be deprecated soon, once AuthProvider.audiences is implemented and accepted in all the runtime components. The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted. When this setting is absent, only JWTs with audience \"https://Service_name/API_name\" will be accepted. For example, if no audiences are in the setting, LibraryService API will only accept JWTs with the following audience \"https://library-example.googleapis.com/google.example.library.v1.LibraryService\". Example: audiences: bookstore_android.apps.googleusercontent.com, bookstore_web.apps.googleusercontent.com

        :return: The audiences of this AuthRequirement.
        :rtype: str
        """
        return self._audiences

    @audiences.setter
    def audiences(self, audiences):
        """Sets the audiences of this AuthRequirement.

        NOTE: This will be deprecated soon, once AuthProvider.audiences is implemented and accepted in all the runtime components. The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted. When this setting is absent, only JWTs with audience \"https://Service_name/API_name\" will be accepted. For example, if no audiences are in the setting, LibraryService API will only accept JWTs with the following audience \"https://library-example.googleapis.com/google.example.library.v1.LibraryService\". Example: audiences: bookstore_android.apps.googleusercontent.com, bookstore_web.apps.googleusercontent.com

        :param audiences: The audiences of this AuthRequirement.
        :type audiences: str
        """

        self._audiences = audiences

    @property
    def provider_id(self):
        """Gets the provider_id of this AuthRequirement.

        id from authentication provider. Example: provider_id: bookstore_auth

        :return: The provider_id of this AuthRequirement.
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this AuthRequirement.

        id from authentication provider. Example: provider_id: bookstore_auth

        :param provider_id: The provider_id of this AuthRequirement.
        :type provider_id: str
        """

        self._provider_id = provider_id
