# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.system_parameter_rule import SystemParameterRule
from openapi_server import util


class SystemParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rules: List[SystemParameterRule]=None):
        """SystemParameters - a model defined in OpenAPI

        :param rules: The rules of this SystemParameters.
        """
        self.openapi_types = {
            'rules': List[SystemParameterRule]
        }

        self.attribute_map = {
            'rules': 'rules'
        }

        self._rules = rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SystemParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SystemParameters of this SystemParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rules(self):
        """Gets the rules of this SystemParameters.

        Define system parameters. The parameters defined here will override the default parameters implemented by the system. If this field is missing from the service config, default system parameters will be used. Default system parameters and names is implementation-dependent. Example: define api key for all methods system_parameters rules: - selector: \"*\" parameters: - name: api_key url_query_parameter: api_key Example: define 2 api key names for a specific method. system_parameters rules: - selector: \"/ListShelves\" parameters: - name: api_key http_header: Api-Key1 - name: api_key http_header: Api-Key2 **NOTE:** All service configuration rules follow \"last one wins\" order.

        :return: The rules of this SystemParameters.
        :rtype: List[SystemParameterRule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this SystemParameters.

        Define system parameters. The parameters defined here will override the default parameters implemented by the system. If this field is missing from the service config, default system parameters will be used. Default system parameters and names is implementation-dependent. Example: define api key for all methods system_parameters rules: - selector: \"*\" parameters: - name: api_key url_query_parameter: api_key Example: define 2 api key names for a specific method. system_parameters rules: - selector: \"/ListShelves\" parameters: - name: api_key http_header: Api-Key1 - name: api_key http_header: Api-Key2 **NOTE:** All service configuration rules follow \"last one wins\" order.

        :param rules: The rules of this SystemParameters.
        :type rules: List[SystemParameterRule]
        """

        self._rules = rules
