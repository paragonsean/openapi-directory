# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResourceReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, child_type: str=None, type: str=None):
        """ResourceReference - a model defined in OpenAPI

        :param child_type: The child_type of this ResourceReference.
        :param type: The type of this ResourceReference.
        """
        self.openapi_types = {
            'child_type': str,
            'type': str
        }

        self.attribute_map = {
            'child_type': 'childType',
            'type': 'type'
        }

        self._child_type = child_type
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResourceReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResourceReference of this ResourceReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def child_type(self):
        """Gets the child_type of this ResourceReference.

        The resource type of a child collection that the annotated field references. This is useful for annotating the `parent` field that doesn't have a fixed resource type. Example: message ListLogEntriesRequest { string parent = 1 [(google.api.resource_reference) = { child_type: \"logging.googleapis.com/LogEntry\" }; }

        :return: The child_type of this ResourceReference.
        :rtype: str
        """
        return self._child_type

    @child_type.setter
    def child_type(self, child_type):
        """Sets the child_type of this ResourceReference.

        The resource type of a child collection that the annotated field references. This is useful for annotating the `parent` field that doesn't have a fixed resource type. Example: message ListLogEntriesRequest { string parent = 1 [(google.api.resource_reference) = { child_type: \"logging.googleapis.com/LogEntry\" }; }

        :param child_type: The child_type of this ResourceReference.
        :type child_type: str
        """

        self._child_type = child_type

    @property
    def type(self):
        """Gets the type of this ResourceReference.

        The resource type that the annotated field references. Example: message Subscription { string topic = 2 [(google.api.resource_reference) = { type: \"pubsub.googleapis.com/Topic\" }]; } Occasionally, a field may reference an arbitrary resource. In this case, APIs use the special value * in their resource reference. Example: message GetIamPolicyRequest { string resource = 2 [(google.api.resource_reference) = { type: \"*\" }]; }

        :return: The type of this ResourceReference.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ResourceReference.

        The resource type that the annotated field references. Example: message Subscription { string topic = 2 [(google.api.resource_reference) = { type: \"pubsub.googleapis.com/Topic\" }]; } Occasionally, a field may reference an arbitrary resource. In this case, APIs use the special value * in their resource reference. Example: message GetIamPolicyRequest { string resource = 2 [(google.api.resource_reference) = { type: \"*\" }]; }

        :param type: The type of this ResourceReference.
        :type type: str
        """

        self._type = type
