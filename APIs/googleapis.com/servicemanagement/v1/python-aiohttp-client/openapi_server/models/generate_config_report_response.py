# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.change_report import ChangeReport
from openapi_server.models.diagnostic import Diagnostic
from openapi_server import util


class GenerateConfigReportResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_reports: List[ChangeReport]=None, diagnostics: List[Diagnostic]=None, id: str=None, service_name: str=None):
        """GenerateConfigReportResponse - a model defined in OpenAPI

        :param change_reports: The change_reports of this GenerateConfigReportResponse.
        :param diagnostics: The diagnostics of this GenerateConfigReportResponse.
        :param id: The id of this GenerateConfigReportResponse.
        :param service_name: The service_name of this GenerateConfigReportResponse.
        """
        self.openapi_types = {
            'change_reports': List[ChangeReport],
            'diagnostics': List[Diagnostic],
            'id': str,
            'service_name': str
        }

        self.attribute_map = {
            'change_reports': 'changeReports',
            'diagnostics': 'diagnostics',
            'id': 'id',
            'service_name': 'serviceName'
        }

        self._change_reports = change_reports
        self._diagnostics = diagnostics
        self._id = id
        self._service_name = service_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GenerateConfigReportResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GenerateConfigReportResponse of this GenerateConfigReportResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_reports(self):
        """Gets the change_reports of this GenerateConfigReportResponse.

        list of ChangeReport, each corresponding to comparison between two service configurations.

        :return: The change_reports of this GenerateConfigReportResponse.
        :rtype: List[ChangeReport]
        """
        return self._change_reports

    @change_reports.setter
    def change_reports(self, change_reports):
        """Sets the change_reports of this GenerateConfigReportResponse.

        list of ChangeReport, each corresponding to comparison between two service configurations.

        :param change_reports: The change_reports of this GenerateConfigReportResponse.
        :type change_reports: List[ChangeReport]
        """

        self._change_reports = change_reports

    @property
    def diagnostics(self):
        """Gets the diagnostics of this GenerateConfigReportResponse.

        Errors / Linter warnings associated with the service definition this report belongs to.

        :return: The diagnostics of this GenerateConfigReportResponse.
        :rtype: List[Diagnostic]
        """
        return self._diagnostics

    @diagnostics.setter
    def diagnostics(self, diagnostics):
        """Sets the diagnostics of this GenerateConfigReportResponse.

        Errors / Linter warnings associated with the service definition this report belongs to.

        :param diagnostics: The diagnostics of this GenerateConfigReportResponse.
        :type diagnostics: List[Diagnostic]
        """

        self._diagnostics = diagnostics

    @property
    def id(self):
        """Gets the id of this GenerateConfigReportResponse.

        ID of the service configuration this report belongs to.

        :return: The id of this GenerateConfigReportResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GenerateConfigReportResponse.

        ID of the service configuration this report belongs to.

        :param id: The id of this GenerateConfigReportResponse.
        :type id: str
        """

        self._id = id

    @property
    def service_name(self):
        """Gets the service_name of this GenerateConfigReportResponse.

        Name of the service this report belongs to.

        :return: The service_name of this GenerateConfigReportResponse.
        :rtype: str
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this GenerateConfigReportResponse.

        Name of the service this report belongs to.

        :param service_name: The service_name of this GenerateConfigReportResponse.
        :type service_name: str
        """

        self._service_name = service_name
