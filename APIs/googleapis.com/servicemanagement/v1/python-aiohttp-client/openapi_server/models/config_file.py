# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ConfigFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_contents: str=None, file_path: str=None, file_type: str=None):
        """ConfigFile - a model defined in OpenAPI

        :param file_contents: The file_contents of this ConfigFile.
        :param file_path: The file_path of this ConfigFile.
        :param file_type: The file_type of this ConfigFile.
        """
        self.openapi_types = {
            'file_contents': str,
            'file_path': str,
            'file_type': str
        }

        self.attribute_map = {
            'file_contents': 'fileContents',
            'file_path': 'filePath',
            'file_type': 'fileType'
        }

        self._file_contents = file_contents
        self._file_path = file_path
        self._file_type = file_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigFile of this ConfigFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_contents(self):
        """Gets the file_contents of this ConfigFile.

        The bytes that constitute the file.

        :return: The file_contents of this ConfigFile.
        :rtype: str
        """
        return self._file_contents

    @file_contents.setter
    def file_contents(self, file_contents):
        """Sets the file_contents of this ConfigFile.

        The bytes that constitute the file.

        :param file_contents: The file_contents of this ConfigFile.
        :type file_contents: str
        """

        self._file_contents = file_contents

    @property
    def file_path(self):
        """Gets the file_path of this ConfigFile.

        The file name of the configuration file (full or relative path).

        :return: The file_path of this ConfigFile.
        :rtype: str
        """
        return self._file_path

    @file_path.setter
    def file_path(self, file_path):
        """Sets the file_path of this ConfigFile.

        The file name of the configuration file (full or relative path).

        :param file_path: The file_path of this ConfigFile.
        :type file_path: str
        """

        self._file_path = file_path

    @property
    def file_type(self):
        """Gets the file_type of this ConfigFile.

        The type of configuration file this represents.

        :return: The file_type of this ConfigFile.
        :rtype: str
        """
        return self._file_type

    @file_type.setter
    def file_type(self, file_type):
        """Sets the file_type of this ConfigFile.

        The type of configuration file this represents.

        :param file_type: The file_type of this ConfigFile.
        :type file_type: str
        """
        allowed_values = ["FILE_TYPE_UNSPECIFIED", "SERVICE_CONFIG_YAML", "OPEN_API_JSON", "OPEN_API_YAML", "FILE_DESCRIPTOR_SET_PROTO", "PROTO_FILE"]  # noqa: E501
        if file_type not in allowed_values:
            raise ValueError(
                "Invalid value for `file_type` ({0}), must be one of {1}"
                .format(file_type, allowed_values)
            )

        self._file_type = file_type
