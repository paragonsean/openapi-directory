# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SoftwareRecipeStepInstallMsi(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_exit_codes: List[int]=None, artifact_id: str=None, flags: List[str]=None):
        """SoftwareRecipeStepInstallMsi - a model defined in OpenAPI

        :param allowed_exit_codes: The allowed_exit_codes of this SoftwareRecipeStepInstallMsi.
        :param artifact_id: The artifact_id of this SoftwareRecipeStepInstallMsi.
        :param flags: The flags of this SoftwareRecipeStepInstallMsi.
        """
        self.openapi_types = {
            'allowed_exit_codes': List[int],
            'artifact_id': str,
            'flags': List[str]
        }

        self.attribute_map = {
            'allowed_exit_codes': 'allowedExitCodes',
            'artifact_id': 'artifactId',
            'flags': 'flags'
        }

        self._allowed_exit_codes = allowed_exit_codes
        self._artifact_id = artifact_id
        self._flags = flags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SoftwareRecipeStepInstallMsi':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SoftwareRecipeStepInstallMsi of this SoftwareRecipeStepInstallMsi.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_exit_codes(self):
        """Gets the allowed_exit_codes of this SoftwareRecipeStepInstallMsi.

        Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]

        :return: The allowed_exit_codes of this SoftwareRecipeStepInstallMsi.
        :rtype: List[int]
        """
        return self._allowed_exit_codes

    @allowed_exit_codes.setter
    def allowed_exit_codes(self, allowed_exit_codes):
        """Sets the allowed_exit_codes of this SoftwareRecipeStepInstallMsi.

        Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]

        :param allowed_exit_codes: The allowed_exit_codes of this SoftwareRecipeStepInstallMsi.
        :type allowed_exit_codes: List[int]
        """

        self._allowed_exit_codes = allowed_exit_codes

    @property
    def artifact_id(self):
        """Gets the artifact_id of this SoftwareRecipeStepInstallMsi.

        Required. The id of the relevant artifact in the recipe.

        :return: The artifact_id of this SoftwareRecipeStepInstallMsi.
        :rtype: str
        """
        return self._artifact_id

    @artifact_id.setter
    def artifact_id(self, artifact_id):
        """Sets the artifact_id of this SoftwareRecipeStepInstallMsi.

        Required. The id of the relevant artifact in the recipe.

        :param artifact_id: The artifact_id of this SoftwareRecipeStepInstallMsi.
        :type artifact_id: str
        """

        self._artifact_id = artifact_id

    @property
    def flags(self):
        """Gets the flags of this SoftwareRecipeStepInstallMsi.

        The flags to use when installing the MSI defaults to [\"/i\"] (i.e. the install flag).

        :return: The flags of this SoftwareRecipeStepInstallMsi.
        :rtype: List[str]
        """
        return self._flags

    @flags.setter
    def flags(self, flags):
        """Sets the flags of this SoftwareRecipeStepInstallMsi.

        The flags to use when installing the MSI defaults to [\"/i\"] (i.e. the install flag).

        :param flags: The flags of this SoftwareRecipeStepInstallMsi.
        :type flags: List[str]
        """

        self._flags = flags
