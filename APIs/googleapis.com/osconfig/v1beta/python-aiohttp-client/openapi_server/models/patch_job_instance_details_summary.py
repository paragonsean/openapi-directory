# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PatchJobInstanceDetailsSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acked_instance_count: str=None, applying_patches_instance_count: str=None, downloading_patches_instance_count: str=None, failed_instance_count: str=None, inactive_instance_count: str=None, no_agent_detected_instance_count: str=None, notified_instance_count: str=None, pending_instance_count: str=None, post_patch_step_instance_count: str=None, pre_patch_step_instance_count: str=None, rebooting_instance_count: str=None, started_instance_count: str=None, succeeded_instance_count: str=None, succeeded_reboot_required_instance_count: str=None, timed_out_instance_count: str=None):
        """PatchJobInstanceDetailsSummary - a model defined in OpenAPI

        :param acked_instance_count: The acked_instance_count of this PatchJobInstanceDetailsSummary.
        :param applying_patches_instance_count: The applying_patches_instance_count of this PatchJobInstanceDetailsSummary.
        :param downloading_patches_instance_count: The downloading_patches_instance_count of this PatchJobInstanceDetailsSummary.
        :param failed_instance_count: The failed_instance_count of this PatchJobInstanceDetailsSummary.
        :param inactive_instance_count: The inactive_instance_count of this PatchJobInstanceDetailsSummary.
        :param no_agent_detected_instance_count: The no_agent_detected_instance_count of this PatchJobInstanceDetailsSummary.
        :param notified_instance_count: The notified_instance_count of this PatchJobInstanceDetailsSummary.
        :param pending_instance_count: The pending_instance_count of this PatchJobInstanceDetailsSummary.
        :param post_patch_step_instance_count: The post_patch_step_instance_count of this PatchJobInstanceDetailsSummary.
        :param pre_patch_step_instance_count: The pre_patch_step_instance_count of this PatchJobInstanceDetailsSummary.
        :param rebooting_instance_count: The rebooting_instance_count of this PatchJobInstanceDetailsSummary.
        :param started_instance_count: The started_instance_count of this PatchJobInstanceDetailsSummary.
        :param succeeded_instance_count: The succeeded_instance_count of this PatchJobInstanceDetailsSummary.
        :param succeeded_reboot_required_instance_count: The succeeded_reboot_required_instance_count of this PatchJobInstanceDetailsSummary.
        :param timed_out_instance_count: The timed_out_instance_count of this PatchJobInstanceDetailsSummary.
        """
        self.openapi_types = {
            'acked_instance_count': str,
            'applying_patches_instance_count': str,
            'downloading_patches_instance_count': str,
            'failed_instance_count': str,
            'inactive_instance_count': str,
            'no_agent_detected_instance_count': str,
            'notified_instance_count': str,
            'pending_instance_count': str,
            'post_patch_step_instance_count': str,
            'pre_patch_step_instance_count': str,
            'rebooting_instance_count': str,
            'started_instance_count': str,
            'succeeded_instance_count': str,
            'succeeded_reboot_required_instance_count': str,
            'timed_out_instance_count': str
        }

        self.attribute_map = {
            'acked_instance_count': 'ackedInstanceCount',
            'applying_patches_instance_count': 'applyingPatchesInstanceCount',
            'downloading_patches_instance_count': 'downloadingPatchesInstanceCount',
            'failed_instance_count': 'failedInstanceCount',
            'inactive_instance_count': 'inactiveInstanceCount',
            'no_agent_detected_instance_count': 'noAgentDetectedInstanceCount',
            'notified_instance_count': 'notifiedInstanceCount',
            'pending_instance_count': 'pendingInstanceCount',
            'post_patch_step_instance_count': 'postPatchStepInstanceCount',
            'pre_patch_step_instance_count': 'prePatchStepInstanceCount',
            'rebooting_instance_count': 'rebootingInstanceCount',
            'started_instance_count': 'startedInstanceCount',
            'succeeded_instance_count': 'succeededInstanceCount',
            'succeeded_reboot_required_instance_count': 'succeededRebootRequiredInstanceCount',
            'timed_out_instance_count': 'timedOutInstanceCount'
        }

        self._acked_instance_count = acked_instance_count
        self._applying_patches_instance_count = applying_patches_instance_count
        self._downloading_patches_instance_count = downloading_patches_instance_count
        self._failed_instance_count = failed_instance_count
        self._inactive_instance_count = inactive_instance_count
        self._no_agent_detected_instance_count = no_agent_detected_instance_count
        self._notified_instance_count = notified_instance_count
        self._pending_instance_count = pending_instance_count
        self._post_patch_step_instance_count = post_patch_step_instance_count
        self._pre_patch_step_instance_count = pre_patch_step_instance_count
        self._rebooting_instance_count = rebooting_instance_count
        self._started_instance_count = started_instance_count
        self._succeeded_instance_count = succeeded_instance_count
        self._succeeded_reboot_required_instance_count = succeeded_reboot_required_instance_count
        self._timed_out_instance_count = timed_out_instance_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchJobInstanceDetailsSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchJobInstanceDetailsSummary of this PatchJobInstanceDetailsSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acked_instance_count(self):
        """Gets the acked_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that have acked and will start shortly.

        :return: The acked_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._acked_instance_count

    @acked_instance_count.setter
    def acked_instance_count(self, acked_instance_count):
        """Sets the acked_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that have acked and will start shortly.

        :param acked_instance_count: The acked_instance_count of this PatchJobInstanceDetailsSummary.
        :type acked_instance_count: str
        """

        self._acked_instance_count = acked_instance_count

    @property
    def applying_patches_instance_count(self):
        """Gets the applying_patches_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are applying patches.

        :return: The applying_patches_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._applying_patches_instance_count

    @applying_patches_instance_count.setter
    def applying_patches_instance_count(self, applying_patches_instance_count):
        """Sets the applying_patches_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are applying patches.

        :param applying_patches_instance_count: The applying_patches_instance_count of this PatchJobInstanceDetailsSummary.
        :type applying_patches_instance_count: str
        """

        self._applying_patches_instance_count = applying_patches_instance_count

    @property
    def downloading_patches_instance_count(self):
        """Gets the downloading_patches_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are downloading patches.

        :return: The downloading_patches_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._downloading_patches_instance_count

    @downloading_patches_instance_count.setter
    def downloading_patches_instance_count(self, downloading_patches_instance_count):
        """Sets the downloading_patches_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are downloading patches.

        :param downloading_patches_instance_count: The downloading_patches_instance_count of this PatchJobInstanceDetailsSummary.
        :type downloading_patches_instance_count: str
        """

        self._downloading_patches_instance_count = downloading_patches_instance_count

    @property
    def failed_instance_count(self):
        """Gets the failed_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that failed.

        :return: The failed_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._failed_instance_count

    @failed_instance_count.setter
    def failed_instance_count(self, failed_instance_count):
        """Sets the failed_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that failed.

        :param failed_instance_count: The failed_instance_count of this PatchJobInstanceDetailsSummary.
        :type failed_instance_count: str
        """

        self._failed_instance_count = failed_instance_count

    @property
    def inactive_instance_count(self):
        """Gets the inactive_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are inactive.

        :return: The inactive_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._inactive_instance_count

    @inactive_instance_count.setter
    def inactive_instance_count(self, inactive_instance_count):
        """Sets the inactive_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are inactive.

        :param inactive_instance_count: The inactive_instance_count of this PatchJobInstanceDetailsSummary.
        :type inactive_instance_count: str
        """

        self._inactive_instance_count = inactive_instance_count

    @property
    def no_agent_detected_instance_count(self):
        """Gets the no_agent_detected_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.

        :return: The no_agent_detected_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._no_agent_detected_instance_count

    @no_agent_detected_instance_count.setter
    def no_agent_detected_instance_count(self, no_agent_detected_instance_count):
        """Sets the no_agent_detected_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.

        :param no_agent_detected_instance_count: The no_agent_detected_instance_count of this PatchJobInstanceDetailsSummary.
        :type no_agent_detected_instance_count: str
        """

        self._no_agent_detected_instance_count = no_agent_detected_instance_count

    @property
    def notified_instance_count(self):
        """Gets the notified_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances notified about patch job.

        :return: The notified_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._notified_instance_count

    @notified_instance_count.setter
    def notified_instance_count(self, notified_instance_count):
        """Sets the notified_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances notified about patch job.

        :param notified_instance_count: The notified_instance_count of this PatchJobInstanceDetailsSummary.
        :type notified_instance_count: str
        """

        self._notified_instance_count = notified_instance_count

    @property
    def pending_instance_count(self):
        """Gets the pending_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances pending patch job.

        :return: The pending_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._pending_instance_count

    @pending_instance_count.setter
    def pending_instance_count(self, pending_instance_count):
        """Sets the pending_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances pending patch job.

        :param pending_instance_count: The pending_instance_count of this PatchJobInstanceDetailsSummary.
        :type pending_instance_count: str
        """

        self._pending_instance_count = pending_instance_count

    @property
    def post_patch_step_instance_count(self):
        """Gets the post_patch_step_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are running the post-patch step.

        :return: The post_patch_step_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._post_patch_step_instance_count

    @post_patch_step_instance_count.setter
    def post_patch_step_instance_count(self, post_patch_step_instance_count):
        """Sets the post_patch_step_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are running the post-patch step.

        :param post_patch_step_instance_count: The post_patch_step_instance_count of this PatchJobInstanceDetailsSummary.
        :type post_patch_step_instance_count: str
        """

        self._post_patch_step_instance_count = post_patch_step_instance_count

    @property
    def pre_patch_step_instance_count(self):
        """Gets the pre_patch_step_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are running the pre-patch step.

        :return: The pre_patch_step_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._pre_patch_step_instance_count

    @pre_patch_step_instance_count.setter
    def pre_patch_step_instance_count(self, pre_patch_step_instance_count):
        """Sets the pre_patch_step_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that are running the pre-patch step.

        :param pre_patch_step_instance_count: The pre_patch_step_instance_count of this PatchJobInstanceDetailsSummary.
        :type pre_patch_step_instance_count: str
        """

        self._pre_patch_step_instance_count = pre_patch_step_instance_count

    @property
    def rebooting_instance_count(self):
        """Gets the rebooting_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances rebooting.

        :return: The rebooting_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._rebooting_instance_count

    @rebooting_instance_count.setter
    def rebooting_instance_count(self, rebooting_instance_count):
        """Sets the rebooting_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances rebooting.

        :param rebooting_instance_count: The rebooting_instance_count of this PatchJobInstanceDetailsSummary.
        :type rebooting_instance_count: str
        """

        self._rebooting_instance_count = rebooting_instance_count

    @property
    def started_instance_count(self):
        """Gets the started_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that have started.

        :return: The started_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._started_instance_count

    @started_instance_count.setter
    def started_instance_count(self, started_instance_count):
        """Sets the started_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that have started.

        :param started_instance_count: The started_instance_count of this PatchJobInstanceDetailsSummary.
        :type started_instance_count: str
        """

        self._started_instance_count = started_instance_count

    @property
    def succeeded_instance_count(self):
        """Gets the succeeded_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that have completed successfully.

        :return: The succeeded_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._succeeded_instance_count

    @succeeded_instance_count.setter
    def succeeded_instance_count(self, succeeded_instance_count):
        """Sets the succeeded_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that have completed successfully.

        :param succeeded_instance_count: The succeeded_instance_count of this PatchJobInstanceDetailsSummary.
        :type succeeded_instance_count: str
        """

        self._succeeded_instance_count = succeeded_instance_count

    @property
    def succeeded_reboot_required_instance_count(self):
        """Gets the succeeded_reboot_required_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that require reboot.

        :return: The succeeded_reboot_required_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._succeeded_reboot_required_instance_count

    @succeeded_reboot_required_instance_count.setter
    def succeeded_reboot_required_instance_count(self, succeeded_reboot_required_instance_count):
        """Sets the succeeded_reboot_required_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that require reboot.

        :param succeeded_reboot_required_instance_count: The succeeded_reboot_required_instance_count of this PatchJobInstanceDetailsSummary.
        :type succeeded_reboot_required_instance_count: str
        """

        self._succeeded_reboot_required_instance_count = succeeded_reboot_required_instance_count

    @property
    def timed_out_instance_count(self):
        """Gets the timed_out_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that exceeded the time out while applying the patch.

        :return: The timed_out_instance_count of this PatchJobInstanceDetailsSummary.
        :rtype: str
        """
        return self._timed_out_instance_count

    @timed_out_instance_count.setter
    def timed_out_instance_count(self, timed_out_instance_count):
        """Sets the timed_out_instance_count of this PatchJobInstanceDetailsSummary.

        Number of instances that exceeded the time out while applying the patch.

        :param timed_out_instance_count: The timed_out_instance_count of this PatchJobInstanceDetailsSummary.
        :type timed_out_instance_count: str
        """

        self._timed_out_instance_count = timed_out_instance_count
