# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SoftwareRecipeStepRunScript(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_exit_codes: List[int]=None, interpreter: str=None, script: str=None):
        """SoftwareRecipeStepRunScript - a model defined in OpenAPI

        :param allowed_exit_codes: The allowed_exit_codes of this SoftwareRecipeStepRunScript.
        :param interpreter: The interpreter of this SoftwareRecipeStepRunScript.
        :param script: The script of this SoftwareRecipeStepRunScript.
        """
        self.openapi_types = {
            'allowed_exit_codes': List[int],
            'interpreter': str,
            'script': str
        }

        self.attribute_map = {
            'allowed_exit_codes': 'allowedExitCodes',
            'interpreter': 'interpreter',
            'script': 'script'
        }

        self._allowed_exit_codes = allowed_exit_codes
        self._interpreter = interpreter
        self._script = script

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SoftwareRecipeStepRunScript':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SoftwareRecipeStepRunScript of this SoftwareRecipeStepRunScript.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_exit_codes(self):
        """Gets the allowed_exit_codes of this SoftwareRecipeStepRunScript.

        Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]

        :return: The allowed_exit_codes of this SoftwareRecipeStepRunScript.
        :rtype: List[int]
        """
        return self._allowed_exit_codes

    @allowed_exit_codes.setter
    def allowed_exit_codes(self, allowed_exit_codes):
        """Sets the allowed_exit_codes of this SoftwareRecipeStepRunScript.

        Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]

        :param allowed_exit_codes: The allowed_exit_codes of this SoftwareRecipeStepRunScript.
        :type allowed_exit_codes: List[int]
        """

        self._allowed_exit_codes = allowed_exit_codes

    @property
    def interpreter(self):
        """Gets the interpreter of this SoftwareRecipeStepRunScript.

        The script interpreter to use to run the script. If no interpreter is specified the script is executed directly, which likely only succeed for scripts with [shebang lines](https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).

        :return: The interpreter of this SoftwareRecipeStepRunScript.
        :rtype: str
        """
        return self._interpreter

    @interpreter.setter
    def interpreter(self, interpreter):
        """Sets the interpreter of this SoftwareRecipeStepRunScript.

        The script interpreter to use to run the script. If no interpreter is specified the script is executed directly, which likely only succeed for scripts with [shebang lines](https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).

        :param interpreter: The interpreter of this SoftwareRecipeStepRunScript.
        :type interpreter: str
        """
        allowed_values = ["INTERPRETER_UNSPECIFIED", "SHELL", "POWERSHELL"]  # noqa: E501
        if interpreter not in allowed_values:
            raise ValueError(
                "Invalid value for `interpreter` ({0}), must be one of {1}"
                .format(interpreter, allowed_values)
            )

        self._interpreter = interpreter

    @property
    def script(self):
        """Gets the script of this SoftwareRecipeStepRunScript.

        Required. The shell script to be executed.

        :return: The script of this SoftwareRecipeStepRunScript.
        :rtype: str
        """
        return self._script

    @script.setter
    def script(self, script):
        """Sets the script of this SoftwareRecipeStepRunScript.

        Required. The shell script to be executed.

        :param script: The script of this SoftwareRecipeStepRunScript.
        :type script: str
        """

        self._script = script
