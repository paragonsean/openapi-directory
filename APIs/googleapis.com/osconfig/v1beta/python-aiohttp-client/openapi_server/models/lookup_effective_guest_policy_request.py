# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LookupEffectiveGuestPolicyRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, os_architecture: str=None, os_short_name: str=None, os_version: str=None):
        """LookupEffectiveGuestPolicyRequest - a model defined in OpenAPI

        :param os_architecture: The os_architecture of this LookupEffectiveGuestPolicyRequest.
        :param os_short_name: The os_short_name of this LookupEffectiveGuestPolicyRequest.
        :param os_version: The os_version of this LookupEffectiveGuestPolicyRequest.
        """
        self.openapi_types = {
            'os_architecture': str,
            'os_short_name': str,
            'os_version': str
        }

        self.attribute_map = {
            'os_architecture': 'osArchitecture',
            'os_short_name': 'osShortName',
            'os_version': 'osVersion'
        }

        self._os_architecture = os_architecture
        self._os_short_name = os_short_name
        self._os_version = os_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LookupEffectiveGuestPolicyRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LookupEffectiveGuestPolicyRequest of this LookupEffectiveGuestPolicyRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def os_architecture(self):
        """Gets the os_architecture of this LookupEffectiveGuestPolicyRequest.

        Architecture of OS running on the instance. The OS Config agent only provides this field for targeting if OS Inventory is enabled for that instance.

        :return: The os_architecture of this LookupEffectiveGuestPolicyRequest.
        :rtype: str
        """
        return self._os_architecture

    @os_architecture.setter
    def os_architecture(self, os_architecture):
        """Sets the os_architecture of this LookupEffectiveGuestPolicyRequest.

        Architecture of OS running on the instance. The OS Config agent only provides this field for targeting if OS Inventory is enabled for that instance.

        :param os_architecture: The os_architecture of this LookupEffectiveGuestPolicyRequest.
        :type os_architecture: str
        """

        self._os_architecture = os_architecture

    @property
    def os_short_name(self):
        """Gets the os_short_name of this LookupEffectiveGuestPolicyRequest.

        Short name of the OS running on the instance. The OS Config agent only provides this field for targeting if OS Inventory is enabled for that instance.

        :return: The os_short_name of this LookupEffectiveGuestPolicyRequest.
        :rtype: str
        """
        return self._os_short_name

    @os_short_name.setter
    def os_short_name(self, os_short_name):
        """Sets the os_short_name of this LookupEffectiveGuestPolicyRequest.

        Short name of the OS running on the instance. The OS Config agent only provides this field for targeting if OS Inventory is enabled for that instance.

        :param os_short_name: The os_short_name of this LookupEffectiveGuestPolicyRequest.
        :type os_short_name: str
        """

        self._os_short_name = os_short_name

    @property
    def os_version(self):
        """Gets the os_version of this LookupEffectiveGuestPolicyRequest.

        Version of the OS running on the instance. The OS Config agent only provides this field for targeting if OS Inventory is enabled for that VM instance.

        :return: The os_version of this LookupEffectiveGuestPolicyRequest.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this LookupEffectiveGuestPolicyRequest.

        Version of the OS running on the instance. The OS Config agent only provides this field for targeting if OS Inventory is enabled for that VM instance.

        :param os_version: The os_version of this LookupEffectiveGuestPolicyRequest.
        :type os_version: str
        """

        self._os_version = os_version
