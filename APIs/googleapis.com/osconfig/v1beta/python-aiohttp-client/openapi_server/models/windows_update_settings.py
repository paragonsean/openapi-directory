# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WindowsUpdateSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, classifications: List[str]=None, excludes: List[str]=None, exclusive_patches: List[str]=None):
        """WindowsUpdateSettings - a model defined in OpenAPI

        :param classifications: The classifications of this WindowsUpdateSettings.
        :param excludes: The excludes of this WindowsUpdateSettings.
        :param exclusive_patches: The exclusive_patches of this WindowsUpdateSettings.
        """
        self.openapi_types = {
            'classifications': List[str],
            'excludes': List[str],
            'exclusive_patches': List[str]
        }

        self.attribute_map = {
            'classifications': 'classifications',
            'excludes': 'excludes',
            'exclusive_patches': 'exclusivePatches'
        }

        self._classifications = classifications
        self._excludes = excludes
        self._exclusive_patches = exclusive_patches

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WindowsUpdateSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WindowsUpdateSettings of this WindowsUpdateSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def classifications(self):
        """Gets the classifications of this WindowsUpdateSettings.

        Only apply updates of these windows update classifications. If empty, all updates are applied.

        :return: The classifications of this WindowsUpdateSettings.
        :rtype: List[str]
        """
        return self._classifications

    @classifications.setter
    def classifications(self, classifications):
        """Sets the classifications of this WindowsUpdateSettings.

        Only apply updates of these windows update classifications. If empty, all updates are applied.

        :param classifications: The classifications of this WindowsUpdateSettings.
        :type classifications: List[str]
        """
        allowed_values = ["CLASSIFICATION_UNSPECIFIED", "CRITICAL", "SECURITY", "DEFINITION", "DRIVER", "FEATURE_PACK", "SERVICE_PACK", "TOOL", "UPDATE_ROLLUP", "UPDATE"]  # noqa: E501
        if not set(classifications).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `classifications` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(classifications) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._classifications = classifications

    @property
    def excludes(self):
        """Gets the excludes of this WindowsUpdateSettings.

        List of KBs to exclude from update.

        :return: The excludes of this WindowsUpdateSettings.
        :rtype: List[str]
        """
        return self._excludes

    @excludes.setter
    def excludes(self, excludes):
        """Sets the excludes of this WindowsUpdateSettings.

        List of KBs to exclude from update.

        :param excludes: The excludes of this WindowsUpdateSettings.
        :type excludes: List[str]
        """

        self._excludes = excludes

    @property
    def exclusive_patches(self):
        """Gets the exclusive_patches of this WindowsUpdateSettings.

        An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations.

        :return: The exclusive_patches of this WindowsUpdateSettings.
        :rtype: List[str]
        """
        return self._exclusive_patches

    @exclusive_patches.setter
    def exclusive_patches(self, exclusive_patches):
        """Sets the exclusive_patches of this WindowsUpdateSettings.

        An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations.

        :param exclusive_patches: The exclusive_patches of this WindowsUpdateSettings.
        :type exclusive_patches: List[str]
        """

        self._exclusive_patches = exclusive_patches
