# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SoftwareRecipeStepExecFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_exit_codes: List[int]=None, args: List[str]=None, artifact_id: str=None, local_path: str=None):
        """SoftwareRecipeStepExecFile - a model defined in OpenAPI

        :param allowed_exit_codes: The allowed_exit_codes of this SoftwareRecipeStepExecFile.
        :param args: The args of this SoftwareRecipeStepExecFile.
        :param artifact_id: The artifact_id of this SoftwareRecipeStepExecFile.
        :param local_path: The local_path of this SoftwareRecipeStepExecFile.
        """
        self.openapi_types = {
            'allowed_exit_codes': List[int],
            'args': List[str],
            'artifact_id': str,
            'local_path': str
        }

        self.attribute_map = {
            'allowed_exit_codes': 'allowedExitCodes',
            'args': 'args',
            'artifact_id': 'artifactId',
            'local_path': 'localPath'
        }

        self._allowed_exit_codes = allowed_exit_codes
        self._args = args
        self._artifact_id = artifact_id
        self._local_path = local_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SoftwareRecipeStepExecFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SoftwareRecipeStepExecFile of this SoftwareRecipeStepExecFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_exit_codes(self):
        """Gets the allowed_exit_codes of this SoftwareRecipeStepExecFile.

        Defaults to [0]. A list of possible return values that the program can return to indicate a success.

        :return: The allowed_exit_codes of this SoftwareRecipeStepExecFile.
        :rtype: List[int]
        """
        return self._allowed_exit_codes

    @allowed_exit_codes.setter
    def allowed_exit_codes(self, allowed_exit_codes):
        """Sets the allowed_exit_codes of this SoftwareRecipeStepExecFile.

        Defaults to [0]. A list of possible return values that the program can return to indicate a success.

        :param allowed_exit_codes: The allowed_exit_codes of this SoftwareRecipeStepExecFile.
        :type allowed_exit_codes: List[int]
        """

        self._allowed_exit_codes = allowed_exit_codes

    @property
    def args(self):
        """Gets the args of this SoftwareRecipeStepExecFile.

        Arguments to be passed to the provided executable.

        :return: The args of this SoftwareRecipeStepExecFile.
        :rtype: List[str]
        """
        return self._args

    @args.setter
    def args(self, args):
        """Sets the args of this SoftwareRecipeStepExecFile.

        Arguments to be passed to the provided executable.

        :param args: The args of this SoftwareRecipeStepExecFile.
        :type args: List[str]
        """

        self._args = args

    @property
    def artifact_id(self):
        """Gets the artifact_id of this SoftwareRecipeStepExecFile.

        The id of the relevant artifact in the recipe.

        :return: The artifact_id of this SoftwareRecipeStepExecFile.
        :rtype: str
        """
        return self._artifact_id

    @artifact_id.setter
    def artifact_id(self, artifact_id):
        """Sets the artifact_id of this SoftwareRecipeStepExecFile.

        The id of the relevant artifact in the recipe.

        :param artifact_id: The artifact_id of this SoftwareRecipeStepExecFile.
        :type artifact_id: str
        """

        self._artifact_id = artifact_id

    @property
    def local_path(self):
        """Gets the local_path of this SoftwareRecipeStepExecFile.

        The absolute path of the file on the local filesystem.

        :return: The local_path of this SoftwareRecipeStepExecFile.
        :rtype: str
        """
        return self._local_path

    @local_path.setter
    def local_path(self, local_path):
        """Sets the local_path of this SoftwareRecipeStepExecFile.

        The absolute path of the file on the local filesystem.

        :param local_path: The local_path of this SoftwareRecipeStepExecFile.
        :type local_path: str
        """

        self._local_path = local_path
