# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.software_recipe import SoftwareRecipe
from openapi_server import util


class EffectiveGuestPolicySourcedSoftwareRecipe(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, software_recipe: SoftwareRecipe=None, source: str=None):
        """EffectiveGuestPolicySourcedSoftwareRecipe - a model defined in OpenAPI

        :param software_recipe: The software_recipe of this EffectiveGuestPolicySourcedSoftwareRecipe.
        :param source: The source of this EffectiveGuestPolicySourcedSoftwareRecipe.
        """
        self.openapi_types = {
            'software_recipe': SoftwareRecipe,
            'source': str
        }

        self.attribute_map = {
            'software_recipe': 'softwareRecipe',
            'source': 'source'
        }

        self._software_recipe = software_recipe
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EffectiveGuestPolicySourcedSoftwareRecipe':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EffectiveGuestPolicySourcedSoftwareRecipe of this EffectiveGuestPolicySourcedSoftwareRecipe.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def software_recipe(self):
        """Gets the software_recipe of this EffectiveGuestPolicySourcedSoftwareRecipe.


        :return: The software_recipe of this EffectiveGuestPolicySourcedSoftwareRecipe.
        :rtype: SoftwareRecipe
        """
        return self._software_recipe

    @software_recipe.setter
    def software_recipe(self, software_recipe):
        """Sets the software_recipe of this EffectiveGuestPolicySourcedSoftwareRecipe.


        :param software_recipe: The software_recipe of this EffectiveGuestPolicySourcedSoftwareRecipe.
        :type software_recipe: SoftwareRecipe
        """

        self._software_recipe = software_recipe

    @property
    def source(self):
        """Gets the source of this EffectiveGuestPolicySourcedSoftwareRecipe.

        Name of the guest policy providing this config.

        :return: The source of this EffectiveGuestPolicySourcedSoftwareRecipe.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this EffectiveGuestPolicySourcedSoftwareRecipe.

        Name of the guest policy providing this config.

        :param source: The source of this EffectiveGuestPolicySourcedSoftwareRecipe.
        :type source: str
        """

        self._source = source
