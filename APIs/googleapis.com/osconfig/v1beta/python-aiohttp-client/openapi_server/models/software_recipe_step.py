# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.software_recipe_step_copy_file import SoftwareRecipeStepCopyFile
from openapi_server.models.software_recipe_step_exec_file import SoftwareRecipeStepExecFile
from openapi_server.models.software_recipe_step_extract_archive import SoftwareRecipeStepExtractArchive
from openapi_server.models.software_recipe_step_install_dpkg import SoftwareRecipeStepInstallDpkg
from openapi_server.models.software_recipe_step_install_msi import SoftwareRecipeStepInstallMsi
from openapi_server.models.software_recipe_step_install_rpm import SoftwareRecipeStepInstallRpm
from openapi_server.models.software_recipe_step_run_script import SoftwareRecipeStepRunScript
from openapi_server import util


class SoftwareRecipeStep(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archive_extraction: SoftwareRecipeStepExtractArchive=None, dpkg_installation: SoftwareRecipeStepInstallDpkg=None, file_copy: SoftwareRecipeStepCopyFile=None, file_exec: SoftwareRecipeStepExecFile=None, msi_installation: SoftwareRecipeStepInstallMsi=None, rpm_installation: SoftwareRecipeStepInstallRpm=None, script_run: SoftwareRecipeStepRunScript=None):
        """SoftwareRecipeStep - a model defined in OpenAPI

        :param archive_extraction: The archive_extraction of this SoftwareRecipeStep.
        :param dpkg_installation: The dpkg_installation of this SoftwareRecipeStep.
        :param file_copy: The file_copy of this SoftwareRecipeStep.
        :param file_exec: The file_exec of this SoftwareRecipeStep.
        :param msi_installation: The msi_installation of this SoftwareRecipeStep.
        :param rpm_installation: The rpm_installation of this SoftwareRecipeStep.
        :param script_run: The script_run of this SoftwareRecipeStep.
        """
        self.openapi_types = {
            'archive_extraction': SoftwareRecipeStepExtractArchive,
            'dpkg_installation': SoftwareRecipeStepInstallDpkg,
            'file_copy': SoftwareRecipeStepCopyFile,
            'file_exec': SoftwareRecipeStepExecFile,
            'msi_installation': SoftwareRecipeStepInstallMsi,
            'rpm_installation': SoftwareRecipeStepInstallRpm,
            'script_run': SoftwareRecipeStepRunScript
        }

        self.attribute_map = {
            'archive_extraction': 'archiveExtraction',
            'dpkg_installation': 'dpkgInstallation',
            'file_copy': 'fileCopy',
            'file_exec': 'fileExec',
            'msi_installation': 'msiInstallation',
            'rpm_installation': 'rpmInstallation',
            'script_run': 'scriptRun'
        }

        self._archive_extraction = archive_extraction
        self._dpkg_installation = dpkg_installation
        self._file_copy = file_copy
        self._file_exec = file_exec
        self._msi_installation = msi_installation
        self._rpm_installation = rpm_installation
        self._script_run = script_run

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SoftwareRecipeStep':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SoftwareRecipeStep of this SoftwareRecipeStep.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archive_extraction(self):
        """Gets the archive_extraction of this SoftwareRecipeStep.


        :return: The archive_extraction of this SoftwareRecipeStep.
        :rtype: SoftwareRecipeStepExtractArchive
        """
        return self._archive_extraction

    @archive_extraction.setter
    def archive_extraction(self, archive_extraction):
        """Sets the archive_extraction of this SoftwareRecipeStep.


        :param archive_extraction: The archive_extraction of this SoftwareRecipeStep.
        :type archive_extraction: SoftwareRecipeStepExtractArchive
        """

        self._archive_extraction = archive_extraction

    @property
    def dpkg_installation(self):
        """Gets the dpkg_installation of this SoftwareRecipeStep.


        :return: The dpkg_installation of this SoftwareRecipeStep.
        :rtype: SoftwareRecipeStepInstallDpkg
        """
        return self._dpkg_installation

    @dpkg_installation.setter
    def dpkg_installation(self, dpkg_installation):
        """Sets the dpkg_installation of this SoftwareRecipeStep.


        :param dpkg_installation: The dpkg_installation of this SoftwareRecipeStep.
        :type dpkg_installation: SoftwareRecipeStepInstallDpkg
        """

        self._dpkg_installation = dpkg_installation

    @property
    def file_copy(self):
        """Gets the file_copy of this SoftwareRecipeStep.


        :return: The file_copy of this SoftwareRecipeStep.
        :rtype: SoftwareRecipeStepCopyFile
        """
        return self._file_copy

    @file_copy.setter
    def file_copy(self, file_copy):
        """Sets the file_copy of this SoftwareRecipeStep.


        :param file_copy: The file_copy of this SoftwareRecipeStep.
        :type file_copy: SoftwareRecipeStepCopyFile
        """

        self._file_copy = file_copy

    @property
    def file_exec(self):
        """Gets the file_exec of this SoftwareRecipeStep.


        :return: The file_exec of this SoftwareRecipeStep.
        :rtype: SoftwareRecipeStepExecFile
        """
        return self._file_exec

    @file_exec.setter
    def file_exec(self, file_exec):
        """Sets the file_exec of this SoftwareRecipeStep.


        :param file_exec: The file_exec of this SoftwareRecipeStep.
        :type file_exec: SoftwareRecipeStepExecFile
        """

        self._file_exec = file_exec

    @property
    def msi_installation(self):
        """Gets the msi_installation of this SoftwareRecipeStep.


        :return: The msi_installation of this SoftwareRecipeStep.
        :rtype: SoftwareRecipeStepInstallMsi
        """
        return self._msi_installation

    @msi_installation.setter
    def msi_installation(self, msi_installation):
        """Sets the msi_installation of this SoftwareRecipeStep.


        :param msi_installation: The msi_installation of this SoftwareRecipeStep.
        :type msi_installation: SoftwareRecipeStepInstallMsi
        """

        self._msi_installation = msi_installation

    @property
    def rpm_installation(self):
        """Gets the rpm_installation of this SoftwareRecipeStep.


        :return: The rpm_installation of this SoftwareRecipeStep.
        :rtype: SoftwareRecipeStepInstallRpm
        """
        return self._rpm_installation

    @rpm_installation.setter
    def rpm_installation(self, rpm_installation):
        """Sets the rpm_installation of this SoftwareRecipeStep.


        :param rpm_installation: The rpm_installation of this SoftwareRecipeStep.
        :type rpm_installation: SoftwareRecipeStepInstallRpm
        """

        self._rpm_installation = rpm_installation

    @property
    def script_run(self):
        """Gets the script_run of this SoftwareRecipeStep.


        :return: The script_run of this SoftwareRecipeStep.
        :rtype: SoftwareRecipeStepRunScript
        """
        return self._script_run

    @script_run.setter
    def script_run(self, script_run):
        """Sets the script_run of this SoftwareRecipeStep.


        :param script_run: The script_run of this SoftwareRecipeStep.
        :type script_run: SoftwareRecipeStepRunScript
        """

        self._script_run = script_run
