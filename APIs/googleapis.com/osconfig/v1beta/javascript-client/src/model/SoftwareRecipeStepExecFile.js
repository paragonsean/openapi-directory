/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SoftwareRecipeStepExecFile model module.
 * @module model/SoftwareRecipeStepExecFile
 * @version v1beta
 */
class SoftwareRecipeStepExecFile {
    /**
     * Constructs a new <code>SoftwareRecipeStepExecFile</code>.
     * Executes an artifact or local file.
     * @alias module:model/SoftwareRecipeStepExecFile
     */
    constructor() { 
        
        SoftwareRecipeStepExecFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SoftwareRecipeStepExecFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SoftwareRecipeStepExecFile} obj Optional instance to populate.
     * @return {module:model/SoftwareRecipeStepExecFile} The populated <code>SoftwareRecipeStepExecFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SoftwareRecipeStepExecFile();

            if (data.hasOwnProperty('allowedExitCodes')) {
                obj['allowedExitCodes'] = ApiClient.convertToType(data['allowedExitCodes'], ['Number']);
            }
            if (data.hasOwnProperty('args')) {
                obj['args'] = ApiClient.convertToType(data['args'], ['String']);
            }
            if (data.hasOwnProperty('artifactId')) {
                obj['artifactId'] = ApiClient.convertToType(data['artifactId'], 'String');
            }
            if (data.hasOwnProperty('localPath')) {
                obj['localPath'] = ApiClient.convertToType(data['localPath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SoftwareRecipeStepExecFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SoftwareRecipeStepExecFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedExitCodes'])) {
            throw new Error("Expected the field `allowedExitCodes` to be an array in the JSON data but got " + data['allowedExitCodes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['args'])) {
            throw new Error("Expected the field `args` to be an array in the JSON data but got " + data['args']);
        }
        // ensure the json data is a string
        if (data['artifactId'] && !(typeof data['artifactId'] === 'string' || data['artifactId'] instanceof String)) {
            throw new Error("Expected the field `artifactId` to be a primitive type in the JSON string but got " + data['artifactId']);
        }
        // ensure the json data is a string
        if (data['localPath'] && !(typeof data['localPath'] === 'string' || data['localPath'] instanceof String)) {
            throw new Error("Expected the field `localPath` to be a primitive type in the JSON string but got " + data['localPath']);
        }

        return true;
    }


}



/**
 * Defaults to [0]. A list of possible return values that the program can return to indicate a success.
 * @member {Array.<Number>} allowedExitCodes
 */
SoftwareRecipeStepExecFile.prototype['allowedExitCodes'] = undefined;

/**
 * Arguments to be passed to the provided executable.
 * @member {Array.<String>} args
 */
SoftwareRecipeStepExecFile.prototype['args'] = undefined;

/**
 * The id of the relevant artifact in the recipe.
 * @member {String} artifactId
 */
SoftwareRecipeStepExecFile.prototype['artifactId'] = undefined;

/**
 * The absolute path of the file on the local filesystem.
 * @member {String} localPath
 */
SoftwareRecipeStepExecFile.prototype['localPath'] = undefined;






export default SoftwareRecipeStepExecFile;

