/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SoftwareRecipeStepRunScript model module.
 * @module model/SoftwareRecipeStepRunScript
 * @version v1beta
 */
class SoftwareRecipeStepRunScript {
    /**
     * Constructs a new <code>SoftwareRecipeStepRunScript</code>.
     * Runs a script through an interpreter.
     * @alias module:model/SoftwareRecipeStepRunScript
     */
    constructor() { 
        
        SoftwareRecipeStepRunScript.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SoftwareRecipeStepRunScript</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SoftwareRecipeStepRunScript} obj Optional instance to populate.
     * @return {module:model/SoftwareRecipeStepRunScript} The populated <code>SoftwareRecipeStepRunScript</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SoftwareRecipeStepRunScript();

            if (data.hasOwnProperty('allowedExitCodes')) {
                obj['allowedExitCodes'] = ApiClient.convertToType(data['allowedExitCodes'], ['Number']);
            }
            if (data.hasOwnProperty('interpreter')) {
                obj['interpreter'] = ApiClient.convertToType(data['interpreter'], 'String');
            }
            if (data.hasOwnProperty('script')) {
                obj['script'] = ApiClient.convertToType(data['script'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SoftwareRecipeStepRunScript</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SoftwareRecipeStepRunScript</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedExitCodes'])) {
            throw new Error("Expected the field `allowedExitCodes` to be an array in the JSON data but got " + data['allowedExitCodes']);
        }
        // ensure the json data is a string
        if (data['interpreter'] && !(typeof data['interpreter'] === 'string' || data['interpreter'] instanceof String)) {
            throw new Error("Expected the field `interpreter` to be a primitive type in the JSON string but got " + data['interpreter']);
        }
        // ensure the json data is a string
        if (data['script'] && !(typeof data['script'] === 'string' || data['script'] instanceof String)) {
            throw new Error("Expected the field `script` to be a primitive type in the JSON string but got " + data['script']);
        }

        return true;
    }


}



/**
 * Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]
 * @member {Array.<Number>} allowedExitCodes
 */
SoftwareRecipeStepRunScript.prototype['allowedExitCodes'] = undefined;

/**
 * The script interpreter to use to run the script. If no interpreter is specified the script is executed directly, which likely only succeed for scripts with [shebang lines](https://en.wikipedia.org/wiki/Shebang_\\(Unix\\)).
 * @member {module:model/SoftwareRecipeStepRunScript.InterpreterEnum} interpreter
 */
SoftwareRecipeStepRunScript.prototype['interpreter'] = undefined;

/**
 * Required. The shell script to be executed.
 * @member {String} script
 */
SoftwareRecipeStepRunScript.prototype['script'] = undefined;





/**
 * Allowed values for the <code>interpreter</code> property.
 * @enum {String}
 * @readonly
 */
SoftwareRecipeStepRunScript['InterpreterEnum'] = {

    /**
     * value: "INTERPRETER_UNSPECIFIED"
     * @const
     */
    "INTERPRETER_UNSPECIFIED": "INTERPRETER_UNSPECIFIED",

    /**
     * value: "SHELL"
     * @const
     */
    "SHELL": "SHELL",

    /**
     * value: "POWERSHELL"
     * @const
     */
    "POWERSHELL": "POWERSHELL"
};



export default SoftwareRecipeStepRunScript;

