/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WeekDayOfMonth from './WeekDayOfMonth';

/**
 * The MonthlySchedule model module.
 * @module model/MonthlySchedule
 * @version v1beta
 */
class MonthlySchedule {
    /**
     * Constructs a new <code>MonthlySchedule</code>.
     * Represents a monthly schedule. An example of a valid monthly schedule is \&quot;on the third Tuesday of the month\&quot; or \&quot;on the 15th of the month\&quot;.
     * @alias module:model/MonthlySchedule
     */
    constructor() { 
        
        MonthlySchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MonthlySchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MonthlySchedule} obj Optional instance to populate.
     * @return {module:model/MonthlySchedule} The populated <code>MonthlySchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonthlySchedule();

            if (data.hasOwnProperty('monthDay')) {
                obj['monthDay'] = ApiClient.convertToType(data['monthDay'], 'Number');
            }
            if (data.hasOwnProperty('weekDayOfMonth')) {
                obj['weekDayOfMonth'] = WeekDayOfMonth.constructFromObject(data['weekDayOfMonth']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MonthlySchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MonthlySchedule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `weekDayOfMonth`
        if (data['weekDayOfMonth']) { // data not null
          WeekDayOfMonth.validateJSON(data['weekDayOfMonth']);
        }

        return true;
    }


}



/**
 * Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run \"every month on the 31st\" will not run in February, April, June, etc.
 * @member {Number} monthDay
 */
MonthlySchedule.prototype['monthDay'] = undefined;

/**
 * @member {module:model/WeekDayOfMonth} weekDayOfMonth
 */
MonthlySchedule.prototype['weekDayOfMonth'] = undefined;






export default MonthlySchedule;

