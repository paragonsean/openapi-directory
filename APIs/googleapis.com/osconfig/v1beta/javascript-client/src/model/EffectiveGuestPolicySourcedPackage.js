/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Package from './Package';

/**
 * The EffectiveGuestPolicySourcedPackage model module.
 * @module model/EffectiveGuestPolicySourcedPackage
 * @version v1beta
 */
class EffectiveGuestPolicySourcedPackage {
    /**
     * Constructs a new <code>EffectiveGuestPolicySourcedPackage</code>.
     * A guest policy package including its source.
     * @alias module:model/EffectiveGuestPolicySourcedPackage
     */
    constructor() { 
        
        EffectiveGuestPolicySourcedPackage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EffectiveGuestPolicySourcedPackage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EffectiveGuestPolicySourcedPackage} obj Optional instance to populate.
     * @return {module:model/EffectiveGuestPolicySourcedPackage} The populated <code>EffectiveGuestPolicySourcedPackage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EffectiveGuestPolicySourcedPackage();

            if (data.hasOwnProperty('package')) {
                obj['package'] = Package.constructFromObject(data['package']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EffectiveGuestPolicySourcedPackage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EffectiveGuestPolicySourcedPackage</code>.
     */
    static validateJSON(data) {
        // validate the optional field `package`
        if (data['package']) { // data not null
          Package.validateJSON(data['package']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }

        return true;
    }


}



/**
 * @member {module:model/Package} package
 */
EffectiveGuestPolicySourcedPackage.prototype['package'] = undefined;

/**
 * Name of the guest policy providing this config.
 * @member {String} source
 */
EffectiveGuestPolicySourcedPackage.prototype['source'] = undefined;






export default EffectiveGuestPolicySourcedPackage;

