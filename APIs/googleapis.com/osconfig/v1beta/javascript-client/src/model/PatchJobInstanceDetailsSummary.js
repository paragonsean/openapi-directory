/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatchJobInstanceDetailsSummary model module.
 * @module model/PatchJobInstanceDetailsSummary
 * @version v1beta
 */
class PatchJobInstanceDetailsSummary {
    /**
     * Constructs a new <code>PatchJobInstanceDetailsSummary</code>.
     * A summary of the current patch state across all instances that this patch job affects. Contains counts of instances in different states. These states map to &#x60;InstancePatchState&#x60;. List patch job instance details to see the specific states of each instance.
     * @alias module:model/PatchJobInstanceDetailsSummary
     */
    constructor() { 
        
        PatchJobInstanceDetailsSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchJobInstanceDetailsSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchJobInstanceDetailsSummary} obj Optional instance to populate.
     * @return {module:model/PatchJobInstanceDetailsSummary} The populated <code>PatchJobInstanceDetailsSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchJobInstanceDetailsSummary();

            if (data.hasOwnProperty('ackedInstanceCount')) {
                obj['ackedInstanceCount'] = ApiClient.convertToType(data['ackedInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('applyingPatchesInstanceCount')) {
                obj['applyingPatchesInstanceCount'] = ApiClient.convertToType(data['applyingPatchesInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('downloadingPatchesInstanceCount')) {
                obj['downloadingPatchesInstanceCount'] = ApiClient.convertToType(data['downloadingPatchesInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('failedInstanceCount')) {
                obj['failedInstanceCount'] = ApiClient.convertToType(data['failedInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('inactiveInstanceCount')) {
                obj['inactiveInstanceCount'] = ApiClient.convertToType(data['inactiveInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('noAgentDetectedInstanceCount')) {
                obj['noAgentDetectedInstanceCount'] = ApiClient.convertToType(data['noAgentDetectedInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('notifiedInstanceCount')) {
                obj['notifiedInstanceCount'] = ApiClient.convertToType(data['notifiedInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('pendingInstanceCount')) {
                obj['pendingInstanceCount'] = ApiClient.convertToType(data['pendingInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('postPatchStepInstanceCount')) {
                obj['postPatchStepInstanceCount'] = ApiClient.convertToType(data['postPatchStepInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('prePatchStepInstanceCount')) {
                obj['prePatchStepInstanceCount'] = ApiClient.convertToType(data['prePatchStepInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('rebootingInstanceCount')) {
                obj['rebootingInstanceCount'] = ApiClient.convertToType(data['rebootingInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('startedInstanceCount')) {
                obj['startedInstanceCount'] = ApiClient.convertToType(data['startedInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('succeededInstanceCount')) {
                obj['succeededInstanceCount'] = ApiClient.convertToType(data['succeededInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('succeededRebootRequiredInstanceCount')) {
                obj['succeededRebootRequiredInstanceCount'] = ApiClient.convertToType(data['succeededRebootRequiredInstanceCount'], 'String');
            }
            if (data.hasOwnProperty('timedOutInstanceCount')) {
                obj['timedOutInstanceCount'] = ApiClient.convertToType(data['timedOutInstanceCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchJobInstanceDetailsSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchJobInstanceDetailsSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ackedInstanceCount'] && !(typeof data['ackedInstanceCount'] === 'string' || data['ackedInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `ackedInstanceCount` to be a primitive type in the JSON string but got " + data['ackedInstanceCount']);
        }
        // ensure the json data is a string
        if (data['applyingPatchesInstanceCount'] && !(typeof data['applyingPatchesInstanceCount'] === 'string' || data['applyingPatchesInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `applyingPatchesInstanceCount` to be a primitive type in the JSON string but got " + data['applyingPatchesInstanceCount']);
        }
        // ensure the json data is a string
        if (data['downloadingPatchesInstanceCount'] && !(typeof data['downloadingPatchesInstanceCount'] === 'string' || data['downloadingPatchesInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `downloadingPatchesInstanceCount` to be a primitive type in the JSON string but got " + data['downloadingPatchesInstanceCount']);
        }
        // ensure the json data is a string
        if (data['failedInstanceCount'] && !(typeof data['failedInstanceCount'] === 'string' || data['failedInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `failedInstanceCount` to be a primitive type in the JSON string but got " + data['failedInstanceCount']);
        }
        // ensure the json data is a string
        if (data['inactiveInstanceCount'] && !(typeof data['inactiveInstanceCount'] === 'string' || data['inactiveInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `inactiveInstanceCount` to be a primitive type in the JSON string but got " + data['inactiveInstanceCount']);
        }
        // ensure the json data is a string
        if (data['noAgentDetectedInstanceCount'] && !(typeof data['noAgentDetectedInstanceCount'] === 'string' || data['noAgentDetectedInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `noAgentDetectedInstanceCount` to be a primitive type in the JSON string but got " + data['noAgentDetectedInstanceCount']);
        }
        // ensure the json data is a string
        if (data['notifiedInstanceCount'] && !(typeof data['notifiedInstanceCount'] === 'string' || data['notifiedInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `notifiedInstanceCount` to be a primitive type in the JSON string but got " + data['notifiedInstanceCount']);
        }
        // ensure the json data is a string
        if (data['pendingInstanceCount'] && !(typeof data['pendingInstanceCount'] === 'string' || data['pendingInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `pendingInstanceCount` to be a primitive type in the JSON string but got " + data['pendingInstanceCount']);
        }
        // ensure the json data is a string
        if (data['postPatchStepInstanceCount'] && !(typeof data['postPatchStepInstanceCount'] === 'string' || data['postPatchStepInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `postPatchStepInstanceCount` to be a primitive type in the JSON string but got " + data['postPatchStepInstanceCount']);
        }
        // ensure the json data is a string
        if (data['prePatchStepInstanceCount'] && !(typeof data['prePatchStepInstanceCount'] === 'string' || data['prePatchStepInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `prePatchStepInstanceCount` to be a primitive type in the JSON string but got " + data['prePatchStepInstanceCount']);
        }
        // ensure the json data is a string
        if (data['rebootingInstanceCount'] && !(typeof data['rebootingInstanceCount'] === 'string' || data['rebootingInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `rebootingInstanceCount` to be a primitive type in the JSON string but got " + data['rebootingInstanceCount']);
        }
        // ensure the json data is a string
        if (data['startedInstanceCount'] && !(typeof data['startedInstanceCount'] === 'string' || data['startedInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `startedInstanceCount` to be a primitive type in the JSON string but got " + data['startedInstanceCount']);
        }
        // ensure the json data is a string
        if (data['succeededInstanceCount'] && !(typeof data['succeededInstanceCount'] === 'string' || data['succeededInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `succeededInstanceCount` to be a primitive type in the JSON string but got " + data['succeededInstanceCount']);
        }
        // ensure the json data is a string
        if (data['succeededRebootRequiredInstanceCount'] && !(typeof data['succeededRebootRequiredInstanceCount'] === 'string' || data['succeededRebootRequiredInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `succeededRebootRequiredInstanceCount` to be a primitive type in the JSON string but got " + data['succeededRebootRequiredInstanceCount']);
        }
        // ensure the json data is a string
        if (data['timedOutInstanceCount'] && !(typeof data['timedOutInstanceCount'] === 'string' || data['timedOutInstanceCount'] instanceof String)) {
            throw new Error("Expected the field `timedOutInstanceCount` to be a primitive type in the JSON string but got " + data['timedOutInstanceCount']);
        }

        return true;
    }


}



/**
 * Number of instances that have acked and will start shortly.
 * @member {String} ackedInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['ackedInstanceCount'] = undefined;

/**
 * Number of instances that are applying patches.
 * @member {String} applyingPatchesInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['applyingPatchesInstanceCount'] = undefined;

/**
 * Number of instances that are downloading patches.
 * @member {String} downloadingPatchesInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['downloadingPatchesInstanceCount'] = undefined;

/**
 * Number of instances that failed.
 * @member {String} failedInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['failedInstanceCount'] = undefined;

/**
 * Number of instances that are inactive.
 * @member {String} inactiveInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['inactiveInstanceCount'] = undefined;

/**
 * Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.
 * @member {String} noAgentDetectedInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['noAgentDetectedInstanceCount'] = undefined;

/**
 * Number of instances notified about patch job.
 * @member {String} notifiedInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['notifiedInstanceCount'] = undefined;

/**
 * Number of instances pending patch job.
 * @member {String} pendingInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['pendingInstanceCount'] = undefined;

/**
 * Number of instances that are running the post-patch step.
 * @member {String} postPatchStepInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['postPatchStepInstanceCount'] = undefined;

/**
 * Number of instances that are running the pre-patch step.
 * @member {String} prePatchStepInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['prePatchStepInstanceCount'] = undefined;

/**
 * Number of instances rebooting.
 * @member {String} rebootingInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['rebootingInstanceCount'] = undefined;

/**
 * Number of instances that have started.
 * @member {String} startedInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['startedInstanceCount'] = undefined;

/**
 * Number of instances that have completed successfully.
 * @member {String} succeededInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['succeededInstanceCount'] = undefined;

/**
 * Number of instances that require reboot.
 * @member {String} succeededRebootRequiredInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['succeededRebootRequiredInstanceCount'] = undefined;

/**
 * Number of instances that exceeded the time out while applying the patch.
 * @member {String} timedOutInstanceCount
 */
PatchJobInstanceDetailsSummary.prototype['timedOutInstanceCount'] = undefined;






export default PatchJobInstanceDetailsSummary;

