/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SoftwareRecipeArtifactRemote model module.
 * @module model/SoftwareRecipeArtifactRemote
 * @version v1beta
 */
class SoftwareRecipeArtifactRemote {
    /**
     * Constructs a new <code>SoftwareRecipeArtifactRemote</code>.
     * Specifies an artifact available via some URI.
     * @alias module:model/SoftwareRecipeArtifactRemote
     */
    constructor() { 
        
        SoftwareRecipeArtifactRemote.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SoftwareRecipeArtifactRemote</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SoftwareRecipeArtifactRemote} obj Optional instance to populate.
     * @return {module:model/SoftwareRecipeArtifactRemote} The populated <code>SoftwareRecipeArtifactRemote</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SoftwareRecipeArtifactRemote();

            if (data.hasOwnProperty('checksum')) {
                obj['checksum'] = ApiClient.convertToType(data['checksum'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SoftwareRecipeArtifactRemote</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SoftwareRecipeArtifactRemote</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['checksum'] && !(typeof data['checksum'] === 'string' || data['checksum'] instanceof String)) {
            throw new Error("Expected the field `checksum` to be a primitive type in the JSON string but got " + data['checksum']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Must be provided if `allow_insecure` is `false`. SHA256 checksum in hex format, to compare to the checksum of the artifact. If the checksum is not empty and it doesn't match the artifact then the recipe installation fails before running any of the steps.
 * @member {String} checksum
 */
SoftwareRecipeArtifactRemote.prototype['checksum'] = undefined;

/**
 * URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.
 * @member {String} uri
 */
SoftwareRecipeArtifactRemote.prototype['uri'] = undefined;






export default SoftwareRecipeArtifactRemote;

