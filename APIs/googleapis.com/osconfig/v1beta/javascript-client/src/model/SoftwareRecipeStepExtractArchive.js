/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SoftwareRecipeStepExtractArchive model module.
 * @module model/SoftwareRecipeStepExtractArchive
 * @version v1beta
 */
class SoftwareRecipeStepExtractArchive {
    /**
     * Constructs a new <code>SoftwareRecipeStepExtractArchive</code>.
     * Extracts an archive of the type specified in the specified directory.
     * @alias module:model/SoftwareRecipeStepExtractArchive
     */
    constructor() { 
        
        SoftwareRecipeStepExtractArchive.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SoftwareRecipeStepExtractArchive</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SoftwareRecipeStepExtractArchive} obj Optional instance to populate.
     * @return {module:model/SoftwareRecipeStepExtractArchive} The populated <code>SoftwareRecipeStepExtractArchive</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SoftwareRecipeStepExtractArchive();

            if (data.hasOwnProperty('artifactId')) {
                obj['artifactId'] = ApiClient.convertToType(data['artifactId'], 'String');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiClient.convertToType(data['destination'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SoftwareRecipeStepExtractArchive</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SoftwareRecipeStepExtractArchive</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['artifactId'] && !(typeof data['artifactId'] === 'string' || data['artifactId'] instanceof String)) {
            throw new Error("Expected the field `artifactId` to be a primitive type in the JSON string but got " + data['artifactId']);
        }
        // ensure the json data is a string
        if (data['destination'] && !(typeof data['destination'] === 'string' || data['destination'] instanceof String)) {
            throw new Error("Expected the field `destination` to be a primitive type in the JSON string but got " + data['destination']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Required. The id of the relevant artifact in the recipe.
 * @member {String} artifactId
 */
SoftwareRecipeStepExtractArchive.prototype['artifactId'] = undefined;

/**
 * Directory to extract archive to. Defaults to `/` on Linux or `C:\\` on Windows.
 * @member {String} destination
 */
SoftwareRecipeStepExtractArchive.prototype['destination'] = undefined;

/**
 * Required. The type of the archive to extract.
 * @member {module:model/SoftwareRecipeStepExtractArchive.TypeEnum} type
 */
SoftwareRecipeStepExtractArchive.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
SoftwareRecipeStepExtractArchive['TypeEnum'] = {

    /**
     * value: "ARCHIVE_TYPE_UNSPECIFIED"
     * @const
     */
    "ARCHIVE_TYPE_UNSPECIFIED": "ARCHIVE_TYPE_UNSPECIFIED",

    /**
     * value: "TAR"
     * @const
     */
    "TAR": "TAR",

    /**
     * value: "TAR_GZIP"
     * @const
     */
    "TAR_GZIP": "TAR_GZIP",

    /**
     * value: "TAR_BZIP"
     * @const
     */
    "TAR_BZIP": "TAR_BZIP",

    /**
     * value: "TAR_LZMA"
     * @const
     */
    "TAR_LZMA": "TAR_LZMA",

    /**
     * value: "TAR_XZ"
     * @const
     */
    "TAR_XZ": "TAR_XZ",

    /**
     * value: "ZIP"
     * @const
     */
    "ZIP": "ZIP"
};



export default SoftwareRecipeStepExtractArchive;

