/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EffectiveGuestPolicySourcedPackage from './EffectiveGuestPolicySourcedPackage';
import EffectiveGuestPolicySourcedPackageRepository from './EffectiveGuestPolicySourcedPackageRepository';
import EffectiveGuestPolicySourcedSoftwareRecipe from './EffectiveGuestPolicySourcedSoftwareRecipe';

/**
 * The EffectiveGuestPolicy model module.
 * @module model/EffectiveGuestPolicy
 * @version v1beta
 */
class EffectiveGuestPolicy {
    /**
     * Constructs a new <code>EffectiveGuestPolicy</code>.
     * The effective guest policy that applies to a VM instance.
     * @alias module:model/EffectiveGuestPolicy
     */
    constructor() { 
        
        EffectiveGuestPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EffectiveGuestPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EffectiveGuestPolicy} obj Optional instance to populate.
     * @return {module:model/EffectiveGuestPolicy} The populated <code>EffectiveGuestPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EffectiveGuestPolicy();

            if (data.hasOwnProperty('packageRepositories')) {
                obj['packageRepositories'] = ApiClient.convertToType(data['packageRepositories'], [EffectiveGuestPolicySourcedPackageRepository]);
            }
            if (data.hasOwnProperty('packages')) {
                obj['packages'] = ApiClient.convertToType(data['packages'], [EffectiveGuestPolicySourcedPackage]);
            }
            if (data.hasOwnProperty('softwareRecipes')) {
                obj['softwareRecipes'] = ApiClient.convertToType(data['softwareRecipes'], [EffectiveGuestPolicySourcedSoftwareRecipe]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EffectiveGuestPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EffectiveGuestPolicy</code>.
     */
    static validateJSON(data) {
        if (data['packageRepositories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['packageRepositories'])) {
                throw new Error("Expected the field `packageRepositories` to be an array in the JSON data but got " + data['packageRepositories']);
            }
            // validate the optional field `packageRepositories` (array)
            for (const item of data['packageRepositories']) {
                EffectiveGuestPolicySourcedPackageRepository.validateJSON(item);
            };
        }
        if (data['packages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['packages'])) {
                throw new Error("Expected the field `packages` to be an array in the JSON data but got " + data['packages']);
            }
            // validate the optional field `packages` (array)
            for (const item of data['packages']) {
                EffectiveGuestPolicySourcedPackage.validateJSON(item);
            };
        }
        if (data['softwareRecipes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['softwareRecipes'])) {
                throw new Error("Expected the field `softwareRecipes` to be an array in the JSON data but got " + data['softwareRecipes']);
            }
            // validate the optional field `softwareRecipes` (array)
            for (const item of data['softwareRecipes']) {
                EffectiveGuestPolicySourcedSoftwareRecipe.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of package repository configurations assigned to the VM instance.
 * @member {Array.<module:model/EffectiveGuestPolicySourcedPackageRepository>} packageRepositories
 */
EffectiveGuestPolicy.prototype['packageRepositories'] = undefined;

/**
 * List of package configurations assigned to the VM instance.
 * @member {Array.<module:model/EffectiveGuestPolicySourcedPackage>} packages
 */
EffectiveGuestPolicy.prototype['packages'] = undefined;

/**
 * List of recipes assigned to the VM instance.
 * @member {Array.<module:model/EffectiveGuestPolicySourcedSoftwareRecipe>} softwareRecipes
 */
EffectiveGuestPolicy.prototype['softwareRecipes'] = undefined;






export default EffectiveGuestPolicy;

