/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRecurringSchedule.h
 *
 * Sets the time for recurring patch deployments.
 */

#ifndef OAIRecurringSchedule_H
#define OAIRecurringSchedule_H

#include <QJsonObject>

#include "OAIMonthlySchedule.h"
#include "OAITimeOfDay.h"
#include "OAITimeZone.h"
#include "OAIWeeklySchedule.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMonthlySchedule;
class OAITimeOfDay;
class OAITimeZone;
class OAIWeeklySchedule;

class OAIRecurringSchedule : public OAIObject {
public:
    OAIRecurringSchedule();
    OAIRecurringSchedule(QString json);
    ~OAIRecurringSchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getFrequency() const;
    void setFrequency(const QString &frequency);
    bool is_frequency_Set() const;
    bool is_frequency_Valid() const;

    QString getLastExecuteTime() const;
    void setLastExecuteTime(const QString &last_execute_time);
    bool is_last_execute_time_Set() const;
    bool is_last_execute_time_Valid() const;

    OAIMonthlySchedule getMonthly() const;
    void setMonthly(const OAIMonthlySchedule &monthly);
    bool is_monthly_Set() const;
    bool is_monthly_Valid() const;

    QString getNextExecuteTime() const;
    void setNextExecuteTime(const QString &next_execute_time);
    bool is_next_execute_time_Set() const;
    bool is_next_execute_time_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    OAITimeOfDay getTimeOfDay() const;
    void setTimeOfDay(const OAITimeOfDay &time_of_day);
    bool is_time_of_day_Set() const;
    bool is_time_of_day_Valid() const;

    OAITimeZone getTimeZone() const;
    void setTimeZone(const OAITimeZone &time_zone);
    bool is_time_zone_Set() const;
    bool is_time_zone_Valid() const;

    OAIWeeklySchedule getWeekly() const;
    void setWeekly(const OAIWeeklySchedule &weekly);
    bool is_weekly_Set() const;
    bool is_weekly_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_frequency;
    bool m_frequency_isSet;
    bool m_frequency_isValid;

    QString m_last_execute_time;
    bool m_last_execute_time_isSet;
    bool m_last_execute_time_isValid;

    OAIMonthlySchedule m_monthly;
    bool m_monthly_isSet;
    bool m_monthly_isValid;

    QString m_next_execute_time;
    bool m_next_execute_time_isSet;
    bool m_next_execute_time_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    OAITimeOfDay m_time_of_day;
    bool m_time_of_day_isSet;
    bool m_time_of_day_isValid;

    OAITimeZone m_time_zone;
    bool m_time_zone_isSet;
    bool m_time_zone_isValid;

    OAIWeeklySchedule m_weekly;
    bool m_weekly_isSet;
    bool m_weekly_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRecurringSchedule)

#endif // OAIRecurringSchedule_H
