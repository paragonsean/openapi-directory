/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGuestPolicy.h
 *
 * An OS Config resource representing a guest configuration policy. These policies represent the desired state for VM instance guest environments including packages to install or remove, package repository configurations, and software to install.
 */

#ifndef OAIGuestPolicy_H
#define OAIGuestPolicy_H

#include <QJsonObject>

#include "OAIAssignment.h"
#include "OAIPackage.h"
#include "OAIPackageRepository.h"
#include "OAISoftwareRecipe.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssignment;
class OAIPackageRepository;
class OAIPackage;
class OAISoftwareRecipe;

class OAIGuestPolicy : public OAIObject {
public:
    OAIGuestPolicy();
    OAIGuestPolicy(QString json);
    ~OAIGuestPolicy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAssignment getAssignment() const;
    void setAssignment(const OAIAssignment &assignment);
    bool is_assignment_Set() const;
    bool is_assignment_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIPackageRepository> getPackageRepositories() const;
    void setPackageRepositories(const QList<OAIPackageRepository> &package_repositories);
    bool is_package_repositories_Set() const;
    bool is_package_repositories_Valid() const;

    QList<OAIPackage> getPackages() const;
    void setPackages(const QList<OAIPackage> &packages);
    bool is_packages_Set() const;
    bool is_packages_Valid() const;

    QList<OAISoftwareRecipe> getRecipes() const;
    void setRecipes(const QList<OAISoftwareRecipe> &recipes);
    bool is_recipes_Set() const;
    bool is_recipes_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAssignment m_assignment;
    bool m_assignment_isSet;
    bool m_assignment_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIPackageRepository> m_package_repositories;
    bool m_package_repositories_isSet;
    bool m_package_repositories_isValid;

    QList<OAIPackage> m_packages;
    bool m_packages_isSet;
    bool m_packages_isValid;

    QList<OAISoftwareRecipe> m_recipes;
    bool m_recipes_isSet;
    bool m_recipes_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGuestPolicy)

#endif // OAIGuestPolicy_H
