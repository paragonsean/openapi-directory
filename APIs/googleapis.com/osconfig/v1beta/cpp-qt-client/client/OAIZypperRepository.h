/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIZypperRepository.h
 *
 * Represents a single Zypper package repository. This repository is added to a repo file that is stored at &#x60;/etc/zypp/repos.d/google_osconfig.repo&#x60;.
 */

#ifndef OAIZypperRepository_H
#define OAIZypperRepository_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIZypperRepository : public OAIObject {
public:
    OAIZypperRepository();
    OAIZypperRepository(QString json);
    ~OAIZypperRepository() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<QString> getGpgKeys() const;
    void setGpgKeys(const QList<QString> &gpg_keys);
    bool is_gpg_keys_Set() const;
    bool is_gpg_keys_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<QString> m_gpg_keys;
    bool m_gpg_keys_isSet;
    bool m_gpg_keys_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIZypperRepository)

#endif // OAIZypperRepository_H
