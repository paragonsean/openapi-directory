/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExecStep.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExecStep::OAIExecStep(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExecStep::OAIExecStep() {
    this->initializeModel();
}

OAIExecStep::~OAIExecStep() {}

void OAIExecStep::initializeModel() {

    m_linux_exec_step_config_isSet = false;
    m_linux_exec_step_config_isValid = false;

    m_windows_exec_step_config_isSet = false;
    m_windows_exec_step_config_isValid = false;
}

void OAIExecStep::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExecStep::fromJsonObject(QJsonObject json) {

    m_linux_exec_step_config_isValid = ::OpenAPI::fromJsonValue(m_linux_exec_step_config, json[QString("linuxExecStepConfig")]);
    m_linux_exec_step_config_isSet = !json[QString("linuxExecStepConfig")].isNull() && m_linux_exec_step_config_isValid;

    m_windows_exec_step_config_isValid = ::OpenAPI::fromJsonValue(m_windows_exec_step_config, json[QString("windowsExecStepConfig")]);
    m_windows_exec_step_config_isSet = !json[QString("windowsExecStepConfig")].isNull() && m_windows_exec_step_config_isValid;
}

QString OAIExecStep::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExecStep::asJsonObject() const {
    QJsonObject obj;
    if (m_linux_exec_step_config.isSet()) {
        obj.insert(QString("linuxExecStepConfig"), ::OpenAPI::toJsonValue(m_linux_exec_step_config));
    }
    if (m_windows_exec_step_config.isSet()) {
        obj.insert(QString("windowsExecStepConfig"), ::OpenAPI::toJsonValue(m_windows_exec_step_config));
    }
    return obj;
}

OAIExecStepConfig OAIExecStep::getLinuxExecStepConfig() const {
    return m_linux_exec_step_config;
}
void OAIExecStep::setLinuxExecStepConfig(const OAIExecStepConfig &linux_exec_step_config) {
    m_linux_exec_step_config = linux_exec_step_config;
    m_linux_exec_step_config_isSet = true;
}

bool OAIExecStep::is_linux_exec_step_config_Set() const{
    return m_linux_exec_step_config_isSet;
}

bool OAIExecStep::is_linux_exec_step_config_Valid() const{
    return m_linux_exec_step_config_isValid;
}

OAIExecStepConfig OAIExecStep::getWindowsExecStepConfig() const {
    return m_windows_exec_step_config;
}
void OAIExecStep::setWindowsExecStepConfig(const OAIExecStepConfig &windows_exec_step_config) {
    m_windows_exec_step_config = windows_exec_step_config;
    m_windows_exec_step_config_isSet = true;
}

bool OAIExecStep::is_windows_exec_step_config_Set() const{
    return m_windows_exec_step_config_isSet;
}

bool OAIExecStep::is_windows_exec_step_config_Valid() const{
    return m_windows_exec_step_config_isValid;
}

bool OAIExecStep::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_linux_exec_step_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_windows_exec_step_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExecStep::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
