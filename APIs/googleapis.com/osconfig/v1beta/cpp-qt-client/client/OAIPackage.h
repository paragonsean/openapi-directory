/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPackage.h
 *
 * Package is a reference to the software package to be installed or removed. The agent on the VM instance uses the system package manager to apply the config. These are the commands that the agent uses to install or remove packages. Apt install: &#x60;apt-get update &amp;&amp; apt-get -y install package1 package2 package3&#x60; remove: &#x60;apt-get -y remove package1 package2 package3&#x60; Yum install: &#x60;yum -y install package1 package2 package3&#x60; remove: &#x60;yum -y remove package1 package2 package3&#x60; Zypper install: &#x60;zypper install package1 package2 package3&#x60; remove: &#x60;zypper rm package1 package2&#x60; Googet install: &#x60;googet -noconfirm install package1 package2 package3&#x60; remove: &#x60;googet -noconfirm remove package1 package2 package3&#x60;
 */

#ifndef OAIPackage_H
#define OAIPackage_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPackage : public OAIObject {
public:
    OAIPackage();
    OAIPackage(QString json);
    ~OAIPackage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDesiredState() const;
    void setDesiredState(const QString &desired_state);
    bool is_desired_state_Set() const;
    bool is_desired_state_Valid() const;

    QString getManager() const;
    void setManager(const QString &manager);
    bool is_manager_Set() const;
    bool is_manager_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_desired_state;
    bool m_desired_state_isSet;
    bool m_desired_state_isValid;

    QString m_manager;
    bool m_manager_isSet;
    bool m_manager_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPackage)

#endif // OAIPackage_H
