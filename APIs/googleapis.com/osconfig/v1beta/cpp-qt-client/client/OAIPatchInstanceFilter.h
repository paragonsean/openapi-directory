/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatchInstanceFilter.h
 *
 * A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.
 */

#ifndef OAIPatchInstanceFilter_H
#define OAIPatchInstanceFilter_H

#include <QJsonObject>

#include "OAIPatchInstanceFilterGroupLabel.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPatchInstanceFilterGroupLabel;

class OAIPatchInstanceFilter : public OAIObject {
public:
    OAIPatchInstanceFilter();
    OAIPatchInstanceFilter(QString json);
    ~OAIPatchInstanceFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAll() const;
    void setAll(const bool &all);
    bool is_all_Set() const;
    bool is_all_Valid() const;

    QList<OAIPatchInstanceFilterGroupLabel> getGroupLabels() const;
    void setGroupLabels(const QList<OAIPatchInstanceFilterGroupLabel> &group_labels);
    bool is_group_labels_Set() const;
    bool is_group_labels_Valid() const;

    QList<QString> getInstanceNamePrefixes() const;
    void setInstanceNamePrefixes(const QList<QString> &instance_name_prefixes);
    bool is_instance_name_prefixes_Set() const;
    bool is_instance_name_prefixes_Valid() const;

    QList<QString> getInstances() const;
    void setInstances(const QList<QString> &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    QList<QString> getZones() const;
    void setZones(const QList<QString> &zones);
    bool is_zones_Set() const;
    bool is_zones_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_all;
    bool m_all_isSet;
    bool m_all_isValid;

    QList<OAIPatchInstanceFilterGroupLabel> m_group_labels;
    bool m_group_labels_isSet;
    bool m_group_labels_isValid;

    QList<QString> m_instance_name_prefixes;
    bool m_instance_name_prefixes_isSet;
    bool m_instance_name_prefixes_isValid;

    QList<QString> m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    QList<QString> m_zones;
    bool m_zones_isSet;
    bool m_zones_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatchInstanceFilter)

#endif // OAIPatchInstanceFilter_H
