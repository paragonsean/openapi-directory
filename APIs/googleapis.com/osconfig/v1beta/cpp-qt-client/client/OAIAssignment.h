/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssignment.h
 *
 * An assignment represents the group or groups of VM instances that the policy applies to. If an assignment is empty, it applies to all VM instances. Otherwise, the targeted VM instances must meet all the criteria specified. So if both labels and zones are specified, the policy applies to VM instances with those labels and in those zones.
 */

#ifndef OAIAssignment_H
#define OAIAssignment_H

#include <QJsonObject>

#include "OAIAssignmentGroupLabel.h"
#include "OAIAssignmentOsType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssignmentGroupLabel;
class OAIAssignmentOsType;

class OAIAssignment : public OAIObject {
public:
    OAIAssignment();
    OAIAssignment(QString json);
    ~OAIAssignment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAssignmentGroupLabel> getGroupLabels() const;
    void setGroupLabels(const QList<OAIAssignmentGroupLabel> &group_labels);
    bool is_group_labels_Set() const;
    bool is_group_labels_Valid() const;

    QList<QString> getInstanceNamePrefixes() const;
    void setInstanceNamePrefixes(const QList<QString> &instance_name_prefixes);
    bool is_instance_name_prefixes_Set() const;
    bool is_instance_name_prefixes_Valid() const;

    QList<QString> getInstances() const;
    void setInstances(const QList<QString> &instances);
    bool is_instances_Set() const;
    bool is_instances_Valid() const;

    QList<OAIAssignmentOsType> getOsTypes() const;
    void setOsTypes(const QList<OAIAssignmentOsType> &os_types);
    bool is_os_types_Set() const;
    bool is_os_types_Valid() const;

    QList<QString> getZones() const;
    void setZones(const QList<QString> &zones);
    bool is_zones_Set() const;
    bool is_zones_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAssignmentGroupLabel> m_group_labels;
    bool m_group_labels_isSet;
    bool m_group_labels_isValid;

    QList<QString> m_instance_name_prefixes;
    bool m_instance_name_prefixes_isSet;
    bool m_instance_name_prefixes_isValid;

    QList<QString> m_instances;
    bool m_instances_isSet;
    bool m_instances_isValid;

    QList<OAIAssignmentOsType> m_os_types;
    bool m_os_types_isSet;
    bool m_os_types_isValid;

    QList<QString> m_zones;
    bool m_zones_isSet;
    bool m_zones_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssignment)

#endif // OAIAssignment_H
