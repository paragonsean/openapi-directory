/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatchInstanceFilterGroupLabel.h
 *
 * Represents a group of VMs that can be identified as having all these labels, for example \&quot;env&#x3D;prod and app&#x3D;web\&quot;.
 */

#ifndef OAIPatchInstanceFilterGroupLabel_H
#define OAIPatchInstanceFilterGroupLabel_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPatchInstanceFilterGroupLabel : public OAIObject {
public:
    OAIPatchInstanceFilterGroupLabel();
    OAIPatchInstanceFilterGroupLabel(QString json);
    ~OAIPatchInstanceFilterGroupLabel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatchInstanceFilterGroupLabel)

#endif // OAIPatchInstanceFilterGroupLabel_H
