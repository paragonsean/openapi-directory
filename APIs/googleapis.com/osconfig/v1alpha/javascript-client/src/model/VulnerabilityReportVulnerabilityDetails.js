/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CVSSv3 from './CVSSv3';
import VulnerabilityReportVulnerabilityDetailsReference from './VulnerabilityReportVulnerabilityDetailsReference';

/**
 * The VulnerabilityReportVulnerabilityDetails model module.
 * @module model/VulnerabilityReportVulnerabilityDetails
 * @version v1alpha
 */
class VulnerabilityReportVulnerabilityDetails {
    /**
     * Constructs a new <code>VulnerabilityReportVulnerabilityDetails</code>.
     * Contains metadata information for the vulnerability. This information is collected from the upstream feed of the operating system.
     * @alias module:model/VulnerabilityReportVulnerabilityDetails
     */
    constructor() { 
        
        VulnerabilityReportVulnerabilityDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VulnerabilityReportVulnerabilityDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VulnerabilityReportVulnerabilityDetails} obj Optional instance to populate.
     * @return {module:model/VulnerabilityReportVulnerabilityDetails} The populated <code>VulnerabilityReportVulnerabilityDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VulnerabilityReportVulnerabilityDetails();

            if (data.hasOwnProperty('cve')) {
                obj['cve'] = ApiClient.convertToType(data['cve'], 'String');
            }
            if (data.hasOwnProperty('cvssV2Score')) {
                obj['cvssV2Score'] = ApiClient.convertToType(data['cvssV2Score'], 'Number');
            }
            if (data.hasOwnProperty('cvssV3')) {
                obj['cvssV3'] = CVSSv3.constructFromObject(data['cvssV3']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('references')) {
                obj['references'] = ApiClient.convertToType(data['references'], [VulnerabilityReportVulnerabilityDetailsReference]);
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VulnerabilityReportVulnerabilityDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VulnerabilityReportVulnerabilityDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cve'] && !(typeof data['cve'] === 'string' || data['cve'] instanceof String)) {
            throw new Error("Expected the field `cve` to be a primitive type in the JSON string but got " + data['cve']);
        }
        // validate the optional field `cvssV3`
        if (data['cvssV3']) { // data not null
          CVSSv3.validateJSON(data['cvssV3']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['references']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['references'])) {
                throw new Error("Expected the field `references` to be an array in the JSON data but got " + data['references']);
            }
            // validate the optional field `references` (array)
            for (const item of data['references']) {
                VulnerabilityReportVulnerabilityDetailsReference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }

        return true;
    }


}



/**
 * The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique across vulnerabilities for a VM.
 * @member {String} cve
 */
VulnerabilityReportVulnerabilityDetails.prototype['cve'] = undefined;

/**
 * The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.
 * @member {Number} cvssV2Score
 */
VulnerabilityReportVulnerabilityDetails.prototype['cvssV2Score'] = undefined;

/**
 * @member {module:model/CVSSv3} cvssV3
 */
VulnerabilityReportVulnerabilityDetails.prototype['cvssV3'] = undefined;

/**
 * The note or description describing the vulnerability from the distro.
 * @member {String} description
 */
VulnerabilityReportVulnerabilityDetails.prototype['description'] = undefined;

/**
 * Corresponds to the references attached to the `VulnerabilityDetails`.
 * @member {Array.<module:model/VulnerabilityReportVulnerabilityDetailsReference>} references
 */
VulnerabilityReportVulnerabilityDetails.prototype['references'] = undefined;

/**
 * Assigned severity/impact ranking from the distro.
 * @member {String} severity
 */
VulnerabilityReportVulnerabilityDetails.prototype['severity'] = undefined;






export default VulnerabilityReportVulnerabilityDetails;

