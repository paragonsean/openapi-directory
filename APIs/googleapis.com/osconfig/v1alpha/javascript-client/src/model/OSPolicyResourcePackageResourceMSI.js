/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OSPolicyResourceFile from './OSPolicyResourceFile';

/**
 * The OSPolicyResourcePackageResourceMSI model module.
 * @module model/OSPolicyResourcePackageResourceMSI
 * @version v1alpha
 */
class OSPolicyResourcePackageResourceMSI {
    /**
     * Constructs a new <code>OSPolicyResourcePackageResourceMSI</code>.
     * An MSI package. MSI packages only support INSTALLED state.
     * @alias module:model/OSPolicyResourcePackageResourceMSI
     */
    constructor() { 
        
        OSPolicyResourcePackageResourceMSI.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OSPolicyResourcePackageResourceMSI</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OSPolicyResourcePackageResourceMSI} obj Optional instance to populate.
     * @return {module:model/OSPolicyResourcePackageResourceMSI} The populated <code>OSPolicyResourcePackageResourceMSI</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OSPolicyResourcePackageResourceMSI();

            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], ['String']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = OSPolicyResourceFile.constructFromObject(data['source']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OSPolicyResourcePackageResourceMSI</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OSPolicyResourcePackageResourceMSI</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['properties'])) {
            throw new Error("Expected the field `properties` to be an array in the JSON data but got " + data['properties']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          OSPolicyResourceFile.validateJSON(data['source']);
        }

        return true;
    }


}



/**
 * Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of `ACTION=INSTALL REBOOT=ReallySuppress`.
 * @member {Array.<String>} properties
 */
OSPolicyResourcePackageResourceMSI.prototype['properties'] = undefined;

/**
 * @member {module:model/OSPolicyResourceFile} source
 */
OSPolicyResourcePackageResourceMSI.prototype['source'] = undefined;






export default OSPolicyResourcePackageResourceMSI;

