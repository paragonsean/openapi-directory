/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OSPolicyResourceExecResource from './OSPolicyResourceExecResource';
import OSPolicyResourceFileResource from './OSPolicyResourceFileResource';
import OSPolicyResourcePackageResource from './OSPolicyResourcePackageResource';
import OSPolicyResourceRepositoryResource from './OSPolicyResourceRepositoryResource';

/**
 * The OSPolicyResource model module.
 * @module model/OSPolicyResource
 * @version v1alpha
 */
class OSPolicyResource {
    /**
     * Constructs a new <code>OSPolicyResource</code>.
     * An OS policy resource is used to define the desired state configuration and provides a specific functionality like installing/removing packages, executing a script etc. The system ensures that resources are always in their desired state by taking necessary actions if they have drifted from their desired state.
     * @alias module:model/OSPolicyResource
     */
    constructor() { 
        
        OSPolicyResource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OSPolicyResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OSPolicyResource} obj Optional instance to populate.
     * @return {module:model/OSPolicyResource} The populated <code>OSPolicyResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OSPolicyResource();

            if (data.hasOwnProperty('exec')) {
                obj['exec'] = OSPolicyResourceExecResource.constructFromObject(data['exec']);
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = OSPolicyResourceFileResource.constructFromObject(data['file']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('pkg')) {
                obj['pkg'] = OSPolicyResourcePackageResource.constructFromObject(data['pkg']);
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = OSPolicyResourceRepositoryResource.constructFromObject(data['repository']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OSPolicyResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OSPolicyResource</code>.
     */
    static validateJSON(data) {
        // validate the optional field `exec`
        if (data['exec']) { // data not null
          OSPolicyResourceExecResource.validateJSON(data['exec']);
        }
        // validate the optional field `file`
        if (data['file']) { // data not null
          OSPolicyResourceFileResource.validateJSON(data['file']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `pkg`
        if (data['pkg']) { // data not null
          OSPolicyResourcePackageResource.validateJSON(data['pkg']);
        }
        // validate the optional field `repository`
        if (data['repository']) { // data not null
          OSPolicyResourceRepositoryResource.validateJSON(data['repository']);
        }

        return true;
    }


}



/**
 * @member {module:model/OSPolicyResourceExecResource} exec
 */
OSPolicyResource.prototype['exec'] = undefined;

/**
 * @member {module:model/OSPolicyResourceFileResource} file
 */
OSPolicyResource.prototype['file'] = undefined;

/**
 * Required. The id of the resource with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the OS policy.
 * @member {String} id
 */
OSPolicyResource.prototype['id'] = undefined;

/**
 * @member {module:model/OSPolicyResourcePackageResource} pkg
 */
OSPolicyResource.prototype['pkg'] = undefined;

/**
 * @member {module:model/OSPolicyResourceRepositoryResource} repository
 */
OSPolicyResource.prototype['repository'] = undefined;






export default OSPolicyResource;

