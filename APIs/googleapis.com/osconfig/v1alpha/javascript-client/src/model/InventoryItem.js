/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InventorySoftwarePackage from './InventorySoftwarePackage';

/**
 * The InventoryItem model module.
 * @module model/InventoryItem
 * @version v1alpha
 */
class InventoryItem {
    /**
     * Constructs a new <code>InventoryItem</code>.
     * A single piece of inventory on a VM.
     * @alias module:model/InventoryItem
     */
    constructor() { 
        
        InventoryItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InventoryItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InventoryItem} obj Optional instance to populate.
     * @return {module:model/InventoryItem} The populated <code>InventoryItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InventoryItem();

            if (data.hasOwnProperty('availablePackage')) {
                obj['availablePackage'] = InventorySoftwarePackage.constructFromObject(data['availablePackage']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('installedPackage')) {
                obj['installedPackage'] = InventorySoftwarePackage.constructFromObject(data['installedPackage']);
            }
            if (data.hasOwnProperty('originType')) {
                obj['originType'] = ApiClient.convertToType(data['originType'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InventoryItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InventoryItem</code>.
     */
    static validateJSON(data) {
        // validate the optional field `availablePackage`
        if (data['availablePackage']) { // data not null
          InventorySoftwarePackage.validateJSON(data['availablePackage']);
        }
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `installedPackage`
        if (data['installedPackage']) { // data not null
          InventorySoftwarePackage.validateJSON(data['installedPackage']);
        }
        // ensure the json data is a string
        if (data['originType'] && !(typeof data['originType'] === 'string' || data['originType'] instanceof String)) {
            throw new Error("Expected the field `originType` to be a primitive type in the JSON string but got " + data['originType']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * @member {module:model/InventorySoftwarePackage} availablePackage
 */
InventoryItem.prototype['availablePackage'] = undefined;

/**
 * When this inventory item was first detected.
 * @member {String} createTime
 */
InventoryItem.prototype['createTime'] = undefined;

/**
 * Identifier for this item, unique across items for this VM.
 * @member {String} id
 */
InventoryItem.prototype['id'] = undefined;

/**
 * @member {module:model/InventorySoftwarePackage} installedPackage
 */
InventoryItem.prototype['installedPackage'] = undefined;

/**
 * The origin of this inventory item.
 * @member {module:model/InventoryItem.OriginTypeEnum} originType
 */
InventoryItem.prototype['originType'] = undefined;

/**
 * The specific type of inventory, correlating to its specific details.
 * @member {module:model/InventoryItem.TypeEnum} type
 */
InventoryItem.prototype['type'] = undefined;

/**
 * When this inventory item was last modified.
 * @member {String} updateTime
 */
InventoryItem.prototype['updateTime'] = undefined;





/**
 * Allowed values for the <code>originType</code> property.
 * @enum {String}
 * @readonly
 */
InventoryItem['OriginTypeEnum'] = {

    /**
     * value: "ORIGIN_TYPE_UNSPECIFIED"
     * @const
     */
    "ORIGIN_TYPE_UNSPECIFIED": "ORIGIN_TYPE_UNSPECIFIED",

    /**
     * value: "INVENTORY_REPORT"
     * @const
     */
    "INVENTORY_REPORT": "INVENTORY_REPORT"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
InventoryItem['TypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "INSTALLED_PACKAGE"
     * @const
     */
    "INSTALLED_PACKAGE": "INSTALLED_PACKAGE",

    /**
     * value: "AVAILABLE_PACKAGE"
     * @const
     */
    "AVAILABLE_PACKAGE": "AVAILABLE_PACKAGE"
};



export default InventoryItem;

