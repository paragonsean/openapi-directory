# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cvssv3 import CVSSv3
from openapi_server.models.vulnerability_report_vulnerability_details_reference import VulnerabilityReportVulnerabilityDetailsReference
from openapi_server import util


class VulnerabilityReportVulnerabilityDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cve: str=None, cvss_v2_score: float=None, cvss_v3: CVSSv3=None, description: str=None, references: List[VulnerabilityReportVulnerabilityDetailsReference]=None, severity: str=None):
        """VulnerabilityReportVulnerabilityDetails - a model defined in OpenAPI

        :param cve: The cve of this VulnerabilityReportVulnerabilityDetails.
        :param cvss_v2_score: The cvss_v2_score of this VulnerabilityReportVulnerabilityDetails.
        :param cvss_v3: The cvss_v3 of this VulnerabilityReportVulnerabilityDetails.
        :param description: The description of this VulnerabilityReportVulnerabilityDetails.
        :param references: The references of this VulnerabilityReportVulnerabilityDetails.
        :param severity: The severity of this VulnerabilityReportVulnerabilityDetails.
        """
        self.openapi_types = {
            'cve': str,
            'cvss_v2_score': float,
            'cvss_v3': CVSSv3,
            'description': str,
            'references': List[VulnerabilityReportVulnerabilityDetailsReference],
            'severity': str
        }

        self.attribute_map = {
            'cve': 'cve',
            'cvss_v2_score': 'cvssV2Score',
            'cvss_v3': 'cvssV3',
            'description': 'description',
            'references': 'references',
            'severity': 'severity'
        }

        self._cve = cve
        self._cvss_v2_score = cvss_v2_score
        self._cvss_v3 = cvss_v3
        self._description = description
        self._references = references
        self._severity = severity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VulnerabilityReportVulnerabilityDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VulnerabilityReportVulnerabilityDetails of this VulnerabilityReportVulnerabilityDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cve(self):
        """Gets the cve of this VulnerabilityReportVulnerabilityDetails.

        The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique across vulnerabilities for a VM.

        :return: The cve of this VulnerabilityReportVulnerabilityDetails.
        :rtype: str
        """
        return self._cve

    @cve.setter
    def cve(self, cve):
        """Sets the cve of this VulnerabilityReportVulnerabilityDetails.

        The CVE of the vulnerability. CVE cannot be empty and the combination of should be unique across vulnerabilities for a VM.

        :param cve: The cve of this VulnerabilityReportVulnerabilityDetails.
        :type cve: str
        """

        self._cve = cve

    @property
    def cvss_v2_score(self):
        """Gets the cvss_v2_score of this VulnerabilityReportVulnerabilityDetails.

        The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.

        :return: The cvss_v2_score of this VulnerabilityReportVulnerabilityDetails.
        :rtype: float
        """
        return self._cvss_v2_score

    @cvss_v2_score.setter
    def cvss_v2_score(self, cvss_v2_score):
        """Sets the cvss_v2_score of this VulnerabilityReportVulnerabilityDetails.

        The CVSS V2 score of this vulnerability. CVSS V2 score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.

        :param cvss_v2_score: The cvss_v2_score of this VulnerabilityReportVulnerabilityDetails.
        :type cvss_v2_score: float
        """

        self._cvss_v2_score = cvss_v2_score

    @property
    def cvss_v3(self):
        """Gets the cvss_v3 of this VulnerabilityReportVulnerabilityDetails.


        :return: The cvss_v3 of this VulnerabilityReportVulnerabilityDetails.
        :rtype: CVSSv3
        """
        return self._cvss_v3

    @cvss_v3.setter
    def cvss_v3(self, cvss_v3):
        """Sets the cvss_v3 of this VulnerabilityReportVulnerabilityDetails.


        :param cvss_v3: The cvss_v3 of this VulnerabilityReportVulnerabilityDetails.
        :type cvss_v3: CVSSv3
        """

        self._cvss_v3 = cvss_v3

    @property
    def description(self):
        """Gets the description of this VulnerabilityReportVulnerabilityDetails.

        The note or description describing the vulnerability from the distro.

        :return: The description of this VulnerabilityReportVulnerabilityDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this VulnerabilityReportVulnerabilityDetails.

        The note or description describing the vulnerability from the distro.

        :param description: The description of this VulnerabilityReportVulnerabilityDetails.
        :type description: str
        """

        self._description = description

    @property
    def references(self):
        """Gets the references of this VulnerabilityReportVulnerabilityDetails.

        Corresponds to the references attached to the `VulnerabilityDetails`.

        :return: The references of this VulnerabilityReportVulnerabilityDetails.
        :rtype: List[VulnerabilityReportVulnerabilityDetailsReference]
        """
        return self._references

    @references.setter
    def references(self, references):
        """Sets the references of this VulnerabilityReportVulnerabilityDetails.

        Corresponds to the references attached to the `VulnerabilityDetails`.

        :param references: The references of this VulnerabilityReportVulnerabilityDetails.
        :type references: List[VulnerabilityReportVulnerabilityDetailsReference]
        """

        self._references = references

    @property
    def severity(self):
        """Gets the severity of this VulnerabilityReportVulnerabilityDetails.

        Assigned severity/impact ranking from the distro.

        :return: The severity of this VulnerabilityReportVulnerabilityDetails.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this VulnerabilityReportVulnerabilityDetails.

        Assigned severity/impact ranking from the distro.

        :param severity: The severity of this VulnerabilityReportVulnerabilityDetails.
        :type severity: str
        """

        self._severity = severity
