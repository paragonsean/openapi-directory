# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inventory_versioned_package import InventoryVersionedPackage
from openapi_server.models.inventory_windows_application import InventoryWindowsApplication
from openapi_server.models.inventory_windows_quick_fix_engineering_package import InventoryWindowsQuickFixEngineeringPackage
from openapi_server.models.inventory_windows_update_package import InventoryWindowsUpdatePackage
from openapi_server.models.inventory_zypper_patch import InventoryZypperPatch
from openapi_server import util


class InventorySoftwarePackage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apt_package: InventoryVersionedPackage=None, cos_package: InventoryVersionedPackage=None, googet_package: InventoryVersionedPackage=None, qfe_package: InventoryWindowsQuickFixEngineeringPackage=None, windows_application: InventoryWindowsApplication=None, wua_package: InventoryWindowsUpdatePackage=None, yum_package: InventoryVersionedPackage=None, zypper_package: InventoryVersionedPackage=None, zypper_patch: InventoryZypperPatch=None):
        """InventorySoftwarePackage - a model defined in OpenAPI

        :param apt_package: The apt_package of this InventorySoftwarePackage.
        :param cos_package: The cos_package of this InventorySoftwarePackage.
        :param googet_package: The googet_package of this InventorySoftwarePackage.
        :param qfe_package: The qfe_package of this InventorySoftwarePackage.
        :param windows_application: The windows_application of this InventorySoftwarePackage.
        :param wua_package: The wua_package of this InventorySoftwarePackage.
        :param yum_package: The yum_package of this InventorySoftwarePackage.
        :param zypper_package: The zypper_package of this InventorySoftwarePackage.
        :param zypper_patch: The zypper_patch of this InventorySoftwarePackage.
        """
        self.openapi_types = {
            'apt_package': InventoryVersionedPackage,
            'cos_package': InventoryVersionedPackage,
            'googet_package': InventoryVersionedPackage,
            'qfe_package': InventoryWindowsQuickFixEngineeringPackage,
            'windows_application': InventoryWindowsApplication,
            'wua_package': InventoryWindowsUpdatePackage,
            'yum_package': InventoryVersionedPackage,
            'zypper_package': InventoryVersionedPackage,
            'zypper_patch': InventoryZypperPatch
        }

        self.attribute_map = {
            'apt_package': 'aptPackage',
            'cos_package': 'cosPackage',
            'googet_package': 'googetPackage',
            'qfe_package': 'qfePackage',
            'windows_application': 'windowsApplication',
            'wua_package': 'wuaPackage',
            'yum_package': 'yumPackage',
            'zypper_package': 'zypperPackage',
            'zypper_patch': 'zypperPatch'
        }

        self._apt_package = apt_package
        self._cos_package = cos_package
        self._googet_package = googet_package
        self._qfe_package = qfe_package
        self._windows_application = windows_application
        self._wua_package = wua_package
        self._yum_package = yum_package
        self._zypper_package = zypper_package
        self._zypper_patch = zypper_patch

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventorySoftwarePackage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventorySoftwarePackage of this InventorySoftwarePackage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apt_package(self):
        """Gets the apt_package of this InventorySoftwarePackage.


        :return: The apt_package of this InventorySoftwarePackage.
        :rtype: InventoryVersionedPackage
        """
        return self._apt_package

    @apt_package.setter
    def apt_package(self, apt_package):
        """Sets the apt_package of this InventorySoftwarePackage.


        :param apt_package: The apt_package of this InventorySoftwarePackage.
        :type apt_package: InventoryVersionedPackage
        """

        self._apt_package = apt_package

    @property
    def cos_package(self):
        """Gets the cos_package of this InventorySoftwarePackage.


        :return: The cos_package of this InventorySoftwarePackage.
        :rtype: InventoryVersionedPackage
        """
        return self._cos_package

    @cos_package.setter
    def cos_package(self, cos_package):
        """Sets the cos_package of this InventorySoftwarePackage.


        :param cos_package: The cos_package of this InventorySoftwarePackage.
        :type cos_package: InventoryVersionedPackage
        """

        self._cos_package = cos_package

    @property
    def googet_package(self):
        """Gets the googet_package of this InventorySoftwarePackage.


        :return: The googet_package of this InventorySoftwarePackage.
        :rtype: InventoryVersionedPackage
        """
        return self._googet_package

    @googet_package.setter
    def googet_package(self, googet_package):
        """Sets the googet_package of this InventorySoftwarePackage.


        :param googet_package: The googet_package of this InventorySoftwarePackage.
        :type googet_package: InventoryVersionedPackage
        """

        self._googet_package = googet_package

    @property
    def qfe_package(self):
        """Gets the qfe_package of this InventorySoftwarePackage.


        :return: The qfe_package of this InventorySoftwarePackage.
        :rtype: InventoryWindowsQuickFixEngineeringPackage
        """
        return self._qfe_package

    @qfe_package.setter
    def qfe_package(self, qfe_package):
        """Sets the qfe_package of this InventorySoftwarePackage.


        :param qfe_package: The qfe_package of this InventorySoftwarePackage.
        :type qfe_package: InventoryWindowsQuickFixEngineeringPackage
        """

        self._qfe_package = qfe_package

    @property
    def windows_application(self):
        """Gets the windows_application of this InventorySoftwarePackage.


        :return: The windows_application of this InventorySoftwarePackage.
        :rtype: InventoryWindowsApplication
        """
        return self._windows_application

    @windows_application.setter
    def windows_application(self, windows_application):
        """Sets the windows_application of this InventorySoftwarePackage.


        :param windows_application: The windows_application of this InventorySoftwarePackage.
        :type windows_application: InventoryWindowsApplication
        """

        self._windows_application = windows_application

    @property
    def wua_package(self):
        """Gets the wua_package of this InventorySoftwarePackage.


        :return: The wua_package of this InventorySoftwarePackage.
        :rtype: InventoryWindowsUpdatePackage
        """
        return self._wua_package

    @wua_package.setter
    def wua_package(self, wua_package):
        """Sets the wua_package of this InventorySoftwarePackage.


        :param wua_package: The wua_package of this InventorySoftwarePackage.
        :type wua_package: InventoryWindowsUpdatePackage
        """

        self._wua_package = wua_package

    @property
    def yum_package(self):
        """Gets the yum_package of this InventorySoftwarePackage.


        :return: The yum_package of this InventorySoftwarePackage.
        :rtype: InventoryVersionedPackage
        """
        return self._yum_package

    @yum_package.setter
    def yum_package(self, yum_package):
        """Sets the yum_package of this InventorySoftwarePackage.


        :param yum_package: The yum_package of this InventorySoftwarePackage.
        :type yum_package: InventoryVersionedPackage
        """

        self._yum_package = yum_package

    @property
    def zypper_package(self):
        """Gets the zypper_package of this InventorySoftwarePackage.


        :return: The zypper_package of this InventorySoftwarePackage.
        :rtype: InventoryVersionedPackage
        """
        return self._zypper_package

    @zypper_package.setter
    def zypper_package(self, zypper_package):
        """Sets the zypper_package of this InventorySoftwarePackage.


        :param zypper_package: The zypper_package of this InventorySoftwarePackage.
        :type zypper_package: InventoryVersionedPackage
        """

        self._zypper_package = zypper_package

    @property
    def zypper_patch(self):
        """Gets the zypper_patch of this InventorySoftwarePackage.


        :return: The zypper_patch of this InventorySoftwarePackage.
        :rtype: InventoryZypperPatch
        """
        return self._zypper_patch

    @zypper_patch.setter
    def zypper_patch(self, zypper_patch):
        """Sets the zypper_patch of this InventorySoftwarePackage.


        :param zypper_patch: The zypper_patch of this InventorySoftwarePackage.
        :type zypper_patch: InventoryZypperPatch
        """

        self._zypper_patch = zypper_patch
