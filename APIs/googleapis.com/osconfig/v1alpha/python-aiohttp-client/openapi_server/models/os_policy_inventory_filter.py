# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OSPolicyInventoryFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, os_short_name: str=None, os_version: str=None):
        """OSPolicyInventoryFilter - a model defined in OpenAPI

        :param os_short_name: The os_short_name of this OSPolicyInventoryFilter.
        :param os_version: The os_version of this OSPolicyInventoryFilter.
        """
        self.openapi_types = {
            'os_short_name': str,
            'os_version': str
        }

        self.attribute_map = {
            'os_short_name': 'osShortName',
            'os_version': 'osVersion'
        }

        self._os_short_name = os_short_name
        self._os_version = os_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OSPolicyInventoryFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OSPolicyInventoryFilter of this OSPolicyInventoryFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def os_short_name(self):
        """Gets the os_short_name of this OSPolicyInventoryFilter.

        Required. The OS short name

        :return: The os_short_name of this OSPolicyInventoryFilter.
        :rtype: str
        """
        return self._os_short_name

    @os_short_name.setter
    def os_short_name(self, os_short_name):
        """Sets the os_short_name of this OSPolicyInventoryFilter.

        Required. The OS short name

        :param os_short_name: The os_short_name of this OSPolicyInventoryFilter.
        :type os_short_name: str
        """

        self._os_short_name = os_short_name

    @property
    def os_version(self):
        """Gets the os_version of this OSPolicyInventoryFilter.

        The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.

        :return: The os_version of this OSPolicyInventoryFilter.
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this OSPolicyInventoryFilter.

        The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of `7`, specify the following value for this field `7.*` An empty string matches all OS versions.

        :param os_version: The os_version of this OSPolicyInventoryFilter.
        :type os_version: str
        """

        self._os_version = os_version
