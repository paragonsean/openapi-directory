# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OSPolicyResourceComplianceExecResourceOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enforcement_output: str=None):
        """OSPolicyResourceComplianceExecResourceOutput - a model defined in OpenAPI

        :param enforcement_output: The enforcement_output of this OSPolicyResourceComplianceExecResourceOutput.
        """
        self.openapi_types = {
            'enforcement_output': str
        }

        self.attribute_map = {
            'enforcement_output': 'enforcementOutput'
        }

        self._enforcement_output = enforcement_output

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OSPolicyResourceComplianceExecResourceOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OSPolicyResourceComplianceExecResourceOutput of this OSPolicyResourceComplianceExecResourceOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enforcement_output(self):
        """Gets the enforcement_output of this OSPolicyResourceComplianceExecResourceOutput.

        Output from Enforcement phase output file (if run). Output size is limited to 100K bytes.

        :return: The enforcement_output of this OSPolicyResourceComplianceExecResourceOutput.
        :rtype: str
        """
        return self._enforcement_output

    @enforcement_output.setter
    def enforcement_output(self, enforcement_output):
        """Sets the enforcement_output of this OSPolicyResourceComplianceExecResourceOutput.

        Output from Enforcement phase output file (if run). Output size is limited to 100K bytes.

        :param enforcement_output: The enforcement_output of this OSPolicyResourceComplianceExecResourceOutput.
        :type enforcement_output: str
        """

        self._enforcement_output = enforcement_output
