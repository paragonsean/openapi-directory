# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InventoryVersionedPackage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, architecture: str=None, package_name: str=None, version: str=None):
        """InventoryVersionedPackage - a model defined in OpenAPI

        :param architecture: The architecture of this InventoryVersionedPackage.
        :param package_name: The package_name of this InventoryVersionedPackage.
        :param version: The version of this InventoryVersionedPackage.
        """
        self.openapi_types = {
            'architecture': str,
            'package_name': str,
            'version': str
        }

        self.attribute_map = {
            'architecture': 'architecture',
            'package_name': 'packageName',
            'version': 'version'
        }

        self._architecture = architecture
        self._package_name = package_name
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventoryVersionedPackage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventoryVersionedPackage of this InventoryVersionedPackage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def architecture(self):
        """Gets the architecture of this InventoryVersionedPackage.

        The system architecture this package is intended for.

        :return: The architecture of this InventoryVersionedPackage.
        :rtype: str
        """
        return self._architecture

    @architecture.setter
    def architecture(self, architecture):
        """Sets the architecture of this InventoryVersionedPackage.

        The system architecture this package is intended for.

        :param architecture: The architecture of this InventoryVersionedPackage.
        :type architecture: str
        """

        self._architecture = architecture

    @property
    def package_name(self):
        """Gets the package_name of this InventoryVersionedPackage.

        The name of the package.

        :return: The package_name of this InventoryVersionedPackage.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this InventoryVersionedPackage.

        The name of the package.

        :param package_name: The package_name of this InventoryVersionedPackage.
        :type package_name: str
        """

        self._package_name = package_name

    @property
    def version(self):
        """Gets the version of this InventoryVersionedPackage.

        The version of the package.

        :return: The version of this InventoryVersionedPackage.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this InventoryVersionedPackage.

        The version of the package.

        :param version: The version of this InventoryVersionedPackage.
        :type version: str
        """

        self._version = version
