/*
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.OSPolicyAssignmentReportOSPolicyCompliance;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A report of the OS policy assignment status for a given instance.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:40:03.505542-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OSPolicyAssignmentReport {
  public static final String SERIALIZED_NAME_INSTANCE = "instance";
  @SerializedName(SERIALIZED_NAME_INSTANCE)
  private String instance;

  public static final String SERIALIZED_NAME_LAST_RUN_ID = "lastRunId";
  @SerializedName(SERIALIZED_NAME_LAST_RUN_ID)
  private String lastRunId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OS_POLICY_ASSIGNMENT = "osPolicyAssignment";
  @SerializedName(SERIALIZED_NAME_OS_POLICY_ASSIGNMENT)
  private String osPolicyAssignment;

  public static final String SERIALIZED_NAME_OS_POLICY_COMPLIANCES = "osPolicyCompliances";
  @SerializedName(SERIALIZED_NAME_OS_POLICY_COMPLIANCES)
  private List<OSPolicyAssignmentReportOSPolicyCompliance> osPolicyCompliances = new ArrayList<>();

  public static final String SERIALIZED_NAME_UPDATE_TIME = "updateTime";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public OSPolicyAssignmentReport() {
  }

  public OSPolicyAssignmentReport instance(String instance) {
    this.instance = instance;
    return this;
  }

  /**
   * The Compute Engine VM instance name.
   * @return instance
   */
  @javax.annotation.Nullable
  public String getInstance() {
    return instance;
  }

  public void setInstance(String instance) {
    this.instance = instance;
  }


  public OSPolicyAssignmentReport lastRunId(String lastRunId) {
    this.lastRunId = lastRunId;
    return this;
  }

  /**
   * Unique identifier of the last attempted run to apply the OS policies associated with this assignment on the VM. This ID is logged by the OS Config agent while applying the OS policies associated with this assignment on the VM. NOTE: If the service is unable to successfully connect to the agent for this run, then this id will not be available in the agent logs.
   * @return lastRunId
   */
  @javax.annotation.Nullable
  public String getLastRunId() {
    return lastRunId;
  }

  public void setLastRunId(String lastRunId) {
    this.lastRunId = lastRunId;
  }


  public OSPolicyAssignmentReport name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The &#x60;OSPolicyAssignmentReport&#x60; API resource name. Format: &#x60;projects/{project_number}/locations/{location}/instances/{instance_id}/osPolicyAssignments/{os_policy_assignment_id}/report&#x60;
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public OSPolicyAssignmentReport osPolicyAssignment(String osPolicyAssignment) {
    this.osPolicyAssignment = osPolicyAssignment;
    return this;
  }

  /**
   * Reference to the &#x60;OSPolicyAssignment&#x60; API resource that the &#x60;OSPolicy&#x60; belongs to. Format: &#x60;projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}&#x60;
   * @return osPolicyAssignment
   */
  @javax.annotation.Nullable
  public String getOsPolicyAssignment() {
    return osPolicyAssignment;
  }

  public void setOsPolicyAssignment(String osPolicyAssignment) {
    this.osPolicyAssignment = osPolicyAssignment;
  }


  public OSPolicyAssignmentReport osPolicyCompliances(List<OSPolicyAssignmentReportOSPolicyCompliance> osPolicyCompliances) {
    this.osPolicyCompliances = osPolicyCompliances;
    return this;
  }

  public OSPolicyAssignmentReport addOsPolicyCompliancesItem(OSPolicyAssignmentReportOSPolicyCompliance osPolicyCompliancesItem) {
    if (this.osPolicyCompliances == null) {
      this.osPolicyCompliances = new ArrayList<>();
    }
    this.osPolicyCompliances.add(osPolicyCompliancesItem);
    return this;
  }

  /**
   * Compliance data for each &#x60;OSPolicy&#x60; that is applied to the VM.
   * @return osPolicyCompliances
   */
  @javax.annotation.Nullable
  public List<OSPolicyAssignmentReportOSPolicyCompliance> getOsPolicyCompliances() {
    return osPolicyCompliances;
  }

  public void setOsPolicyCompliances(List<OSPolicyAssignmentReportOSPolicyCompliance> osPolicyCompliances) {
    this.osPolicyCompliances = osPolicyCompliances;
  }


  public OSPolicyAssignmentReport updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Timestamp for when the report was last generated.
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OSPolicyAssignmentReport osPolicyAssignmentReport = (OSPolicyAssignmentReport) o;
    return Objects.equals(this.instance, osPolicyAssignmentReport.instance) &&
        Objects.equals(this.lastRunId, osPolicyAssignmentReport.lastRunId) &&
        Objects.equals(this.name, osPolicyAssignmentReport.name) &&
        Objects.equals(this.osPolicyAssignment, osPolicyAssignmentReport.osPolicyAssignment) &&
        Objects.equals(this.osPolicyCompliances, osPolicyAssignmentReport.osPolicyCompliances) &&
        Objects.equals(this.updateTime, osPolicyAssignmentReport.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(instance, lastRunId, name, osPolicyAssignment, osPolicyCompliances, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OSPolicyAssignmentReport {\n");
    sb.append("    instance: ").append(toIndentedString(instance)).append("\n");
    sb.append("    lastRunId: ").append(toIndentedString(lastRunId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    osPolicyAssignment: ").append(toIndentedString(osPolicyAssignment)).append("\n");
    sb.append("    osPolicyCompliances: ").append(toIndentedString(osPolicyCompliances)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("instance");
    openapiFields.add("lastRunId");
    openapiFields.add("name");
    openapiFields.add("osPolicyAssignment");
    openapiFields.add("osPolicyCompliances");
    openapiFields.add("updateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OSPolicyAssignmentReport
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OSPolicyAssignmentReport.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OSPolicyAssignmentReport is not found in the empty JSON string", OSPolicyAssignmentReport.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OSPolicyAssignmentReport.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OSPolicyAssignmentReport` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("instance") != null && !jsonObj.get("instance").isJsonNull()) && !jsonObj.get("instance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instance").toString()));
      }
      if ((jsonObj.get("lastRunId") != null && !jsonObj.get("lastRunId").isJsonNull()) && !jsonObj.get("lastRunId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastRunId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastRunId").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("osPolicyAssignment") != null && !jsonObj.get("osPolicyAssignment").isJsonNull()) && !jsonObj.get("osPolicyAssignment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `osPolicyAssignment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("osPolicyAssignment").toString()));
      }
      if (jsonObj.get("osPolicyCompliances") != null && !jsonObj.get("osPolicyCompliances").isJsonNull()) {
        JsonArray jsonArrayosPolicyCompliances = jsonObj.getAsJsonArray("osPolicyCompliances");
        if (jsonArrayosPolicyCompliances != null) {
          // ensure the json data is an array
          if (!jsonObj.get("osPolicyCompliances").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `osPolicyCompliances` to be an array in the JSON string but got `%s`", jsonObj.get("osPolicyCompliances").toString()));
          }

          // validate the optional field `osPolicyCompliances` (array)
          for (int i = 0; i < jsonArrayosPolicyCompliances.size(); i++) {
            OSPolicyAssignmentReportOSPolicyCompliance.validateJsonElement(jsonArrayosPolicyCompliances.get(i));
          };
        }
      }
      if ((jsonObj.get("updateTime") != null && !jsonObj.get("updateTime").isJsonNull()) && !jsonObj.get("updateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OSPolicyAssignmentReport.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OSPolicyAssignmentReport' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OSPolicyAssignmentReport> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OSPolicyAssignmentReport.class));

       return (TypeAdapter<T>) new TypeAdapter<OSPolicyAssignmentReport>() {
           @Override
           public void write(JsonWriter out, OSPolicyAssignmentReport value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OSPolicyAssignmentReport read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OSPolicyAssignmentReport given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OSPolicyAssignmentReport
   * @throws IOException if the JSON string is invalid with respect to OSPolicyAssignmentReport
   */
  public static OSPolicyAssignmentReport fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OSPolicyAssignmentReport.class);
  }

  /**
   * Convert an instance of OSPolicyAssignmentReport to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

