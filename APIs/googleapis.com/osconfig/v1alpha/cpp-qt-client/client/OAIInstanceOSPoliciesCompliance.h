/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceOSPoliciesCompliance.h
 *
 * This API resource represents the OS policies compliance data for a Compute Engine virtual machine (VM) instance at a given point in time. A Compute Engine VM can have multiple OS policy assignments, and each assignment can have multiple OS policies. As a result, multiple OS policies could be applied to a single VM. You can use this API resource to determine both the compliance state of your VM as well as the compliance state of an individual OS policy. For more information, see [View compliance](https://cloud.google.com/compute/docs/os-configuration-management/view-compliance).
 */

#ifndef OAIInstanceOSPoliciesCompliance_H
#define OAIInstanceOSPoliciesCompliance_H

#include <QJsonObject>

#include "OAIInstanceOSPoliciesComplianceOSPolicyCompliance.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstanceOSPoliciesComplianceOSPolicyCompliance;

class OAIInstanceOSPoliciesCompliance : public OAIObject {
public:
    OAIInstanceOSPoliciesCompliance();
    OAIInstanceOSPoliciesCompliance(QString json);
    ~OAIInstanceOSPoliciesCompliance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDetailedState() const;
    void setDetailedState(const QString &detailed_state);
    bool is_detailed_state_Set() const;
    bool is_detailed_state_Valid() const;

    QString getDetailedStateReason() const;
    void setDetailedStateReason(const QString &detailed_state_reason);
    bool is_detailed_state_reason_Set() const;
    bool is_detailed_state_reason_Valid() const;

    QString getInstance() const;
    void setInstance(const QString &instance);
    bool is_instance_Set() const;
    bool is_instance_Valid() const;

    QString getLastComplianceCheckTime() const;
    void setLastComplianceCheckTime(const QString &last_compliance_check_time);
    bool is_last_compliance_check_time_Set() const;
    bool is_last_compliance_check_time_Valid() const;

    QString getLastComplianceRunId() const;
    void setLastComplianceRunId(const QString &last_compliance_run_id);
    bool is_last_compliance_run_id_Set() const;
    bool is_last_compliance_run_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIInstanceOSPoliciesComplianceOSPolicyCompliance> getOsPolicyCompliances() const;
    void setOsPolicyCompliances(const QList<OAIInstanceOSPoliciesComplianceOSPolicyCompliance> &os_policy_compliances);
    bool is_os_policy_compliances_Set() const;
    bool is_os_policy_compliances_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_detailed_state;
    bool m_detailed_state_isSet;
    bool m_detailed_state_isValid;

    QString m_detailed_state_reason;
    bool m_detailed_state_reason_isSet;
    bool m_detailed_state_reason_isValid;

    QString m_instance;
    bool m_instance_isSet;
    bool m_instance_isValid;

    QString m_last_compliance_check_time;
    bool m_last_compliance_check_time_isSet;
    bool m_last_compliance_check_time_isValid;

    QString m_last_compliance_run_id;
    bool m_last_compliance_run_id_isSet;
    bool m_last_compliance_run_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIInstanceOSPoliciesComplianceOSPolicyCompliance> m_os_policy_compliances;
    bool m_os_policy_compliances_isSet;
    bool m_os_policy_compliances_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceOSPoliciesCompliance)

#endif // OAIInstanceOSPoliciesCompliance_H
