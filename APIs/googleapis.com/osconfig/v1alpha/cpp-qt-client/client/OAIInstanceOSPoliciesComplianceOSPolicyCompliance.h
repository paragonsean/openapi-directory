/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInstanceOSPoliciesComplianceOSPolicyCompliance.h
 *
 * Compliance data for an OS policy
 */

#ifndef OAIInstanceOSPoliciesComplianceOSPolicyCompliance_H
#define OAIInstanceOSPoliciesComplianceOSPolicyCompliance_H

#include <QJsonObject>

#include "OAIOSPolicyResourceCompliance.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOSPolicyResourceCompliance;

class OAIInstanceOSPoliciesComplianceOSPolicyCompliance : public OAIObject {
public:
    OAIInstanceOSPoliciesComplianceOSPolicyCompliance();
    OAIInstanceOSPoliciesComplianceOSPolicyCompliance(QString json);
    ~OAIInstanceOSPoliciesComplianceOSPolicyCompliance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOsPolicyAssignment() const;
    void setOsPolicyAssignment(const QString &os_policy_assignment);
    bool is_os_policy_assignment_Set() const;
    bool is_os_policy_assignment_Valid() const;

    QString getOsPolicyId() const;
    void setOsPolicyId(const QString &os_policy_id);
    bool is_os_policy_id_Set() const;
    bool is_os_policy_id_Valid() const;

    QList<OAIOSPolicyResourceCompliance> getOsPolicyResourceCompliances() const;
    void setOsPolicyResourceCompliances(const QList<OAIOSPolicyResourceCompliance> &os_policy_resource_compliances);
    bool is_os_policy_resource_compliances_Set() const;
    bool is_os_policy_resource_compliances_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_os_policy_assignment;
    bool m_os_policy_assignment_isSet;
    bool m_os_policy_assignment_isValid;

    QString m_os_policy_id;
    bool m_os_policy_id_isSet;
    bool m_os_policy_id_isValid;

    QList<OAIOSPolicyResourceCompliance> m_os_policy_resource_compliances;
    bool m_os_policy_resource_compliances_isSet;
    bool m_os_policy_resource_compliances_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInstanceOSPoliciesComplianceOSPolicyCompliance)

#endif // OAIInstanceOSPoliciesComplianceOSPolicyCompliance_H
