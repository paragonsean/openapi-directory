/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInventorySoftwarePackage.h
 *
 * Software package information of the operating system.
 */

#ifndef OAIInventorySoftwarePackage_H
#define OAIInventorySoftwarePackage_H

#include <QJsonObject>

#include "OAIInventoryVersionedPackage.h"
#include "OAIInventoryWindowsApplication.h"
#include "OAIInventoryWindowsQuickFixEngineeringPackage.h"
#include "OAIInventoryWindowsUpdatePackage.h"
#include "OAIInventoryZypperPatch.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInventoryVersionedPackage;
class OAIInventoryWindowsQuickFixEngineeringPackage;
class OAIInventoryWindowsApplication;
class OAIInventoryWindowsUpdatePackage;
class OAIInventoryZypperPatch;

class OAIInventorySoftwarePackage : public OAIObject {
public:
    OAIInventorySoftwarePackage();
    OAIInventorySoftwarePackage(QString json);
    ~OAIInventorySoftwarePackage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInventoryVersionedPackage getAptPackage() const;
    void setAptPackage(const OAIInventoryVersionedPackage &apt_package);
    bool is_apt_package_Set() const;
    bool is_apt_package_Valid() const;

    OAIInventoryVersionedPackage getCosPackage() const;
    void setCosPackage(const OAIInventoryVersionedPackage &cos_package);
    bool is_cos_package_Set() const;
    bool is_cos_package_Valid() const;

    OAIInventoryVersionedPackage getGoogetPackage() const;
    void setGoogetPackage(const OAIInventoryVersionedPackage &googet_package);
    bool is_googet_package_Set() const;
    bool is_googet_package_Valid() const;

    OAIInventoryWindowsQuickFixEngineeringPackage getQfePackage() const;
    void setQfePackage(const OAIInventoryWindowsQuickFixEngineeringPackage &qfe_package);
    bool is_qfe_package_Set() const;
    bool is_qfe_package_Valid() const;

    OAIInventoryWindowsApplication getWindowsApplication() const;
    void setWindowsApplication(const OAIInventoryWindowsApplication &windows_application);
    bool is_windows_application_Set() const;
    bool is_windows_application_Valid() const;

    OAIInventoryWindowsUpdatePackage getWuaPackage() const;
    void setWuaPackage(const OAIInventoryWindowsUpdatePackage &wua_package);
    bool is_wua_package_Set() const;
    bool is_wua_package_Valid() const;

    OAIInventoryVersionedPackage getYumPackage() const;
    void setYumPackage(const OAIInventoryVersionedPackage &yum_package);
    bool is_yum_package_Set() const;
    bool is_yum_package_Valid() const;

    OAIInventoryVersionedPackage getZypperPackage() const;
    void setZypperPackage(const OAIInventoryVersionedPackage &zypper_package);
    bool is_zypper_package_Set() const;
    bool is_zypper_package_Valid() const;

    OAIInventoryZypperPatch getZypperPatch() const;
    void setZypperPatch(const OAIInventoryZypperPatch &zypper_patch);
    bool is_zypper_patch_Set() const;
    bool is_zypper_patch_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInventoryVersionedPackage m_apt_package;
    bool m_apt_package_isSet;
    bool m_apt_package_isValid;

    OAIInventoryVersionedPackage m_cos_package;
    bool m_cos_package_isSet;
    bool m_cos_package_isValid;

    OAIInventoryVersionedPackage m_googet_package;
    bool m_googet_package_isSet;
    bool m_googet_package_isValid;

    OAIInventoryWindowsQuickFixEngineeringPackage m_qfe_package;
    bool m_qfe_package_isSet;
    bool m_qfe_package_isValid;

    OAIInventoryWindowsApplication m_windows_application;
    bool m_windows_application_isSet;
    bool m_windows_application_isValid;

    OAIInventoryWindowsUpdatePackage m_wua_package;
    bool m_wua_package_isSet;
    bool m_wua_package_isValid;

    OAIInventoryVersionedPackage m_yum_package;
    bool m_yum_package_isSet;
    bool m_yum_package_isValid;

    OAIInventoryVersionedPackage m_zypper_package;
    bool m_zypper_package_isSet;
    bool m_zypper_package_isValid;

    OAIInventoryZypperPatch m_zypper_patch;
    bool m_zypper_patch_isSet;
    bool m_zypper_patch_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInventorySoftwarePackage)

#endif // OAIInventorySoftwarePackage_H
