/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOSPolicyResourceComplianceExecResourceOutput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOSPolicyResourceComplianceExecResourceOutput::OAIOSPolicyResourceComplianceExecResourceOutput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOSPolicyResourceComplianceExecResourceOutput::OAIOSPolicyResourceComplianceExecResourceOutput() {
    this->initializeModel();
}

OAIOSPolicyResourceComplianceExecResourceOutput::~OAIOSPolicyResourceComplianceExecResourceOutput() {}

void OAIOSPolicyResourceComplianceExecResourceOutput::initializeModel() {

    m_enforcement_output_isSet = false;
    m_enforcement_output_isValid = false;
}

void OAIOSPolicyResourceComplianceExecResourceOutput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOSPolicyResourceComplianceExecResourceOutput::fromJsonObject(QJsonObject json) {

    m_enforcement_output_isValid = ::OpenAPI::fromJsonValue(m_enforcement_output, json[QString("enforcementOutput")]);
    m_enforcement_output_isSet = !json[QString("enforcementOutput")].isNull() && m_enforcement_output_isValid;
}

QString OAIOSPolicyResourceComplianceExecResourceOutput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOSPolicyResourceComplianceExecResourceOutput::asJsonObject() const {
    QJsonObject obj;
    if (m_enforcement_output_isSet) {
        obj.insert(QString("enforcementOutput"), ::OpenAPI::toJsonValue(m_enforcement_output));
    }
    return obj;
}

QByteArray OAIOSPolicyResourceComplianceExecResourceOutput::getEnforcementOutput() const {
    return m_enforcement_output;
}
void OAIOSPolicyResourceComplianceExecResourceOutput::setEnforcementOutput(const QByteArray &enforcement_output) {
    m_enforcement_output = enforcement_output;
    m_enforcement_output_isSet = true;
}

bool OAIOSPolicyResourceComplianceExecResourceOutput::is_enforcement_output_Set() const{
    return m_enforcement_output_isSet;
}

bool OAIOSPolicyResourceComplianceExecResourceOutput::is_enforcement_output_Valid() const{
    return m_enforcement_output_isValid;
}

bool OAIOSPolicyResourceComplianceExecResourceOutput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enforcement_output_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOSPolicyResourceComplianceExecResourceOutput::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
