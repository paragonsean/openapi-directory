/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOSPolicyResourcePackageResourceRPM.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOSPolicyResourcePackageResourceRPM::OAIOSPolicyResourcePackageResourceRPM(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOSPolicyResourcePackageResourceRPM::OAIOSPolicyResourcePackageResourceRPM() {
    this->initializeModel();
}

OAIOSPolicyResourcePackageResourceRPM::~OAIOSPolicyResourcePackageResourceRPM() {}

void OAIOSPolicyResourcePackageResourceRPM::initializeModel() {

    m_pull_deps_isSet = false;
    m_pull_deps_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;
}

void OAIOSPolicyResourcePackageResourceRPM::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOSPolicyResourcePackageResourceRPM::fromJsonObject(QJsonObject json) {

    m_pull_deps_isValid = ::OpenAPI::fromJsonValue(m_pull_deps, json[QString("pullDeps")]);
    m_pull_deps_isSet = !json[QString("pullDeps")].isNull() && m_pull_deps_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("source")]);
    m_source_isSet = !json[QString("source")].isNull() && m_source_isValid;
}

QString OAIOSPolicyResourcePackageResourceRPM::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOSPolicyResourcePackageResourceRPM::asJsonObject() const {
    QJsonObject obj;
    if (m_pull_deps_isSet) {
        obj.insert(QString("pullDeps"), ::OpenAPI::toJsonValue(m_pull_deps));
    }
    if (m_source.isSet()) {
        obj.insert(QString("source"), ::OpenAPI::toJsonValue(m_source));
    }
    return obj;
}

bool OAIOSPolicyResourcePackageResourceRPM::isPullDeps() const {
    return m_pull_deps;
}
void OAIOSPolicyResourcePackageResourceRPM::setPullDeps(const bool &pull_deps) {
    m_pull_deps = pull_deps;
    m_pull_deps_isSet = true;
}

bool OAIOSPolicyResourcePackageResourceRPM::is_pull_deps_Set() const{
    return m_pull_deps_isSet;
}

bool OAIOSPolicyResourcePackageResourceRPM::is_pull_deps_Valid() const{
    return m_pull_deps_isValid;
}

OAIOSPolicyResourceFile OAIOSPolicyResourcePackageResourceRPM::getSource() const {
    return m_source;
}
void OAIOSPolicyResourcePackageResourceRPM::setSource(const OAIOSPolicyResourceFile &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIOSPolicyResourcePackageResourceRPM::is_source_Set() const{
    return m_source_isSet;
}

bool OAIOSPolicyResourcePackageResourceRPM::is_source_Valid() const{
    return m_source_isValid;
}

bool OAIOSPolicyResourcePackageResourceRPM::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pull_deps_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOSPolicyResourcePackageResourceRPM::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
