/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOSPolicyResourceRepositoryResourceAptRepository.h
 *
 * Represents a single apt package repository. These will be added to a repo file that will be managed at &#x60;/etc/apt/sources.list.d/google_osconfig.list&#x60;.
 */

#ifndef OAIOSPolicyResourceRepositoryResourceAptRepository_H
#define OAIOSPolicyResourceRepositoryResourceAptRepository_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOSPolicyResourceRepositoryResourceAptRepository : public OAIObject {
public:
    OAIOSPolicyResourceRepositoryResourceAptRepository();
    OAIOSPolicyResourceRepositoryResourceAptRepository(QString json);
    ~OAIOSPolicyResourceRepositoryResourceAptRepository() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArchiveType() const;
    void setArchiveType(const QString &archive_type);
    bool is_archive_type_Set() const;
    bool is_archive_type_Valid() const;

    QList<QString> getComponents() const;
    void setComponents(const QList<QString> &components);
    bool is_components_Set() const;
    bool is_components_Valid() const;

    QString getDistribution() const;
    void setDistribution(const QString &distribution);
    bool is_distribution_Set() const;
    bool is_distribution_Valid() const;

    QString getGpgKey() const;
    void setGpgKey(const QString &gpg_key);
    bool is_gpg_key_Set() const;
    bool is_gpg_key_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_archive_type;
    bool m_archive_type_isSet;
    bool m_archive_type_isValid;

    QList<QString> m_components;
    bool m_components_isSet;
    bool m_components_isValid;

    QString m_distribution;
    bool m_distribution_isSet;
    bool m_distribution_isValid;

    QString m_gpg_key;
    bool m_gpg_key_isSet;
    bool m_gpg_key_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOSPolicyResourceRepositoryResourceAptRepository)

#endif // OAIOSPolicyResourceRepositoryResourceAptRepository_H
