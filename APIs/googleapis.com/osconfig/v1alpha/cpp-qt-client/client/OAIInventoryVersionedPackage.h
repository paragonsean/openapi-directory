/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1alpha
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInventoryVersionedPackage.h
 *
 * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
 */

#ifndef OAIInventoryVersionedPackage_H
#define OAIInventoryVersionedPackage_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInventoryVersionedPackage : public OAIObject {
public:
    OAIInventoryVersionedPackage();
    OAIInventoryVersionedPackage(QString json);
    ~OAIInventoryVersionedPackage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArchitecture() const;
    void setArchitecture(const QString &architecture);
    bool is_architecture_Set() const;
    bool is_architecture_Valid() const;

    QString getPackageName() const;
    void setPackageName(const QString &package_name);
    bool is_package_name_Set() const;
    bool is_package_name_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_architecture;
    bool m_architecture_isSet;
    bool m_architecture_isValid;

    QString m_package_name;
    bool m_package_name_isSet;
    bool m_package_name_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInventoryVersionedPackage)

#endif // OAIInventoryVersionedPackage_H
