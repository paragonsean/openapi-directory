/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VulnerabilityReportVulnerabilityItem model module.
 * @module model/VulnerabilityReportVulnerabilityItem
 * @version v1
 */
class VulnerabilityReportVulnerabilityItem {
    /**
     * Constructs a new <code>VulnerabilityReportVulnerabilityItem</code>.
     * OS inventory item that is affected by a vulnerability or fixed as a result of a vulnerability.
     * @alias module:model/VulnerabilityReportVulnerabilityItem
     */
    constructor() { 
        
        VulnerabilityReportVulnerabilityItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VulnerabilityReportVulnerabilityItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VulnerabilityReportVulnerabilityItem} obj Optional instance to populate.
     * @return {module:model/VulnerabilityReportVulnerabilityItem} The populated <code>VulnerabilityReportVulnerabilityItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VulnerabilityReportVulnerabilityItem();

            if (data.hasOwnProperty('availableInventoryItemId')) {
                obj['availableInventoryItemId'] = ApiClient.convertToType(data['availableInventoryItemId'], 'String');
            }
            if (data.hasOwnProperty('fixedCpeUri')) {
                obj['fixedCpeUri'] = ApiClient.convertToType(data['fixedCpeUri'], 'String');
            }
            if (data.hasOwnProperty('installedInventoryItemId')) {
                obj['installedInventoryItemId'] = ApiClient.convertToType(data['installedInventoryItemId'], 'String');
            }
            if (data.hasOwnProperty('upstreamFix')) {
                obj['upstreamFix'] = ApiClient.convertToType(data['upstreamFix'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VulnerabilityReportVulnerabilityItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VulnerabilityReportVulnerabilityItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['availableInventoryItemId'] && !(typeof data['availableInventoryItemId'] === 'string' || data['availableInventoryItemId'] instanceof String)) {
            throw new Error("Expected the field `availableInventoryItemId` to be a primitive type in the JSON string but got " + data['availableInventoryItemId']);
        }
        // ensure the json data is a string
        if (data['fixedCpeUri'] && !(typeof data['fixedCpeUri'] === 'string' || data['fixedCpeUri'] instanceof String)) {
            throw new Error("Expected the field `fixedCpeUri` to be a primitive type in the JSON string but got " + data['fixedCpeUri']);
        }
        // ensure the json data is a string
        if (data['installedInventoryItemId'] && !(typeof data['installedInventoryItemId'] === 'string' || data['installedInventoryItemId'] instanceof String)) {
            throw new Error("Expected the field `installedInventoryItemId` to be a primitive type in the JSON string but got " + data['installedInventoryItemId']);
        }
        // ensure the json data is a string
        if (data['upstreamFix'] && !(typeof data['upstreamFix'] === 'string' || data['upstreamFix'] instanceof String)) {
            throw new Error("Expected the field `upstreamFix` to be a primitive type in the JSON string but got " + data['upstreamFix']);
        }

        return true;
    }


}



/**
 * Corresponds to the `AVAILABLE_PACKAGE` inventory item on the VM. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. If there is no available fix, the field is empty. The `inventory_item` value specifies the latest `SoftwarePackage` available to the VM that fixes the vulnerability.
 * @member {String} availableInventoryItemId
 */
VulnerabilityReportVulnerabilityItem.prototype['availableInventoryItemId'] = undefined;

/**
 * The recommended [CPE URI](https://cpe.mitre.org/specification/) update that contains a fix for this vulnerability.
 * @member {String} fixedCpeUri
 */
VulnerabilityReportVulnerabilityItem.prototype['fixedCpeUri'] = undefined;

/**
 * Corresponds to the `INSTALLED_PACKAGE` inventory item on the VM. This field displays the inventory items affected by this vulnerability. If the vulnerability report was not updated after the VM inventory update, these values might not display in VM inventory. For some operating systems, this field might be empty.
 * @member {String} installedInventoryItemId
 */
VulnerabilityReportVulnerabilityItem.prototype['installedInventoryItemId'] = undefined;

/**
 * The upstream OS patch, packages or KB that fixes the vulnerability.
 * @member {String} upstreamFix
 */
VulnerabilityReportVulnerabilityItem.prototype['upstreamFix'] = undefined;






export default VulnerabilityReportVulnerabilityItem;

