/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OSPolicyResourceFile from './OSPolicyResourceFile';

/**
 * The OSPolicyResourceExecResourceExec model module.
 * @module model/OSPolicyResourceExecResourceExec
 * @version v1
 */
class OSPolicyResourceExecResourceExec {
    /**
     * Constructs a new <code>OSPolicyResourceExecResourceExec</code>.
     * A file or script to execute.
     * @alias module:model/OSPolicyResourceExecResourceExec
     */
    constructor() { 
        
        OSPolicyResourceExecResourceExec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OSPolicyResourceExecResourceExec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OSPolicyResourceExecResourceExec} obj Optional instance to populate.
     * @return {module:model/OSPolicyResourceExecResourceExec} The populated <code>OSPolicyResourceExecResourceExec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OSPolicyResourceExecResourceExec();

            if (data.hasOwnProperty('args')) {
                obj['args'] = ApiClient.convertToType(data['args'], ['String']);
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = OSPolicyResourceFile.constructFromObject(data['file']);
            }
            if (data.hasOwnProperty('interpreter')) {
                obj['interpreter'] = ApiClient.convertToType(data['interpreter'], 'String');
            }
            if (data.hasOwnProperty('outputFilePath')) {
                obj['outputFilePath'] = ApiClient.convertToType(data['outputFilePath'], 'String');
            }
            if (data.hasOwnProperty('script')) {
                obj['script'] = ApiClient.convertToType(data['script'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OSPolicyResourceExecResourceExec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OSPolicyResourceExecResourceExec</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['args'])) {
            throw new Error("Expected the field `args` to be an array in the JSON data but got " + data['args']);
        }
        // validate the optional field `file`
        if (data['file']) { // data not null
          OSPolicyResourceFile.validateJSON(data['file']);
        }
        // ensure the json data is a string
        if (data['interpreter'] && !(typeof data['interpreter'] === 'string' || data['interpreter'] instanceof String)) {
            throw new Error("Expected the field `interpreter` to be a primitive type in the JSON string but got " + data['interpreter']);
        }
        // ensure the json data is a string
        if (data['outputFilePath'] && !(typeof data['outputFilePath'] === 'string' || data['outputFilePath'] instanceof String)) {
            throw new Error("Expected the field `outputFilePath` to be a primitive type in the JSON string but got " + data['outputFilePath']);
        }
        // ensure the json data is a string
        if (data['script'] && !(typeof data['script'] === 'string' || data['script'] instanceof String)) {
            throw new Error("Expected the field `script` to be a primitive type in the JSON string but got " + data['script']);
        }

        return true;
    }


}



/**
 * Optional arguments to pass to the source during execution.
 * @member {Array.<String>} args
 */
OSPolicyResourceExecResourceExec.prototype['args'] = undefined;

/**
 * @member {module:model/OSPolicyResourceFile} file
 */
OSPolicyResourceExecResourceExec.prototype['file'] = undefined;

/**
 * Required. The script interpreter to use.
 * @member {module:model/OSPolicyResourceExecResourceExec.InterpreterEnum} interpreter
 */
OSPolicyResourceExecResourceExec.prototype['interpreter'] = undefined;

/**
 * Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.
 * @member {String} outputFilePath
 */
OSPolicyResourceExecResourceExec.prototype['outputFilePath'] = undefined;

/**
 * An inline script. The size of the script is limited to 32KiB.
 * @member {String} script
 */
OSPolicyResourceExecResourceExec.prototype['script'] = undefined;





/**
 * Allowed values for the <code>interpreter</code> property.
 * @enum {String}
 * @readonly
 */
OSPolicyResourceExecResourceExec['InterpreterEnum'] = {

    /**
     * value: "INTERPRETER_UNSPECIFIED"
     * @const
     */
    "INTERPRETER_UNSPECIFIED": "INTERPRETER_UNSPECIFIED",

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "SHELL"
     * @const
     */
    "SHELL": "SHELL",

    /**
     * value: "POWERSHELL"
     * @const
     */
    "POWERSHELL": "POWERSHELL"
};



export default OSPolicyResourceExecResourceExec;

