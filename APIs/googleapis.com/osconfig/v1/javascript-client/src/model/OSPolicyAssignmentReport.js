/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OSPolicyAssignmentReportOSPolicyCompliance from './OSPolicyAssignmentReportOSPolicyCompliance';

/**
 * The OSPolicyAssignmentReport model module.
 * @module model/OSPolicyAssignmentReport
 * @version v1
 */
class OSPolicyAssignmentReport {
    /**
     * Constructs a new <code>OSPolicyAssignmentReport</code>.
     * A report of the OS policy assignment status for a given instance.
     * @alias module:model/OSPolicyAssignmentReport
     */
    constructor() { 
        
        OSPolicyAssignmentReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OSPolicyAssignmentReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OSPolicyAssignmentReport} obj Optional instance to populate.
     * @return {module:model/OSPolicyAssignmentReport} The populated <code>OSPolicyAssignmentReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OSPolicyAssignmentReport();

            if (data.hasOwnProperty('instance')) {
                obj['instance'] = ApiClient.convertToType(data['instance'], 'String');
            }
            if (data.hasOwnProperty('lastRunId')) {
                obj['lastRunId'] = ApiClient.convertToType(data['lastRunId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('osPolicyAssignment')) {
                obj['osPolicyAssignment'] = ApiClient.convertToType(data['osPolicyAssignment'], 'String');
            }
            if (data.hasOwnProperty('osPolicyCompliances')) {
                obj['osPolicyCompliances'] = ApiClient.convertToType(data['osPolicyCompliances'], [OSPolicyAssignmentReportOSPolicyCompliance]);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OSPolicyAssignmentReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OSPolicyAssignmentReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['instance'] && !(typeof data['instance'] === 'string' || data['instance'] instanceof String)) {
            throw new Error("Expected the field `instance` to be a primitive type in the JSON string but got " + data['instance']);
        }
        // ensure the json data is a string
        if (data['lastRunId'] && !(typeof data['lastRunId'] === 'string' || data['lastRunId'] instanceof String)) {
            throw new Error("Expected the field `lastRunId` to be a primitive type in the JSON string but got " + data['lastRunId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['osPolicyAssignment'] && !(typeof data['osPolicyAssignment'] === 'string' || data['osPolicyAssignment'] instanceof String)) {
            throw new Error("Expected the field `osPolicyAssignment` to be a primitive type in the JSON string but got " + data['osPolicyAssignment']);
        }
        if (data['osPolicyCompliances']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['osPolicyCompliances'])) {
                throw new Error("Expected the field `osPolicyCompliances` to be an array in the JSON data but got " + data['osPolicyCompliances']);
            }
            // validate the optional field `osPolicyCompliances` (array)
            for (const item of data['osPolicyCompliances']) {
                OSPolicyAssignmentReportOSPolicyCompliance.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * The Compute Engine VM instance name.
 * @member {String} instance
 */
OSPolicyAssignmentReport.prototype['instance'] = undefined;

/**
 * Unique identifier of the last attempted run to apply the OS policies associated with this assignment on the VM. This ID is logged by the OS Config agent while applying the OS policies associated with this assignment on the VM. NOTE: If the service is unable to successfully connect to the agent for this run, then this id will not be available in the agent logs.
 * @member {String} lastRunId
 */
OSPolicyAssignmentReport.prototype['lastRunId'] = undefined;

/**
 * The `OSPolicyAssignmentReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/osPolicyAssignments/{os_policy_assignment_id}/report`
 * @member {String} name
 */
OSPolicyAssignmentReport.prototype['name'] = undefined;

/**
 * Reference to the `OSPolicyAssignment` API resource that the `OSPolicy` belongs to. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}`
 * @member {String} osPolicyAssignment
 */
OSPolicyAssignmentReport.prototype['osPolicyAssignment'] = undefined;

/**
 * Compliance data for each `OSPolicy` that is applied to the VM.
 * @member {Array.<module:model/OSPolicyAssignmentReportOSPolicyCompliance>} osPolicyCompliances
 */
OSPolicyAssignmentReport.prototype['osPolicyCompliances'] = undefined;

/**
 * Timestamp for when the report was last generated.
 * @member {String} updateTime
 */
OSPolicyAssignmentReport.prototype['updateTime'] = undefined;






export default OSPolicyAssignmentReport;

