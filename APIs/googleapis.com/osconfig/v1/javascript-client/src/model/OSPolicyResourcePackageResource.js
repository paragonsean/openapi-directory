/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OSPolicyResourcePackageResourceAPT from './OSPolicyResourcePackageResourceAPT';
import OSPolicyResourcePackageResourceDeb from './OSPolicyResourcePackageResourceDeb';
import OSPolicyResourcePackageResourceGooGet from './OSPolicyResourcePackageResourceGooGet';
import OSPolicyResourcePackageResourceMSI from './OSPolicyResourcePackageResourceMSI';
import OSPolicyResourcePackageResourceRPM from './OSPolicyResourcePackageResourceRPM';
import OSPolicyResourcePackageResourceYUM from './OSPolicyResourcePackageResourceYUM';
import OSPolicyResourcePackageResourceZypper from './OSPolicyResourcePackageResourceZypper';

/**
 * The OSPolicyResourcePackageResource model module.
 * @module model/OSPolicyResourcePackageResource
 * @version v1
 */
class OSPolicyResourcePackageResource {
    /**
     * Constructs a new <code>OSPolicyResourcePackageResource</code>.
     * A resource that manages a system package.
     * @alias module:model/OSPolicyResourcePackageResource
     */
    constructor() { 
        
        OSPolicyResourcePackageResource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OSPolicyResourcePackageResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OSPolicyResourcePackageResource} obj Optional instance to populate.
     * @return {module:model/OSPolicyResourcePackageResource} The populated <code>OSPolicyResourcePackageResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OSPolicyResourcePackageResource();

            if (data.hasOwnProperty('apt')) {
                obj['apt'] = OSPolicyResourcePackageResourceAPT.constructFromObject(data['apt']);
            }
            if (data.hasOwnProperty('deb')) {
                obj['deb'] = OSPolicyResourcePackageResourceDeb.constructFromObject(data['deb']);
            }
            if (data.hasOwnProperty('desiredState')) {
                obj['desiredState'] = ApiClient.convertToType(data['desiredState'], 'String');
            }
            if (data.hasOwnProperty('googet')) {
                obj['googet'] = OSPolicyResourcePackageResourceGooGet.constructFromObject(data['googet']);
            }
            if (data.hasOwnProperty('msi')) {
                obj['msi'] = OSPolicyResourcePackageResourceMSI.constructFromObject(data['msi']);
            }
            if (data.hasOwnProperty('rpm')) {
                obj['rpm'] = OSPolicyResourcePackageResourceRPM.constructFromObject(data['rpm']);
            }
            if (data.hasOwnProperty('yum')) {
                obj['yum'] = OSPolicyResourcePackageResourceYUM.constructFromObject(data['yum']);
            }
            if (data.hasOwnProperty('zypper')) {
                obj['zypper'] = OSPolicyResourcePackageResourceZypper.constructFromObject(data['zypper']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OSPolicyResourcePackageResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OSPolicyResourcePackageResource</code>.
     */
    static validateJSON(data) {
        // validate the optional field `apt`
        if (data['apt']) { // data not null
          OSPolicyResourcePackageResourceAPT.validateJSON(data['apt']);
        }
        // validate the optional field `deb`
        if (data['deb']) { // data not null
          OSPolicyResourcePackageResourceDeb.validateJSON(data['deb']);
        }
        // ensure the json data is a string
        if (data['desiredState'] && !(typeof data['desiredState'] === 'string' || data['desiredState'] instanceof String)) {
            throw new Error("Expected the field `desiredState` to be a primitive type in the JSON string but got " + data['desiredState']);
        }
        // validate the optional field `googet`
        if (data['googet']) { // data not null
          OSPolicyResourcePackageResourceGooGet.validateJSON(data['googet']);
        }
        // validate the optional field `msi`
        if (data['msi']) { // data not null
          OSPolicyResourcePackageResourceMSI.validateJSON(data['msi']);
        }
        // validate the optional field `rpm`
        if (data['rpm']) { // data not null
          OSPolicyResourcePackageResourceRPM.validateJSON(data['rpm']);
        }
        // validate the optional field `yum`
        if (data['yum']) { // data not null
          OSPolicyResourcePackageResourceYUM.validateJSON(data['yum']);
        }
        // validate the optional field `zypper`
        if (data['zypper']) { // data not null
          OSPolicyResourcePackageResourceZypper.validateJSON(data['zypper']);
        }

        return true;
    }


}



/**
 * @member {module:model/OSPolicyResourcePackageResourceAPT} apt
 */
OSPolicyResourcePackageResource.prototype['apt'] = undefined;

/**
 * @member {module:model/OSPolicyResourcePackageResourceDeb} deb
 */
OSPolicyResourcePackageResource.prototype['deb'] = undefined;

/**
 * Required. The desired state the agent should maintain for this package.
 * @member {module:model/OSPolicyResourcePackageResource.DesiredStateEnum} desiredState
 */
OSPolicyResourcePackageResource.prototype['desiredState'] = undefined;

/**
 * @member {module:model/OSPolicyResourcePackageResourceGooGet} googet
 */
OSPolicyResourcePackageResource.prototype['googet'] = undefined;

/**
 * @member {module:model/OSPolicyResourcePackageResourceMSI} msi
 */
OSPolicyResourcePackageResource.prototype['msi'] = undefined;

/**
 * @member {module:model/OSPolicyResourcePackageResourceRPM} rpm
 */
OSPolicyResourcePackageResource.prototype['rpm'] = undefined;

/**
 * @member {module:model/OSPolicyResourcePackageResourceYUM} yum
 */
OSPolicyResourcePackageResource.prototype['yum'] = undefined;

/**
 * @member {module:model/OSPolicyResourcePackageResourceZypper} zypper
 */
OSPolicyResourcePackageResource.prototype['zypper'] = undefined;





/**
 * Allowed values for the <code>desiredState</code> property.
 * @enum {String}
 * @readonly
 */
OSPolicyResourcePackageResource['DesiredStateEnum'] = {

    /**
     * value: "DESIRED_STATE_UNSPECIFIED"
     * @const
     */
    "DESIRED_STATE_UNSPECIFIED": "DESIRED_STATE_UNSPECIFIED",

    /**
     * value: "INSTALLED"
     * @const
     */
    "INSTALLED": "INSTALLED",

    /**
     * value: "REMOVED"
     * @const
     */
    "REMOVED": "REMOVED"
};



export default OSPolicyResourcePackageResource;

