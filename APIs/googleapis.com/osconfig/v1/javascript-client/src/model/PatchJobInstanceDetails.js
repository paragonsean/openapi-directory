/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatchJobInstanceDetails model module.
 * @module model/PatchJobInstanceDetails
 * @version v1
 */
class PatchJobInstanceDetails {
    /**
     * Constructs a new <code>PatchJobInstanceDetails</code>.
     * Patch details for a VM instance. For more information about reviewing VM instance details, see [Listing all VM instance details for a specific patch job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details).
     * @alias module:model/PatchJobInstanceDetails
     */
    constructor() { 
        
        PatchJobInstanceDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchJobInstanceDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchJobInstanceDetails} obj Optional instance to populate.
     * @return {module:model/PatchJobInstanceDetails} The populated <code>PatchJobInstanceDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchJobInstanceDetails();

            if (data.hasOwnProperty('attemptCount')) {
                obj['attemptCount'] = ApiClient.convertToType(data['attemptCount'], 'String');
            }
            if (data.hasOwnProperty('failureReason')) {
                obj['failureReason'] = ApiClient.convertToType(data['failureReason'], 'String');
            }
            if (data.hasOwnProperty('instanceSystemId')) {
                obj['instanceSystemId'] = ApiClient.convertToType(data['instanceSystemId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchJobInstanceDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchJobInstanceDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['attemptCount'] && !(typeof data['attemptCount'] === 'string' || data['attemptCount'] instanceof String)) {
            throw new Error("Expected the field `attemptCount` to be a primitive type in the JSON string but got " + data['attemptCount']);
        }
        // ensure the json data is a string
        if (data['failureReason'] && !(typeof data['failureReason'] === 'string' || data['failureReason'] instanceof String)) {
            throw new Error("Expected the field `failureReason` to be a primitive type in the JSON string but got " + data['failureReason']);
        }
        // ensure the json data is a string
        if (data['instanceSystemId'] && !(typeof data['instanceSystemId'] === 'string' || data['instanceSystemId'] instanceof String)) {
            throw new Error("Expected the field `instanceSystemId` to be a primitive type in the JSON string but got " + data['instanceSystemId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}



/**
 * The number of times the agent that the agent attempts to apply the patch.
 * @member {String} attemptCount
 */
PatchJobInstanceDetails.prototype['attemptCount'] = undefined;

/**
 * If the patch fails, this field provides the reason.
 * @member {String} failureReason
 */
PatchJobInstanceDetails.prototype['failureReason'] = undefined;

/**
 * The unique identifier for the instance. This identifier is defined by the server.
 * @member {String} instanceSystemId
 */
PatchJobInstanceDetails.prototype['instanceSystemId'] = undefined;

/**
 * The instance name in the form `projects/_*_/zones/_*_/instances/_*`
 * @member {String} name
 */
PatchJobInstanceDetails.prototype['name'] = undefined;

/**
 * Current state of instance patch.
 * @member {module:model/PatchJobInstanceDetails.StateEnum} state
 */
PatchJobInstanceDetails.prototype['state'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
PatchJobInstanceDetails['StateEnum'] = {

    /**
     * value: "PATCH_STATE_UNSPECIFIED"
     * @const
     */
    "PATCH_STATE_UNSPECIFIED": "PATCH_STATE_UNSPECIFIED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE",

    /**
     * value: "NOTIFIED"
     * @const
     */
    "NOTIFIED": "NOTIFIED",

    /**
     * value: "STARTED"
     * @const
     */
    "STARTED": "STARTED",

    /**
     * value: "DOWNLOADING_PATCHES"
     * @const
     */
    "DOWNLOADING_PATCHES": "DOWNLOADING_PATCHES",

    /**
     * value: "APPLYING_PATCHES"
     * @const
     */
    "APPLYING_PATCHES": "APPLYING_PATCHES",

    /**
     * value: "REBOOTING"
     * @const
     */
    "REBOOTING": "REBOOTING",

    /**
     * value: "SUCCEEDED"
     * @const
     */
    "SUCCEEDED": "SUCCEEDED",

    /**
     * value: "SUCCEEDED_REBOOT_REQUIRED"
     * @const
     */
    "SUCCEEDED_REBOOT_REQUIRED": "SUCCEEDED_REBOOT_REQUIRED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "ACKED"
     * @const
     */
    "ACKED": "ACKED",

    /**
     * value: "TIMED_OUT"
     * @const
     */
    "TIMED_OUT": "TIMED_OUT",

    /**
     * value: "RUNNING_PRE_PATCH_STEP"
     * @const
     */
    "RUNNING_PRE_PATCH_STEP": "RUNNING_PRE_PATCH_STEP",

    /**
     * value: "RUNNING_POST_PATCH_STEP"
     * @const
     */
    "RUNNING_POST_PATCH_STEP": "RUNNING_POST_PATCH_STEP",

    /**
     * value: "NO_AGENT_DETECTED"
     * @const
     */
    "NO_AGENT_DETECTED": "NO_AGENT_DETECTED"
};



export default PatchJobInstanceDetails;

