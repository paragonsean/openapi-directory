/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VulnerabilityReportVulnerability from './VulnerabilityReportVulnerability';

/**
 * The VulnerabilityReport model module.
 * @module model/VulnerabilityReport
 * @version v1
 */
class VulnerabilityReport {
    /**
     * Constructs a new <code>VulnerabilityReport</code>.
     * This API resource represents the vulnerability report for a specified Compute Engine virtual machine (VM) instance at a given point in time. For more information, see [Vulnerability reports](https://cloud.google.com/compute/docs/instances/os-inventory-management#vulnerability-reports).
     * @alias module:model/VulnerabilityReport
     */
    constructor() { 
        
        VulnerabilityReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VulnerabilityReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VulnerabilityReport} obj Optional instance to populate.
     * @return {module:model/VulnerabilityReport} The populated <code>VulnerabilityReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VulnerabilityReport();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('vulnerabilities')) {
                obj['vulnerabilities'] = ApiClient.convertToType(data['vulnerabilities'], [VulnerabilityReportVulnerability]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VulnerabilityReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VulnerabilityReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }
        if (data['vulnerabilities']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['vulnerabilities'])) {
                throw new Error("Expected the field `vulnerabilities` to be an array in the JSON data but got " + data['vulnerabilities']);
            }
            // validate the optional field `vulnerabilities` (array)
            for (const item of data['vulnerabilities']) {
                VulnerabilityReportVulnerability.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Output only. The `vulnerabilityReport` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/vulnerabilityReport`
 * @member {String} name
 */
VulnerabilityReport.prototype['name'] = undefined;

/**
 * Output only. The timestamp for when the last vulnerability report was generated for the VM.
 * @member {String} updateTime
 */
VulnerabilityReport.prototype['updateTime'] = undefined;

/**
 * Output only. List of vulnerabilities affecting the VM.
 * @member {Array.<module:model/VulnerabilityReportVulnerability>} vulnerabilities
 */
VulnerabilityReport.prototype['vulnerabilities'] = undefined;






export default VulnerabilityReport;

