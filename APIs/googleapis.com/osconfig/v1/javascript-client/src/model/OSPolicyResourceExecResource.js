/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OSPolicyResourceExecResourceExec from './OSPolicyResourceExecResourceExec';

/**
 * The OSPolicyResourceExecResource model module.
 * @module model/OSPolicyResourceExecResource
 * @version v1
 */
class OSPolicyResourceExecResource {
    /**
     * Constructs a new <code>OSPolicyResourceExecResource</code>.
     * A resource that allows executing scripts on the VM. The &#x60;ExecResource&#x60; has 2 stages: &#x60;validate&#x60; and &#x60;enforce&#x60; and both stages accept a script as an argument to execute. When the &#x60;ExecResource&#x60; is applied by the agent, it first executes the script in the &#x60;validate&#x60; stage. The &#x60;validate&#x60; stage can signal that the &#x60;ExecResource&#x60; is already in the desired state by returning an exit code of &#x60;100&#x60;. If the &#x60;ExecResource&#x60; is not in the desired state, it should return an exit code of &#x60;101&#x60;. Any other exit code returned by this stage is considered an error. If the &#x60;ExecResource&#x60; is not in the desired state based on the exit code from the &#x60;validate&#x60; stage, the agent proceeds to execute the script from the &#x60;enforce&#x60; stage. If the &#x60;ExecResource&#x60; is already in the desired state, the &#x60;enforce&#x60; stage will not be run. Similar to &#x60;validate&#x60; stage, the &#x60;enforce&#x60; stage should return an exit code of &#x60;100&#x60; to indicate that the resource in now in its desired state. Any other exit code is considered an error. NOTE: An exit code of &#x60;100&#x60; was chosen over &#x60;0&#x60; (and &#x60;101&#x60; vs &#x60;1&#x60;) to have an explicit indicator of &#x60;in desired state&#x60;, &#x60;not in desired state&#x60; and errors. Because, for example, Powershell will always return an exit code of &#x60;0&#x60; unless an &#x60;exit&#x60; statement is provided in the script. So, for reasons of consistency and being explicit, exit codes &#x60;100&#x60; and &#x60;101&#x60; were chosen.
     * @alias module:model/OSPolicyResourceExecResource
     */
    constructor() { 
        
        OSPolicyResourceExecResource.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OSPolicyResourceExecResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OSPolicyResourceExecResource} obj Optional instance to populate.
     * @return {module:model/OSPolicyResourceExecResource} The populated <code>OSPolicyResourceExecResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OSPolicyResourceExecResource();

            if (data.hasOwnProperty('enforce')) {
                obj['enforce'] = OSPolicyResourceExecResourceExec.constructFromObject(data['enforce']);
            }
            if (data.hasOwnProperty('validate')) {
                obj['validate'] = OSPolicyResourceExecResourceExec.constructFromObject(data['validate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OSPolicyResourceExecResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OSPolicyResourceExecResource</code>.
     */
    static validateJSON(data) {
        // validate the optional field `enforce`
        if (data['enforce']) { // data not null
          OSPolicyResourceExecResourceExec.validateJSON(data['enforce']);
        }
        // validate the optional field `validate`
        if (data['validate']) { // data not null
          OSPolicyResourceExecResourceExec.validateJSON(data['validate']);
        }

        return true;
    }


}



/**
 * @member {module:model/OSPolicyResourceExecResourceExec} enforce
 */
OSPolicyResourceExecResource.prototype['enforce'] = undefined;

/**
 * @member {module:model/OSPolicyResourceExecResourceExec} validate
 */
OSPolicyResourceExecResource.prototype['validate'] = undefined;






export default OSPolicyResourceExecResource;

