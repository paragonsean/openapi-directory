# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FixedOrPercent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fixed: int=None, percent: int=None):
        """FixedOrPercent - a model defined in OpenAPI

        :param fixed: The fixed of this FixedOrPercent.
        :param percent: The percent of this FixedOrPercent.
        """
        self.openapi_types = {
            'fixed': int,
            'percent': int
        }

        self.attribute_map = {
            'fixed': 'fixed',
            'percent': 'percent'
        }

        self._fixed = fixed
        self._percent = percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FixedOrPercent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FixedOrPercent of this FixedOrPercent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fixed(self):
        """Gets the fixed of this FixedOrPercent.

        Specifies a fixed value.

        :return: The fixed of this FixedOrPercent.
        :rtype: int
        """
        return self._fixed

    @fixed.setter
    def fixed(self, fixed):
        """Sets the fixed of this FixedOrPercent.

        Specifies a fixed value.

        :param fixed: The fixed of this FixedOrPercent.
        :type fixed: int
        """

        self._fixed = fixed

    @property
    def percent(self):
        """Gets the percent of this FixedOrPercent.

        Specifies the relative value defined as a percentage, which will be multiplied by a reference value.

        :return: The percent of this FixedOrPercent.
        :rtype: int
        """
        return self._percent

    @percent.setter
    def percent(self, percent):
        """Sets the percent of this FixedOrPercent.

        Specifies the relative value defined as a percentage, which will be multiplied by a reference value.

        :param percent: The percent of this FixedOrPercent.
        :type percent: int
        """

        self._percent = percent
