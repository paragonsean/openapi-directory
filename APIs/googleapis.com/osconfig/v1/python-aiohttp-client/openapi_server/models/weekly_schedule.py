# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WeeklySchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day_of_week: str=None):
        """WeeklySchedule - a model defined in OpenAPI

        :param day_of_week: The day_of_week of this WeeklySchedule.
        """
        self.openapi_types = {
            'day_of_week': str
        }

        self.attribute_map = {
            'day_of_week': 'dayOfWeek'
        }

        self._day_of_week = day_of_week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WeeklySchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WeeklySchedule of this WeeklySchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day_of_week(self):
        """Gets the day_of_week of this WeeklySchedule.

        Required. Day of the week.

        :return: The day_of_week of this WeeklySchedule.
        :rtype: str
        """
        return self._day_of_week

    @day_of_week.setter
    def day_of_week(self, day_of_week):
        """Sets the day_of_week of this WeeklySchedule.

        Required. Day of the week.

        :param day_of_week: The day_of_week of this WeeklySchedule.
        :type day_of_week: str
        """
        allowed_values = ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]  # noqa: E501
        if day_of_week not in allowed_values:
            raise ValueError(
                "Invalid value for `day_of_week` ({0}), must be one of {1}"
                .format(day_of_week, allowed_values)
            )

        self._day_of_week = day_of_week
