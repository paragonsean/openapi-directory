# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inventory_item import InventoryItem
from openapi_server.models.inventory_os_info import InventoryOsInfo
from openapi_server import util


class Inventory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: Dict[str, InventoryItem]=None, name: str=None, os_info: InventoryOsInfo=None, update_time: str=None):
        """Inventory - a model defined in OpenAPI

        :param items: The items of this Inventory.
        :param name: The name of this Inventory.
        :param os_info: The os_info of this Inventory.
        :param update_time: The update_time of this Inventory.
        """
        self.openapi_types = {
            'items': Dict[str, InventoryItem],
            'name': str,
            'os_info': InventoryOsInfo,
            'update_time': str
        }

        self.attribute_map = {
            'items': 'items',
            'name': 'name',
            'os_info': 'osInfo',
            'update_time': 'updateTime'
        }

        self._items = items
        self._name = name
        self._os_info = os_info
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Inventory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Inventory of this Inventory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this Inventory.

        Inventory items related to the VM keyed by an opaque unique identifier for each inventory item. The identifier is unique to each distinct and addressable inventory item and will change, when there is a new package version.

        :return: The items of this Inventory.
        :rtype: Dict[str, InventoryItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Inventory.

        Inventory items related to the VM keyed by an opaque unique identifier for each inventory item. The identifier is unique to each distinct and addressable inventory item and will change, when there is a new package version.

        :param items: The items of this Inventory.
        :type items: Dict[str, InventoryItem]
        """

        self._items = items

    @property
    def name(self):
        """Gets the name of this Inventory.

        Output only. The `Inventory` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/inventory`

        :return: The name of this Inventory.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Inventory.

        Output only. The `Inventory` API resource name. Format: `projects/{project_number}/locations/{location}/instances/{instance_id}/inventory`

        :param name: The name of this Inventory.
        :type name: str
        """

        self._name = name

    @property
    def os_info(self):
        """Gets the os_info of this Inventory.


        :return: The os_info of this Inventory.
        :rtype: InventoryOsInfo
        """
        return self._os_info

    @os_info.setter
    def os_info(self, os_info):
        """Sets the os_info of this Inventory.


        :param os_info: The os_info of this Inventory.
        :type os_info: InventoryOsInfo
        """

        self._os_info = os_info

    @property
    def update_time(self):
        """Gets the update_time of this Inventory.

        Output only. Timestamp of the last reported inventory for the VM.

        :return: The update_time of this Inventory.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this Inventory.

        Output only. Timestamp of the last reported inventory for the VM.

        :param update_time: The update_time of this Inventory.
        :type update_time: str
        """

        self._update_time = update_time
