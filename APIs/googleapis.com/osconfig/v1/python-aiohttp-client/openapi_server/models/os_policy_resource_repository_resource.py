# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.os_policy_resource_repository_resource_apt_repository import OSPolicyResourceRepositoryResourceAptRepository
from openapi_server.models.os_policy_resource_repository_resource_goo_repository import OSPolicyResourceRepositoryResourceGooRepository
from openapi_server.models.os_policy_resource_repository_resource_yum_repository import OSPolicyResourceRepositoryResourceYumRepository
from openapi_server.models.os_policy_resource_repository_resource_zypper_repository import OSPolicyResourceRepositoryResourceZypperRepository
from openapi_server import util


class OSPolicyResourceRepositoryResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apt: OSPolicyResourceRepositoryResourceAptRepository=None, goo: OSPolicyResourceRepositoryResourceGooRepository=None, yum: OSPolicyResourceRepositoryResourceYumRepository=None, zypper: OSPolicyResourceRepositoryResourceZypperRepository=None):
        """OSPolicyResourceRepositoryResource - a model defined in OpenAPI

        :param apt: The apt of this OSPolicyResourceRepositoryResource.
        :param goo: The goo of this OSPolicyResourceRepositoryResource.
        :param yum: The yum of this OSPolicyResourceRepositoryResource.
        :param zypper: The zypper of this OSPolicyResourceRepositoryResource.
        """
        self.openapi_types = {
            'apt': OSPolicyResourceRepositoryResourceAptRepository,
            'goo': OSPolicyResourceRepositoryResourceGooRepository,
            'yum': OSPolicyResourceRepositoryResourceYumRepository,
            'zypper': OSPolicyResourceRepositoryResourceZypperRepository
        }

        self.attribute_map = {
            'apt': 'apt',
            'goo': 'goo',
            'yum': 'yum',
            'zypper': 'zypper'
        }

        self._apt = apt
        self._goo = goo
        self._yum = yum
        self._zypper = zypper

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OSPolicyResourceRepositoryResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OSPolicyResourceRepositoryResource of this OSPolicyResourceRepositoryResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apt(self):
        """Gets the apt of this OSPolicyResourceRepositoryResource.


        :return: The apt of this OSPolicyResourceRepositoryResource.
        :rtype: OSPolicyResourceRepositoryResourceAptRepository
        """
        return self._apt

    @apt.setter
    def apt(self, apt):
        """Sets the apt of this OSPolicyResourceRepositoryResource.


        :param apt: The apt of this OSPolicyResourceRepositoryResource.
        :type apt: OSPolicyResourceRepositoryResourceAptRepository
        """

        self._apt = apt

    @property
    def goo(self):
        """Gets the goo of this OSPolicyResourceRepositoryResource.


        :return: The goo of this OSPolicyResourceRepositoryResource.
        :rtype: OSPolicyResourceRepositoryResourceGooRepository
        """
        return self._goo

    @goo.setter
    def goo(self, goo):
        """Sets the goo of this OSPolicyResourceRepositoryResource.


        :param goo: The goo of this OSPolicyResourceRepositoryResource.
        :type goo: OSPolicyResourceRepositoryResourceGooRepository
        """

        self._goo = goo

    @property
    def yum(self):
        """Gets the yum of this OSPolicyResourceRepositoryResource.


        :return: The yum of this OSPolicyResourceRepositoryResource.
        :rtype: OSPolicyResourceRepositoryResourceYumRepository
        """
        return self._yum

    @yum.setter
    def yum(self, yum):
        """Sets the yum of this OSPolicyResourceRepositoryResource.


        :param yum: The yum of this OSPolicyResourceRepositoryResource.
        :type yum: OSPolicyResourceRepositoryResourceYumRepository
        """

        self._yum = yum

    @property
    def zypper(self):
        """Gets the zypper of this OSPolicyResourceRepositoryResource.


        :return: The zypper of this OSPolicyResourceRepositoryResource.
        :rtype: OSPolicyResourceRepositoryResourceZypperRepository
        """
        return self._zypper

    @zypper.setter
    def zypper(self, zypper):
        """Sets the zypper of this OSPolicyResourceRepositoryResource.


        :param zypper: The zypper of this OSPolicyResourceRepositoryResource.
        :type zypper: OSPolicyResourceRepositoryResourceZypperRepository
        """

        self._zypper = zypper
