# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.os_policy_resource_file import OSPolicyResourceFile
from openapi_server import util


class OSPolicyResourcePackageResourceDeb(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pull_deps: bool=None, source: OSPolicyResourceFile=None):
        """OSPolicyResourcePackageResourceDeb - a model defined in OpenAPI

        :param pull_deps: The pull_deps of this OSPolicyResourcePackageResourceDeb.
        :param source: The source of this OSPolicyResourcePackageResourceDeb.
        """
        self.openapi_types = {
            'pull_deps': bool,
            'source': OSPolicyResourceFile
        }

        self.attribute_map = {
            'pull_deps': 'pullDeps',
            'source': 'source'
        }

        self._pull_deps = pull_deps
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OSPolicyResourcePackageResourceDeb':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OSPolicyResourcePackageResourceDeb of this OSPolicyResourcePackageResourceDeb.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pull_deps(self):
        """Gets the pull_deps of this OSPolicyResourcePackageResourceDeb.

        Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update && apt-get -y install package.deb`

        :return: The pull_deps of this OSPolicyResourcePackageResourceDeb.
        :rtype: bool
        """
        return self._pull_deps

    @pull_deps.setter
    def pull_deps(self, pull_deps):
        """Sets the pull_deps of this OSPolicyResourcePackageResourceDeb.

        Whether dependencies should also be installed. - install when false: `dpkg -i package` - install when true: `apt-get update && apt-get -y install package.deb`

        :param pull_deps: The pull_deps of this OSPolicyResourcePackageResourceDeb.
        :type pull_deps: bool
        """

        self._pull_deps = pull_deps

    @property
    def source(self):
        """Gets the source of this OSPolicyResourcePackageResourceDeb.


        :return: The source of this OSPolicyResourcePackageResourceDeb.
        :rtype: OSPolicyResourceFile
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this OSPolicyResourcePackageResourceDeb.


        :param source: The source of this OSPolicyResourcePackageResourceDeb.
        :type source: OSPolicyResourceFile
        """

        self._source = source
