/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOSPolicyResourcePackageResource.h
 *
 * A resource that manages a system package.
 */

#ifndef OAIOSPolicyResourcePackageResource_H
#define OAIOSPolicyResourcePackageResource_H

#include <QJsonObject>

#include "OAIOSPolicyResourcePackageResourceAPT.h"
#include "OAIOSPolicyResourcePackageResourceDeb.h"
#include "OAIOSPolicyResourcePackageResourceGooGet.h"
#include "OAIOSPolicyResourcePackageResourceMSI.h"
#include "OAIOSPolicyResourcePackageResourceRPM.h"
#include "OAIOSPolicyResourcePackageResourceYUM.h"
#include "OAIOSPolicyResourcePackageResourceZypper.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOSPolicyResourcePackageResourceAPT;
class OAIOSPolicyResourcePackageResourceDeb;
class OAIOSPolicyResourcePackageResourceGooGet;
class OAIOSPolicyResourcePackageResourceMSI;
class OAIOSPolicyResourcePackageResourceRPM;
class OAIOSPolicyResourcePackageResourceYUM;
class OAIOSPolicyResourcePackageResourceZypper;

class OAIOSPolicyResourcePackageResource : public OAIObject {
public:
    OAIOSPolicyResourcePackageResource();
    OAIOSPolicyResourcePackageResource(QString json);
    ~OAIOSPolicyResourcePackageResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOSPolicyResourcePackageResourceAPT getApt() const;
    void setApt(const OAIOSPolicyResourcePackageResourceAPT &apt);
    bool is_apt_Set() const;
    bool is_apt_Valid() const;

    OAIOSPolicyResourcePackageResourceDeb getDeb() const;
    void setDeb(const OAIOSPolicyResourcePackageResourceDeb &deb);
    bool is_deb_Set() const;
    bool is_deb_Valid() const;

    QString getDesiredState() const;
    void setDesiredState(const QString &desired_state);
    bool is_desired_state_Set() const;
    bool is_desired_state_Valid() const;

    OAIOSPolicyResourcePackageResourceGooGet getGooget() const;
    void setGooget(const OAIOSPolicyResourcePackageResourceGooGet &googet);
    bool is_googet_Set() const;
    bool is_googet_Valid() const;

    OAIOSPolicyResourcePackageResourceMSI getMsi() const;
    void setMsi(const OAIOSPolicyResourcePackageResourceMSI &msi);
    bool is_msi_Set() const;
    bool is_msi_Valid() const;

    OAIOSPolicyResourcePackageResourceRPM getRpm() const;
    void setRpm(const OAIOSPolicyResourcePackageResourceRPM &rpm);
    bool is_rpm_Set() const;
    bool is_rpm_Valid() const;

    OAIOSPolicyResourcePackageResourceYUM getYum() const;
    void setYum(const OAIOSPolicyResourcePackageResourceYUM &yum);
    bool is_yum_Set() const;
    bool is_yum_Valid() const;

    OAIOSPolicyResourcePackageResourceZypper getZypper() const;
    void setZypper(const OAIOSPolicyResourcePackageResourceZypper &zypper);
    bool is_zypper_Set() const;
    bool is_zypper_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOSPolicyResourcePackageResourceAPT m_apt;
    bool m_apt_isSet;
    bool m_apt_isValid;

    OAIOSPolicyResourcePackageResourceDeb m_deb;
    bool m_deb_isSet;
    bool m_deb_isValid;

    QString m_desired_state;
    bool m_desired_state_isSet;
    bool m_desired_state_isValid;

    OAIOSPolicyResourcePackageResourceGooGet m_googet;
    bool m_googet_isSet;
    bool m_googet_isValid;

    OAIOSPolicyResourcePackageResourceMSI m_msi;
    bool m_msi_isSet;
    bool m_msi_isValid;

    OAIOSPolicyResourcePackageResourceRPM m_rpm;
    bool m_rpm_isSet;
    bool m_rpm_isValid;

    OAIOSPolicyResourcePackageResourceYUM m_yum;
    bool m_yum_isSet;
    bool m_yum_isValid;

    OAIOSPolicyResourcePackageResourceZypper m_zypper;
    bool m_zypper_isSet;
    bool m_zypper_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOSPolicyResourcePackageResource)

#endif // OAIOSPolicyResourcePackageResource_H
