/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOSPolicyResourceRepositoryResource.h
 *
 * A resource that manages a package repository.
 */

#ifndef OAIOSPolicyResourceRepositoryResource_H
#define OAIOSPolicyResourceRepositoryResource_H

#include <QJsonObject>

#include "OAIOSPolicyResourceRepositoryResourceAptRepository.h"
#include "OAIOSPolicyResourceRepositoryResourceGooRepository.h"
#include "OAIOSPolicyResourceRepositoryResourceYumRepository.h"
#include "OAIOSPolicyResourceRepositoryResourceZypperRepository.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOSPolicyResourceRepositoryResourceAptRepository;
class OAIOSPolicyResourceRepositoryResourceGooRepository;
class OAIOSPolicyResourceRepositoryResourceYumRepository;
class OAIOSPolicyResourceRepositoryResourceZypperRepository;

class OAIOSPolicyResourceRepositoryResource : public OAIObject {
public:
    OAIOSPolicyResourceRepositoryResource();
    OAIOSPolicyResourceRepositoryResource(QString json);
    ~OAIOSPolicyResourceRepositoryResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOSPolicyResourceRepositoryResourceAptRepository getApt() const;
    void setApt(const OAIOSPolicyResourceRepositoryResourceAptRepository &apt);
    bool is_apt_Set() const;
    bool is_apt_Valid() const;

    OAIOSPolicyResourceRepositoryResourceGooRepository getGoo() const;
    void setGoo(const OAIOSPolicyResourceRepositoryResourceGooRepository &goo);
    bool is_goo_Set() const;
    bool is_goo_Valid() const;

    OAIOSPolicyResourceRepositoryResourceYumRepository getYum() const;
    void setYum(const OAIOSPolicyResourceRepositoryResourceYumRepository &yum);
    bool is_yum_Set() const;
    bool is_yum_Valid() const;

    OAIOSPolicyResourceRepositoryResourceZypperRepository getZypper() const;
    void setZypper(const OAIOSPolicyResourceRepositoryResourceZypperRepository &zypper);
    bool is_zypper_Set() const;
    bool is_zypper_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOSPolicyResourceRepositoryResourceAptRepository m_apt;
    bool m_apt_isSet;
    bool m_apt_isValid;

    OAIOSPolicyResourceRepositoryResourceGooRepository m_goo;
    bool m_goo_isSet;
    bool m_goo_isValid;

    OAIOSPolicyResourceRepositoryResourceYumRepository m_yum;
    bool m_yum_isSet;
    bool m_yum_isValid;

    OAIOSPolicyResourceRepositoryResourceZypperRepository m_zypper;
    bool m_zypper_isSet;
    bool m_zypper_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOSPolicyResourceRepositoryResource)

#endif // OAIOSPolicyResourceRepositoryResource_H
