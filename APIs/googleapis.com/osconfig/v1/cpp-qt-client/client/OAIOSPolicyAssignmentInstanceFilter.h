/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOSPolicyAssignmentInstanceFilter.h
 *
 * Filters to select target VMs for an assignment. If more than one filter criteria is specified below, a VM will be selected if and only if it satisfies all of them.
 */

#ifndef OAIOSPolicyAssignmentInstanceFilter_H
#define OAIOSPolicyAssignmentInstanceFilter_H

#include <QJsonObject>

#include "OAIOSPolicyAssignmentInstanceFilterInventory.h"
#include "OAIOSPolicyAssignmentLabelSet.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOSPolicyAssignmentLabelSet;
class OAIOSPolicyAssignmentInstanceFilterInventory;

class OAIOSPolicyAssignmentInstanceFilter : public OAIObject {
public:
    OAIOSPolicyAssignmentInstanceFilter();
    OAIOSPolicyAssignmentInstanceFilter(QString json);
    ~OAIOSPolicyAssignmentInstanceFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAll() const;
    void setAll(const bool &all);
    bool is_all_Set() const;
    bool is_all_Valid() const;

    QList<OAIOSPolicyAssignmentLabelSet> getExclusionLabels() const;
    void setExclusionLabels(const QList<OAIOSPolicyAssignmentLabelSet> &exclusion_labels);
    bool is_exclusion_labels_Set() const;
    bool is_exclusion_labels_Valid() const;

    QList<OAIOSPolicyAssignmentLabelSet> getInclusionLabels() const;
    void setInclusionLabels(const QList<OAIOSPolicyAssignmentLabelSet> &inclusion_labels);
    bool is_inclusion_labels_Set() const;
    bool is_inclusion_labels_Valid() const;

    QList<OAIOSPolicyAssignmentInstanceFilterInventory> getInventories() const;
    void setInventories(const QList<OAIOSPolicyAssignmentInstanceFilterInventory> &inventories);
    bool is_inventories_Set() const;
    bool is_inventories_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_all;
    bool m_all_isSet;
    bool m_all_isValid;

    QList<OAIOSPolicyAssignmentLabelSet> m_exclusion_labels;
    bool m_exclusion_labels_isSet;
    bool m_exclusion_labels_isValid;

    QList<OAIOSPolicyAssignmentLabelSet> m_inclusion_labels;
    bool m_inclusion_labels_isSet;
    bool m_inclusion_labels_isValid;

    QList<OAIOSPolicyAssignmentInstanceFilterInventory> m_inventories;
    bool m_inventories_isSet;
    bool m_inventories_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOSPolicyAssignmentInstanceFilter)

#endif // OAIOSPolicyAssignmentInstanceFilter_H
