/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOSPolicyResource.h
 *
 * An OS policy resource is used to define the desired state configuration and provides a specific functionality like installing/removing packages, executing a script etc. The system ensures that resources are always in their desired state by taking necessary actions if they have drifted from their desired state.
 */

#ifndef OAIOSPolicyResource_H
#define OAIOSPolicyResource_H

#include <QJsonObject>

#include "OAIOSPolicyResourceExecResource.h"
#include "OAIOSPolicyResourceFileResource.h"
#include "OAIOSPolicyResourcePackageResource.h"
#include "OAIOSPolicyResourceRepositoryResource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOSPolicyResourceExecResource;
class OAIOSPolicyResourceFileResource;
class OAIOSPolicyResourcePackageResource;
class OAIOSPolicyResourceRepositoryResource;

class OAIOSPolicyResource : public OAIObject {
public:
    OAIOSPolicyResource();
    OAIOSPolicyResource(QString json);
    ~OAIOSPolicyResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIOSPolicyResourceExecResource getExec() const;
    void setExec(const OAIOSPolicyResourceExecResource &exec);
    bool is_exec_Set() const;
    bool is_exec_Valid() const;

    OAIOSPolicyResourceFileResource getFile() const;
    void setFile(const OAIOSPolicyResourceFileResource &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIOSPolicyResourcePackageResource getPkg() const;
    void setPkg(const OAIOSPolicyResourcePackageResource &pkg);
    bool is_pkg_Set() const;
    bool is_pkg_Valid() const;

    OAIOSPolicyResourceRepositoryResource getRepository() const;
    void setRepository(const OAIOSPolicyResourceRepositoryResource &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIOSPolicyResourceExecResource m_exec;
    bool m_exec_isSet;
    bool m_exec_isValid;

    OAIOSPolicyResourceFileResource m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIOSPolicyResourcePackageResource m_pkg;
    bool m_pkg_isSet;
    bool m_pkg_isValid;

    OAIOSPolicyResourceRepositoryResource m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOSPolicyResource)

#endif // OAIOSPolicyResource_H
