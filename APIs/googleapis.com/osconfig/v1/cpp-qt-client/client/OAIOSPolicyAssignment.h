/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOSPolicyAssignment.h
 *
 * OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances. An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script. For more information about the OS policy resource definitions and examples, see [OS policy and OS policy assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).
 */

#ifndef OAIOSPolicyAssignment_H
#define OAIOSPolicyAssignment_H

#include <QJsonObject>

#include "OAIOSPolicy.h"
#include "OAIOSPolicyAssignmentInstanceFilter.h"
#include "OAIOSPolicyAssignmentRollout.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOSPolicyAssignmentInstanceFilter;
class OAIOSPolicy;
class OAIOSPolicyAssignmentRollout;

class OAIOSPolicyAssignment : public OAIObject {
public:
    OAIOSPolicyAssignment();
    OAIOSPolicyAssignment(QString json);
    ~OAIOSPolicyAssignment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBaseline() const;
    void setBaseline(const bool &baseline);
    bool is_baseline_Set() const;
    bool is_baseline_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    OAIOSPolicyAssignmentInstanceFilter getInstanceFilter() const;
    void setInstanceFilter(const OAIOSPolicyAssignmentInstanceFilter &instance_filter);
    bool is_instance_filter_Set() const;
    bool is_instance_filter_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIOSPolicy> getOsPolicies() const;
    void setOsPolicies(const QList<OAIOSPolicy> &os_policies);
    bool is_os_policies_Set() const;
    bool is_os_policies_Valid() const;

    bool isReconciling() const;
    void setReconciling(const bool &reconciling);
    bool is_reconciling_Set() const;
    bool is_reconciling_Valid() const;

    QString getRevisionCreateTime() const;
    void setRevisionCreateTime(const QString &revision_create_time);
    bool is_revision_create_time_Set() const;
    bool is_revision_create_time_Valid() const;

    QString getRevisionId() const;
    void setRevisionId(const QString &revision_id);
    bool is_revision_id_Set() const;
    bool is_revision_id_Valid() const;

    OAIOSPolicyAssignmentRollout getRollout() const;
    void setRollout(const OAIOSPolicyAssignmentRollout &rollout);
    bool is_rollout_Set() const;
    bool is_rollout_Valid() const;

    QString getRolloutState() const;
    void setRolloutState(const QString &rollout_state);
    bool is_rollout_state_Set() const;
    bool is_rollout_state_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_baseline;
    bool m_baseline_isSet;
    bool m_baseline_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    OAIOSPolicyAssignmentInstanceFilter m_instance_filter;
    bool m_instance_filter_isSet;
    bool m_instance_filter_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIOSPolicy> m_os_policies;
    bool m_os_policies_isSet;
    bool m_os_policies_isValid;

    bool m_reconciling;
    bool m_reconciling_isSet;
    bool m_reconciling_isValid;

    QString m_revision_create_time;
    bool m_revision_create_time_isSet;
    bool m_revision_create_time_isValid;

    QString m_revision_id;
    bool m_revision_id_isSet;
    bool m_revision_id_isValid;

    OAIOSPolicyAssignmentRollout m_rollout;
    bool m_rollout_isSet;
    bool m_rollout_isValid;

    QString m_rollout_state;
    bool m_rollout_state_isSet;
    bool m_rollout_state_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOSPolicyAssignment)

#endif // OAIOSPolicyAssignment_H
