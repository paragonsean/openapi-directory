/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIZypperSettings.h
 *
 * Zypper patching is performed by running &#x60;zypper patch&#x60;. See also https://en.opensuse.org/SDB:Zypper_manual.
 */

#ifndef OAIZypperSettings_H
#define OAIZypperSettings_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIZypperSettings : public OAIObject {
public:
    OAIZypperSettings();
    OAIZypperSettings(QString json);
    ~OAIZypperSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCategories() const;
    void setCategories(const QList<QString> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QList<QString> getExcludes() const;
    void setExcludes(const QList<QString> &excludes);
    bool is_excludes_Set() const;
    bool is_excludes_Valid() const;

    QList<QString> getExclusivePatches() const;
    void setExclusivePatches(const QList<QString> &exclusive_patches);
    bool is_exclusive_patches_Set() const;
    bool is_exclusive_patches_Valid() const;

    QList<QString> getSeverities() const;
    void setSeverities(const QList<QString> &severities);
    bool is_severities_Set() const;
    bool is_severities_Valid() const;

    bool isWithOptional() const;
    void setWithOptional(const bool &with_optional);
    bool is_with_optional_Set() const;
    bool is_with_optional_Valid() const;

    bool isWithUpdate() const;
    void setWithUpdate(const bool &with_update);
    bool is_with_update_Set() const;
    bool is_with_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QList<QString> m_excludes;
    bool m_excludes_isSet;
    bool m_excludes_isValid;

    QList<QString> m_exclusive_patches;
    bool m_exclusive_patches_isSet;
    bool m_exclusive_patches_isValid;

    QList<QString> m_severities;
    bool m_severities_isSet;
    bool m_severities_isValid;

    bool m_with_optional;
    bool m_with_optional_isSet;
    bool m_with_optional_isValid;

    bool m_with_update;
    bool m_with_update_isSet;
    bool m_with_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIZypperSettings)

#endif // OAIZypperSettings_H
