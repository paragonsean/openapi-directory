/**
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOSPolicyInventoryFilter.h
 *
 * Filtering criteria to select VMs based on inventory details.
 */

#ifndef OAIOSPolicyInventoryFilter_H
#define OAIOSPolicyInventoryFilter_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOSPolicyInventoryFilter : public OAIObject {
public:
    OAIOSPolicyInventoryFilter();
    OAIOSPolicyInventoryFilter(QString json);
    ~OAIOSPolicyInventoryFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOsShortName() const;
    void setOsShortName(const QString &os_short_name);
    bool is_os_short_name_Set() const;
    bool is_os_short_name_Valid() const;

    QString getOsVersion() const;
    void setOsVersion(const QString &os_version);
    bool is_os_version_Set() const;
    bool is_os_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_os_short_name;
    bool m_os_short_name_isSet;
    bool m_os_short_name_isValid;

    QString m_os_version;
    bool m_os_version_isSet;
    bool m_os_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOSPolicyInventoryFilter)

#endif // OAIOSPolicyInventoryFilter_H
