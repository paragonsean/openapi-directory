/*
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.OSPolicyResourceExecResourceExec;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A resource that allows executing scripts on the VM. The &#x60;ExecResource&#x60; has 2 stages: &#x60;validate&#x60; and &#x60;enforce&#x60; and both stages accept a script as an argument to execute. When the &#x60;ExecResource&#x60; is applied by the agent, it first executes the script in the &#x60;validate&#x60; stage. The &#x60;validate&#x60; stage can signal that the &#x60;ExecResource&#x60; is already in the desired state by returning an exit code of &#x60;100&#x60;. If the &#x60;ExecResource&#x60; is not in the desired state, it should return an exit code of &#x60;101&#x60;. Any other exit code returned by this stage is considered an error. If the &#x60;ExecResource&#x60; is not in the desired state based on the exit code from the &#x60;validate&#x60; stage, the agent proceeds to execute the script from the &#x60;enforce&#x60; stage. If the &#x60;ExecResource&#x60; is already in the desired state, the &#x60;enforce&#x60; stage will not be run. Similar to &#x60;validate&#x60; stage, the &#x60;enforce&#x60; stage should return an exit code of &#x60;100&#x60; to indicate that the resource in now in its desired state. Any other exit code is considered an error. NOTE: An exit code of &#x60;100&#x60; was chosen over &#x60;0&#x60; (and &#x60;101&#x60; vs &#x60;1&#x60;) to have an explicit indicator of &#x60;in desired state&#x60;, &#x60;not in desired state&#x60; and errors. Because, for example, Powershell will always return an exit code of &#x60;0&#x60; unless an &#x60;exit&#x60; statement is provided in the script. So, for reasons of consistency and being explicit, exit codes &#x60;100&#x60; and &#x60;101&#x60; were chosen.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:57.663717-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OSPolicyResourceExecResource {
  public static final String SERIALIZED_NAME_ENFORCE = "enforce";
  @SerializedName(SERIALIZED_NAME_ENFORCE)
  private OSPolicyResourceExecResourceExec enforce;

  public static final String SERIALIZED_NAME_VALIDATE = "validate";
  @SerializedName(SERIALIZED_NAME_VALIDATE)
  private OSPolicyResourceExecResourceExec validate;

  public OSPolicyResourceExecResource() {
  }

  public OSPolicyResourceExecResource enforce(OSPolicyResourceExecResourceExec enforce) {
    this.enforce = enforce;
    return this;
  }

  /**
   * Get enforce
   * @return enforce
   */
  @javax.annotation.Nullable
  public OSPolicyResourceExecResourceExec getEnforce() {
    return enforce;
  }

  public void setEnforce(OSPolicyResourceExecResourceExec enforce) {
    this.enforce = enforce;
  }


  public OSPolicyResourceExecResource validate(OSPolicyResourceExecResourceExec validate) {
    this.validate = validate;
    return this;
  }

  /**
   * Get validate
   * @return validate
   */
  @javax.annotation.Nullable
  public OSPolicyResourceExecResourceExec getValidate() {
    return validate;
  }

  public void setValidate(OSPolicyResourceExecResourceExec validate) {
    this.validate = validate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OSPolicyResourceExecResource osPolicyResourceExecResource = (OSPolicyResourceExecResource) o;
    return Objects.equals(this.enforce, osPolicyResourceExecResource.enforce) &&
        Objects.equals(this.validate, osPolicyResourceExecResource.validate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enforce, validate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OSPolicyResourceExecResource {\n");
    sb.append("    enforce: ").append(toIndentedString(enforce)).append("\n");
    sb.append("    validate: ").append(toIndentedString(validate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enforce");
    openapiFields.add("validate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OSPolicyResourceExecResource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OSPolicyResourceExecResource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OSPolicyResourceExecResource is not found in the empty JSON string", OSPolicyResourceExecResource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OSPolicyResourceExecResource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OSPolicyResourceExecResource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `enforce`
      if (jsonObj.get("enforce") != null && !jsonObj.get("enforce").isJsonNull()) {
        OSPolicyResourceExecResourceExec.validateJsonElement(jsonObj.get("enforce"));
      }
      // validate the optional field `validate`
      if (jsonObj.get("validate") != null && !jsonObj.get("validate").isJsonNull()) {
        OSPolicyResourceExecResourceExec.validateJsonElement(jsonObj.get("validate"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OSPolicyResourceExecResource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OSPolicyResourceExecResource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OSPolicyResourceExecResource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OSPolicyResourceExecResource.class));

       return (TypeAdapter<T>) new TypeAdapter<OSPolicyResourceExecResource>() {
           @Override
           public void write(JsonWriter out, OSPolicyResourceExecResource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OSPolicyResourceExecResource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OSPolicyResourceExecResource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OSPolicyResourceExecResource
   * @throws IOException if the JSON string is invalid with respect to OSPolicyResourceExecResource
   */
  public static OSPolicyResourceExecResource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OSPolicyResourceExecResource.class);
  }

  /**
   * Convert an instance of OSPolicyResourceExecResource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

