/*
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OS policy assignment operation metadata provided by OS policy assignment API methods that return long running operations.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:57.663717-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata {
  /**
   * The OS policy assignment API method.
   */
  @JsonAdapter(ApiMethodEnum.Adapter.class)
  public enum ApiMethodEnum {
    API_METHOD_UNSPECIFIED("API_METHOD_UNSPECIFIED"),
    
    CREATE("CREATE"),
    
    UPDATE("UPDATE"),
    
    DELETE("DELETE");

    private String value;

    ApiMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ApiMethodEnum fromValue(String value) {
      for (ApiMethodEnum b : ApiMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ApiMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ApiMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ApiMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ApiMethodEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ApiMethodEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_API_METHOD = "apiMethod";
  @SerializedName(SERIALIZED_NAME_API_METHOD)
  private ApiMethodEnum apiMethod;

  public static final String SERIALIZED_NAME_OS_POLICY_ASSIGNMENT = "osPolicyAssignment";
  @SerializedName(SERIALIZED_NAME_OS_POLICY_ASSIGNMENT)
  private String osPolicyAssignment;

  public static final String SERIALIZED_NAME_ROLLOUT_START_TIME = "rolloutStartTime";
  @SerializedName(SERIALIZED_NAME_ROLLOUT_START_TIME)
  private String rolloutStartTime;

  /**
   * State of the rollout
   */
  @JsonAdapter(RolloutStateEnum.Adapter.class)
  public enum RolloutStateEnum {
    ROLLOUT_STATE_UNSPECIFIED("ROLLOUT_STATE_UNSPECIFIED"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    CANCELLING("CANCELLING"),
    
    CANCELLED("CANCELLED"),
    
    SUCCEEDED("SUCCEEDED");

    private String value;

    RolloutStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RolloutStateEnum fromValue(String value) {
      for (RolloutStateEnum b : RolloutStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<RolloutStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RolloutStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RolloutStateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RolloutStateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      RolloutStateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROLLOUT_STATE = "rolloutState";
  @SerializedName(SERIALIZED_NAME_ROLLOUT_STATE)
  private RolloutStateEnum rolloutState;

  public static final String SERIALIZED_NAME_ROLLOUT_UPDATE_TIME = "rolloutUpdateTime";
  @SerializedName(SERIALIZED_NAME_ROLLOUT_UPDATE_TIME)
  private String rolloutUpdateTime;

  public GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata() {
  }

  public GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata apiMethod(ApiMethodEnum apiMethod) {
    this.apiMethod = apiMethod;
    return this;
  }

  /**
   * The OS policy assignment API method.
   * @return apiMethod
   */
  @javax.annotation.Nullable
  public ApiMethodEnum getApiMethod() {
    return apiMethod;
  }

  public void setApiMethod(ApiMethodEnum apiMethod) {
    this.apiMethod = apiMethod;
  }


  public GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata osPolicyAssignment(String osPolicyAssignment) {
    this.osPolicyAssignment = osPolicyAssignment;
    return this;
  }

  /**
   * Reference to the &#x60;OSPolicyAssignment&#x60; API resource. Format: &#x60;projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id@revision_id}&#x60;
   * @return osPolicyAssignment
   */
  @javax.annotation.Nullable
  public String getOsPolicyAssignment() {
    return osPolicyAssignment;
  }

  public void setOsPolicyAssignment(String osPolicyAssignment) {
    this.osPolicyAssignment = osPolicyAssignment;
  }


  public GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata rolloutStartTime(String rolloutStartTime) {
    this.rolloutStartTime = rolloutStartTime;
    return this;
  }

  /**
   * Rollout start time
   * @return rolloutStartTime
   */
  @javax.annotation.Nullable
  public String getRolloutStartTime() {
    return rolloutStartTime;
  }

  public void setRolloutStartTime(String rolloutStartTime) {
    this.rolloutStartTime = rolloutStartTime;
  }


  public GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata rolloutState(RolloutStateEnum rolloutState) {
    this.rolloutState = rolloutState;
    return this;
  }

  /**
   * State of the rollout
   * @return rolloutState
   */
  @javax.annotation.Nullable
  public RolloutStateEnum getRolloutState() {
    return rolloutState;
  }

  public void setRolloutState(RolloutStateEnum rolloutState) {
    this.rolloutState = rolloutState;
  }


  public GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata rolloutUpdateTime(String rolloutUpdateTime) {
    this.rolloutUpdateTime = rolloutUpdateTime;
    return this;
  }

  /**
   * Rollout update time
   * @return rolloutUpdateTime
   */
  @javax.annotation.Nullable
  public String getRolloutUpdateTime() {
    return rolloutUpdateTime;
  }

  public void setRolloutUpdateTime(String rolloutUpdateTime) {
    this.rolloutUpdateTime = rolloutUpdateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata googleCloudOsconfigV1OSPolicyAssignmentOperationMetadata = (GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata) o;
    return Objects.equals(this.apiMethod, googleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.apiMethod) &&
        Objects.equals(this.osPolicyAssignment, googleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.osPolicyAssignment) &&
        Objects.equals(this.rolloutStartTime, googleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.rolloutStartTime) &&
        Objects.equals(this.rolloutState, googleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.rolloutState) &&
        Objects.equals(this.rolloutUpdateTime, googleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.rolloutUpdateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiMethod, osPolicyAssignment, rolloutStartTime, rolloutState, rolloutUpdateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata {\n");
    sb.append("    apiMethod: ").append(toIndentedString(apiMethod)).append("\n");
    sb.append("    osPolicyAssignment: ").append(toIndentedString(osPolicyAssignment)).append("\n");
    sb.append("    rolloutStartTime: ").append(toIndentedString(rolloutStartTime)).append("\n");
    sb.append("    rolloutState: ").append(toIndentedString(rolloutState)).append("\n");
    sb.append("    rolloutUpdateTime: ").append(toIndentedString(rolloutUpdateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiMethod");
    openapiFields.add("osPolicyAssignment");
    openapiFields.add("rolloutStartTime");
    openapiFields.add("rolloutState");
    openapiFields.add("rolloutUpdateTime");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata is not found in the empty JSON string", GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiMethod") != null && !jsonObj.get("apiMethod").isJsonNull()) && !jsonObj.get("apiMethod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiMethod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiMethod").toString()));
      }
      // validate the optional field `apiMethod`
      if (jsonObj.get("apiMethod") != null && !jsonObj.get("apiMethod").isJsonNull()) {
        ApiMethodEnum.validateJsonElement(jsonObj.get("apiMethod"));
      }
      if ((jsonObj.get("osPolicyAssignment") != null && !jsonObj.get("osPolicyAssignment").isJsonNull()) && !jsonObj.get("osPolicyAssignment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `osPolicyAssignment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("osPolicyAssignment").toString()));
      }
      if ((jsonObj.get("rolloutStartTime") != null && !jsonObj.get("rolloutStartTime").isJsonNull()) && !jsonObj.get("rolloutStartTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rolloutStartTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rolloutStartTime").toString()));
      }
      if ((jsonObj.get("rolloutState") != null && !jsonObj.get("rolloutState").isJsonNull()) && !jsonObj.get("rolloutState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rolloutState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rolloutState").toString()));
      }
      // validate the optional field `rolloutState`
      if (jsonObj.get("rolloutState") != null && !jsonObj.get("rolloutState").isJsonNull()) {
        RolloutStateEnum.validateJsonElement(jsonObj.get("rolloutState"));
      }
      if ((jsonObj.get("rolloutUpdateTime") != null && !jsonObj.get("rolloutUpdateTime").isJsonNull()) && !jsonObj.get("rolloutUpdateTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rolloutUpdateTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rolloutUpdateTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata>() {
           @Override
           public void write(JsonWriter out, GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata
   */
  public static GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata.class);
  }

  /**
   * Convert an instance of GoogleCloudOsconfigV1OSPolicyAssignmentOperationMetadata to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

