/*
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.InventoryVersionedPackage;
import org.openapitools.client.model.InventoryWindowsApplication;
import org.openapitools.client.model.InventoryWindowsQuickFixEngineeringPackage;
import org.openapitools.client.model.InventoryWindowsUpdatePackage;
import org.openapitools.client.model.InventoryZypperPatch;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Software package information of the operating system.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:39:57.663717-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InventorySoftwarePackage {
  public static final String SERIALIZED_NAME_APT_PACKAGE = "aptPackage";
  @SerializedName(SERIALIZED_NAME_APT_PACKAGE)
  private InventoryVersionedPackage aptPackage;

  public static final String SERIALIZED_NAME_COS_PACKAGE = "cosPackage";
  @SerializedName(SERIALIZED_NAME_COS_PACKAGE)
  private InventoryVersionedPackage cosPackage;

  public static final String SERIALIZED_NAME_GOOGET_PACKAGE = "googetPackage";
  @SerializedName(SERIALIZED_NAME_GOOGET_PACKAGE)
  private InventoryVersionedPackage googetPackage;

  public static final String SERIALIZED_NAME_QFE_PACKAGE = "qfePackage";
  @SerializedName(SERIALIZED_NAME_QFE_PACKAGE)
  private InventoryWindowsQuickFixEngineeringPackage qfePackage;

  public static final String SERIALIZED_NAME_WINDOWS_APPLICATION = "windowsApplication";
  @SerializedName(SERIALIZED_NAME_WINDOWS_APPLICATION)
  private InventoryWindowsApplication windowsApplication;

  public static final String SERIALIZED_NAME_WUA_PACKAGE = "wuaPackage";
  @SerializedName(SERIALIZED_NAME_WUA_PACKAGE)
  private InventoryWindowsUpdatePackage wuaPackage;

  public static final String SERIALIZED_NAME_YUM_PACKAGE = "yumPackage";
  @SerializedName(SERIALIZED_NAME_YUM_PACKAGE)
  private InventoryVersionedPackage yumPackage;

  public static final String SERIALIZED_NAME_ZYPPER_PACKAGE = "zypperPackage";
  @SerializedName(SERIALIZED_NAME_ZYPPER_PACKAGE)
  private InventoryVersionedPackage zypperPackage;

  public static final String SERIALIZED_NAME_ZYPPER_PATCH = "zypperPatch";
  @SerializedName(SERIALIZED_NAME_ZYPPER_PATCH)
  private InventoryZypperPatch zypperPatch;

  public InventorySoftwarePackage() {
  }

  public InventorySoftwarePackage aptPackage(InventoryVersionedPackage aptPackage) {
    this.aptPackage = aptPackage;
    return this;
  }

  /**
   * Get aptPackage
   * @return aptPackage
   */
  @javax.annotation.Nullable
  public InventoryVersionedPackage getAptPackage() {
    return aptPackage;
  }

  public void setAptPackage(InventoryVersionedPackage aptPackage) {
    this.aptPackage = aptPackage;
  }


  public InventorySoftwarePackage cosPackage(InventoryVersionedPackage cosPackage) {
    this.cosPackage = cosPackage;
    return this;
  }

  /**
   * Get cosPackage
   * @return cosPackage
   */
  @javax.annotation.Nullable
  public InventoryVersionedPackage getCosPackage() {
    return cosPackage;
  }

  public void setCosPackage(InventoryVersionedPackage cosPackage) {
    this.cosPackage = cosPackage;
  }


  public InventorySoftwarePackage googetPackage(InventoryVersionedPackage googetPackage) {
    this.googetPackage = googetPackage;
    return this;
  }

  /**
   * Get googetPackage
   * @return googetPackage
   */
  @javax.annotation.Nullable
  public InventoryVersionedPackage getGoogetPackage() {
    return googetPackage;
  }

  public void setGoogetPackage(InventoryVersionedPackage googetPackage) {
    this.googetPackage = googetPackage;
  }


  public InventorySoftwarePackage qfePackage(InventoryWindowsQuickFixEngineeringPackage qfePackage) {
    this.qfePackage = qfePackage;
    return this;
  }

  /**
   * Get qfePackage
   * @return qfePackage
   */
  @javax.annotation.Nullable
  public InventoryWindowsQuickFixEngineeringPackage getQfePackage() {
    return qfePackage;
  }

  public void setQfePackage(InventoryWindowsQuickFixEngineeringPackage qfePackage) {
    this.qfePackage = qfePackage;
  }


  public InventorySoftwarePackage windowsApplication(InventoryWindowsApplication windowsApplication) {
    this.windowsApplication = windowsApplication;
    return this;
  }

  /**
   * Get windowsApplication
   * @return windowsApplication
   */
  @javax.annotation.Nullable
  public InventoryWindowsApplication getWindowsApplication() {
    return windowsApplication;
  }

  public void setWindowsApplication(InventoryWindowsApplication windowsApplication) {
    this.windowsApplication = windowsApplication;
  }


  public InventorySoftwarePackage wuaPackage(InventoryWindowsUpdatePackage wuaPackage) {
    this.wuaPackage = wuaPackage;
    return this;
  }

  /**
   * Get wuaPackage
   * @return wuaPackage
   */
  @javax.annotation.Nullable
  public InventoryWindowsUpdatePackage getWuaPackage() {
    return wuaPackage;
  }

  public void setWuaPackage(InventoryWindowsUpdatePackage wuaPackage) {
    this.wuaPackage = wuaPackage;
  }


  public InventorySoftwarePackage yumPackage(InventoryVersionedPackage yumPackage) {
    this.yumPackage = yumPackage;
    return this;
  }

  /**
   * Get yumPackage
   * @return yumPackage
   */
  @javax.annotation.Nullable
  public InventoryVersionedPackage getYumPackage() {
    return yumPackage;
  }

  public void setYumPackage(InventoryVersionedPackage yumPackage) {
    this.yumPackage = yumPackage;
  }


  public InventorySoftwarePackage zypperPackage(InventoryVersionedPackage zypperPackage) {
    this.zypperPackage = zypperPackage;
    return this;
  }

  /**
   * Get zypperPackage
   * @return zypperPackage
   */
  @javax.annotation.Nullable
  public InventoryVersionedPackage getZypperPackage() {
    return zypperPackage;
  }

  public void setZypperPackage(InventoryVersionedPackage zypperPackage) {
    this.zypperPackage = zypperPackage;
  }


  public InventorySoftwarePackage zypperPatch(InventoryZypperPatch zypperPatch) {
    this.zypperPatch = zypperPatch;
    return this;
  }

  /**
   * Get zypperPatch
   * @return zypperPatch
   */
  @javax.annotation.Nullable
  public InventoryZypperPatch getZypperPatch() {
    return zypperPatch;
  }

  public void setZypperPatch(InventoryZypperPatch zypperPatch) {
    this.zypperPatch = zypperPatch;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InventorySoftwarePackage inventorySoftwarePackage = (InventorySoftwarePackage) o;
    return Objects.equals(this.aptPackage, inventorySoftwarePackage.aptPackage) &&
        Objects.equals(this.cosPackage, inventorySoftwarePackage.cosPackage) &&
        Objects.equals(this.googetPackage, inventorySoftwarePackage.googetPackage) &&
        Objects.equals(this.qfePackage, inventorySoftwarePackage.qfePackage) &&
        Objects.equals(this.windowsApplication, inventorySoftwarePackage.windowsApplication) &&
        Objects.equals(this.wuaPackage, inventorySoftwarePackage.wuaPackage) &&
        Objects.equals(this.yumPackage, inventorySoftwarePackage.yumPackage) &&
        Objects.equals(this.zypperPackage, inventorySoftwarePackage.zypperPackage) &&
        Objects.equals(this.zypperPatch, inventorySoftwarePackage.zypperPatch);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aptPackage, cosPackage, googetPackage, qfePackage, windowsApplication, wuaPackage, yumPackage, zypperPackage, zypperPatch);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InventorySoftwarePackage {\n");
    sb.append("    aptPackage: ").append(toIndentedString(aptPackage)).append("\n");
    sb.append("    cosPackage: ").append(toIndentedString(cosPackage)).append("\n");
    sb.append("    googetPackage: ").append(toIndentedString(googetPackage)).append("\n");
    sb.append("    qfePackage: ").append(toIndentedString(qfePackage)).append("\n");
    sb.append("    windowsApplication: ").append(toIndentedString(windowsApplication)).append("\n");
    sb.append("    wuaPackage: ").append(toIndentedString(wuaPackage)).append("\n");
    sb.append("    yumPackage: ").append(toIndentedString(yumPackage)).append("\n");
    sb.append("    zypperPackage: ").append(toIndentedString(zypperPackage)).append("\n");
    sb.append("    zypperPatch: ").append(toIndentedString(zypperPatch)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("aptPackage");
    openapiFields.add("cosPackage");
    openapiFields.add("googetPackage");
    openapiFields.add("qfePackage");
    openapiFields.add("windowsApplication");
    openapiFields.add("wuaPackage");
    openapiFields.add("yumPackage");
    openapiFields.add("zypperPackage");
    openapiFields.add("zypperPatch");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InventorySoftwarePackage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InventorySoftwarePackage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InventorySoftwarePackage is not found in the empty JSON string", InventorySoftwarePackage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InventorySoftwarePackage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InventorySoftwarePackage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `aptPackage`
      if (jsonObj.get("aptPackage") != null && !jsonObj.get("aptPackage").isJsonNull()) {
        InventoryVersionedPackage.validateJsonElement(jsonObj.get("aptPackage"));
      }
      // validate the optional field `cosPackage`
      if (jsonObj.get("cosPackage") != null && !jsonObj.get("cosPackage").isJsonNull()) {
        InventoryVersionedPackage.validateJsonElement(jsonObj.get("cosPackage"));
      }
      // validate the optional field `googetPackage`
      if (jsonObj.get("googetPackage") != null && !jsonObj.get("googetPackage").isJsonNull()) {
        InventoryVersionedPackage.validateJsonElement(jsonObj.get("googetPackage"));
      }
      // validate the optional field `qfePackage`
      if (jsonObj.get("qfePackage") != null && !jsonObj.get("qfePackage").isJsonNull()) {
        InventoryWindowsQuickFixEngineeringPackage.validateJsonElement(jsonObj.get("qfePackage"));
      }
      // validate the optional field `windowsApplication`
      if (jsonObj.get("windowsApplication") != null && !jsonObj.get("windowsApplication").isJsonNull()) {
        InventoryWindowsApplication.validateJsonElement(jsonObj.get("windowsApplication"));
      }
      // validate the optional field `wuaPackage`
      if (jsonObj.get("wuaPackage") != null && !jsonObj.get("wuaPackage").isJsonNull()) {
        InventoryWindowsUpdatePackage.validateJsonElement(jsonObj.get("wuaPackage"));
      }
      // validate the optional field `yumPackage`
      if (jsonObj.get("yumPackage") != null && !jsonObj.get("yumPackage").isJsonNull()) {
        InventoryVersionedPackage.validateJsonElement(jsonObj.get("yumPackage"));
      }
      // validate the optional field `zypperPackage`
      if (jsonObj.get("zypperPackage") != null && !jsonObj.get("zypperPackage").isJsonNull()) {
        InventoryVersionedPackage.validateJsonElement(jsonObj.get("zypperPackage"));
      }
      // validate the optional field `zypperPatch`
      if (jsonObj.get("zypperPatch") != null && !jsonObj.get("zypperPatch").isJsonNull()) {
        InventoryZypperPatch.validateJsonElement(jsonObj.get("zypperPatch"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InventorySoftwarePackage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InventorySoftwarePackage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InventorySoftwarePackage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InventorySoftwarePackage.class));

       return (TypeAdapter<T>) new TypeAdapter<InventorySoftwarePackage>() {
           @Override
           public void write(JsonWriter out, InventorySoftwarePackage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InventorySoftwarePackage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InventorySoftwarePackage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InventorySoftwarePackage
   * @throws IOException if the JSON string is invalid with respect to InventorySoftwarePackage
   */
  public static InventorySoftwarePackage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InventorySoftwarePackage.class);
  }

  /**
   * Convert an instance of InventorySoftwarePackage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

