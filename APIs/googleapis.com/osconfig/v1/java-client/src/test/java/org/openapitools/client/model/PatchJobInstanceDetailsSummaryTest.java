/*
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PatchJobInstanceDetailsSummary
 */
public class PatchJobInstanceDetailsSummaryTest {
    private final PatchJobInstanceDetailsSummary model = new PatchJobInstanceDetailsSummary();

    /**
     * Model tests for PatchJobInstanceDetailsSummary
     */
    @Test
    public void testPatchJobInstanceDetailsSummary() {
        // TODO: test PatchJobInstanceDetailsSummary
    }

    /**
     * Test the property 'ackedInstanceCount'
     */
    @Test
    public void ackedInstanceCountTest() {
        // TODO: test ackedInstanceCount
    }

    /**
     * Test the property 'applyingPatchesInstanceCount'
     */
    @Test
    public void applyingPatchesInstanceCountTest() {
        // TODO: test applyingPatchesInstanceCount
    }

    /**
     * Test the property 'downloadingPatchesInstanceCount'
     */
    @Test
    public void downloadingPatchesInstanceCountTest() {
        // TODO: test downloadingPatchesInstanceCount
    }

    /**
     * Test the property 'failedInstanceCount'
     */
    @Test
    public void failedInstanceCountTest() {
        // TODO: test failedInstanceCount
    }

    /**
     * Test the property 'inactiveInstanceCount'
     */
    @Test
    public void inactiveInstanceCountTest() {
        // TODO: test inactiveInstanceCount
    }

    /**
     * Test the property 'noAgentDetectedInstanceCount'
     */
    @Test
    public void noAgentDetectedInstanceCountTest() {
        // TODO: test noAgentDetectedInstanceCount
    }

    /**
     * Test the property 'notifiedInstanceCount'
     */
    @Test
    public void notifiedInstanceCountTest() {
        // TODO: test notifiedInstanceCount
    }

    /**
     * Test the property 'pendingInstanceCount'
     */
    @Test
    public void pendingInstanceCountTest() {
        // TODO: test pendingInstanceCount
    }

    /**
     * Test the property 'postPatchStepInstanceCount'
     */
    @Test
    public void postPatchStepInstanceCountTest() {
        // TODO: test postPatchStepInstanceCount
    }

    /**
     * Test the property 'prePatchStepInstanceCount'
     */
    @Test
    public void prePatchStepInstanceCountTest() {
        // TODO: test prePatchStepInstanceCount
    }

    /**
     * Test the property 'rebootingInstanceCount'
     */
    @Test
    public void rebootingInstanceCountTest() {
        // TODO: test rebootingInstanceCount
    }

    /**
     * Test the property 'startedInstanceCount'
     */
    @Test
    public void startedInstanceCountTest() {
        // TODO: test startedInstanceCount
    }

    /**
     * Test the property 'succeededInstanceCount'
     */
    @Test
    public void succeededInstanceCountTest() {
        // TODO: test succeededInstanceCount
    }

    /**
     * Test the property 'succeededRebootRequiredInstanceCount'
     */
    @Test
    public void succeededRebootRequiredInstanceCountTest() {
        // TODO: test succeededRebootRequiredInstanceCount
    }

    /**
     * Test the property 'timedOutInstanceCount'
     */
    @Test
    public void timedOutInstanceCountTest() {
        // TODO: test timedOutInstanceCount
    }

}
