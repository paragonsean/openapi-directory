/*
 * OS Config API
 * OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.MonthlySchedule;
import org.openapitools.client.model.TimeOfDay;
import org.openapitools.client.model.TimeZone;
import org.openapitools.client.model.WeeklySchedule;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for RecurringSchedule
 */
public class RecurringScheduleTest {
    private final RecurringSchedule model = new RecurringSchedule();

    /**
     * Model tests for RecurringSchedule
     */
    @Test
    public void testRecurringSchedule() {
        // TODO: test RecurringSchedule
    }

    /**
     * Test the property 'endTime'
     */
    @Test
    public void endTimeTest() {
        // TODO: test endTime
    }

    /**
     * Test the property 'frequency'
     */
    @Test
    public void frequencyTest() {
        // TODO: test frequency
    }

    /**
     * Test the property 'lastExecuteTime'
     */
    @Test
    public void lastExecuteTimeTest() {
        // TODO: test lastExecuteTime
    }

    /**
     * Test the property 'monthly'
     */
    @Test
    public void monthlyTest() {
        // TODO: test monthly
    }

    /**
     * Test the property 'nextExecuteTime'
     */
    @Test
    public void nextExecuteTimeTest() {
        // TODO: test nextExecuteTime
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'timeOfDay'
     */
    @Test
    public void timeOfDayTest() {
        // TODO: test timeOfDay
    }

    /**
     * Test the property 'timeZone'
     */
    @Test
    public void timeZoneTest() {
        // TODO: test timeZone
    }

    /**
     * Test the property 'weekly'
     */
    @Test
    public void weeklyTest() {
        // TODO: test weekly
    }

}
