/**
 * Cloud Text-to-Speech API
 * Synthesizes natural-sounding speech by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AudioConfig from './AudioConfig';
import SynthesisInput from './SynthesisInput';
import VoiceSelectionParams from './VoiceSelectionParams';

/**
 * The SynthesizeSpeechRequest model module.
 * @module model/SynthesizeSpeechRequest
 * @version v1beta1
 */
class SynthesizeSpeechRequest {
    /**
     * Constructs a new <code>SynthesizeSpeechRequest</code>.
     * The top-level message sent by the client for the &#x60;SynthesizeSpeech&#x60; method.
     * @alias module:model/SynthesizeSpeechRequest
     */
    constructor() { 
        
        SynthesizeSpeechRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SynthesizeSpeechRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SynthesizeSpeechRequest} obj Optional instance to populate.
     * @return {module:model/SynthesizeSpeechRequest} The populated <code>SynthesizeSpeechRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SynthesizeSpeechRequest();

            if (data.hasOwnProperty('audioConfig')) {
                obj['audioConfig'] = AudioConfig.constructFromObject(data['audioConfig']);
            }
            if (data.hasOwnProperty('enableTimePointing')) {
                obj['enableTimePointing'] = ApiClient.convertToType(data['enableTimePointing'], ['String']);
            }
            if (data.hasOwnProperty('input')) {
                obj['input'] = SynthesisInput.constructFromObject(data['input']);
            }
            if (data.hasOwnProperty('voice')) {
                obj['voice'] = VoiceSelectionParams.constructFromObject(data['voice']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SynthesizeSpeechRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SynthesizeSpeechRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `audioConfig`
        if (data['audioConfig']) { // data not null
          AudioConfig.validateJSON(data['audioConfig']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['enableTimePointing'])) {
            throw new Error("Expected the field `enableTimePointing` to be an array in the JSON data but got " + data['enableTimePointing']);
        }
        // validate the optional field `input`
        if (data['input']) { // data not null
          SynthesisInput.validateJSON(data['input']);
        }
        // validate the optional field `voice`
        if (data['voice']) { // data not null
          VoiceSelectionParams.validateJSON(data['voice']);
        }

        return true;
    }


}



/**
 * @member {module:model/AudioConfig} audioConfig
 */
SynthesizeSpeechRequest.prototype['audioConfig'] = undefined;

/**
 * Whether and what timepoints are returned in the response.
 * @member {Array.<module:model/SynthesizeSpeechRequest.EnableTimePointingEnum>} enableTimePointing
 */
SynthesizeSpeechRequest.prototype['enableTimePointing'] = undefined;

/**
 * @member {module:model/SynthesisInput} input
 */
SynthesizeSpeechRequest.prototype['input'] = undefined;

/**
 * @member {module:model/VoiceSelectionParams} voice
 */
SynthesizeSpeechRequest.prototype['voice'] = undefined;





/**
 * Allowed values for the <code>enableTimePointing</code> property.
 * @enum {String}
 * @readonly
 */
SynthesizeSpeechRequest['EnableTimePointingEnum'] = {

    /**
     * value: "TIMEPOINT_TYPE_UNSPECIFIED"
     * @const
     */
    "TIMEPOINT_TYPE_UNSPECIFIED": "TIMEPOINT_TYPE_UNSPECIFIED",

    /**
     * value: "SSML_MARK"
     * @const
     */
    "SSML_MARK": "SSML_MARK"
};



export default SynthesizeSpeechRequest;

