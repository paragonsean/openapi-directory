/**
 * Cloud Text-to-Speech API
 * Synthesizes natural-sounding speech by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Voice model module.
 * @module model/Voice
 * @version v1beta1
 */
class Voice {
    /**
     * Constructs a new <code>Voice</code>.
     * Description of a voice supported by the TTS service.
     * @alias module:model/Voice
     */
    constructor() { 
        
        Voice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Voice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Voice} obj Optional instance to populate.
     * @return {module:model/Voice} The populated <code>Voice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Voice();

            if (data.hasOwnProperty('languageCodes')) {
                obj['languageCodes'] = ApiClient.convertToType(data['languageCodes'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('naturalSampleRateHertz')) {
                obj['naturalSampleRateHertz'] = ApiClient.convertToType(data['naturalSampleRateHertz'], 'Number');
            }
            if (data.hasOwnProperty('ssmlGender')) {
                obj['ssmlGender'] = ApiClient.convertToType(data['ssmlGender'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Voice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Voice</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['languageCodes'])) {
            throw new Error("Expected the field `languageCodes` to be an array in the JSON data but got " + data['languageCodes']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['ssmlGender'] && !(typeof data['ssmlGender'] === 'string' || data['ssmlGender'] instanceof String)) {
            throw new Error("Expected the field `ssmlGender` to be a primitive type in the JSON string but got " + data['ssmlGender']);
        }

        return true;
    }


}



/**
 * The languages that this voice supports, expressed as [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags (e.g. \"en-US\", \"es-419\", \"cmn-tw\").
 * @member {Array.<String>} languageCodes
 */
Voice.prototype['languageCodes'] = undefined;

/**
 * The name of this voice. Each distinct voice has a unique name.
 * @member {String} name
 */
Voice.prototype['name'] = undefined;

/**
 * The natural sample rate (in hertz) for this voice.
 * @member {Number} naturalSampleRateHertz
 */
Voice.prototype['naturalSampleRateHertz'] = undefined;

/**
 * The gender of this voice.
 * @member {module:model/Voice.SsmlGenderEnum} ssmlGender
 */
Voice.prototype['ssmlGender'] = undefined;





/**
 * Allowed values for the <code>ssmlGender</code> property.
 * @enum {String}
 * @readonly
 */
Voice['SsmlGenderEnum'] = {

    /**
     * value: "SSML_VOICE_GENDER_UNSPECIFIED"
     * @const
     */
    "SSML_VOICE_GENDER_UNSPECIFIED": "SSML_VOICE_GENDER_UNSPECIFIED",

    /**
     * value: "MALE"
     * @const
     */
    "MALE": "MALE",

    /**
     * value: "FEMALE"
     * @const
     */
    "FEMALE": "FEMALE",

    /**
     * value: "NEUTRAL"
     * @const
     */
    "NEUTRAL": "NEUTRAL"
};



export default Voice;

