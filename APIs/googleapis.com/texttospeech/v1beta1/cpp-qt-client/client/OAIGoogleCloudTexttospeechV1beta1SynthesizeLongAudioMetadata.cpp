/**
 * Cloud Text-to-Speech API
 * Synthesizes natural-sounding speech by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata() {
    this->initializeModel();
}

OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::~OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata() {}

void OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::initializeModel() {

    m_last_update_time_isSet = false;
    m_last_update_time_isValid = false;

    m_progress_percentage_isSet = false;
    m_progress_percentage_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::fromJsonObject(QJsonObject json) {

    m_last_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_update_time, json[QString("lastUpdateTime")]);
    m_last_update_time_isSet = !json[QString("lastUpdateTime")].isNull() && m_last_update_time_isValid;

    m_progress_percentage_isValid = ::OpenAPI::fromJsonValue(m_progress_percentage, json[QString("progressPercentage")]);
    m_progress_percentage_isSet = !json[QString("progressPercentage")].isNull() && m_progress_percentage_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_last_update_time_isSet) {
        obj.insert(QString("lastUpdateTime"), ::OpenAPI::toJsonValue(m_last_update_time));
    }
    if (m_progress_percentage_isSet) {
        obj.insert(QString("progressPercentage"), ::OpenAPI::toJsonValue(m_progress_percentage));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::getLastUpdateTime() const {
    return m_last_update_time;
}
void OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::setLastUpdateTime(const QString &last_update_time) {
    m_last_update_time = last_update_time;
    m_last_update_time_isSet = true;
}

bool OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::is_last_update_time_Set() const{
    return m_last_update_time_isSet;
}

bool OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::is_last_update_time_Valid() const{
    return m_last_update_time_isValid;
}

double OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::getProgressPercentage() const {
    return m_progress_percentage;
}
void OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::setProgressPercentage(const double &progress_percentage) {
    m_progress_percentage = progress_percentage;
    m_progress_percentage_isSet = true;
}

bool OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::is_progress_percentage_Set() const{
    return m_progress_percentage_isSet;
}

bool OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::is_progress_percentage_Valid() const{
    return m_progress_percentage_isValid;
}

QString OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::getStartTime() const {
    return m_start_time;
}
void OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudTexttospeechV1beta1SynthesizeLongAudioMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
