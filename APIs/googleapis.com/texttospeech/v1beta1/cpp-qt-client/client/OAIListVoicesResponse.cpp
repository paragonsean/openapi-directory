/**
 * Cloud Text-to-Speech API
 * Synthesizes natural-sounding speech by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListVoicesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListVoicesResponse::OAIListVoicesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListVoicesResponse::OAIListVoicesResponse() {
    this->initializeModel();
}

OAIListVoicesResponse::~OAIListVoicesResponse() {}

void OAIListVoicesResponse::initializeModel() {

    m_voices_isSet = false;
    m_voices_isValid = false;
}

void OAIListVoicesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListVoicesResponse::fromJsonObject(QJsonObject json) {

    m_voices_isValid = ::OpenAPI::fromJsonValue(m_voices, json[QString("voices")]);
    m_voices_isSet = !json[QString("voices")].isNull() && m_voices_isValid;
}

QString OAIListVoicesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListVoicesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_voices.size() > 0) {
        obj.insert(QString("voices"), ::OpenAPI::toJsonValue(m_voices));
    }
    return obj;
}

QList<OAIVoice> OAIListVoicesResponse::getVoices() const {
    return m_voices;
}
void OAIListVoicesResponse::setVoices(const QList<OAIVoice> &voices) {
    m_voices = voices;
    m_voices_isSet = true;
}

bool OAIListVoicesResponse::is_voices_Set() const{
    return m_voices_isSet;
}

bool OAIListVoicesResponse::is_voices_Valid() const{
    return m_voices_isValid;
}

bool OAIListVoicesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_voices.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListVoicesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
