# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_config import AudioConfig
from openapi_server.models.timepoint import Timepoint
from openapi_server import util


class SynthesizeSpeechResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_config: AudioConfig=None, audio_content: str=None, timepoints: List[Timepoint]=None):
        """SynthesizeSpeechResponse - a model defined in OpenAPI

        :param audio_config: The audio_config of this SynthesizeSpeechResponse.
        :param audio_content: The audio_content of this SynthesizeSpeechResponse.
        :param timepoints: The timepoints of this SynthesizeSpeechResponse.
        """
        self.openapi_types = {
            'audio_config': AudioConfig,
            'audio_content': str,
            'timepoints': List[Timepoint]
        }

        self.attribute_map = {
            'audio_config': 'audioConfig',
            'audio_content': 'audioContent',
            'timepoints': 'timepoints'
        }

        self._audio_config = audio_config
        self._audio_content = audio_content
        self._timepoints = timepoints

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SynthesizeSpeechResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SynthesizeSpeechResponse of this SynthesizeSpeechResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_config(self):
        """Gets the audio_config of this SynthesizeSpeechResponse.


        :return: The audio_config of this SynthesizeSpeechResponse.
        :rtype: AudioConfig
        """
        return self._audio_config

    @audio_config.setter
    def audio_config(self, audio_config):
        """Sets the audio_config of this SynthesizeSpeechResponse.


        :param audio_config: The audio_config of this SynthesizeSpeechResponse.
        :type audio_config: AudioConfig
        """

        self._audio_config = audio_config

    @property
    def audio_content(self):
        """Gets the audio_content of this SynthesizeSpeechResponse.

        The audio data bytes encoded as specified in the request, including the header for encodings that are wrapped in containers (e.g. MP3, OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note: as with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.

        :return: The audio_content of this SynthesizeSpeechResponse.
        :rtype: str
        """
        return self._audio_content

    @audio_content.setter
    def audio_content(self, audio_content):
        """Sets the audio_content of this SynthesizeSpeechResponse.

        The audio data bytes encoded as specified in the request, including the header for encodings that are wrapped in containers (e.g. MP3, OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note: as with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.

        :param audio_content: The audio_content of this SynthesizeSpeechResponse.
        :type audio_content: str
        """

        self._audio_content = audio_content

    @property
    def timepoints(self):
        """Gets the timepoints of this SynthesizeSpeechResponse.

        A link between a position in the original request input and a corresponding time in the output audio. It's only supported via `` of SSML input.

        :return: The timepoints of this SynthesizeSpeechResponse.
        :rtype: List[Timepoint]
        """
        return self._timepoints

    @timepoints.setter
    def timepoints(self, timepoints):
        """Sets the timepoints of this SynthesizeSpeechResponse.

        A link between a position in the original request input and a corresponding time in the output audio. It's only supported via `` of SSML input.

        :param timepoints: The timepoints of this SynthesizeSpeechResponse.
        :type timepoints: List[Timepoint]
        """

        self._timepoints = timepoints
