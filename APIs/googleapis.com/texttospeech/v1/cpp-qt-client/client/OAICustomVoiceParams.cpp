/**
 * Cloud Text-to-Speech API
 * Synthesizes natural-sounding speech by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomVoiceParams.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomVoiceParams::OAICustomVoiceParams(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomVoiceParams::OAICustomVoiceParams() {
    this->initializeModel();
}

OAICustomVoiceParams::~OAICustomVoiceParams() {}

void OAICustomVoiceParams::initializeModel() {

    m_model_isSet = false;
    m_model_isValid = false;

    m_reported_usage_isSet = false;
    m_reported_usage_isValid = false;
}

void OAICustomVoiceParams::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomVoiceParams::fromJsonObject(QJsonObject json) {

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;

    m_reported_usage_isValid = ::OpenAPI::fromJsonValue(m_reported_usage, json[QString("reportedUsage")]);
    m_reported_usage_isSet = !json[QString("reportedUsage")].isNull() && m_reported_usage_isValid;
}

QString OAICustomVoiceParams::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomVoiceParams::asJsonObject() const {
    QJsonObject obj;
    if (m_model_isSet) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    if (m_reported_usage_isSet) {
        obj.insert(QString("reportedUsage"), ::OpenAPI::toJsonValue(m_reported_usage));
    }
    return obj;
}

QString OAICustomVoiceParams::getModel() const {
    return m_model;
}
void OAICustomVoiceParams::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAICustomVoiceParams::is_model_Set() const{
    return m_model_isSet;
}

bool OAICustomVoiceParams::is_model_Valid() const{
    return m_model_isValid;
}

QString OAICustomVoiceParams::getReportedUsage() const {
    return m_reported_usage;
}
void OAICustomVoiceParams::setReportedUsage(const QString &reported_usage) {
    m_reported_usage = reported_usage;
    m_reported_usage_isSet = true;
}

bool OAICustomVoiceParams::is_reported_usage_Set() const{
    return m_reported_usage_isSet;
}

bool OAICustomVoiceParams::is_reported_usage_Valid() const{
    return m_reported_usage_isValid;
}

bool OAICustomVoiceParams::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reported_usage_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomVoiceParams::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
