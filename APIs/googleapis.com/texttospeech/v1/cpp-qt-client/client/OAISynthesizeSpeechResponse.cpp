/**
 * Cloud Text-to-Speech API
 * Synthesizes natural-sounding speech by applying powerful neural network models.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISynthesizeSpeechResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISynthesizeSpeechResponse::OAISynthesizeSpeechResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISynthesizeSpeechResponse::OAISynthesizeSpeechResponse() {
    this->initializeModel();
}

OAISynthesizeSpeechResponse::~OAISynthesizeSpeechResponse() {}

void OAISynthesizeSpeechResponse::initializeModel() {

    m_audio_content_isSet = false;
    m_audio_content_isValid = false;
}

void OAISynthesizeSpeechResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISynthesizeSpeechResponse::fromJsonObject(QJsonObject json) {

    m_audio_content_isValid = ::OpenAPI::fromJsonValue(m_audio_content, json[QString("audioContent")]);
    m_audio_content_isSet = !json[QString("audioContent")].isNull() && m_audio_content_isValid;
}

QString OAISynthesizeSpeechResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISynthesizeSpeechResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_audio_content_isSet) {
        obj.insert(QString("audioContent"), ::OpenAPI::toJsonValue(m_audio_content));
    }
    return obj;
}

QByteArray OAISynthesizeSpeechResponse::getAudioContent() const {
    return m_audio_content;
}
void OAISynthesizeSpeechResponse::setAudioContent(const QByteArray &audio_content) {
    m_audio_content = audio_content;
    m_audio_content_isSet = true;
}

bool OAISynthesizeSpeechResponse::is_audio_content_Set() const{
    return m_audio_content_isSet;
}

bool OAISynthesizeSpeechResponse::is_audio_content_Valid() const{
    return m_audio_content_isValid;
}

bool OAISynthesizeSpeechResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio_content_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISynthesizeSpeechResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
