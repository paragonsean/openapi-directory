openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Synthesizes natural-sounding speech by applying powerful neural network
    models.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Text-to-Speech API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: openapi
    url: https://texttospeech.googleapis.com/$discovery/rest?version=v1
    version: "3.0"
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: texttospeech
externalDocs:
  url: https://cloud.google.com/text-to-speech/
servers:
- url: https://texttospeech.googleapis.com/
tags:
- name: operations
- name: projects
- name: text
- name: voices
paths:
  /v1/text:synthesize:
    post:
      description: "Synthesizes speech synchronously: receive results after all text\
        \ input has been processed."
      operationId: texttospeech.text.synthesize
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynthesizeSpeechRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynthesizeSpeechResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - text
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/voices:
    get:
      description: Returns a list of Voice supported for synthesis.
      operationId: texttospeech.voices.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Optional. Recommended. [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt)\
          \ language tag. If not specified, the API will return all supported voices.\
          \ If specified, the ListVoices call will only return voices that can be\
          \ used to synthesize this language_code. For example, if you specify `\"\
          en-NZ\"`, all `\"en-NZ\"` voices will be returned. If you specify `\"no\"\
          `, both `\"no-\\*\"` (Norwegian) and `\"nb-\\*\"` (Norwegian Bokmal) voices\
          \ will be returned."
        explode: true
        in: query
        name: languageCode
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVoicesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - voices
      x-accepts:
      - application/json
  /v1/{name}:
    delete:
      description: "Deletes a long-running operation. This method indicates that the\
        \ client is no longer interested in the operation result. It does not cancel\
        \ the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
      operationId: texttospeech.operations.delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be deleted.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - operations
      x-accepts:
      - application/json
    get:
      description: Gets the latest state of a long-running operation. Clients can
        use this method to poll the operation result at intervals as recommended by
        the API service.
      operationId: texttospeech.projects.locations.operations.get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{name}/operations:
    get:
      description: "Lists operations that match the specified filter in the request.\
        \ If the server doesn't support this method, it returns `UNIMPLEMENTED`."
      operationId: texttospeech.projects.locations.operations.list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation's parent resource.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The standard list filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: The standard list page size.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: The standard list page token.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOperationsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-accepts:
      - application/json
  /v1/{name}:cancel:
    post:
      description: "Starts asynchronous cancellation on a long-running operation.\
        \ The server makes a best effort to cancel the operation, but success is not\
        \ guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.\
        \ Clients can use Operations.GetOperation or other methods to check whether\
        \ the cancellation succeeded or whether the operation completed despite cancellation.\
        \ On successful cancellation, the operation is not deleted; instead, it becomes\
        \ an operation with an Operation.error value with a google.rpc.Status.code\
        \ of 1, corresponding to `Code.CANCELLED`."
      operationId: texttospeech.operations.cancel
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The name of the operation resource to be cancelled.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelOperationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - operations
      x-content-type: application/json
      x-accepts:
      - application/json
  /v1/{parent}:synthesizeLongAudio:
    post:
      description: Synthesizes long form text asynchronously.
      operationId: texttospeech.projects.locations.synthesizeLongAudio
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: The resource states of the request in the form of `projects/*/locations/*`.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SynthesizeLongAudioRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    AudioConfig:
      description: Description of audio data to be synthesized.
      example:
        sampleRateHertz: 6
        volumeGainDb: 5.962133916683182
        speakingRate: 1.4658129805029452
        audioEncoding: AUDIO_ENCODING_UNSPECIFIED
        pitch: 0.8008281904610115
        effectsProfileId:
        - effectsProfileId
        - effectsProfileId
      properties:
        audioEncoding:
          description: Required. The format of the audio byte stream.
          enum:
          - AUDIO_ENCODING_UNSPECIFIED
          - LINEAR16
          - MP3
          - OGG_OPUS
          - MULAW
          - ALAW
          type: string
        effectsProfileId:
          description: "Optional. Input only. An identifier which selects 'audio effects'\
            \ profiles that are applied on (post synthesized) text to speech. Effects\
            \ are applied on top of each other in the order they are given. See [audio\
            \ profiles](https://cloud.google.com/text-to-speech/docs/audio-profiles)\
            \ for current supported profile ids."
          items:
            type: string
          type: array
        pitch:
          description: "Optional. Input only. Speaking pitch, in the range [-20.0,\
            \ 20.0]. 20 means increase 20 semitones from the original pitch. -20 means\
            \ decrease 20 semitones from the original pitch."
          format: double
          type: number
        sampleRateHertz:
          description: "Optional. The synthesis sample rate (in hertz) for this audio.\
            \ When this is specified in SynthesizeSpeechRequest, if this is different\
            \ from the voice's natural sample rate, then the synthesizer will honor\
            \ this request by converting to the desired sample rate (which might result\
            \ in worse audio quality), unless the specified sample rate is not supported\
            \ for the encoding chosen, in which case it will fail the request and\
            \ return google.rpc.Code.INVALID_ARGUMENT."
          format: int32
          type: integer
        speakingRate:
          description: "Optional. Input only. Speaking rate/speed, in the range [0.25,\
            \ 4.0]. 1.0 is the normal native speed supported by the specific voice.\
            \ 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults\
            \ to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return\
            \ an error."
          format: double
          type: number
        volumeGainDb:
          description: "Optional. Input only. Volume gain (in dB) of the normal native\
            \ volume supported by the specific voice, in the range [-96.0, 16.0].\
            \ If unset, or set to a value of 0.0 (dB), will play at normal native\
            \ signal amplitude. A value of -6.0 (dB) will play at approximately half\
            \ the amplitude of the normal native signal amplitude. A value of +6.0\
            \ (dB) will play at approximately twice the amplitude of the normal native\
            \ signal amplitude. Strongly recommend not to exceed +10 (dB) as there's\
            \ usually no effective increase in loudness for any value greater than\
            \ that."
          format: double
          type: number
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    CustomVoiceParams:
      description: Description of the custom voice to be synthesized.
      example:
        model: model
        reportedUsage: REPORTED_USAGE_UNSPECIFIED
      properties:
        model:
          description: Required. The name of the AutoML model that synthesizes the
            custom voice.
          type: string
        reportedUsage:
          deprecated: true
          description: Optional. Deprecated. The usage of the synthesized audio to
            be reported.
          enum:
          - REPORTED_USAGE_UNSPECIFIED
          - REALTIME
          - OFFLINE
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleCloudTexttospeechV1SynthesizeLongAudioMetadata:
      description: Metadata for response returned by the `SynthesizeLongAudio` method.
      properties:
        lastUpdateTime:
          deprecated: true
          description: Deprecated. Do not use.
          format: google-datetime
          type: string
        progressPercentage:
          description: "The progress of the most recent processing update in percentage,\
            \ ie. 70.0%."
          format: double
          type: number
        startTime:
          description: Time when the request was received.
          format: google-datetime
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      example:
        operations:
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        - metadata:
            key: ""
          response:
            key: ""
          name: name
          error:
            code: 0
            details:
            - key: ""
            - key: ""
            message: message
          done: true
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the
            request.
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      type: object
    ListVoicesResponse:
      description: The message returned to the client by the `ListVoices` method.
      example:
        voices:
        - languageCodes:
          - languageCodes
          - languageCodes
          ssmlGender: SSML_VOICE_GENDER_UNSPECIFIED
          name: name
          naturalSampleRateHertz: 0
        - languageCodes:
          - languageCodes
          - languageCodes
          ssmlGender: SSML_VOICE_GENDER_UNSPECIFIED
          name: name
          naturalSampleRateHertz: 0
      properties:
        voices:
          description: The list of voices.
          items:
            $ref: '#/components/schemas/Voice'
          type: array
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result
        of a network API call.
      example:
        metadata:
          key: ""
        response:
          key: ""
        name: name
        error:
          code: 0
          details:
          - key: ""
          - key: ""
          message: message
        done: true
      properties:
        done:
          description: "If the value is `false`, it means the operation is still in\
            \ progress. If `true`, the operation is completed, and either `error`\
            \ or `response` is available."
          type: boolean
        error:
          $ref: '#/components/schemas/Status'
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "Service-specific metadata associated with the operation. It\
            \ typically contains progress information and common metadata such as\
            \ create time. Some services might not provide such metadata. Any method\
            \ that returns a long-running operation should document the metadata type,\
            \ if any."
          type: object
        name:
          description: "The server-assigned name, which is only unique within the\
            \ same service that originally returns it. If you use the default HTTP\
            \ mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type
              URL.
          description: "The normal, successful response of the operation. If the original\
            \ method returns no data on success, such as `Delete`, the response is\
            \ `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`,\
            \ the response should be the resource. For other methods, the response\
            \ should have the type `XxxResponse`, where `Xxx` is the original method\
            \ name. For example, if the original method name is `TakeSnapshot()`,\
            \ the inferred response type is `TakeSnapshotResponse`."
          type: object
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable\
        \ for different programming environments, including REST APIs and RPC APIs.\
        \ It is used by [gRPC](https://github.com/grpc). Each `Status` message contains\
        \ three pieces of data: error code, error message, and error details. You\
        \ can find out more about this error model and how to work with it in the\
        \ [API Design Guide](https://cloud.google.com/apis/design/errors)."
      example:
        code: 0
        details:
        - key: ""
        - key: ""
        message: message
      properties:
        code:
          description: "The status code, which should be an enum value of google.rpc.Code."
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a
            common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type
                URL.
            type: object
          type: array
        message:
          description: "A developer-facing error message, which should be in English.\
            \ Any user-facing error message should be localized and sent in the google.rpc.Status.details\
            \ field, or localized by the client."
          type: string
      type: object
    SynthesisInput:
      description: Contains text input to be synthesized. Either `text` or `ssml`
        must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT.
        The input size is limited to 5000 bytes.
      example:
        ssml: ssml
        text: text
      properties:
        ssml:
          description: "The SSML document to be synthesized. The SSML document must\
            \ be valid and well-formed. Otherwise the RPC will fail and return google.rpc.Code.INVALID_ARGUMENT.\
            \ For more information, see [SSML](https://cloud.google.com/text-to-speech/docs/ssml)."
          type: string
        text:
          description: The raw text to be synthesized.
          type: string
      type: object
    SynthesizeLongAudioMetadata:
      description: Metadata for response returned by the `SynthesizeLongAudio` method.
      properties:
        lastUpdateTime:
          deprecated: true
          description: Deprecated. Do not use.
          format: google-datetime
          type: string
        progressPercentage:
          description: "The progress of the most recent processing update in percentage,\
            \ ie. 70.0%."
          format: double
          type: number
        startTime:
          description: Time when the request was received.
          format: google-datetime
          type: string
      type: object
    SynthesizeLongAudioRequest:
      description: The top-level message sent by the client for the `SynthesizeLongAudio`
        method.
      example:
        voice:
          ssmlGender: SSML_VOICE_GENDER_UNSPECIFIED
          name: name
          customVoice:
            model: model
            reportedUsage: REPORTED_USAGE_UNSPECIFIED
          languageCode: languageCode
        input:
          ssml: ssml
          text: text
        outputGcsUri: outputGcsUri
        audioConfig:
          sampleRateHertz: 6
          volumeGainDb: 5.962133916683182
          speakingRate: 1.4658129805029452
          audioEncoding: AUDIO_ENCODING_UNSPECIFIED
          pitch: 0.8008281904610115
          effectsProfileId:
          - effectsProfileId
          - effectsProfileId
      properties:
        audioConfig:
          $ref: '#/components/schemas/AudioConfig'
        input:
          $ref: '#/components/schemas/SynthesisInput'
        outputGcsUri:
          description: "Required. Specifies a Cloud Storage URI for the synthesis\
            \ results. Must be specified in the format: `gs://bucket_name/object_name`,\
            \ and the bucket must already exist."
          type: string
        voice:
          $ref: '#/components/schemas/VoiceSelectionParams'
      type: object
    SynthesizeSpeechRequest:
      description: The top-level message sent by the client for the `SynthesizeSpeech`
        method.
      example:
        voice:
          ssmlGender: SSML_VOICE_GENDER_UNSPECIFIED
          name: name
          customVoice:
            model: model
            reportedUsage: REPORTED_USAGE_UNSPECIFIED
          languageCode: languageCode
        input:
          ssml: ssml
          text: text
        audioConfig:
          sampleRateHertz: 6
          volumeGainDb: 5.962133916683182
          speakingRate: 1.4658129805029452
          audioEncoding: AUDIO_ENCODING_UNSPECIFIED
          pitch: 0.8008281904610115
          effectsProfileId:
          - effectsProfileId
          - effectsProfileId
      properties:
        audioConfig:
          $ref: '#/components/schemas/AudioConfig'
        input:
          $ref: '#/components/schemas/SynthesisInput'
        voice:
          $ref: '#/components/schemas/VoiceSelectionParams'
      type: object
    SynthesizeSpeechResponse:
      description: The message returned to the client by the `SynthesizeSpeech` method.
      example:
        audioContent: audioContent
      properties:
        audioContent:
          description: "The audio data bytes encoded as specified in the request,\
            \ including the header for encodings that are wrapped in containers (e.g.\
            \ MP3, OGG_OPUS). For LINEAR16 audio, we include the WAV header. Note:\
            \ as with all bytes fields, protobuffers use a pure binary representation,\
            \ whereas JSON representations use base64."
          format: byte
          type: string
      type: object
    Voice:
      description: Description of a voice supported by the TTS service.
      example:
        languageCodes:
        - languageCodes
        - languageCodes
        ssmlGender: SSML_VOICE_GENDER_UNSPECIFIED
        name: name
        naturalSampleRateHertz: 0
      properties:
        languageCodes:
          description: "The languages that this voice supports, expressed as [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt)\
            \ language tags (e.g. \"en-US\", \"es-419\", \"cmn-tw\")."
          items:
            type: string
          type: array
        name:
          description: The name of this voice. Each distinct voice has a unique name.
          type: string
        naturalSampleRateHertz:
          description: The natural sample rate (in hertz) for this voice.
          format: int32
          type: integer
        ssmlGender:
          description: The gender of this voice.
          enum:
          - SSML_VOICE_GENDER_UNSPECIFIED
          - MALE
          - FEMALE
          - NEUTRAL
          type: string
      type: object
    VoiceSelectionParams:
      description: Description of which voice to use for a synthesis request.
      example:
        ssmlGender: SSML_VOICE_GENDER_UNSPECIFIED
        name: name
        customVoice:
          model: model
          reportedUsage: REPORTED_USAGE_UNSPECIFIED
        languageCode: languageCode
      properties:
        customVoice:
          $ref: '#/components/schemas/CustomVoiceParams'
        languageCode:
          description: "Required. The language (and potentially also the region) of\
            \ the voice expressed as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt)\
            \ language tag, e.g. \"en-US\". This should not include a script tag (e.g.\
            \ use \"cmn-cn\" rather than \"cmn-Hant-cn\"), because the script will\
            \ be inferred from the input provided in the SynthesisInput. The TTS service\
            \ will use this parameter to help choose an appropriate voice. Note that\
            \ the TTS service may choose a voice with a slightly different language\
            \ code than the one selected; it may substitute a different region (e.g.\
            \ using en-US rather than en-CA if there isn't a Canadian voice available),\
            \ or even a different language, e.g. using \"nb\" (Norwegian Bokmal) instead\
            \ of \"no\" (Norwegian)\"."
          type: string
        name:
          description: "The name of the voice. If not set, the service will choose\
            \ a voice based on the other parameters such as language_code and gender."
          type: string
        ssmlGender:
          description: "The preferred gender of the voice. If not set, the service\
            \ will choose a voice based on the other parameters such as language_code\
            \ and name. Note that this is only a preference, not requirement; if a\
            \ voice of the appropriate gender is not available, the synthesizer should\
            \ substitute a voice with a different gender rather than failing the request."
          enum:
          - SSML_VOICE_GENDER_UNSPECIFIED
          - MALE
          - FEMALE
          - NEUTRAL
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: "See, edit, configure,\
              \ and delete your Google Cloud data and see the email address for your\
              \ Google Account."
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2

