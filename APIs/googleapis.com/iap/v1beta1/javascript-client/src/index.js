/**
 * Cloud Identity-Aware Proxy API
 * Controls access to cloud applications running on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Binding from './model/Binding';
import Expr from './model/Expr';
import GetIamPolicyRequest from './model/GetIamPolicyRequest';
import GetPolicyOptions from './model/GetPolicyOptions';
import Policy from './model/Policy';
import SetIamPolicyRequest from './model/SetIamPolicyRequest';
import TestIamPermissionsRequest from './model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from './model/TestIamPermissionsResponse';
import V1beta1Api from './api/V1beta1Api';


/**
* Controls access to cloud applications running on Google Cloud Platform..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudIdentityAwareProxyApi = require('index'); // See note below*.
* var xxxSvc = new CloudIdentityAwareProxyApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudIdentityAwareProxyApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudIdentityAwareProxyApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudIdentityAwareProxyApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1beta1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Binding model constructor.
     * @property {module:model/Binding}
     */
    Binding,

    /**
     * The Expr model constructor.
     * @property {module:model/Expr}
     */
    Expr,

    /**
     * The GetIamPolicyRequest model constructor.
     * @property {module:model/GetIamPolicyRequest}
     */
    GetIamPolicyRequest,

    /**
     * The GetPolicyOptions model constructor.
     * @property {module:model/GetPolicyOptions}
     */
    GetPolicyOptions,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The SetIamPolicyRequest model constructor.
     * @property {module:model/SetIamPolicyRequest}
     */
    SetIamPolicyRequest,

    /**
     * The TestIamPermissionsRequest model constructor.
     * @property {module:model/TestIamPermissionsRequest}
     */
    TestIamPermissionsRequest,

    /**
     * The TestIamPermissionsResponse model constructor.
     * @property {module:model/TestIamPermissionsResponse}
     */
    TestIamPermissionsResponse,

    /**
    * The V1beta1Api service constructor.
    * @property {module:api/V1beta1Api}
    */
    V1beta1Api
};
