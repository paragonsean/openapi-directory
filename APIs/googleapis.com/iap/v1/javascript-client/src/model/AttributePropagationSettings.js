/**
 * Cloud Identity-Aware Proxy API
 * Controls access to cloud applications running on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AttributePropagationSettings model module.
 * @module model/AttributePropagationSettings
 * @version v1
 */
class AttributePropagationSettings {
    /**
     * Constructs a new <code>AttributePropagationSettings</code>.
     * Configuration for propagating attributes to applications protected by IAP.
     * @alias module:model/AttributePropagationSettings
     */
    constructor() { 
        
        AttributePropagationSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AttributePropagationSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttributePropagationSettings} obj Optional instance to populate.
     * @return {module:model/AttributePropagationSettings} The populated <code>AttributePropagationSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttributePropagationSettings();

            if (data.hasOwnProperty('enable')) {
                obj['enable'] = ApiClient.convertToType(data['enable'], 'Boolean');
            }
            if (data.hasOwnProperty('expression')) {
                obj['expression'] = ApiClient.convertToType(data['expression'], 'String');
            }
            if (data.hasOwnProperty('outputCredentials')) {
                obj['outputCredentials'] = ApiClient.convertToType(data['outputCredentials'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttributePropagationSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttributePropagationSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['expression'] && !(typeof data['expression'] === 'string' || data['expression'] instanceof String)) {
            throw new Error("Expected the field `expression` to be a primitive type in the JSON string but got " + data['expression']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['outputCredentials'])) {
            throw new Error("Expected the field `outputCredentials` to be an array in the JSON data but got " + data['outputCredentials']);
        }

        return true;
    }


}



/**
 * Whether the provided attribute propagation settings should be evaluated on user requests. If set to true, attributes returned from the expression will be propagated in the set output credentials.
 * @member {Boolean} enable
 */
AttributePropagationSettings.prototype['enable'] = undefined;

/**
 * Raw string CEL expression. Must return a list of attributes. A maximum of 45 attributes can be selected. Expressions can select different attribute types from `attributes`: `attributes.saml_attributes`, `attributes.iap_attributes`. The following functions are supported: - filter `.filter(, )`: Returns a subset of `` where `` is true for every item. - in ` in `: Returns true if `` contains ``. - selectByName `.selectByName()`: Returns the attribute in `` with the given `` name, otherwise returns empty. - emitAs `.emitAs()`: Sets the `` name field to the given `` for propagation in selected output credentials. - strict `.strict()`: Ignores the `x-goog-iap-attr-` prefix for the provided `` when propagating with the `HEADER` output credential, such as request headers. - append `.append()` OR `.append()`: Appends the provided `` or `` to the end of ``. Example expression: `attributes.saml_attributes.filter(x, x.name in ['test']).append(attributes.iap_attributes.selectByName('exact').emitAs('custom').strict())`
 * @member {String} expression
 */
AttributePropagationSettings.prototype['expression'] = undefined;

/**
 * Which output credentials attributes selected by the CEL expression should be propagated in. All attributes will be fully duplicated in each selected output credential.
 * @member {Array.<module:model/AttributePropagationSettings.OutputCredentialsEnum>} outputCredentials
 */
AttributePropagationSettings.prototype['outputCredentials'] = undefined;





/**
 * Allowed values for the <code>outputCredentials</code> property.
 * @enum {String}
 * @readonly
 */
AttributePropagationSettings['OutputCredentialsEnum'] = {

    /**
     * value: "OUTPUT_CREDENTIALS_UNSPECIFIED"
     * @const
     */
    "OUTPUT_CREDENTIALS_UNSPECIFIED": "OUTPUT_CREDENTIALS_UNSPECIFIED",

    /**
     * value: "HEADER"
     * @const
     */
    "HEADER": "HEADER",

    /**
     * value: "JWT"
     * @const
     */
    "JWT": "JWT",

    /**
     * value: "RCTOKEN"
     * @const
     */
    "RCTOKEN": "RCTOKEN"
};



export default AttributePropagationSettings;

