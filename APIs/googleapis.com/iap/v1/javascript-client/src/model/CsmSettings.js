/**
 * Cloud Identity-Aware Proxy API
 * Controls access to cloud applications running on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CsmSettings model module.
 * @module model/CsmSettings
 * @version v1
 */
class CsmSettings {
    /**
     * Constructs a new <code>CsmSettings</code>.
     * Configuration for RCToken generated for service mesh workloads protected by IAP. RCToken are IAP generated JWTs that can be verified at the application. The RCToken is primarily used for service mesh deployments, and can be scoped to a single mesh by configuring the audience field accordingly.
     * @alias module:model/CsmSettings
     */
    constructor() { 
        
        CsmSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CsmSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CsmSettings} obj Optional instance to populate.
     * @return {module:model/CsmSettings} The populated <code>CsmSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CsmSettings();

            if (data.hasOwnProperty('rctokenAud')) {
                obj['rctokenAud'] = ApiClient.convertToType(data['rctokenAud'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CsmSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CsmSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['rctokenAud'] && !(typeof data['rctokenAud'] === 'string' || data['rctokenAud'] instanceof String)) {
            throw new Error("Expected the field `rctokenAud` to be a primitive type in the JSON string but got " + data['rctokenAud']);
        }

        return true;
    }


}



/**
 * Audience claim set in the generated RCToken. This value is not validated by IAP.
 * @member {String} rctokenAud
 */
CsmSettings.prototype['rctokenAud'] = undefined;






export default CsmSettings;

