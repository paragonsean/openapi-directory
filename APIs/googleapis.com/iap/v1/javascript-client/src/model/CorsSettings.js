/**
 * Cloud Identity-Aware Proxy API
 * Controls access to cloud applications running on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CorsSettings model module.
 * @module model/CorsSettings
 * @version v1
 */
class CorsSettings {
    /**
     * Constructs a new <code>CorsSettings</code>.
     * Allows customers to configure HTTP request paths that&#39;ll allow HTTP OPTIONS call to bypass authentication and authorization.
     * @alias module:model/CorsSettings
     */
    constructor() { 
        
        CorsSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CorsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CorsSettings} obj Optional instance to populate.
     * @return {module:model/CorsSettings} The populated <code>CorsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CorsSettings();

            if (data.hasOwnProperty('allowHttpOptions')) {
                obj['allowHttpOptions'] = ApiClient.convertToType(data['allowHttpOptions'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CorsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CorsSettings</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Configuration to allow HTTP OPTIONS calls to skip authorization. If undefined, IAP will not apply any special logic to OPTIONS requests.
 * @member {Boolean} allowHttpOptions
 */
CorsSettings.prototype['allowHttpOptions'] = undefined;






export default CorsSettings;

