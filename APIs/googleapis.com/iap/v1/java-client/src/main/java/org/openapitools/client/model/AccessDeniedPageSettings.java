/*
 * Cloud Identity-Aware Proxy API
 * Controls access to cloud applications running on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Custom content configuration for access denied page. IAP allows customers to define a custom URI to use as the error page when access is denied to users. If IAP prevents access to this page, the default IAP error page will be displayed instead.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:34:37.767325-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccessDeniedPageSettings {
  public static final String SERIALIZED_NAME_ACCESS_DENIED_PAGE_URI = "accessDeniedPageUri";
  @SerializedName(SERIALIZED_NAME_ACCESS_DENIED_PAGE_URI)
  private String accessDeniedPageUri;

  public static final String SERIALIZED_NAME_GENERATE_TROUBLESHOOTING_URI = "generateTroubleshootingUri";
  @SerializedName(SERIALIZED_NAME_GENERATE_TROUBLESHOOTING_URI)
  private Boolean generateTroubleshootingUri;

  public static final String SERIALIZED_NAME_REMEDIATION_TOKEN_GENERATION_ENABLED = "remediationTokenGenerationEnabled";
  @SerializedName(SERIALIZED_NAME_REMEDIATION_TOKEN_GENERATION_ENABLED)
  private Boolean remediationTokenGenerationEnabled;

  public AccessDeniedPageSettings() {
  }

  public AccessDeniedPageSettings accessDeniedPageUri(String accessDeniedPageUri) {
    this.accessDeniedPageUri = accessDeniedPageUri;
    return this;
  }

  /**
   * The URI to be redirected to when access is denied.
   * @return accessDeniedPageUri
   */
  @javax.annotation.Nullable
  public String getAccessDeniedPageUri() {
    return accessDeniedPageUri;
  }

  public void setAccessDeniedPageUri(String accessDeniedPageUri) {
    this.accessDeniedPageUri = accessDeniedPageUri;
  }


  public AccessDeniedPageSettings generateTroubleshootingUri(Boolean generateTroubleshootingUri) {
    this.generateTroubleshootingUri = generateTroubleshootingUri;
    return this;
  }

  /**
   * Whether to generate a troubleshooting URL on access denied events to this application.
   * @return generateTroubleshootingUri
   */
  @javax.annotation.Nullable
  public Boolean getGenerateTroubleshootingUri() {
    return generateTroubleshootingUri;
  }

  public void setGenerateTroubleshootingUri(Boolean generateTroubleshootingUri) {
    this.generateTroubleshootingUri = generateTroubleshootingUri;
  }


  public AccessDeniedPageSettings remediationTokenGenerationEnabled(Boolean remediationTokenGenerationEnabled) {
    this.remediationTokenGenerationEnabled = remediationTokenGenerationEnabled;
    return this;
  }

  /**
   * Whether to generate remediation token on access denied events to this application.
   * @return remediationTokenGenerationEnabled
   */
  @javax.annotation.Nullable
  public Boolean getRemediationTokenGenerationEnabled() {
    return remediationTokenGenerationEnabled;
  }

  public void setRemediationTokenGenerationEnabled(Boolean remediationTokenGenerationEnabled) {
    this.remediationTokenGenerationEnabled = remediationTokenGenerationEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessDeniedPageSettings accessDeniedPageSettings = (AccessDeniedPageSettings) o;
    return Objects.equals(this.accessDeniedPageUri, accessDeniedPageSettings.accessDeniedPageUri) &&
        Objects.equals(this.generateTroubleshootingUri, accessDeniedPageSettings.generateTroubleshootingUri) &&
        Objects.equals(this.remediationTokenGenerationEnabled, accessDeniedPageSettings.remediationTokenGenerationEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessDeniedPageUri, generateTroubleshootingUri, remediationTokenGenerationEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessDeniedPageSettings {\n");
    sb.append("    accessDeniedPageUri: ").append(toIndentedString(accessDeniedPageUri)).append("\n");
    sb.append("    generateTroubleshootingUri: ").append(toIndentedString(generateTroubleshootingUri)).append("\n");
    sb.append("    remediationTokenGenerationEnabled: ").append(toIndentedString(remediationTokenGenerationEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accessDeniedPageUri");
    openapiFields.add("generateTroubleshootingUri");
    openapiFields.add("remediationTokenGenerationEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccessDeniedPageSettings
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccessDeniedPageSettings.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccessDeniedPageSettings is not found in the empty JSON string", AccessDeniedPageSettings.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccessDeniedPageSettings.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccessDeniedPageSettings` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accessDeniedPageUri") != null && !jsonObj.get("accessDeniedPageUri").isJsonNull()) && !jsonObj.get("accessDeniedPageUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accessDeniedPageUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accessDeniedPageUri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccessDeniedPageSettings.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccessDeniedPageSettings' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccessDeniedPageSettings> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccessDeniedPageSettings.class));

       return (TypeAdapter<T>) new TypeAdapter<AccessDeniedPageSettings>() {
           @Override
           public void write(JsonWriter out, AccessDeniedPageSettings value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccessDeniedPageSettings read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccessDeniedPageSettings given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccessDeniedPageSettings
   * @throws IOException if the JSON string is invalid with respect to AccessDeniedPageSettings
   */
  public static AccessDeniedPageSettings fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccessDeniedPageSettings.class);
  }

  /**
   * Convert an instance of AccessDeniedPageSettings to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

