/**
 * Cloud Identity-Aware Proxy API
 * Controls access to cloud applications running on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListTunnelDestGroupsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListTunnelDestGroupsResponse::OAIListTunnelDestGroupsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListTunnelDestGroupsResponse::OAIListTunnelDestGroupsResponse() {
    this->initializeModel();
}

OAIListTunnelDestGroupsResponse::~OAIListTunnelDestGroupsResponse() {}

void OAIListTunnelDestGroupsResponse::initializeModel() {

    m_next_page_token_isSet = false;
    m_next_page_token_isValid = false;

    m_tunnel_dest_groups_isSet = false;
    m_tunnel_dest_groups_isValid = false;
}

void OAIListTunnelDestGroupsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListTunnelDestGroupsResponse::fromJsonObject(QJsonObject json) {

    m_next_page_token_isValid = ::OpenAPI::fromJsonValue(m_next_page_token, json[QString("nextPageToken")]);
    m_next_page_token_isSet = !json[QString("nextPageToken")].isNull() && m_next_page_token_isValid;

    m_tunnel_dest_groups_isValid = ::OpenAPI::fromJsonValue(m_tunnel_dest_groups, json[QString("tunnelDestGroups")]);
    m_tunnel_dest_groups_isSet = !json[QString("tunnelDestGroups")].isNull() && m_tunnel_dest_groups_isValid;
}

QString OAIListTunnelDestGroupsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListTunnelDestGroupsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_next_page_token_isSet) {
        obj.insert(QString("nextPageToken"), ::OpenAPI::toJsonValue(m_next_page_token));
    }
    if (m_tunnel_dest_groups.size() > 0) {
        obj.insert(QString("tunnelDestGroups"), ::OpenAPI::toJsonValue(m_tunnel_dest_groups));
    }
    return obj;
}

QString OAIListTunnelDestGroupsResponse::getNextPageToken() const {
    return m_next_page_token;
}
void OAIListTunnelDestGroupsResponse::setNextPageToken(const QString &next_page_token) {
    m_next_page_token = next_page_token;
    m_next_page_token_isSet = true;
}

bool OAIListTunnelDestGroupsResponse::is_next_page_token_Set() const{
    return m_next_page_token_isSet;
}

bool OAIListTunnelDestGroupsResponse::is_next_page_token_Valid() const{
    return m_next_page_token_isValid;
}

QList<OAITunnelDestGroup> OAIListTunnelDestGroupsResponse::getTunnelDestGroups() const {
    return m_tunnel_dest_groups;
}
void OAIListTunnelDestGroupsResponse::setTunnelDestGroups(const QList<OAITunnelDestGroup> &tunnel_dest_groups) {
    m_tunnel_dest_groups = tunnel_dest_groups;
    m_tunnel_dest_groups_isSet = true;
}

bool OAIListTunnelDestGroupsResponse::is_tunnel_dest_groups_Set() const{
    return m_tunnel_dest_groups_isSet;
}

bool OAIListTunnelDestGroupsResponse::is_tunnel_dest_groups_Valid() const{
    return m_tunnel_dest_groups_isValid;
}

bool OAIListTunnelDestGroupsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_next_page_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tunnel_dest_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListTunnelDestGroupsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
