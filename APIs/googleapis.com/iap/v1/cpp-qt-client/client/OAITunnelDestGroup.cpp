/**
 * Cloud Identity-Aware Proxy API
 * Controls access to cloud applications running on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITunnelDestGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITunnelDestGroup::OAITunnelDestGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITunnelDestGroup::OAITunnelDestGroup() {
    this->initializeModel();
}

OAITunnelDestGroup::~OAITunnelDestGroup() {}

void OAITunnelDestGroup::initializeModel() {

    m_cidrs_isSet = false;
    m_cidrs_isValid = false;

    m_fqdns_isSet = false;
    m_fqdns_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAITunnelDestGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITunnelDestGroup::fromJsonObject(QJsonObject json) {

    m_cidrs_isValid = ::OpenAPI::fromJsonValue(m_cidrs, json[QString("cidrs")]);
    m_cidrs_isSet = !json[QString("cidrs")].isNull() && m_cidrs_isValid;

    m_fqdns_isValid = ::OpenAPI::fromJsonValue(m_fqdns, json[QString("fqdns")]);
    m_fqdns_isSet = !json[QString("fqdns")].isNull() && m_fqdns_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAITunnelDestGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITunnelDestGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_cidrs.size() > 0) {
        obj.insert(QString("cidrs"), ::OpenAPI::toJsonValue(m_cidrs));
    }
    if (m_fqdns.size() > 0) {
        obj.insert(QString("fqdns"), ::OpenAPI::toJsonValue(m_fqdns));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<QString> OAITunnelDestGroup::getCidrs() const {
    return m_cidrs;
}
void OAITunnelDestGroup::setCidrs(const QList<QString> &cidrs) {
    m_cidrs = cidrs;
    m_cidrs_isSet = true;
}

bool OAITunnelDestGroup::is_cidrs_Set() const{
    return m_cidrs_isSet;
}

bool OAITunnelDestGroup::is_cidrs_Valid() const{
    return m_cidrs_isValid;
}

QList<QString> OAITunnelDestGroup::getFqdns() const {
    return m_fqdns;
}
void OAITunnelDestGroup::setFqdns(const QList<QString> &fqdns) {
    m_fqdns = fqdns;
    m_fqdns_isSet = true;
}

bool OAITunnelDestGroup::is_fqdns_Set() const{
    return m_fqdns_isSet;
}

bool OAITunnelDestGroup::is_fqdns_Valid() const{
    return m_fqdns_isValid;
}

QString OAITunnelDestGroup::getName() const {
    return m_name;
}
void OAITunnelDestGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITunnelDestGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAITunnelDestGroup::is_name_Valid() const{
    return m_name_isValid;
}

bool OAITunnelDestGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cidrs.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_fqdns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITunnelDestGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
