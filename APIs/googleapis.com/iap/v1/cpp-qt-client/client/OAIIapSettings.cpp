/**
 * Cloud Identity-Aware Proxy API
 * Controls access to cloud applications running on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIapSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIapSettings::OAIIapSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIapSettings::OAIIapSettings() {
    this->initializeModel();
}

OAIIapSettings::~OAIIapSettings() {}

void OAIIapSettings::initializeModel() {

    m_access_settings_isSet = false;
    m_access_settings_isValid = false;

    m_application_settings_isSet = false;
    m_application_settings_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIIapSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIapSettings::fromJsonObject(QJsonObject json) {

    m_access_settings_isValid = ::OpenAPI::fromJsonValue(m_access_settings, json[QString("accessSettings")]);
    m_access_settings_isSet = !json[QString("accessSettings")].isNull() && m_access_settings_isValid;

    m_application_settings_isValid = ::OpenAPI::fromJsonValue(m_application_settings, json[QString("applicationSettings")]);
    m_application_settings_isSet = !json[QString("applicationSettings")].isNull() && m_application_settings_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIIapSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIapSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_access_settings.isSet()) {
        obj.insert(QString("accessSettings"), ::OpenAPI::toJsonValue(m_access_settings));
    }
    if (m_application_settings.isSet()) {
        obj.insert(QString("applicationSettings"), ::OpenAPI::toJsonValue(m_application_settings));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAIAccessSettings OAIIapSettings::getAccessSettings() const {
    return m_access_settings;
}
void OAIIapSettings::setAccessSettings(const OAIAccessSettings &access_settings) {
    m_access_settings = access_settings;
    m_access_settings_isSet = true;
}

bool OAIIapSettings::is_access_settings_Set() const{
    return m_access_settings_isSet;
}

bool OAIIapSettings::is_access_settings_Valid() const{
    return m_access_settings_isValid;
}

OAIApplicationSettings OAIIapSettings::getApplicationSettings() const {
    return m_application_settings;
}
void OAIIapSettings::setApplicationSettings(const OAIApplicationSettings &application_settings) {
    m_application_settings = application_settings;
    m_application_settings_isSet = true;
}

bool OAIIapSettings::is_application_settings_Set() const{
    return m_application_settings_isSet;
}

bool OAIIapSettings::is_application_settings_Valid() const{
    return m_application_settings_isValid;
}

QString OAIIapSettings::getName() const {
    return m_name;
}
void OAIIapSettings::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIIapSettings::is_name_Set() const{
    return m_name_isSet;
}

bool OAIIapSettings::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIIapSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_application_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIapSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
