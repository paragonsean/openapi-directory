/**
 * Cloud Identity-Aware Proxy API
 * Controls access to cloud applications running on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributePropagationSettings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributePropagationSettings::OAIAttributePropagationSettings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributePropagationSettings::OAIAttributePropagationSettings() {
    this->initializeModel();
}

OAIAttributePropagationSettings::~OAIAttributePropagationSettings() {}

void OAIAttributePropagationSettings::initializeModel() {

    m_enable_isSet = false;
    m_enable_isValid = false;

    m_expression_isSet = false;
    m_expression_isValid = false;

    m_output_credentials_isSet = false;
    m_output_credentials_isValid = false;
}

void OAIAttributePropagationSettings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributePropagationSettings::fromJsonObject(QJsonObject json) {

    m_enable_isValid = ::OpenAPI::fromJsonValue(m_enable, json[QString("enable")]);
    m_enable_isSet = !json[QString("enable")].isNull() && m_enable_isValid;

    m_expression_isValid = ::OpenAPI::fromJsonValue(m_expression, json[QString("expression")]);
    m_expression_isSet = !json[QString("expression")].isNull() && m_expression_isValid;

    m_output_credentials_isValid = ::OpenAPI::fromJsonValue(m_output_credentials, json[QString("outputCredentials")]);
    m_output_credentials_isSet = !json[QString("outputCredentials")].isNull() && m_output_credentials_isValid;
}

QString OAIAttributePropagationSettings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributePropagationSettings::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_isSet) {
        obj.insert(QString("enable"), ::OpenAPI::toJsonValue(m_enable));
    }
    if (m_expression_isSet) {
        obj.insert(QString("expression"), ::OpenAPI::toJsonValue(m_expression));
    }
    if (m_output_credentials.size() > 0) {
        obj.insert(QString("outputCredentials"), ::OpenAPI::toJsonValue(m_output_credentials));
    }
    return obj;
}

bool OAIAttributePropagationSettings::isEnable() const {
    return m_enable;
}
void OAIAttributePropagationSettings::setEnable(const bool &enable) {
    m_enable = enable;
    m_enable_isSet = true;
}

bool OAIAttributePropagationSettings::is_enable_Set() const{
    return m_enable_isSet;
}

bool OAIAttributePropagationSettings::is_enable_Valid() const{
    return m_enable_isValid;
}

QString OAIAttributePropagationSettings::getExpression() const {
    return m_expression;
}
void OAIAttributePropagationSettings::setExpression(const QString &expression) {
    m_expression = expression;
    m_expression_isSet = true;
}

bool OAIAttributePropagationSettings::is_expression_Set() const{
    return m_expression_isSet;
}

bool OAIAttributePropagationSettings::is_expression_Valid() const{
    return m_expression_isValid;
}

QList<QString> OAIAttributePropagationSettings::getOutputCredentials() const {
    return m_output_credentials;
}
void OAIAttributePropagationSettings::setOutputCredentials(const QList<QString> &output_credentials) {
    m_output_credentials = output_credentials;
    m_output_credentials_isSet = true;
}

bool OAIAttributePropagationSettings::is_output_credentials_Set() const{
    return m_output_credentials_isSet;
}

bool OAIAttributePropagationSettings::is_output_credentials_Valid() const{
    return m_output_credentials_isValid;
}

bool OAIAttributePropagationSettings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expression_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_output_credentials.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributePropagationSettings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
