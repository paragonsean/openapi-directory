# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.policy_name import PolicyName
from openapi_server.models.resource import Resource
from openapi_server import util


class PolicyDelegationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iam_permission: str=None, iam_service_name: str=None, policy_name: PolicyName=None, resource: Resource=None):
        """PolicyDelegationSettings - a model defined in OpenAPI

        :param iam_permission: The iam_permission of this PolicyDelegationSettings.
        :param iam_service_name: The iam_service_name of this PolicyDelegationSettings.
        :param policy_name: The policy_name of this PolicyDelegationSettings.
        :param resource: The resource of this PolicyDelegationSettings.
        """
        self.openapi_types = {
            'iam_permission': str,
            'iam_service_name': str,
            'policy_name': PolicyName,
            'resource': Resource
        }

        self.attribute_map = {
            'iam_permission': 'iamPermission',
            'iam_service_name': 'iamServiceName',
            'policy_name': 'policyName',
            'resource': 'resource'
        }

        self._iam_permission = iam_permission
        self._iam_service_name = iam_service_name
        self._policy_name = policy_name
        self._resource = resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PolicyDelegationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PolicyDelegationSettings of this PolicyDelegationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iam_permission(self):
        """Gets the iam_permission of this PolicyDelegationSettings.

        Permission to check in IAM.

        :return: The iam_permission of this PolicyDelegationSettings.
        :rtype: str
        """
        return self._iam_permission

    @iam_permission.setter
    def iam_permission(self, iam_permission):
        """Sets the iam_permission of this PolicyDelegationSettings.

        Permission to check in IAM.

        :param iam_permission: The iam_permission of this PolicyDelegationSettings.
        :type iam_permission: str
        """

        self._iam_permission = iam_permission

    @property
    def iam_service_name(self):
        """Gets the iam_service_name of this PolicyDelegationSettings.

        The DNS name of the service (e.g. \"resourcemanager.googleapis.com\"). This should be the domain name part of the full resource names (see https://aip.dev/122#full-resource-names), which is usually the same as IamServiceSpec.service of the service where the resource type is defined.

        :return: The iam_service_name of this PolicyDelegationSettings.
        :rtype: str
        """
        return self._iam_service_name

    @iam_service_name.setter
    def iam_service_name(self, iam_service_name):
        """Sets the iam_service_name of this PolicyDelegationSettings.

        The DNS name of the service (e.g. \"resourcemanager.googleapis.com\"). This should be the domain name part of the full resource names (see https://aip.dev/122#full-resource-names), which is usually the same as IamServiceSpec.service of the service where the resource type is defined.

        :param iam_service_name: The iam_service_name of this PolicyDelegationSettings.
        :type iam_service_name: str
        """

        self._iam_service_name = iam_service_name

    @property
    def policy_name(self):
        """Gets the policy_name of this PolicyDelegationSettings.


        :return: The policy_name of this PolicyDelegationSettings.
        :rtype: PolicyName
        """
        return self._policy_name

    @policy_name.setter
    def policy_name(self, policy_name):
        """Sets the policy_name of this PolicyDelegationSettings.


        :param policy_name: The policy_name of this PolicyDelegationSettings.
        :type policy_name: PolicyName
        """

        self._policy_name = policy_name

    @property
    def resource(self):
        """Gets the resource of this PolicyDelegationSettings.


        :return: The resource of this PolicyDelegationSettings.
        :rtype: Resource
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this PolicyDelegationSettings.


        :param resource: The resource of this PolicyDelegationSettings.
        :type resource: Resource
        """

        self._resource = resource
