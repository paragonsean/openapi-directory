# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_denied_page_settings import AccessDeniedPageSettings
from openapi_server.models.attribute_propagation_settings import AttributePropagationSettings
from openapi_server.models.csm_settings import CsmSettings
from openapi_server import util


class ApplicationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_denied_page_settings: AccessDeniedPageSettings=None, attribute_propagation_settings: AttributePropagationSettings=None, cookie_domain: str=None, csm_settings: CsmSettings=None):
        """ApplicationSettings - a model defined in OpenAPI

        :param access_denied_page_settings: The access_denied_page_settings of this ApplicationSettings.
        :param attribute_propagation_settings: The attribute_propagation_settings of this ApplicationSettings.
        :param cookie_domain: The cookie_domain of this ApplicationSettings.
        :param csm_settings: The csm_settings of this ApplicationSettings.
        """
        self.openapi_types = {
            'access_denied_page_settings': AccessDeniedPageSettings,
            'attribute_propagation_settings': AttributePropagationSettings,
            'cookie_domain': str,
            'csm_settings': CsmSettings
        }

        self.attribute_map = {
            'access_denied_page_settings': 'accessDeniedPageSettings',
            'attribute_propagation_settings': 'attributePropagationSettings',
            'cookie_domain': 'cookieDomain',
            'csm_settings': 'csmSettings'
        }

        self._access_denied_page_settings = access_denied_page_settings
        self._attribute_propagation_settings = attribute_propagation_settings
        self._cookie_domain = cookie_domain
        self._csm_settings = csm_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationSettings of this ApplicationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_denied_page_settings(self):
        """Gets the access_denied_page_settings of this ApplicationSettings.


        :return: The access_denied_page_settings of this ApplicationSettings.
        :rtype: AccessDeniedPageSettings
        """
        return self._access_denied_page_settings

    @access_denied_page_settings.setter
    def access_denied_page_settings(self, access_denied_page_settings):
        """Sets the access_denied_page_settings of this ApplicationSettings.


        :param access_denied_page_settings: The access_denied_page_settings of this ApplicationSettings.
        :type access_denied_page_settings: AccessDeniedPageSettings
        """

        self._access_denied_page_settings = access_denied_page_settings

    @property
    def attribute_propagation_settings(self):
        """Gets the attribute_propagation_settings of this ApplicationSettings.


        :return: The attribute_propagation_settings of this ApplicationSettings.
        :rtype: AttributePropagationSettings
        """
        return self._attribute_propagation_settings

    @attribute_propagation_settings.setter
    def attribute_propagation_settings(self, attribute_propagation_settings):
        """Sets the attribute_propagation_settings of this ApplicationSettings.


        :param attribute_propagation_settings: The attribute_propagation_settings of this ApplicationSettings.
        :type attribute_propagation_settings: AttributePropagationSettings
        """

        self._attribute_propagation_settings = attribute_propagation_settings

    @property
    def cookie_domain(self):
        """Gets the cookie_domain of this ApplicationSettings.

        The Domain value to set for cookies generated by IAP. This value is not validated by the API, but will be ignored at runtime if invalid.

        :return: The cookie_domain of this ApplicationSettings.
        :rtype: str
        """
        return self._cookie_domain

    @cookie_domain.setter
    def cookie_domain(self, cookie_domain):
        """Sets the cookie_domain of this ApplicationSettings.

        The Domain value to set for cookies generated by IAP. This value is not validated by the API, but will be ignored at runtime if invalid.

        :param cookie_domain: The cookie_domain of this ApplicationSettings.
        :type cookie_domain: str
        """

        self._cookie_domain = cookie_domain

    @property
    def csm_settings(self):
        """Gets the csm_settings of this ApplicationSettings.


        :return: The csm_settings of this ApplicationSettings.
        :rtype: CsmSettings
        """
        return self._csm_settings

    @csm_settings.setter
    def csm_settings(self, csm_settings):
        """Sets the csm_settings of this ApplicationSettings.


        :param csm_settings: The csm_settings of this ApplicationSettings.
        :type csm_settings: CsmSettings
        """

        self._csm_settings = csm_settings
