# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_settings import AccessSettings
from openapi_server.models.application_settings import ApplicationSettings
from openapi_server import util


class IapSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_settings: AccessSettings=None, application_settings: ApplicationSettings=None, name: str=None):
        """IapSettings - a model defined in OpenAPI

        :param access_settings: The access_settings of this IapSettings.
        :param application_settings: The application_settings of this IapSettings.
        :param name: The name of this IapSettings.
        """
        self.openapi_types = {
            'access_settings': AccessSettings,
            'application_settings': ApplicationSettings,
            'name': str
        }

        self.attribute_map = {
            'access_settings': 'accessSettings',
            'application_settings': 'applicationSettings',
            'name': 'name'
        }

        self._access_settings = access_settings
        self._application_settings = application_settings
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IapSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IapSettings of this IapSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_settings(self):
        """Gets the access_settings of this IapSettings.


        :return: The access_settings of this IapSettings.
        :rtype: AccessSettings
        """
        return self._access_settings

    @access_settings.setter
    def access_settings(self, access_settings):
        """Sets the access_settings of this IapSettings.


        :param access_settings: The access_settings of this IapSettings.
        :type access_settings: AccessSettings
        """

        self._access_settings = access_settings

    @property
    def application_settings(self):
        """Gets the application_settings of this IapSettings.


        :return: The application_settings of this IapSettings.
        :rtype: ApplicationSettings
        """
        return self._application_settings

    @application_settings.setter
    def application_settings(self, application_settings):
        """Sets the application_settings of this IapSettings.


        :param application_settings: The application_settings of this IapSettings.
        :type application_settings: ApplicationSettings
        """

        self._application_settings = application_settings

    @property
    def name(self):
        """Gets the name of this IapSettings.

        Required. The resource name of the IAP protected resource.

        :return: The name of this IapSettings.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IapSettings.

        Required. The resource name of the IAP protected resource.

        :param name: The name of this IapSettings.
        :type name: str
        """

        self._name = name
