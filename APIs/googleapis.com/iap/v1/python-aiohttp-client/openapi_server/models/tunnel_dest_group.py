# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TunnelDestGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cidrs: List[str]=None, fqdns: List[str]=None, name: str=None):
        """TunnelDestGroup - a model defined in OpenAPI

        :param cidrs: The cidrs of this TunnelDestGroup.
        :param fqdns: The fqdns of this TunnelDestGroup.
        :param name: The name of this TunnelDestGroup.
        """
        self.openapi_types = {
            'cidrs': List[str],
            'fqdns': List[str],
            'name': str
        }

        self.attribute_map = {
            'cidrs': 'cidrs',
            'fqdns': 'fqdns',
            'name': 'name'
        }

        self._cidrs = cidrs
        self._fqdns = fqdns
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TunnelDestGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TunnelDestGroup of this TunnelDestGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cidrs(self):
        """Gets the cidrs of this TunnelDestGroup.

        Unordered list. List of CIDRs that this group applies to.

        :return: The cidrs of this TunnelDestGroup.
        :rtype: List[str]
        """
        return self._cidrs

    @cidrs.setter
    def cidrs(self, cidrs):
        """Sets the cidrs of this TunnelDestGroup.

        Unordered list. List of CIDRs that this group applies to.

        :param cidrs: The cidrs of this TunnelDestGroup.
        :type cidrs: List[str]
        """

        self._cidrs = cidrs

    @property
    def fqdns(self):
        """Gets the fqdns of this TunnelDestGroup.

        Unordered list. List of FQDNs that this group applies to.

        :return: The fqdns of this TunnelDestGroup.
        :rtype: List[str]
        """
        return self._fqdns

    @fqdns.setter
    def fqdns(self, fqdns):
        """Sets the fqdns of this TunnelDestGroup.

        Unordered list. List of FQDNs that this group applies to.

        :param fqdns: The fqdns of this TunnelDestGroup.
        :type fqdns: List[str]
        """

        self._fqdns = fqdns

    @property
    def name(self):
        """Gets the name of this TunnelDestGroup.

        Required. Immutable. Identifier for the TunnelDestGroup. Must be unique within the project and contain only lower case letters (a-z) and dashes (-).

        :return: The name of this TunnelDestGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TunnelDestGroup.

        Required. Immutable. Identifier for the TunnelDestGroup. Must be unique within the project and contain only lower case letters (a-z) and dashes (-).

        :param name: The name of this TunnelDestGroup.
        :type name: str
        """

        self._name = name
