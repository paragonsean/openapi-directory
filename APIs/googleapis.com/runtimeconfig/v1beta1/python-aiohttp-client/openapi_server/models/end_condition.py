# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cardinality import Cardinality
from openapi_server import util


class EndCondition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cardinality: Cardinality=None):
        """EndCondition - a model defined in OpenAPI

        :param cardinality: The cardinality of this EndCondition.
        """
        self.openapi_types = {
            'cardinality': Cardinality
        }

        self.attribute_map = {
            'cardinality': 'cardinality'
        }

        self._cardinality = cardinality

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndCondition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndCondition of this EndCondition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cardinality(self):
        """Gets the cardinality of this EndCondition.


        :return: The cardinality of this EndCondition.
        :rtype: Cardinality
        """
        return self._cardinality

    @cardinality.setter
    def cardinality(self, cardinality):
        """Sets the cardinality of this EndCondition.


        :param cardinality: The cardinality of this EndCondition.
        :type cardinality: Cardinality
        """

        self._cardinality = cardinality
