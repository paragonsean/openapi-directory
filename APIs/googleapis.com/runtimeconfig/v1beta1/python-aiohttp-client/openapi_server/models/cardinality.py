# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Cardinality(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number: int=None, path: str=None):
        """Cardinality - a model defined in OpenAPI

        :param number: The number of this Cardinality.
        :param path: The path of this Cardinality.
        """
        self.openapi_types = {
            'number': int,
            'path': str
        }

        self.attribute_map = {
            'number': 'number',
            'path': 'path'
        }

        self._number = number
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Cardinality':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Cardinality of this Cardinality.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number(self):
        """Gets the number of this Cardinality.

        The number variables under the `path` that must exist to meet this condition. Defaults to 1 if not specified.

        :return: The number of this Cardinality.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this Cardinality.

        The number variables under the `path` that must exist to meet this condition. Defaults to 1 if not specified.

        :param number: The number of this Cardinality.
        :type number: int
        """

        self._number = number

    @property
    def path(self):
        """Gets the path of this Cardinality.

        The root of the variable subtree to monitor. For example, `/foo`.

        :return: The path of this Cardinality.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this Cardinality.

        The root of the variable subtree to monitor. For example, `/foo`.

        :param path: The path of this Cardinality.
        :type path: str
        """

        self._path = path
