/**
 * Cloud Runtime Configuration API
 * The Runtime Configurator allows you to dynamically configure and expose variables through Google Cloud Platform. In addition, you can also set Watchers and Waiters that will watch for changes to your data and return based on certain conditions.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudRuntimeConfigurationApi);
  }
}(this, function(expect, CloudRuntimeConfigurationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudRuntimeConfigurationApi.Operation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Operation', function() {
    it('should create an instance of Operation', function() {
      // uncomment below and update the code to test Operation
      //var instance = new CloudRuntimeConfigurationApi.Operation();
      //expect(instance).to.be.a(CloudRuntimeConfigurationApi.Operation);
    });

    it('should have the property done (base name: "done")', function() {
      // uncomment below and update the code to test the property done
      //var instance = new CloudRuntimeConfigurationApi.Operation();
      //expect(instance).to.be();
    });

    it('should have the property error (base name: "error")', function() {
      // uncomment below and update the code to test the property error
      //var instance = new CloudRuntimeConfigurationApi.Operation();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new CloudRuntimeConfigurationApi.Operation();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CloudRuntimeConfigurationApi.Operation();
      //expect(instance).to.be();
    });

    it('should have the property response (base name: "response")', function() {
      // uncomment below and update the code to test the property response
      //var instance = new CloudRuntimeConfigurationApi.Operation();
      //expect(instance).to.be();
    });

  });

}));
