/**
 * Cloud Runtime Configuration API
 * The Runtime Configurator allows you to dynamically configure and expose variables through Google Cloud Platform. In addition, you can also set Watchers and Waiters that will watch for changes to your data and return based on certain conditions.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudRuntimeConfigurationApi);
  }
}(this, function(expect, CloudRuntimeConfigurationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudRuntimeConfigurationApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('runtimeconfigProjectsConfigsCreate', function() {
      it('should call runtimeconfigProjectsConfigsCreate successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsCreate
        //instance.runtimeconfigProjectsConfigsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsGetIamPolicy', function() {
      it('should call runtimeconfigProjectsConfigsGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsGetIamPolicy
        //instance.runtimeconfigProjectsConfigsGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsList', function() {
      it('should call runtimeconfigProjectsConfigsList successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsList
        //instance.runtimeconfigProjectsConfigsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsSetIamPolicy', function() {
      it('should call runtimeconfigProjectsConfigsSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsSetIamPolicy
        //instance.runtimeconfigProjectsConfigsSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsVariablesCreate', function() {
      it('should call runtimeconfigProjectsConfigsVariablesCreate successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsVariablesCreate
        //instance.runtimeconfigProjectsConfigsVariablesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsVariablesList', function() {
      it('should call runtimeconfigProjectsConfigsVariablesList successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsVariablesList
        //instance.runtimeconfigProjectsConfigsVariablesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsVariablesUpdate', function() {
      it('should call runtimeconfigProjectsConfigsVariablesUpdate successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsVariablesUpdate
        //instance.runtimeconfigProjectsConfigsVariablesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsVariablesWatch', function() {
      it('should call runtimeconfigProjectsConfigsVariablesWatch successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsVariablesWatch
        //instance.runtimeconfigProjectsConfigsVariablesWatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsWaitersCreate', function() {
      it('should call runtimeconfigProjectsConfigsWaitersCreate successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsWaitersCreate
        //instance.runtimeconfigProjectsConfigsWaitersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsWaitersDelete', function() {
      it('should call runtimeconfigProjectsConfigsWaitersDelete successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsWaitersDelete
        //instance.runtimeconfigProjectsConfigsWaitersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsWaitersGet', function() {
      it('should call runtimeconfigProjectsConfigsWaitersGet successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsWaitersGet
        //instance.runtimeconfigProjectsConfigsWaitersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsWaitersList', function() {
      it('should call runtimeconfigProjectsConfigsWaitersList successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsWaitersList
        //instance.runtimeconfigProjectsConfigsWaitersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('runtimeconfigProjectsConfigsWaitersTestIamPermissions', function() {
      it('should call runtimeconfigProjectsConfigsWaitersTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test runtimeconfigProjectsConfigsWaitersTestIamPermissions
        //instance.runtimeconfigProjectsConfigsWaitersTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
