/**
 * Cloud Runtime Configuration API
 * The Runtime Configurator allows you to dynamically configure and expose variables through Google Cloud Platform. In addition, you can also set Watchers and Waiters that will watch for changes to your data and return based on certain conditions.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWatchVariableRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWatchVariableRequest::OAIWatchVariableRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWatchVariableRequest::OAIWatchVariableRequest() {
    this->initializeModel();
}

OAIWatchVariableRequest::~OAIWatchVariableRequest() {}

void OAIWatchVariableRequest::initializeModel() {

    m_newer_than_isSet = false;
    m_newer_than_isValid = false;
}

void OAIWatchVariableRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWatchVariableRequest::fromJsonObject(QJsonObject json) {

    m_newer_than_isValid = ::OpenAPI::fromJsonValue(m_newer_than, json[QString("newerThan")]);
    m_newer_than_isSet = !json[QString("newerThan")].isNull() && m_newer_than_isValid;
}

QString OAIWatchVariableRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWatchVariableRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_newer_than_isSet) {
        obj.insert(QString("newerThan"), ::OpenAPI::toJsonValue(m_newer_than));
    }
    return obj;
}

QString OAIWatchVariableRequest::getNewerThan() const {
    return m_newer_than;
}
void OAIWatchVariableRequest::setNewerThan(const QString &newer_than) {
    m_newer_than = newer_than;
    m_newer_than_isSet = true;
}

bool OAIWatchVariableRequest::is_newer_than_Set() const{
    return m_newer_than_isSet;
}

bool OAIWatchVariableRequest::is_newer_than_Valid() const{
    return m_newer_than_isValid;
}

bool OAIWatchVariableRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_newer_than_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWatchVariableRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
