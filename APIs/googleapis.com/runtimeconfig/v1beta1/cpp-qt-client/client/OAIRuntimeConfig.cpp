/**
 * Cloud Runtime Configuration API
 * The Runtime Configurator allows you to dynamically configure and expose variables through Google Cloud Platform. In addition, you can also set Watchers and Waiters that will watch for changes to your data and return based on certain conditions.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRuntimeConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRuntimeConfig::OAIRuntimeConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRuntimeConfig::OAIRuntimeConfig() {
    this->initializeModel();
}

OAIRuntimeConfig::~OAIRuntimeConfig() {}

void OAIRuntimeConfig::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIRuntimeConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRuntimeConfig::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIRuntimeConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRuntimeConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIRuntimeConfig::getDescription() const {
    return m_description;
}
void OAIRuntimeConfig::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIRuntimeConfig::is_description_Set() const{
    return m_description_isSet;
}

bool OAIRuntimeConfig::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIRuntimeConfig::getName() const {
    return m_name;
}
void OAIRuntimeConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIRuntimeConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIRuntimeConfig::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIRuntimeConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRuntimeConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
