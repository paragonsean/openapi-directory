# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiDeployment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_guidance: str=None, annotations: Dict[str, str]=None, api_spec_revision: str=None, create_time: str=None, description: str=None, display_name: str=None, endpoint_uri: str=None, external_channel_uri: str=None, intended_audience: str=None, labels: Dict[str, str]=None, name: str=None, revision_create_time: str=None, revision_id: str=None, revision_update_time: str=None):
        """ApiDeployment - a model defined in OpenAPI

        :param access_guidance: The access_guidance of this ApiDeployment.
        :param annotations: The annotations of this ApiDeployment.
        :param api_spec_revision: The api_spec_revision of this ApiDeployment.
        :param create_time: The create_time of this ApiDeployment.
        :param description: The description of this ApiDeployment.
        :param display_name: The display_name of this ApiDeployment.
        :param endpoint_uri: The endpoint_uri of this ApiDeployment.
        :param external_channel_uri: The external_channel_uri of this ApiDeployment.
        :param intended_audience: The intended_audience of this ApiDeployment.
        :param labels: The labels of this ApiDeployment.
        :param name: The name of this ApiDeployment.
        :param revision_create_time: The revision_create_time of this ApiDeployment.
        :param revision_id: The revision_id of this ApiDeployment.
        :param revision_update_time: The revision_update_time of this ApiDeployment.
        """
        self.openapi_types = {
            'access_guidance': str,
            'annotations': Dict[str, str],
            'api_spec_revision': str,
            'create_time': str,
            'description': str,
            'display_name': str,
            'endpoint_uri': str,
            'external_channel_uri': str,
            'intended_audience': str,
            'labels': Dict[str, str],
            'name': str,
            'revision_create_time': str,
            'revision_id': str,
            'revision_update_time': str
        }

        self.attribute_map = {
            'access_guidance': 'accessGuidance',
            'annotations': 'annotations',
            'api_spec_revision': 'apiSpecRevision',
            'create_time': 'createTime',
            'description': 'description',
            'display_name': 'displayName',
            'endpoint_uri': 'endpointUri',
            'external_channel_uri': 'externalChannelUri',
            'intended_audience': 'intendedAudience',
            'labels': 'labels',
            'name': 'name',
            'revision_create_time': 'revisionCreateTime',
            'revision_id': 'revisionId',
            'revision_update_time': 'revisionUpdateTime'
        }

        self._access_guidance = access_guidance
        self._annotations = annotations
        self._api_spec_revision = api_spec_revision
        self._create_time = create_time
        self._description = description
        self._display_name = display_name
        self._endpoint_uri = endpoint_uri
        self._external_channel_uri = external_channel_uri
        self._intended_audience = intended_audience
        self._labels = labels
        self._name = name
        self._revision_create_time = revision_create_time
        self._revision_id = revision_id
        self._revision_update_time = revision_update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiDeployment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiDeployment of this ApiDeployment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_guidance(self):
        """Gets the access_guidance of this ApiDeployment.

        Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.

        :return: The access_guidance of this ApiDeployment.
        :rtype: str
        """
        return self._access_guidance

    @access_guidance.setter
    def access_guidance(self, access_guidance):
        """Sets the access_guidance of this ApiDeployment.

        Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.

        :param access_guidance: The access_guidance of this ApiDeployment.
        :type access_guidance: str
        """

        self._access_guidance = access_guidance

    @property
    def annotations(self):
        """Gets the annotations of this ApiDeployment.

        Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.

        :return: The annotations of this ApiDeployment.
        :rtype: Dict[str, str]
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this ApiDeployment.

        Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.

        :param annotations: The annotations of this ApiDeployment.
        :type annotations: Dict[str, str]
        """

        self._annotations = annotations

    @property
    def api_spec_revision(self):
        """Gets the api_spec_revision of this ApiDeployment.

        The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec@revision}`

        :return: The api_spec_revision of this ApiDeployment.
        :rtype: str
        """
        return self._api_spec_revision

    @api_spec_revision.setter
    def api_spec_revision(self, api_spec_revision):
        """Sets the api_spec_revision of this ApiDeployment.

        The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec@revision}`

        :param api_spec_revision: The api_spec_revision of this ApiDeployment.
        :type api_spec_revision: str
        """

        self._api_spec_revision = api_spec_revision

    @property
    def create_time(self):
        """Gets the create_time of this ApiDeployment.

        Output only. Creation timestamp; when the deployment resource was created.

        :return: The create_time of this ApiDeployment.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this ApiDeployment.

        Output only. Creation timestamp; when the deployment resource was created.

        :param create_time: The create_time of this ApiDeployment.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this ApiDeployment.

        A detailed description.

        :return: The description of this ApiDeployment.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ApiDeployment.

        A detailed description.

        :param description: The description of this ApiDeployment.
        :type description: str
        """

        self._description = description

    @property
    def display_name(self):
        """Gets the display_name of this ApiDeployment.

        Human-meaningful name.

        :return: The display_name of this ApiDeployment.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ApiDeployment.

        Human-meaningful name.

        :param display_name: The display_name of this ApiDeployment.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def endpoint_uri(self):
        """Gets the endpoint_uri of this ApiDeployment.

        The address where the deployment is serving. Changes to this value will update the revision.

        :return: The endpoint_uri of this ApiDeployment.
        :rtype: str
        """
        return self._endpoint_uri

    @endpoint_uri.setter
    def endpoint_uri(self, endpoint_uri):
        """Sets the endpoint_uri of this ApiDeployment.

        The address where the deployment is serving. Changes to this value will update the revision.

        :param endpoint_uri: The endpoint_uri of this ApiDeployment.
        :type endpoint_uri: str
        """

        self._endpoint_uri = endpoint_uri

    @property
    def external_channel_uri(self):
        """Gets the external_channel_uri of this ApiDeployment.

        The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision.

        :return: The external_channel_uri of this ApiDeployment.
        :rtype: str
        """
        return self._external_channel_uri

    @external_channel_uri.setter
    def external_channel_uri(self, external_channel_uri):
        """Sets the external_channel_uri of this ApiDeployment.

        The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision.

        :param external_channel_uri: The external_channel_uri of this ApiDeployment.
        :type external_channel_uri: str
        """

        self._external_channel_uri = external_channel_uri

    @property
    def intended_audience(self):
        """Gets the intended_audience of this ApiDeployment.

        Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.

        :return: The intended_audience of this ApiDeployment.
        :rtype: str
        """
        return self._intended_audience

    @intended_audience.setter
    def intended_audience(self, intended_audience):
        """Sets the intended_audience of this ApiDeployment.

        Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.

        :param intended_audience: The intended_audience of this ApiDeployment.
        :type intended_audience: str
        """

        self._intended_audience = intended_audience

    @property
    def labels(self):
        """Gets the labels of this ApiDeployment.

        Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.

        :return: The labels of this ApiDeployment.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ApiDeployment.

        Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.

        :param labels: The labels of this ApiDeployment.
        :type labels: Dict[str, str]
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this ApiDeployment.

        Resource name.

        :return: The name of this ApiDeployment.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApiDeployment.

        Resource name.

        :param name: The name of this ApiDeployment.
        :type name: str
        """

        self._name = name

    @property
    def revision_create_time(self):
        """Gets the revision_create_time of this ApiDeployment.

        Output only. Revision creation timestamp; when the represented revision was created.

        :return: The revision_create_time of this ApiDeployment.
        :rtype: str
        """
        return self._revision_create_time

    @revision_create_time.setter
    def revision_create_time(self, revision_create_time):
        """Sets the revision_create_time of this ApiDeployment.

        Output only. Revision creation timestamp; when the represented revision was created.

        :param revision_create_time: The revision_create_time of this ApiDeployment.
        :type revision_create_time: str
        """

        self._revision_create_time = revision_create_time

    @property
    def revision_id(self):
        """Gets the revision_id of this ApiDeployment.

        Output only. Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.

        :return: The revision_id of this ApiDeployment.
        :rtype: str
        """
        return self._revision_id

    @revision_id.setter
    def revision_id(self, revision_id):
        """Sets the revision_id of this ApiDeployment.

        Output only. Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.

        :param revision_id: The revision_id of this ApiDeployment.
        :type revision_id: str
        """

        self._revision_id = revision_id

    @property
    def revision_update_time(self):
        """Gets the revision_update_time of this ApiDeployment.

        Output only. Last update timestamp: when the represented revision was last modified.

        :return: The revision_update_time of this ApiDeployment.
        :rtype: str
        """
        return self._revision_update_time

    @revision_update_time.setter
    def revision_update_time(self, revision_update_time):
        """Sets the revision_update_time of this ApiDeployment.

        Output only. Last update timestamp: when the represented revision was last modified.

        :param revision_update_time: The revision_update_time of this ApiDeployment.
        :type revision_update_time: str
        """

        self._revision_update_time = revision_update_time
