# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Build(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commit_id: str=None, commit_time: str=None, repo: str=None):
        """Build - a model defined in OpenAPI

        :param commit_id: The commit_id of this Build.
        :param commit_time: The commit_time of this Build.
        :param repo: The repo of this Build.
        """
        self.openapi_types = {
            'commit_id': str,
            'commit_time': str,
            'repo': str
        }

        self.attribute_map = {
            'commit_id': 'commitId',
            'commit_time': 'commitTime',
            'repo': 'repo'
        }

        self._commit_id = commit_id
        self._commit_time = commit_time
        self._repo = repo

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Build':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Build of this Build.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commit_id(self):
        """Gets the commit_id of this Build.

        Output only. Commit ID of the latest commit in the build.

        :return: The commit_id of this Build.
        :rtype: str
        """
        return self._commit_id

    @commit_id.setter
    def commit_id(self, commit_id):
        """Sets the commit_id of this Build.

        Output only. Commit ID of the latest commit in the build.

        :param commit_id: The commit_id of this Build.
        :type commit_id: str
        """

        self._commit_id = commit_id

    @property
    def commit_time(self):
        """Gets the commit_time of this Build.

        Output only. Commit time of the latest commit in the build.

        :return: The commit_time of this Build.
        :rtype: str
        """
        return self._commit_time

    @commit_time.setter
    def commit_time(self, commit_time):
        """Sets the commit_time of this Build.

        Output only. Commit time of the latest commit in the build.

        :param commit_time: The commit_time of this Build.
        :type commit_time: str
        """

        self._commit_time = commit_time

    @property
    def repo(self):
        """Gets the repo of this Build.

        Output only. Path of the open source repository: github.com/apigee/registry.

        :return: The repo of this Build.
        :rtype: str
        """
        return self._repo

    @repo.setter
    def repo(self, repo):
        """Sets the repo of this Build.

        Output only. Path of the open source repository: github.com/apigee/registry.

        :param repo: The repo of this Build.
        :type repo: str
        """

        self._repo = repo
