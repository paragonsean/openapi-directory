/**
 * Apigee Registry API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Api from '../model/Api';
import ApiDeployment from '../model/ApiDeployment';
import ApiSpec from '../model/ApiSpec';
import ApiVersion from '../model/ApiVersion';
import Artifact from '../model/Artifact';
import HttpBody from '../model/HttpBody';
import Instance from '../model/Instance';
import ListApiDeploymentsResponse from '../model/ListApiDeploymentsResponse';
import ListApiSpecRevisionsResponse from '../model/ListApiSpecRevisionsResponse';
import ListApiSpecsResponse from '../model/ListApiSpecsResponse';
import ListApiVersionsResponse from '../model/ListApiVersionsResponse';
import ListApisResponse from '../model/ListApisResponse';
import ListArtifactsResponse from '../model/ListArtifactsResponse';
import ListLocationsResponse from '../model/ListLocationsResponse';
import ListOperationsResponse from '../model/ListOperationsResponse';
import Operation from '../model/Operation';
import Policy from '../model/Policy';
import RollbackApiSpecRequest from '../model/RollbackApiSpecRequest';
import SetIamPolicyRequest from '../model/SetIamPolicyRequest';
import TagApiSpecRevisionRequest from '../model/TagApiSpecRevisionRequest';
import TestIamPermissionsRequest from '../model/TestIamPermissionsRequest';
import TestIamPermissionsResponse from '../model/TestIamPermissionsResponse';

/**
* Projects service.
* @module api/ProjectsApi
* @version v1
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisCreate operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Api} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a specified API.
     * @param {String} parent Required. The parent, which owns this collection of APIs. Format: `projects/_*_/locations/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [apiId] Required. The ID to use for the API, which will become the final component of the API's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
     * @param {module:model/Api} [api] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Api}
     */
    apigeeregistryProjectsLocationsApisCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['api'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsApisCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'apiId': opts['apiId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Api;
      return this.apiClient.callApi(
        '/v1/{parent}/apis', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisDeploymentsCreate operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisDeploymentsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiDeployment} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a specified deployment.
     * @param {String} parent Required. The parent, which owns this collection of deployments. Format: `projects/_*_/locations/_*_/apis/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [apiDeploymentId] Required. The ID to use for the deployment, which will become the final component of the deployment's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
     * @param {module:model/ApiDeployment} [apiDeployment] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisDeploymentsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiDeployment}
     */
    apigeeregistryProjectsLocationsApisDeploymentsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiDeployment'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsApisDeploymentsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'apiDeploymentId': opts['apiDeploymentId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiDeployment;
      return this.apiClient.callApi(
        '/v1/{parent}/deployments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisDeploymentsList operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisDeploymentsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListApiDeploymentsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns matching deployments.
     * @param {String} parent Required. The parent, which owns this collection of deployments. Format: `projects/_*_/locations/_*_/apis/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.
     * @param {String} [orderBy] A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"
     * @param {Number} [pageSize] The maximum number of deployments to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous `ListApiDeployments` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiDeployments` must match the call that provided the page token.
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisDeploymentsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListApiDeploymentsResponse}
     */
    apigeeregistryProjectsLocationsApisDeploymentsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsApisDeploymentsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListApiDeploymentsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/deployments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisList operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListApisResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns matching APIs.
     * @param {String} parent Required. The parent, which owns this collection of APIs. Format: `projects/_*_/locations/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.
     * @param {String} [orderBy] A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"
     * @param {Number} [pageSize] The maximum number of APIs to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous `ListApis` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApis` must match the call that provided the page token.
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListApisResponse}
     */
    apigeeregistryProjectsLocationsApisList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsApisList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListApisResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/apis', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisVersionsCreate operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a specified version.
     * @param {String} parent Required. The parent, which owns this collection of versions. Format: `projects/_*_/locations/_*_/apis/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [apiVersionId] Required. The ID to use for the version, which will become the final component of the version's resource name. This value should be 1-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
     * @param {module:model/ApiVersion} [apiVersion] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiVersion}
     */
    apigeeregistryProjectsLocationsApisVersionsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiVersion'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsApisVersionsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'apiVersionId': opts['apiVersionId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiVersion;
      return this.apiClient.callApi(
        '/v1/{parent}/versions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisVersionsList operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListApiVersionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns matching versions.
     * @param {String} parent Required. The parent, which owns this collection of versions. Format: `projects/_*_/locations/_*_/apis/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.
     * @param {String} [orderBy] A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"
     * @param {Number} [pageSize] The maximum number of versions to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous `ListApiVersions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiVersions` must match the call that provided the page token.
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListApiVersionsResponse}
     */
    apigeeregistryProjectsLocationsApisVersionsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsApisVersionsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListApiVersionsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/versions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisVersionsSpecsCreate operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiSpec} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a specified spec.
     * @param {String} parent Required. The parent, which owns this collection of specs. Format: `projects/_*_/locations/_*_/apis/_*_/versions/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [apiSpecId] Required. The ID to use for the spec, which will become the final component of the spec's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
     * @param {module:model/ApiSpec} [apiSpec] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiSpec}
     */
    apigeeregistryProjectsLocationsApisVersionsSpecsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiSpec'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsApisVersionsSpecsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'apiSpecId': opts['apiSpecId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiSpec;
      return this.apiClient.callApi(
        '/v1/{parent}/specs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisVersionsSpecsDeleteRevision operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsDeleteRevisionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiSpec} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a revision of a spec.
     * @param {String} name Required. The name of the spec revision to be deleted, with a revision ID explicitly included. Example: `projects/sample/locations/global/apis/petstore/versions/1.0.0/specs/openapi.yaml@c7cfa2a8`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsDeleteRevisionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiSpec}
     */
    apigeeregistryProjectsLocationsApisVersionsSpecsDeleteRevision(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsApisVersionsSpecsDeleteRevision");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiSpec;
      return this.apiClient.callApi(
        '/v1/{name}:deleteRevision', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisVersionsSpecsList operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListApiSpecsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns matching specs.
     * @param {String} parent Required. The parent, which owns this collection of specs. Format: `projects/_*_/locations/_*_/apis/_*_/versions/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.
     * @param {String} [orderBy] A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"
     * @param {Number} [pageSize] The maximum number of specs to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous `ListApiSpecs` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListApiSpecs` must match the call that provided the page token.
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListApiSpecsResponse}
     */
    apigeeregistryProjectsLocationsApisVersionsSpecsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsApisVersionsSpecsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListApiSpecsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/specs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisVersionsSpecsListRevisions operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsListRevisionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListApiSpecRevisionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all revisions of a spec. Revisions are returned in descending order of revision creation time.
     * @param {String} name Required. The name of the spec to list revisions for.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields.
     * @param {Number} [pageSize] The maximum number of revisions to return per page.
     * @param {String} [pageToken] The page token, received from a previous ListApiSpecRevisions call. Provide this to retrieve the subsequent page.
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsListRevisionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListApiSpecRevisionsResponse}
     */
    apigeeregistryProjectsLocationsApisVersionsSpecsListRevisions(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsApisVersionsSpecsListRevisions");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListApiSpecRevisionsResponse;
      return this.apiClient.callApi(
        '/v1/{name}:listRevisions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisVersionsSpecsPatch operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiSpec} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to modify a specified spec.
     * @param {String} name Resource name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [allowMissing] If set to true, and the spec is not found, a new spec will be created. In this situation, `update_mask` is ignored.
     * @param {String} [updateMask] The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If an asterisk \"*\" is specified, all fields are updated, including fields that are unspecified/default in the request.
     * @param {module:model/ApiSpec} [apiSpec] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiSpec}
     */
    apigeeregistryProjectsLocationsApisVersionsSpecsPatch(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['apiSpec'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsApisVersionsSpecsPatch");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'allowMissing': opts['allowMissing'],
        'updateMask': opts['updateMask']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiSpec;
      return this.apiClient.callApi(
        '/v1/{name}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisVersionsSpecsRollback operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsRollbackCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiSpec} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the current revision to a specified prior revision. Note that this creates a new revision with a new revision ID.
     * @param {String} name Required. The spec being rolled back.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/RollbackApiSpecRequest} [rollbackApiSpecRequest] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsRollbackCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiSpec}
     */
    apigeeregistryProjectsLocationsApisVersionsSpecsRollback(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['rollbackApiSpecRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsApisVersionsSpecsRollback");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiSpec;
      return this.apiClient.callApi(
        '/v1/{name}:rollback', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsApisVersionsSpecsTagRevision operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsTagRevisionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiSpec} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a tag to a specified revision of a spec.
     * @param {String} name Required. The name of the spec to be tagged, including the revision ID is optional. If a revision is not specified, it will tag the latest revision.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/TagApiSpecRevisionRequest} [tagApiSpecRevisionRequest] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsApisVersionsSpecsTagRevisionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiSpec}
     */
    apigeeregistryProjectsLocationsApisVersionsSpecsTagRevision(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['tagApiSpecRevisionRequest'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsApisVersionsSpecsTagRevision");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ApiSpec;
      return this.apiClient.callApi(
        '/v1/{name}:tagRevision', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsArtifactsCreate operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsArtifactsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Artifact} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a specified artifact.
     * @param {String} parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [artifactId] Required. The ID to use for the artifact, which will become the final component of the artifact's resource name. This value should be 4-63 characters, and valid characters are /a-z-/. Following AIP-162, IDs must not have the form of a UUID.
     * @param {module:model/Artifact} [artifact] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsArtifactsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Artifact}
     */
    apigeeregistryProjectsLocationsArtifactsCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['artifact'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsArtifactsCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'artifactId': opts['artifactId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Artifact;
      return this.apiClient.callApi(
        '/v1/{parent}/artifacts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsArtifactsGetContents operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsArtifactsGetContentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/HttpBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the contents of a specified artifact. If artifacts are stored with GZip compression, the default behavior is to return the artifact uncompressed (the mime_type response field indicates the exact format returned).
     * @param {String} name Required. The name of the artifact whose contents should be retrieved. Format: `{parent}/artifacts/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsArtifactsGetContentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/HttpBody}
     */
    apigeeregistryProjectsLocationsArtifactsGetContents(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsArtifactsGetContents");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = HttpBody;
      return this.apiClient.callApi(
        '/v1/{name}:getContents', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsArtifactsList operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsArtifactsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListArtifactsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns matching artifacts.
     * @param {String} parent Required. The parent, which owns this collection of artifacts. Format: `{parent}`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.
     * @param {String} [orderBy] A comma-separated list of fields, e.g. \"foo,bar\" Fields can be sorted in descending order using the \"desc\" identifier, e.g. \"foo desc,bar\"
     * @param {Number} [pageSize] The maximum number of artifacts to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
     * @param {String} [pageToken] A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the call that provided the page token.
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsArtifactsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListArtifactsResponse}
     */
    apigeeregistryProjectsLocationsArtifactsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsArtifactsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'orderBy': opts['orderBy'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListArtifactsResponse;
      return this.apiClient.callApi(
        '/v1/{parent}/artifacts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsArtifactsReplaceArtifact operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsArtifactsReplaceArtifactCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Artifact} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Used to replace a specified artifact.
     * @param {String} name Resource name.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/Artifact} [artifact] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsArtifactsReplaceArtifactCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Artifact}
     */
    apigeeregistryProjectsLocationsArtifactsReplaceArtifact(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['artifact'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsArtifactsReplaceArtifact");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Artifact;
      return this.apiClient.callApi(
        '/v1/{name}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsInstancesCreate operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsInstancesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provisions instance resources for the Registry.
     * @param {String} parent Required. Parent resource of the Instance, of the form: `projects/_*_/locations/_*`
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [instanceId] Required. Identifier to assign to the Instance. Must be unique within scope of the parent resource.
     * @param {module:model/Instance} [instance] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsInstancesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Operation}
     */
    apigeeregistryProjectsLocationsInstancesCreate(parent, opts, callback) {
      opts = opts || {};
      let postBody = opts['instance'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling apigeeregistryProjectsLocationsInstancesCreate");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'instanceId': opts['instanceId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Operation;
      return this.apiClient.callApi(
        '/v1/{parent}/instances', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsList operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListLocationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists information about the supported locations for this service.
     * @param {String} name The resource that owns the locations collection, if applicable.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] A filter to narrow down results to a preferred subset. The filtering language accepts strings like `\"displayName=tokyo\"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
     * @param {Number} [pageSize] The maximum number of results to return. If not set, the service selects a default.
     * @param {String} [pageToken] A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListLocationsResponse}
     */
    apigeeregistryProjectsLocationsList(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsList");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListLocationsResponse;
      return this.apiClient.callApi(
        '/v1/{name}/locations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsOperationsCancel operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsOperationsCancelCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
     * @param {String} name The name of the operation resource to be cancelled.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Object.<String, Object>} [body] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsOperationsCancelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    apigeeregistryProjectsLocationsOperationsCancel(name, opts, callback) {
      opts = opts || {};
      let postBody = opts['body'];
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsOperationsCancel");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/{name}:cancel', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsOperationsDelete operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsOperationsDeleteCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
     * @param {String} name The name of the operation resource to be deleted.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Boolean} [force] If set to true, any child resources will also be deleted. (Otherwise, the request will only work if there are no child resources.)
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsOperationsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    apigeeregistryProjectsLocationsOperationsDelete(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsOperationsDelete");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'force': opts['force']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/v1/{name}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsOperationsGet operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsOperationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     * @param {String} name The name of the operation resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsOperationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Operation}
     */
    apigeeregistryProjectsLocationsOperationsGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsOperationsGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Operation;
      return this.apiClient.callApi(
        '/v1/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsOperationsList operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsOperationsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListOperationsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
     * @param {String} name The name of the operation's parent resource.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [filter] The standard list filter.
     * @param {Number} [pageSize] The standard list page size.
     * @param {String} [pageToken] The standard list page token.
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsOperationsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListOperationsResponse}
     */
    apigeeregistryProjectsLocationsOperationsList(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling apigeeregistryProjectsLocationsOperationsList");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'filter': opts['filter'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListOperationsResponse;
      return this.apiClient.callApi(
        '/v1/{name}/operations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsRuntimeGetIamPolicy operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsRuntimeGetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
     * @param {String} resource REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {Number} [optionsRequestedPolicyVersion] Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsRuntimeGetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Policy}
     */
    apigeeregistryProjectsLocationsRuntimeGetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling apigeeregistryProjectsLocationsRuntimeGetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType'],
        'options.requestedPolicyVersion': opts['optionsRequestedPolicyVersion']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Policy;
      return this.apiClient.callApi(
        '/v1/{resource}:getIamPolicy', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsRuntimeSetIamPolicy operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsRuntimeSetIamPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Policy} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
     * @param {String} resource REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/SetIamPolicyRequest} [setIamPolicyRequest] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsRuntimeSetIamPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Policy}
     */
    apigeeregistryProjectsLocationsRuntimeSetIamPolicy(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['setIamPolicyRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling apigeeregistryProjectsLocationsRuntimeSetIamPolicy");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Policy;
      return this.apiClient.callApi(
        '/v1/{resource}:setIamPolicy', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apigeeregistryProjectsLocationsRuntimeTestIamPermissions operation.
     * @callback module:api/ProjectsApi~apigeeregistryProjectsLocationsRuntimeTestIamPermissionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TestIamPermissionsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.
     * @param {String} resource REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:model/String} [alt] Data format for response.
     * @param {String} [callback] JSONP
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {Boolean} [prettyPrint] Returns response with indentations and line breaks.
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {module:model/TestIamPermissionsRequest} [testIamPermissionsRequest] 
     * @param {module:api/ProjectsApi~apigeeregistryProjectsLocationsRuntimeTestIamPermissionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TestIamPermissionsResponse}
     */
    apigeeregistryProjectsLocationsRuntimeTestIamPermissions(resource, opts, callback) {
      opts = opts || {};
      let postBody = opts['testIamPermissionsRequest'];
      // verify the required parameter 'resource' is set
      if (resource === undefined || resource === null) {
        throw new Error("Missing the required parameter 'resource' when calling apigeeregistryProjectsLocationsRuntimeTestIamPermissions");
      }

      let pathParams = {
        'resource': resource
      };
      let queryParams = {
        '$.xgafv': opts['xgafv'],
        'access_token': opts['accessToken'],
        'alt': opts['alt'],
        'callback': opts['callback'],
        'fields': opts['fields'],
        'key': opts['key'],
        'oauth_token': opts['oauthToken'],
        'prettyPrint': opts['prettyPrint'],
        'quotaUser': opts['quotaUser'],
        'upload_protocol': opts['uploadProtocol'],
        'uploadType': opts['uploadType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TestIamPermissionsResponse;
      return this.apiClient.callApi(
        '/v1/{resource}:testIamPermissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
