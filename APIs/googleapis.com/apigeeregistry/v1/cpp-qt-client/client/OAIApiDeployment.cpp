/**
 * Apigee Registry API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApiDeployment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApiDeployment::OAIApiDeployment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApiDeployment::OAIApiDeployment() {
    this->initializeModel();
}

OAIApiDeployment::~OAIApiDeployment() {}

void OAIApiDeployment::initializeModel() {

    m_access_guidance_isSet = false;
    m_access_guidance_isValid = false;

    m_annotations_isSet = false;
    m_annotations_isValid = false;

    m_api_spec_revision_isSet = false;
    m_api_spec_revision_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_endpoint_uri_isSet = false;
    m_endpoint_uri_isValid = false;

    m_external_channel_uri_isSet = false;
    m_external_channel_uri_isValid = false;

    m_intended_audience_isSet = false;
    m_intended_audience_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_revision_create_time_isSet = false;
    m_revision_create_time_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;

    m_revision_update_time_isSet = false;
    m_revision_update_time_isValid = false;
}

void OAIApiDeployment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApiDeployment::fromJsonObject(QJsonObject json) {

    m_access_guidance_isValid = ::OpenAPI::fromJsonValue(m_access_guidance, json[QString("accessGuidance")]);
    m_access_guidance_isSet = !json[QString("accessGuidance")].isNull() && m_access_guidance_isValid;

    m_annotations_isValid = ::OpenAPI::fromJsonValue(m_annotations, json[QString("annotations")]);
    m_annotations_isSet = !json[QString("annotations")].isNull() && m_annotations_isValid;

    m_api_spec_revision_isValid = ::OpenAPI::fromJsonValue(m_api_spec_revision, json[QString("apiSpecRevision")]);
    m_api_spec_revision_isSet = !json[QString("apiSpecRevision")].isNull() && m_api_spec_revision_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_endpoint_uri_isValid = ::OpenAPI::fromJsonValue(m_endpoint_uri, json[QString("endpointUri")]);
    m_endpoint_uri_isSet = !json[QString("endpointUri")].isNull() && m_endpoint_uri_isValid;

    m_external_channel_uri_isValid = ::OpenAPI::fromJsonValue(m_external_channel_uri, json[QString("externalChannelUri")]);
    m_external_channel_uri_isSet = !json[QString("externalChannelUri")].isNull() && m_external_channel_uri_isValid;

    m_intended_audience_isValid = ::OpenAPI::fromJsonValue(m_intended_audience, json[QString("intendedAudience")]);
    m_intended_audience_isSet = !json[QString("intendedAudience")].isNull() && m_intended_audience_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_revision_create_time_isValid = ::OpenAPI::fromJsonValue(m_revision_create_time, json[QString("revisionCreateTime")]);
    m_revision_create_time_isSet = !json[QString("revisionCreateTime")].isNull() && m_revision_create_time_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionId")]);
    m_revision_id_isSet = !json[QString("revisionId")].isNull() && m_revision_id_isValid;

    m_revision_update_time_isValid = ::OpenAPI::fromJsonValue(m_revision_update_time, json[QString("revisionUpdateTime")]);
    m_revision_update_time_isSet = !json[QString("revisionUpdateTime")].isNull() && m_revision_update_time_isValid;
}

QString OAIApiDeployment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApiDeployment::asJsonObject() const {
    QJsonObject obj;
    if (m_access_guidance_isSet) {
        obj.insert(QString("accessGuidance"), ::OpenAPI::toJsonValue(m_access_guidance));
    }
    if (m_annotations.size() > 0) {
        obj.insert(QString("annotations"), ::OpenAPI::toJsonValue(m_annotations));
    }
    if (m_api_spec_revision_isSet) {
        obj.insert(QString("apiSpecRevision"), ::OpenAPI::toJsonValue(m_api_spec_revision));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_endpoint_uri_isSet) {
        obj.insert(QString("endpointUri"), ::OpenAPI::toJsonValue(m_endpoint_uri));
    }
    if (m_external_channel_uri_isSet) {
        obj.insert(QString("externalChannelUri"), ::OpenAPI::toJsonValue(m_external_channel_uri));
    }
    if (m_intended_audience_isSet) {
        obj.insert(QString("intendedAudience"), ::OpenAPI::toJsonValue(m_intended_audience));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_revision_create_time_isSet) {
        obj.insert(QString("revisionCreateTime"), ::OpenAPI::toJsonValue(m_revision_create_time));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionId"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    if (m_revision_update_time_isSet) {
        obj.insert(QString("revisionUpdateTime"), ::OpenAPI::toJsonValue(m_revision_update_time));
    }
    return obj;
}

QString OAIApiDeployment::getAccessGuidance() const {
    return m_access_guidance;
}
void OAIApiDeployment::setAccessGuidance(const QString &access_guidance) {
    m_access_guidance = access_guidance;
    m_access_guidance_isSet = true;
}

bool OAIApiDeployment::is_access_guidance_Set() const{
    return m_access_guidance_isSet;
}

bool OAIApiDeployment::is_access_guidance_Valid() const{
    return m_access_guidance_isValid;
}

QMap<QString, QString> OAIApiDeployment::getAnnotations() const {
    return m_annotations;
}
void OAIApiDeployment::setAnnotations(const QMap<QString, QString> &annotations) {
    m_annotations = annotations;
    m_annotations_isSet = true;
}

bool OAIApiDeployment::is_annotations_Set() const{
    return m_annotations_isSet;
}

bool OAIApiDeployment::is_annotations_Valid() const{
    return m_annotations_isValid;
}

QString OAIApiDeployment::getApiSpecRevision() const {
    return m_api_spec_revision;
}
void OAIApiDeployment::setApiSpecRevision(const QString &api_spec_revision) {
    m_api_spec_revision = api_spec_revision;
    m_api_spec_revision_isSet = true;
}

bool OAIApiDeployment::is_api_spec_revision_Set() const{
    return m_api_spec_revision_isSet;
}

bool OAIApiDeployment::is_api_spec_revision_Valid() const{
    return m_api_spec_revision_isValid;
}

QString OAIApiDeployment::getCreateTime() const {
    return m_create_time;
}
void OAIApiDeployment::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIApiDeployment::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIApiDeployment::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIApiDeployment::getDescription() const {
    return m_description;
}
void OAIApiDeployment::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIApiDeployment::is_description_Set() const{
    return m_description_isSet;
}

bool OAIApiDeployment::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIApiDeployment::getDisplayName() const {
    return m_display_name;
}
void OAIApiDeployment::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIApiDeployment::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIApiDeployment::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIApiDeployment::getEndpointUri() const {
    return m_endpoint_uri;
}
void OAIApiDeployment::setEndpointUri(const QString &endpoint_uri) {
    m_endpoint_uri = endpoint_uri;
    m_endpoint_uri_isSet = true;
}

bool OAIApiDeployment::is_endpoint_uri_Set() const{
    return m_endpoint_uri_isSet;
}

bool OAIApiDeployment::is_endpoint_uri_Valid() const{
    return m_endpoint_uri_isValid;
}

QString OAIApiDeployment::getExternalChannelUri() const {
    return m_external_channel_uri;
}
void OAIApiDeployment::setExternalChannelUri(const QString &external_channel_uri) {
    m_external_channel_uri = external_channel_uri;
    m_external_channel_uri_isSet = true;
}

bool OAIApiDeployment::is_external_channel_uri_Set() const{
    return m_external_channel_uri_isSet;
}

bool OAIApiDeployment::is_external_channel_uri_Valid() const{
    return m_external_channel_uri_isValid;
}

QString OAIApiDeployment::getIntendedAudience() const {
    return m_intended_audience;
}
void OAIApiDeployment::setIntendedAudience(const QString &intended_audience) {
    m_intended_audience = intended_audience;
    m_intended_audience_isSet = true;
}

bool OAIApiDeployment::is_intended_audience_Set() const{
    return m_intended_audience_isSet;
}

bool OAIApiDeployment::is_intended_audience_Valid() const{
    return m_intended_audience_isValid;
}

QMap<QString, QString> OAIApiDeployment::getLabels() const {
    return m_labels;
}
void OAIApiDeployment::setLabels(const QMap<QString, QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIApiDeployment::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIApiDeployment::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIApiDeployment::getName() const {
    return m_name;
}
void OAIApiDeployment::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIApiDeployment::is_name_Set() const{
    return m_name_isSet;
}

bool OAIApiDeployment::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIApiDeployment::getRevisionCreateTime() const {
    return m_revision_create_time;
}
void OAIApiDeployment::setRevisionCreateTime(const QString &revision_create_time) {
    m_revision_create_time = revision_create_time;
    m_revision_create_time_isSet = true;
}

bool OAIApiDeployment::is_revision_create_time_Set() const{
    return m_revision_create_time_isSet;
}

bool OAIApiDeployment::is_revision_create_time_Valid() const{
    return m_revision_create_time_isValid;
}

QString OAIApiDeployment::getRevisionId() const {
    return m_revision_id;
}
void OAIApiDeployment::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIApiDeployment::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIApiDeployment::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

QString OAIApiDeployment::getRevisionUpdateTime() const {
    return m_revision_update_time;
}
void OAIApiDeployment::setRevisionUpdateTime(const QString &revision_update_time) {
    m_revision_update_time = revision_update_time;
    m_revision_update_time_isSet = true;
}

bool OAIApiDeployment::is_revision_update_time_Set() const{
    return m_revision_update_time_isSet;
}

bool OAIApiDeployment::is_revision_update_time_Valid() const{
    return m_revision_update_time_isValid;
}

bool OAIApiDeployment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_guidance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_annotations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_spec_revision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_channel_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intended_audience_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApiDeployment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
