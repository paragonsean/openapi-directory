openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Google Enterprise License Manager API lets you manage Google Workspace
    and related licenses for all users of a customer that you manage.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Enterprise License Manager API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://licensing.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: licensing
externalDocs:
  url: https://developers.google.com/admin-sdk/licensing/
servers:
- url: https://licensing.googleapis.com/
tags:
- name: licenseAssignments
paths:
  /apps/licensing/v1/product/{productId}/sku/{skuId}/user:
    post:
      description: Assign a license.
      operationId: licensing_license_assignments_insert
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A product's unique identifier. For more information about products\
          \ in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      - description: "A product SKU's unique identifier. For more information about\
          \ available SKUs in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseAssignmentInsert'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseAssignment'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/apps.licensing
        Oauth2c:
        - https://www.googleapis.com/auth/apps.licensing
      tags:
      - licenseAssignments
      x-openapi-router-controller: openapi_server.controllers.license_assignments_controller
      x-codegen-request-body-name: body
  /apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}:
    delete:
      description: Revoke a license.
      operationId: licensing_license_assignments_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A product's unique identifier. For more information about products\
          \ in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      - description: "A product SKU's unique identifier. For more information about\
          \ available SKUs in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      - description: "The user's current primary email address. If the user's email\
          \ address changes, use the new email address in your API requests. Since\
          \ a `userId` is subject to change, do not use a `userId` value as a key\
          \ for persistent data. This key could break if the current user's email\
          \ address changes. If the `userId` is suspended, the license status changes."
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/apps.licensing
        Oauth2c:
        - https://www.googleapis.com/auth/apps.licensing
      tags:
      - licenseAssignments
      x-openapi-router-controller: openapi_server.controllers.license_assignments_controller
    get:
      description: Get a specific user's license by product SKU.
      operationId: licensing_license_assignments_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A product's unique identifier. For more information about products\
          \ in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      - description: "A product SKU's unique identifier. For more information about\
          \ available SKUs in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      - description: "The user's current primary email address. If the user's email\
          \ address changes, use the new email address in your API requests. Since\
          \ a `userId` is subject to change, do not use a `userId` value as a key\
          \ for persistent data. This key could break if the current user's email\
          \ address changes. If the `userId` is suspended, the license status changes."
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseAssignment'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/apps.licensing
        Oauth2c:
        - https://www.googleapis.com/auth/apps.licensing
      tags:
      - licenseAssignments
      x-openapi-router-controller: openapi_server.controllers.license_assignments_controller
    patch:
      description: Reassign a user's product SKU with a different SKU in the same
        product. This method supports patch semantics.
      operationId: licensing_license_assignments_patch
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A product's unique identifier. For more information about products\
          \ in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      - description: "A product SKU's unique identifier. For more information about\
          \ available SKUs in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      - description: "The user's current primary email address. If the user's email\
          \ address changes, use the new email address in your API requests. Since\
          \ a `userId` is subject to change, do not use a `userId` value as a key\
          \ for persistent data. This key could break if the current user's email\
          \ address changes. If the `userId` is suspended, the license status changes."
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseAssignment'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseAssignment'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/apps.licensing
        Oauth2c:
        - https://www.googleapis.com/auth/apps.licensing
      tags:
      - licenseAssignments
      x-openapi-router-controller: openapi_server.controllers.license_assignments_controller
      x-codegen-request-body-name: body
    put:
      description: Reassign a user's product SKU with a different SKU in the same
        product.
      operationId: licensing_license_assignments_update
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A product's unique identifier. For more information about products\
          \ in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      - description: "A product SKU's unique identifier. For more information about\
          \ available SKUs in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      - description: "The user's current primary email address. If the user's email\
          \ address changes, use the new email address in your API requests. Since\
          \ a `userId` is subject to change, do not use a `userId` value as a key\
          \ for persistent data. This key could break if the current user's email\
          \ address changes. If the `userId` is suspended, the license status changes."
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicenseAssignment'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseAssignment'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/apps.licensing
        Oauth2c:
        - https://www.googleapis.com/auth/apps.licensing
      tags:
      - licenseAssignments
      x-openapi-router-controller: openapi_server.controllers.license_assignments_controller
      x-codegen-request-body-name: body
  /apps/licensing/v1/product/{productId}/sku/{skuId}/users:
    get:
      description: List all users assigned licenses for a specific product SKU.
      operationId: licensing_license_assignments_list_for_product_and_sku
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A product's unique identifier. For more information about products\
          \ in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      - description: "A product SKU's unique identifier. For more information about\
          \ available SKUs in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: skuId
        required: true
        schema:
          type: string
        style: simple
      - description: "The customer's unique ID as defined in the Admin console, such\
          \ as `C00000000`. If the customer is suspended, the server returns an error."
        explode: true
        in: query
        name: customerId
        required: true
        schema:
          type: string
        style: form
      - description: The `maxResults` query string determines how many entries are
          returned on each page of a large response. This is an optional parameter.
          The value must be a positive number.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "Token to fetch the next page of data. The `maxResults` query\
          \ string is related to the `pageToken` since `maxResults` determines how\
          \ many entries are returned on each page. This is an optional query string.\
          \ If not specified, the server returns the first page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseAssignmentList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/apps.licensing
        Oauth2c:
        - https://www.googleapis.com/auth/apps.licensing
      tags:
      - licenseAssignments
      x-openapi-router-controller: openapi_server.controllers.license_assignments_controller
  /apps/licensing/v1/product/{productId}/users:
    get:
      description: List all users assigned licenses for a specific product SKU.
      operationId: licensing_license_assignments_list_for_product
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "A product's unique identifier. For more information about products\
          \ in this version of the API, see Products and SKUs."
        explode: false
        in: path
        name: productId
        required: true
        schema:
          type: string
        style: simple
      - description: "The customer's unique ID as defined in the Admin console, such\
          \ as `C00000000`. If the customer is suspended, the server returns an error."
        explode: true
        in: query
        name: customerId
        required: true
        schema:
          type: string
        style: form
      - description: The `maxResults` query string determines how many entries are
          returned on each page of a large response. This is an optional parameter.
          The value must be a positive number.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "Token to fetch the next page of data. The `maxResults` query\
          \ string is related to the `pageToken` since `maxResults` determines how\
          \ many entries are returned on each page. This is an optional query string.\
          \ If not specified, the server returns the first page."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicenseAssignmentList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/apps.licensing
        Oauth2c:
        - https://www.googleapis.com/auth/apps.licensing
      tags:
      - licenseAssignments
      x-openapi-router-controller: openapi_server.controllers.license_assignments_controller
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    Empty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    LicenseAssignment:
      description: Representation of a license assignment.
      example:
        skuName: skuName
        productId: productId
        kind: licensing#licenseAssignment
        etags: etags
        userId: userId
        productName: productName
        skuId: skuId
        selfLink: selfLink
      properties:
        etags:
          description: ETag of the resource.
          title: etags
          type: string
        kind:
          default: licensing#licenseAssignment
          description: "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`."
          title: kind
          type: string
        productId:
          description: "A product's unique identifier. For more information about\
            \ products in this version of the API, see Product and SKU IDs."
          title: productId
          type: string
        productName:
          description: Display Name of the product.
          title: productName
          type: string
        selfLink:
          description: Link to this page.
          title: selfLink
          type: string
        skuId:
          description: "A product SKU's unique identifier. For more information about\
            \ available SKUs in this version of the API, see Products and SKUs."
          title: skuId
          type: string
        skuName:
          description: Display Name of the sku of the product.
          title: skuName
          type: string
        userId:
          description: "The user's current primary email address. If the user's email\
            \ address changes, use the new email address in your API requests. Since\
            \ a `userId` is subject to change, do not use a `userId` value as a key\
            \ for persistent data. This key could break if the current user's email\
            \ address changes. If the `userId` is suspended, the license status changes."
          title: userId
          type: string
      title: LicenseAssignment
      type: object
    LicenseAssignmentInsert:
      description: Representation of a license assignment.
      example:
        userId: userId
      properties:
        userId:
          description: Email id of the user
          title: userId
          type: string
      title: LicenseAssignmentInsert
      type: object
    LicenseAssignmentList:
      example:
        kind: licensing#licenseAssignmentList
        nextPageToken: nextPageToken
        etag: etag
        items:
        - skuName: skuName
          productId: productId
          kind: licensing#licenseAssignment
          etags: etags
          userId: userId
          productName: productName
          skuId: skuId
          selfLink: selfLink
        - skuName: skuName
          productId: productId
          kind: licensing#licenseAssignment
          etags: etags
          userId: userId
          productName: productName
          skuId: skuId
          selfLink: selfLink
      properties:
        etag:
          description: ETag of the resource.
          title: etag
          type: string
        items:
          description: The LicenseAssignments in this page of results.
          items:
            $ref: '#/components/schemas/LicenseAssignment'
          title: items
          type: array
        kind:
          default: licensing#licenseAssignmentList
          description: Identifies the resource as a collection of LicenseAssignments.
          title: kind
          type: string
        nextPageToken:
          description: The token that you must submit in a subsequent request to retrieve
            additional license results matching your query parameters. The `maxResults`
            query string is related to the `nextPageToken` since `maxResults` determines
            how many entries are returned on each next page.
          title: nextPageToken
          type: string
      title: LicenseAssignmentList
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/apps.licensing: View and manage G Suite
              licenses for your domain
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/apps.licensing: View and manage G Suite
              licenses for your domain
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
