/*
 * Firebase Cloud Messaging Data API
 * Provides additional information about Firebase Cloud Messaging (FCM) message sends and deliveries.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Overview of delivery performance for messages that were successfully delivered. All percentages are calculated with countMessagesAccepted as the denominator. These categories are not mutually exclusive; a message can be delayed for multiple reasons.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:26.577887-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents {
  public static final String SERIALIZED_NAME_DELAYED_DEVICE_DOZE = "delayedDeviceDoze";
  @SerializedName(SERIALIZED_NAME_DELAYED_DEVICE_DOZE)
  private Float delayedDeviceDoze;

  public static final String SERIALIZED_NAME_DELAYED_DEVICE_OFFLINE = "delayedDeviceOffline";
  @SerializedName(SERIALIZED_NAME_DELAYED_DEVICE_OFFLINE)
  private Float delayedDeviceOffline;

  public static final String SERIALIZED_NAME_DELAYED_MESSAGE_THROTTLED = "delayedMessageThrottled";
  @SerializedName(SERIALIZED_NAME_DELAYED_MESSAGE_THROTTLED)
  private Float delayedMessageThrottled;

  public static final String SERIALIZED_NAME_DELAYED_USER_STOPPED = "delayedUserStopped";
  @SerializedName(SERIALIZED_NAME_DELAYED_USER_STOPPED)
  private Float delayedUserStopped;

  public static final String SERIALIZED_NAME_DELIVERED_NO_DELAY = "deliveredNoDelay";
  @SerializedName(SERIALIZED_NAME_DELIVERED_NO_DELAY)
  private Float deliveredNoDelay;

  public GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents() {
  }

  public GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents delayedDeviceDoze(Float delayedDeviceDoze) {
    this.delayedDeviceDoze = delayedDeviceDoze;
    return this;
  }

  /**
   * The percentage of accepted messages that were delayed because the device was in doze mode. Only [normal priority messages](https://firebase.google.com/docs/cloud-messaging/concept-options#setting-the-priority-of-a-message) should be delayed due to doze mode.
   * @return delayedDeviceDoze
   */
  @javax.annotation.Nullable
  public Float getDelayedDeviceDoze() {
    return delayedDeviceDoze;
  }

  public void setDelayedDeviceDoze(Float delayedDeviceDoze) {
    this.delayedDeviceDoze = delayedDeviceDoze;
  }


  public GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents delayedDeviceOffline(Float delayedDeviceOffline) {
    this.delayedDeviceOffline = delayedDeviceOffline;
    return this;
  }

  /**
   * The percentage of accepted messages that were delayed because the target device was not connected at the time of sending. These messages were eventually delivered when the device reconnected.
   * @return delayedDeviceOffline
   */
  @javax.annotation.Nullable
  public Float getDelayedDeviceOffline() {
    return delayedDeviceOffline;
  }

  public void setDelayedDeviceOffline(Float delayedDeviceOffline) {
    this.delayedDeviceOffline = delayedDeviceOffline;
  }


  public GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents delayedMessageThrottled(Float delayedMessageThrottled) {
    this.delayedMessageThrottled = delayedMessageThrottled;
    return this;
  }

  /**
   * The percentage of accepted messages that were delayed due to message throttling, such as [collapsible message throttling](https://firebase.google.com/docs/cloud-messaging/concept-options#collapsible_throttling) or [maximum message rate throttling](https://firebase.google.com/docs/cloud-messaging/concept-options#device_throttling).
   * @return delayedMessageThrottled
   */
  @javax.annotation.Nullable
  public Float getDelayedMessageThrottled() {
    return delayedMessageThrottled;
  }

  public void setDelayedMessageThrottled(Float delayedMessageThrottled) {
    this.delayedMessageThrottled = delayedMessageThrottled;
  }


  public GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents delayedUserStopped(Float delayedUserStopped) {
    this.delayedUserStopped = delayedUserStopped;
    return this;
  }

  /**
   * The percentage of accepted messages that were delayed because the intended device user-profile was [stopped](https://firebase.google.com/docs/cloud-messaging/android/receive#handling_messages) on the target device at the time of the send. The messages were eventually delivered when the user-profile was started again.
   * @return delayedUserStopped
   */
  @javax.annotation.Nullable
  public Float getDelayedUserStopped() {
    return delayedUserStopped;
  }

  public void setDelayedUserStopped(Float delayedUserStopped) {
    this.delayedUserStopped = delayedUserStopped;
  }


  public GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents deliveredNoDelay(Float deliveredNoDelay) {
    this.deliveredNoDelay = deliveredNoDelay;
    return this;
  }

  /**
   * The percentage of accepted messages that were delivered to the device without delay from the FCM system.
   * @return deliveredNoDelay
   */
  @javax.annotation.Nullable
  public Float getDeliveredNoDelay() {
    return deliveredNoDelay;
  }

  public void setDeliveredNoDelay(Float deliveredNoDelay) {
    this.deliveredNoDelay = deliveredNoDelay;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents googleFirebaseFcmDataV1beta1DeliveryPerformancePercents = (GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents) o;
    return Objects.equals(this.delayedDeviceDoze, googleFirebaseFcmDataV1beta1DeliveryPerformancePercents.delayedDeviceDoze) &&
        Objects.equals(this.delayedDeviceOffline, googleFirebaseFcmDataV1beta1DeliveryPerformancePercents.delayedDeviceOffline) &&
        Objects.equals(this.delayedMessageThrottled, googleFirebaseFcmDataV1beta1DeliveryPerformancePercents.delayedMessageThrottled) &&
        Objects.equals(this.delayedUserStopped, googleFirebaseFcmDataV1beta1DeliveryPerformancePercents.delayedUserStopped) &&
        Objects.equals(this.deliveredNoDelay, googleFirebaseFcmDataV1beta1DeliveryPerformancePercents.deliveredNoDelay);
  }

  @Override
  public int hashCode() {
    return Objects.hash(delayedDeviceDoze, delayedDeviceOffline, delayedMessageThrottled, delayedUserStopped, deliveredNoDelay);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents {\n");
    sb.append("    delayedDeviceDoze: ").append(toIndentedString(delayedDeviceDoze)).append("\n");
    sb.append("    delayedDeviceOffline: ").append(toIndentedString(delayedDeviceOffline)).append("\n");
    sb.append("    delayedMessageThrottled: ").append(toIndentedString(delayedMessageThrottled)).append("\n");
    sb.append("    delayedUserStopped: ").append(toIndentedString(delayedUserStopped)).append("\n");
    sb.append("    deliveredNoDelay: ").append(toIndentedString(deliveredNoDelay)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("delayedDeviceDoze");
    openapiFields.add("delayedDeviceOffline");
    openapiFields.add("delayedMessageThrottled");
    openapiFields.add("delayedUserStopped");
    openapiFields.add("deliveredNoDelay");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents is not found in the empty JSON string", GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents>() {
           @Override
           public void write(JsonWriter out, GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents
   * @throws IOException if the JSON string is invalid with respect to GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents
   */
  public static GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents.class);
  }

  /**
   * Convert an instance of GoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

