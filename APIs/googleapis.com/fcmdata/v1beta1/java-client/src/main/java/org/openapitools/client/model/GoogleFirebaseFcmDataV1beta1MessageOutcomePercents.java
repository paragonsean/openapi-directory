/*
 * Firebase Cloud Messaging Data API
 * Provides additional information about Firebase Cloud Messaging (FCM) message sends and deliveries.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Percentage breakdown of message delivery outcomes. These categories are mutually exclusive. All percentages are calculated with countMessagesAccepted as the denominator. These categories may not account for all message outcomes.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:33:26.577887-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleFirebaseFcmDataV1beta1MessageOutcomePercents {
  public static final String SERIALIZED_NAME_DELIVERED = "delivered";
  @SerializedName(SERIALIZED_NAME_DELIVERED)
  private Float delivered;

  public static final String SERIALIZED_NAME_DROPPED_APP_FORCE_STOPPED = "droppedAppForceStopped";
  @SerializedName(SERIALIZED_NAME_DROPPED_APP_FORCE_STOPPED)
  private Float droppedAppForceStopped;

  public static final String SERIALIZED_NAME_DROPPED_DEVICE_INACTIVE = "droppedDeviceInactive";
  @SerializedName(SERIALIZED_NAME_DROPPED_DEVICE_INACTIVE)
  private Float droppedDeviceInactive;

  public static final String SERIALIZED_NAME_DROPPED_TOO_MANY_PENDING_MESSAGES = "droppedTooManyPendingMessages";
  @SerializedName(SERIALIZED_NAME_DROPPED_TOO_MANY_PENDING_MESSAGES)
  private Float droppedTooManyPendingMessages;

  public static final String SERIALIZED_NAME_PENDING = "pending";
  @SerializedName(SERIALIZED_NAME_PENDING)
  private Float pending;

  public GoogleFirebaseFcmDataV1beta1MessageOutcomePercents() {
  }

  public GoogleFirebaseFcmDataV1beta1MessageOutcomePercents delivered(Float delivered) {
    this.delivered = delivered;
    return this;
  }

  /**
   * The percentage of all accepted messages that were successfully delivered to the device.
   * @return delivered
   */
  @javax.annotation.Nullable
  public Float getDelivered() {
    return delivered;
  }

  public void setDelivered(Float delivered) {
    this.delivered = delivered;
  }


  public GoogleFirebaseFcmDataV1beta1MessageOutcomePercents droppedAppForceStopped(Float droppedAppForceStopped) {
    this.droppedAppForceStopped = droppedAppForceStopped;
    return this;
  }

  /**
   * The percentage of accepted messages that were dropped because the application was force stopped on the device at the time of delivery and retries were unsuccessful.
   * @return droppedAppForceStopped
   */
  @javax.annotation.Nullable
  public Float getDroppedAppForceStopped() {
    return droppedAppForceStopped;
  }

  public void setDroppedAppForceStopped(Float droppedAppForceStopped) {
    this.droppedAppForceStopped = droppedAppForceStopped;
  }


  public GoogleFirebaseFcmDataV1beta1MessageOutcomePercents droppedDeviceInactive(Float droppedDeviceInactive) {
    this.droppedDeviceInactive = droppedDeviceInactive;
    return this;
  }

  /**
   * The percentage of accepted messages that were dropped because the target device is inactive. FCM will drop messages if the target device is deemed inactive by our servers. If a device does reconnect, we call [OnDeletedMessages()](https://firebase.google.com/docs/cloud-messaging/android/receive#override-ondeletedmessages) in our SDK instead of delivering the messages.
   * @return droppedDeviceInactive
   */
  @javax.annotation.Nullable
  public Float getDroppedDeviceInactive() {
    return droppedDeviceInactive;
  }

  public void setDroppedDeviceInactive(Float droppedDeviceInactive) {
    this.droppedDeviceInactive = droppedDeviceInactive;
  }


  public GoogleFirebaseFcmDataV1beta1MessageOutcomePercents droppedTooManyPendingMessages(Float droppedTooManyPendingMessages) {
    this.droppedTooManyPendingMessages = droppedTooManyPendingMessages;
    return this;
  }

  /**
   * The percentage of accepted messages that were dropped due to [too many undelivered non-collapsible messages](https://firebase.google.com/docs/cloud-messaging/concept-options#collapsible_and_non-collapsible_messages). Specifically, each app instance can only have 100 pending messages stored on our servers for a device which is disconnected. When that device reconnects, those messages are delivered. When there are more than the maximum pending messages, we call [OnDeletedMessages()](https://firebase.google.com/docs/cloud-messaging/android/receive#override-ondeletedmessages) in our SDK instead of delivering the messages.
   * @return droppedTooManyPendingMessages
   */
  @javax.annotation.Nullable
  public Float getDroppedTooManyPendingMessages() {
    return droppedTooManyPendingMessages;
  }

  public void setDroppedTooManyPendingMessages(Float droppedTooManyPendingMessages) {
    this.droppedTooManyPendingMessages = droppedTooManyPendingMessages;
  }


  public GoogleFirebaseFcmDataV1beta1MessageOutcomePercents pending(Float pending) {
    this.pending = pending;
    return this;
  }

  /**
   * The percentage of messages accepted on this day that were not dropped and not delivered, due to the device being disconnected (as of the end of the America/Los_Angeles day when the message was sent to FCM). A portion of these messages will be delivered the next day when the device connects but others may be destined to devices that ultimately never reconnect.
   * @return pending
   */
  @javax.annotation.Nullable
  public Float getPending() {
    return pending;
  }

  public void setPending(Float pending) {
    this.pending = pending;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleFirebaseFcmDataV1beta1MessageOutcomePercents googleFirebaseFcmDataV1beta1MessageOutcomePercents = (GoogleFirebaseFcmDataV1beta1MessageOutcomePercents) o;
    return Objects.equals(this.delivered, googleFirebaseFcmDataV1beta1MessageOutcomePercents.delivered) &&
        Objects.equals(this.droppedAppForceStopped, googleFirebaseFcmDataV1beta1MessageOutcomePercents.droppedAppForceStopped) &&
        Objects.equals(this.droppedDeviceInactive, googleFirebaseFcmDataV1beta1MessageOutcomePercents.droppedDeviceInactive) &&
        Objects.equals(this.droppedTooManyPendingMessages, googleFirebaseFcmDataV1beta1MessageOutcomePercents.droppedTooManyPendingMessages) &&
        Objects.equals(this.pending, googleFirebaseFcmDataV1beta1MessageOutcomePercents.pending);
  }

  @Override
  public int hashCode() {
    return Objects.hash(delivered, droppedAppForceStopped, droppedDeviceInactive, droppedTooManyPendingMessages, pending);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleFirebaseFcmDataV1beta1MessageOutcomePercents {\n");
    sb.append("    delivered: ").append(toIndentedString(delivered)).append("\n");
    sb.append("    droppedAppForceStopped: ").append(toIndentedString(droppedAppForceStopped)).append("\n");
    sb.append("    droppedDeviceInactive: ").append(toIndentedString(droppedDeviceInactive)).append("\n");
    sb.append("    droppedTooManyPendingMessages: ").append(toIndentedString(droppedTooManyPendingMessages)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("delivered");
    openapiFields.add("droppedAppForceStopped");
    openapiFields.add("droppedDeviceInactive");
    openapiFields.add("droppedTooManyPendingMessages");
    openapiFields.add("pending");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleFirebaseFcmDataV1beta1MessageOutcomePercents
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleFirebaseFcmDataV1beta1MessageOutcomePercents.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleFirebaseFcmDataV1beta1MessageOutcomePercents is not found in the empty JSON string", GoogleFirebaseFcmDataV1beta1MessageOutcomePercents.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleFirebaseFcmDataV1beta1MessageOutcomePercents.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleFirebaseFcmDataV1beta1MessageOutcomePercents` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleFirebaseFcmDataV1beta1MessageOutcomePercents.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleFirebaseFcmDataV1beta1MessageOutcomePercents' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleFirebaseFcmDataV1beta1MessageOutcomePercents> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleFirebaseFcmDataV1beta1MessageOutcomePercents.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleFirebaseFcmDataV1beta1MessageOutcomePercents>() {
           @Override
           public void write(JsonWriter out, GoogleFirebaseFcmDataV1beta1MessageOutcomePercents value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleFirebaseFcmDataV1beta1MessageOutcomePercents read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleFirebaseFcmDataV1beta1MessageOutcomePercents given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleFirebaseFcmDataV1beta1MessageOutcomePercents
   * @throws IOException if the JSON string is invalid with respect to GoogleFirebaseFcmDataV1beta1MessageOutcomePercents
   */
  public static GoogleFirebaseFcmDataV1beta1MessageOutcomePercents fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleFirebaseFcmDataV1beta1MessageOutcomePercents.class);
  }

  /**
   * Convert an instance of GoogleFirebaseFcmDataV1beta1MessageOutcomePercents to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

