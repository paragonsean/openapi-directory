/**
 * Firebase Cloud Messaging Data API
 * Provides additional information about Firebase Cloud Messaging (FCM) message sends and deliveries.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleFirebaseFcmDataV1beta1Data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleFirebaseFcmDataV1beta1Data::OAIGoogleFirebaseFcmDataV1beta1Data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleFirebaseFcmDataV1beta1Data::OAIGoogleFirebaseFcmDataV1beta1Data() {
    this->initializeModel();
}

OAIGoogleFirebaseFcmDataV1beta1Data::~OAIGoogleFirebaseFcmDataV1beta1Data() {}

void OAIGoogleFirebaseFcmDataV1beta1Data::initializeModel() {

    m_count_messages_accepted_isSet = false;
    m_count_messages_accepted_isValid = false;

    m_delivery_performance_percents_isSet = false;
    m_delivery_performance_percents_isValid = false;

    m_message_insight_percents_isSet = false;
    m_message_insight_percents_isValid = false;

    m_message_outcome_percents_isSet = false;
    m_message_outcome_percents_isValid = false;
}

void OAIGoogleFirebaseFcmDataV1beta1Data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleFirebaseFcmDataV1beta1Data::fromJsonObject(QJsonObject json) {

    m_count_messages_accepted_isValid = ::OpenAPI::fromJsonValue(m_count_messages_accepted, json[QString("countMessagesAccepted")]);
    m_count_messages_accepted_isSet = !json[QString("countMessagesAccepted")].isNull() && m_count_messages_accepted_isValid;

    m_delivery_performance_percents_isValid = ::OpenAPI::fromJsonValue(m_delivery_performance_percents, json[QString("deliveryPerformancePercents")]);
    m_delivery_performance_percents_isSet = !json[QString("deliveryPerformancePercents")].isNull() && m_delivery_performance_percents_isValid;

    m_message_insight_percents_isValid = ::OpenAPI::fromJsonValue(m_message_insight_percents, json[QString("messageInsightPercents")]);
    m_message_insight_percents_isSet = !json[QString("messageInsightPercents")].isNull() && m_message_insight_percents_isValid;

    m_message_outcome_percents_isValid = ::OpenAPI::fromJsonValue(m_message_outcome_percents, json[QString("messageOutcomePercents")]);
    m_message_outcome_percents_isSet = !json[QString("messageOutcomePercents")].isNull() && m_message_outcome_percents_isValid;
}

QString OAIGoogleFirebaseFcmDataV1beta1Data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleFirebaseFcmDataV1beta1Data::asJsonObject() const {
    QJsonObject obj;
    if (m_count_messages_accepted_isSet) {
        obj.insert(QString("countMessagesAccepted"), ::OpenAPI::toJsonValue(m_count_messages_accepted));
    }
    if (m_delivery_performance_percents.isSet()) {
        obj.insert(QString("deliveryPerformancePercents"), ::OpenAPI::toJsonValue(m_delivery_performance_percents));
    }
    if (m_message_insight_percents.isSet()) {
        obj.insert(QString("messageInsightPercents"), ::OpenAPI::toJsonValue(m_message_insight_percents));
    }
    if (m_message_outcome_percents.isSet()) {
        obj.insert(QString("messageOutcomePercents"), ::OpenAPI::toJsonValue(m_message_outcome_percents));
    }
    return obj;
}

QString OAIGoogleFirebaseFcmDataV1beta1Data::getCountMessagesAccepted() const {
    return m_count_messages_accepted;
}
void OAIGoogleFirebaseFcmDataV1beta1Data::setCountMessagesAccepted(const QString &count_messages_accepted) {
    m_count_messages_accepted = count_messages_accepted;
    m_count_messages_accepted_isSet = true;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::is_count_messages_accepted_Set() const{
    return m_count_messages_accepted_isSet;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::is_count_messages_accepted_Valid() const{
    return m_count_messages_accepted_isValid;
}

OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents OAIGoogleFirebaseFcmDataV1beta1Data::getDeliveryPerformancePercents() const {
    return m_delivery_performance_percents;
}
void OAIGoogleFirebaseFcmDataV1beta1Data::setDeliveryPerformancePercents(const OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents &delivery_performance_percents) {
    m_delivery_performance_percents = delivery_performance_percents;
    m_delivery_performance_percents_isSet = true;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::is_delivery_performance_percents_Set() const{
    return m_delivery_performance_percents_isSet;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::is_delivery_performance_percents_Valid() const{
    return m_delivery_performance_percents_isValid;
}

OAIGoogleFirebaseFcmDataV1beta1MessageInsightPercents OAIGoogleFirebaseFcmDataV1beta1Data::getMessageInsightPercents() const {
    return m_message_insight_percents;
}
void OAIGoogleFirebaseFcmDataV1beta1Data::setMessageInsightPercents(const OAIGoogleFirebaseFcmDataV1beta1MessageInsightPercents &message_insight_percents) {
    m_message_insight_percents = message_insight_percents;
    m_message_insight_percents_isSet = true;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::is_message_insight_percents_Set() const{
    return m_message_insight_percents_isSet;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::is_message_insight_percents_Valid() const{
    return m_message_insight_percents_isValid;
}

OAIGoogleFirebaseFcmDataV1beta1MessageOutcomePercents OAIGoogleFirebaseFcmDataV1beta1Data::getMessageOutcomePercents() const {
    return m_message_outcome_percents;
}
void OAIGoogleFirebaseFcmDataV1beta1Data::setMessageOutcomePercents(const OAIGoogleFirebaseFcmDataV1beta1MessageOutcomePercents &message_outcome_percents) {
    m_message_outcome_percents = message_outcome_percents;
    m_message_outcome_percents_isSet = true;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::is_message_outcome_percents_Set() const{
    return m_message_outcome_percents_isSet;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::is_message_outcome_percents_Valid() const{
    return m_message_outcome_percents_isValid;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_messages_accepted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_performance_percents.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_insight_percents.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_outcome_percents.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleFirebaseFcmDataV1beta1Data::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
