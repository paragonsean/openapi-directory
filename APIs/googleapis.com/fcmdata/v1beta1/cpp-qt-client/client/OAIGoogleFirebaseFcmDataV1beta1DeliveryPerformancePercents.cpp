/**
 * Firebase Cloud Messaging Data API
 * Provides additional information about Firebase Cloud Messaging (FCM) message sends and deliveries.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents() {
    this->initializeModel();
}

OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::~OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents() {}

void OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::initializeModel() {

    m_delayed_device_doze_isSet = false;
    m_delayed_device_doze_isValid = false;

    m_delayed_device_offline_isSet = false;
    m_delayed_device_offline_isValid = false;

    m_delayed_message_throttled_isSet = false;
    m_delayed_message_throttled_isValid = false;

    m_delayed_user_stopped_isSet = false;
    m_delayed_user_stopped_isValid = false;

    m_delivered_no_delay_isSet = false;
    m_delivered_no_delay_isValid = false;
}

void OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::fromJsonObject(QJsonObject json) {

    m_delayed_device_doze_isValid = ::OpenAPI::fromJsonValue(m_delayed_device_doze, json[QString("delayedDeviceDoze")]);
    m_delayed_device_doze_isSet = !json[QString("delayedDeviceDoze")].isNull() && m_delayed_device_doze_isValid;

    m_delayed_device_offline_isValid = ::OpenAPI::fromJsonValue(m_delayed_device_offline, json[QString("delayedDeviceOffline")]);
    m_delayed_device_offline_isSet = !json[QString("delayedDeviceOffline")].isNull() && m_delayed_device_offline_isValid;

    m_delayed_message_throttled_isValid = ::OpenAPI::fromJsonValue(m_delayed_message_throttled, json[QString("delayedMessageThrottled")]);
    m_delayed_message_throttled_isSet = !json[QString("delayedMessageThrottled")].isNull() && m_delayed_message_throttled_isValid;

    m_delayed_user_stopped_isValid = ::OpenAPI::fromJsonValue(m_delayed_user_stopped, json[QString("delayedUserStopped")]);
    m_delayed_user_stopped_isSet = !json[QString("delayedUserStopped")].isNull() && m_delayed_user_stopped_isValid;

    m_delivered_no_delay_isValid = ::OpenAPI::fromJsonValue(m_delivered_no_delay, json[QString("deliveredNoDelay")]);
    m_delivered_no_delay_isSet = !json[QString("deliveredNoDelay")].isNull() && m_delivered_no_delay_isValid;
}

QString OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::asJsonObject() const {
    QJsonObject obj;
    if (m_delayed_device_doze_isSet) {
        obj.insert(QString("delayedDeviceDoze"), ::OpenAPI::toJsonValue(m_delayed_device_doze));
    }
    if (m_delayed_device_offline_isSet) {
        obj.insert(QString("delayedDeviceOffline"), ::OpenAPI::toJsonValue(m_delayed_device_offline));
    }
    if (m_delayed_message_throttled_isSet) {
        obj.insert(QString("delayedMessageThrottled"), ::OpenAPI::toJsonValue(m_delayed_message_throttled));
    }
    if (m_delayed_user_stopped_isSet) {
        obj.insert(QString("delayedUserStopped"), ::OpenAPI::toJsonValue(m_delayed_user_stopped));
    }
    if (m_delivered_no_delay_isSet) {
        obj.insert(QString("deliveredNoDelay"), ::OpenAPI::toJsonValue(m_delivered_no_delay));
    }
    return obj;
}

float OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::getDelayedDeviceDoze() const {
    return m_delayed_device_doze;
}
void OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::setDelayedDeviceDoze(const float &delayed_device_doze) {
    m_delayed_device_doze = delayed_device_doze;
    m_delayed_device_doze_isSet = true;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delayed_device_doze_Set() const{
    return m_delayed_device_doze_isSet;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delayed_device_doze_Valid() const{
    return m_delayed_device_doze_isValid;
}

float OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::getDelayedDeviceOffline() const {
    return m_delayed_device_offline;
}
void OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::setDelayedDeviceOffline(const float &delayed_device_offline) {
    m_delayed_device_offline = delayed_device_offline;
    m_delayed_device_offline_isSet = true;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delayed_device_offline_Set() const{
    return m_delayed_device_offline_isSet;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delayed_device_offline_Valid() const{
    return m_delayed_device_offline_isValid;
}

float OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::getDelayedMessageThrottled() const {
    return m_delayed_message_throttled;
}
void OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::setDelayedMessageThrottled(const float &delayed_message_throttled) {
    m_delayed_message_throttled = delayed_message_throttled;
    m_delayed_message_throttled_isSet = true;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delayed_message_throttled_Set() const{
    return m_delayed_message_throttled_isSet;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delayed_message_throttled_Valid() const{
    return m_delayed_message_throttled_isValid;
}

float OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::getDelayedUserStopped() const {
    return m_delayed_user_stopped;
}
void OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::setDelayedUserStopped(const float &delayed_user_stopped) {
    m_delayed_user_stopped = delayed_user_stopped;
    m_delayed_user_stopped_isSet = true;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delayed_user_stopped_Set() const{
    return m_delayed_user_stopped_isSet;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delayed_user_stopped_Valid() const{
    return m_delayed_user_stopped_isValid;
}

float OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::getDeliveredNoDelay() const {
    return m_delivered_no_delay;
}
void OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::setDeliveredNoDelay(const float &delivered_no_delay) {
    m_delivered_no_delay = delivered_no_delay;
    m_delivered_no_delay_isSet = true;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delivered_no_delay_Set() const{
    return m_delivered_no_delay_isSet;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::is_delivered_no_delay_Valid() const{
    return m_delivered_no_delay_isValid;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_delayed_device_doze_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delayed_device_offline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delayed_message_throttled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delayed_user_stopped_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivered_no_delay_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleFirebaseFcmDataV1beta1DeliveryPerformancePercents::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
