/**
 * Cloud IoT API
 * Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDevice.h
 *
 * The device resource.
 */

#ifndef OAIDevice_H
#define OAIDevice_H

#include <QJsonObject>

#include "OAIDeviceConfig.h"
#include "OAIDeviceCredential.h"
#include "OAIDeviceState.h"
#include "OAIGatewayConfig.h"
#include "OAIStatus.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeviceConfig;
class OAIDeviceCredential;
class OAIGatewayConfig;
class OAIStatus;
class OAIDeviceState;

class OAIDevice : public OAIObject {
public:
    OAIDevice();
    OAIDevice(QString json);
    ~OAIDevice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBlocked() const;
    void setBlocked(const bool &blocked);
    bool is_blocked_Set() const;
    bool is_blocked_Valid() const;

    OAIDeviceConfig getConfig() const;
    void setConfig(const OAIDeviceConfig &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QList<OAIDeviceCredential> getCredentials() const;
    void setCredentials(const QList<OAIDeviceCredential> &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    OAIGatewayConfig getGatewayConfig() const;
    void setGatewayConfig(const OAIGatewayConfig &gateway_config);
    bool is_gateway_config_Set() const;
    bool is_gateway_config_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLastConfigAckTime() const;
    void setLastConfigAckTime(const QString &last_config_ack_time);
    bool is_last_config_ack_time_Set() const;
    bool is_last_config_ack_time_Valid() const;

    QString getLastConfigSendTime() const;
    void setLastConfigSendTime(const QString &last_config_send_time);
    bool is_last_config_send_time_Set() const;
    bool is_last_config_send_time_Valid() const;

    OAIStatus getLastErrorStatus() const;
    void setLastErrorStatus(const OAIStatus &last_error_status);
    bool is_last_error_status_Set() const;
    bool is_last_error_status_Valid() const;

    QString getLastErrorTime() const;
    void setLastErrorTime(const QString &last_error_time);
    bool is_last_error_time_Set() const;
    bool is_last_error_time_Valid() const;

    QString getLastEventTime() const;
    void setLastEventTime(const QString &last_event_time);
    bool is_last_event_time_Set() const;
    bool is_last_event_time_Valid() const;

    QString getLastHeartbeatTime() const;
    void setLastHeartbeatTime(const QString &last_heartbeat_time);
    bool is_last_heartbeat_time_Set() const;
    bool is_last_heartbeat_time_Valid() const;

    QString getLastStateTime() const;
    void setLastStateTime(const QString &last_state_time);
    bool is_last_state_time_Set() const;
    bool is_last_state_time_Valid() const;

    QString getLogLevel() const;
    void setLogLevel(const QString &log_level);
    bool is_log_level_Set() const;
    bool is_log_level_Valid() const;

    QMap<QString, QString> getMetadata() const;
    void setMetadata(const QMap<QString, QString> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNumId() const;
    void setNumId(const QString &num_id);
    bool is_num_id_Set() const;
    bool is_num_id_Valid() const;

    OAIDeviceState getState() const;
    void setState(const OAIDeviceState &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_blocked;
    bool m_blocked_isSet;
    bool m_blocked_isValid;

    OAIDeviceConfig m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QList<OAIDeviceCredential> m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;

    OAIGatewayConfig m_gateway_config;
    bool m_gateway_config_isSet;
    bool m_gateway_config_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last_config_ack_time;
    bool m_last_config_ack_time_isSet;
    bool m_last_config_ack_time_isValid;

    QString m_last_config_send_time;
    bool m_last_config_send_time_isSet;
    bool m_last_config_send_time_isValid;

    OAIStatus m_last_error_status;
    bool m_last_error_status_isSet;
    bool m_last_error_status_isValid;

    QString m_last_error_time;
    bool m_last_error_time_isSet;
    bool m_last_error_time_isValid;

    QString m_last_event_time;
    bool m_last_event_time_isSet;
    bool m_last_event_time_isValid;

    QString m_last_heartbeat_time;
    bool m_last_heartbeat_time_isSet;
    bool m_last_heartbeat_time_isValid;

    QString m_last_state_time;
    bool m_last_state_time_isSet;
    bool m_last_state_time_isValid;

    QString m_log_level;
    bool m_log_level_isSet;
    bool m_log_level_isValid;

    QMap<QString, QString> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_num_id;
    bool m_num_id_isSet;
    bool m_num_id_isValid;

    OAIDeviceState m_state;
    bool m_state_isSet;
    bool m_state_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDevice)

#endif // OAIDevice_H
