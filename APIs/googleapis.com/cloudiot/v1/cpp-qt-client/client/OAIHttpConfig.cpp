/**
 * Cloud IoT API
 * Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHttpConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHttpConfig::OAIHttpConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHttpConfig::OAIHttpConfig() {
    this->initializeModel();
}

OAIHttpConfig::~OAIHttpConfig() {}

void OAIHttpConfig::initializeModel() {

    m_http_enabled_state_isSet = false;
    m_http_enabled_state_isValid = false;
}

void OAIHttpConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHttpConfig::fromJsonObject(QJsonObject json) {

    m_http_enabled_state_isValid = ::OpenAPI::fromJsonValue(m_http_enabled_state, json[QString("httpEnabledState")]);
    m_http_enabled_state_isSet = !json[QString("httpEnabledState")].isNull() && m_http_enabled_state_isValid;
}

QString OAIHttpConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHttpConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_http_enabled_state_isSet) {
        obj.insert(QString("httpEnabledState"), ::OpenAPI::toJsonValue(m_http_enabled_state));
    }
    return obj;
}

QString OAIHttpConfig::getHttpEnabledState() const {
    return m_http_enabled_state;
}
void OAIHttpConfig::setHttpEnabledState(const QString &http_enabled_state) {
    m_http_enabled_state = http_enabled_state;
    m_http_enabled_state_isSet = true;
}

bool OAIHttpConfig::is_http_enabled_state_Set() const{
    return m_http_enabled_state_isSet;
}

bool OAIHttpConfig::is_http_enabled_state_Valid() const{
    return m_http_enabled_state_isValid;
}

bool OAIHttpConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_http_enabled_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHttpConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
