# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_state import DeviceState
from openapi_server import util


class ListDeviceStatesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_states: List[DeviceState]=None):
        """ListDeviceStatesResponse - a model defined in OpenAPI

        :param device_states: The device_states of this ListDeviceStatesResponse.
        """
        self.openapi_types = {
            'device_states': List[DeviceState]
        }

        self.attribute_map = {
            'device_states': 'deviceStates'
        }

        self._device_states = device_states

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDeviceStatesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDeviceStatesResponse of this ListDeviceStatesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_states(self):
        """Gets the device_states of this ListDeviceStatesResponse.

        The last few device states. States are listed in descending order of server update time, starting from the most recent one.

        :return: The device_states of this ListDeviceStatesResponse.
        :rtype: List[DeviceState]
        """
        return self._device_states

    @device_states.setter
    def device_states(self, device_states):
        """Sets the device_states of this ListDeviceStatesResponse.

        The last few device states. States are listed in descending order of server update time, starting from the most recent one.

        :param device_states: The device_states of this ListDeviceStatesResponse.
        :type device_states: List[DeviceState]
        """

        self._device_states = device_states
