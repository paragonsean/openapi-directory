# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModifyCloudToDeviceConfigRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, binary_data: str=None, version_to_update: str=None):
        """ModifyCloudToDeviceConfigRequest - a model defined in OpenAPI

        :param binary_data: The binary_data of this ModifyCloudToDeviceConfigRequest.
        :param version_to_update: The version_to_update of this ModifyCloudToDeviceConfigRequest.
        """
        self.openapi_types = {
            'binary_data': str,
            'version_to_update': str
        }

        self.attribute_map = {
            'binary_data': 'binaryData',
            'version_to_update': 'versionToUpdate'
        }

        self._binary_data = binary_data
        self._version_to_update = version_to_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyCloudToDeviceConfigRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyCloudToDeviceConfigRequest of this ModifyCloudToDeviceConfigRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def binary_data(self):
        """Gets the binary_data of this ModifyCloudToDeviceConfigRequest.

        Required. The configuration data for the device.

        :return: The binary_data of this ModifyCloudToDeviceConfigRequest.
        :rtype: str
        """
        return self._binary_data

    @binary_data.setter
    def binary_data(self, binary_data):
        """Sets the binary_data of this ModifyCloudToDeviceConfigRequest.

        Required. The configuration data for the device.

        :param binary_data: The binary_data of this ModifyCloudToDeviceConfigRequest.
        :type binary_data: str
        """

        self._binary_data = binary_data

    @property
    def version_to_update(self):
        """Gets the version_to_update of this ModifyCloudToDeviceConfigRequest.

        The version number to update. If this value is zero, it will not check the version number of the server and will always update the current version; otherwise, this update will fail if the version number found on the server does not match this version number. This is used to support multiple simultaneous updates without losing data.

        :return: The version_to_update of this ModifyCloudToDeviceConfigRequest.
        :rtype: str
        """
        return self._version_to_update

    @version_to_update.setter
    def version_to_update(self, version_to_update):
        """Sets the version_to_update of this ModifyCloudToDeviceConfigRequest.

        The version number to update. If this value is zero, it will not check the version number of the server and will always update the current version; otherwise, this update will fail if the version number found on the server does not match this version number. This is used to support multiple simultaneous updates without losing data.

        :param version_to_update: The version_to_update of this ModifyCloudToDeviceConfigRequest.
        :type version_to_update: str
        """

        self._version_to_update = version_to_update
