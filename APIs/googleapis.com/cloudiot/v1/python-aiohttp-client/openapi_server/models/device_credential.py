# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.public_key_credential import PublicKeyCredential
from openapi_server import util


class DeviceCredential(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiration_time: str=None, public_key: PublicKeyCredential=None):
        """DeviceCredential - a model defined in OpenAPI

        :param expiration_time: The expiration_time of this DeviceCredential.
        :param public_key: The public_key of this DeviceCredential.
        """
        self.openapi_types = {
            'expiration_time': str,
            'public_key': PublicKeyCredential
        }

        self.attribute_map = {
            'expiration_time': 'expirationTime',
            'public_key': 'publicKey'
        }

        self._expiration_time = expiration_time
        self._public_key = public_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeviceCredential':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeviceCredential of this DeviceCredential.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiration_time(self):
        """Gets the expiration_time of this DeviceCredential.

        [Optional] The time at which this credential becomes invalid. This credential will be ignored for new client authentication requests after this timestamp; however, it will not be automatically deleted.

        :return: The expiration_time of this DeviceCredential.
        :rtype: str
        """
        return self._expiration_time

    @expiration_time.setter
    def expiration_time(self, expiration_time):
        """Sets the expiration_time of this DeviceCredential.

        [Optional] The time at which this credential becomes invalid. This credential will be ignored for new client authentication requests after this timestamp; however, it will not be automatically deleted.

        :param expiration_time: The expiration_time of this DeviceCredential.
        :type expiration_time: str
        """

        self._expiration_time = expiration_time

    @property
    def public_key(self):
        """Gets the public_key of this DeviceCredential.


        :return: The public_key of this DeviceCredential.
        :rtype: PublicKeyCredential
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this DeviceCredential.


        :param public_key: The public_key of this DeviceCredential.
        :type public_key: PublicKeyCredential
        """

        self._public_key = public_key
