# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublicKeyCredential(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: str=None, key: str=None):
        """PublicKeyCredential - a model defined in OpenAPI

        :param format: The format of this PublicKeyCredential.
        :param key: The key of this PublicKeyCredential.
        """
        self.openapi_types = {
            'format': str,
            'key': str
        }

        self.attribute_map = {
            'format': 'format',
            'key': 'key'
        }

        self._format = format
        self._key = key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublicKeyCredential':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublicKeyCredential of this PublicKeyCredential.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this PublicKeyCredential.

        The format of the key.

        :return: The format of this PublicKeyCredential.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this PublicKeyCredential.

        The format of the key.

        :param format: The format of this PublicKeyCredential.
        :type format: str
        """
        allowed_values = ["UNSPECIFIED_PUBLIC_KEY_FORMAT", "RSA_PEM", "RSA_X509_PEM", "ES256_PEM", "ES256_X509_PEM"]  # noqa: E501
        if format not in allowed_values:
            raise ValueError(
                "Invalid value for `format` ({0}), must be one of {1}"
                .format(format, allowed_values)
            )

        self._format = format

    @property
    def key(self):
        """Gets the key of this PublicKeyCredential.

        The key data.

        :return: The key of this PublicKeyCredential.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this PublicKeyCredential.

        The key data.

        :param key: The key of this PublicKeyCredential.
        :type key: str
        """

        self._key = key
