# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MqttConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mqtt_enabled_state: str=None):
        """MqttConfig - a model defined in OpenAPI

        :param mqtt_enabled_state: The mqtt_enabled_state of this MqttConfig.
        """
        self.openapi_types = {
            'mqtt_enabled_state': str
        }

        self.attribute_map = {
            'mqtt_enabled_state': 'mqttEnabledState'
        }

        self._mqtt_enabled_state = mqtt_enabled_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MqttConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MqttConfig of this MqttConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mqtt_enabled_state(self):
        """Gets the mqtt_enabled_state of this MqttConfig.

        If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail.

        :return: The mqtt_enabled_state of this MqttConfig.
        :rtype: str
        """
        return self._mqtt_enabled_state

    @mqtt_enabled_state.setter
    def mqtt_enabled_state(self, mqtt_enabled_state):
        """Sets the mqtt_enabled_state of this MqttConfig.

        If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail.

        :param mqtt_enabled_state: The mqtt_enabled_state of this MqttConfig.
        :type mqtt_enabled_state: str
        """
        allowed_values = ["MQTT_STATE_UNSPECIFIED", "MQTT_ENABLED", "MQTT_DISABLED"]  # noqa: E501
        if mqtt_enabled_state not in allowed_values:
            raise ValueError(
                "Invalid value for `mqtt_enabled_state` ({0}), must be one of {1}"
                .format(mqtt_enabled_state, allowed_values)
            )

        self._mqtt_enabled_state = mqtt_enabled_state
