# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device import Device
from openapi_server import util


class ListDevicesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, devices: List[Device]=None, next_page_token: str=None):
        """ListDevicesResponse - a model defined in OpenAPI

        :param devices: The devices of this ListDevicesResponse.
        :param next_page_token: The next_page_token of this ListDevicesResponse.
        """
        self.openapi_types = {
            'devices': List[Device],
            'next_page_token': str
        }

        self.attribute_map = {
            'devices': 'devices',
            'next_page_token': 'nextPageToken'
        }

        self._devices = devices
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDevicesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDevicesResponse of this ListDevicesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def devices(self):
        """Gets the devices of this ListDevicesResponse.

        The devices that match the request.

        :return: The devices of this ListDevicesResponse.
        :rtype: List[Device]
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this ListDevicesResponse.

        The devices that match the request.

        :param devices: The devices of this ListDevicesResponse.
        :type devices: List[Device]
        """

        self._devices = devices

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListDevicesResponse.

        If not empty, indicates that there may be more devices that match the request; this value should be passed in a new `ListDevicesRequest`.

        :return: The next_page_token of this ListDevicesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListDevicesResponse.

        If not empty, indicates that there may be more devices that match the request; this value should be passed in a new `ListDevicesRequest`.

        :param next_page_token: The next_page_token of this ListDevicesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
