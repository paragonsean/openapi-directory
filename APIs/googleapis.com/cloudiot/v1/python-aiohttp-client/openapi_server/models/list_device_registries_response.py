# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.device_registry import DeviceRegistry
from openapi_server import util


class ListDeviceRegistriesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_registries: List[DeviceRegistry]=None, next_page_token: str=None):
        """ListDeviceRegistriesResponse - a model defined in OpenAPI

        :param device_registries: The device_registries of this ListDeviceRegistriesResponse.
        :param next_page_token: The next_page_token of this ListDeviceRegistriesResponse.
        """
        self.openapi_types = {
            'device_registries': List[DeviceRegistry],
            'next_page_token': str
        }

        self.attribute_map = {
            'device_registries': 'deviceRegistries',
            'next_page_token': 'nextPageToken'
        }

        self._device_registries = device_registries
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDeviceRegistriesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListDeviceRegistriesResponse of this ListDeviceRegistriesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_registries(self):
        """Gets the device_registries of this ListDeviceRegistriesResponse.

        The registries that matched the query.

        :return: The device_registries of this ListDeviceRegistriesResponse.
        :rtype: List[DeviceRegistry]
        """
        return self._device_registries

    @device_registries.setter
    def device_registries(self, device_registries):
        """Sets the device_registries of this ListDeviceRegistriesResponse.

        The registries that matched the query.

        :param device_registries: The device_registries of this ListDeviceRegistriesResponse.
        :type device_registries: List[DeviceRegistry]
        """

        self._device_registries = device_registries

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListDeviceRegistriesResponse.

        If not empty, indicates that there may be more registries that match the request; this value should be passed in a new `ListDeviceRegistriesRequest`.

        :return: The next_page_token of this ListDeviceRegistriesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListDeviceRegistriesResponse.

        If not empty, indicates that there may be more registries that match the request; this value should be passed in a new `ListDeviceRegistriesRequest`.

        :param next_page_token: The next_page_token of this ListDeviceRegistriesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
