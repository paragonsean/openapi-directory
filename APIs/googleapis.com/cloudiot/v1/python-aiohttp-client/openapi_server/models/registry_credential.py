# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.public_key_certificate import PublicKeyCertificate
from openapi_server import util


class RegistryCredential(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, public_key_certificate: PublicKeyCertificate=None):
        """RegistryCredential - a model defined in OpenAPI

        :param public_key_certificate: The public_key_certificate of this RegistryCredential.
        """
        self.openapi_types = {
            'public_key_certificate': PublicKeyCertificate
        }

        self.attribute_map = {
            'public_key_certificate': 'publicKeyCertificate'
        }

        self._public_key_certificate = public_key_certificate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegistryCredential':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegistryCredential of this RegistryCredential.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def public_key_certificate(self):
        """Gets the public_key_certificate of this RegistryCredential.


        :return: The public_key_certificate of this RegistryCredential.
        :rtype: PublicKeyCertificate
        """
        return self._public_key_certificate

    @public_key_certificate.setter
    def public_key_certificate(self, public_key_certificate):
        """Sets the public_key_certificate of this RegistryCredential.


        :param public_key_certificate: The public_key_certificate of this RegistryCredential.
        :type public_key_certificate: PublicKeyCertificate
        """

        self._public_key_certificate = public_key_certificate
