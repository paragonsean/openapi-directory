/**
 * Cloud IoT API
 * Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PublicKeyCredential model module.
 * @module model/PublicKeyCredential
 * @version v1
 */
class PublicKeyCredential {
    /**
     * Constructs a new <code>PublicKeyCredential</code>.
     * A public key format and data.
     * @alias module:model/PublicKeyCredential
     */
    constructor() { 
        
        PublicKeyCredential.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PublicKeyCredential</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PublicKeyCredential} obj Optional instance to populate.
     * @return {module:model/PublicKeyCredential} The populated <code>PublicKeyCredential</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PublicKeyCredential();

            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PublicKeyCredential</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PublicKeyCredential</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }

        return true;
    }


}



/**
 * The format of the key.
 * @member {module:model/PublicKeyCredential.FormatEnum} format
 */
PublicKeyCredential.prototype['format'] = undefined;

/**
 * The key data.
 * @member {String} key
 */
PublicKeyCredential.prototype['key'] = undefined;





/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
PublicKeyCredential['FormatEnum'] = {

    /**
     * value: "UNSPECIFIED_PUBLIC_KEY_FORMAT"
     * @const
     */
    "UNSPECIFIED_PUBLIC_KEY_FORMAT": "UNSPECIFIED_PUBLIC_KEY_FORMAT",

    /**
     * value: "RSA_PEM"
     * @const
     */
    "RSA_PEM": "RSA_PEM",

    /**
     * value: "RSA_X509_PEM"
     * @const
     */
    "RSA_X509_PEM": "RSA_X509_PEM",

    /**
     * value: "ES256_PEM"
     * @const
     */
    "ES256_PEM": "ES256_PEM",

    /**
     * value: "ES256_X509_PEM"
     * @const
     */
    "ES256_X509_PEM": "ES256_X509_PEM"
};



export default PublicKeyCredential;

