/**
 * Cloud IoT API
 * Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GatewayConfig model module.
 * @module model/GatewayConfig
 * @version v1
 */
class GatewayConfig {
    /**
     * Constructs a new <code>GatewayConfig</code>.
     * Gateway-related configuration and state.
     * @alias module:model/GatewayConfig
     */
    constructor() { 
        
        GatewayConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GatewayConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GatewayConfig} obj Optional instance to populate.
     * @return {module:model/GatewayConfig} The populated <code>GatewayConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GatewayConfig();

            if (data.hasOwnProperty('gatewayAuthMethod')) {
                obj['gatewayAuthMethod'] = ApiClient.convertToType(data['gatewayAuthMethod'], 'String');
            }
            if (data.hasOwnProperty('gatewayType')) {
                obj['gatewayType'] = ApiClient.convertToType(data['gatewayType'], 'String');
            }
            if (data.hasOwnProperty('lastAccessedGatewayId')) {
                obj['lastAccessedGatewayId'] = ApiClient.convertToType(data['lastAccessedGatewayId'], 'String');
            }
            if (data.hasOwnProperty('lastAccessedGatewayTime')) {
                obj['lastAccessedGatewayTime'] = ApiClient.convertToType(data['lastAccessedGatewayTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GatewayConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GatewayConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gatewayAuthMethod'] && !(typeof data['gatewayAuthMethod'] === 'string' || data['gatewayAuthMethod'] instanceof String)) {
            throw new Error("Expected the field `gatewayAuthMethod` to be a primitive type in the JSON string but got " + data['gatewayAuthMethod']);
        }
        // ensure the json data is a string
        if (data['gatewayType'] && !(typeof data['gatewayType'] === 'string' || data['gatewayType'] instanceof String)) {
            throw new Error("Expected the field `gatewayType` to be a primitive type in the JSON string but got " + data['gatewayType']);
        }
        // ensure the json data is a string
        if (data['lastAccessedGatewayId'] && !(typeof data['lastAccessedGatewayId'] === 'string' || data['lastAccessedGatewayId'] instanceof String)) {
            throw new Error("Expected the field `lastAccessedGatewayId` to be a primitive type in the JSON string but got " + data['lastAccessedGatewayId']);
        }
        // ensure the json data is a string
        if (data['lastAccessedGatewayTime'] && !(typeof data['lastAccessedGatewayTime'] === 'string' || data['lastAccessedGatewayTime'] instanceof String)) {
            throw new Error("Expected the field `lastAccessedGatewayTime` to be a primitive type in the JSON string but got " + data['lastAccessedGatewayTime']);
        }

        return true;
    }


}



/**
 * Indicates how to authorize and/or authenticate devices to access the gateway.
 * @member {module:model/GatewayConfig.GatewayAuthMethodEnum} gatewayAuthMethod
 */
GatewayConfig.prototype['gatewayAuthMethod'] = undefined;

/**
 * Indicates whether the device is a gateway.
 * @member {module:model/GatewayConfig.GatewayTypeEnum} gatewayType
 */
GatewayConfig.prototype['gatewayType'] = undefined;

/**
 * [Output only] The ID of the gateway the device accessed most recently.
 * @member {String} lastAccessedGatewayId
 */
GatewayConfig.prototype['lastAccessedGatewayId'] = undefined;

/**
 * [Output only] The most recent time at which the device accessed the gateway specified in `last_accessed_gateway`.
 * @member {String} lastAccessedGatewayTime
 */
GatewayConfig.prototype['lastAccessedGatewayTime'] = undefined;





/**
 * Allowed values for the <code>gatewayAuthMethod</code> property.
 * @enum {String}
 * @readonly
 */
GatewayConfig['GatewayAuthMethodEnum'] = {

    /**
     * value: "GATEWAY_AUTH_METHOD_UNSPECIFIED"
     * @const
     */
    "GATEWAY_AUTH_METHOD_UNSPECIFIED": "GATEWAY_AUTH_METHOD_UNSPECIFIED",

    /**
     * value: "ASSOCIATION_ONLY"
     * @const
     */
    "ASSOCIATION_ONLY": "ASSOCIATION_ONLY",

    /**
     * value: "DEVICE_AUTH_TOKEN_ONLY"
     * @const
     */
    "DEVICE_AUTH_TOKEN_ONLY": "DEVICE_AUTH_TOKEN_ONLY",

    /**
     * value: "ASSOCIATION_AND_DEVICE_AUTH_TOKEN"
     * @const
     */
    "ASSOCIATION_AND_DEVICE_AUTH_TOKEN": "ASSOCIATION_AND_DEVICE_AUTH_TOKEN"
};


/**
 * Allowed values for the <code>gatewayType</code> property.
 * @enum {String}
 * @readonly
 */
GatewayConfig['GatewayTypeEnum'] = {

    /**
     * value: "GATEWAY_TYPE_UNSPECIFIED"
     * @const
     */
    "GATEWAY_TYPE_UNSPECIFIED": "GATEWAY_TYPE_UNSPECIFIED",

    /**
     * value: "GATEWAY"
     * @const
     */
    "GATEWAY": "GATEWAY",

    /**
     * value: "NON_GATEWAY"
     * @const
     */
    "NON_GATEWAY": "NON_GATEWAY"
};



export default GatewayConfig;

