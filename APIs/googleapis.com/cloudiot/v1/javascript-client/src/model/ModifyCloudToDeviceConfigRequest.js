/**
 * Cloud IoT API
 * Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModifyCloudToDeviceConfigRequest model module.
 * @module model/ModifyCloudToDeviceConfigRequest
 * @version v1
 */
class ModifyCloudToDeviceConfigRequest {
    /**
     * Constructs a new <code>ModifyCloudToDeviceConfigRequest</code>.
     * Request for &#x60;ModifyCloudToDeviceConfig&#x60;.
     * @alias module:model/ModifyCloudToDeviceConfigRequest
     */
    constructor() { 
        
        ModifyCloudToDeviceConfigRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModifyCloudToDeviceConfigRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModifyCloudToDeviceConfigRequest} obj Optional instance to populate.
     * @return {module:model/ModifyCloudToDeviceConfigRequest} The populated <code>ModifyCloudToDeviceConfigRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModifyCloudToDeviceConfigRequest();

            if (data.hasOwnProperty('binaryData')) {
                obj['binaryData'] = ApiClient.convertToType(data['binaryData'], 'Blob');
            }
            if (data.hasOwnProperty('versionToUpdate')) {
                obj['versionToUpdate'] = ApiClient.convertToType(data['versionToUpdate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModifyCloudToDeviceConfigRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModifyCloudToDeviceConfigRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['versionToUpdate'] && !(typeof data['versionToUpdate'] === 'string' || data['versionToUpdate'] instanceof String)) {
            throw new Error("Expected the field `versionToUpdate` to be a primitive type in the JSON string but got " + data['versionToUpdate']);
        }

        return true;
    }


}



/**
 * Required. The configuration data for the device.
 * @member {Blob} binaryData
 */
ModifyCloudToDeviceConfigRequest.prototype['binaryData'] = undefined;

/**
 * The version number to update. If this value is zero, it will not check the version number of the server and will always update the current version; otherwise, this update will fail if the version number found on the server does not match this version number. This is used to support multiple simultaneous updates without losing data.
 * @member {String} versionToUpdate
 */
ModifyCloudToDeviceConfigRequest.prototype['versionToUpdate'] = undefined;






export default ModifyCloudToDeviceConfigRequest;

