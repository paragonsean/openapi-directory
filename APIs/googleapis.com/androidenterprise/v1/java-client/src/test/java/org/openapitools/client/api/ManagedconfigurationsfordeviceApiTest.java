/*
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ManagedConfiguration;
import org.openapitools.client.model.ManagedConfigurationsForDeviceListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ManagedconfigurationsfordeviceApi
 */
@Disabled
public class ManagedconfigurationsfordeviceApiTest {

    private final ManagedconfigurationsfordeviceApi api = new ManagedconfigurationsfordeviceApi();

    /**
     * Removes a per-device managed configuration for an app for the specified device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseManagedconfigurationsfordeviceDeleteTest() throws ApiException {
        String enterpriseId = null;
        String userId = null;
        String deviceId = null;
        String managedConfigurationForDeviceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.androidenterpriseManagedconfigurationsfordeviceDelete(enterpriseId, userId, deviceId, managedConfigurationForDeviceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Retrieves details of a per-device managed configuration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseManagedconfigurationsfordeviceGetTest() throws ApiException {
        String enterpriseId = null;
        String userId = null;
        String deviceId = null;
        String managedConfigurationForDeviceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ManagedConfiguration response = api.androidenterpriseManagedconfigurationsfordeviceGet(enterpriseId, userId, deviceId, managedConfigurationForDeviceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists all the per-device managed configurations for the specified device. Only the ID is set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseManagedconfigurationsfordeviceListTest() throws ApiException {
        String enterpriseId = null;
        String userId = null;
        String deviceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ManagedConfigurationsForDeviceListResponse response = api.androidenterpriseManagedconfigurationsfordeviceList(enterpriseId, userId, deviceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Adds or updates a per-device managed configuration for an app for the specified device.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseManagedconfigurationsfordeviceUpdateTest() throws ApiException {
        String enterpriseId = null;
        String userId = null;
        String deviceId = null;
        String managedConfigurationForDeviceId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ManagedConfiguration managedConfiguration = null;
        ManagedConfiguration response = api.androidenterpriseManagedconfigurationsfordeviceUpdate(enterpriseId, userId, deviceId, managedConfigurationForDeviceId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, managedConfiguration);
        // TODO: test validations
    }

}
