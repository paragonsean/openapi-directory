/*
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AppRestrictionsSchema;
import org.openapitools.client.model.Product;
import org.openapitools.client.model.ProductPermissions;
import org.openapitools.client.model.ProductsApproveRequest;
import org.openapitools.client.model.ProductsGenerateApprovalUrlResponse;
import org.openapitools.client.model.ProductsListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsApi
 */
@Disabled
public class ProductsApiTest {

    private final ProductsApi api = new ProductsApi();

    /**
     *  Approves the specified product and the relevant app permissions, if any. The maximum number of products that you can approve per enterprise customer is 1,000. To learn how to use managed Google Play to design and create a store layout to display approved products to your users, see Store Layout Design. **Note:** This item has been deprecated. New integrations cannot use this method and can refer to our new recommendations. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseProductsApproveTest() throws ApiException {
        String enterpriseId = null;
        String productId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ProductsApproveRequest productsApproveRequest = null;
        api.androidenterpriseProductsApprove(enterpriseId, productId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, productsApproveRequest);
        // TODO: test validations
    }

    /**
     * Generates a URL that can be rendered in an iframe to display the permissions (if any) of a product. An enterprise admin must view these permissions and accept them on behalf of their organization in order to approve that product. Admins should accept the displayed permissions by interacting with a separate UI element in the EMM console, which in turn should trigger the use of this URL as the approvalUrlInfo.approvalUrl property in a Products.approve call to approve the product. This URL can only be used to display permissions for up to 1 day. **Note:** This item has been deprecated. New integrations cannot use this method and can refer to our new recommendations. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseProductsGenerateApprovalUrlTest() throws ApiException {
        String enterpriseId = null;
        String productId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String languageCode = null;
        ProductsGenerateApprovalUrlResponse response = api.androidenterpriseProductsGenerateApprovalUrl(enterpriseId, productId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, languageCode);
        // TODO: test validations
    }

    /**
     * Retrieves details of a product for display to an enterprise admin.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseProductsGetTest() throws ApiException {
        String enterpriseId = null;
        String productId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String language = null;
        Product response = api.androidenterpriseProductsGet(enterpriseId, productId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, language);
        // TODO: test validations
    }

    /**
     * Retrieves the schema that defines the configurable properties for this product. All products have a schema, but this schema may be empty if no managed configurations have been defined. This schema can be used to populate a UI that allows an admin to configure the product. To apply a managed configuration based on the schema obtained using this API, see Managed Configurations through Play.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseProductsGetAppRestrictionsSchemaTest() throws ApiException {
        String enterpriseId = null;
        String productId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String language = null;
        AppRestrictionsSchema response = api.androidenterpriseProductsGetAppRestrictionsSchema(enterpriseId, productId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, language);
        // TODO: test validations
    }

    /**
     * Retrieves the Android app permissions required by this app.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseProductsGetPermissionsTest() throws ApiException {
        String enterpriseId = null;
        String productId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ProductPermissions response = api.androidenterpriseProductsGetPermissions(enterpriseId, productId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Finds approved products that match a query, or all approved products if there is no query. **Note:** This item has been deprecated. New integrations cannot use this method and can refer to our new recommendations. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseProductsListTest() throws ApiException {
        String enterpriseId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean approved = null;
        String language = null;
        Integer maxResults = null;
        String query = null;
        String token = null;
        ProductsListResponse response = api.androidenterpriseProductsList(enterpriseId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, approved, language, maxResults, query, token);
        // TODO: test validations
    }

    /**
     * Unapproves the specified product (and the relevant app permissions, if any) **Note:** This item has been deprecated. New integrations cannot use this method and can refer to our new recommendations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseProductsUnapproveTest() throws ApiException {
        String enterpriseId = null;
        String productId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.androidenterpriseProductsUnapprove(enterpriseId, productId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

}
