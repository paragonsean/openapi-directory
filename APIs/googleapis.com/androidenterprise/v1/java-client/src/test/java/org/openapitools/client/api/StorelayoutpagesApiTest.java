/*
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.StoreLayoutPagesListResponse;
import org.openapitools.client.model.StorePage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StorelayoutpagesApi
 */
@Disabled
public class StorelayoutpagesApiTest {

    private final StorelayoutpagesApi api = new StorelayoutpagesApi();

    /**
     * Deletes a store page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseStorelayoutpagesDeleteTest() throws ApiException {
        String enterpriseId = null;
        String pageId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.androidenterpriseStorelayoutpagesDelete(enterpriseId, pageId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Retrieves details of a store page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseStorelayoutpagesGetTest() throws ApiException {
        String enterpriseId = null;
        String pageId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        StorePage response = api.androidenterpriseStorelayoutpagesGet(enterpriseId, pageId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Inserts a new store page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseStorelayoutpagesInsertTest() throws ApiException {
        String enterpriseId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        StorePage storePage = null;
        StorePage response = api.androidenterpriseStorelayoutpagesInsert(enterpriseId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, storePage);
        // TODO: test validations
    }

    /**
     * Retrieves the details of all pages in the store.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseStorelayoutpagesListTest() throws ApiException {
        String enterpriseId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        StoreLayoutPagesListResponse response = api.androidenterpriseStorelayoutpagesList(enterpriseId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Updates the content of a store page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void androidenterpriseStorelayoutpagesUpdateTest() throws ApiException {
        String enterpriseId = null;
        String pageId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        StorePage storePage = null;
        StorePage response = api.androidenterpriseStorelayoutpagesUpdate(enterpriseId, pageId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, storePage);
        // TODO: test validations
    }

}
