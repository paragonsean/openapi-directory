/*
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Administrator;
import org.openapitools.client.model.GoogleAuthenticationSettings;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An Enterprises resource represents the binding between an EMM and a specific organization. That binding can be instantiated in one of two different ways using this API as follows: - For Google managed domain customers, the process involves using Enterprises.enroll and Enterprises.setAccount (in conjunction with artifacts obtained from the Admin console and the Google API Console) and submitted to the EMM through a more-or-less manual process. - For managed Google Play Accounts customers, the process involves using Enterprises.generateSignupUrl and Enterprises.completeSignup in conjunction with the managed Google Play sign-up UI (Google-provided mechanism) to create the binding without manual steps. As an EMM, you can support either or both approaches in your EMM console. See Create an Enterprise for details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:04.392334-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Enterprise {
  public static final String SERIALIZED_NAME_ADMINISTRATOR = "administrator";
  @SerializedName(SERIALIZED_NAME_ADMINISTRATOR)
  private List<Administrator> administrator = new ArrayList<>();

  public static final String SERIALIZED_NAME_GOOGLE_AUTHENTICATION_SETTINGS = "googleAuthenticationSettings";
  @SerializedName(SERIALIZED_NAME_GOOGLE_AUTHENTICATION_SETTINGS)
  private GoogleAuthenticationSettings googleAuthenticationSettings;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIMARY_DOMAIN = "primaryDomain";
  @SerializedName(SERIALIZED_NAME_PRIMARY_DOMAIN)
  private String primaryDomain;

  public Enterprise() {
  }

  public Enterprise administrator(List<Administrator> administrator) {
    this.administrator = administrator;
    return this;
  }

  public Enterprise addAdministratorItem(Administrator administratorItem) {
    if (this.administrator == null) {
      this.administrator = new ArrayList<>();
    }
    this.administrator.add(administratorItem);
    return this;
  }

  /**
   * Admins of the enterprise. This is only supported for enterprises created via the EMM-initiated flow.
   * @return administrator
   */
  @javax.annotation.Nullable
  public List<Administrator> getAdministrator() {
    return administrator;
  }

  public void setAdministrator(List<Administrator> administrator) {
    this.administrator = administrator;
  }


  public Enterprise googleAuthenticationSettings(GoogleAuthenticationSettings googleAuthenticationSettings) {
    this.googleAuthenticationSettings = googleAuthenticationSettings;
    return this;
  }

  /**
   * Get googleAuthenticationSettings
   * @return googleAuthenticationSettings
   */
  @javax.annotation.Nullable
  public GoogleAuthenticationSettings getGoogleAuthenticationSettings() {
    return googleAuthenticationSettings;
  }

  public void setGoogleAuthenticationSettings(GoogleAuthenticationSettings googleAuthenticationSettings) {
    this.googleAuthenticationSettings = googleAuthenticationSettings;
  }


  public Enterprise id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique ID for the enterprise.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Enterprise name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the enterprise, for example, \&quot;Example, Inc\&quot;.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Enterprise primaryDomain(String primaryDomain) {
    this.primaryDomain = primaryDomain;
    return this;
  }

  /**
   * The enterprise&#39;s primary domain, such as \&quot;example.com\&quot;.
   * @return primaryDomain
   */
  @javax.annotation.Nullable
  public String getPrimaryDomain() {
    return primaryDomain;
  }

  public void setPrimaryDomain(String primaryDomain) {
    this.primaryDomain = primaryDomain;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Enterprise enterprise = (Enterprise) o;
    return Objects.equals(this.administrator, enterprise.administrator) &&
        Objects.equals(this.googleAuthenticationSettings, enterprise.googleAuthenticationSettings) &&
        Objects.equals(this.id, enterprise.id) &&
        Objects.equals(this.name, enterprise.name) &&
        Objects.equals(this.primaryDomain, enterprise.primaryDomain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(administrator, googleAuthenticationSettings, id, name, primaryDomain);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Enterprise {\n");
    sb.append("    administrator: ").append(toIndentedString(administrator)).append("\n");
    sb.append("    googleAuthenticationSettings: ").append(toIndentedString(googleAuthenticationSettings)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    primaryDomain: ").append(toIndentedString(primaryDomain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("administrator");
    openapiFields.add("googleAuthenticationSettings");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("primaryDomain");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Enterprise
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Enterprise.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Enterprise is not found in the empty JSON string", Enterprise.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Enterprise.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Enterprise` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("administrator") != null && !jsonObj.get("administrator").isJsonNull()) {
        JsonArray jsonArrayadministrator = jsonObj.getAsJsonArray("administrator");
        if (jsonArrayadministrator != null) {
          // ensure the json data is an array
          if (!jsonObj.get("administrator").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `administrator` to be an array in the JSON string but got `%s`", jsonObj.get("administrator").toString()));
          }

          // validate the optional field `administrator` (array)
          for (int i = 0; i < jsonArrayadministrator.size(); i++) {
            Administrator.validateJsonElement(jsonArrayadministrator.get(i));
          };
        }
      }
      // validate the optional field `googleAuthenticationSettings`
      if (jsonObj.get("googleAuthenticationSettings") != null && !jsonObj.get("googleAuthenticationSettings").isJsonNull()) {
        GoogleAuthenticationSettings.validateJsonElement(jsonObj.get("googleAuthenticationSettings"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("primaryDomain") != null && !jsonObj.get("primaryDomain").isJsonNull()) && !jsonObj.get("primaryDomain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryDomain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryDomain").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Enterprise.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Enterprise' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Enterprise> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Enterprise.class));

       return (TypeAdapter<T>) new TypeAdapter<Enterprise>() {
           @Override
           public void write(JsonWriter out, Enterprise value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Enterprise read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Enterprise given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Enterprise
   * @throws IOException if the JSON string is invalid with respect to Enterprise
   */
  public static Enterprise fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Enterprise.class);
  }

  /**
   * Convert an instance of Enterprise to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

