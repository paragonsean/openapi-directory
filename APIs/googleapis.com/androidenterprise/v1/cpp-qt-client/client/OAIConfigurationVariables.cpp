/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfigurationVariables.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfigurationVariables::OAIConfigurationVariables(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfigurationVariables::OAIConfigurationVariables() {
    this->initializeModel();
}

OAIConfigurationVariables::~OAIConfigurationVariables() {}

void OAIConfigurationVariables::initializeModel() {

    m_mcm_id_isSet = false;
    m_mcm_id_isValid = false;

    m_variable_set_isSet = false;
    m_variable_set_isValid = false;
}

void OAIConfigurationVariables::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfigurationVariables::fromJsonObject(QJsonObject json) {

    m_mcm_id_isValid = ::OpenAPI::fromJsonValue(m_mcm_id, json[QString("mcmId")]);
    m_mcm_id_isSet = !json[QString("mcmId")].isNull() && m_mcm_id_isValid;

    m_variable_set_isValid = ::OpenAPI::fromJsonValue(m_variable_set, json[QString("variableSet")]);
    m_variable_set_isSet = !json[QString("variableSet")].isNull() && m_variable_set_isValid;
}

QString OAIConfigurationVariables::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfigurationVariables::asJsonObject() const {
    QJsonObject obj;
    if (m_mcm_id_isSet) {
        obj.insert(QString("mcmId"), ::OpenAPI::toJsonValue(m_mcm_id));
    }
    if (m_variable_set.size() > 0) {
        obj.insert(QString("variableSet"), ::OpenAPI::toJsonValue(m_variable_set));
    }
    return obj;
}

QString OAIConfigurationVariables::getMcmId() const {
    return m_mcm_id;
}
void OAIConfigurationVariables::setMcmId(const QString &mcm_id) {
    m_mcm_id = mcm_id;
    m_mcm_id_isSet = true;
}

bool OAIConfigurationVariables::is_mcm_id_Set() const{
    return m_mcm_id_isSet;
}

bool OAIConfigurationVariables::is_mcm_id_Valid() const{
    return m_mcm_id_isValid;
}

QList<OAIVariableSet> OAIConfigurationVariables::getVariableSet() const {
    return m_variable_set;
}
void OAIConfigurationVariables::setVariableSet(const QList<OAIVariableSet> &variable_set) {
    m_variable_set = variable_set;
    m_variable_set_isSet = true;
}

bool OAIConfigurationVariables::is_variable_set_Set() const{
    return m_variable_set_isSet;
}

bool OAIConfigurationVariables::is_variable_set_Valid() const{
    return m_variable_set_isValid;
}

bool OAIConfigurationVariables::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mcm_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_variable_set.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfigurationVariables::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
