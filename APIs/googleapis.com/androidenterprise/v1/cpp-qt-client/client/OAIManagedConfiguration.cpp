/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedConfiguration::OAIManagedConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedConfiguration::OAIManagedConfiguration() {
    this->initializeModel();
}

OAIManagedConfiguration::~OAIManagedConfiguration() {}

void OAIManagedConfiguration::initializeModel() {

    m_configuration_variables_isSet = false;
    m_configuration_variables_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_managed_property_isSet = false;
    m_managed_property_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;
}

void OAIManagedConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedConfiguration::fromJsonObject(QJsonObject json) {

    m_configuration_variables_isValid = ::OpenAPI::fromJsonValue(m_configuration_variables, json[QString("configurationVariables")]);
    m_configuration_variables_isSet = !json[QString("configurationVariables")].isNull() && m_configuration_variables_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_managed_property_isValid = ::OpenAPI::fromJsonValue(m_managed_property, json[QString("managedProperty")]);
    m_managed_property_isSet = !json[QString("managedProperty")].isNull() && m_managed_property_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;
}

QString OAIManagedConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_configuration_variables.isSet()) {
        obj.insert(QString("configurationVariables"), ::OpenAPI::toJsonValue(m_configuration_variables));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_managed_property.size() > 0) {
        obj.insert(QString("managedProperty"), ::OpenAPI::toJsonValue(m_managed_property));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    return obj;
}

OAIConfigurationVariables OAIManagedConfiguration::getConfigurationVariables() const {
    return m_configuration_variables;
}
void OAIManagedConfiguration::setConfigurationVariables(const OAIConfigurationVariables &configuration_variables) {
    m_configuration_variables = configuration_variables;
    m_configuration_variables_isSet = true;
}

bool OAIManagedConfiguration::is_configuration_variables_Set() const{
    return m_configuration_variables_isSet;
}

bool OAIManagedConfiguration::is_configuration_variables_Valid() const{
    return m_configuration_variables_isValid;
}

QString OAIManagedConfiguration::getKind() const {
    return m_kind;
}
void OAIManagedConfiguration::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIManagedConfiguration::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIManagedConfiguration::is_kind_Valid() const{
    return m_kind_isValid;
}

QList<OAIManagedProperty> OAIManagedConfiguration::getManagedProperty() const {
    return m_managed_property;
}
void OAIManagedConfiguration::setManagedProperty(const QList<OAIManagedProperty> &managed_property) {
    m_managed_property = managed_property;
    m_managed_property_isSet = true;
}

bool OAIManagedConfiguration::is_managed_property_Set() const{
    return m_managed_property_isSet;
}

bool OAIManagedConfiguration::is_managed_property_Valid() const{
    return m_managed_property_isValid;
}

QString OAIManagedConfiguration::getProductId() const {
    return m_product_id;
}
void OAIManagedConfiguration::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIManagedConfiguration::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIManagedConfiguration::is_product_id_Valid() const{
    return m_product_id_isValid;
}

bool OAIManagedConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_configuration_variables.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_managed_property.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
