/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstallsListResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstallsListResponse::OAIInstallsListResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstallsListResponse::OAIInstallsListResponse() {
    this->initializeModel();
}

OAIInstallsListResponse::~OAIInstallsListResponse() {}

void OAIInstallsListResponse::initializeModel() {

    m_install_isSet = false;
    m_install_isValid = false;
}

void OAIInstallsListResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstallsListResponse::fromJsonObject(QJsonObject json) {

    m_install_isValid = ::OpenAPI::fromJsonValue(m_install, json[QString("install")]);
    m_install_isSet = !json[QString("install")].isNull() && m_install_isValid;
}

QString OAIInstallsListResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstallsListResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_install.size() > 0) {
        obj.insert(QString("install"), ::OpenAPI::toJsonValue(m_install));
    }
    return obj;
}

QList<OAIInstall> OAIInstallsListResponse::getInstall() const {
    return m_install;
}
void OAIInstallsListResponse::setInstall(const QList<OAIInstall> &install) {
    m_install = install;
    m_install_isSet = true;
}

bool OAIInstallsListResponse::is_install_Set() const{
    return m_install_isSet;
}

bool OAIInstallsListResponse::is_install_Valid() const{
    return m_install_isValid;
}

bool OAIInstallsListResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_install.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstallsListResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
