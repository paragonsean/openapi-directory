/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductApprovalEvent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductApprovalEvent::OAIProductApprovalEvent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductApprovalEvent::OAIProductApprovalEvent() {
    this->initializeModel();
}

OAIProductApprovalEvent::~OAIProductApprovalEvent() {}

void OAIProductApprovalEvent::initializeModel() {

    m_approved_isSet = false;
    m_approved_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;
}

void OAIProductApprovalEvent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductApprovalEvent::fromJsonObject(QJsonObject json) {

    m_approved_isValid = ::OpenAPI::fromJsonValue(m_approved, json[QString("approved")]);
    m_approved_isSet = !json[QString("approved")].isNull() && m_approved_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;
}

QString OAIProductApprovalEvent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductApprovalEvent::asJsonObject() const {
    QJsonObject obj;
    if (m_approved_isSet) {
        obj.insert(QString("approved"), ::OpenAPI::toJsonValue(m_approved));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    return obj;
}

QString OAIProductApprovalEvent::getApproved() const {
    return m_approved;
}
void OAIProductApprovalEvent::setApproved(const QString &approved) {
    m_approved = approved;
    m_approved_isSet = true;
}

bool OAIProductApprovalEvent::is_approved_Set() const{
    return m_approved_isSet;
}

bool OAIProductApprovalEvent::is_approved_Valid() const{
    return m_approved_isValid;
}

QString OAIProductApprovalEvent::getProductId() const {
    return m_product_id;
}
void OAIProductApprovalEvent::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIProductApprovalEvent::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIProductApprovalEvent::is_product_id_Valid() const{
    return m_product_id_isValid;
}

bool OAIProductApprovalEvent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_approved_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductApprovalEvent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
