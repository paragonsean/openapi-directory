/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDevice.h
 *
 * A Devices resource represents a mobile device managed by the EMM and belonging to a specific enterprise user.
 */

#ifndef OAIDevice_H
#define OAIDevice_H

#include <QJsonObject>

#include "OAIDeviceReport.h"
#include "OAIPolicy.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPolicy;
class OAIDeviceReport;

class OAIDevice : public OAIObject {
public:
    OAIDevice();
    OAIDevice(QString json);
    ~OAIDevice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAndroidId() const;
    void setAndroidId(const QString &android_id);
    bool is_android_id_Set() const;
    bool is_android_id_Valid() const;

    QString getDevice() const;
    void setDevice(const QString &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    QString getLatestBuildFingerprint() const;
    void setLatestBuildFingerprint(const QString &latest_build_fingerprint);
    bool is_latest_build_fingerprint_Set() const;
    bool is_latest_build_fingerprint_Valid() const;

    QString getMaker() const;
    void setMaker(const QString &maker);
    bool is_maker_Set() const;
    bool is_maker_Valid() const;

    QString getManagementType() const;
    void setManagementType(const QString &management_type);
    bool is_management_type_Set() const;
    bool is_management_type_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    OAIPolicy getPolicy() const;
    void setPolicy(const OAIPolicy &policy);
    bool is_policy_Set() const;
    bool is_policy_Valid() const;

    QString getProduct() const;
    void setProduct(const QString &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    OAIDeviceReport getReport() const;
    void setReport(const OAIDeviceReport &report);
    bool is_report_Set() const;
    bool is_report_Valid() const;

    QString getRetailBrand() const;
    void setRetailBrand(const QString &retail_brand);
    bool is_retail_brand_Set() const;
    bool is_retail_brand_Valid() const;

    qint32 getSdkVersion() const;
    void setSdkVersion(const qint32 &sdk_version);
    bool is_sdk_version_Set() const;
    bool is_sdk_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_android_id;
    bool m_android_id_isSet;
    bool m_android_id_isValid;

    QString m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    QString m_latest_build_fingerprint;
    bool m_latest_build_fingerprint_isSet;
    bool m_latest_build_fingerprint_isValid;

    QString m_maker;
    bool m_maker_isSet;
    bool m_maker_isValid;

    QString m_management_type;
    bool m_management_type_isSet;
    bool m_management_type_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    OAIPolicy m_policy;
    bool m_policy_isSet;
    bool m_policy_isValid;

    QString m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    OAIDeviceReport m_report;
    bool m_report_isSet;
    bool m_report_isValid;

    QString m_retail_brand;
    bool m_retail_brand_isSet;
    bool m_retail_brand_isValid;

    qint32 m_sdk_version;
    bool m_sdk_version_isSet;
    bool m_sdk_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDevice)

#endif // OAIDevice_H
