/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedConfigurationsForDeviceListResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedConfigurationsForDeviceListResponse::OAIManagedConfigurationsForDeviceListResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedConfigurationsForDeviceListResponse::OAIManagedConfigurationsForDeviceListResponse() {
    this->initializeModel();
}

OAIManagedConfigurationsForDeviceListResponse::~OAIManagedConfigurationsForDeviceListResponse() {}

void OAIManagedConfigurationsForDeviceListResponse::initializeModel() {

    m_managed_configuration_for_device_isSet = false;
    m_managed_configuration_for_device_isValid = false;
}

void OAIManagedConfigurationsForDeviceListResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedConfigurationsForDeviceListResponse::fromJsonObject(QJsonObject json) {

    m_managed_configuration_for_device_isValid = ::OpenAPI::fromJsonValue(m_managed_configuration_for_device, json[QString("managedConfigurationForDevice")]);
    m_managed_configuration_for_device_isSet = !json[QString("managedConfigurationForDevice")].isNull() && m_managed_configuration_for_device_isValid;
}

QString OAIManagedConfigurationsForDeviceListResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedConfigurationsForDeviceListResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_managed_configuration_for_device.size() > 0) {
        obj.insert(QString("managedConfigurationForDevice"), ::OpenAPI::toJsonValue(m_managed_configuration_for_device));
    }
    return obj;
}

QList<OAIManagedConfiguration> OAIManagedConfigurationsForDeviceListResponse::getManagedConfigurationForDevice() const {
    return m_managed_configuration_for_device;
}
void OAIManagedConfigurationsForDeviceListResponse::setManagedConfigurationForDevice(const QList<OAIManagedConfiguration> &managed_configuration_for_device) {
    m_managed_configuration_for_device = managed_configuration_for_device;
    m_managed_configuration_for_device_isSet = true;
}

bool OAIManagedConfigurationsForDeviceListResponse::is_managed_configuration_for_device_Set() const{
    return m_managed_configuration_for_device_isSet;
}

bool OAIManagedConfigurationsForDeviceListResponse::is_managed_configuration_for_device_Valid() const{
    return m_managed_configuration_for_device_isValid;
}

bool OAIManagedConfigurationsForDeviceListResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_managed_configuration_for_device.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedConfigurationsForDeviceListResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
