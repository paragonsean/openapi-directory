/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedProperty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedProperty::OAIManagedProperty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedProperty::OAIManagedProperty() {
    this->initializeModel();
}

OAIManagedProperty::~OAIManagedProperty() {}

void OAIManagedProperty::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_value_bool_isSet = false;
    m_value_bool_isValid = false;

    m_value_bundle_isSet = false;
    m_value_bundle_isValid = false;

    m_value_bundle_array_isSet = false;
    m_value_bundle_array_isValid = false;

    m_value_integer_isSet = false;
    m_value_integer_isValid = false;

    m_value_string_isSet = false;
    m_value_string_isValid = false;

    m_value_string_array_isSet = false;
    m_value_string_array_isValid = false;
}

void OAIManagedProperty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedProperty::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_value_bool_isValid = ::OpenAPI::fromJsonValue(m_value_bool, json[QString("valueBool")]);
    m_value_bool_isSet = !json[QString("valueBool")].isNull() && m_value_bool_isValid;

    m_value_bundle_isValid = ::OpenAPI::fromJsonValue(m_value_bundle, json[QString("valueBundle")]);
    m_value_bundle_isSet = !json[QString("valueBundle")].isNull() && m_value_bundle_isValid;

    m_value_bundle_array_isValid = ::OpenAPI::fromJsonValue(m_value_bundle_array, json[QString("valueBundleArray")]);
    m_value_bundle_array_isSet = !json[QString("valueBundleArray")].isNull() && m_value_bundle_array_isValid;

    m_value_integer_isValid = ::OpenAPI::fromJsonValue(m_value_integer, json[QString("valueInteger")]);
    m_value_integer_isSet = !json[QString("valueInteger")].isNull() && m_value_integer_isValid;

    m_value_string_isValid = ::OpenAPI::fromJsonValue(m_value_string, json[QString("valueString")]);
    m_value_string_isSet = !json[QString("valueString")].isNull() && m_value_string_isValid;

    m_value_string_array_isValid = ::OpenAPI::fromJsonValue(m_value_string_array, json[QString("valueStringArray")]);
    m_value_string_array_isSet = !json[QString("valueStringArray")].isNull() && m_value_string_array_isValid;
}

QString OAIManagedProperty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedProperty::asJsonObject() const {
    QJsonObject obj;
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_value_bool_isSet) {
        obj.insert(QString("valueBool"), ::OpenAPI::toJsonValue(m_value_bool));
    }
    if (m_value_bundle.isSet()) {
        obj.insert(QString("valueBundle"), ::OpenAPI::toJsonValue(m_value_bundle));
    }
    if (m_value_bundle_array.size() > 0) {
        obj.insert(QString("valueBundleArray"), ::OpenAPI::toJsonValue(m_value_bundle_array));
    }
    if (m_value_integer_isSet) {
        obj.insert(QString("valueInteger"), ::OpenAPI::toJsonValue(m_value_integer));
    }
    if (m_value_string_isSet) {
        obj.insert(QString("valueString"), ::OpenAPI::toJsonValue(m_value_string));
    }
    if (m_value_string_array.size() > 0) {
        obj.insert(QString("valueStringArray"), ::OpenAPI::toJsonValue(m_value_string_array));
    }
    return obj;
}

QString OAIManagedProperty::getKey() const {
    return m_key;
}
void OAIManagedProperty::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIManagedProperty::is_key_Set() const{
    return m_key_isSet;
}

bool OAIManagedProperty::is_key_Valid() const{
    return m_key_isValid;
}

bool OAIManagedProperty::isValueBool() const {
    return m_value_bool;
}
void OAIManagedProperty::setValueBool(const bool &value_bool) {
    m_value_bool = value_bool;
    m_value_bool_isSet = true;
}

bool OAIManagedProperty::is_value_bool_Set() const{
    return m_value_bool_isSet;
}

bool OAIManagedProperty::is_value_bool_Valid() const{
    return m_value_bool_isValid;
}

OAIManagedPropertyBundle OAIManagedProperty::getValueBundle() const {
    return m_value_bundle;
}
void OAIManagedProperty::setValueBundle(const OAIManagedPropertyBundle &value_bundle) {
    m_value_bundle = value_bundle;
    m_value_bundle_isSet = true;
}

bool OAIManagedProperty::is_value_bundle_Set() const{
    return m_value_bundle_isSet;
}

bool OAIManagedProperty::is_value_bundle_Valid() const{
    return m_value_bundle_isValid;
}

QList<OAIManagedPropertyBundle> OAIManagedProperty::getValueBundleArray() const {
    return m_value_bundle_array;
}
void OAIManagedProperty::setValueBundleArray(const QList<OAIManagedPropertyBundle> &value_bundle_array) {
    m_value_bundle_array = value_bundle_array;
    m_value_bundle_array_isSet = true;
}

bool OAIManagedProperty::is_value_bundle_array_Set() const{
    return m_value_bundle_array_isSet;
}

bool OAIManagedProperty::is_value_bundle_array_Valid() const{
    return m_value_bundle_array_isValid;
}

qint32 OAIManagedProperty::getValueInteger() const {
    return m_value_integer;
}
void OAIManagedProperty::setValueInteger(const qint32 &value_integer) {
    m_value_integer = value_integer;
    m_value_integer_isSet = true;
}

bool OAIManagedProperty::is_value_integer_Set() const{
    return m_value_integer_isSet;
}

bool OAIManagedProperty::is_value_integer_Valid() const{
    return m_value_integer_isValid;
}

QString OAIManagedProperty::getValueString() const {
    return m_value_string;
}
void OAIManagedProperty::setValueString(const QString &value_string) {
    m_value_string = value_string;
    m_value_string_isSet = true;
}

bool OAIManagedProperty::is_value_string_Set() const{
    return m_value_string_isSet;
}

bool OAIManagedProperty::is_value_string_Valid() const{
    return m_value_string_isValid;
}

QList<QString> OAIManagedProperty::getValueStringArray() const {
    return m_value_string_array;
}
void OAIManagedProperty::setValueStringArray(const QList<QString> &value_string_array) {
    m_value_string_array = value_string_array;
    m_value_string_array_isSet = true;
}

bool OAIManagedProperty::is_value_string_array_Set() const{
    return m_value_string_array_isSet;
}

bool OAIManagedProperty::is_value_string_array_Valid() const{
    return m_value_string_array_isValid;
}

bool OAIManagedProperty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_bool_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_bundle.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_bundle_array.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_integer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_string_array.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedProperty::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
