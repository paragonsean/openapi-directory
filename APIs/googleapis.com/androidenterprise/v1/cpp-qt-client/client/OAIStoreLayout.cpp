/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStoreLayout.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStoreLayout::OAIStoreLayout(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStoreLayout::OAIStoreLayout() {
    this->initializeModel();
}

OAIStoreLayout::~OAIStoreLayout() {}

void OAIStoreLayout::initializeModel() {

    m_homepage_id_isSet = false;
    m_homepage_id_isValid = false;

    m_store_layout_type_isSet = false;
    m_store_layout_type_isValid = false;
}

void OAIStoreLayout::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStoreLayout::fromJsonObject(QJsonObject json) {

    m_homepage_id_isValid = ::OpenAPI::fromJsonValue(m_homepage_id, json[QString("homepageId")]);
    m_homepage_id_isSet = !json[QString("homepageId")].isNull() && m_homepage_id_isValid;

    m_store_layout_type_isValid = ::OpenAPI::fromJsonValue(m_store_layout_type, json[QString("storeLayoutType")]);
    m_store_layout_type_isSet = !json[QString("storeLayoutType")].isNull() && m_store_layout_type_isValid;
}

QString OAIStoreLayout::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStoreLayout::asJsonObject() const {
    QJsonObject obj;
    if (m_homepage_id_isSet) {
        obj.insert(QString("homepageId"), ::OpenAPI::toJsonValue(m_homepage_id));
    }
    if (m_store_layout_type_isSet) {
        obj.insert(QString("storeLayoutType"), ::OpenAPI::toJsonValue(m_store_layout_type));
    }
    return obj;
}

QString OAIStoreLayout::getHomepageId() const {
    return m_homepage_id;
}
void OAIStoreLayout::setHomepageId(const QString &homepage_id) {
    m_homepage_id = homepage_id;
    m_homepage_id_isSet = true;
}

bool OAIStoreLayout::is_homepage_id_Set() const{
    return m_homepage_id_isSet;
}

bool OAIStoreLayout::is_homepage_id_Valid() const{
    return m_homepage_id_isValid;
}

QString OAIStoreLayout::getStoreLayoutType() const {
    return m_store_layout_type;
}
void OAIStoreLayout::setStoreLayoutType(const QString &store_layout_type) {
    m_store_layout_type = store_layout_type;
    m_store_layout_type_isSet = true;
}

bool OAIStoreLayout::is_store_layout_type_Set() const{
    return m_store_layout_type_isSet;
}

bool OAIStoreLayout::is_store_layout_type_Valid() const{
    return m_store_layout_type_isValid;
}

bool OAIStoreLayout::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_homepage_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_layout_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStoreLayout::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
