/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotification.h
 *
 * A notification of one event relating to an enterprise.
 */

#ifndef OAINotification_H
#define OAINotification_H

#include <QJsonObject>

#include "OAIAppRestrictionsSchemaChangeEvent.h"
#include "OAIAppUpdateEvent.h"
#include "OAIDeviceReportUpdateEvent.h"
#include "OAIInstallFailureEvent.h"
#include "OAINewDeviceEvent.h"
#include "OAINewPermissionsEvent.h"
#include "OAIProductApprovalEvent.h"
#include "OAIProductAvailabilityChangeEvent.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppRestrictionsSchemaChangeEvent;
class OAIAppUpdateEvent;
class OAIDeviceReportUpdateEvent;
class OAIInstallFailureEvent;
class OAINewDeviceEvent;
class OAINewPermissionsEvent;
class OAIProductApprovalEvent;
class OAIProductAvailabilityChangeEvent;

class OAINotification : public OAIObject {
public:
    OAINotification();
    OAINotification(QString json);
    ~OAINotification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAppRestrictionsSchemaChangeEvent getAppRestrictionsSchemaChangeEvent() const;
    void setAppRestrictionsSchemaChangeEvent(const OAIAppRestrictionsSchemaChangeEvent &app_restrictions_schema_change_event);
    bool is_app_restrictions_schema_change_event_Set() const;
    bool is_app_restrictions_schema_change_event_Valid() const;

    OAIAppUpdateEvent getAppUpdateEvent() const;
    void setAppUpdateEvent(const OAIAppUpdateEvent &app_update_event);
    bool is_app_update_event_Set() const;
    bool is_app_update_event_Valid() const;

    OAIDeviceReportUpdateEvent getDeviceReportUpdateEvent() const;
    void setDeviceReportUpdateEvent(const OAIDeviceReportUpdateEvent &device_report_update_event);
    bool is_device_report_update_event_Set() const;
    bool is_device_report_update_event_Valid() const;

    QString getEnterpriseId() const;
    void setEnterpriseId(const QString &enterprise_id);
    bool is_enterprise_id_Set() const;
    bool is_enterprise_id_Valid() const;

    OAIInstallFailureEvent getInstallFailureEvent() const;
    void setInstallFailureEvent(const OAIInstallFailureEvent &install_failure_event);
    bool is_install_failure_event_Set() const;
    bool is_install_failure_event_Valid() const;

    OAINewDeviceEvent getNewDeviceEvent() const;
    void setNewDeviceEvent(const OAINewDeviceEvent &new_device_event);
    bool is_new_device_event_Set() const;
    bool is_new_device_event_Valid() const;

    OAINewPermissionsEvent getNewPermissionsEvent() const;
    void setNewPermissionsEvent(const OAINewPermissionsEvent &new_permissions_event);
    bool is_new_permissions_event_Set() const;
    bool is_new_permissions_event_Valid() const;

    QString getNotificationType() const;
    void setNotificationType(const QString &notification_type);
    bool is_notification_type_Set() const;
    bool is_notification_type_Valid() const;

    OAIProductApprovalEvent getProductApprovalEvent() const;
    void setProductApprovalEvent(const OAIProductApprovalEvent &product_approval_event);
    bool is_product_approval_event_Set() const;
    bool is_product_approval_event_Valid() const;

    OAIProductAvailabilityChangeEvent getProductAvailabilityChangeEvent() const;
    void setProductAvailabilityChangeEvent(const OAIProductAvailabilityChangeEvent &product_availability_change_event);
    bool is_product_availability_change_event_Set() const;
    bool is_product_availability_change_event_Valid() const;

    QString getTimestampMillis() const;
    void setTimestampMillis(const QString &timestamp_millis);
    bool is_timestamp_millis_Set() const;
    bool is_timestamp_millis_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAppRestrictionsSchemaChangeEvent m_app_restrictions_schema_change_event;
    bool m_app_restrictions_schema_change_event_isSet;
    bool m_app_restrictions_schema_change_event_isValid;

    OAIAppUpdateEvent m_app_update_event;
    bool m_app_update_event_isSet;
    bool m_app_update_event_isValid;

    OAIDeviceReportUpdateEvent m_device_report_update_event;
    bool m_device_report_update_event_isSet;
    bool m_device_report_update_event_isValid;

    QString m_enterprise_id;
    bool m_enterprise_id_isSet;
    bool m_enterprise_id_isValid;

    OAIInstallFailureEvent m_install_failure_event;
    bool m_install_failure_event_isSet;
    bool m_install_failure_event_isValid;

    OAINewDeviceEvent m_new_device_event;
    bool m_new_device_event_isSet;
    bool m_new_device_event_isValid;

    OAINewPermissionsEvent m_new_permissions_event;
    bool m_new_permissions_event_isSet;
    bool m_new_permissions_event_isValid;

    QString m_notification_type;
    bool m_notification_type_isSet;
    bool m_notification_type_isValid;

    OAIProductApprovalEvent m_product_approval_event;
    bool m_product_approval_event_isSet;
    bool m_product_approval_event_isValid;

    OAIProductAvailabilityChangeEvent m_product_availability_change_event;
    bool m_product_availability_change_event_isSet;
    bool m_product_availability_change_event_isValid;

    QString m_timestamp_millis;
    bool m_timestamp_millis_isSet;
    bool m_timestamp_millis_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotification)

#endif // OAINotification_H
