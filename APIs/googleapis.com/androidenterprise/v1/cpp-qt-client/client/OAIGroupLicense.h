/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroupLicense.h
 *
 * Group license objects allow you to keep track of licenses (called entitlements) for both free and paid apps. For a free app, a group license is created when an enterprise admin first approves the product in Google Play or when the first entitlement for the product is created for a user via the API. For a paid app, a group license object is only created when an enterprise admin purchases the product in Google Play for the first time. Use the API to query group licenses. A Grouplicenses resource includes the total number of licenses purchased (paid apps only) and the total number of licenses currently in use. In other words, the total number of Entitlements that exist for the product. Only one group license object is created per product and group license objects are never deleted. If a product is unapproved, its group license remains. This allows enterprise admins to keep track of any remaining entitlements for the product.
 */

#ifndef OAIGroupLicense_H
#define OAIGroupLicense_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGroupLicense : public OAIObject {
public:
    OAIGroupLicense();
    OAIGroupLicense(QString json);
    ~OAIGroupLicense() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcquisitionKind() const;
    void setAcquisitionKind(const QString &acquisition_kind);
    bool is_acquisition_kind_Set() const;
    bool is_acquisition_kind_Valid() const;

    QString getApproval() const;
    void setApproval(const QString &approval);
    bool is_approval_Set() const;
    bool is_approval_Valid() const;

    qint32 getNumProvisioned() const;
    void setNumProvisioned(const qint32 &num_provisioned);
    bool is_num_provisioned_Set() const;
    bool is_num_provisioned_Valid() const;

    qint32 getNumPurchased() const;
    void setNumPurchased(const qint32 &num_purchased);
    bool is_num_purchased_Set() const;
    bool is_num_purchased_Valid() const;

    QString getPermissions() const;
    void setPermissions(const QString &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    QString getProductId() const;
    void setProductId(const QString &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_acquisition_kind;
    bool m_acquisition_kind_isSet;
    bool m_acquisition_kind_isValid;

    QString m_approval;
    bool m_approval_isSet;
    bool m_approval_isValid;

    qint32 m_num_provisioned;
    bool m_num_provisioned_isSet;
    bool m_num_provisioned_isValid;

    qint32 m_num_purchased;
    bool m_num_purchased_isSet;
    bool m_num_purchased_isValid;

    QString m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    QString m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroupLicense)

#endif // OAIGroupLicense_H
