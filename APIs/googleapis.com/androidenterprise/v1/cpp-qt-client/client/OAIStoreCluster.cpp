/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStoreCluster.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStoreCluster::OAIStoreCluster(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStoreCluster::OAIStoreCluster() {
    this->initializeModel();
}

OAIStoreCluster::~OAIStoreCluster() {}

void OAIStoreCluster::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_order_in_page_isSet = false;
    m_order_in_page_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;
}

void OAIStoreCluster::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStoreCluster::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_order_in_page_isValid = ::OpenAPI::fromJsonValue(m_order_in_page, json[QString("orderInPage")]);
    m_order_in_page_isSet = !json[QString("orderInPage")].isNull() && m_order_in_page_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;
}

QString OAIStoreCluster::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStoreCluster::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name.size() > 0) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_order_in_page_isSet) {
        obj.insert(QString("orderInPage"), ::OpenAPI::toJsonValue(m_order_in_page));
    }
    if (m_product_id.size() > 0) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    return obj;
}

QString OAIStoreCluster::getId() const {
    return m_id;
}
void OAIStoreCluster::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIStoreCluster::is_id_Set() const{
    return m_id_isSet;
}

bool OAIStoreCluster::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAILocalizedText> OAIStoreCluster::getName() const {
    return m_name;
}
void OAIStoreCluster::setName(const QList<OAILocalizedText> &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIStoreCluster::is_name_Set() const{
    return m_name_isSet;
}

bool OAIStoreCluster::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIStoreCluster::getOrderInPage() const {
    return m_order_in_page;
}
void OAIStoreCluster::setOrderInPage(const QString &order_in_page) {
    m_order_in_page = order_in_page;
    m_order_in_page_isSet = true;
}

bool OAIStoreCluster::is_order_in_page_Set() const{
    return m_order_in_page_isSet;
}

bool OAIStoreCluster::is_order_in_page_Valid() const{
    return m_order_in_page_isValid;
}

QList<QString> OAIStoreCluster::getProductId() const {
    return m_product_id;
}
void OAIStoreCluster::setProductId(const QList<QString> &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIStoreCluster::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIStoreCluster::is_product_id_Valid() const{
    return m_product_id_isValid;
}

bool OAIStoreCluster::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_in_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStoreCluster::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
