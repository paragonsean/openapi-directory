/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnterprisesSendTestPushNotificationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnterprisesSendTestPushNotificationResponse::OAIEnterprisesSendTestPushNotificationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnterprisesSendTestPushNotificationResponse::OAIEnterprisesSendTestPushNotificationResponse() {
    this->initializeModel();
}

OAIEnterprisesSendTestPushNotificationResponse::~OAIEnterprisesSendTestPushNotificationResponse() {}

void OAIEnterprisesSendTestPushNotificationResponse::initializeModel() {

    m_message_id_isSet = false;
    m_message_id_isValid = false;

    m_topic_name_isSet = false;
    m_topic_name_isValid = false;
}

void OAIEnterprisesSendTestPushNotificationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnterprisesSendTestPushNotificationResponse::fromJsonObject(QJsonObject json) {

    m_message_id_isValid = ::OpenAPI::fromJsonValue(m_message_id, json[QString("messageId")]);
    m_message_id_isSet = !json[QString("messageId")].isNull() && m_message_id_isValid;

    m_topic_name_isValid = ::OpenAPI::fromJsonValue(m_topic_name, json[QString("topicName")]);
    m_topic_name_isSet = !json[QString("topicName")].isNull() && m_topic_name_isValid;
}

QString OAIEnterprisesSendTestPushNotificationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnterprisesSendTestPushNotificationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_message_id_isSet) {
        obj.insert(QString("messageId"), ::OpenAPI::toJsonValue(m_message_id));
    }
    if (m_topic_name_isSet) {
        obj.insert(QString("topicName"), ::OpenAPI::toJsonValue(m_topic_name));
    }
    return obj;
}

QString OAIEnterprisesSendTestPushNotificationResponse::getMessageId() const {
    return m_message_id;
}
void OAIEnterprisesSendTestPushNotificationResponse::setMessageId(const QString &message_id) {
    m_message_id = message_id;
    m_message_id_isSet = true;
}

bool OAIEnterprisesSendTestPushNotificationResponse::is_message_id_Set() const{
    return m_message_id_isSet;
}

bool OAIEnterprisesSendTestPushNotificationResponse::is_message_id_Valid() const{
    return m_message_id_isValid;
}

QString OAIEnterprisesSendTestPushNotificationResponse::getTopicName() const {
    return m_topic_name;
}
void OAIEnterprisesSendTestPushNotificationResponse::setTopicName(const QString &topic_name) {
    m_topic_name = topic_name;
    m_topic_name_isSet = true;
}

bool OAIEnterprisesSendTestPushNotificationResponse::is_topic_name_Set() const{
    return m_topic_name_isSet;
}

bool OAIEnterprisesSendTestPushNotificationResponse::is_topic_name_Valid() const{
    return m_topic_name_isValid;
}

bool OAIEnterprisesSendTestPushNotificationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_topic_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnterprisesSendTestPushNotificationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
