# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configuration_variables import ConfigurationVariables
from openapi_server.models.managed_property import ManagedProperty
from openapi_server import util


class ManagedConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration_variables: ConfigurationVariables=None, kind: str=None, managed_property: List[ManagedProperty]=None, product_id: str=None):
        """ManagedConfiguration - a model defined in OpenAPI

        :param configuration_variables: The configuration_variables of this ManagedConfiguration.
        :param kind: The kind of this ManagedConfiguration.
        :param managed_property: The managed_property of this ManagedConfiguration.
        :param product_id: The product_id of this ManagedConfiguration.
        """
        self.openapi_types = {
            'configuration_variables': ConfigurationVariables,
            'kind': str,
            'managed_property': List[ManagedProperty],
            'product_id': str
        }

        self.attribute_map = {
            'configuration_variables': 'configurationVariables',
            'kind': 'kind',
            'managed_property': 'managedProperty',
            'product_id': 'productId'
        }

        self._configuration_variables = configuration_variables
        self._kind = kind
        self._managed_property = managed_property
        self._product_id = product_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedConfiguration of this ManagedConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration_variables(self):
        """Gets the configuration_variables of this ManagedConfiguration.


        :return: The configuration_variables of this ManagedConfiguration.
        :rtype: ConfigurationVariables
        """
        return self._configuration_variables

    @configuration_variables.setter
    def configuration_variables(self, configuration_variables):
        """Sets the configuration_variables of this ManagedConfiguration.


        :param configuration_variables: The configuration_variables of this ManagedConfiguration.
        :type configuration_variables: ConfigurationVariables
        """

        self._configuration_variables = configuration_variables

    @property
    def kind(self):
        """Gets the kind of this ManagedConfiguration.

        Deprecated.

        :return: The kind of this ManagedConfiguration.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ManagedConfiguration.

        Deprecated.

        :param kind: The kind of this ManagedConfiguration.
        :type kind: str
        """

        self._kind = kind

    @property
    def managed_property(self):
        """Gets the managed_property of this ManagedConfiguration.

        The set of managed properties for this configuration.

        :return: The managed_property of this ManagedConfiguration.
        :rtype: List[ManagedProperty]
        """
        return self._managed_property

    @managed_property.setter
    def managed_property(self, managed_property):
        """Sets the managed_property of this ManagedConfiguration.

        The set of managed properties for this configuration.

        :param managed_property: The managed_property of this ManagedConfiguration.
        :type managed_property: List[ManagedProperty]
        """

        self._managed_property = managed_property

    @property
    def product_id(self):
        """Gets the product_id of this ManagedConfiguration.

        The ID of the product that the managed configuration is for, e.g. \"app:com.google.android.gm\".

        :return: The product_id of this ManagedConfiguration.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ManagedConfiguration.

        The ID of the product that the managed configuration is for, e.g. \"app:com.google.android.gm\".

        :param product_id: The product_id of this ManagedConfiguration.
        :type product_id: str
        """

        self._product_id = product_id
