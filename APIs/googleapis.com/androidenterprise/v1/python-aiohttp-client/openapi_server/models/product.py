# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_restrictions_schema import AppRestrictionsSchema
from openapi_server.models.app_version import AppVersion
from openapi_server.models.product_permission import ProductPermission
from openapi_server.models.product_signing_certificate import ProductSigningCertificate
from openapi_server.models.track_info import TrackInfo
from openapi_server import util


class Product(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_restrictions_schema: AppRestrictionsSchema=None, app_tracks: List[TrackInfo]=None, app_version: List[AppVersion]=None, author_name: str=None, available_countries: List[str]=None, available_tracks: List[str]=None, category: str=None, content_rating: str=None, description: str=None, details_url: str=None, distribution_channel: str=None, features: List[str]=None, full_description: str=None, icon_url: str=None, last_updated_timestamp_millis: str=None, min_android_sdk_version: int=None, permissions: List[ProductPermission]=None, product_id: str=None, product_pricing: str=None, recent_changes: str=None, requires_container_app: bool=None, screenshot_urls: List[str]=None, signing_certificate: ProductSigningCertificate=None, small_icon_url: str=None, title: str=None, work_details_url: str=None):
        """Product - a model defined in OpenAPI

        :param app_restrictions_schema: The app_restrictions_schema of this Product.
        :param app_tracks: The app_tracks of this Product.
        :param app_version: The app_version of this Product.
        :param author_name: The author_name of this Product.
        :param available_countries: The available_countries of this Product.
        :param available_tracks: The available_tracks of this Product.
        :param category: The category of this Product.
        :param content_rating: The content_rating of this Product.
        :param description: The description of this Product.
        :param details_url: The details_url of this Product.
        :param distribution_channel: The distribution_channel of this Product.
        :param features: The features of this Product.
        :param full_description: The full_description of this Product.
        :param icon_url: The icon_url of this Product.
        :param last_updated_timestamp_millis: The last_updated_timestamp_millis of this Product.
        :param min_android_sdk_version: The min_android_sdk_version of this Product.
        :param permissions: The permissions of this Product.
        :param product_id: The product_id of this Product.
        :param product_pricing: The product_pricing of this Product.
        :param recent_changes: The recent_changes of this Product.
        :param requires_container_app: The requires_container_app of this Product.
        :param screenshot_urls: The screenshot_urls of this Product.
        :param signing_certificate: The signing_certificate of this Product.
        :param small_icon_url: The small_icon_url of this Product.
        :param title: The title of this Product.
        :param work_details_url: The work_details_url of this Product.
        """
        self.openapi_types = {
            'app_restrictions_schema': AppRestrictionsSchema,
            'app_tracks': List[TrackInfo],
            'app_version': List[AppVersion],
            'author_name': str,
            'available_countries': List[str],
            'available_tracks': List[str],
            'category': str,
            'content_rating': str,
            'description': str,
            'details_url': str,
            'distribution_channel': str,
            'features': List[str],
            'full_description': str,
            'icon_url': str,
            'last_updated_timestamp_millis': str,
            'min_android_sdk_version': int,
            'permissions': List[ProductPermission],
            'product_id': str,
            'product_pricing': str,
            'recent_changes': str,
            'requires_container_app': bool,
            'screenshot_urls': List[str],
            'signing_certificate': ProductSigningCertificate,
            'small_icon_url': str,
            'title': str,
            'work_details_url': str
        }

        self.attribute_map = {
            'app_restrictions_schema': 'appRestrictionsSchema',
            'app_tracks': 'appTracks',
            'app_version': 'appVersion',
            'author_name': 'authorName',
            'available_countries': 'availableCountries',
            'available_tracks': 'availableTracks',
            'category': 'category',
            'content_rating': 'contentRating',
            'description': 'description',
            'details_url': 'detailsUrl',
            'distribution_channel': 'distributionChannel',
            'features': 'features',
            'full_description': 'fullDescription',
            'icon_url': 'iconUrl',
            'last_updated_timestamp_millis': 'lastUpdatedTimestampMillis',
            'min_android_sdk_version': 'minAndroidSdkVersion',
            'permissions': 'permissions',
            'product_id': 'productId',
            'product_pricing': 'productPricing',
            'recent_changes': 'recentChanges',
            'requires_container_app': 'requiresContainerApp',
            'screenshot_urls': 'screenshotUrls',
            'signing_certificate': 'signingCertificate',
            'small_icon_url': 'smallIconUrl',
            'title': 'title',
            'work_details_url': 'workDetailsUrl'
        }

        self._app_restrictions_schema = app_restrictions_schema
        self._app_tracks = app_tracks
        self._app_version = app_version
        self._author_name = author_name
        self._available_countries = available_countries
        self._available_tracks = available_tracks
        self._category = category
        self._content_rating = content_rating
        self._description = description
        self._details_url = details_url
        self._distribution_channel = distribution_channel
        self._features = features
        self._full_description = full_description
        self._icon_url = icon_url
        self._last_updated_timestamp_millis = last_updated_timestamp_millis
        self._min_android_sdk_version = min_android_sdk_version
        self._permissions = permissions
        self._product_id = product_id
        self._product_pricing = product_pricing
        self._recent_changes = recent_changes
        self._requires_container_app = requires_container_app
        self._screenshot_urls = screenshot_urls
        self._signing_certificate = signing_certificate
        self._small_icon_url = small_icon_url
        self._title = title
        self._work_details_url = work_details_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Product':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Product of this Product.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_restrictions_schema(self):
        """Gets the app_restrictions_schema of this Product.


        :return: The app_restrictions_schema of this Product.
        :rtype: AppRestrictionsSchema
        """
        return self._app_restrictions_schema

    @app_restrictions_schema.setter
    def app_restrictions_schema(self, app_restrictions_schema):
        """Sets the app_restrictions_schema of this Product.


        :param app_restrictions_schema: The app_restrictions_schema of this Product.
        :type app_restrictions_schema: AppRestrictionsSchema
        """

        self._app_restrictions_schema = app_restrictions_schema

    @property
    def app_tracks(self):
        """Gets the app_tracks of this Product.

        The tracks visible to the enterprise.

        :return: The app_tracks of this Product.
        :rtype: List[TrackInfo]
        """
        return self._app_tracks

    @app_tracks.setter
    def app_tracks(self, app_tracks):
        """Sets the app_tracks of this Product.

        The tracks visible to the enterprise.

        :param app_tracks: The app_tracks of this Product.
        :type app_tracks: List[TrackInfo]
        """

        self._app_tracks = app_tracks

    @property
    def app_version(self):
        """Gets the app_version of this Product.

        App versions currently available for this product.

        :return: The app_version of this Product.
        :rtype: List[AppVersion]
        """
        return self._app_version

    @app_version.setter
    def app_version(self, app_version):
        """Sets the app_version of this Product.

        App versions currently available for this product.

        :param app_version: The app_version of this Product.
        :type app_version: List[AppVersion]
        """

        self._app_version = app_version

    @property
    def author_name(self):
        """Gets the author_name of this Product.

        The name of the author of the product (for example, the app developer).

        :return: The author_name of this Product.
        :rtype: str
        """
        return self._author_name

    @author_name.setter
    def author_name(self, author_name):
        """Sets the author_name of this Product.

        The name of the author of the product (for example, the app developer).

        :param author_name: The author_name of this Product.
        :type author_name: str
        """

        self._author_name = author_name

    @property
    def available_countries(self):
        """Gets the available_countries of this Product.

        The countries which this app is available in.

        :return: The available_countries of this Product.
        :rtype: List[str]
        """
        return self._available_countries

    @available_countries.setter
    def available_countries(self, available_countries):
        """Sets the available_countries of this Product.

        The countries which this app is available in.

        :param available_countries: The available_countries of this Product.
        :type available_countries: List[str]
        """

        self._available_countries = available_countries

    @property
    def available_tracks(self):
        """Gets the available_tracks of this Product.

        Deprecated, use appTracks instead.

        :return: The available_tracks of this Product.
        :rtype: List[str]
        """
        return self._available_tracks

    @available_tracks.setter
    def available_tracks(self, available_tracks):
        """Sets the available_tracks of this Product.

        Deprecated, use appTracks instead.

        :param available_tracks: The available_tracks of this Product.
        :type available_tracks: List[str]
        """
        allowed_values = ["appTrackUnspecified", "production", "beta", "alpha"]  # noqa: E501
        if not set(available_tracks).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `available_tracks` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(available_tracks) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._available_tracks = available_tracks

    @property
    def category(self):
        """Gets the category of this Product.

        The app category (e.g. RACING, SOCIAL, etc.)

        :return: The category of this Product.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Product.

        The app category (e.g. RACING, SOCIAL, etc.)

        :param category: The category of this Product.
        :type category: str
        """

        self._category = category

    @property
    def content_rating(self):
        """Gets the content_rating of this Product.

        The content rating for this app.

        :return: The content_rating of this Product.
        :rtype: str
        """
        return self._content_rating

    @content_rating.setter
    def content_rating(self, content_rating):
        """Sets the content_rating of this Product.

        The content rating for this app.

        :param content_rating: The content_rating of this Product.
        :type content_rating: str
        """
        allowed_values = ["ratingUnknown", "all", "preTeen", "teen", "mature"]  # noqa: E501
        if content_rating not in allowed_values:
            raise ValueError(
                "Invalid value for `content_rating` ({0}), must be one of {1}"
                .format(content_rating, allowed_values)
            )

        self._content_rating = content_rating

    @property
    def description(self):
        """Gets the description of this Product.

        The localized promotional description, if available.

        :return: The description of this Product.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Product.

        The localized promotional description, if available.

        :param description: The description of this Product.
        :type description: str
        """

        self._description = description

    @property
    def details_url(self):
        """Gets the details_url of this Product.

        A link to the (consumer) Google Play details page for the product.

        :return: The details_url of this Product.
        :rtype: str
        """
        return self._details_url

    @details_url.setter
    def details_url(self, details_url):
        """Sets the details_url of this Product.

        A link to the (consumer) Google Play details page for the product.

        :param details_url: The details_url of this Product.
        :type details_url: str
        """

        self._details_url = details_url

    @property
    def distribution_channel(self):
        """Gets the distribution_channel of this Product.

        How and to whom the package is made available. The value publicGoogleHosted means that the package is available through the Play store and not restricted to a specific enterprise. The value privateGoogleHosted means that the package is a private app (restricted to an enterprise) but hosted by Google. The value privateSelfHosted means that the package is a private app (restricted to an enterprise) and is privately hosted.

        :return: The distribution_channel of this Product.
        :rtype: str
        """
        return self._distribution_channel

    @distribution_channel.setter
    def distribution_channel(self, distribution_channel):
        """Sets the distribution_channel of this Product.

        How and to whom the package is made available. The value publicGoogleHosted means that the package is available through the Play store and not restricted to a specific enterprise. The value privateGoogleHosted means that the package is a private app (restricted to an enterprise) but hosted by Google. The value privateSelfHosted means that the package is a private app (restricted to an enterprise) and is privately hosted.

        :param distribution_channel: The distribution_channel of this Product.
        :type distribution_channel: str
        """
        allowed_values = ["publicGoogleHosted", "privateGoogleHosted", "privateSelfHosted"]  # noqa: E501
        if distribution_channel not in allowed_values:
            raise ValueError(
                "Invalid value for `distribution_channel` ({0}), must be one of {1}"
                .format(distribution_channel, allowed_values)
            )

        self._distribution_channel = distribution_channel

    @property
    def features(self):
        """Gets the features of this Product.

        Noteworthy features (if any) of this product.

        :return: The features of this Product.
        :rtype: List[str]
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this Product.

        Noteworthy features (if any) of this product.

        :param features: The features of this Product.
        :type features: List[str]
        """
        allowed_values = ["featureUnknown", "vpnApp"]  # noqa: E501
        if not set(features).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `features` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(features) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._features = features

    @property
    def full_description(self):
        """Gets the full_description of this Product.

        The localized full app store description, if available.

        :return: The full_description of this Product.
        :rtype: str
        """
        return self._full_description

    @full_description.setter
    def full_description(self, full_description):
        """Sets the full_description of this Product.

        The localized full app store description, if available.

        :param full_description: The full_description of this Product.
        :type full_description: str
        """

        self._full_description = full_description

    @property
    def icon_url(self):
        """Gets the icon_url of this Product.

        A link to an image that can be used as an icon for the product. This image is suitable for use at up to 512px x 512px.

        :return: The icon_url of this Product.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this Product.

        A link to an image that can be used as an icon for the product. This image is suitable for use at up to 512px x 512px.

        :param icon_url: The icon_url of this Product.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def last_updated_timestamp_millis(self):
        """Gets the last_updated_timestamp_millis of this Product.

        The approximate time (within 7 days) the app was last published, expressed in milliseconds since epoch.

        :return: The last_updated_timestamp_millis of this Product.
        :rtype: str
        """
        return self._last_updated_timestamp_millis

    @last_updated_timestamp_millis.setter
    def last_updated_timestamp_millis(self, last_updated_timestamp_millis):
        """Sets the last_updated_timestamp_millis of this Product.

        The approximate time (within 7 days) the app was last published, expressed in milliseconds since epoch.

        :param last_updated_timestamp_millis: The last_updated_timestamp_millis of this Product.
        :type last_updated_timestamp_millis: str
        """

        self._last_updated_timestamp_millis = last_updated_timestamp_millis

    @property
    def min_android_sdk_version(self):
        """Gets the min_android_sdk_version of this Product.

        The minimum Android SDK necessary to run the app.

        :return: The min_android_sdk_version of this Product.
        :rtype: int
        """
        return self._min_android_sdk_version

    @min_android_sdk_version.setter
    def min_android_sdk_version(self, min_android_sdk_version):
        """Sets the min_android_sdk_version of this Product.

        The minimum Android SDK necessary to run the app.

        :param min_android_sdk_version: The min_android_sdk_version of this Product.
        :type min_android_sdk_version: int
        """

        self._min_android_sdk_version = min_android_sdk_version

    @property
    def permissions(self):
        """Gets the permissions of this Product.

        A list of permissions required by the app.

        :return: The permissions of this Product.
        :rtype: List[ProductPermission]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this Product.

        A list of permissions required by the app.

        :param permissions: The permissions of this Product.
        :type permissions: List[ProductPermission]
        """

        self._permissions = permissions

    @property
    def product_id(self):
        """Gets the product_id of this Product.

        A string of the form *app:<package name>*. For example, app:com.google.android.gm represents the Gmail app.

        :return: The product_id of this Product.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this Product.

        A string of the form *app:<package name>*. For example, app:com.google.android.gm represents the Gmail app.

        :param product_id: The product_id of this Product.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def product_pricing(self):
        """Gets the product_pricing of this Product.

        Whether this product is free, free with in-app purchases, or paid. If the pricing is unknown, this means the product is not generally available anymore (even though it might still be available to people who own it).

        :return: The product_pricing of this Product.
        :rtype: str
        """
        return self._product_pricing

    @product_pricing.setter
    def product_pricing(self, product_pricing):
        """Sets the product_pricing of this Product.

        Whether this product is free, free with in-app purchases, or paid. If the pricing is unknown, this means the product is not generally available anymore (even though it might still be available to people who own it).

        :param product_pricing: The product_pricing of this Product.
        :type product_pricing: str
        """
        allowed_values = ["unknown", "free", "freeWithInAppPurchase", "paid"]  # noqa: E501
        if product_pricing not in allowed_values:
            raise ValueError(
                "Invalid value for `product_pricing` ({0}), must be one of {1}"
                .format(product_pricing, allowed_values)
            )

        self._product_pricing = product_pricing

    @property
    def recent_changes(self):
        """Gets the recent_changes of this Product.

        A description of the recent changes made to the app.

        :return: The recent_changes of this Product.
        :rtype: str
        """
        return self._recent_changes

    @recent_changes.setter
    def recent_changes(self, recent_changes):
        """Sets the recent_changes of this Product.

        A description of the recent changes made to the app.

        :param recent_changes: The recent_changes of this Product.
        :type recent_changes: str
        """

        self._recent_changes = recent_changes

    @property
    def requires_container_app(self):
        """Gets the requires_container_app of this Product.

        Deprecated.

        :return: The requires_container_app of this Product.
        :rtype: bool
        """
        return self._requires_container_app

    @requires_container_app.setter
    def requires_container_app(self, requires_container_app):
        """Sets the requires_container_app of this Product.

        Deprecated.

        :param requires_container_app: The requires_container_app of this Product.
        :type requires_container_app: bool
        """

        self._requires_container_app = requires_container_app

    @property
    def screenshot_urls(self):
        """Gets the screenshot_urls of this Product.

        A list of screenshot links representing the app.

        :return: The screenshot_urls of this Product.
        :rtype: List[str]
        """
        return self._screenshot_urls

    @screenshot_urls.setter
    def screenshot_urls(self, screenshot_urls):
        """Sets the screenshot_urls of this Product.

        A list of screenshot links representing the app.

        :param screenshot_urls: The screenshot_urls of this Product.
        :type screenshot_urls: List[str]
        """

        self._screenshot_urls = screenshot_urls

    @property
    def signing_certificate(self):
        """Gets the signing_certificate of this Product.


        :return: The signing_certificate of this Product.
        :rtype: ProductSigningCertificate
        """
        return self._signing_certificate

    @signing_certificate.setter
    def signing_certificate(self, signing_certificate):
        """Sets the signing_certificate of this Product.


        :param signing_certificate: The signing_certificate of this Product.
        :type signing_certificate: ProductSigningCertificate
        """

        self._signing_certificate = signing_certificate

    @property
    def small_icon_url(self):
        """Gets the small_icon_url of this Product.

        A link to a smaller image that can be used as an icon for the product. This image is suitable for use at up to 128px x 128px.

        :return: The small_icon_url of this Product.
        :rtype: str
        """
        return self._small_icon_url

    @small_icon_url.setter
    def small_icon_url(self, small_icon_url):
        """Sets the small_icon_url of this Product.

        A link to a smaller image that can be used as an icon for the product. This image is suitable for use at up to 128px x 128px.

        :param small_icon_url: The small_icon_url of this Product.
        :type small_icon_url: str
        """

        self._small_icon_url = small_icon_url

    @property
    def title(self):
        """Gets the title of this Product.

        The name of the product.

        :return: The title of this Product.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Product.

        The name of the product.

        :param title: The title of this Product.
        :type title: str
        """

        self._title = title

    @property
    def work_details_url(self):
        """Gets the work_details_url of this Product.

        A link to the managed Google Play details page for the product, for use by an Enterprise admin.

        :return: The work_details_url of this Product.
        :rtype: str
        """
        return self._work_details_url

    @work_details_url.setter
    def work_details_url(self, work_details_url):
        """Sets the work_details_url of this Product.

        A link to the managed Google Play details page for the product, for use by an Enterprise admin.

        :param work_details_url: The work_details_url of this Product.
        :type work_details_url: str
        """

        self._work_details_url = work_details_url
