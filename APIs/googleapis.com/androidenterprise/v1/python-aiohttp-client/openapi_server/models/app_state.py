# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.keyed_app_state import KeyedAppState
from openapi_server import util


class AppState(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keyed_app_state: List[KeyedAppState]=None, package_name: str=None):
        """AppState - a model defined in OpenAPI

        :param keyed_app_state: The keyed_app_state of this AppState.
        :param package_name: The package_name of this AppState.
        """
        self.openapi_types = {
            'keyed_app_state': List[KeyedAppState],
            'package_name': str
        }

        self.attribute_map = {
            'keyed_app_state': 'keyedAppState',
            'package_name': 'packageName'
        }

        self._keyed_app_state = keyed_app_state
        self._package_name = package_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppState':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppState of this AppState.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keyed_app_state(self):
        """Gets the keyed_app_state of this AppState.

        List of keyed app states. This field will always be present.

        :return: The keyed_app_state of this AppState.
        :rtype: List[KeyedAppState]
        """
        return self._keyed_app_state

    @keyed_app_state.setter
    def keyed_app_state(self, keyed_app_state):
        """Sets the keyed_app_state of this AppState.

        List of keyed app states. This field will always be present.

        :param keyed_app_state: The keyed_app_state of this AppState.
        :type keyed_app_state: List[KeyedAppState]
        """

        self._keyed_app_state = keyed_app_state

    @property
    def package_name(self):
        """Gets the package_name of this AppState.

        The package name of the app. This field will always be present.

        :return: The package_name of this AppState.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this AppState.

        The package name of the app. This field will always be present.

        :param package_name: The package_name of this AppState.
        :type package_name: str
        """

        self._package_name = package_name
