# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.managed_property_bundle import ManagedPropertyBundle
from openapi_server import util


class ManagedProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, value_bool: bool=None, value_bundle: ManagedPropertyBundle=None, value_bundle_array: List[ManagedPropertyBundle]=None, value_integer: int=None, value_string: str=None, value_string_array: List[str]=None):
        """ManagedProperty - a model defined in OpenAPI

        :param key: The key of this ManagedProperty.
        :param value_bool: The value_bool of this ManagedProperty.
        :param value_bundle: The value_bundle of this ManagedProperty.
        :param value_bundle_array: The value_bundle_array of this ManagedProperty.
        :param value_integer: The value_integer of this ManagedProperty.
        :param value_string: The value_string of this ManagedProperty.
        :param value_string_array: The value_string_array of this ManagedProperty.
        """
        self.openapi_types = {
            'key': str,
            'value_bool': bool,
            'value_bundle': ManagedPropertyBundle,
            'value_bundle_array': List[ManagedPropertyBundle],
            'value_integer': int,
            'value_string': str,
            'value_string_array': List[str]
        }

        self.attribute_map = {
            'key': 'key',
            'value_bool': 'valueBool',
            'value_bundle': 'valueBundle',
            'value_bundle_array': 'valueBundleArray',
            'value_integer': 'valueInteger',
            'value_string': 'valueString',
            'value_string_array': 'valueStringArray'
        }

        self._key = key
        self._value_bool = value_bool
        self._value_bundle = value_bundle
        self._value_bundle_array = value_bundle_array
        self._value_integer = value_integer
        self._value_string = value_string
        self._value_string_array = value_string_array

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManagedProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManagedProperty of this ManagedProperty.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this ManagedProperty.

        The unique key that identifies the property.

        :return: The key of this ManagedProperty.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ManagedProperty.

        The unique key that identifies the property.

        :param key: The key of this ManagedProperty.
        :type key: str
        """

        self._key = key

    @property
    def value_bool(self):
        """Gets the value_bool of this ManagedProperty.

        The boolean value - this will only be present if type of the property is bool.

        :return: The value_bool of this ManagedProperty.
        :rtype: bool
        """
        return self._value_bool

    @value_bool.setter
    def value_bool(self, value_bool):
        """Sets the value_bool of this ManagedProperty.

        The boolean value - this will only be present if type of the property is bool.

        :param value_bool: The value_bool of this ManagedProperty.
        :type value_bool: bool
        """

        self._value_bool = value_bool

    @property
    def value_bundle(self):
        """Gets the value_bundle of this ManagedProperty.


        :return: The value_bundle of this ManagedProperty.
        :rtype: ManagedPropertyBundle
        """
        return self._value_bundle

    @value_bundle.setter
    def value_bundle(self, value_bundle):
        """Sets the value_bundle of this ManagedProperty.


        :param value_bundle: The value_bundle of this ManagedProperty.
        :type value_bundle: ManagedPropertyBundle
        """

        self._value_bundle = value_bundle

    @property
    def value_bundle_array(self):
        """Gets the value_bundle_array of this ManagedProperty.

        The list of bundles of properties - this will only be present if type of the property is bundle_array.

        :return: The value_bundle_array of this ManagedProperty.
        :rtype: List[ManagedPropertyBundle]
        """
        return self._value_bundle_array

    @value_bundle_array.setter
    def value_bundle_array(self, value_bundle_array):
        """Sets the value_bundle_array of this ManagedProperty.

        The list of bundles of properties - this will only be present if type of the property is bundle_array.

        :param value_bundle_array: The value_bundle_array of this ManagedProperty.
        :type value_bundle_array: List[ManagedPropertyBundle]
        """

        self._value_bundle_array = value_bundle_array

    @property
    def value_integer(self):
        """Gets the value_integer of this ManagedProperty.

        The integer value - this will only be present if type of the property is integer.

        :return: The value_integer of this ManagedProperty.
        :rtype: int
        """
        return self._value_integer

    @value_integer.setter
    def value_integer(self, value_integer):
        """Sets the value_integer of this ManagedProperty.

        The integer value - this will only be present if type of the property is integer.

        :param value_integer: The value_integer of this ManagedProperty.
        :type value_integer: int
        """

        self._value_integer = value_integer

    @property
    def value_string(self):
        """Gets the value_string of this ManagedProperty.

        The string value - this will only be present if type of the property is string, choice or hidden.

        :return: The value_string of this ManagedProperty.
        :rtype: str
        """
        return self._value_string

    @value_string.setter
    def value_string(self, value_string):
        """Sets the value_string of this ManagedProperty.

        The string value - this will only be present if type of the property is string, choice or hidden.

        :param value_string: The value_string of this ManagedProperty.
        :type value_string: str
        """

        self._value_string = value_string

    @property
    def value_string_array(self):
        """Gets the value_string_array of this ManagedProperty.

        The list of string values - this will only be present if type of the property is multiselect.

        :return: The value_string_array of this ManagedProperty.
        :rtype: List[str]
        """
        return self._value_string_array

    @value_string_array.setter
    def value_string_array(self, value_string_array):
        """Sets the value_string_array of this ManagedProperty.

        The list of string values - this will only be present if type of the property is multiselect.

        :param value_string_array: The value_string_array of this ManagedProperty.
        :type value_string_array: List[str]
        """

        self._value_string_array = value_string_array
