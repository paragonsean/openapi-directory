# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.entitlement import Entitlement
from openapi_server import util


class EntitlementsListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entitlement: List[Entitlement]=None):
        """EntitlementsListResponse - a model defined in OpenAPI

        :param entitlement: The entitlement of this EntitlementsListResponse.
        """
        self.openapi_types = {
            'entitlement': List[Entitlement]
        }

        self.attribute_map = {
            'entitlement': 'entitlement'
        }

        self._entitlement = entitlement

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntitlementsListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntitlementsListResponse of this EntitlementsListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entitlement(self):
        """Gets the entitlement of this EntitlementsListResponse.

        An entitlement of a user to a product (e.g. an app). For example, a free app that they have installed, or a paid app that they have been allocated a license to.

        :return: The entitlement of this EntitlementsListResponse.
        :rtype: List[Entitlement]
        """
        return self._entitlement

    @entitlement.setter
    def entitlement(self, entitlement):
        """Sets the entitlement of this EntitlementsListResponse.

        An entitlement of a user to a product (e.g. an app). For example, a free app that they have installed, or a paid app that they have been allocated a license to.

        :param entitlement: The entitlement of this EntitlementsListResponse.
        :type entitlement: List[Entitlement]
        """

        self._entitlement = entitlement
