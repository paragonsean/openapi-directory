# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstallFailureEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, device_id: str=None, failure_details: str=None, failure_reason: str=None, product_id: str=None, user_id: str=None):
        """InstallFailureEvent - a model defined in OpenAPI

        :param device_id: The device_id of this InstallFailureEvent.
        :param failure_details: The failure_details of this InstallFailureEvent.
        :param failure_reason: The failure_reason of this InstallFailureEvent.
        :param product_id: The product_id of this InstallFailureEvent.
        :param user_id: The user_id of this InstallFailureEvent.
        """
        self.openapi_types = {
            'device_id': str,
            'failure_details': str,
            'failure_reason': str,
            'product_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'device_id': 'deviceId',
            'failure_details': 'failureDetails',
            'failure_reason': 'failureReason',
            'product_id': 'productId',
            'user_id': 'userId'
        }

        self._device_id = device_id
        self._failure_details = failure_details
        self._failure_reason = failure_reason
        self._product_id = product_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstallFailureEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstallFailureEvent of this InstallFailureEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def device_id(self):
        """Gets the device_id of this InstallFailureEvent.

        The Android ID of the device. This field will always be present.

        :return: The device_id of this InstallFailureEvent.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """Sets the device_id of this InstallFailureEvent.

        The Android ID of the device. This field will always be present.

        :param device_id: The device_id of this InstallFailureEvent.
        :type device_id: str
        """

        self._device_id = device_id

    @property
    def failure_details(self):
        """Gets the failure_details of this InstallFailureEvent.

        Additional details on the failure if applicable.

        :return: The failure_details of this InstallFailureEvent.
        :rtype: str
        """
        return self._failure_details

    @failure_details.setter
    def failure_details(self, failure_details):
        """Sets the failure_details of this InstallFailureEvent.

        Additional details on the failure if applicable.

        :param failure_details: The failure_details of this InstallFailureEvent.
        :type failure_details: str
        """

        self._failure_details = failure_details

    @property
    def failure_reason(self):
        """Gets the failure_reason of this InstallFailureEvent.

        The reason for the installation failure. This field will always be present.

        :return: The failure_reason of this InstallFailureEvent.
        :rtype: str
        """
        return self._failure_reason

    @failure_reason.setter
    def failure_reason(self, failure_reason):
        """Sets the failure_reason of this InstallFailureEvent.

        The reason for the installation failure. This field will always be present.

        :param failure_reason: The failure_reason of this InstallFailureEvent.
        :type failure_reason: str
        """
        allowed_values = ["unknown", "timeout"]  # noqa: E501
        if failure_reason not in allowed_values:
            raise ValueError(
                "Invalid value for `failure_reason` ({0}), must be one of {1}"
                .format(failure_reason, allowed_values)
            )

        self._failure_reason = failure_reason

    @property
    def product_id(self):
        """Gets the product_id of this InstallFailureEvent.

        The id of the product (e.g. \"app:com.google.android.gm\") for which the install failure event occured. This field will always be present.

        :return: The product_id of this InstallFailureEvent.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this InstallFailureEvent.

        The id of the product (e.g. \"app:com.google.android.gm\") for which the install failure event occured. This field will always be present.

        :param product_id: The product_id of this InstallFailureEvent.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def user_id(self):
        """Gets the user_id of this InstallFailureEvent.

        The ID of the user. This field will always be present.

        :return: The user_id of this InstallFailureEvent.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this InstallFailureEvent.

        The ID of the user. This field will always be present.

        :param user_id: The user_id of this InstallFailureEvent.
        :type user_id: str
        """

        self._user_id = user_id
