# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.variable_set import VariableSet
from openapi_server import util


class ConfigurationVariables(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mcm_id: str=None, variable_set: List[VariableSet]=None):
        """ConfigurationVariables - a model defined in OpenAPI

        :param mcm_id: The mcm_id of this ConfigurationVariables.
        :param variable_set: The variable_set of this ConfigurationVariables.
        """
        self.openapi_types = {
            'mcm_id': str,
            'variable_set': List[VariableSet]
        }

        self.attribute_map = {
            'mcm_id': 'mcmId',
            'variable_set': 'variableSet'
        }

        self._mcm_id = mcm_id
        self._variable_set = variable_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurationVariables':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConfigurationVariables of this ConfigurationVariables.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mcm_id(self):
        """Gets the mcm_id of this ConfigurationVariables.

        The ID of the managed configurations settings.

        :return: The mcm_id of this ConfigurationVariables.
        :rtype: str
        """
        return self._mcm_id

    @mcm_id.setter
    def mcm_id(self, mcm_id):
        """Sets the mcm_id of this ConfigurationVariables.

        The ID of the managed configurations settings.

        :param mcm_id: The mcm_id of this ConfigurationVariables.
        :type mcm_id: str
        """

        self._mcm_id = mcm_id

    @property
    def variable_set(self):
        """Gets the variable_set of this ConfigurationVariables.

        The variable set that is attributed to the user.

        :return: The variable_set of this ConfigurationVariables.
        :rtype: List[VariableSet]
        """
        return self._variable_set

    @variable_set.setter
    def variable_set(self, variable_set):
        """Sets the variable_set of this ConfigurationVariables.

        The variable set that is attributed to the user.

        :param variable_set: The variable_set of this ConfigurationVariables.
        :type variable_set: List[VariableSet]
        """

        self._variable_set = variable_set
