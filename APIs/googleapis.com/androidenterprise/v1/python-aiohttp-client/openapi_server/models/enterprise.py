# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.administrator import Administrator
from openapi_server.models.google_authentication_settings import GoogleAuthenticationSettings
from openapi_server import util


class Enterprise(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, administrator: List[Administrator]=None, google_authentication_settings: GoogleAuthenticationSettings=None, id: str=None, name: str=None, primary_domain: str=None):
        """Enterprise - a model defined in OpenAPI

        :param administrator: The administrator of this Enterprise.
        :param google_authentication_settings: The google_authentication_settings of this Enterprise.
        :param id: The id of this Enterprise.
        :param name: The name of this Enterprise.
        :param primary_domain: The primary_domain of this Enterprise.
        """
        self.openapi_types = {
            'administrator': List[Administrator],
            'google_authentication_settings': GoogleAuthenticationSettings,
            'id': str,
            'name': str,
            'primary_domain': str
        }

        self.attribute_map = {
            'administrator': 'administrator',
            'google_authentication_settings': 'googleAuthenticationSettings',
            'id': 'id',
            'name': 'name',
            'primary_domain': 'primaryDomain'
        }

        self._administrator = administrator
        self._google_authentication_settings = google_authentication_settings
        self._id = id
        self._name = name
        self._primary_domain = primary_domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Enterprise':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Enterprise of this Enterprise.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def administrator(self):
        """Gets the administrator of this Enterprise.

        Admins of the enterprise. This is only supported for enterprises created via the EMM-initiated flow.

        :return: The administrator of this Enterprise.
        :rtype: List[Administrator]
        """
        return self._administrator

    @administrator.setter
    def administrator(self, administrator):
        """Sets the administrator of this Enterprise.

        Admins of the enterprise. This is only supported for enterprises created via the EMM-initiated flow.

        :param administrator: The administrator of this Enterprise.
        :type administrator: List[Administrator]
        """

        self._administrator = administrator

    @property
    def google_authentication_settings(self):
        """Gets the google_authentication_settings of this Enterprise.


        :return: The google_authentication_settings of this Enterprise.
        :rtype: GoogleAuthenticationSettings
        """
        return self._google_authentication_settings

    @google_authentication_settings.setter
    def google_authentication_settings(self, google_authentication_settings):
        """Sets the google_authentication_settings of this Enterprise.


        :param google_authentication_settings: The google_authentication_settings of this Enterprise.
        :type google_authentication_settings: GoogleAuthenticationSettings
        """

        self._google_authentication_settings = google_authentication_settings

    @property
    def id(self):
        """Gets the id of this Enterprise.

        The unique ID for the enterprise.

        :return: The id of this Enterprise.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Enterprise.

        The unique ID for the enterprise.

        :param id: The id of this Enterprise.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Enterprise.

        The name of the enterprise, for example, \"Example, Inc\".

        :return: The name of this Enterprise.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Enterprise.

        The name of the enterprise, for example, \"Example, Inc\".

        :param name: The name of this Enterprise.
        :type name: str
        """

        self._name = name

    @property
    def primary_domain(self):
        """Gets the primary_domain of this Enterprise.

        The enterprise's primary domain, such as \"example.com\".

        :return: The primary_domain of this Enterprise.
        :rtype: str
        """
        return self._primary_domain

    @primary_domain.setter
    def primary_domain(self, primary_domain):
        """Sets the primary_domain of this Enterprise.

        The enterprise's primary domain, such as \"example.com\".

        :param primary_domain: The primary_domain of this Enterprise.
        :type primary_domain: str
        """

        self._primary_domain = primary_domain
