# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.group_license import GroupLicense
from openapi_server import util


class GroupLicensesListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, group_license: List[GroupLicense]=None):
        """GroupLicensesListResponse - a model defined in OpenAPI

        :param group_license: The group_license of this GroupLicensesListResponse.
        """
        self.openapi_types = {
            'group_license': List[GroupLicense]
        }

        self.attribute_map = {
            'group_license': 'groupLicense'
        }

        self._group_license = group_license

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupLicensesListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupLicensesListResponse of this GroupLicensesListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def group_license(self):
        """Gets the group_license of this GroupLicensesListResponse.

        A group license for a product approved for use in the enterprise.

        :return: The group_license of this GroupLicensesListResponse.
        :rtype: List[GroupLicense]
        """
        return self._group_license

    @group_license.setter
    def group_license(self, group_license):
        """Sets the group_license of this GroupLicensesListResponse.

        A group license for a product approved for use in the enterprise.

        :param group_license: The group_license of this GroupLicensesListResponse.
        :type group_license: List[GroupLicense]
        """

        self._group_license = group_license
