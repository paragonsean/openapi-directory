# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NewPermissionsEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approved_permissions: List[str]=None, product_id: str=None, requested_permissions: List[str]=None):
        """NewPermissionsEvent - a model defined in OpenAPI

        :param approved_permissions: The approved_permissions of this NewPermissionsEvent.
        :param product_id: The product_id of this NewPermissionsEvent.
        :param requested_permissions: The requested_permissions of this NewPermissionsEvent.
        """
        self.openapi_types = {
            'approved_permissions': List[str],
            'product_id': str,
            'requested_permissions': List[str]
        }

        self.attribute_map = {
            'approved_permissions': 'approvedPermissions',
            'product_id': 'productId',
            'requested_permissions': 'requestedPermissions'
        }

        self._approved_permissions = approved_permissions
        self._product_id = product_id
        self._requested_permissions = requested_permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewPermissionsEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewPermissionsEvent of this NewPermissionsEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approved_permissions(self):
        """Gets the approved_permissions of this NewPermissionsEvent.

        The set of permissions that the enterprise admin has already approved for this application. Use Permissions.Get on the EMM API to retrieve details about these permissions.

        :return: The approved_permissions of this NewPermissionsEvent.
        :rtype: List[str]
        """
        return self._approved_permissions

    @approved_permissions.setter
    def approved_permissions(self, approved_permissions):
        """Sets the approved_permissions of this NewPermissionsEvent.

        The set of permissions that the enterprise admin has already approved for this application. Use Permissions.Get on the EMM API to retrieve details about these permissions.

        :param approved_permissions: The approved_permissions of this NewPermissionsEvent.
        :type approved_permissions: List[str]
        """

        self._approved_permissions = approved_permissions

    @property
    def product_id(self):
        """Gets the product_id of this NewPermissionsEvent.

        The id of the product (e.g. \"app:com.google.android.gm\") for which new permissions were added. This field will always be present.

        :return: The product_id of this NewPermissionsEvent.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this NewPermissionsEvent.

        The id of the product (e.g. \"app:com.google.android.gm\") for which new permissions were added. This field will always be present.

        :param product_id: The product_id of this NewPermissionsEvent.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def requested_permissions(self):
        """Gets the requested_permissions of this NewPermissionsEvent.

        The set of permissions that the app is currently requesting. Use Permissions.Get on the EMM API to retrieve details about these permissions.

        :return: The requested_permissions of this NewPermissionsEvent.
        :rtype: List[str]
        """
        return self._requested_permissions

    @requested_permissions.setter
    def requested_permissions(self, requested_permissions):
        """Sets the requested_permissions of this NewPermissionsEvent.

        The set of permissions that the app is currently requesting. Use Permissions.Get on the EMM API to retrieve details about these permissions.

        :param requested_permissions: The requested_permissions of this NewPermissionsEvent.
        :type requested_permissions: List[str]
        """

        self._requested_permissions = requested_permissions
