# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.localized_text import LocalizedText
from openapi_server import util


class StoreCluster(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: List[LocalizedText]=None, order_in_page: str=None, product_id: List[str]=None):
        """StoreCluster - a model defined in OpenAPI

        :param id: The id of this StoreCluster.
        :param name: The name of this StoreCluster.
        :param order_in_page: The order_in_page of this StoreCluster.
        :param product_id: The product_id of this StoreCluster.
        """
        self.openapi_types = {
            'id': str,
            'name': List[LocalizedText],
            'order_in_page': str,
            'product_id': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'order_in_page': 'orderInPage',
            'product_id': 'productId'
        }

        self._id = id
        self._name = name
        self._order_in_page = order_in_page
        self._product_id = product_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoreCluster':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StoreCluster of this StoreCluster.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this StoreCluster.

        Unique ID of this cluster. Assigned by the server. Immutable once assigned.

        :return: The id of this StoreCluster.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StoreCluster.

        Unique ID of this cluster. Assigned by the server. Immutable once assigned.

        :param id: The id of this StoreCluster.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this StoreCluster.

        Ordered list of localized strings giving the name of this page. The text displayed is the one that best matches the user locale, or the first entry if there is no good match. There needs to be at least one entry.

        :return: The name of this StoreCluster.
        :rtype: List[LocalizedText]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StoreCluster.

        Ordered list of localized strings giving the name of this page. The text displayed is the one that best matches the user locale, or the first entry if there is no good match. There needs to be at least one entry.

        :param name: The name of this StoreCluster.
        :type name: List[LocalizedText]
        """

        self._name = name

    @property
    def order_in_page(self):
        """Gets the order_in_page of this StoreCluster.

        String (US-ASCII only) used to determine order of this cluster within the parent page's elements. Page elements are sorted in lexicographic order of this field. Duplicated values are allowed, but ordering between elements with duplicate order is undefined. The value of this field is never visible to a user, it is used solely for the purpose of defining an ordering. Maximum length is 256 characters.

        :return: The order_in_page of this StoreCluster.
        :rtype: str
        """
        return self._order_in_page

    @order_in_page.setter
    def order_in_page(self, order_in_page):
        """Sets the order_in_page of this StoreCluster.

        String (US-ASCII only) used to determine order of this cluster within the parent page's elements. Page elements are sorted in lexicographic order of this field. Duplicated values are allowed, but ordering between elements with duplicate order is undefined. The value of this field is never visible to a user, it is used solely for the purpose of defining an ordering. Maximum length is 256 characters.

        :param order_in_page: The order_in_page of this StoreCluster.
        :type order_in_page: str
        """

        self._order_in_page = order_in_page

    @property
    def product_id(self):
        """Gets the product_id of this StoreCluster.

        List of products in the order they are displayed in the cluster. There should not be duplicates within a cluster.

        :return: The product_id of this StoreCluster.
        :rtype: List[str]
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this StoreCluster.

        List of products in the order they are displayed in the cluster. There should not be duplicates within a cluster.

        :param product_id: The product_id of this StoreCluster.
        :type product_id: List[str]
        """

        self._product_id = product_id
