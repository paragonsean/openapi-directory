# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.localized_text import LocalizedText
from openapi_server import util


class StorePage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, link: List[str]=None, name: List[LocalizedText]=None):
        """StorePage - a model defined in OpenAPI

        :param id: The id of this StorePage.
        :param link: The link of this StorePage.
        :param name: The name of this StorePage.
        """
        self.openapi_types = {
            'id': str,
            'link': List[str],
            'name': List[LocalizedText]
        }

        self.attribute_map = {
            'id': 'id',
            'link': 'link',
            'name': 'name'
        }

        self._id = id
        self._link = link
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorePage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorePage of this StorePage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this StorePage.

        Unique ID of this page. Assigned by the server. Immutable once assigned.

        :return: The id of this StorePage.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StorePage.

        Unique ID of this page. Assigned by the server. Immutable once assigned.

        :param id: The id of this StorePage.
        :type id: str
        """

        self._id = id

    @property
    def link(self):
        """Gets the link of this StorePage.

        Ordered list of pages a user should be able to reach from this page. The list can't include this page. It is recommended that the basic pages are created first, before adding the links between pages. The API doesn't verify that the pages exist or the pages are reachable.

        :return: The link of this StorePage.
        :rtype: List[str]
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this StorePage.

        Ordered list of pages a user should be able to reach from this page. The list can't include this page. It is recommended that the basic pages are created first, before adding the links between pages. The API doesn't verify that the pages exist or the pages are reachable.

        :param link: The link of this StorePage.
        :type link: List[str]
        """

        self._link = link

    @property
    def name(self):
        """Gets the name of this StorePage.

        Ordered list of localized strings giving the name of this page. The text displayed is the one that best matches the user locale, or the first entry if there is no good match. There needs to be at least one entry.

        :return: The name of this StorePage.
        :rtype: List[LocalizedText]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StorePage.

        Ordered list of localized strings giving the name of this page. The text displayed is the one that best matches the user locale, or the first entry if there is no good match. There needs to be at least one entry.

        :param name: The name of this StorePage.
        :type name: List[LocalizedText]
        """

        self._name = name
