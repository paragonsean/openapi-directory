# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Install(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, install_state: str=None, product_id: str=None, version_code: int=None):
        """Install - a model defined in OpenAPI

        :param install_state: The install_state of this Install.
        :param product_id: The product_id of this Install.
        :param version_code: The version_code of this Install.
        """
        self.openapi_types = {
            'install_state': str,
            'product_id': str,
            'version_code': int
        }

        self.attribute_map = {
            'install_state': 'installState',
            'product_id': 'productId',
            'version_code': 'versionCode'
        }

        self._install_state = install_state
        self._product_id = product_id
        self._version_code = version_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Install':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Install of this Install.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def install_state(self):
        """Gets the install_state of this Install.

        Install state. The state \"installPending\" means that an install request has recently been made and download to the device is in progress. The state \"installed\" means that the app has been installed. This field is read-only.

        :return: The install_state of this Install.
        :rtype: str
        """
        return self._install_state

    @install_state.setter
    def install_state(self, install_state):
        """Sets the install_state of this Install.

        Install state. The state \"installPending\" means that an install request has recently been made and download to the device is in progress. The state \"installed\" means that the app has been installed. This field is read-only.

        :param install_state: The install_state of this Install.
        :type install_state: str
        """
        allowed_values = ["installed", "installPending"]  # noqa: E501
        if install_state not in allowed_values:
            raise ValueError(
                "Invalid value for `install_state` ({0}), must be one of {1}"
                .format(install_state, allowed_values)
            )

        self._install_state = install_state

    @property
    def product_id(self):
        """Gets the product_id of this Install.

        The ID of the product that the install is for. For example, \"app:com.google.android.gm\".

        :return: The product_id of this Install.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this Install.

        The ID of the product that the install is for. For example, \"app:com.google.android.gm\".

        :param product_id: The product_id of this Install.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def version_code(self):
        """Gets the version_code of this Install.

        The version of the installed product. Guaranteed to be set only if the install state is \"installed\".

        :return: The version_code of this Install.
        :rtype: int
        """
        return self._version_code

    @version_code.setter
    def version_code(self, version_code):
        """Sets the version_code of this Install.

        The version of the installed product. Guaranteed to be set only if the install state is \"installed\".

        :param version_code: The version_code of this Install.
        :type version_code: int
        """

        self._version_code = version_code
