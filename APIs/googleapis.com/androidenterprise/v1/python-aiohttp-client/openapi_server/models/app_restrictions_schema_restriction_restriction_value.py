# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppRestrictionsSchemaRestrictionRestrictionValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, value_bool: bool=None, value_integer: int=None, value_multiselect: List[str]=None, value_string: str=None):
        """AppRestrictionsSchemaRestrictionRestrictionValue - a model defined in OpenAPI

        :param type: The type of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :param value_bool: The value_bool of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :param value_integer: The value_integer of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :param value_multiselect: The value_multiselect of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :param value_string: The value_string of this AppRestrictionsSchemaRestrictionRestrictionValue.
        """
        self.openapi_types = {
            'type': str,
            'value_bool': bool,
            'value_integer': int,
            'value_multiselect': List[str],
            'value_string': str
        }

        self.attribute_map = {
            'type': 'type',
            'value_bool': 'valueBool',
            'value_integer': 'valueInteger',
            'value_multiselect': 'valueMultiselect',
            'value_string': 'valueString'
        }

        self._type = type
        self._value_bool = value_bool
        self._value_integer = value_integer
        self._value_multiselect = value_multiselect
        self._value_string = value_string

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppRestrictionsSchemaRestrictionRestrictionValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppRestrictionsSchemaRestrictionRestrictionValue of this AppRestrictionsSchemaRestrictionRestrictionValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The type of the value being provided.

        :return: The type of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The type of the value being provided.

        :param type: The type of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :type type: str
        """
        allowed_values = ["bool", "string", "integer", "choice", "multiselect", "hidden", "bundle", "bundleArray"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def value_bool(self):
        """Gets the value_bool of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The boolean value - this will only be present if type is bool.

        :return: The value_bool of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :rtype: bool
        """
        return self._value_bool

    @value_bool.setter
    def value_bool(self, value_bool):
        """Sets the value_bool of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The boolean value - this will only be present if type is bool.

        :param value_bool: The value_bool of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :type value_bool: bool
        """

        self._value_bool = value_bool

    @property
    def value_integer(self):
        """Gets the value_integer of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The integer value - this will only be present if type is integer.

        :return: The value_integer of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :rtype: int
        """
        return self._value_integer

    @value_integer.setter
    def value_integer(self, value_integer):
        """Sets the value_integer of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The integer value - this will only be present if type is integer.

        :param value_integer: The value_integer of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :type value_integer: int
        """

        self._value_integer = value_integer

    @property
    def value_multiselect(self):
        """Gets the value_multiselect of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The list of string values - this will only be present if type is multiselect.

        :return: The value_multiselect of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :rtype: List[str]
        """
        return self._value_multiselect

    @value_multiselect.setter
    def value_multiselect(self, value_multiselect):
        """Sets the value_multiselect of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The list of string values - this will only be present if type is multiselect.

        :param value_multiselect: The value_multiselect of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :type value_multiselect: List[str]
        """

        self._value_multiselect = value_multiselect

    @property
    def value_string(self):
        """Gets the value_string of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The string value - this will be present for types string, choice and hidden.

        :return: The value_string of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :rtype: str
        """
        return self._value_string

    @value_string.setter
    def value_string(self, value_string):
        """Sets the value_string of this AppRestrictionsSchemaRestrictionRestrictionValue.

        The string value - this will be present for types string, choice and hidden.

        :param value_string: The value_string of this AppRestrictionsSchemaRestrictionRestrictionValue.
        :type value_string: str
        """

        self._value_string = value_string
