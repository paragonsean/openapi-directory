/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceState model module.
 * @module model/DeviceState
 * @version v1
 */
class DeviceState {
    /**
     * Constructs a new <code>DeviceState</code>.
     * The state of a user&#39;s device, as accessed by the getState and setState methods on device resources.
     * @alias module:model/DeviceState
     */
    constructor() { 
        
        DeviceState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeviceState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceState} obj Optional instance to populate.
     * @return {module:model/DeviceState} The populated <code>DeviceState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceState();

            if (data.hasOwnProperty('accountState')) {
                obj['accountState'] = ApiClient.convertToType(data['accountState'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceState</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountState'] && !(typeof data['accountState'] === 'string' || data['accountState'] instanceof String)) {
            throw new Error("Expected the field `accountState` to be a primitive type in the JSON string but got " + data['accountState']);
        }

        return true;
    }


}



/**
 * The state of the Google account on the device. \"enabled\" indicates that the Google account on the device can be used to access Google services (including Google Play), while \"disabled\" means that it cannot. A new device is initially in the \"disabled\" state.
 * @member {module:model/DeviceState.AccountStateEnum} accountState
 */
DeviceState.prototype['accountState'] = undefined;





/**
 * Allowed values for the <code>accountState</code> property.
 * @enum {String}
 * @readonly
 */
DeviceState['AccountStateEnum'] = {

    /**
     * value: "enabled"
     * @const
     */
    "enabled": "enabled",

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled"
};



export default DeviceState;

