/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigurationVariables from './ConfigurationVariables';
import ManagedProperty from './ManagedProperty';

/**
 * The ManagedConfiguration model module.
 * @module model/ManagedConfiguration
 * @version v1
 */
class ManagedConfiguration {
    /**
     * Constructs a new <code>ManagedConfiguration</code>.
     * A managed configuration resource contains the set of managed properties defined by the app developer in the app&#39;s managed configurations schema, as well as any configuration variables defined for the user.
     * @alias module:model/ManagedConfiguration
     */
    constructor() { 
        
        ManagedConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagedConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagedConfiguration} obj Optional instance to populate.
     * @return {module:model/ManagedConfiguration} The populated <code>ManagedConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagedConfiguration();

            if (data.hasOwnProperty('configurationVariables')) {
                obj['configurationVariables'] = ConfigurationVariables.constructFromObject(data['configurationVariables']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('managedProperty')) {
                obj['managedProperty'] = ApiClient.convertToType(data['managedProperty'], [ManagedProperty]);
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagedConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagedConfiguration</code>.
     */
    static validateJSON(data) {
        // validate the optional field `configurationVariables`
        if (data['configurationVariables']) { // data not null
          ConfigurationVariables.validateJSON(data['configurationVariables']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        if (data['managedProperty']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['managedProperty'])) {
                throw new Error("Expected the field `managedProperty` to be an array in the JSON data but got " + data['managedProperty']);
            }
            // validate the optional field `managedProperty` (array)
            for (const item of data['managedProperty']) {
                ManagedProperty.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }

        return true;
    }


}



/**
 * @member {module:model/ConfigurationVariables} configurationVariables
 */
ManagedConfiguration.prototype['configurationVariables'] = undefined;

/**
 * Deprecated.
 * @member {String} kind
 */
ManagedConfiguration.prototype['kind'] = undefined;

/**
 * The set of managed properties for this configuration.
 * @member {Array.<module:model/ManagedProperty>} managedProperty
 */
ManagedConfiguration.prototype['managedProperty'] = undefined;

/**
 * The ID of the product that the managed configuration is for, e.g. \"app:com.google.android.gm\".
 * @member {String} productId
 */
ManagedConfiguration.prototype['productId'] = undefined;






export default ManagedConfiguration;

