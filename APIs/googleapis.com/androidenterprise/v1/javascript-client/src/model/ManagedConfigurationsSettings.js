/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManagedConfigurationsSettings model module.
 * @module model/ManagedConfigurationsSettings
 * @version v1
 */
class ManagedConfigurationsSettings {
    /**
     * Constructs a new <code>ManagedConfigurationsSettings</code>.
     * A managed configurations settings resource contains the set of managed properties that have been configured for an Android app to be applied to a set of users. The app&#39;s developer would have defined configurable properties in the managed configurations schema.
     * @alias module:model/ManagedConfigurationsSettings
     */
    constructor() { 
        
        ManagedConfigurationsSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagedConfigurationsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagedConfigurationsSettings} obj Optional instance to populate.
     * @return {module:model/ManagedConfigurationsSettings} The populated <code>ManagedConfigurationsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagedConfigurationsSettings();

            if (data.hasOwnProperty('lastUpdatedTimestampMillis')) {
                obj['lastUpdatedTimestampMillis'] = ApiClient.convertToType(data['lastUpdatedTimestampMillis'], 'String');
            }
            if (data.hasOwnProperty('mcmId')) {
                obj['mcmId'] = ApiClient.convertToType(data['mcmId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagedConfigurationsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagedConfigurationsSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lastUpdatedTimestampMillis'] && !(typeof data['lastUpdatedTimestampMillis'] === 'string' || data['lastUpdatedTimestampMillis'] instanceof String)) {
            throw new Error("Expected the field `lastUpdatedTimestampMillis` to be a primitive type in the JSON string but got " + data['lastUpdatedTimestampMillis']);
        }
        // ensure the json data is a string
        if (data['mcmId'] && !(typeof data['mcmId'] === 'string' || data['mcmId'] instanceof String)) {
            throw new Error("Expected the field `mcmId` to be a primitive type in the JSON string but got " + data['mcmId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * The last updated time of the managed configuration settings in milliseconds since 1970-01-01T00:00:00Z.
 * @member {String} lastUpdatedTimestampMillis
 */
ManagedConfigurationsSettings.prototype['lastUpdatedTimestampMillis'] = undefined;

/**
 * The ID of the managed configurations settings.
 * @member {String} mcmId
 */
ManagedConfigurationsSettings.prototype['mcmId'] = undefined;

/**
 * The name of the managed configurations settings.
 * @member {String} name
 */
ManagedConfigurationsSettings.prototype['name'] = undefined;






export default ManagedConfigurationsSettings;

