/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AutoInstallConstraint model module.
 * @module model/AutoInstallConstraint
 * @version v1
 */
class AutoInstallConstraint {
    /**
     * Constructs a new <code>AutoInstallConstraint</code>.
     * The auto-install constraint. Defines a set of restrictions for installation. At least one of the fields must be set.
     * @alias module:model/AutoInstallConstraint
     */
    constructor() { 
        
        AutoInstallConstraint.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoInstallConstraint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoInstallConstraint} obj Optional instance to populate.
     * @return {module:model/AutoInstallConstraint} The populated <code>AutoInstallConstraint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoInstallConstraint();

            if (data.hasOwnProperty('chargingStateConstraint')) {
                obj['chargingStateConstraint'] = ApiClient.convertToType(data['chargingStateConstraint'], 'String');
            }
            if (data.hasOwnProperty('deviceIdleStateConstraint')) {
                obj['deviceIdleStateConstraint'] = ApiClient.convertToType(data['deviceIdleStateConstraint'], 'String');
            }
            if (data.hasOwnProperty('networkTypeConstraint')) {
                obj['networkTypeConstraint'] = ApiClient.convertToType(data['networkTypeConstraint'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoInstallConstraint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoInstallConstraint</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['chargingStateConstraint'] && !(typeof data['chargingStateConstraint'] === 'string' || data['chargingStateConstraint'] instanceof String)) {
            throw new Error("Expected the field `chargingStateConstraint` to be a primitive type in the JSON string but got " + data['chargingStateConstraint']);
        }
        // ensure the json data is a string
        if (data['deviceIdleStateConstraint'] && !(typeof data['deviceIdleStateConstraint'] === 'string' || data['deviceIdleStateConstraint'] instanceof String)) {
            throw new Error("Expected the field `deviceIdleStateConstraint` to be a primitive type in the JSON string but got " + data['deviceIdleStateConstraint']);
        }
        // ensure the json data is a string
        if (data['networkTypeConstraint'] && !(typeof data['networkTypeConstraint'] === 'string' || data['networkTypeConstraint'] instanceof String)) {
            throw new Error("Expected the field `networkTypeConstraint` to be a primitive type in the JSON string but got " + data['networkTypeConstraint']);
        }

        return true;
    }


}



/**
 * Charging state constraint.
 * @member {module:model/AutoInstallConstraint.ChargingStateConstraintEnum} chargingStateConstraint
 */
AutoInstallConstraint.prototype['chargingStateConstraint'] = undefined;

/**
 * Device idle state constraint.
 * @member {module:model/AutoInstallConstraint.DeviceIdleStateConstraintEnum} deviceIdleStateConstraint
 */
AutoInstallConstraint.prototype['deviceIdleStateConstraint'] = undefined;

/**
 * Network type constraint.
 * @member {module:model/AutoInstallConstraint.NetworkTypeConstraintEnum} networkTypeConstraint
 */
AutoInstallConstraint.prototype['networkTypeConstraint'] = undefined;





/**
 * Allowed values for the <code>chargingStateConstraint</code> property.
 * @enum {String}
 * @readonly
 */
AutoInstallConstraint['ChargingStateConstraintEnum'] = {

    /**
     * value: "chargingStateConstraintUnspecified"
     * @const
     */
    "chargingStateConstraintUnspecified": "chargingStateConstraintUnspecified",

    /**
     * value: "chargingNotRequired"
     * @const
     */
    "chargingNotRequired": "chargingNotRequired",

    /**
     * value: "chargingRequired"
     * @const
     */
    "chargingRequired": "chargingRequired"
};


/**
 * Allowed values for the <code>deviceIdleStateConstraint</code> property.
 * @enum {String}
 * @readonly
 */
AutoInstallConstraint['DeviceIdleStateConstraintEnum'] = {

    /**
     * value: "deviceIdleStateConstraintUnspecified"
     * @const
     */
    "deviceIdleStateConstraintUnspecified": "deviceIdleStateConstraintUnspecified",

    /**
     * value: "deviceIdleNotRequired"
     * @const
     */
    "deviceIdleNotRequired": "deviceIdleNotRequired",

    /**
     * value: "deviceIdleRequired"
     * @const
     */
    "deviceIdleRequired": "deviceIdleRequired"
};


/**
 * Allowed values for the <code>networkTypeConstraint</code> property.
 * @enum {String}
 * @readonly
 */
AutoInstallConstraint['NetworkTypeConstraintEnum'] = {

    /**
     * value: "networkTypeConstraintUnspecified"
     * @const
     */
    "networkTypeConstraintUnspecified": "networkTypeConstraintUnspecified",

    /**
     * value: "anyNetwork"
     * @const
     */
    "anyNetwork": "anyNetwork",

    /**
     * value: "unmeteredNetwork"
     * @const
     */
    "unmeteredNetwork": "unmeteredNetwork"
};



export default AutoInstallConstraint;

