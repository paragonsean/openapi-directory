/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppRestrictionsSchemaChangeEvent from './AppRestrictionsSchemaChangeEvent';
import AppUpdateEvent from './AppUpdateEvent';
import DeviceReportUpdateEvent from './DeviceReportUpdateEvent';
import InstallFailureEvent from './InstallFailureEvent';
import NewDeviceEvent from './NewDeviceEvent';
import NewPermissionsEvent from './NewPermissionsEvent';
import ProductApprovalEvent from './ProductApprovalEvent';
import ProductAvailabilityChangeEvent from './ProductAvailabilityChangeEvent';

/**
 * The Notification model module.
 * @module model/Notification
 * @version v1
 */
class Notification {
    /**
     * Constructs a new <code>Notification</code>.
     * A notification of one event relating to an enterprise.
     * @alias module:model/Notification
     */
    constructor() { 
        
        Notification.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Notification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Notification} obj Optional instance to populate.
     * @return {module:model/Notification} The populated <code>Notification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Notification();

            if (data.hasOwnProperty('appRestrictionsSchemaChangeEvent')) {
                obj['appRestrictionsSchemaChangeEvent'] = AppRestrictionsSchemaChangeEvent.constructFromObject(data['appRestrictionsSchemaChangeEvent']);
            }
            if (data.hasOwnProperty('appUpdateEvent')) {
                obj['appUpdateEvent'] = AppUpdateEvent.constructFromObject(data['appUpdateEvent']);
            }
            if (data.hasOwnProperty('deviceReportUpdateEvent')) {
                obj['deviceReportUpdateEvent'] = DeviceReportUpdateEvent.constructFromObject(data['deviceReportUpdateEvent']);
            }
            if (data.hasOwnProperty('enterpriseId')) {
                obj['enterpriseId'] = ApiClient.convertToType(data['enterpriseId'], 'String');
            }
            if (data.hasOwnProperty('installFailureEvent')) {
                obj['installFailureEvent'] = InstallFailureEvent.constructFromObject(data['installFailureEvent']);
            }
            if (data.hasOwnProperty('newDeviceEvent')) {
                obj['newDeviceEvent'] = NewDeviceEvent.constructFromObject(data['newDeviceEvent']);
            }
            if (data.hasOwnProperty('newPermissionsEvent')) {
                obj['newPermissionsEvent'] = NewPermissionsEvent.constructFromObject(data['newPermissionsEvent']);
            }
            if (data.hasOwnProperty('notificationType')) {
                obj['notificationType'] = ApiClient.convertToType(data['notificationType'], 'String');
            }
            if (data.hasOwnProperty('productApprovalEvent')) {
                obj['productApprovalEvent'] = ProductApprovalEvent.constructFromObject(data['productApprovalEvent']);
            }
            if (data.hasOwnProperty('productAvailabilityChangeEvent')) {
                obj['productAvailabilityChangeEvent'] = ProductAvailabilityChangeEvent.constructFromObject(data['productAvailabilityChangeEvent']);
            }
            if (data.hasOwnProperty('timestampMillis')) {
                obj['timestampMillis'] = ApiClient.convertToType(data['timestampMillis'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Notification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Notification</code>.
     */
    static validateJSON(data) {
        // validate the optional field `appRestrictionsSchemaChangeEvent`
        if (data['appRestrictionsSchemaChangeEvent']) { // data not null
          AppRestrictionsSchemaChangeEvent.validateJSON(data['appRestrictionsSchemaChangeEvent']);
        }
        // validate the optional field `appUpdateEvent`
        if (data['appUpdateEvent']) { // data not null
          AppUpdateEvent.validateJSON(data['appUpdateEvent']);
        }
        // validate the optional field `deviceReportUpdateEvent`
        if (data['deviceReportUpdateEvent']) { // data not null
          DeviceReportUpdateEvent.validateJSON(data['deviceReportUpdateEvent']);
        }
        // ensure the json data is a string
        if (data['enterpriseId'] && !(typeof data['enterpriseId'] === 'string' || data['enterpriseId'] instanceof String)) {
            throw new Error("Expected the field `enterpriseId` to be a primitive type in the JSON string but got " + data['enterpriseId']);
        }
        // validate the optional field `installFailureEvent`
        if (data['installFailureEvent']) { // data not null
          InstallFailureEvent.validateJSON(data['installFailureEvent']);
        }
        // validate the optional field `newDeviceEvent`
        if (data['newDeviceEvent']) { // data not null
          NewDeviceEvent.validateJSON(data['newDeviceEvent']);
        }
        // validate the optional field `newPermissionsEvent`
        if (data['newPermissionsEvent']) { // data not null
          NewPermissionsEvent.validateJSON(data['newPermissionsEvent']);
        }
        // ensure the json data is a string
        if (data['notificationType'] && !(typeof data['notificationType'] === 'string' || data['notificationType'] instanceof String)) {
            throw new Error("Expected the field `notificationType` to be a primitive type in the JSON string but got " + data['notificationType']);
        }
        // validate the optional field `productApprovalEvent`
        if (data['productApprovalEvent']) { // data not null
          ProductApprovalEvent.validateJSON(data['productApprovalEvent']);
        }
        // validate the optional field `productAvailabilityChangeEvent`
        if (data['productAvailabilityChangeEvent']) { // data not null
          ProductAvailabilityChangeEvent.validateJSON(data['productAvailabilityChangeEvent']);
        }
        // ensure the json data is a string
        if (data['timestampMillis'] && !(typeof data['timestampMillis'] === 'string' || data['timestampMillis'] instanceof String)) {
            throw new Error("Expected the field `timestampMillis` to be a primitive type in the JSON string but got " + data['timestampMillis']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppRestrictionsSchemaChangeEvent} appRestrictionsSchemaChangeEvent
 */
Notification.prototype['appRestrictionsSchemaChangeEvent'] = undefined;

/**
 * @member {module:model/AppUpdateEvent} appUpdateEvent
 */
Notification.prototype['appUpdateEvent'] = undefined;

/**
 * @member {module:model/DeviceReportUpdateEvent} deviceReportUpdateEvent
 */
Notification.prototype['deviceReportUpdateEvent'] = undefined;

/**
 * The ID of the enterprise for which the notification is sent. This will always be present.
 * @member {String} enterpriseId
 */
Notification.prototype['enterpriseId'] = undefined;

/**
 * @member {module:model/InstallFailureEvent} installFailureEvent
 */
Notification.prototype['installFailureEvent'] = undefined;

/**
 * @member {module:model/NewDeviceEvent} newDeviceEvent
 */
Notification.prototype['newDeviceEvent'] = undefined;

/**
 * @member {module:model/NewPermissionsEvent} newPermissionsEvent
 */
Notification.prototype['newPermissionsEvent'] = undefined;

/**
 * Type of the notification.
 * @member {module:model/Notification.NotificationTypeEnum} notificationType
 */
Notification.prototype['notificationType'] = undefined;

/**
 * @member {module:model/ProductApprovalEvent} productApprovalEvent
 */
Notification.prototype['productApprovalEvent'] = undefined;

/**
 * @member {module:model/ProductAvailabilityChangeEvent} productAvailabilityChangeEvent
 */
Notification.prototype['productAvailabilityChangeEvent'] = undefined;

/**
 * The time when the notification was published in milliseconds since 1970-01-01T00:00:00Z. This will always be present.
 * @member {String} timestampMillis
 */
Notification.prototype['timestampMillis'] = undefined;





/**
 * Allowed values for the <code>notificationType</code> property.
 * @enum {String}
 * @readonly
 */
Notification['NotificationTypeEnum'] = {

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",

    /**
     * value: "testNotification"
     * @const
     */
    "testNotification": "testNotification",

    /**
     * value: "productApproval"
     * @const
     */
    "productApproval": "productApproval",

    /**
     * value: "installFailure"
     * @const
     */
    "installFailure": "installFailure",

    /**
     * value: "appUpdate"
     * @const
     */
    "appUpdate": "appUpdate",

    /**
     * value: "newPermissions"
     * @const
     */
    "newPermissions": "newPermissions",

    /**
     * value: "appRestricionsSchemaChange"
     * @const
     */
    "appRestricionsSchemaChange": "appRestricionsSchemaChange",

    /**
     * value: "productAvailabilityChange"
     * @const
     */
    "productAvailabilityChange": "productAvailabilityChange",

    /**
     * value: "newDevice"
     * @const
     */
    "newDevice": "newDevice",

    /**
     * value: "deviceReportUpdate"
     * @const
     */
    "deviceReportUpdate": "deviceReportUpdate"
};



export default Notification;

