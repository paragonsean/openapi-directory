/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KeyedAppState model module.
 * @module model/KeyedAppState
 * @version v1
 */
class KeyedAppState {
    /**
     * Constructs a new <code>KeyedAppState</code>.
     * Represents a keyed app state containing a key, timestamp, severity level, optional description, and optional data.
     * @alias module:model/KeyedAppState
     */
    constructor() { 
        
        KeyedAppState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KeyedAppState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyedAppState} obj Optional instance to populate.
     * @return {module:model/KeyedAppState} The populated <code>KeyedAppState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyedAppState();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('severity')) {
                obj['severity'] = ApiClient.convertToType(data['severity'], 'String');
            }
            if (data.hasOwnProperty('stateTimestampMillis')) {
                obj['stateTimestampMillis'] = ApiClient.convertToType(data['stateTimestampMillis'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyedAppState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyedAppState</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['data'] && !(typeof data['data'] === 'string' || data['data'] instanceof String)) {
            throw new Error("Expected the field `data` to be a primitive type in the JSON string but got " + data['data']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['severity'] && !(typeof data['severity'] === 'string' || data['severity'] instanceof String)) {
            throw new Error("Expected the field `severity` to be a primitive type in the JSON string but got " + data['severity']);
        }
        // ensure the json data is a string
        if (data['stateTimestampMillis'] && !(typeof data['stateTimestampMillis'] === 'string' || data['stateTimestampMillis'] instanceof String)) {
            throw new Error("Expected the field `stateTimestampMillis` to be a primitive type in the JSON string but got " + data['stateTimestampMillis']);
        }

        return true;
    }


}



/**
 * Additional field intended for machine-readable data. For example, a number or JSON object. To prevent XSS, we recommend removing any HTML from the data before displaying it.
 * @member {String} data
 */
KeyedAppState.prototype['data'] = undefined;

/**
 * Key indicating what the app is providing a state for. The content of the key is set by the app's developer. To prevent XSS, we recommend removing any HTML from the key before displaying it. This field will always be present.
 * @member {String} key
 */
KeyedAppState.prototype['key'] = undefined;

/**
 * Free-form, human-readable message describing the app state. For example, an error message. To prevent XSS, we recommend removing any HTML from the message before displaying it.
 * @member {String} message
 */
KeyedAppState.prototype['message'] = undefined;

/**
 * Severity of the app state. This field will always be present.
 * @member {module:model/KeyedAppState.SeverityEnum} severity
 */
KeyedAppState.prototype['severity'] = undefined;

/**
 * Timestamp of when the app set the state in milliseconds since epoch. This field will always be present.
 * @member {String} stateTimestampMillis
 */
KeyedAppState.prototype['stateTimestampMillis'] = undefined;





/**
 * Allowed values for the <code>severity</code> property.
 * @enum {String}
 * @readonly
 */
KeyedAppState['SeverityEnum'] = {

    /**
     * value: "severityUnknown"
     * @const
     */
    "severityUnknown": "severityUnknown",

    /**
     * value: "severityInfo"
     * @const
     */
    "severityInfo": "severityInfo",

    /**
     * value: "severityError"
     * @const
     */
    "severityError": "severityError"
};



export default KeyedAppState;

