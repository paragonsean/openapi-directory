/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppRestrictionsSchemaRestrictionRestrictionValue model module.
 * @module model/AppRestrictionsSchemaRestrictionRestrictionValue
 * @version v1
 */
class AppRestrictionsSchemaRestrictionRestrictionValue {
    /**
     * Constructs a new <code>AppRestrictionsSchemaRestrictionRestrictionValue</code>.
     * A typed value for the restriction.
     * @alias module:model/AppRestrictionsSchemaRestrictionRestrictionValue
     */
    constructor() { 
        
        AppRestrictionsSchemaRestrictionRestrictionValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppRestrictionsSchemaRestrictionRestrictionValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppRestrictionsSchemaRestrictionRestrictionValue} obj Optional instance to populate.
     * @return {module:model/AppRestrictionsSchemaRestrictionRestrictionValue} The populated <code>AppRestrictionsSchemaRestrictionRestrictionValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppRestrictionsSchemaRestrictionRestrictionValue();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('valueBool')) {
                obj['valueBool'] = ApiClient.convertToType(data['valueBool'], 'Boolean');
            }
            if (data.hasOwnProperty('valueInteger')) {
                obj['valueInteger'] = ApiClient.convertToType(data['valueInteger'], 'Number');
            }
            if (data.hasOwnProperty('valueMultiselect')) {
                obj['valueMultiselect'] = ApiClient.convertToType(data['valueMultiselect'], ['String']);
            }
            if (data.hasOwnProperty('valueString')) {
                obj['valueString'] = ApiClient.convertToType(data['valueString'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppRestrictionsSchemaRestrictionRestrictionValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppRestrictionsSchemaRestrictionRestrictionValue</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['valueMultiselect'])) {
            throw new Error("Expected the field `valueMultiselect` to be an array in the JSON data but got " + data['valueMultiselect']);
        }
        // ensure the json data is a string
        if (data['valueString'] && !(typeof data['valueString'] === 'string' || data['valueString'] instanceof String)) {
            throw new Error("Expected the field `valueString` to be a primitive type in the JSON string but got " + data['valueString']);
        }

        return true;
    }


}



/**
 * The type of the value being provided.
 * @member {module:model/AppRestrictionsSchemaRestrictionRestrictionValue.TypeEnum} type
 */
AppRestrictionsSchemaRestrictionRestrictionValue.prototype['type'] = undefined;

/**
 * The boolean value - this will only be present if type is bool.
 * @member {Boolean} valueBool
 */
AppRestrictionsSchemaRestrictionRestrictionValue.prototype['valueBool'] = undefined;

/**
 * The integer value - this will only be present if type is integer.
 * @member {Number} valueInteger
 */
AppRestrictionsSchemaRestrictionRestrictionValue.prototype['valueInteger'] = undefined;

/**
 * The list of string values - this will only be present if type is multiselect.
 * @member {Array.<String>} valueMultiselect
 */
AppRestrictionsSchemaRestrictionRestrictionValue.prototype['valueMultiselect'] = undefined;

/**
 * The string value - this will be present for types string, choice and hidden.
 * @member {String} valueString
 */
AppRestrictionsSchemaRestrictionRestrictionValue.prototype['valueString'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AppRestrictionsSchemaRestrictionRestrictionValue['TypeEnum'] = {

    /**
     * value: "bool"
     * @const
     */
    "bool": "bool",

    /**
     * value: "string"
     * @const
     */
    "string": "string",

    /**
     * value: "integer"
     * @const
     */
    "integer": "integer",

    /**
     * value: "choice"
     * @const
     */
    "choice": "choice",

    /**
     * value: "multiselect"
     * @const
     */
    "multiselect": "multiselect",

    /**
     * value: "hidden"
     * @const
     */
    "hidden": "hidden",

    /**
     * value: "bundle"
     * @const
     */
    "bundle": "bundle",

    /**
     * value: "bundleArray"
     * @const
     */
    "bundleArray": "bundleArray"
};



export default AppRestrictionsSchemaRestrictionRestrictionValue;

