/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceAccountKey model module.
 * @module model/ServiceAccountKey
 * @version v1
 */
class ServiceAccountKey {
    /**
     * Constructs a new <code>ServiceAccountKey</code>.
     * Credentials that can be used to authenticate as a service account.
     * @alias module:model/ServiceAccountKey
     */
    constructor() { 
        
        ServiceAccountKey.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceAccountKey</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceAccountKey} obj Optional instance to populate.
     * @return {module:model/ServiceAccountKey} The populated <code>ServiceAccountKey</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceAccountKey();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('publicData')) {
                obj['publicData'] = ApiClient.convertToType(data['publicData'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceAccountKey</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceAccountKey</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['data'] && !(typeof data['data'] === 'string' || data['data'] instanceof String)) {
            throw new Error("Expected the field `data` to be a primitive type in the JSON string but got " + data['data']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['publicData'] && !(typeof data['publicData'] === 'string' || data['publicData'] instanceof String)) {
            throw new Error("Expected the field `publicData` to be a primitive type in the JSON string but got " + data['publicData']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The body of the private key credentials file, in string format. This is only populated when the ServiceAccountKey is created, and is not stored by Google.
 * @member {String} data
 */
ServiceAccountKey.prototype['data'] = undefined;

/**
 * An opaque, unique identifier for this ServiceAccountKey. Assigned by the server.
 * @member {String} id
 */
ServiceAccountKey.prototype['id'] = undefined;

/**
 * Public key data for the credentials file. This is an X.509 cert. If you are using the googleCredentials key type, this is identical to the cert that can be retrieved by using the X.509 cert url inside of the credentials file.
 * @member {String} publicData
 */
ServiceAccountKey.prototype['publicData'] = undefined;

/**
 * The file format of the generated key data.
 * @member {module:model/ServiceAccountKey.TypeEnum} type
 */
ServiceAccountKey.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ServiceAccountKey['TypeEnum'] = {

    /**
     * value: "googleCredentials"
     * @const
     */
    "googleCredentials": "googleCredentials",

    /**
     * value: "pkcs12"
     * @const
     */
    "pkcs12": "pkcs12"
};



export default ServiceAccountKey;

