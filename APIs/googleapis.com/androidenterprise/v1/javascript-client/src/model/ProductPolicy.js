/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoInstallPolicy from './AutoInstallPolicy';
import EnterpriseAuthenticationAppLinkConfig from './EnterpriseAuthenticationAppLinkConfig';
import ManagedConfiguration from './ManagedConfiguration';

/**
 * The ProductPolicy model module.
 * @module model/ProductPolicy
 * @version v1
 */
class ProductPolicy {
    /**
     * Constructs a new <code>ProductPolicy</code>.
     * The policy for a product.
     * @alias module:model/ProductPolicy
     */
    constructor() { 
        
        ProductPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductPolicy} obj Optional instance to populate.
     * @return {module:model/ProductPolicy} The populated <code>ProductPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductPolicy();

            if (data.hasOwnProperty('autoInstallPolicy')) {
                obj['autoInstallPolicy'] = AutoInstallPolicy.constructFromObject(data['autoInstallPolicy']);
            }
            if (data.hasOwnProperty('autoUpdateMode')) {
                obj['autoUpdateMode'] = ApiClient.convertToType(data['autoUpdateMode'], 'String');
            }
            if (data.hasOwnProperty('enterpriseAuthenticationAppLinkConfigs')) {
                obj['enterpriseAuthenticationAppLinkConfigs'] = ApiClient.convertToType(data['enterpriseAuthenticationAppLinkConfigs'], [EnterpriseAuthenticationAppLinkConfig]);
            }
            if (data.hasOwnProperty('managedConfiguration')) {
                obj['managedConfiguration'] = ManagedConfiguration.constructFromObject(data['managedConfiguration']);
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('trackIds')) {
                obj['trackIds'] = ApiClient.convertToType(data['trackIds'], ['String']);
            }
            if (data.hasOwnProperty('tracks')) {
                obj['tracks'] = ApiClient.convertToType(data['tracks'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductPolicy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `autoInstallPolicy`
        if (data['autoInstallPolicy']) { // data not null
          AutoInstallPolicy.validateJSON(data['autoInstallPolicy']);
        }
        // ensure the json data is a string
        if (data['autoUpdateMode'] && !(typeof data['autoUpdateMode'] === 'string' || data['autoUpdateMode'] instanceof String)) {
            throw new Error("Expected the field `autoUpdateMode` to be a primitive type in the JSON string but got " + data['autoUpdateMode']);
        }
        if (data['enterpriseAuthenticationAppLinkConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['enterpriseAuthenticationAppLinkConfigs'])) {
                throw new Error("Expected the field `enterpriseAuthenticationAppLinkConfigs` to be an array in the JSON data but got " + data['enterpriseAuthenticationAppLinkConfigs']);
            }
            // validate the optional field `enterpriseAuthenticationAppLinkConfigs` (array)
            for (const item of data['enterpriseAuthenticationAppLinkConfigs']) {
                EnterpriseAuthenticationAppLinkConfig.validateJSON(item);
            };
        }
        // validate the optional field `managedConfiguration`
        if (data['managedConfiguration']) { // data not null
          ManagedConfiguration.validateJSON(data['managedConfiguration']);
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['trackIds'])) {
            throw new Error("Expected the field `trackIds` to be an array in the JSON data but got " + data['trackIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tracks'])) {
            throw new Error("Expected the field `tracks` to be an array in the JSON data but got " + data['tracks']);
        }

        return true;
    }


}



/**
 * @member {module:model/AutoInstallPolicy} autoInstallPolicy
 */
ProductPolicy.prototype['autoInstallPolicy'] = undefined;

/**
 * The auto-update mode for the product. When autoUpdateMode is used, it always takes precedence over the user's choice. So when a user makes changes to the device settings manually, these changes are ignored.
 * @member {module:model/ProductPolicy.AutoUpdateModeEnum} autoUpdateMode
 */
ProductPolicy.prototype['autoUpdateMode'] = undefined;

/**
 * An authentication URL configuration for the authenticator app of an identity provider. This helps to launch the identity provider's authenticator app during the authentication happening in a private app using Android WebView. Authenticator app should already be the default handler for the authentication url on the device.
 * @member {Array.<module:model/EnterpriseAuthenticationAppLinkConfig>} enterpriseAuthenticationAppLinkConfigs
 */
ProductPolicy.prototype['enterpriseAuthenticationAppLinkConfigs'] = undefined;

/**
 * @member {module:model/ManagedConfiguration} managedConfiguration
 */
ProductPolicy.prototype['managedConfiguration'] = undefined;

/**
 * The ID of the product. For example, \"app:com.google.android.gm\".
 * @member {String} productId
 */
ProductPolicy.prototype['productId'] = undefined;

/**
 * Grants the device visibility to the specified product release track(s), identified by trackIds. The list of release tracks of a product can be obtained by calling Products.Get.
 * @member {Array.<String>} trackIds
 */
ProductPolicy.prototype['trackIds'] = undefined;

/**
 * Deprecated. Use trackIds instead.
 * @member {Array.<module:model/ProductPolicy.TracksEnum>} tracks
 */
ProductPolicy.prototype['tracks'] = undefined;





/**
 * Allowed values for the <code>autoUpdateMode</code> property.
 * @enum {String}
 * @readonly
 */
ProductPolicy['AutoUpdateModeEnum'] = {

    /**
     * value: "autoUpdateModeUnspecified"
     * @const
     */
    "autoUpdateModeUnspecified": "autoUpdateModeUnspecified",

    /**
     * value: "autoUpdateDefault"
     * @const
     */
    "autoUpdateDefault": "autoUpdateDefault",

    /**
     * value: "autoUpdatePostponed"
     * @const
     */
    "autoUpdatePostponed": "autoUpdatePostponed",

    /**
     * value: "autoUpdateHighPriority"
     * @const
     */
    "autoUpdateHighPriority": "autoUpdateHighPriority"
};


/**
 * Allowed values for the <code>tracks</code> property.
 * @enum {String}
 * @readonly
 */
ProductPolicy['TracksEnum'] = {

    /**
     * value: "appTrackUnspecified"
     * @const
     */
    "appTrackUnspecified": "appTrackUnspecified",

    /**
     * value: "production"
     * @const
     */
    "production": "production",

    /**
     * value: "beta"
     * @const
     */
    "beta": "beta",

    /**
     * value: "alpha"
     * @const
     */
    "alpha": "alpha"
};



export default ProductPolicy;

