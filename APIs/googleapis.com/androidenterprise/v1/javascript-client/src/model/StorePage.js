/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocalizedText from './LocalizedText';

/**
 * The StorePage model module.
 * @module model/StorePage
 * @version v1
 */
class StorePage {
    /**
     * Constructs a new <code>StorePage</code>.
     * Definition of a managed Google Play store page, made of a localized name and links to other pages. A page also contains clusters defined as a subcollection.
     * @alias module:model/StorePage
     */
    constructor() { 
        
        StorePage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StorePage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StorePage} obj Optional instance to populate.
     * @return {module:model/StorePage} The populated <code>StorePage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorePage();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], [LocalizedText]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StorePage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StorePage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['link'])) {
            throw new Error("Expected the field `link` to be an array in the JSON data but got " + data['link']);
        }
        if (data['name']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['name'])) {
                throw new Error("Expected the field `name` to be an array in the JSON data but got " + data['name']);
            }
            // validate the optional field `name` (array)
            for (const item of data['name']) {
                LocalizedText.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Unique ID of this page. Assigned by the server. Immutable once assigned.
 * @member {String} id
 */
StorePage.prototype['id'] = undefined;

/**
 * Ordered list of pages a user should be able to reach from this page. The list can't include this page. It is recommended that the basic pages are created first, before adding the links between pages. The API doesn't verify that the pages exist or the pages are reachable.
 * @member {Array.<String>} link
 */
StorePage.prototype['link'] = undefined;

/**
 * Ordered list of localized strings giving the name of this page. The text displayed is the one that best matches the user locale, or the first entry if there is no good match. There needs to be at least one entry.
 * @member {Array.<module:model/LocalizedText>} name
 */
StorePage.prototype['name'] = undefined;






export default StorePage;

