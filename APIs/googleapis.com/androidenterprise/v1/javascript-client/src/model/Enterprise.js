/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Administrator from './Administrator';
import GoogleAuthenticationSettings from './GoogleAuthenticationSettings';

/**
 * The Enterprise model module.
 * @module model/Enterprise
 * @version v1
 */
class Enterprise {
    /**
     * Constructs a new <code>Enterprise</code>.
     * An Enterprises resource represents the binding between an EMM and a specific organization. That binding can be instantiated in one of two different ways using this API as follows: - For Google managed domain customers, the process involves using Enterprises.enroll and Enterprises.setAccount (in conjunction with artifacts obtained from the Admin console and the Google API Console) and submitted to the EMM through a more-or-less manual process. - For managed Google Play Accounts customers, the process involves using Enterprises.generateSignupUrl and Enterprises.completeSignup in conjunction with the managed Google Play sign-up UI (Google-provided mechanism) to create the binding without manual steps. As an EMM, you can support either or both approaches in your EMM console. See Create an Enterprise for details.
     * @alias module:model/Enterprise
     */
    constructor() { 
        
        Enterprise.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Enterprise</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Enterprise} obj Optional instance to populate.
     * @return {module:model/Enterprise} The populated <code>Enterprise</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Enterprise();

            if (data.hasOwnProperty('administrator')) {
                obj['administrator'] = ApiClient.convertToType(data['administrator'], [Administrator]);
            }
            if (data.hasOwnProperty('googleAuthenticationSettings')) {
                obj['googleAuthenticationSettings'] = GoogleAuthenticationSettings.constructFromObject(data['googleAuthenticationSettings']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('primaryDomain')) {
                obj['primaryDomain'] = ApiClient.convertToType(data['primaryDomain'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Enterprise</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Enterprise</code>.
     */
    static validateJSON(data) {
        if (data['administrator']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['administrator'])) {
                throw new Error("Expected the field `administrator` to be an array in the JSON data but got " + data['administrator']);
            }
            // validate the optional field `administrator` (array)
            for (const item of data['administrator']) {
                Administrator.validateJSON(item);
            };
        }
        // validate the optional field `googleAuthenticationSettings`
        if (data['googleAuthenticationSettings']) { // data not null
          GoogleAuthenticationSettings.validateJSON(data['googleAuthenticationSettings']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['primaryDomain'] && !(typeof data['primaryDomain'] === 'string' || data['primaryDomain'] instanceof String)) {
            throw new Error("Expected the field `primaryDomain` to be a primitive type in the JSON string but got " + data['primaryDomain']);
        }

        return true;
    }


}



/**
 * Admins of the enterprise. This is only supported for enterprises created via the EMM-initiated flow.
 * @member {Array.<module:model/Administrator>} administrator
 */
Enterprise.prototype['administrator'] = undefined;

/**
 * @member {module:model/GoogleAuthenticationSettings} googleAuthenticationSettings
 */
Enterprise.prototype['googleAuthenticationSettings'] = undefined;

/**
 * The unique ID for the enterprise.
 * @member {String} id
 */
Enterprise.prototype['id'] = undefined;

/**
 * The name of the enterprise, for example, \"Example, Inc\".
 * @member {String} name
 */
Enterprise.prototype['name'] = undefined;

/**
 * The enterprise's primary domain, such as \"example.com\".
 * @member {String} primaryDomain
 */
Enterprise.prototype['primaryDomain'] = undefined;






export default Enterprise;

