/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppRestrictionsSchemaRestrictionRestrictionValue from './AppRestrictionsSchemaRestrictionRestrictionValue';

/**
 * The AppRestrictionsSchemaRestriction model module.
 * @module model/AppRestrictionsSchemaRestriction
 * @version v1
 */
class AppRestrictionsSchemaRestriction {
    /**
     * Constructs a new <code>AppRestrictionsSchemaRestriction</code>.
     * A restriction in the App Restriction Schema represents a piece of configuration that may be pre-applied.
     * @alias module:model/AppRestrictionsSchemaRestriction
     */
    constructor() { 
        
        AppRestrictionsSchemaRestriction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppRestrictionsSchemaRestriction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppRestrictionsSchemaRestriction} obj Optional instance to populate.
     * @return {module:model/AppRestrictionsSchemaRestriction} The populated <code>AppRestrictionsSchemaRestriction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppRestrictionsSchemaRestriction();

            if (data.hasOwnProperty('defaultValue')) {
                obj['defaultValue'] = AppRestrictionsSchemaRestrictionRestrictionValue.constructFromObject(data['defaultValue']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('entry')) {
                obj['entry'] = ApiClient.convertToType(data['entry'], ['String']);
            }
            if (data.hasOwnProperty('entryValue')) {
                obj['entryValue'] = ApiClient.convertToType(data['entryValue'], ['String']);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('nestedRestriction')) {
                obj['nestedRestriction'] = ApiClient.convertToType(data['nestedRestriction'], [AppRestrictionsSchemaRestriction]);
            }
            if (data.hasOwnProperty('restrictionType')) {
                obj['restrictionType'] = ApiClient.convertToType(data['restrictionType'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppRestrictionsSchemaRestriction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppRestrictionsSchemaRestriction</code>.
     */
    static validateJSON(data) {
        // validate the optional field `defaultValue`
        if (data['defaultValue']) { // data not null
          AppRestrictionsSchemaRestrictionRestrictionValue.validateJSON(data['defaultValue']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['entry'])) {
            throw new Error("Expected the field `entry` to be an array in the JSON data but got " + data['entry']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['entryValue'])) {
            throw new Error("Expected the field `entryValue` to be an array in the JSON data but got " + data['entryValue']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        if (data['nestedRestriction']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nestedRestriction'])) {
                throw new Error("Expected the field `nestedRestriction` to be an array in the JSON data but got " + data['nestedRestriction']);
            }
            // validate the optional field `nestedRestriction` (array)
            for (const item of data['nestedRestriction']) {
                AppRestrictionsSchemaRestriction.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['restrictionType'] && !(typeof data['restrictionType'] === 'string' || data['restrictionType'] instanceof String)) {
            throw new Error("Expected the field `restrictionType` to be a primitive type in the JSON string but got " + data['restrictionType']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppRestrictionsSchemaRestrictionRestrictionValue} defaultValue
 */
AppRestrictionsSchemaRestriction.prototype['defaultValue'] = undefined;

/**
 * A longer description of the restriction, giving more detail of what it affects.
 * @member {String} description
 */
AppRestrictionsSchemaRestriction.prototype['description'] = undefined;

/**
 * For choice or multiselect restrictions, the list of possible entries' human-readable names.
 * @member {Array.<String>} entry
 */
AppRestrictionsSchemaRestriction.prototype['entry'] = undefined;

/**
 * For choice or multiselect restrictions, the list of possible entries' machine-readable values. These values should be used in the configuration, either as a single string value for a choice restriction or in a stringArray for a multiselect restriction.
 * @member {Array.<String>} entryValue
 */
AppRestrictionsSchemaRestriction.prototype['entryValue'] = undefined;

/**
 * The unique key that the product uses to identify the restriction, e.g. \"com.google.android.gm.fieldname\".
 * @member {String} key
 */
AppRestrictionsSchemaRestriction.prototype['key'] = undefined;

/**
 * For bundle or bundleArray restrictions, the list of nested restrictions. A bundle restriction is always nested within a bundleArray restriction, and a bundleArray restriction is at most two levels deep.
 * @member {Array.<module:model/AppRestrictionsSchemaRestriction>} nestedRestriction
 */
AppRestrictionsSchemaRestriction.prototype['nestedRestriction'] = undefined;

/**
 * The type of the restriction.
 * @member {module:model/AppRestrictionsSchemaRestriction.RestrictionTypeEnum} restrictionType
 */
AppRestrictionsSchemaRestriction.prototype['restrictionType'] = undefined;

/**
 * The name of the restriction.
 * @member {String} title
 */
AppRestrictionsSchemaRestriction.prototype['title'] = undefined;





/**
 * Allowed values for the <code>restrictionType</code> property.
 * @enum {String}
 * @readonly
 */
AppRestrictionsSchemaRestriction['RestrictionTypeEnum'] = {

    /**
     * value: "bool"
     * @const
     */
    "bool": "bool",

    /**
     * value: "string"
     * @const
     */
    "string": "string",

    /**
     * value: "integer"
     * @const
     */
    "integer": "integer",

    /**
     * value: "choice"
     * @const
     */
    "choice": "choice",

    /**
     * value: "multiselect"
     * @const
     */
    "multiselect": "multiselect",

    /**
     * value: "hidden"
     * @const
     */
    "hidden": "hidden",

    /**
     * value: "bundle"
     * @const
     */
    "bundle": "bundle",

    /**
     * value: "bundleArray"
     * @const
     */
    "bundleArray": "bundleArray"
};



export default AppRestrictionsSchemaRestriction;

