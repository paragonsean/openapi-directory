/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductPermission from './ProductPermission';

/**
 * The ProductPermissions model module.
 * @module model/ProductPermissions
 * @version v1
 */
class ProductPermissions {
    /**
     * Constructs a new <code>ProductPermissions</code>.
     * Information about the permissions required by a specific app and whether they have been accepted by the enterprise.
     * @alias module:model/ProductPermissions
     */
    constructor() { 
        
        ProductPermissions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductPermissions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductPermissions} obj Optional instance to populate.
     * @return {module:model/ProductPermissions} The populated <code>ProductPermissions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductPermissions();

            if (data.hasOwnProperty('permission')) {
                obj['permission'] = ApiClient.convertToType(data['permission'], [ProductPermission]);
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductPermissions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductPermissions</code>.
     */
    static validateJSON(data) {
        if (data['permission']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['permission'])) {
                throw new Error("Expected the field `permission` to be an array in the JSON data but got " + data['permission']);
            }
            // validate the optional field `permission` (array)
            for (const item of data['permission']) {
                ProductPermission.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['productId'] && !(typeof data['productId'] === 'string' || data['productId'] instanceof String)) {
            throw new Error("Expected the field `productId` to be a primitive type in the JSON string but got " + data['productId']);
        }

        return true;
    }


}



/**
 * The permissions required by the app.
 * @member {Array.<module:model/ProductPermission>} permission
 */
ProductPermissions.prototype['permission'] = undefined;

/**
 * The ID of the app that the permissions relate to, e.g. \"app:com.google.android.gm\".
 * @member {String} productId
 */
ProductPermissions.prototype['productId'] = undefined;






export default ProductPermissions;

