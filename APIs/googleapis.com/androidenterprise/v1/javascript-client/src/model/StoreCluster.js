/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocalizedText from './LocalizedText';

/**
 * The StoreCluster model module.
 * @module model/StoreCluster
 * @version v1
 */
class StoreCluster {
    /**
     * Constructs a new <code>StoreCluster</code>.
     * Definition of a managed Google Play store cluster, a list of products displayed as part of a store page.
     * @alias module:model/StoreCluster
     */
    constructor() { 
        
        StoreCluster.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StoreCluster</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoreCluster} obj Optional instance to populate.
     * @return {module:model/StoreCluster} The populated <code>StoreCluster</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoreCluster();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], [LocalizedText]);
            }
            if (data.hasOwnProperty('orderInPage')) {
                obj['orderInPage'] = ApiClient.convertToType(data['orderInPage'], 'String');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StoreCluster</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StoreCluster</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['name']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['name'])) {
                throw new Error("Expected the field `name` to be an array in the JSON data but got " + data['name']);
            }
            // validate the optional field `name` (array)
            for (const item of data['name']) {
                LocalizedText.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['orderInPage'] && !(typeof data['orderInPage'] === 'string' || data['orderInPage'] instanceof String)) {
            throw new Error("Expected the field `orderInPage` to be a primitive type in the JSON string but got " + data['orderInPage']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['productId'])) {
            throw new Error("Expected the field `productId` to be an array in the JSON data but got " + data['productId']);
        }

        return true;
    }


}



/**
 * Unique ID of this cluster. Assigned by the server. Immutable once assigned.
 * @member {String} id
 */
StoreCluster.prototype['id'] = undefined;

/**
 * Ordered list of localized strings giving the name of this page. The text displayed is the one that best matches the user locale, or the first entry if there is no good match. There needs to be at least one entry.
 * @member {Array.<module:model/LocalizedText>} name
 */
StoreCluster.prototype['name'] = undefined;

/**
 * String (US-ASCII only) used to determine order of this cluster within the parent page's elements. Page elements are sorted in lexicographic order of this field. Duplicated values are allowed, but ordering between elements with duplicate order is undefined. The value of this field is never visible to a user, it is used solely for the purpose of defining an ordering. Maximum length is 256 characters.
 * @member {String} orderInPage
 */
StoreCluster.prototype['orderInPage'] = undefined;

/**
 * List of products in the order they are displayed in the cluster. There should not be duplicates within a cluster.
 * @member {Array.<String>} productId
 */
StoreCluster.prototype['productId'] = undefined;






export default StoreCluster;

