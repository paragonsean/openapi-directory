/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdministratorWebTokenSpecManagedConfigurations from './AdministratorWebTokenSpecManagedConfigurations';
import AdministratorWebTokenSpecPlaySearch from './AdministratorWebTokenSpecPlaySearch';
import AdministratorWebTokenSpecPrivateApps from './AdministratorWebTokenSpecPrivateApps';
import AdministratorWebTokenSpecStoreBuilder from './AdministratorWebTokenSpecStoreBuilder';
import AdministratorWebTokenSpecWebApps from './AdministratorWebTokenSpecWebApps';
import AdministratorWebTokenSpecZeroTouch from './AdministratorWebTokenSpecZeroTouch';

/**
 * The AdministratorWebTokenSpec model module.
 * @module model/AdministratorWebTokenSpec
 * @version v1
 */
class AdministratorWebTokenSpec {
    /**
     * Constructs a new <code>AdministratorWebTokenSpec</code>.
     * Specification for a token used to generate iframes. The token specifies what data the admin is allowed to modify and the URI the iframe is allowed to communiate with.
     * @alias module:model/AdministratorWebTokenSpec
     */
    constructor() { 
        
        AdministratorWebTokenSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdministratorWebTokenSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdministratorWebTokenSpec} obj Optional instance to populate.
     * @return {module:model/AdministratorWebTokenSpec} The populated <code>AdministratorWebTokenSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdministratorWebTokenSpec();

            if (data.hasOwnProperty('managedConfigurations')) {
                obj['managedConfigurations'] = AdministratorWebTokenSpecManagedConfigurations.constructFromObject(data['managedConfigurations']);
            }
            if (data.hasOwnProperty('parent')) {
                obj['parent'] = ApiClient.convertToType(data['parent'], 'String');
            }
            if (data.hasOwnProperty('permission')) {
                obj['permission'] = ApiClient.convertToType(data['permission'], ['String']);
            }
            if (data.hasOwnProperty('playSearch')) {
                obj['playSearch'] = AdministratorWebTokenSpecPlaySearch.constructFromObject(data['playSearch']);
            }
            if (data.hasOwnProperty('privateApps')) {
                obj['privateApps'] = AdministratorWebTokenSpecPrivateApps.constructFromObject(data['privateApps']);
            }
            if (data.hasOwnProperty('storeBuilder')) {
                obj['storeBuilder'] = AdministratorWebTokenSpecStoreBuilder.constructFromObject(data['storeBuilder']);
            }
            if (data.hasOwnProperty('webApps')) {
                obj['webApps'] = AdministratorWebTokenSpecWebApps.constructFromObject(data['webApps']);
            }
            if (data.hasOwnProperty('zeroTouch')) {
                obj['zeroTouch'] = AdministratorWebTokenSpecZeroTouch.constructFromObject(data['zeroTouch']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdministratorWebTokenSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdministratorWebTokenSpec</code>.
     */
    static validateJSON(data) {
        // validate the optional field `managedConfigurations`
        if (data['managedConfigurations']) { // data not null
          AdministratorWebTokenSpecManagedConfigurations.validateJSON(data['managedConfigurations']);
        }
        // ensure the json data is a string
        if (data['parent'] && !(typeof data['parent'] === 'string' || data['parent'] instanceof String)) {
            throw new Error("Expected the field `parent` to be a primitive type in the JSON string but got " + data['parent']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permission'])) {
            throw new Error("Expected the field `permission` to be an array in the JSON data but got " + data['permission']);
        }
        // validate the optional field `playSearch`
        if (data['playSearch']) { // data not null
          AdministratorWebTokenSpecPlaySearch.validateJSON(data['playSearch']);
        }
        // validate the optional field `privateApps`
        if (data['privateApps']) { // data not null
          AdministratorWebTokenSpecPrivateApps.validateJSON(data['privateApps']);
        }
        // validate the optional field `storeBuilder`
        if (data['storeBuilder']) { // data not null
          AdministratorWebTokenSpecStoreBuilder.validateJSON(data['storeBuilder']);
        }
        // validate the optional field `webApps`
        if (data['webApps']) { // data not null
          AdministratorWebTokenSpecWebApps.validateJSON(data['webApps']);
        }
        // validate the optional field `zeroTouch`
        if (data['zeroTouch']) { // data not null
          AdministratorWebTokenSpecZeroTouch.validateJSON(data['zeroTouch']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdministratorWebTokenSpecManagedConfigurations} managedConfigurations
 */
AdministratorWebTokenSpec.prototype['managedConfigurations'] = undefined;

/**
 * The URI of the parent frame hosting the iframe. To prevent XSS, the iframe may not be hosted at other URIs. This URI must be https. Use whitespaces to separate multiple parent URIs.
 * @member {String} parent
 */
AdministratorWebTokenSpec.prototype['parent'] = undefined;

/**
 * Deprecated. Use PlaySearch.approveApps.
 * @member {Array.<module:model/AdministratorWebTokenSpec.PermissionEnum>} permission
 */
AdministratorWebTokenSpec.prototype['permission'] = undefined;

/**
 * @member {module:model/AdministratorWebTokenSpecPlaySearch} playSearch
 */
AdministratorWebTokenSpec.prototype['playSearch'] = undefined;

/**
 * @member {module:model/AdministratorWebTokenSpecPrivateApps} privateApps
 */
AdministratorWebTokenSpec.prototype['privateApps'] = undefined;

/**
 * @member {module:model/AdministratorWebTokenSpecStoreBuilder} storeBuilder
 */
AdministratorWebTokenSpec.prototype['storeBuilder'] = undefined;

/**
 * @member {module:model/AdministratorWebTokenSpecWebApps} webApps
 */
AdministratorWebTokenSpec.prototype['webApps'] = undefined;

/**
 * @member {module:model/AdministratorWebTokenSpecZeroTouch} zeroTouch
 */
AdministratorWebTokenSpec.prototype['zeroTouch'] = undefined;





/**
 * Allowed values for the <code>permission</code> property.
 * @enum {String}
 * @readonly
 */
AdministratorWebTokenSpec['PermissionEnum'] = {

    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown",

    /**
     * value: "approveApps"
     * @const
     */
    "approveApps": "approveApps",

    /**
     * value: "manageMcm"
     * @const
     */
    "manageMcm": "manageMcm"
};



export default AdministratorWebTokenSpec;

