/**
 * Google Play EMM API
 * Manages the deployment of apps to Android Enterprise devices.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Administrator from './model/Administrator';
import AdministratorWebToken from './model/AdministratorWebToken';
import AdministratorWebTokenSpec from './model/AdministratorWebTokenSpec';
import AdministratorWebTokenSpecManagedConfigurations from './model/AdministratorWebTokenSpecManagedConfigurations';
import AdministratorWebTokenSpecPlaySearch from './model/AdministratorWebTokenSpecPlaySearch';
import AdministratorWebTokenSpecPrivateApps from './model/AdministratorWebTokenSpecPrivateApps';
import AdministratorWebTokenSpecStoreBuilder from './model/AdministratorWebTokenSpecStoreBuilder';
import AdministratorWebTokenSpecWebApps from './model/AdministratorWebTokenSpecWebApps';
import AdministratorWebTokenSpecZeroTouch from './model/AdministratorWebTokenSpecZeroTouch';
import AppRestrictionsSchema from './model/AppRestrictionsSchema';
import AppRestrictionsSchemaChangeEvent from './model/AppRestrictionsSchemaChangeEvent';
import AppRestrictionsSchemaRestriction from './model/AppRestrictionsSchemaRestriction';
import AppRestrictionsSchemaRestrictionRestrictionValue from './model/AppRestrictionsSchemaRestrictionRestrictionValue';
import AppState from './model/AppState';
import AppUpdateEvent from './model/AppUpdateEvent';
import AppVersion from './model/AppVersion';
import ApprovalUrlInfo from './model/ApprovalUrlInfo';
import AuthenticationToken from './model/AuthenticationToken';
import AutoInstallConstraint from './model/AutoInstallConstraint';
import AutoInstallPolicy from './model/AutoInstallPolicy';
import ConfigurationVariables from './model/ConfigurationVariables';
import CreateEnrollmentTokenResponse from './model/CreateEnrollmentTokenResponse';
import Device from './model/Device';
import DeviceReport from './model/DeviceReport';
import DeviceReportUpdateEvent from './model/DeviceReportUpdateEvent';
import DeviceState from './model/DeviceState';
import DevicesListResponse from './model/DevicesListResponse';
import Enterprise from './model/Enterprise';
import EnterpriseAccount from './model/EnterpriseAccount';
import EnterpriseAuthenticationAppLinkConfig from './model/EnterpriseAuthenticationAppLinkConfig';
import EnterprisesListResponse from './model/EnterprisesListResponse';
import EnterprisesSendTestPushNotificationResponse from './model/EnterprisesSendTestPushNotificationResponse';
import Entitlement from './model/Entitlement';
import EntitlementsListResponse from './model/EntitlementsListResponse';
import GoogleAuthenticationSettings from './model/GoogleAuthenticationSettings';
import GroupLicense from './model/GroupLicense';
import GroupLicenseUsersListResponse from './model/GroupLicenseUsersListResponse';
import GroupLicensesListResponse from './model/GroupLicensesListResponse';
import Install from './model/Install';
import InstallFailureEvent from './model/InstallFailureEvent';
import InstallsListResponse from './model/InstallsListResponse';
import KeyedAppState from './model/KeyedAppState';
import LocalizedText from './model/LocalizedText';
import MaintenanceWindow from './model/MaintenanceWindow';
import ManagedConfiguration from './model/ManagedConfiguration';
import ManagedConfigurationsForDeviceListResponse from './model/ManagedConfigurationsForDeviceListResponse';
import ManagedConfigurationsForUserListResponse from './model/ManagedConfigurationsForUserListResponse';
import ManagedConfigurationsSettings from './model/ManagedConfigurationsSettings';
import ManagedConfigurationsSettingsListResponse from './model/ManagedConfigurationsSettingsListResponse';
import ManagedProperty from './model/ManagedProperty';
import ManagedPropertyBundle from './model/ManagedPropertyBundle';
import NewDeviceEvent from './model/NewDeviceEvent';
import NewPermissionsEvent from './model/NewPermissionsEvent';
import Notification from './model/Notification';
import NotificationSet from './model/NotificationSet';
import PageInfo from './model/PageInfo';
import Permission from './model/Permission';
import Policy from './model/Policy';
import Product from './model/Product';
import ProductApprovalEvent from './model/ProductApprovalEvent';
import ProductAvailabilityChangeEvent from './model/ProductAvailabilityChangeEvent';
import ProductPermission from './model/ProductPermission';
import ProductPermissions from './model/ProductPermissions';
import ProductPolicy from './model/ProductPolicy';
import ProductSet from './model/ProductSet';
import ProductSigningCertificate from './model/ProductSigningCertificate';
import ProductVisibility from './model/ProductVisibility';
import ProductsApproveRequest from './model/ProductsApproveRequest';
import ProductsGenerateApprovalUrlResponse from './model/ProductsGenerateApprovalUrlResponse';
import ProductsListResponse from './model/ProductsListResponse';
import ServiceAccount from './model/ServiceAccount';
import ServiceAccountKey from './model/ServiceAccountKey';
import ServiceAccountKeysListResponse from './model/ServiceAccountKeysListResponse';
import SignupInfo from './model/SignupInfo';
import StoreCluster from './model/StoreCluster';
import StoreLayout from './model/StoreLayout';
import StoreLayoutClustersListResponse from './model/StoreLayoutClustersListResponse';
import StoreLayoutPagesListResponse from './model/StoreLayoutPagesListResponse';
import StorePage from './model/StorePage';
import TokenPagination from './model/TokenPagination';
import TrackInfo from './model/TrackInfo';
import User from './model/User';
import UsersListResponse from './model/UsersListResponse';
import VariableSet from './model/VariableSet';
import WebApp from './model/WebApp';
import WebAppIcon from './model/WebAppIcon';
import WebAppsListResponse from './model/WebAppsListResponse';
import DevicesApi from './api/DevicesApi';
import EnterprisesApi from './api/EnterprisesApi';
import EntitlementsApi from './api/EntitlementsApi';
import GrouplicensesApi from './api/GrouplicensesApi';
import GrouplicenseusersApi from './api/GrouplicenseusersApi';
import InstallsApi from './api/InstallsApi';
import ManagedconfigurationsfordeviceApi from './api/ManagedconfigurationsfordeviceApi';
import ManagedconfigurationsforuserApi from './api/ManagedconfigurationsforuserApi';
import ManagedconfigurationssettingsApi from './api/ManagedconfigurationssettingsApi';
import PermissionsApi from './api/PermissionsApi';
import ProductsApi from './api/ProductsApi';
import ServiceaccountkeysApi from './api/ServiceaccountkeysApi';
import StorelayoutclustersApi from './api/StorelayoutclustersApi';
import StorelayoutpagesApi from './api/StorelayoutpagesApi';
import UsersApi from './api/UsersApi';
import WebappsApi from './api/WebappsApi';


/**
* Manages the deployment of apps to Android Enterprise devices..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GooglePlayEmmApi = require('index'); // See note below*.
* var xxxSvc = new GooglePlayEmmApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GooglePlayEmmApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GooglePlayEmmApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GooglePlayEmmApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Administrator model constructor.
     * @property {module:model/Administrator}
     */
    Administrator,

    /**
     * The AdministratorWebToken model constructor.
     * @property {module:model/AdministratorWebToken}
     */
    AdministratorWebToken,

    /**
     * The AdministratorWebTokenSpec model constructor.
     * @property {module:model/AdministratorWebTokenSpec}
     */
    AdministratorWebTokenSpec,

    /**
     * The AdministratorWebTokenSpecManagedConfigurations model constructor.
     * @property {module:model/AdministratorWebTokenSpecManagedConfigurations}
     */
    AdministratorWebTokenSpecManagedConfigurations,

    /**
     * The AdministratorWebTokenSpecPlaySearch model constructor.
     * @property {module:model/AdministratorWebTokenSpecPlaySearch}
     */
    AdministratorWebTokenSpecPlaySearch,

    /**
     * The AdministratorWebTokenSpecPrivateApps model constructor.
     * @property {module:model/AdministratorWebTokenSpecPrivateApps}
     */
    AdministratorWebTokenSpecPrivateApps,

    /**
     * The AdministratorWebTokenSpecStoreBuilder model constructor.
     * @property {module:model/AdministratorWebTokenSpecStoreBuilder}
     */
    AdministratorWebTokenSpecStoreBuilder,

    /**
     * The AdministratorWebTokenSpecWebApps model constructor.
     * @property {module:model/AdministratorWebTokenSpecWebApps}
     */
    AdministratorWebTokenSpecWebApps,

    /**
     * The AdministratorWebTokenSpecZeroTouch model constructor.
     * @property {module:model/AdministratorWebTokenSpecZeroTouch}
     */
    AdministratorWebTokenSpecZeroTouch,

    /**
     * The AppRestrictionsSchema model constructor.
     * @property {module:model/AppRestrictionsSchema}
     */
    AppRestrictionsSchema,

    /**
     * The AppRestrictionsSchemaChangeEvent model constructor.
     * @property {module:model/AppRestrictionsSchemaChangeEvent}
     */
    AppRestrictionsSchemaChangeEvent,

    /**
     * The AppRestrictionsSchemaRestriction model constructor.
     * @property {module:model/AppRestrictionsSchemaRestriction}
     */
    AppRestrictionsSchemaRestriction,

    /**
     * The AppRestrictionsSchemaRestrictionRestrictionValue model constructor.
     * @property {module:model/AppRestrictionsSchemaRestrictionRestrictionValue}
     */
    AppRestrictionsSchemaRestrictionRestrictionValue,

    /**
     * The AppState model constructor.
     * @property {module:model/AppState}
     */
    AppState,

    /**
     * The AppUpdateEvent model constructor.
     * @property {module:model/AppUpdateEvent}
     */
    AppUpdateEvent,

    /**
     * The AppVersion model constructor.
     * @property {module:model/AppVersion}
     */
    AppVersion,

    /**
     * The ApprovalUrlInfo model constructor.
     * @property {module:model/ApprovalUrlInfo}
     */
    ApprovalUrlInfo,

    /**
     * The AuthenticationToken model constructor.
     * @property {module:model/AuthenticationToken}
     */
    AuthenticationToken,

    /**
     * The AutoInstallConstraint model constructor.
     * @property {module:model/AutoInstallConstraint}
     */
    AutoInstallConstraint,

    /**
     * The AutoInstallPolicy model constructor.
     * @property {module:model/AutoInstallPolicy}
     */
    AutoInstallPolicy,

    /**
     * The ConfigurationVariables model constructor.
     * @property {module:model/ConfigurationVariables}
     */
    ConfigurationVariables,

    /**
     * The CreateEnrollmentTokenResponse model constructor.
     * @property {module:model/CreateEnrollmentTokenResponse}
     */
    CreateEnrollmentTokenResponse,

    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device,

    /**
     * The DeviceReport model constructor.
     * @property {module:model/DeviceReport}
     */
    DeviceReport,

    /**
     * The DeviceReportUpdateEvent model constructor.
     * @property {module:model/DeviceReportUpdateEvent}
     */
    DeviceReportUpdateEvent,

    /**
     * The DeviceState model constructor.
     * @property {module:model/DeviceState}
     */
    DeviceState,

    /**
     * The DevicesListResponse model constructor.
     * @property {module:model/DevicesListResponse}
     */
    DevicesListResponse,

    /**
     * The Enterprise model constructor.
     * @property {module:model/Enterprise}
     */
    Enterprise,

    /**
     * The EnterpriseAccount model constructor.
     * @property {module:model/EnterpriseAccount}
     */
    EnterpriseAccount,

    /**
     * The EnterpriseAuthenticationAppLinkConfig model constructor.
     * @property {module:model/EnterpriseAuthenticationAppLinkConfig}
     */
    EnterpriseAuthenticationAppLinkConfig,

    /**
     * The EnterprisesListResponse model constructor.
     * @property {module:model/EnterprisesListResponse}
     */
    EnterprisesListResponse,

    /**
     * The EnterprisesSendTestPushNotificationResponse model constructor.
     * @property {module:model/EnterprisesSendTestPushNotificationResponse}
     */
    EnterprisesSendTestPushNotificationResponse,

    /**
     * The Entitlement model constructor.
     * @property {module:model/Entitlement}
     */
    Entitlement,

    /**
     * The EntitlementsListResponse model constructor.
     * @property {module:model/EntitlementsListResponse}
     */
    EntitlementsListResponse,

    /**
     * The GoogleAuthenticationSettings model constructor.
     * @property {module:model/GoogleAuthenticationSettings}
     */
    GoogleAuthenticationSettings,

    /**
     * The GroupLicense model constructor.
     * @property {module:model/GroupLicense}
     */
    GroupLicense,

    /**
     * The GroupLicenseUsersListResponse model constructor.
     * @property {module:model/GroupLicenseUsersListResponse}
     */
    GroupLicenseUsersListResponse,

    /**
     * The GroupLicensesListResponse model constructor.
     * @property {module:model/GroupLicensesListResponse}
     */
    GroupLicensesListResponse,

    /**
     * The Install model constructor.
     * @property {module:model/Install}
     */
    Install,

    /**
     * The InstallFailureEvent model constructor.
     * @property {module:model/InstallFailureEvent}
     */
    InstallFailureEvent,

    /**
     * The InstallsListResponse model constructor.
     * @property {module:model/InstallsListResponse}
     */
    InstallsListResponse,

    /**
     * The KeyedAppState model constructor.
     * @property {module:model/KeyedAppState}
     */
    KeyedAppState,

    /**
     * The LocalizedText model constructor.
     * @property {module:model/LocalizedText}
     */
    LocalizedText,

    /**
     * The MaintenanceWindow model constructor.
     * @property {module:model/MaintenanceWindow}
     */
    MaintenanceWindow,

    /**
     * The ManagedConfiguration model constructor.
     * @property {module:model/ManagedConfiguration}
     */
    ManagedConfiguration,

    /**
     * The ManagedConfigurationsForDeviceListResponse model constructor.
     * @property {module:model/ManagedConfigurationsForDeviceListResponse}
     */
    ManagedConfigurationsForDeviceListResponse,

    /**
     * The ManagedConfigurationsForUserListResponse model constructor.
     * @property {module:model/ManagedConfigurationsForUserListResponse}
     */
    ManagedConfigurationsForUserListResponse,

    /**
     * The ManagedConfigurationsSettings model constructor.
     * @property {module:model/ManagedConfigurationsSettings}
     */
    ManagedConfigurationsSettings,

    /**
     * The ManagedConfigurationsSettingsListResponse model constructor.
     * @property {module:model/ManagedConfigurationsSettingsListResponse}
     */
    ManagedConfigurationsSettingsListResponse,

    /**
     * The ManagedProperty model constructor.
     * @property {module:model/ManagedProperty}
     */
    ManagedProperty,

    /**
     * The ManagedPropertyBundle model constructor.
     * @property {module:model/ManagedPropertyBundle}
     */
    ManagedPropertyBundle,

    /**
     * The NewDeviceEvent model constructor.
     * @property {module:model/NewDeviceEvent}
     */
    NewDeviceEvent,

    /**
     * The NewPermissionsEvent model constructor.
     * @property {module:model/NewPermissionsEvent}
     */
    NewPermissionsEvent,

    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification,

    /**
     * The NotificationSet model constructor.
     * @property {module:model/NotificationSet}
     */
    NotificationSet,

    /**
     * The PageInfo model constructor.
     * @property {module:model/PageInfo}
     */
    PageInfo,

    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission,

    /**
     * The Policy model constructor.
     * @property {module:model/Policy}
     */
    Policy,

    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product,

    /**
     * The ProductApprovalEvent model constructor.
     * @property {module:model/ProductApprovalEvent}
     */
    ProductApprovalEvent,

    /**
     * The ProductAvailabilityChangeEvent model constructor.
     * @property {module:model/ProductAvailabilityChangeEvent}
     */
    ProductAvailabilityChangeEvent,

    /**
     * The ProductPermission model constructor.
     * @property {module:model/ProductPermission}
     */
    ProductPermission,

    /**
     * The ProductPermissions model constructor.
     * @property {module:model/ProductPermissions}
     */
    ProductPermissions,

    /**
     * The ProductPolicy model constructor.
     * @property {module:model/ProductPolicy}
     */
    ProductPolicy,

    /**
     * The ProductSet model constructor.
     * @property {module:model/ProductSet}
     */
    ProductSet,

    /**
     * The ProductSigningCertificate model constructor.
     * @property {module:model/ProductSigningCertificate}
     */
    ProductSigningCertificate,

    /**
     * The ProductVisibility model constructor.
     * @property {module:model/ProductVisibility}
     */
    ProductVisibility,

    /**
     * The ProductsApproveRequest model constructor.
     * @property {module:model/ProductsApproveRequest}
     */
    ProductsApproveRequest,

    /**
     * The ProductsGenerateApprovalUrlResponse model constructor.
     * @property {module:model/ProductsGenerateApprovalUrlResponse}
     */
    ProductsGenerateApprovalUrlResponse,

    /**
     * The ProductsListResponse model constructor.
     * @property {module:model/ProductsListResponse}
     */
    ProductsListResponse,

    /**
     * The ServiceAccount model constructor.
     * @property {module:model/ServiceAccount}
     */
    ServiceAccount,

    /**
     * The ServiceAccountKey model constructor.
     * @property {module:model/ServiceAccountKey}
     */
    ServiceAccountKey,

    /**
     * The ServiceAccountKeysListResponse model constructor.
     * @property {module:model/ServiceAccountKeysListResponse}
     */
    ServiceAccountKeysListResponse,

    /**
     * The SignupInfo model constructor.
     * @property {module:model/SignupInfo}
     */
    SignupInfo,

    /**
     * The StoreCluster model constructor.
     * @property {module:model/StoreCluster}
     */
    StoreCluster,

    /**
     * The StoreLayout model constructor.
     * @property {module:model/StoreLayout}
     */
    StoreLayout,

    /**
     * The StoreLayoutClustersListResponse model constructor.
     * @property {module:model/StoreLayoutClustersListResponse}
     */
    StoreLayoutClustersListResponse,

    /**
     * The StoreLayoutPagesListResponse model constructor.
     * @property {module:model/StoreLayoutPagesListResponse}
     */
    StoreLayoutPagesListResponse,

    /**
     * The StorePage model constructor.
     * @property {module:model/StorePage}
     */
    StorePage,

    /**
     * The TokenPagination model constructor.
     * @property {module:model/TokenPagination}
     */
    TokenPagination,

    /**
     * The TrackInfo model constructor.
     * @property {module:model/TrackInfo}
     */
    TrackInfo,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UsersListResponse model constructor.
     * @property {module:model/UsersListResponse}
     */
    UsersListResponse,

    /**
     * The VariableSet model constructor.
     * @property {module:model/VariableSet}
     */
    VariableSet,

    /**
     * The WebApp model constructor.
     * @property {module:model/WebApp}
     */
    WebApp,

    /**
     * The WebAppIcon model constructor.
     * @property {module:model/WebAppIcon}
     */
    WebAppIcon,

    /**
     * The WebAppsListResponse model constructor.
     * @property {module:model/WebAppsListResponse}
     */
    WebAppsListResponse,

    /**
    * The DevicesApi service constructor.
    * @property {module:api/DevicesApi}
    */
    DevicesApi,

    /**
    * The EnterprisesApi service constructor.
    * @property {module:api/EnterprisesApi}
    */
    EnterprisesApi,

    /**
    * The EntitlementsApi service constructor.
    * @property {module:api/EntitlementsApi}
    */
    EntitlementsApi,

    /**
    * The GrouplicensesApi service constructor.
    * @property {module:api/GrouplicensesApi}
    */
    GrouplicensesApi,

    /**
    * The GrouplicenseusersApi service constructor.
    * @property {module:api/GrouplicenseusersApi}
    */
    GrouplicenseusersApi,

    /**
    * The InstallsApi service constructor.
    * @property {module:api/InstallsApi}
    */
    InstallsApi,

    /**
    * The ManagedconfigurationsfordeviceApi service constructor.
    * @property {module:api/ManagedconfigurationsfordeviceApi}
    */
    ManagedconfigurationsfordeviceApi,

    /**
    * The ManagedconfigurationsforuserApi service constructor.
    * @property {module:api/ManagedconfigurationsforuserApi}
    */
    ManagedconfigurationsforuserApi,

    /**
    * The ManagedconfigurationssettingsApi service constructor.
    * @property {module:api/ManagedconfigurationssettingsApi}
    */
    ManagedconfigurationssettingsApi,

    /**
    * The PermissionsApi service constructor.
    * @property {module:api/PermissionsApi}
    */
    PermissionsApi,

    /**
    * The ProductsApi service constructor.
    * @property {module:api/ProductsApi}
    */
    ProductsApi,

    /**
    * The ServiceaccountkeysApi service constructor.
    * @property {module:api/ServiceaccountkeysApi}
    */
    ServiceaccountkeysApi,

    /**
    * The StorelayoutclustersApi service constructor.
    * @property {module:api/StorelayoutclustersApi}
    */
    StorelayoutclustersApi,

    /**
    * The StorelayoutpagesApi service constructor.
    * @property {module:api/StorelayoutpagesApi}
    */
    StorelayoutpagesApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WebappsApi service constructor.
    * @property {module:api/WebappsApi}
    */
    WebappsApi
};
