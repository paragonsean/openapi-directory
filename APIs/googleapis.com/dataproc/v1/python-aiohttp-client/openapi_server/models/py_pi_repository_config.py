# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PyPiRepositoryConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pypi_repository: str=None):
        """PyPiRepositoryConfig - a model defined in OpenAPI

        :param pypi_repository: The pypi_repository of this PyPiRepositoryConfig.
        """
        self.openapi_types = {
            'pypi_repository': str
        }

        self.attribute_map = {
            'pypi_repository': 'pypiRepository'
        }

        self._pypi_repository = pypi_repository

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PyPiRepositoryConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PyPiRepositoryConfig of this PyPiRepositoryConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pypi_repository(self):
        """Gets the pypi_repository of this PyPiRepositoryConfig.

        Optional. PyPi repository address

        :return: The pypi_repository of this PyPiRepositoryConfig.
        :rtype: str
        """
        return self._pypi_repository

    @pypi_repository.setter
    def pypi_repository(self, pypi_repository):
        """Sets the pypi_repository of this PyPiRepositoryConfig.

        Optional. PyPi repository address

        :param pypi_repository: The pypi_repository of this PyPiRepositoryConfig.
        :type pypi_repository: str
        """

        self._pypi_repository = pypi_repository
