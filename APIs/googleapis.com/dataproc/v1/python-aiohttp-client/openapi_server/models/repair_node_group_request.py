# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RepairNodeGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, instance_names: List[str]=None, repair_action: str=None, request_id: str=None):
        """RepairNodeGroupRequest - a model defined in OpenAPI

        :param instance_names: The instance_names of this RepairNodeGroupRequest.
        :param repair_action: The repair_action of this RepairNodeGroupRequest.
        :param request_id: The request_id of this RepairNodeGroupRequest.
        """
        self.openapi_types = {
            'instance_names': List[str],
            'repair_action': str,
            'request_id': str
        }

        self.attribute_map = {
            'instance_names': 'instanceNames',
            'repair_action': 'repairAction',
            'request_id': 'requestId'
        }

        self._instance_names = instance_names
        self._repair_action = repair_action
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepairNodeGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepairNodeGroupRequest of this RepairNodeGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def instance_names(self):
        """Gets the instance_names of this RepairNodeGroupRequest.

        Required. Name of instances to be repaired. These instances must belong to specified node pool.

        :return: The instance_names of this RepairNodeGroupRequest.
        :rtype: List[str]
        """
        return self._instance_names

    @instance_names.setter
    def instance_names(self, instance_names):
        """Sets the instance_names of this RepairNodeGroupRequest.

        Required. Name of instances to be repaired. These instances must belong to specified node pool.

        :param instance_names: The instance_names of this RepairNodeGroupRequest.
        :type instance_names: List[str]
        """

        self._instance_names = instance_names

    @property
    def repair_action(self):
        """Gets the repair_action of this RepairNodeGroupRequest.

        Required. Repair action to take on specified resources of the node pool.

        :return: The repair_action of this RepairNodeGroupRequest.
        :rtype: str
        """
        return self._repair_action

    @repair_action.setter
    def repair_action(self, repair_action):
        """Sets the repair_action of this RepairNodeGroupRequest.

        Required. Repair action to take on specified resources of the node pool.

        :param repair_action: The repair_action of this RepairNodeGroupRequest.
        :type repair_action: str
        """
        allowed_values = ["REPAIR_ACTION_UNSPECIFIED", "REPLACE"]  # noqa: E501
        if repair_action not in allowed_values:
            raise ValueError(
                "Invalid value for `repair_action` ({0}), must be one of {1}"
                .format(repair_action, allowed_values)
            )

        self._repair_action = repair_action

    @property
    def request_id(self):
        """Gets the request_id of this RepairNodeGroupRequest.

        Optional. A unique ID used to identify the request. If the server receives two RepairNodeGroupRequest with the same ID, the second request is ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.

        :return: The request_id of this RepairNodeGroupRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this RepairNodeGroupRequest.

        Optional. A unique ID used to identify the request. If the server receives two RepairNodeGroupRequest with the same ID, the second request is ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.

        :param request_id: The request_id of this RepairNodeGroupRequest.
        :type request_id: str
        """

        self._request_id = request_id
