# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClusterOperation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, done: bool=None, error: str=None, operation_id: str=None):
        """ClusterOperation - a model defined in OpenAPI

        :param done: The done of this ClusterOperation.
        :param error: The error of this ClusterOperation.
        :param operation_id: The operation_id of this ClusterOperation.
        """
        self.openapi_types = {
            'done': bool,
            'error': str,
            'operation_id': str
        }

        self.attribute_map = {
            'done': 'done',
            'error': 'error',
            'operation_id': 'operationId'
        }

        self._done = done
        self._error = error
        self._operation_id = operation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClusterOperation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClusterOperation of this ClusterOperation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def done(self):
        """Gets the done of this ClusterOperation.

        Output only. Indicates the operation is done.

        :return: The done of this ClusterOperation.
        :rtype: bool
        """
        return self._done

    @done.setter
    def done(self, done):
        """Sets the done of this ClusterOperation.

        Output only. Indicates the operation is done.

        :param done: The done of this ClusterOperation.
        :type done: bool
        """

        self._done = done

    @property
    def error(self):
        """Gets the error of this ClusterOperation.

        Output only. Error, if operation failed.

        :return: The error of this ClusterOperation.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this ClusterOperation.

        Output only. Error, if operation failed.

        :param error: The error of this ClusterOperation.
        :type error: str
        """

        self._error = error

    @property
    def operation_id(self):
        """Gets the operation_id of this ClusterOperation.

        Output only. The id of the cluster operation.

        :return: The operation_id of this ClusterOperation.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this ClusterOperation.

        Output only. The id of the cluster operation.

        :param operation_id: The operation_id of this ClusterOperation.
        :type operation_id: str
        """

        self._operation_id = operation_id
