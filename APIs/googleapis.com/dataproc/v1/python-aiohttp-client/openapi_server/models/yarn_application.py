# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class YarnApplication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, progress: float=None, state: str=None, tracking_url: str=None):
        """YarnApplication - a model defined in OpenAPI

        :param name: The name of this YarnApplication.
        :param progress: The progress of this YarnApplication.
        :param state: The state of this YarnApplication.
        :param tracking_url: The tracking_url of this YarnApplication.
        """
        self.openapi_types = {
            'name': str,
            'progress': float,
            'state': str,
            'tracking_url': str
        }

        self.attribute_map = {
            'name': 'name',
            'progress': 'progress',
            'state': 'state',
            'tracking_url': 'trackingUrl'
        }

        self._name = name
        self._progress = progress
        self._state = state
        self._tracking_url = tracking_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'YarnApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The YarnApplication of this YarnApplication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this YarnApplication.

        Required. The application name.

        :return: The name of this YarnApplication.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this YarnApplication.

        Required. The application name.

        :param name: The name of this YarnApplication.
        :type name: str
        """

        self._name = name

    @property
    def progress(self):
        """Gets the progress of this YarnApplication.

        Required. The numerical progress of the application, from 1 to 100.

        :return: The progress of this YarnApplication.
        :rtype: float
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this YarnApplication.

        Required. The numerical progress of the application, from 1 to 100.

        :param progress: The progress of this YarnApplication.
        :type progress: float
        """

        self._progress = progress

    @property
    def state(self):
        """Gets the state of this YarnApplication.

        Required. The application state.

        :return: The state of this YarnApplication.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this YarnApplication.

        Required. The application state.

        :param state: The state of this YarnApplication.
        :type state: str
        """
        allowed_values = ["STATE_UNSPECIFIED", "NEW", "NEW_SAVING", "SUBMITTED", "ACCEPTED", "RUNNING", "FINISHED", "FAILED", "KILLED"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def tracking_url(self):
        """Gets the tracking_url of this YarnApplication.

        Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.

        :return: The tracking_url of this YarnApplication.
        :rtype: str
        """
        return self._tracking_url

    @tracking_url.setter
    def tracking_url(self, tracking_url):
        """Sets the tracking_url of this YarnApplication.

        Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.

        :param tracking_url: The tracking_url of this YarnApplication.
        :type tracking_url: str
        """

        self._tracking_url = tracking_url
