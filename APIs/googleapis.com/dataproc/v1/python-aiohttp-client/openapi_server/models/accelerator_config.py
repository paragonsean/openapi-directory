# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AcceleratorConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accelerator_count: int=None, accelerator_type_uri: str=None):
        """AcceleratorConfig - a model defined in OpenAPI

        :param accelerator_count: The accelerator_count of this AcceleratorConfig.
        :param accelerator_type_uri: The accelerator_type_uri of this AcceleratorConfig.
        """
        self.openapi_types = {
            'accelerator_count': int,
            'accelerator_type_uri': str
        }

        self.attribute_map = {
            'accelerator_count': 'acceleratorCount',
            'accelerator_type_uri': 'acceleratorTypeUri'
        }

        self._accelerator_count = accelerator_count
        self._accelerator_type_uri = accelerator_type_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AcceleratorConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AcceleratorConfig of this AcceleratorConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accelerator_count(self):
        """Gets the accelerator_count of this AcceleratorConfig.

        The number of the accelerator cards of this type exposed to this instance.

        :return: The accelerator_count of this AcceleratorConfig.
        :rtype: int
        """
        return self._accelerator_count

    @accelerator_count.setter
    def accelerator_count(self, accelerator_count):
        """Sets the accelerator_count of this AcceleratorConfig.

        The number of the accelerator cards of this type exposed to this instance.

        :param accelerator_count: The accelerator_count of this AcceleratorConfig.
        :type accelerator_count: int
        """

        self._accelerator_count = accelerator_count

    @property
    def accelerator_type_uri(self):
        """Gets the accelerator_type_uri of this AcceleratorConfig.

        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.

        :return: The accelerator_type_uri of this AcceleratorConfig.
        :rtype: str
        """
        return self._accelerator_type_uri

    @accelerator_type_uri.setter
    def accelerator_type_uri(self, accelerator_type_uri):
        """Sets the accelerator_type_uri of this AcceleratorConfig.

        Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.

        :param accelerator_type_uri: The accelerator_type_uri of this AcceleratorConfig.
        :type accelerator_type_uri: str
        """

        self._accelerator_type_uri = accelerator_type_uri
