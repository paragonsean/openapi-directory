# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.basic_yarn_autoscaling_config import BasicYarnAutoscalingConfig
from openapi_server.models.spark_standalone_autoscaling_config import SparkStandaloneAutoscalingConfig
from openapi_server import util


class BasicAutoscalingAlgorithm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cooldown_period: str=None, spark_standalone_config: SparkStandaloneAutoscalingConfig=None, yarn_config: BasicYarnAutoscalingConfig=None):
        """BasicAutoscalingAlgorithm - a model defined in OpenAPI

        :param cooldown_period: The cooldown_period of this BasicAutoscalingAlgorithm.
        :param spark_standalone_config: The spark_standalone_config of this BasicAutoscalingAlgorithm.
        :param yarn_config: The yarn_config of this BasicAutoscalingAlgorithm.
        """
        self.openapi_types = {
            'cooldown_period': str,
            'spark_standalone_config': SparkStandaloneAutoscalingConfig,
            'yarn_config': BasicYarnAutoscalingConfig
        }

        self.attribute_map = {
            'cooldown_period': 'cooldownPeriod',
            'spark_standalone_config': 'sparkStandaloneConfig',
            'yarn_config': 'yarnConfig'
        }

        self._cooldown_period = cooldown_period
        self._spark_standalone_config = spark_standalone_config
        self._yarn_config = yarn_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BasicAutoscalingAlgorithm':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BasicAutoscalingAlgorithm of this BasicAutoscalingAlgorithm.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cooldown_period(self):
        """Gets the cooldown_period of this BasicAutoscalingAlgorithm.

        Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.

        :return: The cooldown_period of this BasicAutoscalingAlgorithm.
        :rtype: str
        """
        return self._cooldown_period

    @cooldown_period.setter
    def cooldown_period(self, cooldown_period):
        """Sets the cooldown_period of this BasicAutoscalingAlgorithm.

        Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m.

        :param cooldown_period: The cooldown_period of this BasicAutoscalingAlgorithm.
        :type cooldown_period: str
        """

        self._cooldown_period = cooldown_period

    @property
    def spark_standalone_config(self):
        """Gets the spark_standalone_config of this BasicAutoscalingAlgorithm.


        :return: The spark_standalone_config of this BasicAutoscalingAlgorithm.
        :rtype: SparkStandaloneAutoscalingConfig
        """
        return self._spark_standalone_config

    @spark_standalone_config.setter
    def spark_standalone_config(self, spark_standalone_config):
        """Sets the spark_standalone_config of this BasicAutoscalingAlgorithm.


        :param spark_standalone_config: The spark_standalone_config of this BasicAutoscalingAlgorithm.
        :type spark_standalone_config: SparkStandaloneAutoscalingConfig
        """

        self._spark_standalone_config = spark_standalone_config

    @property
    def yarn_config(self):
        """Gets the yarn_config of this BasicAutoscalingAlgorithm.


        :return: The yarn_config of this BasicAutoscalingAlgorithm.
        :rtype: BasicYarnAutoscalingConfig
        """
        return self._yarn_config

    @yarn_config.setter
    def yarn_config(self, yarn_config):
        """Sets the yarn_config of this BasicAutoscalingAlgorithm.


        :param yarn_config: The yarn_config of this BasicAutoscalingAlgorithm.
        :type yarn_config: BasicYarnAutoscalingConfig
        """

        self._yarn_config = yarn_config
