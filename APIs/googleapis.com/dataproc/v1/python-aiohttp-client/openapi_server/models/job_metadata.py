# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_status import JobStatus
from openapi_server import util


class JobMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job_id: str=None, operation_type: str=None, start_time: str=None, status: JobStatus=None):
        """JobMetadata - a model defined in OpenAPI

        :param job_id: The job_id of this JobMetadata.
        :param operation_type: The operation_type of this JobMetadata.
        :param start_time: The start_time of this JobMetadata.
        :param status: The status of this JobMetadata.
        """
        self.openapi_types = {
            'job_id': str,
            'operation_type': str,
            'start_time': str,
            'status': JobStatus
        }

        self.attribute_map = {
            'job_id': 'jobId',
            'operation_type': 'operationType',
            'start_time': 'startTime',
            'status': 'status'
        }

        self._job_id = job_id
        self._operation_type = operation_type
        self._start_time = start_time
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobMetadata of this JobMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job_id(self):
        """Gets the job_id of this JobMetadata.

        Output only. The job id.

        :return: The job_id of this JobMetadata.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this JobMetadata.

        Output only. The job id.

        :param job_id: The job_id of this JobMetadata.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def operation_type(self):
        """Gets the operation_type of this JobMetadata.

        Output only. Operation type.

        :return: The operation_type of this JobMetadata.
        :rtype: str
        """
        return self._operation_type

    @operation_type.setter
    def operation_type(self, operation_type):
        """Sets the operation_type of this JobMetadata.

        Output only. Operation type.

        :param operation_type: The operation_type of this JobMetadata.
        :type operation_type: str
        """

        self._operation_type = operation_type

    @property
    def start_time(self):
        """Gets the start_time of this JobMetadata.

        Output only. Job submission time.

        :return: The start_time of this JobMetadata.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this JobMetadata.

        Output only. Job submission time.

        :param start_time: The start_time of this JobMetadata.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def status(self):
        """Gets the status of this JobMetadata.


        :return: The status of this JobMetadata.
        :rtype: JobStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this JobMetadata.


        :param status: The status of this JobMetadata.
        :type status: JobStatus
        """

        self._status = status
