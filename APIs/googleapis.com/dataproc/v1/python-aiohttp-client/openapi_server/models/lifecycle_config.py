# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LifecycleConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_delete_time: str=None, auto_delete_ttl: str=None, idle_delete_ttl: str=None, idle_start_time: str=None):
        """LifecycleConfig - a model defined in OpenAPI

        :param auto_delete_time: The auto_delete_time of this LifecycleConfig.
        :param auto_delete_ttl: The auto_delete_ttl of this LifecycleConfig.
        :param idle_delete_ttl: The idle_delete_ttl of this LifecycleConfig.
        :param idle_start_time: The idle_start_time of this LifecycleConfig.
        """
        self.openapi_types = {
            'auto_delete_time': str,
            'auto_delete_ttl': str,
            'idle_delete_ttl': str,
            'idle_start_time': str
        }

        self.attribute_map = {
            'auto_delete_time': 'autoDeleteTime',
            'auto_delete_ttl': 'autoDeleteTtl',
            'idle_delete_ttl': 'idleDeleteTtl',
            'idle_start_time': 'idleStartTime'
        }

        self._auto_delete_time = auto_delete_time
        self._auto_delete_ttl = auto_delete_ttl
        self._idle_delete_ttl = idle_delete_ttl
        self._idle_start_time = idle_start_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LifecycleConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LifecycleConfig of this LifecycleConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_delete_time(self):
        """Gets the auto_delete_time of this LifecycleConfig.

        Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).

        :return: The auto_delete_time of this LifecycleConfig.
        :rtype: str
        """
        return self._auto_delete_time

    @auto_delete_time.setter
    def auto_delete_time(self, auto_delete_time):
        """Sets the auto_delete_time of this LifecycleConfig.

        Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).

        :param auto_delete_time: The auto_delete_time of this LifecycleConfig.
        :type auto_delete_time: str
        """

        self._auto_delete_time = auto_delete_time

    @property
    def auto_delete_ttl(self):
        """Gets the auto_delete_ttl of this LifecycleConfig.

        Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).

        :return: The auto_delete_ttl of this LifecycleConfig.
        :rtype: str
        """
        return self._auto_delete_ttl

    @auto_delete_ttl.setter
    def auto_delete_ttl(self, auto_delete_ttl):
        """Sets the auto_delete_ttl of this LifecycleConfig.

        Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).

        :param auto_delete_ttl: The auto_delete_ttl of this LifecycleConfig.
        :type auto_delete_ttl: str
        """

        self._auto_delete_ttl = auto_delete_ttl

    @property
    def idle_delete_ttl(self):
        """Gets the idle_delete_ttl of this LifecycleConfig.

        Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).

        :return: The idle_delete_ttl of this LifecycleConfig.
        :rtype: str
        """
        return self._idle_delete_ttl

    @idle_delete_ttl.setter
    def idle_delete_ttl(self, idle_delete_ttl):
        """Sets the idle_delete_ttl of this LifecycleConfig.

        Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).

        :param idle_delete_ttl: The idle_delete_ttl of this LifecycleConfig.
        :type idle_delete_ttl: str
        """

        self._idle_delete_ttl = idle_delete_ttl

    @property
    def idle_start_time(self):
        """Gets the idle_start_time of this LifecycleConfig.

        Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).

        :return: The idle_start_time of this LifecycleConfig.
        :rtype: str
        """
        return self._idle_start_time

    @idle_start_time.setter
    def idle_start_time(self, idle_start_time):
        """Sets the idle_start_time of this LifecycleConfig.

        Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).

        :param idle_start_time: The idle_start_time of this LifecycleConfig.
        :type idle_start_time: str
        """

        self._idle_start_time = idle_start_time
