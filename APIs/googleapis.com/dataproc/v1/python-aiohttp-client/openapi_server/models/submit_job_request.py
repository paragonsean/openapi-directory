# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job import Job
from openapi_server import util


class SubmitJobRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, job: Job=None, request_id: str=None):
        """SubmitJobRequest - a model defined in OpenAPI

        :param job: The job of this SubmitJobRequest.
        :param request_id: The request_id of this SubmitJobRequest.
        """
        self.openapi_types = {
            'job': Job,
            'request_id': str
        }

        self.attribute_map = {
            'job': 'job',
            'request_id': 'requestId'
        }

        self._job = job
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubmitJobRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubmitJobRequest of this SubmitJobRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def job(self):
        """Gets the job of this SubmitJobRequest.


        :return: The job of this SubmitJobRequest.
        :rtype: Job
        """
        return self._job

    @job.setter
    def job(self, job):
        """Sets the job of this SubmitJobRequest.


        :param job: The job of this SubmitJobRequest.
        :type job: Job
        """

        self._job = job

    @property
    def request_id(self):
        """Gets the request_id of this SubmitJobRequest.

        Optional. A unique id used to identify the request. If the server receives two SubmitJobRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.SubmitJobRequest)s with the same id, then the second request will be ignored and the first Job created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.

        :return: The request_id of this SubmitJobRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this SubmitJobRequest.

        Optional. A unique id used to identify the request. If the server receives two SubmitJobRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.SubmitJobRequest)s with the same id, then the second request will be ignored and the first Job created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.

        :param request_id: The request_id of this SubmitJobRequest.
        :type request_id: str
        """

        self._request_id = request_id
