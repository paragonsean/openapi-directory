# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InstanceSelectionResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, machine_type: str=None, vm_count: int=None):
        """InstanceSelectionResult - a model defined in OpenAPI

        :param machine_type: The machine_type of this InstanceSelectionResult.
        :param vm_count: The vm_count of this InstanceSelectionResult.
        """
        self.openapi_types = {
            'machine_type': str,
            'vm_count': int
        }

        self.attribute_map = {
            'machine_type': 'machineType',
            'vm_count': 'vmCount'
        }

        self._machine_type = machine_type
        self._vm_count = vm_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstanceSelectionResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstanceSelectionResult of this InstanceSelectionResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def machine_type(self):
        """Gets the machine_type of this InstanceSelectionResult.

        Output only. Full machine-type names, e.g. \"n1-standard-16\".

        :return: The machine_type of this InstanceSelectionResult.
        :rtype: str
        """
        return self._machine_type

    @machine_type.setter
    def machine_type(self, machine_type):
        """Sets the machine_type of this InstanceSelectionResult.

        Output only. Full machine-type names, e.g. \"n1-standard-16\".

        :param machine_type: The machine_type of this InstanceSelectionResult.
        :type machine_type: str
        """

        self._machine_type = machine_type

    @property
    def vm_count(self):
        """Gets the vm_count of this InstanceSelectionResult.

        Output only. Number of VM provisioned with the machine_type.

        :return: The vm_count of this InstanceSelectionResult.
        :rtype: int
        """
        return self._vm_count

    @vm_count.setter
    def vm_count(self, vm_count):
        """Sets the vm_count of this InstanceSelectionResult.

        Output only. Number of VM provisioned with the machine_type.

        :param vm_count: The vm_count of this InstanceSelectionResult.
        :type vm_count: int
        """

        self._vm_count = vm_count
