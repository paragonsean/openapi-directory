# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch import Batch
from openapi_server import util


class ListBatchesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batches: List[Batch]=None, next_page_token: str=None, unreachable: List[str]=None):
        """ListBatchesResponse - a model defined in OpenAPI

        :param batches: The batches of this ListBatchesResponse.
        :param next_page_token: The next_page_token of this ListBatchesResponse.
        :param unreachable: The unreachable of this ListBatchesResponse.
        """
        self.openapi_types = {
            'batches': List[Batch],
            'next_page_token': str,
            'unreachable': List[str]
        }

        self.attribute_map = {
            'batches': 'batches',
            'next_page_token': 'nextPageToken',
            'unreachable': 'unreachable'
        }

        self._batches = batches
        self._next_page_token = next_page_token
        self._unreachable = unreachable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListBatchesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListBatchesResponse of this ListBatchesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batches(self):
        """Gets the batches of this ListBatchesResponse.

        Output only. The batches from the specified collection.

        :return: The batches of this ListBatchesResponse.
        :rtype: List[Batch]
        """
        return self._batches

    @batches.setter
    def batches(self, batches):
        """Sets the batches of this ListBatchesResponse.

        Output only. The batches from the specified collection.

        :param batches: The batches of this ListBatchesResponse.
        :type batches: List[Batch]
        """

        self._batches = batches

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListBatchesResponse.

        A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :return: The next_page_token of this ListBatchesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListBatchesResponse.

        A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.

        :param next_page_token: The next_page_token of this ListBatchesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def unreachable(self):
        """Gets the unreachable of this ListBatchesResponse.

        Output only. List of Batches that could not be included in the response. Attempting to get one of these resources may indicate why it was not included in the list response.

        :return: The unreachable of this ListBatchesResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this ListBatchesResponse.

        Output only. List of Batches that could not be included in the response. Attempting to get one of these resources may indicate why it was not included in the list response.

        :param unreachable: The unreachable of this ListBatchesResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable
