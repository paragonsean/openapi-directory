# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.identity_config import IdentityConfig
from openapi_server.models.kerberos_config import KerberosConfig
from openapi_server import util


class SecurityConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity_config: IdentityConfig=None, kerberos_config: KerberosConfig=None):
        """SecurityConfig - a model defined in OpenAPI

        :param identity_config: The identity_config of this SecurityConfig.
        :param kerberos_config: The kerberos_config of this SecurityConfig.
        """
        self.openapi_types = {
            'identity_config': IdentityConfig,
            'kerberos_config': KerberosConfig
        }

        self.attribute_map = {
            'identity_config': 'identityConfig',
            'kerberos_config': 'kerberosConfig'
        }

        self._identity_config = identity_config
        self._kerberos_config = kerberos_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecurityConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecurityConfig of this SecurityConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity_config(self):
        """Gets the identity_config of this SecurityConfig.


        :return: The identity_config of this SecurityConfig.
        :rtype: IdentityConfig
        """
        return self._identity_config

    @identity_config.setter
    def identity_config(self, identity_config):
        """Sets the identity_config of this SecurityConfig.


        :param identity_config: The identity_config of this SecurityConfig.
        :type identity_config: IdentityConfig
        """

        self._identity_config = identity_config

    @property
    def kerberos_config(self):
        """Gets the kerberos_config of this SecurityConfig.


        :return: The kerberos_config of this SecurityConfig.
        :rtype: KerberosConfig
        """
        return self._kerberos_config

    @kerberos_config.setter
    def kerberos_config(self, kerberos_config):
        """Sets the kerberos_config of this SecurityConfig.


        :param kerberos_config: The kerberos_config of this SecurityConfig.
        :type kerberos_config: KerberosConfig
        """

        self._kerberos_config = kerberos_config
