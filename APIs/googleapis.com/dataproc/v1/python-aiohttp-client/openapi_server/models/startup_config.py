# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartupConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, required_registration_fraction: float=None):
        """StartupConfig - a model defined in OpenAPI

        :param required_registration_fraction: The required_registration_fraction of this StartupConfig.
        """
        self.openapi_types = {
            'required_registration_fraction': float
        }

        self.attribute_map = {
            'required_registration_fraction': 'requiredRegistrationFraction'
        }

        self._required_registration_fraction = required_registration_fraction

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartupConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartupConfig of this StartupConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def required_registration_fraction(self):
        """Gets the required_registration_fraction of this StartupConfig.

        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).

        :return: The required_registration_fraction of this StartupConfig.
        :rtype: float
        """
        return self._required_registration_fraction

    @required_registration_fraction.setter
    def required_registration_fraction(self, required_registration_fraction):
        """Sets the required_registration_fraction of this StartupConfig.

        Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).

        :param required_registration_fraction: The required_registration_fraction of this StartupConfig.
        :type required_registration_fraction: float
        """

        self._required_registration_fraction = required_registration_fraction
