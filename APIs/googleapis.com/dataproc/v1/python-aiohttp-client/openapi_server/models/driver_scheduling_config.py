# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DriverSchedulingConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, memory_mb: int=None, vcores: int=None):
        """DriverSchedulingConfig - a model defined in OpenAPI

        :param memory_mb: The memory_mb of this DriverSchedulingConfig.
        :param vcores: The vcores of this DriverSchedulingConfig.
        """
        self.openapi_types = {
            'memory_mb': int,
            'vcores': int
        }

        self.attribute_map = {
            'memory_mb': 'memoryMb',
            'vcores': 'vcores'
        }

        self._memory_mb = memory_mb
        self._vcores = vcores

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DriverSchedulingConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DriverSchedulingConfig of this DriverSchedulingConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def memory_mb(self):
        """Gets the memory_mb of this DriverSchedulingConfig.

        Required. The amount of memory in MB the driver is requesting.

        :return: The memory_mb of this DriverSchedulingConfig.
        :rtype: int
        """
        return self._memory_mb

    @memory_mb.setter
    def memory_mb(self, memory_mb):
        """Sets the memory_mb of this DriverSchedulingConfig.

        Required. The amount of memory in MB the driver is requesting.

        :param memory_mb: The memory_mb of this DriverSchedulingConfig.
        :type memory_mb: int
        """

        self._memory_mb = memory_mb

    @property
    def vcores(self):
        """Gets the vcores of this DriverSchedulingConfig.

        Required. The number of vCPUs the driver is requesting.

        :return: The vcores of this DriverSchedulingConfig.
        :rtype: int
        """
        return self._vcores

    @vcores.setter
    def vcores(self, vcores):
        """Sets the vcores of this DriverSchedulingConfig.

        Required. The number of vCPUs the driver is requesting.

        :param vcores: The vcores of this DriverSchedulingConfig.
        :type vcores: int
        """

        self._vcores = vcores
