# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DiskConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, boot_disk_size_gb: int=None, boot_disk_type: str=None, local_ssd_interface: str=None, num_local_ssds: int=None):
        """DiskConfig - a model defined in OpenAPI

        :param boot_disk_size_gb: The boot_disk_size_gb of this DiskConfig.
        :param boot_disk_type: The boot_disk_type of this DiskConfig.
        :param local_ssd_interface: The local_ssd_interface of this DiskConfig.
        :param num_local_ssds: The num_local_ssds of this DiskConfig.
        """
        self.openapi_types = {
            'boot_disk_size_gb': int,
            'boot_disk_type': str,
            'local_ssd_interface': str,
            'num_local_ssds': int
        }

        self.attribute_map = {
            'boot_disk_size_gb': 'bootDiskSizeGb',
            'boot_disk_type': 'bootDiskType',
            'local_ssd_interface': 'localSsdInterface',
            'num_local_ssds': 'numLocalSsds'
        }

        self._boot_disk_size_gb = boot_disk_size_gb
        self._boot_disk_type = boot_disk_type
        self._local_ssd_interface = local_ssd_interface
        self._num_local_ssds = num_local_ssds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiskConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiskConfig of this DiskConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def boot_disk_size_gb(self):
        """Gets the boot_disk_size_gb of this DiskConfig.

        Optional. Size in GB of the boot disk (default is 500GB).

        :return: The boot_disk_size_gb of this DiskConfig.
        :rtype: int
        """
        return self._boot_disk_size_gb

    @boot_disk_size_gb.setter
    def boot_disk_size_gb(self, boot_disk_size_gb):
        """Sets the boot_disk_size_gb of this DiskConfig.

        Optional. Size in GB of the boot disk (default is 500GB).

        :param boot_disk_size_gb: The boot_disk_size_gb of this DiskConfig.
        :type boot_disk_size_gb: int
        """

        self._boot_disk_size_gb = boot_disk_size_gb

    @property
    def boot_disk_type(self):
        """Gets the boot_disk_type of this DiskConfig.

        Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).

        :return: The boot_disk_type of this DiskConfig.
        :rtype: str
        """
        return self._boot_disk_type

    @boot_disk_type.setter
    def boot_disk_type(self, boot_disk_type):
        """Sets the boot_disk_type of this DiskConfig.

        Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).

        :param boot_disk_type: The boot_disk_type of this DiskConfig.
        :type boot_disk_type: str
        """

        self._boot_disk_type = boot_disk_type

    @property
    def local_ssd_interface(self):
        """Gets the local_ssd_interface of this DiskConfig.

        Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).

        :return: The local_ssd_interface of this DiskConfig.
        :rtype: str
        """
        return self._local_ssd_interface

    @local_ssd_interface.setter
    def local_ssd_interface(self, local_ssd_interface):
        """Sets the local_ssd_interface of this DiskConfig.

        Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).

        :param local_ssd_interface: The local_ssd_interface of this DiskConfig.
        :type local_ssd_interface: str
        """

        self._local_ssd_interface = local_ssd_interface

    @property
    def num_local_ssds(self):
        """Gets the num_local_ssds of this DiskConfig.

        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.

        :return: The num_local_ssds of this DiskConfig.
        :rtype: int
        """
        return self._num_local_ssds

    @num_local_ssds.setter
    def num_local_ssds(self, num_local_ssds):
        """Sets the num_local_ssds of this DiskConfig.

        Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.

        :param num_local_ssds: The num_local_ssds of this DiskConfig.
        :type num_local_ssds: int
        """

        self._num_local_ssds = num_local_ssds
