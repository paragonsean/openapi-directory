/*
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.BasicAutoscalingAlgorithm;
import org.openapitools.client.model.InstanceGroupAutoscalingPolicyConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes an autoscaling policy for Dataproc cluster autoscaler.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:50.925918-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AutoscalingPolicy {
  public static final String SERIALIZED_NAME_BASIC_ALGORITHM = "basicAlgorithm";
  @SerializedName(SERIALIZED_NAME_BASIC_ALGORITHM)
  private BasicAutoscalingAlgorithm basicAlgorithm;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = new HashMap<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SECONDARY_WORKER_CONFIG = "secondaryWorkerConfig";
  @SerializedName(SERIALIZED_NAME_SECONDARY_WORKER_CONFIG)
  private InstanceGroupAutoscalingPolicyConfig secondaryWorkerConfig;

  public static final String SERIALIZED_NAME_WORKER_CONFIG = "workerConfig";
  @SerializedName(SERIALIZED_NAME_WORKER_CONFIG)
  private InstanceGroupAutoscalingPolicyConfig workerConfig;

  public AutoscalingPolicy() {
  }

  public AutoscalingPolicy(
     String name
  ) {
    this();
    this.name = name;
  }

  public AutoscalingPolicy basicAlgorithm(BasicAutoscalingAlgorithm basicAlgorithm) {
    this.basicAlgorithm = basicAlgorithm;
    return this;
  }

  /**
   * Get basicAlgorithm
   * @return basicAlgorithm
   */
  @javax.annotation.Nullable
  public BasicAutoscalingAlgorithm getBasicAlgorithm() {
    return basicAlgorithm;
  }

  public void setBasicAlgorithm(BasicAutoscalingAlgorithm basicAlgorithm) {
    this.basicAlgorithm = basicAlgorithm;
  }


  public AutoscalingPolicy id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Required. The policy id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public AutoscalingPolicy labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public AutoscalingPolicy putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

  /**
   * Optional. The labels to associate with this autoscaling policy. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with an autoscaling policy.
   * @return labels
   */
  @javax.annotation.Nullable
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  /**
   * Output only. The \&quot;resource name\&quot; of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }



  public AutoscalingPolicy secondaryWorkerConfig(InstanceGroupAutoscalingPolicyConfig secondaryWorkerConfig) {
    this.secondaryWorkerConfig = secondaryWorkerConfig;
    return this;
  }

  /**
   * Get secondaryWorkerConfig
   * @return secondaryWorkerConfig
   */
  @javax.annotation.Nullable
  public InstanceGroupAutoscalingPolicyConfig getSecondaryWorkerConfig() {
    return secondaryWorkerConfig;
  }

  public void setSecondaryWorkerConfig(InstanceGroupAutoscalingPolicyConfig secondaryWorkerConfig) {
    this.secondaryWorkerConfig = secondaryWorkerConfig;
  }


  public AutoscalingPolicy workerConfig(InstanceGroupAutoscalingPolicyConfig workerConfig) {
    this.workerConfig = workerConfig;
    return this;
  }

  /**
   * Get workerConfig
   * @return workerConfig
   */
  @javax.annotation.Nullable
  public InstanceGroupAutoscalingPolicyConfig getWorkerConfig() {
    return workerConfig;
  }

  public void setWorkerConfig(InstanceGroupAutoscalingPolicyConfig workerConfig) {
    this.workerConfig = workerConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoscalingPolicy autoscalingPolicy = (AutoscalingPolicy) o;
    return Objects.equals(this.basicAlgorithm, autoscalingPolicy.basicAlgorithm) &&
        Objects.equals(this.id, autoscalingPolicy.id) &&
        Objects.equals(this.labels, autoscalingPolicy.labels) &&
        Objects.equals(this.name, autoscalingPolicy.name) &&
        Objects.equals(this.secondaryWorkerConfig, autoscalingPolicy.secondaryWorkerConfig) &&
        Objects.equals(this.workerConfig, autoscalingPolicy.workerConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(basicAlgorithm, id, labels, name, secondaryWorkerConfig, workerConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoscalingPolicy {\n");
    sb.append("    basicAlgorithm: ").append(toIndentedString(basicAlgorithm)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    secondaryWorkerConfig: ").append(toIndentedString(secondaryWorkerConfig)).append("\n");
    sb.append("    workerConfig: ").append(toIndentedString(workerConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("basicAlgorithm");
    openapiFields.add("id");
    openapiFields.add("labels");
    openapiFields.add("name");
    openapiFields.add("secondaryWorkerConfig");
    openapiFields.add("workerConfig");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutoscalingPolicy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutoscalingPolicy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoscalingPolicy is not found in the empty JSON string", AutoscalingPolicy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutoscalingPolicy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoscalingPolicy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `basicAlgorithm`
      if (jsonObj.get("basicAlgorithm") != null && !jsonObj.get("basicAlgorithm").isJsonNull()) {
        BasicAutoscalingAlgorithm.validateJsonElement(jsonObj.get("basicAlgorithm"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `secondaryWorkerConfig`
      if (jsonObj.get("secondaryWorkerConfig") != null && !jsonObj.get("secondaryWorkerConfig").isJsonNull()) {
        InstanceGroupAutoscalingPolicyConfig.validateJsonElement(jsonObj.get("secondaryWorkerConfig"));
      }
      // validate the optional field `workerConfig`
      if (jsonObj.get("workerConfig") != null && !jsonObj.get("workerConfig").isJsonNull()) {
        InstanceGroupAutoscalingPolicyConfig.validateJsonElement(jsonObj.get("workerConfig"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoscalingPolicy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoscalingPolicy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoscalingPolicy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoscalingPolicy.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoscalingPolicy>() {
           @Override
           public void write(JsonWriter out, AutoscalingPolicy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoscalingPolicy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutoscalingPolicy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutoscalingPolicy
   * @throws IOException if the JSON string is invalid with respect to AutoscalingPolicy
   */
  public static AutoscalingPolicy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoscalingPolicy.class);
  }

  /**
   * Convert an instance of AutoscalingPolicy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

