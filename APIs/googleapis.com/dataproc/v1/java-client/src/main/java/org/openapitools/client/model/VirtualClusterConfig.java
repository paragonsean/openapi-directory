/*
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AuxiliaryServicesConfig;
import org.openapitools.client.model.KubernetesClusterConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The Dataproc cluster config for a cluster that does not directly control the underlying compute resources, such as a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview).
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:49:50.925918-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VirtualClusterConfig {
  public static final String SERIALIZED_NAME_AUXILIARY_SERVICES_CONFIG = "auxiliaryServicesConfig";
  @SerializedName(SERIALIZED_NAME_AUXILIARY_SERVICES_CONFIG)
  private AuxiliaryServicesConfig auxiliaryServicesConfig;

  public static final String SERIALIZED_NAME_KUBERNETES_CLUSTER_CONFIG = "kubernetesClusterConfig";
  @SerializedName(SERIALIZED_NAME_KUBERNETES_CLUSTER_CONFIG)
  private KubernetesClusterConfig kubernetesClusterConfig;

  public static final String SERIALIZED_NAME_STAGING_BUCKET = "stagingBucket";
  @SerializedName(SERIALIZED_NAME_STAGING_BUCKET)
  private String stagingBucket;

  public VirtualClusterConfig() {
  }

  public VirtualClusterConfig auxiliaryServicesConfig(AuxiliaryServicesConfig auxiliaryServicesConfig) {
    this.auxiliaryServicesConfig = auxiliaryServicesConfig;
    return this;
  }

  /**
   * Get auxiliaryServicesConfig
   * @return auxiliaryServicesConfig
   */
  @javax.annotation.Nullable
  public AuxiliaryServicesConfig getAuxiliaryServicesConfig() {
    return auxiliaryServicesConfig;
  }

  public void setAuxiliaryServicesConfig(AuxiliaryServicesConfig auxiliaryServicesConfig) {
    this.auxiliaryServicesConfig = auxiliaryServicesConfig;
  }


  public VirtualClusterConfig kubernetesClusterConfig(KubernetesClusterConfig kubernetesClusterConfig) {
    this.kubernetesClusterConfig = kubernetesClusterConfig;
    return this;
  }

  /**
   * Get kubernetesClusterConfig
   * @return kubernetesClusterConfig
   */
  @javax.annotation.Nullable
  public KubernetesClusterConfig getKubernetesClusterConfig() {
    return kubernetesClusterConfig;
  }

  public void setKubernetesClusterConfig(KubernetesClusterConfig kubernetesClusterConfig) {
    this.kubernetesClusterConfig = kubernetesClusterConfig;
  }


  public VirtualClusterConfig stagingBucket(String stagingBucket) {
    this.stagingBucket = stagingBucket;
    return this;
  }

  /**
   * Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster&#39;s staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
   * @return stagingBucket
   */
  @javax.annotation.Nullable
  public String getStagingBucket() {
    return stagingBucket;
  }

  public void setStagingBucket(String stagingBucket) {
    this.stagingBucket = stagingBucket;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VirtualClusterConfig virtualClusterConfig = (VirtualClusterConfig) o;
    return Objects.equals(this.auxiliaryServicesConfig, virtualClusterConfig.auxiliaryServicesConfig) &&
        Objects.equals(this.kubernetesClusterConfig, virtualClusterConfig.kubernetesClusterConfig) &&
        Objects.equals(this.stagingBucket, virtualClusterConfig.stagingBucket);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auxiliaryServicesConfig, kubernetesClusterConfig, stagingBucket);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VirtualClusterConfig {\n");
    sb.append("    auxiliaryServicesConfig: ").append(toIndentedString(auxiliaryServicesConfig)).append("\n");
    sb.append("    kubernetesClusterConfig: ").append(toIndentedString(kubernetesClusterConfig)).append("\n");
    sb.append("    stagingBucket: ").append(toIndentedString(stagingBucket)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("auxiliaryServicesConfig");
    openapiFields.add("kubernetesClusterConfig");
    openapiFields.add("stagingBucket");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VirtualClusterConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VirtualClusterConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VirtualClusterConfig is not found in the empty JSON string", VirtualClusterConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VirtualClusterConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VirtualClusterConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `auxiliaryServicesConfig`
      if (jsonObj.get("auxiliaryServicesConfig") != null && !jsonObj.get("auxiliaryServicesConfig").isJsonNull()) {
        AuxiliaryServicesConfig.validateJsonElement(jsonObj.get("auxiliaryServicesConfig"));
      }
      // validate the optional field `kubernetesClusterConfig`
      if (jsonObj.get("kubernetesClusterConfig") != null && !jsonObj.get("kubernetesClusterConfig").isJsonNull()) {
        KubernetesClusterConfig.validateJsonElement(jsonObj.get("kubernetesClusterConfig"));
      }
      if ((jsonObj.get("stagingBucket") != null && !jsonObj.get("stagingBucket").isJsonNull()) && !jsonObj.get("stagingBucket").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stagingBucket` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stagingBucket").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VirtualClusterConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VirtualClusterConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VirtualClusterConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VirtualClusterConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<VirtualClusterConfig>() {
           @Override
           public void write(JsonWriter out, VirtualClusterConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VirtualClusterConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VirtualClusterConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VirtualClusterConfig
   * @throws IOException if the JSON string is invalid with respect to VirtualClusterConfig
   */
  public static VirtualClusterConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VirtualClusterConfig.class);
  }

  /**
   * Convert an instance of VirtualClusterConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

