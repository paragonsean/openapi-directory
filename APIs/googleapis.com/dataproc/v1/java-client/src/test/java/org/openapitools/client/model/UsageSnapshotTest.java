/*
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for UsageSnapshot
 */
public class UsageSnapshotTest {
    private final UsageSnapshot model = new UsageSnapshot();

    /**
     * Model tests for UsageSnapshot
     */
    @Test
    public void testUsageSnapshot() {
        // TODO: test UsageSnapshot
    }

    /**
     * Test the property 'acceleratorType'
     */
    @Test
    public void acceleratorTypeTest() {
        // TODO: test acceleratorType
    }

    /**
     * Test the property 'milliAccelerator'
     */
    @Test
    public void milliAcceleratorTest() {
        // TODO: test milliAccelerator
    }

    /**
     * Test the property 'milliDcu'
     */
    @Test
    public void milliDcuTest() {
        // TODO: test milliDcu
    }

    /**
     * Test the property 'milliDcuPremium'
     */
    @Test
    public void milliDcuPremiumTest() {
        // TODO: test milliDcuPremium
    }

    /**
     * Test the property 'shuffleStorageGb'
     */
    @Test
    public void shuffleStorageGbTest() {
        // TODO: test shuffleStorageGb
    }

    /**
     * Test the property 'shuffleStorageGbPremium'
     */
    @Test
    public void shuffleStorageGbPremiumTest() {
        // TODO: test shuffleStorageGbPremium
    }

    /**
     * Test the property 'snapshotTime'
     */
    @Test
    public void snapshotTimeTest() {
        // TODO: test snapshotTime
    }

}
