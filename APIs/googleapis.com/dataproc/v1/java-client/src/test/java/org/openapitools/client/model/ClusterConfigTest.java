/*
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AutoscalingConfig;
import org.openapitools.client.model.AuxiliaryNodeGroup;
import org.openapitools.client.model.DataprocMetricConfig;
import org.openapitools.client.model.EncryptionConfig;
import org.openapitools.client.model.EndpointConfig;
import org.openapitools.client.model.GceClusterConfig;
import org.openapitools.client.model.GkeClusterConfig;
import org.openapitools.client.model.InstanceGroupConfig;
import org.openapitools.client.model.LifecycleConfig;
import org.openapitools.client.model.MetastoreConfig;
import org.openapitools.client.model.NodeInitializationAction;
import org.openapitools.client.model.SecurityConfig;
import org.openapitools.client.model.SoftwareConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ClusterConfig
 */
public class ClusterConfigTest {
    private final ClusterConfig model = new ClusterConfig();

    /**
     * Model tests for ClusterConfig
     */
    @Test
    public void testClusterConfig() {
        // TODO: test ClusterConfig
    }

    /**
     * Test the property 'autoscalingConfig'
     */
    @Test
    public void autoscalingConfigTest() {
        // TODO: test autoscalingConfig
    }

    /**
     * Test the property 'auxiliaryNodeGroups'
     */
    @Test
    public void auxiliaryNodeGroupsTest() {
        // TODO: test auxiliaryNodeGroups
    }

    /**
     * Test the property 'configBucket'
     */
    @Test
    public void configBucketTest() {
        // TODO: test configBucket
    }

    /**
     * Test the property 'dataprocMetricConfig'
     */
    @Test
    public void dataprocMetricConfigTest() {
        // TODO: test dataprocMetricConfig
    }

    /**
     * Test the property 'encryptionConfig'
     */
    @Test
    public void encryptionConfigTest() {
        // TODO: test encryptionConfig
    }

    /**
     * Test the property 'endpointConfig'
     */
    @Test
    public void endpointConfigTest() {
        // TODO: test endpointConfig
    }

    /**
     * Test the property 'gceClusterConfig'
     */
    @Test
    public void gceClusterConfigTest() {
        // TODO: test gceClusterConfig
    }

    /**
     * Test the property 'gkeClusterConfig'
     */
    @Test
    public void gkeClusterConfigTest() {
        // TODO: test gkeClusterConfig
    }

    /**
     * Test the property 'initializationActions'
     */
    @Test
    public void initializationActionsTest() {
        // TODO: test initializationActions
    }

    /**
     * Test the property 'lifecycleConfig'
     */
    @Test
    public void lifecycleConfigTest() {
        // TODO: test lifecycleConfig
    }

    /**
     * Test the property 'masterConfig'
     */
    @Test
    public void masterConfigTest() {
        // TODO: test masterConfig
    }

    /**
     * Test the property 'metastoreConfig'
     */
    @Test
    public void metastoreConfigTest() {
        // TODO: test metastoreConfig
    }

    /**
     * Test the property 'secondaryWorkerConfig'
     */
    @Test
    public void secondaryWorkerConfigTest() {
        // TODO: test secondaryWorkerConfig
    }

    /**
     * Test the property 'securityConfig'
     */
    @Test
    public void securityConfigTest() {
        // TODO: test securityConfig
    }

    /**
     * Test the property 'softwareConfig'
     */
    @Test
    public void softwareConfigTest() {
        // TODO: test softwareConfig
    }

    /**
     * Test the property 'tempBucket'
     */
    @Test
    public void tempBucketTest() {
        // TODO: test tempBucket
    }

    /**
     * Test the property 'workerConfig'
     */
    @Test
    public void workerConfigTest() {
        // TODO: test workerConfig
    }

}
