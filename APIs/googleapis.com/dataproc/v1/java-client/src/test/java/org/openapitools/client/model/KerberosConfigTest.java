/*
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for KerberosConfig
 */
public class KerberosConfigTest {
    private final KerberosConfig model = new KerberosConfig();

    /**
     * Model tests for KerberosConfig
     */
    @Test
    public void testKerberosConfig() {
        // TODO: test KerberosConfig
    }

    /**
     * Test the property 'crossRealmTrustAdminServer'
     */
    @Test
    public void crossRealmTrustAdminServerTest() {
        // TODO: test crossRealmTrustAdminServer
    }

    /**
     * Test the property 'crossRealmTrustKdc'
     */
    @Test
    public void crossRealmTrustKdcTest() {
        // TODO: test crossRealmTrustKdc
    }

    /**
     * Test the property 'crossRealmTrustRealm'
     */
    @Test
    public void crossRealmTrustRealmTest() {
        // TODO: test crossRealmTrustRealm
    }

    /**
     * Test the property 'crossRealmTrustSharedPasswordUri'
     */
    @Test
    public void crossRealmTrustSharedPasswordUriTest() {
        // TODO: test crossRealmTrustSharedPasswordUri
    }

    /**
     * Test the property 'enableKerberos'
     */
    @Test
    public void enableKerberosTest() {
        // TODO: test enableKerberos
    }

    /**
     * Test the property 'kdcDbKeyUri'
     */
    @Test
    public void kdcDbKeyUriTest() {
        // TODO: test kdcDbKeyUri
    }

    /**
     * Test the property 'keyPasswordUri'
     */
    @Test
    public void keyPasswordUriTest() {
        // TODO: test keyPasswordUri
    }

    /**
     * Test the property 'keystorePasswordUri'
     */
    @Test
    public void keystorePasswordUriTest() {
        // TODO: test keystorePasswordUri
    }

    /**
     * Test the property 'keystoreUri'
     */
    @Test
    public void keystoreUriTest() {
        // TODO: test keystoreUri
    }

    /**
     * Test the property 'kmsKeyUri'
     */
    @Test
    public void kmsKeyUriTest() {
        // TODO: test kmsKeyUri
    }

    /**
     * Test the property 'realm'
     */
    @Test
    public void realmTest() {
        // TODO: test realm
    }

    /**
     * Test the property 'rootPrincipalPasswordUri'
     */
    @Test
    public void rootPrincipalPasswordUriTest() {
        // TODO: test rootPrincipalPasswordUri
    }

    /**
     * Test the property 'tgtLifetimeHours'
     */
    @Test
    public void tgtLifetimeHoursTest() {
        // TODO: test tgtLifetimeHours
    }

    /**
     * Test the property 'truststorePasswordUri'
     */
    @Test
    public void truststorePasswordUriTest() {
        // TODO: test truststorePasswordUri
    }

    /**
     * Test the property 'truststoreUri'
     */
    @Test
    public void truststoreUriTest() {
        // TODO: test truststoreUri
    }

}
