/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIYarnApplication.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIYarnApplication::OAIYarnApplication(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIYarnApplication::OAIYarnApplication() {
    this->initializeModel();
}

OAIYarnApplication::~OAIYarnApplication() {}

void OAIYarnApplication::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_progress_isSet = false;
    m_progress_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_tracking_url_isSet = false;
    m_tracking_url_isValid = false;
}

void OAIYarnApplication::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIYarnApplication::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_progress_isValid = ::OpenAPI::fromJsonValue(m_progress, json[QString("progress")]);
    m_progress_isSet = !json[QString("progress")].isNull() && m_progress_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_tracking_url_isValid = ::OpenAPI::fromJsonValue(m_tracking_url, json[QString("trackingUrl")]);
    m_tracking_url_isSet = !json[QString("trackingUrl")].isNull() && m_tracking_url_isValid;
}

QString OAIYarnApplication::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIYarnApplication::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_progress_isSet) {
        obj.insert(QString("progress"), ::OpenAPI::toJsonValue(m_progress));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_tracking_url_isSet) {
        obj.insert(QString("trackingUrl"), ::OpenAPI::toJsonValue(m_tracking_url));
    }
    return obj;
}

QString OAIYarnApplication::getName() const {
    return m_name;
}
void OAIYarnApplication::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIYarnApplication::is_name_Set() const{
    return m_name_isSet;
}

bool OAIYarnApplication::is_name_Valid() const{
    return m_name_isValid;
}

float OAIYarnApplication::getProgress() const {
    return m_progress;
}
void OAIYarnApplication::setProgress(const float &progress) {
    m_progress = progress;
    m_progress_isSet = true;
}

bool OAIYarnApplication::is_progress_Set() const{
    return m_progress_isSet;
}

bool OAIYarnApplication::is_progress_Valid() const{
    return m_progress_isValid;
}

QString OAIYarnApplication::getState() const {
    return m_state;
}
void OAIYarnApplication::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIYarnApplication::is_state_Set() const{
    return m_state_isSet;
}

bool OAIYarnApplication::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIYarnApplication::getTrackingUrl() const {
    return m_tracking_url;
}
void OAIYarnApplication::setTrackingUrl(const QString &tracking_url) {
    m_tracking_url = tracking_url;
    m_tracking_url_isSet = true;
}

bool OAIYarnApplication::is_tracking_url_Set() const{
    return m_tracking_url_isSet;
}

bool OAIYarnApplication::is_tracking_url_Valid() const{
    return m_tracking_url_isValid;
}

bool OAIYarnApplication::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIYarnApplication::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
