/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICluster.h
 *
 * Describes the identifying information, config, and status of a Dataproc cluster
 */

#ifndef OAICluster_H
#define OAICluster_H

#include <QJsonObject>

#include "OAIClusterConfig.h"
#include "OAIClusterMetrics.h"
#include "OAIClusterStatus.h"
#include "OAIVirtualClusterConfig.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClusterConfig;
class OAIClusterMetrics;
class OAIClusterStatus;
class OAIVirtualClusterConfig;

class OAICluster : public OAIObject {
public:
    OAICluster();
    OAICluster(QString json);
    ~OAICluster() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterName() const;
    void setClusterName(const QString &cluster_name);
    bool is_cluster_name_Set() const;
    bool is_cluster_name_Valid() const;

    QString getClusterUuid() const;
    void setClusterUuid(const QString &cluster_uuid);
    bool is_cluster_uuid_Set() const;
    bool is_cluster_uuid_Valid() const;

    OAIClusterConfig getConfig() const;
    void setConfig(const OAIClusterConfig &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIClusterMetrics getMetrics() const;
    void setMetrics(const OAIClusterMetrics &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    OAIClusterStatus getStatus() const;
    void setStatus(const OAIClusterStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIClusterStatus> getStatusHistory() const;
    void setStatusHistory(const QList<OAIClusterStatus> &status_history);
    bool is_status_history_Set() const;
    bool is_status_history_Valid() const;

    OAIVirtualClusterConfig getVirtualClusterConfig() const;
    void setVirtualClusterConfig(const OAIVirtualClusterConfig &virtual_cluster_config);
    bool is_virtual_cluster_config_Set() const;
    bool is_virtual_cluster_config_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_name;
    bool m_cluster_name_isSet;
    bool m_cluster_name_isValid;

    QString m_cluster_uuid;
    bool m_cluster_uuid_isSet;
    bool m_cluster_uuid_isValid;

    OAIClusterConfig m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIClusterMetrics m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    OAIClusterStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIClusterStatus> m_status_history;
    bool m_status_history_isSet;
    bool m_status_history_isValid;

    OAIVirtualClusterConfig m_virtual_cluster_config;
    bool m_virtual_cluster_config_isSet;
    bool m_virtual_cluster_config_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICluster)

#endif // OAICluster_H
