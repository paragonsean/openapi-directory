/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuxiliaryNodeGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuxiliaryNodeGroup::OAIAuxiliaryNodeGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuxiliaryNodeGroup::OAIAuxiliaryNodeGroup() {
    this->initializeModel();
}

OAIAuxiliaryNodeGroup::~OAIAuxiliaryNodeGroup() {}

void OAIAuxiliaryNodeGroup::initializeModel() {

    m_node_group_isSet = false;
    m_node_group_isValid = false;

    m_node_group_id_isSet = false;
    m_node_group_id_isValid = false;
}

void OAIAuxiliaryNodeGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuxiliaryNodeGroup::fromJsonObject(QJsonObject json) {

    m_node_group_isValid = ::OpenAPI::fromJsonValue(m_node_group, json[QString("nodeGroup")]);
    m_node_group_isSet = !json[QString("nodeGroup")].isNull() && m_node_group_isValid;

    m_node_group_id_isValid = ::OpenAPI::fromJsonValue(m_node_group_id, json[QString("nodeGroupId")]);
    m_node_group_id_isSet = !json[QString("nodeGroupId")].isNull() && m_node_group_id_isValid;
}

QString OAIAuxiliaryNodeGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuxiliaryNodeGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_node_group.isSet()) {
        obj.insert(QString("nodeGroup"), ::OpenAPI::toJsonValue(m_node_group));
    }
    if (m_node_group_id_isSet) {
        obj.insert(QString("nodeGroupId"), ::OpenAPI::toJsonValue(m_node_group_id));
    }
    return obj;
}

OAINodeGroup OAIAuxiliaryNodeGroup::getNodeGroup() const {
    return m_node_group;
}
void OAIAuxiliaryNodeGroup::setNodeGroup(const OAINodeGroup &node_group) {
    m_node_group = node_group;
    m_node_group_isSet = true;
}

bool OAIAuxiliaryNodeGroup::is_node_group_Set() const{
    return m_node_group_isSet;
}

bool OAIAuxiliaryNodeGroup::is_node_group_Valid() const{
    return m_node_group_isValid;
}

QString OAIAuxiliaryNodeGroup::getNodeGroupId() const {
    return m_node_group_id;
}
void OAIAuxiliaryNodeGroup::setNodeGroupId(const QString &node_group_id) {
    m_node_group_id = node_group_id;
    m_node_group_id_isSet = true;
}

bool OAIAuxiliaryNodeGroup::is_node_group_id_Set() const{
    return m_node_group_id_isSet;
}

bool OAIAuxiliaryNodeGroup::is_node_group_id_Valid() const{
    return m_node_group_id_isValid;
}

bool OAIAuxiliaryNodeGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_node_group.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_node_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuxiliaryNodeGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
