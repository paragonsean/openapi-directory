/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJupyterConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJupyterConfig::OAIJupyterConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJupyterConfig::OAIJupyterConfig() {
    this->initializeModel();
}

OAIJupyterConfig::~OAIJupyterConfig() {}

void OAIJupyterConfig::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_kernel_isSet = false;
    m_kernel_isValid = false;
}

void OAIJupyterConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJupyterConfig::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_kernel_isValid = ::OpenAPI::fromJsonValue(m_kernel, json[QString("kernel")]);
    m_kernel_isSet = !json[QString("kernel")].isNull() && m_kernel_isValid;
}

QString OAIJupyterConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJupyterConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_kernel_isSet) {
        obj.insert(QString("kernel"), ::OpenAPI::toJsonValue(m_kernel));
    }
    return obj;
}

QString OAIJupyterConfig::getDisplayName() const {
    return m_display_name;
}
void OAIJupyterConfig::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIJupyterConfig::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIJupyterConfig::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIJupyterConfig::getKernel() const {
    return m_kernel;
}
void OAIJupyterConfig::setKernel(const QString &kernel) {
    m_kernel = kernel;
    m_kernel_isSet = true;
}

bool OAIJupyterConfig::is_kernel_Set() const{
    return m_kernel_isSet;
}

bool OAIJupyterConfig::is_kernel_Valid() const{
    return m_kernel_isValid;
}

bool OAIJupyterConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kernel_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJupyterConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
