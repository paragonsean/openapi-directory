/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVirtualClusterConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVirtualClusterConfig::OAIVirtualClusterConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVirtualClusterConfig::OAIVirtualClusterConfig() {
    this->initializeModel();
}

OAIVirtualClusterConfig::~OAIVirtualClusterConfig() {}

void OAIVirtualClusterConfig::initializeModel() {

    m_auxiliary_services_config_isSet = false;
    m_auxiliary_services_config_isValid = false;

    m_kubernetes_cluster_config_isSet = false;
    m_kubernetes_cluster_config_isValid = false;

    m_staging_bucket_isSet = false;
    m_staging_bucket_isValid = false;
}

void OAIVirtualClusterConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVirtualClusterConfig::fromJsonObject(QJsonObject json) {

    m_auxiliary_services_config_isValid = ::OpenAPI::fromJsonValue(m_auxiliary_services_config, json[QString("auxiliaryServicesConfig")]);
    m_auxiliary_services_config_isSet = !json[QString("auxiliaryServicesConfig")].isNull() && m_auxiliary_services_config_isValid;

    m_kubernetes_cluster_config_isValid = ::OpenAPI::fromJsonValue(m_kubernetes_cluster_config, json[QString("kubernetesClusterConfig")]);
    m_kubernetes_cluster_config_isSet = !json[QString("kubernetesClusterConfig")].isNull() && m_kubernetes_cluster_config_isValid;

    m_staging_bucket_isValid = ::OpenAPI::fromJsonValue(m_staging_bucket, json[QString("stagingBucket")]);
    m_staging_bucket_isSet = !json[QString("stagingBucket")].isNull() && m_staging_bucket_isValid;
}

QString OAIVirtualClusterConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVirtualClusterConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_auxiliary_services_config.isSet()) {
        obj.insert(QString("auxiliaryServicesConfig"), ::OpenAPI::toJsonValue(m_auxiliary_services_config));
    }
    if (m_kubernetes_cluster_config.isSet()) {
        obj.insert(QString("kubernetesClusterConfig"), ::OpenAPI::toJsonValue(m_kubernetes_cluster_config));
    }
    if (m_staging_bucket_isSet) {
        obj.insert(QString("stagingBucket"), ::OpenAPI::toJsonValue(m_staging_bucket));
    }
    return obj;
}

OAIAuxiliaryServicesConfig OAIVirtualClusterConfig::getAuxiliaryServicesConfig() const {
    return m_auxiliary_services_config;
}
void OAIVirtualClusterConfig::setAuxiliaryServicesConfig(const OAIAuxiliaryServicesConfig &auxiliary_services_config) {
    m_auxiliary_services_config = auxiliary_services_config;
    m_auxiliary_services_config_isSet = true;
}

bool OAIVirtualClusterConfig::is_auxiliary_services_config_Set() const{
    return m_auxiliary_services_config_isSet;
}

bool OAIVirtualClusterConfig::is_auxiliary_services_config_Valid() const{
    return m_auxiliary_services_config_isValid;
}

OAIKubernetesClusterConfig OAIVirtualClusterConfig::getKubernetesClusterConfig() const {
    return m_kubernetes_cluster_config;
}
void OAIVirtualClusterConfig::setKubernetesClusterConfig(const OAIKubernetesClusterConfig &kubernetes_cluster_config) {
    m_kubernetes_cluster_config = kubernetes_cluster_config;
    m_kubernetes_cluster_config_isSet = true;
}

bool OAIVirtualClusterConfig::is_kubernetes_cluster_config_Set() const{
    return m_kubernetes_cluster_config_isSet;
}

bool OAIVirtualClusterConfig::is_kubernetes_cluster_config_Valid() const{
    return m_kubernetes_cluster_config_isValid;
}

QString OAIVirtualClusterConfig::getStagingBucket() const {
    return m_staging_bucket;
}
void OAIVirtualClusterConfig::setStagingBucket(const QString &staging_bucket) {
    m_staging_bucket = staging_bucket;
    m_staging_bucket_isSet = true;
}

bool OAIVirtualClusterConfig::is_staging_bucket_Set() const{
    return m_staging_bucket_isSet;
}

bool OAIVirtualClusterConfig::is_staging_bucket_Valid() const{
    return m_staging_bucket_isValid;
}

bool OAIVirtualClusterConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auxiliary_services_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_kubernetes_cluster_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_staging_bucket_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVirtualClusterConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
