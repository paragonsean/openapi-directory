/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsageSnapshot.h
 *
 * The usage snapshot represents the resources consumed by a workload at a specified time.
 */

#ifndef OAIUsageSnapshot_H
#define OAIUsageSnapshot_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUsageSnapshot : public OAIObject {
public:
    OAIUsageSnapshot();
    OAIUsageSnapshot(QString json);
    ~OAIUsageSnapshot() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcceleratorType() const;
    void setAcceleratorType(const QString &accelerator_type);
    bool is_accelerator_type_Set() const;
    bool is_accelerator_type_Valid() const;

    QString getMilliAccelerator() const;
    void setMilliAccelerator(const QString &milli_accelerator);
    bool is_milli_accelerator_Set() const;
    bool is_milli_accelerator_Valid() const;

    QString getMilliDcu() const;
    void setMilliDcu(const QString &milli_dcu);
    bool is_milli_dcu_Set() const;
    bool is_milli_dcu_Valid() const;

    QString getMilliDcuPremium() const;
    void setMilliDcuPremium(const QString &milli_dcu_premium);
    bool is_milli_dcu_premium_Set() const;
    bool is_milli_dcu_premium_Valid() const;

    QString getShuffleStorageGb() const;
    void setShuffleStorageGb(const QString &shuffle_storage_gb);
    bool is_shuffle_storage_gb_Set() const;
    bool is_shuffle_storage_gb_Valid() const;

    QString getShuffleStorageGbPremium() const;
    void setShuffleStorageGbPremium(const QString &shuffle_storage_gb_premium);
    bool is_shuffle_storage_gb_premium_Set() const;
    bool is_shuffle_storage_gb_premium_Valid() const;

    QString getSnapshotTime() const;
    void setSnapshotTime(const QString &snapshot_time);
    bool is_snapshot_time_Set() const;
    bool is_snapshot_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_accelerator_type;
    bool m_accelerator_type_isSet;
    bool m_accelerator_type_isValid;

    QString m_milli_accelerator;
    bool m_milli_accelerator_isSet;
    bool m_milli_accelerator_isValid;

    QString m_milli_dcu;
    bool m_milli_dcu_isSet;
    bool m_milli_dcu_isValid;

    QString m_milli_dcu_premium;
    bool m_milli_dcu_premium_isSet;
    bool m_milli_dcu_premium_isValid;

    QString m_shuffle_storage_gb;
    bool m_shuffle_storage_gb_isSet;
    bool m_shuffle_storage_gb_isValid;

    QString m_shuffle_storage_gb_premium;
    bool m_shuffle_storage_gb_premium_isSet;
    bool m_shuffle_storage_gb_premium_isValid;

    QString m_snapshot_time;
    bool m_snapshot_time_isSet;
    bool m_snapshot_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsageSnapshot)

#endif // OAIUsageSnapshot_H
