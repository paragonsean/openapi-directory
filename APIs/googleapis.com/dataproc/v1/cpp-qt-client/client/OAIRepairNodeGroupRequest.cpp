/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRepairNodeGroupRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRepairNodeGroupRequest::OAIRepairNodeGroupRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRepairNodeGroupRequest::OAIRepairNodeGroupRequest() {
    this->initializeModel();
}

OAIRepairNodeGroupRequest::~OAIRepairNodeGroupRequest() {}

void OAIRepairNodeGroupRequest::initializeModel() {

    m_instance_names_isSet = false;
    m_instance_names_isValid = false;

    m_repair_action_isSet = false;
    m_repair_action_isValid = false;

    m_request_id_isSet = false;
    m_request_id_isValid = false;
}

void OAIRepairNodeGroupRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRepairNodeGroupRequest::fromJsonObject(QJsonObject json) {

    m_instance_names_isValid = ::OpenAPI::fromJsonValue(m_instance_names, json[QString("instanceNames")]);
    m_instance_names_isSet = !json[QString("instanceNames")].isNull() && m_instance_names_isValid;

    m_repair_action_isValid = ::OpenAPI::fromJsonValue(m_repair_action, json[QString("repairAction")]);
    m_repair_action_isSet = !json[QString("repairAction")].isNull() && m_repair_action_isValid;

    m_request_id_isValid = ::OpenAPI::fromJsonValue(m_request_id, json[QString("requestId")]);
    m_request_id_isSet = !json[QString("requestId")].isNull() && m_request_id_isValid;
}

QString OAIRepairNodeGroupRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRepairNodeGroupRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_names.size() > 0) {
        obj.insert(QString("instanceNames"), ::OpenAPI::toJsonValue(m_instance_names));
    }
    if (m_repair_action_isSet) {
        obj.insert(QString("repairAction"), ::OpenAPI::toJsonValue(m_repair_action));
    }
    if (m_request_id_isSet) {
        obj.insert(QString("requestId"), ::OpenAPI::toJsonValue(m_request_id));
    }
    return obj;
}

QList<QString> OAIRepairNodeGroupRequest::getInstanceNames() const {
    return m_instance_names;
}
void OAIRepairNodeGroupRequest::setInstanceNames(const QList<QString> &instance_names) {
    m_instance_names = instance_names;
    m_instance_names_isSet = true;
}

bool OAIRepairNodeGroupRequest::is_instance_names_Set() const{
    return m_instance_names_isSet;
}

bool OAIRepairNodeGroupRequest::is_instance_names_Valid() const{
    return m_instance_names_isValid;
}

QString OAIRepairNodeGroupRequest::getRepairAction() const {
    return m_repair_action;
}
void OAIRepairNodeGroupRequest::setRepairAction(const QString &repair_action) {
    m_repair_action = repair_action;
    m_repair_action_isSet = true;
}

bool OAIRepairNodeGroupRequest::is_repair_action_Set() const{
    return m_repair_action_isSet;
}

bool OAIRepairNodeGroupRequest::is_repair_action_Valid() const{
    return m_repair_action_isValid;
}

QString OAIRepairNodeGroupRequest::getRequestId() const {
    return m_request_id;
}
void OAIRepairNodeGroupRequest::setRequestId(const QString &request_id) {
    m_request_id = request_id;
    m_request_id_isSet = true;
}

bool OAIRepairNodeGroupRequest::is_request_id_Set() const{
    return m_request_id_isSet;
}

bool OAIRepairNodeGroupRequest::is_request_id_Valid() const{
    return m_request_id_isValid;
}

bool OAIRepairNodeGroupRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_repair_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRepairNodeGroupRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
