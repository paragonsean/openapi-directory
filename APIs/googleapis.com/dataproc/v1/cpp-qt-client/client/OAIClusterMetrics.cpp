/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterMetrics::OAIClusterMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterMetrics::OAIClusterMetrics() {
    this->initializeModel();
}

OAIClusterMetrics::~OAIClusterMetrics() {}

void OAIClusterMetrics::initializeModel() {

    m_hdfs_metrics_isSet = false;
    m_hdfs_metrics_isValid = false;

    m_yarn_metrics_isSet = false;
    m_yarn_metrics_isValid = false;
}

void OAIClusterMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterMetrics::fromJsonObject(QJsonObject json) {

    m_hdfs_metrics_isValid = ::OpenAPI::fromJsonValue(m_hdfs_metrics, json[QString("hdfsMetrics")]);
    m_hdfs_metrics_isSet = !json[QString("hdfsMetrics")].isNull() && m_hdfs_metrics_isValid;

    m_yarn_metrics_isValid = ::OpenAPI::fromJsonValue(m_yarn_metrics, json[QString("yarnMetrics")]);
    m_yarn_metrics_isSet = !json[QString("yarnMetrics")].isNull() && m_yarn_metrics_isValid;
}

QString OAIClusterMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_hdfs_metrics.size() > 0) {
        obj.insert(QString("hdfsMetrics"), ::OpenAPI::toJsonValue(m_hdfs_metrics));
    }
    if (m_yarn_metrics.size() > 0) {
        obj.insert(QString("yarnMetrics"), ::OpenAPI::toJsonValue(m_yarn_metrics));
    }
    return obj;
}

QMap<QString, QString> OAIClusterMetrics::getHdfsMetrics() const {
    return m_hdfs_metrics;
}
void OAIClusterMetrics::setHdfsMetrics(const QMap<QString, QString> &hdfs_metrics) {
    m_hdfs_metrics = hdfs_metrics;
    m_hdfs_metrics_isSet = true;
}

bool OAIClusterMetrics::is_hdfs_metrics_Set() const{
    return m_hdfs_metrics_isSet;
}

bool OAIClusterMetrics::is_hdfs_metrics_Valid() const{
    return m_hdfs_metrics_isValid;
}

QMap<QString, QString> OAIClusterMetrics::getYarnMetrics() const {
    return m_yarn_metrics;
}
void OAIClusterMetrics::setYarnMetrics(const QMap<QString, QString> &yarn_metrics) {
    m_yarn_metrics = yarn_metrics;
    m_yarn_metrics_isSet = true;
}

bool OAIClusterMetrics::is_yarn_metrics_Set() const{
    return m_yarn_metrics_isSet;
}

bool OAIClusterMetrics::is_yarn_metrics_Valid() const{
    return m_yarn_metrics_isValid;
}

bool OAIClusterMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hdfs_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_yarn_metrics.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
