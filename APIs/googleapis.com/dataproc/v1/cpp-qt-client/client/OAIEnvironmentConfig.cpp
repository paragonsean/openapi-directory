/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnvironmentConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnvironmentConfig::OAIEnvironmentConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnvironmentConfig::OAIEnvironmentConfig() {
    this->initializeModel();
}

OAIEnvironmentConfig::~OAIEnvironmentConfig() {}

void OAIEnvironmentConfig::initializeModel() {

    m_execution_config_isSet = false;
    m_execution_config_isValid = false;

    m_peripherals_config_isSet = false;
    m_peripherals_config_isValid = false;
}

void OAIEnvironmentConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnvironmentConfig::fromJsonObject(QJsonObject json) {

    m_execution_config_isValid = ::OpenAPI::fromJsonValue(m_execution_config, json[QString("executionConfig")]);
    m_execution_config_isSet = !json[QString("executionConfig")].isNull() && m_execution_config_isValid;

    m_peripherals_config_isValid = ::OpenAPI::fromJsonValue(m_peripherals_config, json[QString("peripheralsConfig")]);
    m_peripherals_config_isSet = !json[QString("peripheralsConfig")].isNull() && m_peripherals_config_isValid;
}

QString OAIEnvironmentConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnvironmentConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_execution_config.isSet()) {
        obj.insert(QString("executionConfig"), ::OpenAPI::toJsonValue(m_execution_config));
    }
    if (m_peripherals_config.isSet()) {
        obj.insert(QString("peripheralsConfig"), ::OpenAPI::toJsonValue(m_peripherals_config));
    }
    return obj;
}

OAIExecutionConfig OAIEnvironmentConfig::getExecutionConfig() const {
    return m_execution_config;
}
void OAIEnvironmentConfig::setExecutionConfig(const OAIExecutionConfig &execution_config) {
    m_execution_config = execution_config;
    m_execution_config_isSet = true;
}

bool OAIEnvironmentConfig::is_execution_config_Set() const{
    return m_execution_config_isSet;
}

bool OAIEnvironmentConfig::is_execution_config_Valid() const{
    return m_execution_config_isValid;
}

OAIPeripheralsConfig OAIEnvironmentConfig::getPeripheralsConfig() const {
    return m_peripherals_config;
}
void OAIEnvironmentConfig::setPeripheralsConfig(const OAIPeripheralsConfig &peripherals_config) {
    m_peripherals_config = peripherals_config;
    m_peripherals_config_isSet = true;
}

bool OAIEnvironmentConfig::is_peripherals_config_Set() const{
    return m_peripherals_config_isSet;
}

bool OAIEnvironmentConfig::is_peripherals_config_Valid() const{
    return m_peripherals_config_isValid;
}

bool OAIEnvironmentConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_execution_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_peripherals_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnvironmentConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
