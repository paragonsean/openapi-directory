/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINodeGroupOperationMetadata.h
 *
 * Metadata describing the node group operation.
 */

#ifndef OAINodeGroupOperationMetadata_H
#define OAINodeGroupOperationMetadata_H

#include <QJsonObject>

#include "OAIClusterOperationStatus.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClusterOperationStatus;

class OAINodeGroupOperationMetadata : public OAIObject {
public:
    OAINodeGroupOperationMetadata();
    OAINodeGroupOperationMetadata(QString json);
    ~OAINodeGroupOperationMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterUuid() const;
    void setClusterUuid(const QString &cluster_uuid);
    bool is_cluster_uuid_Set() const;
    bool is_cluster_uuid_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getNodeGroupId() const;
    void setNodeGroupId(const QString &node_group_id);
    bool is_node_group_id_Set() const;
    bool is_node_group_id_Valid() const;

    QString getOperationType() const;
    void setOperationType(const QString &operation_type);
    bool is_operation_type_Set() const;
    bool is_operation_type_Valid() const;

    OAIClusterOperationStatus getStatus() const;
    void setStatus(const OAIClusterOperationStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIClusterOperationStatus> getStatusHistory() const;
    void setStatusHistory(const QList<OAIClusterOperationStatus> &status_history);
    bool is_status_history_Set() const;
    bool is_status_history_Valid() const;

    QList<QString> getWarnings() const;
    void setWarnings(const QList<QString> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_uuid;
    bool m_cluster_uuid_isSet;
    bool m_cluster_uuid_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_node_group_id;
    bool m_node_group_id_isSet;
    bool m_node_group_id_isValid;

    QString m_operation_type;
    bool m_operation_type_isSet;
    bool m_operation_type_isValid;

    OAIClusterOperationStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIClusterOperationStatus> m_status_history;
    bool m_status_history_isSet;
    bool m_status_history_isValid;

    QList<QString> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINodeGroupOperationMetadata)

#endif // OAINodeGroupOperationMetadata_H
