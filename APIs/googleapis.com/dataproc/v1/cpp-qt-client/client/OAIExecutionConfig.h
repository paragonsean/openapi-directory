/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExecutionConfig.h
 *
 * Execution configuration for a workload.
 */

#ifndef OAIExecutionConfig_H
#define OAIExecutionConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExecutionConfig : public OAIObject {
public:
    OAIExecutionConfig();
    OAIExecutionConfig(QString json);
    ~OAIExecutionConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIdleTtl() const;
    void setIdleTtl(const QString &idle_ttl);
    bool is_idle_ttl_Set() const;
    bool is_idle_ttl_Valid() const;

    QString getKmsKey() const;
    void setKmsKey(const QString &kms_key);
    bool is_kms_key_Set() const;
    bool is_kms_key_Valid() const;

    QList<QString> getNetworkTags() const;
    void setNetworkTags(const QList<QString> &network_tags);
    bool is_network_tags_Set() const;
    bool is_network_tags_Valid() const;

    QString getNetworkUri() const;
    void setNetworkUri(const QString &network_uri);
    bool is_network_uri_Set() const;
    bool is_network_uri_Valid() const;

    QString getServiceAccount() const;
    void setServiceAccount(const QString &service_account);
    bool is_service_account_Set() const;
    bool is_service_account_Valid() const;

    QString getStagingBucket() const;
    void setStagingBucket(const QString &staging_bucket);
    bool is_staging_bucket_Set() const;
    bool is_staging_bucket_Valid() const;

    QString getSubnetworkUri() const;
    void setSubnetworkUri(const QString &subnetwork_uri);
    bool is_subnetwork_uri_Set() const;
    bool is_subnetwork_uri_Valid() const;

    QString getTtl() const;
    void setTtl(const QString &ttl);
    bool is_ttl_Set() const;
    bool is_ttl_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_idle_ttl;
    bool m_idle_ttl_isSet;
    bool m_idle_ttl_isValid;

    QString m_kms_key;
    bool m_kms_key_isSet;
    bool m_kms_key_isValid;

    QList<QString> m_network_tags;
    bool m_network_tags_isSet;
    bool m_network_tags_isValid;

    QString m_network_uri;
    bool m_network_uri_isSet;
    bool m_network_uri_isValid;

    QString m_service_account;
    bool m_service_account_isSet;
    bool m_service_account_isValid;

    QString m_staging_bucket;
    bool m_staging_bucket_isSet;
    bool m_staging_bucket_isValid;

    QString m_subnetwork_uri;
    bool m_subnetwork_uri_isSet;
    bool m_subnetwork_uri_isValid;

    QString m_ttl;
    bool m_ttl_isSet;
    bool m_ttl_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExecutionConfig)

#endif // OAIExecutionConfig_H
