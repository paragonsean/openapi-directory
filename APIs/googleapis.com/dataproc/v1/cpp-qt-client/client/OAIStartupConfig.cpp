/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStartupConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStartupConfig::OAIStartupConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStartupConfig::OAIStartupConfig() {
    this->initializeModel();
}

OAIStartupConfig::~OAIStartupConfig() {}

void OAIStartupConfig::initializeModel() {

    m_required_registration_fraction_isSet = false;
    m_required_registration_fraction_isValid = false;
}

void OAIStartupConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStartupConfig::fromJsonObject(QJsonObject json) {

    m_required_registration_fraction_isValid = ::OpenAPI::fromJsonValue(m_required_registration_fraction, json[QString("requiredRegistrationFraction")]);
    m_required_registration_fraction_isSet = !json[QString("requiredRegistrationFraction")].isNull() && m_required_registration_fraction_isValid;
}

QString OAIStartupConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStartupConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_required_registration_fraction_isSet) {
        obj.insert(QString("requiredRegistrationFraction"), ::OpenAPI::toJsonValue(m_required_registration_fraction));
    }
    return obj;
}

double OAIStartupConfig::getRequiredRegistrationFraction() const {
    return m_required_registration_fraction;
}
void OAIStartupConfig::setRequiredRegistrationFraction(const double &required_registration_fraction) {
    m_required_registration_fraction = required_registration_fraction;
    m_required_registration_fraction_isSet = true;
}

bool OAIStartupConfig::is_required_registration_fraction_Set() const{
    return m_required_registration_fraction_isSet;
}

bool OAIStartupConfig::is_required_registration_fraction_Valid() const{
    return m_required_registration_fraction_isValid;
}

bool OAIStartupConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_required_registration_fraction_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStartupConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
