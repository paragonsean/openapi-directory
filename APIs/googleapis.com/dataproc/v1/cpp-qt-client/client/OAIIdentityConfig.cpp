/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIdentityConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIdentityConfig::OAIIdentityConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIdentityConfig::OAIIdentityConfig() {
    this->initializeModel();
}

OAIIdentityConfig::~OAIIdentityConfig() {}

void OAIIdentityConfig::initializeModel() {

    m_user_service_account_mapping_isSet = false;
    m_user_service_account_mapping_isValid = false;
}

void OAIIdentityConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIdentityConfig::fromJsonObject(QJsonObject json) {

    m_user_service_account_mapping_isValid = ::OpenAPI::fromJsonValue(m_user_service_account_mapping, json[QString("userServiceAccountMapping")]);
    m_user_service_account_mapping_isSet = !json[QString("userServiceAccountMapping")].isNull() && m_user_service_account_mapping_isValid;
}

QString OAIIdentityConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIdentityConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_user_service_account_mapping.size() > 0) {
        obj.insert(QString("userServiceAccountMapping"), ::OpenAPI::toJsonValue(m_user_service_account_mapping));
    }
    return obj;
}

QMap<QString, QString> OAIIdentityConfig::getUserServiceAccountMapping() const {
    return m_user_service_account_mapping;
}
void OAIIdentityConfig::setUserServiceAccountMapping(const QMap<QString, QString> &user_service_account_mapping) {
    m_user_service_account_mapping = user_service_account_mapping;
    m_user_service_account_mapping_isSet = true;
}

bool OAIIdentityConfig::is_user_service_account_mapping_Set() const{
    return m_user_service_account_mapping_isSet;
}

bool OAIIdentityConfig::is_user_service_account_mapping_Valid() const{
    return m_user_service_account_mapping_isValid;
}

bool OAIIdentityConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_service_account_mapping.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIdentityConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
