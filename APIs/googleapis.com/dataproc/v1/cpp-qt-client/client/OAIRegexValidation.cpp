/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRegexValidation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRegexValidation::OAIRegexValidation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRegexValidation::OAIRegexValidation() {
    this->initializeModel();
}

OAIRegexValidation::~OAIRegexValidation() {}

void OAIRegexValidation::initializeModel() {

    m_regexes_isSet = false;
    m_regexes_isValid = false;
}

void OAIRegexValidation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRegexValidation::fromJsonObject(QJsonObject json) {

    m_regexes_isValid = ::OpenAPI::fromJsonValue(m_regexes, json[QString("regexes")]);
    m_regexes_isSet = !json[QString("regexes")].isNull() && m_regexes_isValid;
}

QString OAIRegexValidation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRegexValidation::asJsonObject() const {
    QJsonObject obj;
    if (m_regexes.size() > 0) {
        obj.insert(QString("regexes"), ::OpenAPI::toJsonValue(m_regexes));
    }
    return obj;
}

QList<QString> OAIRegexValidation::getRegexes() const {
    return m_regexes;
}
void OAIRegexValidation::setRegexes(const QList<QString> &regexes) {
    m_regexes = regexes;
    m_regexes_isSet = true;
}

bool OAIRegexValidation::is_regexes_Set() const{
    return m_regexes_isSet;
}

bool OAIRegexValidation::is_regexes_Valid() const{
    return m_regexes_isValid;
}

bool OAIRegexValidation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_regexes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRegexValidation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
