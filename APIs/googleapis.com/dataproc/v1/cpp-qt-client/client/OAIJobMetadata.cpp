/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobMetadata::OAIJobMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobMetadata::OAIJobMetadata() {
    this->initializeModel();
}

OAIJobMetadata::~OAIJobMetadata() {}

void OAIJobMetadata::initializeModel() {

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_operation_type_isSet = false;
    m_operation_type_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIJobMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobMetadata::fromJsonObject(QJsonObject json) {

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("jobId")]);
    m_job_id_isSet = !json[QString("jobId")].isNull() && m_job_id_isValid;

    m_operation_type_isValid = ::OpenAPI::fromJsonValue(m_operation_type, json[QString("operationType")]);
    m_operation_type_isSet = !json[QString("operationType")].isNull() && m_operation_type_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIJobMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_job_id_isSet) {
        obj.insert(QString("jobId"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_operation_type_isSet) {
        obj.insert(QString("operationType"), ::OpenAPI::toJsonValue(m_operation_type));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAIJobMetadata::getJobId() const {
    return m_job_id;
}
void OAIJobMetadata::setJobId(const QString &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIJobMetadata::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIJobMetadata::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIJobMetadata::getOperationType() const {
    return m_operation_type;
}
void OAIJobMetadata::setOperationType(const QString &operation_type) {
    m_operation_type = operation_type;
    m_operation_type_isSet = true;
}

bool OAIJobMetadata::is_operation_type_Set() const{
    return m_operation_type_isSet;
}

bool OAIJobMetadata::is_operation_type_Valid() const{
    return m_operation_type_isValid;
}

QString OAIJobMetadata::getStartTime() const {
    return m_start_time;
}
void OAIJobMetadata::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIJobMetadata::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIJobMetadata::is_start_time_Valid() const{
    return m_start_time_isValid;
}

OAIJobStatus OAIJobMetadata::getStatus() const {
    return m_status;
}
void OAIJobMetadata::setStatus(const OAIJobStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIJobMetadata::is_status_Set() const{
    return m_status_isSet;
}

bool OAIJobMetadata::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIJobMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
