/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManagedGroupConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManagedGroupConfig::OAIManagedGroupConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManagedGroupConfig::OAIManagedGroupConfig() {
    this->initializeModel();
}

OAIManagedGroupConfig::~OAIManagedGroupConfig() {}

void OAIManagedGroupConfig::initializeModel() {

    m_instance_group_manager_name_isSet = false;
    m_instance_group_manager_name_isValid = false;

    m_instance_group_manager_uri_isSet = false;
    m_instance_group_manager_uri_isValid = false;

    m_instance_template_name_isSet = false;
    m_instance_template_name_isValid = false;
}

void OAIManagedGroupConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManagedGroupConfig::fromJsonObject(QJsonObject json) {

    m_instance_group_manager_name_isValid = ::OpenAPI::fromJsonValue(m_instance_group_manager_name, json[QString("instanceGroupManagerName")]);
    m_instance_group_manager_name_isSet = !json[QString("instanceGroupManagerName")].isNull() && m_instance_group_manager_name_isValid;

    m_instance_group_manager_uri_isValid = ::OpenAPI::fromJsonValue(m_instance_group_manager_uri, json[QString("instanceGroupManagerUri")]);
    m_instance_group_manager_uri_isSet = !json[QString("instanceGroupManagerUri")].isNull() && m_instance_group_manager_uri_isValid;

    m_instance_template_name_isValid = ::OpenAPI::fromJsonValue(m_instance_template_name, json[QString("instanceTemplateName")]);
    m_instance_template_name_isSet = !json[QString("instanceTemplateName")].isNull() && m_instance_template_name_isValid;
}

QString OAIManagedGroupConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManagedGroupConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_group_manager_name_isSet) {
        obj.insert(QString("instanceGroupManagerName"), ::OpenAPI::toJsonValue(m_instance_group_manager_name));
    }
    if (m_instance_group_manager_uri_isSet) {
        obj.insert(QString("instanceGroupManagerUri"), ::OpenAPI::toJsonValue(m_instance_group_manager_uri));
    }
    if (m_instance_template_name_isSet) {
        obj.insert(QString("instanceTemplateName"), ::OpenAPI::toJsonValue(m_instance_template_name));
    }
    return obj;
}

QString OAIManagedGroupConfig::getInstanceGroupManagerName() const {
    return m_instance_group_manager_name;
}
void OAIManagedGroupConfig::setInstanceGroupManagerName(const QString &instance_group_manager_name) {
    m_instance_group_manager_name = instance_group_manager_name;
    m_instance_group_manager_name_isSet = true;
}

bool OAIManagedGroupConfig::is_instance_group_manager_name_Set() const{
    return m_instance_group_manager_name_isSet;
}

bool OAIManagedGroupConfig::is_instance_group_manager_name_Valid() const{
    return m_instance_group_manager_name_isValid;
}

QString OAIManagedGroupConfig::getInstanceGroupManagerUri() const {
    return m_instance_group_manager_uri;
}
void OAIManagedGroupConfig::setInstanceGroupManagerUri(const QString &instance_group_manager_uri) {
    m_instance_group_manager_uri = instance_group_manager_uri;
    m_instance_group_manager_uri_isSet = true;
}

bool OAIManagedGroupConfig::is_instance_group_manager_uri_Set() const{
    return m_instance_group_manager_uri_isSet;
}

bool OAIManagedGroupConfig::is_instance_group_manager_uri_Valid() const{
    return m_instance_group_manager_uri_isValid;
}

QString OAIManagedGroupConfig::getInstanceTemplateName() const {
    return m_instance_template_name;
}
void OAIManagedGroupConfig::setInstanceTemplateName(const QString &instance_template_name) {
    m_instance_template_name = instance_template_name;
    m_instance_template_name_isSet = true;
}

bool OAIManagedGroupConfig::is_instance_template_name_Set() const{
    return m_instance_template_name_isSet;
}

bool OAIManagedGroupConfig::is_instance_template_name_Valid() const{
    return m_instance_template_name_isValid;
}

bool OAIManagedGroupConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_group_manager_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_group_manager_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_template_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManagedGroupConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
