/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDriverSchedulingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDriverSchedulingConfig::OAIDriverSchedulingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDriverSchedulingConfig::OAIDriverSchedulingConfig() {
    this->initializeModel();
}

OAIDriverSchedulingConfig::~OAIDriverSchedulingConfig() {}

void OAIDriverSchedulingConfig::initializeModel() {

    m_memory_mb_isSet = false;
    m_memory_mb_isValid = false;

    m_vcores_isSet = false;
    m_vcores_isValid = false;
}

void OAIDriverSchedulingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDriverSchedulingConfig::fromJsonObject(QJsonObject json) {

    m_memory_mb_isValid = ::OpenAPI::fromJsonValue(m_memory_mb, json[QString("memoryMb")]);
    m_memory_mb_isSet = !json[QString("memoryMb")].isNull() && m_memory_mb_isValid;

    m_vcores_isValid = ::OpenAPI::fromJsonValue(m_vcores, json[QString("vcores")]);
    m_vcores_isSet = !json[QString("vcores")].isNull() && m_vcores_isValid;
}

QString OAIDriverSchedulingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDriverSchedulingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_memory_mb_isSet) {
        obj.insert(QString("memoryMb"), ::OpenAPI::toJsonValue(m_memory_mb));
    }
    if (m_vcores_isSet) {
        obj.insert(QString("vcores"), ::OpenAPI::toJsonValue(m_vcores));
    }
    return obj;
}

qint32 OAIDriverSchedulingConfig::getMemoryMb() const {
    return m_memory_mb;
}
void OAIDriverSchedulingConfig::setMemoryMb(const qint32 &memory_mb) {
    m_memory_mb = memory_mb;
    m_memory_mb_isSet = true;
}

bool OAIDriverSchedulingConfig::is_memory_mb_Set() const{
    return m_memory_mb_isSet;
}

bool OAIDriverSchedulingConfig::is_memory_mb_Valid() const{
    return m_memory_mb_isValid;
}

qint32 OAIDriverSchedulingConfig::getVcores() const {
    return m_vcores;
}
void OAIDriverSchedulingConfig::setVcores(const qint32 &vcores) {
    m_vcores = vcores;
    m_vcores_isSet = true;
}

bool OAIDriverSchedulingConfig::is_vcores_Set() const{
    return m_vcores_isSet;
}

bool OAIDriverSchedulingConfig::is_vcores_Valid() const{
    return m_vcores_isValid;
}

bool OAIDriverSchedulingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_memory_mb_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vcores_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDriverSchedulingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
