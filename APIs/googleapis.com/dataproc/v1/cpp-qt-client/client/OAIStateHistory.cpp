/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStateHistory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStateHistory::OAIStateHistory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStateHistory::OAIStateHistory() {
    this->initializeModel();
}

OAIStateHistory::~OAIStateHistory() {}

void OAIStateHistory::initializeModel() {

    m_state_isSet = false;
    m_state_isValid = false;

    m_state_message_isSet = false;
    m_state_message_isValid = false;

    m_state_start_time_isSet = false;
    m_state_start_time_isValid = false;
}

void OAIStateHistory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStateHistory::fromJsonObject(QJsonObject json) {

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_state_message_isValid = ::OpenAPI::fromJsonValue(m_state_message, json[QString("stateMessage")]);
    m_state_message_isSet = !json[QString("stateMessage")].isNull() && m_state_message_isValid;

    m_state_start_time_isValid = ::OpenAPI::fromJsonValue(m_state_start_time, json[QString("stateStartTime")]);
    m_state_start_time_isSet = !json[QString("stateStartTime")].isNull() && m_state_start_time_isValid;
}

QString OAIStateHistory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStateHistory::asJsonObject() const {
    QJsonObject obj;
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_state_message_isSet) {
        obj.insert(QString("stateMessage"), ::OpenAPI::toJsonValue(m_state_message));
    }
    if (m_state_start_time_isSet) {
        obj.insert(QString("stateStartTime"), ::OpenAPI::toJsonValue(m_state_start_time));
    }
    return obj;
}

QString OAIStateHistory::getState() const {
    return m_state;
}
void OAIStateHistory::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIStateHistory::is_state_Set() const{
    return m_state_isSet;
}

bool OAIStateHistory::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIStateHistory::getStateMessage() const {
    return m_state_message;
}
void OAIStateHistory::setStateMessage(const QString &state_message) {
    m_state_message = state_message;
    m_state_message_isSet = true;
}

bool OAIStateHistory::is_state_message_Set() const{
    return m_state_message_isSet;
}

bool OAIStateHistory::is_state_message_Valid() const{
    return m_state_message_isValid;
}

QString OAIStateHistory::getStateStartTime() const {
    return m_state_start_time;
}
void OAIStateHistory::setStateStartTime(const QString &state_start_time) {
    m_state_start_time = state_start_time;
    m_state_start_time_isSet = true;
}

bool OAIStateHistory::is_state_start_time_Set() const{
    return m_state_start_time_isSet;
}

bool OAIStateHistory::is_state_start_time_Valid() const{
    return m_state_start_time_isValid;
}

bool OAIStateHistory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStateHistory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
