/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstanceFlexibilityPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstanceFlexibilityPolicy::OAIInstanceFlexibilityPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstanceFlexibilityPolicy::OAIInstanceFlexibilityPolicy() {
    this->initializeModel();
}

OAIInstanceFlexibilityPolicy::~OAIInstanceFlexibilityPolicy() {}

void OAIInstanceFlexibilityPolicy::initializeModel() {

    m_instance_selection_list_isSet = false;
    m_instance_selection_list_isValid = false;

    m_instance_selection_results_isSet = false;
    m_instance_selection_results_isValid = false;
}

void OAIInstanceFlexibilityPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstanceFlexibilityPolicy::fromJsonObject(QJsonObject json) {

    m_instance_selection_list_isValid = ::OpenAPI::fromJsonValue(m_instance_selection_list, json[QString("instanceSelectionList")]);
    m_instance_selection_list_isSet = !json[QString("instanceSelectionList")].isNull() && m_instance_selection_list_isValid;

    m_instance_selection_results_isValid = ::OpenAPI::fromJsonValue(m_instance_selection_results, json[QString("instanceSelectionResults")]);
    m_instance_selection_results_isSet = !json[QString("instanceSelectionResults")].isNull() && m_instance_selection_results_isValid;
}

QString OAIInstanceFlexibilityPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstanceFlexibilityPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_instance_selection_list.size() > 0) {
        obj.insert(QString("instanceSelectionList"), ::OpenAPI::toJsonValue(m_instance_selection_list));
    }
    if (m_instance_selection_results.size() > 0) {
        obj.insert(QString("instanceSelectionResults"), ::OpenAPI::toJsonValue(m_instance_selection_results));
    }
    return obj;
}

QList<OAIInstanceSelection> OAIInstanceFlexibilityPolicy::getInstanceSelectionList() const {
    return m_instance_selection_list;
}
void OAIInstanceFlexibilityPolicy::setInstanceSelectionList(const QList<OAIInstanceSelection> &instance_selection_list) {
    m_instance_selection_list = instance_selection_list;
    m_instance_selection_list_isSet = true;
}

bool OAIInstanceFlexibilityPolicy::is_instance_selection_list_Set() const{
    return m_instance_selection_list_isSet;
}

bool OAIInstanceFlexibilityPolicy::is_instance_selection_list_Valid() const{
    return m_instance_selection_list_isValid;
}

QList<OAIInstanceSelectionResult> OAIInstanceFlexibilityPolicy::getInstanceSelectionResults() const {
    return m_instance_selection_results;
}
void OAIInstanceFlexibilityPolicy::setInstanceSelectionResults(const QList<OAIInstanceSelectionResult> &instance_selection_results) {
    m_instance_selection_results = instance_selection_results;
    m_instance_selection_results_isSet = true;
}

bool OAIInstanceFlexibilityPolicy::is_instance_selection_results_Set() const{
    return m_instance_selection_results_isSet;
}

bool OAIInstanceFlexibilityPolicy::is_instance_selection_results_Valid() const{
    return m_instance_selection_results_isValid;
}

bool OAIInstanceFlexibilityPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_instance_selection_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_instance_selection_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstanceFlexibilityPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
