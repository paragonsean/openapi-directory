/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuntimeInfo.h
 *
 * Runtime information about workload execution.
 */

#ifndef OAIRuntimeInfo_H
#define OAIRuntimeInfo_H

#include <QJsonObject>

#include "OAIUsageMetrics.h"
#include "OAIUsageSnapshot.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUsageMetrics;
class OAIUsageSnapshot;

class OAIRuntimeInfo : public OAIObject {
public:
    OAIRuntimeInfo();
    OAIRuntimeInfo(QString json);
    ~OAIRuntimeInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUsageMetrics getApproximateUsage() const;
    void setApproximateUsage(const OAIUsageMetrics &approximate_usage);
    bool is_approximate_usage_Set() const;
    bool is_approximate_usage_Valid() const;

    OAIUsageSnapshot getCurrentUsage() const;
    void setCurrentUsage(const OAIUsageSnapshot &current_usage);
    bool is_current_usage_Set() const;
    bool is_current_usage_Valid() const;

    QString getDiagnosticOutputUri() const;
    void setDiagnosticOutputUri(const QString &diagnostic_output_uri);
    bool is_diagnostic_output_uri_Set() const;
    bool is_diagnostic_output_uri_Valid() const;

    QMap<QString, QString> getEndpoints() const;
    void setEndpoints(const QMap<QString, QString> &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    QString getOutputUri() const;
    void setOutputUri(const QString &output_uri);
    bool is_output_uri_Set() const;
    bool is_output_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUsageMetrics m_approximate_usage;
    bool m_approximate_usage_isSet;
    bool m_approximate_usage_isValid;

    OAIUsageSnapshot m_current_usage;
    bool m_current_usage_isSet;
    bool m_current_usage_isValid;

    QString m_diagnostic_output_uri;
    bool m_diagnostic_output_uri_isSet;
    bool m_diagnostic_output_uri_isValid;

    QMap<QString, QString> m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    QString m_output_uri;
    bool m_output_uri_isSet;
    bool m_output_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuntimeInfo)

#endif // OAIRuntimeInfo_H
