/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBasicAutoscalingAlgorithm.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBasicAutoscalingAlgorithm::OAIBasicAutoscalingAlgorithm(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBasicAutoscalingAlgorithm::OAIBasicAutoscalingAlgorithm() {
    this->initializeModel();
}

OAIBasicAutoscalingAlgorithm::~OAIBasicAutoscalingAlgorithm() {}

void OAIBasicAutoscalingAlgorithm::initializeModel() {

    m_cooldown_period_isSet = false;
    m_cooldown_period_isValid = false;

    m_spark_standalone_config_isSet = false;
    m_spark_standalone_config_isValid = false;

    m_yarn_config_isSet = false;
    m_yarn_config_isValid = false;
}

void OAIBasicAutoscalingAlgorithm::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBasicAutoscalingAlgorithm::fromJsonObject(QJsonObject json) {

    m_cooldown_period_isValid = ::OpenAPI::fromJsonValue(m_cooldown_period, json[QString("cooldownPeriod")]);
    m_cooldown_period_isSet = !json[QString("cooldownPeriod")].isNull() && m_cooldown_period_isValid;

    m_spark_standalone_config_isValid = ::OpenAPI::fromJsonValue(m_spark_standalone_config, json[QString("sparkStandaloneConfig")]);
    m_spark_standalone_config_isSet = !json[QString("sparkStandaloneConfig")].isNull() && m_spark_standalone_config_isValid;

    m_yarn_config_isValid = ::OpenAPI::fromJsonValue(m_yarn_config, json[QString("yarnConfig")]);
    m_yarn_config_isSet = !json[QString("yarnConfig")].isNull() && m_yarn_config_isValid;
}

QString OAIBasicAutoscalingAlgorithm::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBasicAutoscalingAlgorithm::asJsonObject() const {
    QJsonObject obj;
    if (m_cooldown_period_isSet) {
        obj.insert(QString("cooldownPeriod"), ::OpenAPI::toJsonValue(m_cooldown_period));
    }
    if (m_spark_standalone_config.isSet()) {
        obj.insert(QString("sparkStandaloneConfig"), ::OpenAPI::toJsonValue(m_spark_standalone_config));
    }
    if (m_yarn_config.isSet()) {
        obj.insert(QString("yarnConfig"), ::OpenAPI::toJsonValue(m_yarn_config));
    }
    return obj;
}

QString OAIBasicAutoscalingAlgorithm::getCooldownPeriod() const {
    return m_cooldown_period;
}
void OAIBasicAutoscalingAlgorithm::setCooldownPeriod(const QString &cooldown_period) {
    m_cooldown_period = cooldown_period;
    m_cooldown_period_isSet = true;
}

bool OAIBasicAutoscalingAlgorithm::is_cooldown_period_Set() const{
    return m_cooldown_period_isSet;
}

bool OAIBasicAutoscalingAlgorithm::is_cooldown_period_Valid() const{
    return m_cooldown_period_isValid;
}

OAISparkStandaloneAutoscalingConfig OAIBasicAutoscalingAlgorithm::getSparkStandaloneConfig() const {
    return m_spark_standalone_config;
}
void OAIBasicAutoscalingAlgorithm::setSparkStandaloneConfig(const OAISparkStandaloneAutoscalingConfig &spark_standalone_config) {
    m_spark_standalone_config = spark_standalone_config;
    m_spark_standalone_config_isSet = true;
}

bool OAIBasicAutoscalingAlgorithm::is_spark_standalone_config_Set() const{
    return m_spark_standalone_config_isSet;
}

bool OAIBasicAutoscalingAlgorithm::is_spark_standalone_config_Valid() const{
    return m_spark_standalone_config_isValid;
}

OAIBasicYarnAutoscalingConfig OAIBasicAutoscalingAlgorithm::getYarnConfig() const {
    return m_yarn_config;
}
void OAIBasicAutoscalingAlgorithm::setYarnConfig(const OAIBasicYarnAutoscalingConfig &yarn_config) {
    m_yarn_config = yarn_config;
    m_yarn_config_isSet = true;
}

bool OAIBasicAutoscalingAlgorithm::is_yarn_config_Set() const{
    return m_yarn_config_isSet;
}

bool OAIBasicAutoscalingAlgorithm::is_yarn_config_Valid() const{
    return m_yarn_config_isValid;
}

bool OAIBasicAutoscalingAlgorithm::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cooldown_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spark_standalone_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_yarn_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBasicAutoscalingAlgorithm::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
