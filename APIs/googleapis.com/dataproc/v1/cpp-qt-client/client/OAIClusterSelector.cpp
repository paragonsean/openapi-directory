/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClusterSelector.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClusterSelector::OAIClusterSelector(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClusterSelector::OAIClusterSelector() {
    this->initializeModel();
}

OAIClusterSelector::~OAIClusterSelector() {}

void OAIClusterSelector::initializeModel() {

    m_cluster_labels_isSet = false;
    m_cluster_labels_isValid = false;

    m_zone_isSet = false;
    m_zone_isValid = false;
}

void OAIClusterSelector::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClusterSelector::fromJsonObject(QJsonObject json) {

    m_cluster_labels_isValid = ::OpenAPI::fromJsonValue(m_cluster_labels, json[QString("clusterLabels")]);
    m_cluster_labels_isSet = !json[QString("clusterLabels")].isNull() && m_cluster_labels_isValid;

    m_zone_isValid = ::OpenAPI::fromJsonValue(m_zone, json[QString("zone")]);
    m_zone_isSet = !json[QString("zone")].isNull() && m_zone_isValid;
}

QString OAIClusterSelector::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClusterSelector::asJsonObject() const {
    QJsonObject obj;
    if (m_cluster_labels.size() > 0) {
        obj.insert(QString("clusterLabels"), ::OpenAPI::toJsonValue(m_cluster_labels));
    }
    if (m_zone_isSet) {
        obj.insert(QString("zone"), ::OpenAPI::toJsonValue(m_zone));
    }
    return obj;
}

QMap<QString, QString> OAIClusterSelector::getClusterLabels() const {
    return m_cluster_labels;
}
void OAIClusterSelector::setClusterLabels(const QMap<QString, QString> &cluster_labels) {
    m_cluster_labels = cluster_labels;
    m_cluster_labels_isSet = true;
}

bool OAIClusterSelector::is_cluster_labels_Set() const{
    return m_cluster_labels_isSet;
}

bool OAIClusterSelector::is_cluster_labels_Valid() const{
    return m_cluster_labels_isValid;
}

QString OAIClusterSelector::getZone() const {
    return m_zone;
}
void OAIClusterSelector::setZone(const QString &zone) {
    m_zone = zone;
    m_zone_isSet = true;
}

bool OAIClusterSelector::is_zone_Set() const{
    return m_zone_isSet;
}

bool OAIClusterSelector::is_zone_Valid() const{
    return m_zone_isValid;
}

bool OAIClusterSelector::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cluster_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_zone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClusterSelector::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
