/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoggingConfig from './LoggingConfig';
import QueryList from './QueryList';

/**
 * The PigJob model module.
 * @module model/PigJob
 * @version v1
 */
class PigJob {
    /**
     * Constructs a new <code>PigJob</code>.
     * A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
     * @alias module:model/PigJob
     */
    constructor() { 
        
        PigJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PigJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PigJob} obj Optional instance to populate.
     * @return {module:model/PigJob} The populated <code>PigJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PigJob();

            if (data.hasOwnProperty('continueOnFailure')) {
                obj['continueOnFailure'] = ApiClient.convertToType(data['continueOnFailure'], 'Boolean');
            }
            if (data.hasOwnProperty('jarFileUris')) {
                obj['jarFileUris'] = ApiClient.convertToType(data['jarFileUris'], ['String']);
            }
            if (data.hasOwnProperty('loggingConfig')) {
                obj['loggingConfig'] = LoggingConfig.constructFromObject(data['loggingConfig']);
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
            if (data.hasOwnProperty('queryFileUri')) {
                obj['queryFileUri'] = ApiClient.convertToType(data['queryFileUri'], 'String');
            }
            if (data.hasOwnProperty('queryList')) {
                obj['queryList'] = QueryList.constructFromObject(data['queryList']);
            }
            if (data.hasOwnProperty('scriptVariables')) {
                obj['scriptVariables'] = ApiClient.convertToType(data['scriptVariables'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PigJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PigJob</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['jarFileUris'])) {
            throw new Error("Expected the field `jarFileUris` to be an array in the JSON data but got " + data['jarFileUris']);
        }
        // validate the optional field `loggingConfig`
        if (data['loggingConfig']) { // data not null
          LoggingConfig.validateJSON(data['loggingConfig']);
        }
        // ensure the json data is a string
        if (data['queryFileUri'] && !(typeof data['queryFileUri'] === 'string' || data['queryFileUri'] instanceof String)) {
            throw new Error("Expected the field `queryFileUri` to be a primitive type in the JSON string but got " + data['queryFileUri']);
        }
        // validate the optional field `queryList`
        if (data['queryList']) { // data not null
          QueryList.validateJSON(data['queryList']);
        }

        return true;
    }


}



/**
 * Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
 * @member {Boolean} continueOnFailure
 */
PigJob.prototype['continueOnFailure'] = undefined;

/**
 * Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
 * @member {Array.<String>} jarFileUris
 */
PigJob.prototype['jarFileUris'] = undefined;

/**
 * @member {module:model/LoggingConfig} loggingConfig
 */
PigJob.prototype['loggingConfig'] = undefined;

/**
 * Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/_*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
 * @member {Object.<String, String>} properties
 */
PigJob.prototype['properties'] = undefined;

/**
 * The HCFS URI of the script that contains the Pig queries.
 * @member {String} queryFileUri
 */
PigJob.prototype['queryFileUri'] = undefined;

/**
 * @member {module:model/QueryList} queryList
 */
PigJob.prototype['queryList'] = undefined;

/**
 * Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
 * @member {Object.<String, String>} scriptVariables
 */
PigJob.prototype['scriptVariables'] = undefined;






export default PigJob;

