/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GkeClusterConfig from './GkeClusterConfig';
import KubernetesSoftwareConfig from './KubernetesSoftwareConfig';

/**
 * The KubernetesClusterConfig model module.
 * @module model/KubernetesClusterConfig
 * @version v1
 */
class KubernetesClusterConfig {
    /**
     * Constructs a new <code>KubernetesClusterConfig</code>.
     * The configuration for running the Dataproc cluster on Kubernetes.
     * @alias module:model/KubernetesClusterConfig
     */
    constructor() { 
        
        KubernetesClusterConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KubernetesClusterConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KubernetesClusterConfig} obj Optional instance to populate.
     * @return {module:model/KubernetesClusterConfig} The populated <code>KubernetesClusterConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KubernetesClusterConfig();

            if (data.hasOwnProperty('gkeClusterConfig')) {
                obj['gkeClusterConfig'] = GkeClusterConfig.constructFromObject(data['gkeClusterConfig']);
            }
            if (data.hasOwnProperty('kubernetesNamespace')) {
                obj['kubernetesNamespace'] = ApiClient.convertToType(data['kubernetesNamespace'], 'String');
            }
            if (data.hasOwnProperty('kubernetesSoftwareConfig')) {
                obj['kubernetesSoftwareConfig'] = KubernetesSoftwareConfig.constructFromObject(data['kubernetesSoftwareConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KubernetesClusterConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KubernetesClusterConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `gkeClusterConfig`
        if (data['gkeClusterConfig']) { // data not null
          GkeClusterConfig.validateJSON(data['gkeClusterConfig']);
        }
        // ensure the json data is a string
        if (data['kubernetesNamespace'] && !(typeof data['kubernetesNamespace'] === 'string' || data['kubernetesNamespace'] instanceof String)) {
            throw new Error("Expected the field `kubernetesNamespace` to be a primitive type in the JSON string but got " + data['kubernetesNamespace']);
        }
        // validate the optional field `kubernetesSoftwareConfig`
        if (data['kubernetesSoftwareConfig']) { // data not null
          KubernetesSoftwareConfig.validateJSON(data['kubernetesSoftwareConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/GkeClusterConfig} gkeClusterConfig
 */
KubernetesClusterConfig.prototype['gkeClusterConfig'] = undefined;

/**
 * Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.
 * @member {String} kubernetesNamespace
 */
KubernetesClusterConfig.prototype['kubernetesNamespace'] = undefined;

/**
 * @member {module:model/KubernetesSoftwareConfig} kubernetesSoftwareConfig
 */
KubernetesClusterConfig.prototype['kubernetesSoftwareConfig'] = undefined;






export default KubernetesClusterConfig;

