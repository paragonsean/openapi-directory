/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InstantiateWorkflowTemplateRequest model module.
 * @module model/InstantiateWorkflowTemplateRequest
 * @version v1
 */
class InstantiateWorkflowTemplateRequest {
    /**
     * Constructs a new <code>InstantiateWorkflowTemplateRequest</code>.
     * A request to instantiate a workflow template.
     * @alias module:model/InstantiateWorkflowTemplateRequest
     */
    constructor() { 
        
        InstantiateWorkflowTemplateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InstantiateWorkflowTemplateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstantiateWorkflowTemplateRequest} obj Optional instance to populate.
     * @return {module:model/InstantiateWorkflowTemplateRequest} The populated <code>InstantiateWorkflowTemplateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InstantiateWorkflowTemplateRequest();

            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InstantiateWorkflowTemplateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InstantiateWorkflowTemplateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }

        return true;
    }


}



/**
 * Optional. Map from parameter names to values that should be used for those parameters. Values may not exceed 1000 characters.
 * @member {Object.<String, String>} parameters
 */
InstantiateWorkflowTemplateRequest.prototype['parameters'] = undefined;

/**
 * Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
 * @member {String} requestId
 */
InstantiateWorkflowTemplateRequest.prototype['requestId'] = undefined;

/**
 * Optional. The version of workflow template to instantiate. If specified, the workflow will be instantiated only if the current version of the workflow template has the supplied version.This option cannot be used to instantiate a previous version of workflow template.
 * @member {Number} version
 */
InstantiateWorkflowTemplateRequest.prototype['version'] = undefined;






export default InstantiateWorkflowTemplateRequest;

