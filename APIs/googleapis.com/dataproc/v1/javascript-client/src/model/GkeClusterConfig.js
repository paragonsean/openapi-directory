/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GkeNodePoolTarget from './GkeNodePoolTarget';
import NamespacedGkeDeploymentTarget from './NamespacedGkeDeploymentTarget';

/**
 * The GkeClusterConfig model module.
 * @module model/GkeClusterConfig
 * @version v1
 */
class GkeClusterConfig {
    /**
     * Constructs a new <code>GkeClusterConfig</code>.
     * The cluster&#39;s GKE config.
     * @alias module:model/GkeClusterConfig
     */
    constructor() { 
        
        GkeClusterConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GkeClusterConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GkeClusterConfig} obj Optional instance to populate.
     * @return {module:model/GkeClusterConfig} The populated <code>GkeClusterConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GkeClusterConfig();

            if (data.hasOwnProperty('gkeClusterTarget')) {
                obj['gkeClusterTarget'] = ApiClient.convertToType(data['gkeClusterTarget'], 'String');
            }
            if (data.hasOwnProperty('namespacedGkeDeploymentTarget')) {
                obj['namespacedGkeDeploymentTarget'] = NamespacedGkeDeploymentTarget.constructFromObject(data['namespacedGkeDeploymentTarget']);
            }
            if (data.hasOwnProperty('nodePoolTarget')) {
                obj['nodePoolTarget'] = ApiClient.convertToType(data['nodePoolTarget'], [GkeNodePoolTarget]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GkeClusterConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GkeClusterConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gkeClusterTarget'] && !(typeof data['gkeClusterTarget'] === 'string' || data['gkeClusterTarget'] instanceof String)) {
            throw new Error("Expected the field `gkeClusterTarget` to be a primitive type in the JSON string but got " + data['gkeClusterTarget']);
        }
        // validate the optional field `namespacedGkeDeploymentTarget`
        if (data['namespacedGkeDeploymentTarget']) { // data not null
          NamespacedGkeDeploymentTarget.validateJSON(data['namespacedGkeDeploymentTarget']);
        }
        if (data['nodePoolTarget']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nodePoolTarget'])) {
                throw new Error("Expected the field `nodePoolTarget` to be an array in the JSON data but got " + data['nodePoolTarget']);
            }
            // validate the optional field `nodePoolTarget` (array)
            for (const item of data['nodePoolTarget']) {
                GkeNodePoolTarget.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'
 * @member {String} gkeClusterTarget
 */
GkeClusterConfig.prototype['gkeClusterTarget'] = undefined;

/**
 * @member {module:model/NamespacedGkeDeploymentTarget} namespacedGkeDeploymentTarget
 */
GkeClusterConfig.prototype['namespacedGkeDeploymentTarget'] = undefined;

/**
 * Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
 * @member {Array.<module:model/GkeNodePoolTarget>} nodePoolTarget
 */
GkeClusterConfig.prototype['nodePoolTarget'] = undefined;






export default GkeClusterConfig;

