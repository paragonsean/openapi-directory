/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UsageSnapshot model module.
 * @module model/UsageSnapshot
 * @version v1
 */
class UsageSnapshot {
    /**
     * Constructs a new <code>UsageSnapshot</code>.
     * The usage snapshot represents the resources consumed by a workload at a specified time.
     * @alias module:model/UsageSnapshot
     */
    constructor() { 
        
        UsageSnapshot.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UsageSnapshot</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsageSnapshot} obj Optional instance to populate.
     * @return {module:model/UsageSnapshot} The populated <code>UsageSnapshot</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsageSnapshot();

            if (data.hasOwnProperty('acceleratorType')) {
                obj['acceleratorType'] = ApiClient.convertToType(data['acceleratorType'], 'String');
            }
            if (data.hasOwnProperty('milliAccelerator')) {
                obj['milliAccelerator'] = ApiClient.convertToType(data['milliAccelerator'], 'String');
            }
            if (data.hasOwnProperty('milliDcu')) {
                obj['milliDcu'] = ApiClient.convertToType(data['milliDcu'], 'String');
            }
            if (data.hasOwnProperty('milliDcuPremium')) {
                obj['milliDcuPremium'] = ApiClient.convertToType(data['milliDcuPremium'], 'String');
            }
            if (data.hasOwnProperty('shuffleStorageGb')) {
                obj['shuffleStorageGb'] = ApiClient.convertToType(data['shuffleStorageGb'], 'String');
            }
            if (data.hasOwnProperty('shuffleStorageGbPremium')) {
                obj['shuffleStorageGbPremium'] = ApiClient.convertToType(data['shuffleStorageGbPremium'], 'String');
            }
            if (data.hasOwnProperty('snapshotTime')) {
                obj['snapshotTime'] = ApiClient.convertToType(data['snapshotTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsageSnapshot</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsageSnapshot</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['acceleratorType'] && !(typeof data['acceleratorType'] === 'string' || data['acceleratorType'] instanceof String)) {
            throw new Error("Expected the field `acceleratorType` to be a primitive type in the JSON string but got " + data['acceleratorType']);
        }
        // ensure the json data is a string
        if (data['milliAccelerator'] && !(typeof data['milliAccelerator'] === 'string' || data['milliAccelerator'] instanceof String)) {
            throw new Error("Expected the field `milliAccelerator` to be a primitive type in the JSON string but got " + data['milliAccelerator']);
        }
        // ensure the json data is a string
        if (data['milliDcu'] && !(typeof data['milliDcu'] === 'string' || data['milliDcu'] instanceof String)) {
            throw new Error("Expected the field `milliDcu` to be a primitive type in the JSON string but got " + data['milliDcu']);
        }
        // ensure the json data is a string
        if (data['milliDcuPremium'] && !(typeof data['milliDcuPremium'] === 'string' || data['milliDcuPremium'] instanceof String)) {
            throw new Error("Expected the field `milliDcuPremium` to be a primitive type in the JSON string but got " + data['milliDcuPremium']);
        }
        // ensure the json data is a string
        if (data['shuffleStorageGb'] && !(typeof data['shuffleStorageGb'] === 'string' || data['shuffleStorageGb'] instanceof String)) {
            throw new Error("Expected the field `shuffleStorageGb` to be a primitive type in the JSON string but got " + data['shuffleStorageGb']);
        }
        // ensure the json data is a string
        if (data['shuffleStorageGbPremium'] && !(typeof data['shuffleStorageGbPremium'] === 'string' || data['shuffleStorageGbPremium'] instanceof String)) {
            throw new Error("Expected the field `shuffleStorageGbPremium` to be a primitive type in the JSON string but got " + data['shuffleStorageGbPremium']);
        }
        // ensure the json data is a string
        if (data['snapshotTime'] && !(typeof data['snapshotTime'] === 'string' || data['snapshotTime'] instanceof String)) {
            throw new Error("Expected the field `snapshotTime` to be a primitive type in the JSON string but got " + data['snapshotTime']);
        }

        return true;
    }


}



/**
 * Optional. Accelerator type being used, if any
 * @member {String} acceleratorType
 */
UsageSnapshot.prototype['acceleratorType'] = undefined;

/**
 * Optional. Milli (one-thousandth) accelerator. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))
 * @member {String} milliAccelerator
 */
UsageSnapshot.prototype['milliAccelerator'] = undefined;

/**
 * Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
 * @member {String} milliDcu
 */
UsageSnapshot.prototype['milliDcu'] = undefined;

/**
 * Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) charged at premium tier (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
 * @member {String} milliDcuPremium
 */
UsageSnapshot.prototype['milliDcuPremium'] = undefined;

/**
 * Optional. Shuffle Storage in gigabytes (GB). (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))
 * @member {String} shuffleStorageGb
 */
UsageSnapshot.prototype['shuffleStorageGb'] = undefined;

/**
 * Optional. Shuffle Storage in gigabytes (GB) charged at premium tier. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))
 * @member {String} shuffleStorageGbPremium
 */
UsageSnapshot.prototype['shuffleStorageGbPremium'] = undefined;

/**
 * Optional. The timestamp of the usage snapshot.
 * @member {String} snapshotTime
 */
UsageSnapshot.prototype['snapshotTime'] = undefined;






export default UsageSnapshot;

