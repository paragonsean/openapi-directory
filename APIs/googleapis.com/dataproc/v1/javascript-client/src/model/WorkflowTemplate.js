/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig from './GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig';
import OrderedJob from './OrderedJob';
import TemplateParameter from './TemplateParameter';
import WorkflowTemplatePlacement from './WorkflowTemplatePlacement';

/**
 * The WorkflowTemplate model module.
 * @module model/WorkflowTemplate
 * @version v1
 */
class WorkflowTemplate {
    /**
     * Constructs a new <code>WorkflowTemplate</code>.
     * A Dataproc workflow template resource.
     * @alias module:model/WorkflowTemplate
     */
    constructor() { 
        
        WorkflowTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WorkflowTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WorkflowTemplate} obj Optional instance to populate.
     * @return {module:model/WorkflowTemplate} The populated <code>WorkflowTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WorkflowTemplate();

            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('dagTimeout')) {
                obj['dagTimeout'] = ApiClient.convertToType(data['dagTimeout'], 'String');
            }
            if (data.hasOwnProperty('encryptionConfig')) {
                obj['encryptionConfig'] = GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig.constructFromObject(data['encryptionConfig']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('jobs')) {
                obj['jobs'] = ApiClient.convertToType(data['jobs'], [OrderedJob]);
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [TemplateParameter]);
            }
            if (data.hasOwnProperty('placement')) {
                obj['placement'] = WorkflowTemplatePlacement.constructFromObject(data['placement']);
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WorkflowTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WorkflowTemplate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        // ensure the json data is a string
        if (data['dagTimeout'] && !(typeof data['dagTimeout'] === 'string' || data['dagTimeout'] instanceof String)) {
            throw new Error("Expected the field `dagTimeout` to be a primitive type in the JSON string but got " + data['dagTimeout']);
        }
        // validate the optional field `encryptionConfig`
        if (data['encryptionConfig']) { // data not null
          GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig.validateJSON(data['encryptionConfig']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['jobs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jobs'])) {
                throw new Error("Expected the field `jobs` to be an array in the JSON data but got " + data['jobs']);
            }
            // validate the optional field `jobs` (array)
            for (const item of data['jobs']) {
                OrderedJob.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                TemplateParameter.validateJSON(item);
            };
        }
        // validate the optional field `placement`
        if (data['placement']) { // data not null
          WorkflowTemplatePlacement.validateJSON(data['placement']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Output only. The time template was created.
 * @member {String} createTime
 */
WorkflowTemplate.prototype['createTime'] = undefined;

/**
 * Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes (\"600s\") to 24 hours (\"86400s\"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.
 * @member {String} dagTimeout
 */
WorkflowTemplate.prototype['dagTimeout'] = undefined;

/**
 * @member {module:model/GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig} encryptionConfig
 */
WorkflowTemplate.prototype['encryptionConfig'] = undefined;

/**
 * @member {String} id
 */
WorkflowTemplate.prototype['id'] = undefined;

/**
 * Required. The Directed Acyclic Graph of Jobs to submit.
 * @member {Array.<module:model/OrderedJob>} jobs
 */
WorkflowTemplate.prototype['jobs'] = undefined;

/**
 * Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.
 * @member {Object.<String, String>} labels
 */
WorkflowTemplate.prototype['labels'] = undefined;

/**
 * Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}
 * @member {String} name
 */
WorkflowTemplate.prototype['name'] = undefined;

/**
 * Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
 * @member {Array.<module:model/TemplateParameter>} parameters
 */
WorkflowTemplate.prototype['parameters'] = undefined;

/**
 * @member {module:model/WorkflowTemplatePlacement} placement
 */
WorkflowTemplate.prototype['placement'] = undefined;

/**
 * Output only. The time template was last updated.
 * @member {String} updateTime
 */
WorkflowTemplate.prototype['updateTime'] = undefined;

/**
 * Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.
 * @member {Number} version
 */
WorkflowTemplate.prototype['version'] = undefined;






export default WorkflowTemplate;

