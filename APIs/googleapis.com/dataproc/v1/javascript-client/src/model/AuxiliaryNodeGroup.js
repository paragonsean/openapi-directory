/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NodeGroup from './NodeGroup';

/**
 * The AuxiliaryNodeGroup model module.
 * @module model/AuxiliaryNodeGroup
 * @version v1
 */
class AuxiliaryNodeGroup {
    /**
     * Constructs a new <code>AuxiliaryNodeGroup</code>.
     * Node group identification and configuration information.
     * @alias module:model/AuxiliaryNodeGroup
     */
    constructor() { 
        
        AuxiliaryNodeGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuxiliaryNodeGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuxiliaryNodeGroup} obj Optional instance to populate.
     * @return {module:model/AuxiliaryNodeGroup} The populated <code>AuxiliaryNodeGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuxiliaryNodeGroup();

            if (data.hasOwnProperty('nodeGroup')) {
                obj['nodeGroup'] = NodeGroup.constructFromObject(data['nodeGroup']);
            }
            if (data.hasOwnProperty('nodeGroupId')) {
                obj['nodeGroupId'] = ApiClient.convertToType(data['nodeGroupId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuxiliaryNodeGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuxiliaryNodeGroup</code>.
     */
    static validateJSON(data) {
        // validate the optional field `nodeGroup`
        if (data['nodeGroup']) { // data not null
          NodeGroup.validateJSON(data['nodeGroup']);
        }
        // ensure the json data is a string
        if (data['nodeGroupId'] && !(typeof data['nodeGroupId'] === 'string' || data['nodeGroupId'] instanceof String)) {
            throw new Error("Expected the field `nodeGroupId` to be a primitive type in the JSON string but got " + data['nodeGroupId']);
        }

        return true;
    }


}



/**
 * @member {module:model/NodeGroup} nodeGroup
 */
AuxiliaryNodeGroup.prototype['nodeGroup'] = undefined;

/**
 * Optional. A node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.
 * @member {String} nodeGroupId
 */
AuxiliaryNodeGroup.prototype['nodeGroupId'] = undefined;






export default AuxiliaryNodeGroup;

