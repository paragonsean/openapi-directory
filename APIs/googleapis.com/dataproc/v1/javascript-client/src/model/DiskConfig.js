/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DiskConfig model module.
 * @module model/DiskConfig
 * @version v1
 */
class DiskConfig {
    /**
     * Constructs a new <code>DiskConfig</code>.
     * Specifies the config of disk options for a group of VM instances.
     * @alias module:model/DiskConfig
     */
    constructor() { 
        
        DiskConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiskConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiskConfig} obj Optional instance to populate.
     * @return {module:model/DiskConfig} The populated <code>DiskConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiskConfig();

            if (data.hasOwnProperty('bootDiskSizeGb')) {
                obj['bootDiskSizeGb'] = ApiClient.convertToType(data['bootDiskSizeGb'], 'Number');
            }
            if (data.hasOwnProperty('bootDiskType')) {
                obj['bootDiskType'] = ApiClient.convertToType(data['bootDiskType'], 'String');
            }
            if (data.hasOwnProperty('localSsdInterface')) {
                obj['localSsdInterface'] = ApiClient.convertToType(data['localSsdInterface'], 'String');
            }
            if (data.hasOwnProperty('numLocalSsds')) {
                obj['numLocalSsds'] = ApiClient.convertToType(data['numLocalSsds'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiskConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiskConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['bootDiskType'] && !(typeof data['bootDiskType'] === 'string' || data['bootDiskType'] instanceof String)) {
            throw new Error("Expected the field `bootDiskType` to be a primitive type in the JSON string but got " + data['bootDiskType']);
        }
        // ensure the json data is a string
        if (data['localSsdInterface'] && !(typeof data['localSsdInterface'] === 'string' || data['localSsdInterface'] instanceof String)) {
            throw new Error("Expected the field `localSsdInterface` to be a primitive type in the JSON string but got " + data['localSsdInterface']);
        }

        return true;
    }


}



/**
 * Optional. Size in GB of the boot disk (default is 500GB).
 * @member {Number} bootDiskSizeGb
 */
DiskConfig.prototype['bootDiskSizeGb'] = undefined;

/**
 * Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).
 * @member {String} bootDiskType
 */
DiskConfig.prototype['bootDiskType'] = undefined;

/**
 * Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).
 * @member {String} localSsdInterface
 */
DiskConfig.prototype['localSsdInterface'] = undefined;

/**
 * Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected.
 * @member {Number} numLocalSsds
 */
DiskConfig.prototype['numLocalSsds'] = undefined;






export default DiskConfig;

