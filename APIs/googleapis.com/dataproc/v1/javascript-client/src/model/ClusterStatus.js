/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClusterStatus model module.
 * @module model/ClusterStatus
 * @version v1
 */
class ClusterStatus {
    /**
     * Constructs a new <code>ClusterStatus</code>.
     * The status of a cluster and its instances.
     * @alias module:model/ClusterStatus
     */
    constructor() { 
        
        ClusterStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterStatus} obj Optional instance to populate.
     * @return {module:model/ClusterStatus} The populated <code>ClusterStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterStatus();

            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stateStartTime')) {
                obj['stateStartTime'] = ApiClient.convertToType(data['stateStartTime'], 'String');
            }
            if (data.hasOwnProperty('substate')) {
                obj['substate'] = ApiClient.convertToType(data['substate'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['detail'] && !(typeof data['detail'] === 'string' || data['detail'] instanceof String)) {
            throw new Error("Expected the field `detail` to be a primitive type in the JSON string but got " + data['detail']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['stateStartTime'] && !(typeof data['stateStartTime'] === 'string' || data['stateStartTime'] instanceof String)) {
            throw new Error("Expected the field `stateStartTime` to be a primitive type in the JSON string but got " + data['stateStartTime']);
        }
        // ensure the json data is a string
        if (data['substate'] && !(typeof data['substate'] === 'string' || data['substate'] instanceof String)) {
            throw new Error("Expected the field `substate` to be a primitive type in the JSON string but got " + data['substate']);
        }

        return true;
    }


}



/**
 * Optional. Output only. Details of cluster's state.
 * @member {String} detail
 */
ClusterStatus.prototype['detail'] = undefined;

/**
 * Output only. The cluster's state.
 * @member {module:model/ClusterStatus.StateEnum} state
 */
ClusterStatus.prototype['state'] = undefined;

/**
 * Output only. Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
 * @member {String} stateStartTime
 */
ClusterStatus.prototype['stateStartTime'] = undefined;

/**
 * Output only. Additional state information that includes status reported by the agent.
 * @member {module:model/ClusterStatus.SubstateEnum} substate
 */
ClusterStatus.prototype['substate'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ClusterStatus['StateEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "CREATING"
     * @const
     */
    "CREATING": "CREATING",

    /**
     * value: "RUNNING"
     * @const
     */
    "RUNNING": "RUNNING",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "ERROR_DUE_TO_UPDATE"
     * @const
     */
    "ERROR_DUE_TO_UPDATE": "ERROR_DUE_TO_UPDATE",

    /**
     * value: "DELETING"
     * @const
     */
    "DELETING": "DELETING",

    /**
     * value: "UPDATING"
     * @const
     */
    "UPDATING": "UPDATING",

    /**
     * value: "STOPPING"
     * @const
     */
    "STOPPING": "STOPPING",

    /**
     * value: "STOPPED"
     * @const
     */
    "STOPPED": "STOPPED",

    /**
     * value: "STARTING"
     * @const
     */
    "STARTING": "STARTING",

    /**
     * value: "REPAIRING"
     * @const
     */
    "REPAIRING": "REPAIRING"
};


/**
 * Allowed values for the <code>substate</code> property.
 * @enum {String}
 * @readonly
 */
ClusterStatus['SubstateEnum'] = {

    /**
     * value: "UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "UNSPECIFIED",

    /**
     * value: "UNHEALTHY"
     * @const
     */
    "UNHEALTHY": "UNHEALTHY",

    /**
     * value: "STALE_STATUS"
     * @const
     */
    "STALE_STATUS": "STALE_STATUS"
};



export default ClusterStatus;

