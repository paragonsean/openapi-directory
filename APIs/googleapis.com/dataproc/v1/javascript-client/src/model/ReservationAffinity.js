/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReservationAffinity model module.
 * @module model/ReservationAffinity
 * @version v1
 */
class ReservationAffinity {
    /**
     * Constructs a new <code>ReservationAffinity</code>.
     * Reservation Affinity for consuming Zonal reservation.
     * @alias module:model/ReservationAffinity
     */
    constructor() { 
        
        ReservationAffinity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReservationAffinity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReservationAffinity} obj Optional instance to populate.
     * @return {module:model/ReservationAffinity} The populated <code>ReservationAffinity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReservationAffinity();

            if (data.hasOwnProperty('consumeReservationType')) {
                obj['consumeReservationType'] = ApiClient.convertToType(data['consumeReservationType'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReservationAffinity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReservationAffinity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['consumeReservationType'] && !(typeof data['consumeReservationType'] === 'string' || data['consumeReservationType'] instanceof String)) {
            throw new Error("Expected the field `consumeReservationType` to be a primitive type in the JSON string but got " + data['consumeReservationType']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['values'])) {
            throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
        }

        return true;
    }


}



/**
 * Optional. Type of reservation to consume
 * @member {module:model/ReservationAffinity.ConsumeReservationTypeEnum} consumeReservationType
 */
ReservationAffinity.prototype['consumeReservationType'] = undefined;

/**
 * Optional. Corresponds to the label key of reservation resource.
 * @member {String} key
 */
ReservationAffinity.prototype['key'] = undefined;

/**
 * Optional. Corresponds to the label values of reservation resource.
 * @member {Array.<String>} values
 */
ReservationAffinity.prototype['values'] = undefined;





/**
 * Allowed values for the <code>consumeReservationType</code> property.
 * @enum {String}
 * @readonly
 */
ReservationAffinity['ConsumeReservationTypeEnum'] = {

    /**
     * value: "TYPE_UNSPECIFIED"
     * @const
     */
    "TYPE_UNSPECIFIED": "TYPE_UNSPECIFIED",

    /**
     * value: "NO_RESERVATION"
     * @const
     */
    "NO_RESERVATION": "NO_RESERVATION",

    /**
     * value: "ANY_RESERVATION"
     * @const
     */
    "ANY_RESERVATION": "ANY_RESERVATION",

    /**
     * value: "SPECIFIC_RESERVATION"
     * @const
     */
    "SPECIFIC_RESERVATION": "SPECIFIC_RESERVATION"
};



export default ReservationAffinity;

