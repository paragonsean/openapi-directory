/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryList model module.
 * @module model/QueryList
 * @version v1
 */
class QueryList {
    /**
     * Constructs a new <code>QueryList</code>.
     * A list of queries to run on a cluster.
     * @alias module:model/QueryList
     */
    constructor() { 
        
        QueryList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryList} obj Optional instance to populate.
     * @return {module:model/QueryList} The populated <code>QueryList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryList();

            if (data.hasOwnProperty('queries')) {
                obj['queries'] = ApiClient.convertToType(data['queries'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryList</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['queries'])) {
            throw new Error("Expected the field `queries` to be an array in the JSON data but got " + data['queries']);
        }

        return true;
    }


}



/**
 * Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: \"hiveJob\": { \"queryList\": { \"queries\": [ \"query1\", \"query2\", \"query3;query4\", ] } } 
 * @member {Array.<String>} queries
 */
QueryList.prototype['queries'] = undefined;






export default QueryList;

