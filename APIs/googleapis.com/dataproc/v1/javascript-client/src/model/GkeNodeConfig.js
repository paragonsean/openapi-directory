/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GkeNodePoolAcceleratorConfig from './GkeNodePoolAcceleratorConfig';

/**
 * The GkeNodeConfig model module.
 * @module model/GkeNodeConfig
 * @version v1
 */
class GkeNodeConfig {
    /**
     * Constructs a new <code>GkeNodeConfig</code>.
     * Parameters that describe cluster nodes.
     * @alias module:model/GkeNodeConfig
     */
    constructor() { 
        
        GkeNodeConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GkeNodeConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GkeNodeConfig} obj Optional instance to populate.
     * @return {module:model/GkeNodeConfig} The populated <code>GkeNodeConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GkeNodeConfig();

            if (data.hasOwnProperty('accelerators')) {
                obj['accelerators'] = ApiClient.convertToType(data['accelerators'], [GkeNodePoolAcceleratorConfig]);
            }
            if (data.hasOwnProperty('bootDiskKmsKey')) {
                obj['bootDiskKmsKey'] = ApiClient.convertToType(data['bootDiskKmsKey'], 'String');
            }
            if (data.hasOwnProperty('localSsdCount')) {
                obj['localSsdCount'] = ApiClient.convertToType(data['localSsdCount'], 'Number');
            }
            if (data.hasOwnProperty('machineType')) {
                obj['machineType'] = ApiClient.convertToType(data['machineType'], 'String');
            }
            if (data.hasOwnProperty('minCpuPlatform')) {
                obj['minCpuPlatform'] = ApiClient.convertToType(data['minCpuPlatform'], 'String');
            }
            if (data.hasOwnProperty('preemptible')) {
                obj['preemptible'] = ApiClient.convertToType(data['preemptible'], 'Boolean');
            }
            if (data.hasOwnProperty('spot')) {
                obj['spot'] = ApiClient.convertToType(data['spot'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GkeNodeConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GkeNodeConfig</code>.
     */
    static validateJSON(data) {
        if (data['accelerators']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['accelerators'])) {
                throw new Error("Expected the field `accelerators` to be an array in the JSON data but got " + data['accelerators']);
            }
            // validate the optional field `accelerators` (array)
            for (const item of data['accelerators']) {
                GkeNodePoolAcceleratorConfig.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['bootDiskKmsKey'] && !(typeof data['bootDiskKmsKey'] === 'string' || data['bootDiskKmsKey'] instanceof String)) {
            throw new Error("Expected the field `bootDiskKmsKey` to be a primitive type in the JSON string but got " + data['bootDiskKmsKey']);
        }
        // ensure the json data is a string
        if (data['machineType'] && !(typeof data['machineType'] === 'string' || data['machineType'] instanceof String)) {
            throw new Error("Expected the field `machineType` to be a primitive type in the JSON string but got " + data['machineType']);
        }
        // ensure the json data is a string
        if (data['minCpuPlatform'] && !(typeof data['minCpuPlatform'] === 'string' || data['minCpuPlatform'] instanceof String)) {
            throw new Error("Expected the field `minCpuPlatform` to be a primitive type in the JSON string but got " + data['minCpuPlatform']);
        }

        return true;
    }


}



/**
 * Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
 * @member {Array.<module:model/GkeNodePoolAcceleratorConfig>} accelerators
 */
GkeNodeConfig.prototype['accelerators'] = undefined;

/**
 * Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}
 * @member {String} bootDiskKmsKey
 */
GkeNodeConfig.prototype['bootDiskKmsKey'] = undefined;

/**
 * Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
 * @member {Number} localSsdCount
 */
GkeNodeConfig.prototype['localSsdCount'] = undefined;

/**
 * Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
 * @member {String} machineType
 */
GkeNodeConfig.prototype['machineType'] = undefined;

/**
 * Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as \"Intel Haswell\"` or Intel Sandy Bridge\".
 * @member {String} minCpuPlatform
 */
GkeNodeConfig.prototype['minCpuPlatform'] = undefined;

/**
 * Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
 * @member {Boolean} preemptible
 */
GkeNodeConfig.prototype['preemptible'] = undefined;

/**
 * Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
 * @member {Boolean} spot
 */
GkeNodeConfig.prototype['spot'] = undefined;






export default GkeNodeConfig;

