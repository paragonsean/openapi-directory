/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExecutionConfig model module.
 * @module model/ExecutionConfig
 * @version v1
 */
class ExecutionConfig {
    /**
     * Constructs a new <code>ExecutionConfig</code>.
     * Execution configuration for a workload.
     * @alias module:model/ExecutionConfig
     */
    constructor() { 
        
        ExecutionConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExecutionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExecutionConfig} obj Optional instance to populate.
     * @return {module:model/ExecutionConfig} The populated <code>ExecutionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExecutionConfig();

            if (data.hasOwnProperty('idleTtl')) {
                obj['idleTtl'] = ApiClient.convertToType(data['idleTtl'], 'String');
            }
            if (data.hasOwnProperty('kmsKey')) {
                obj['kmsKey'] = ApiClient.convertToType(data['kmsKey'], 'String');
            }
            if (data.hasOwnProperty('networkTags')) {
                obj['networkTags'] = ApiClient.convertToType(data['networkTags'], ['String']);
            }
            if (data.hasOwnProperty('networkUri')) {
                obj['networkUri'] = ApiClient.convertToType(data['networkUri'], 'String');
            }
            if (data.hasOwnProperty('serviceAccount')) {
                obj['serviceAccount'] = ApiClient.convertToType(data['serviceAccount'], 'String');
            }
            if (data.hasOwnProperty('stagingBucket')) {
                obj['stagingBucket'] = ApiClient.convertToType(data['stagingBucket'], 'String');
            }
            if (data.hasOwnProperty('subnetworkUri')) {
                obj['subnetworkUri'] = ApiClient.convertToType(data['subnetworkUri'], 'String');
            }
            if (data.hasOwnProperty('ttl')) {
                obj['ttl'] = ApiClient.convertToType(data['ttl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExecutionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExecutionConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['idleTtl'] && !(typeof data['idleTtl'] === 'string' || data['idleTtl'] instanceof String)) {
            throw new Error("Expected the field `idleTtl` to be a primitive type in the JSON string but got " + data['idleTtl']);
        }
        // ensure the json data is a string
        if (data['kmsKey'] && !(typeof data['kmsKey'] === 'string' || data['kmsKey'] instanceof String)) {
            throw new Error("Expected the field `kmsKey` to be a primitive type in the JSON string but got " + data['kmsKey']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['networkTags'])) {
            throw new Error("Expected the field `networkTags` to be an array in the JSON data but got " + data['networkTags']);
        }
        // ensure the json data is a string
        if (data['networkUri'] && !(typeof data['networkUri'] === 'string' || data['networkUri'] instanceof String)) {
            throw new Error("Expected the field `networkUri` to be a primitive type in the JSON string but got " + data['networkUri']);
        }
        // ensure the json data is a string
        if (data['serviceAccount'] && !(typeof data['serviceAccount'] === 'string' || data['serviceAccount'] instanceof String)) {
            throw new Error("Expected the field `serviceAccount` to be a primitive type in the JSON string but got " + data['serviceAccount']);
        }
        // ensure the json data is a string
        if (data['stagingBucket'] && !(typeof data['stagingBucket'] === 'string' || data['stagingBucket'] instanceof String)) {
            throw new Error("Expected the field `stagingBucket` to be a primitive type in the JSON string but got " + data['stagingBucket']);
        }
        // ensure the json data is a string
        if (data['subnetworkUri'] && !(typeof data['subnetworkUri'] === 'string' || data['subnetworkUri'] instanceof String)) {
            throw new Error("Expected the field `subnetworkUri` to be a primitive type in the JSON string but got " + data['subnetworkUri']);
        }
        // ensure the json data is a string
        if (data['ttl'] && !(typeof data['ttl'] === 'string' || data['ttl'] instanceof String)) {
            throw new Error("Expected the field `ttl` to be a primitive type in the JSON string but got " + data['ttl']);
        }

        return true;
    }


}



/**
 * Optional. Applies to sessions only. The duration to keep the session alive while it's idling. Exceeding this threshold causes the session to terminate. This field cannot be set on a batch workload. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 1 hour if not set. If both ttl and idle_ttl are specified for an interactive session, the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.
 * @member {String} idleTtl
 */
ExecutionConfig.prototype['idleTtl'] = undefined;

/**
 * Optional. The Cloud KMS key to use for encryption.
 * @member {String} kmsKey
 */
ExecutionConfig.prototype['kmsKey'] = undefined;

/**
 * Optional. Tags used for network traffic control.
 * @member {Array.<String>} networkTags
 */
ExecutionConfig.prototype['networkTags'] = undefined;

/**
 * Optional. Network URI to connect workload to.
 * @member {String} networkUri
 */
ExecutionConfig.prototype['networkUri'] = undefined;

/**
 * Optional. Service account that used to execute workload.
 * @member {String} serviceAccount
 */
ExecutionConfig.prototype['serviceAccount'] = undefined;

/**
 * Optional. A Cloud Storage bucket used to stage workload dependencies, config files, and store workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running, and then create and manage project-level, per-location staging and temporary buckets. This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
 * @member {String} stagingBucket
 */
ExecutionConfig.prototype['stagingBucket'] = undefined;

/**
 * Optional. Subnetwork URI to connect workload to.
 * @member {String} subnetworkUri
 */
ExecutionConfig.prototype['subnetworkUri'] = undefined;

/**
 * Optional. The duration after which the workload will be terminated, specified as the JSON representation for Duration (https://protobuf.dev/programming-guides/proto3/#json). When the workload exceeds this duration, it will be unconditionally terminated without waiting for ongoing work to finish. If ttl is not specified for a batch workload, the workload will be allowed to run until it exits naturally (or run forever without exiting). If ttl is not specified for an interactive session, it defaults to 24 hours. If ttl is not specified for a batch that uses 2.1+ runtime version, it defaults to 4 hours. Minimum value is 10 minutes; maximum value is 14 days. If both ttl and idle_ttl are specified (for an interactive session), the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first.
 * @member {String} ttl
 */
ExecutionConfig.prototype['ttl'] = undefined;






export default ExecutionConfig;

