/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClusterSelector model module.
 * @module model/ClusterSelector
 * @version v1
 */
class ClusterSelector {
    /**
     * Constructs a new <code>ClusterSelector</code>.
     * A selector that chooses target cluster for jobs based on metadata.
     * @alias module:model/ClusterSelector
     */
    constructor() { 
        
        ClusterSelector.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterSelector</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterSelector} obj Optional instance to populate.
     * @return {module:model/ClusterSelector} The populated <code>ClusterSelector</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterSelector();

            if (data.hasOwnProperty('clusterLabels')) {
                obj['clusterLabels'] = ApiClient.convertToType(data['clusterLabels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('zone')) {
                obj['zone'] = ApiClient.convertToType(data['zone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterSelector</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterSelector</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['zone'] && !(typeof data['zone'] === 'string' || data['zone'] instanceof String)) {
            throw new Error("Expected the field `zone` to be a primitive type in the JSON string but got " + data['zone']);
        }

        return true;
    }


}



/**
 * Required. The cluster labels. Cluster must have all labels to match.
 * @member {Object.<String, String>} clusterLabels
 */
ClusterSelector.prototype['clusterLabels'] = undefined;

/**
 * Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
 * @member {String} zone
 */
ClusterSelector.prototype['zone'] = undefined;






export default ClusterSelector;

