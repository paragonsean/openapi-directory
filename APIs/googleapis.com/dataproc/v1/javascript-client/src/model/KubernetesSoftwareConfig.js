/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KubernetesSoftwareConfig model module.
 * @module model/KubernetesSoftwareConfig
 * @version v1
 */
class KubernetesSoftwareConfig {
    /**
     * Constructs a new <code>KubernetesSoftwareConfig</code>.
     * The software configuration for this Dataproc cluster running on Kubernetes.
     * @alias module:model/KubernetesSoftwareConfig
     */
    constructor() { 
        
        KubernetesSoftwareConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KubernetesSoftwareConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KubernetesSoftwareConfig} obj Optional instance to populate.
     * @return {module:model/KubernetesSoftwareConfig} The populated <code>KubernetesSoftwareConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KubernetesSoftwareConfig();

            if (data.hasOwnProperty('componentVersion')) {
                obj['componentVersion'] = ApiClient.convertToType(data['componentVersion'], {'String': 'String'});
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KubernetesSoftwareConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KubernetesSoftwareConfig</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
 * @member {Object.<String, String>} componentVersion
 */
KubernetesSoftwareConfig.prototype['componentVersion'] = undefined;

/**
 * The properties to set on daemon config files.Property keys are specified in prefix:property format, for example spark:spark.kubernetes.container.image. The following are supported prefixes and their mappings: spark: spark-defaults.confFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
 * @member {Object.<String, String>} properties
 */
KubernetesSoftwareConfig.prototype['properties'] = undefined;






export default KubernetesSoftwareConfig;

