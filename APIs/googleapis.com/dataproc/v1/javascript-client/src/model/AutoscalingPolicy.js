/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BasicAutoscalingAlgorithm from './BasicAutoscalingAlgorithm';
import InstanceGroupAutoscalingPolicyConfig from './InstanceGroupAutoscalingPolicyConfig';

/**
 * The AutoscalingPolicy model module.
 * @module model/AutoscalingPolicy
 * @version v1
 */
class AutoscalingPolicy {
    /**
     * Constructs a new <code>AutoscalingPolicy</code>.
     * Describes an autoscaling policy for Dataproc cluster autoscaler.
     * @alias module:model/AutoscalingPolicy
     */
    constructor() { 
        
        AutoscalingPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AutoscalingPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AutoscalingPolicy} obj Optional instance to populate.
     * @return {module:model/AutoscalingPolicy} The populated <code>AutoscalingPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AutoscalingPolicy();

            if (data.hasOwnProperty('basicAlgorithm')) {
                obj['basicAlgorithm'] = BasicAutoscalingAlgorithm.constructFromObject(data['basicAlgorithm']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('secondaryWorkerConfig')) {
                obj['secondaryWorkerConfig'] = InstanceGroupAutoscalingPolicyConfig.constructFromObject(data['secondaryWorkerConfig']);
            }
            if (data.hasOwnProperty('workerConfig')) {
                obj['workerConfig'] = InstanceGroupAutoscalingPolicyConfig.constructFromObject(data['workerConfig']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AutoscalingPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AutoscalingPolicy</code>.
     */
    static validateJSON(data) {
        // validate the optional field `basicAlgorithm`
        if (data['basicAlgorithm']) { // data not null
          BasicAutoscalingAlgorithm.validateJSON(data['basicAlgorithm']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `secondaryWorkerConfig`
        if (data['secondaryWorkerConfig']) { // data not null
          InstanceGroupAutoscalingPolicyConfig.validateJSON(data['secondaryWorkerConfig']);
        }
        // validate the optional field `workerConfig`
        if (data['workerConfig']) { // data not null
          InstanceGroupAutoscalingPolicyConfig.validateJSON(data['workerConfig']);
        }

        return true;
    }


}



/**
 * @member {module:model/BasicAutoscalingAlgorithm} basicAlgorithm
 */
AutoscalingPolicy.prototype['basicAlgorithm'] = undefined;

/**
 * Required. The policy id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
 * @member {String} id
 */
AutoscalingPolicy.prototype['id'] = undefined;

/**
 * Optional. The labels to associate with this autoscaling policy. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with an autoscaling policy.
 * @member {Object.<String, String>} labels
 */
AutoscalingPolicy.prototype['labels'] = undefined;

/**
 * Output only. The \"resource name\" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}
 * @member {String} name
 */
AutoscalingPolicy.prototype['name'] = undefined;

/**
 * @member {module:model/InstanceGroupAutoscalingPolicyConfig} secondaryWorkerConfig
 */
AutoscalingPolicy.prototype['secondaryWorkerConfig'] = undefined;

/**
 * @member {module:model/InstanceGroupAutoscalingPolicyConfig} workerConfig
 */
AutoscalingPolicy.prototype['workerConfig'] = undefined;






export default AutoscalingPolicy;

