/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClusterOperationStatus from './ClusterOperationStatus';

/**
 * The ClusterOperationMetadata model module.
 * @module model/ClusterOperationMetadata
 * @version v1
 */
class ClusterOperationMetadata {
    /**
     * Constructs a new <code>ClusterOperationMetadata</code>.
     * Metadata describing the operation.
     * @alias module:model/ClusterOperationMetadata
     */
    constructor() { 
        
        ClusterOperationMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterOperationMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterOperationMetadata} obj Optional instance to populate.
     * @return {module:model/ClusterOperationMetadata} The populated <code>ClusterOperationMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterOperationMetadata();

            if (data.hasOwnProperty('childOperationIds')) {
                obj['childOperationIds'] = ApiClient.convertToType(data['childOperationIds'], ['String']);
            }
            if (data.hasOwnProperty('clusterName')) {
                obj['clusterName'] = ApiClient.convertToType(data['clusterName'], 'String');
            }
            if (data.hasOwnProperty('clusterUuid')) {
                obj['clusterUuid'] = ApiClient.convertToType(data['clusterUuid'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], {'String': 'String'});
            }
            if (data.hasOwnProperty('operationType')) {
                obj['operationType'] = ApiClient.convertToType(data['operationType'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ClusterOperationStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('statusHistory')) {
                obj['statusHistory'] = ApiClient.convertToType(data['statusHistory'], [ClusterOperationStatus]);
            }
            if (data.hasOwnProperty('warnings')) {
                obj['warnings'] = ApiClient.convertToType(data['warnings'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterOperationMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterOperationMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['childOperationIds'])) {
            throw new Error("Expected the field `childOperationIds` to be an array in the JSON data but got " + data['childOperationIds']);
        }
        // ensure the json data is a string
        if (data['clusterName'] && !(typeof data['clusterName'] === 'string' || data['clusterName'] instanceof String)) {
            throw new Error("Expected the field `clusterName` to be a primitive type in the JSON string but got " + data['clusterName']);
        }
        // ensure the json data is a string
        if (data['clusterUuid'] && !(typeof data['clusterUuid'] === 'string' || data['clusterUuid'] instanceof String)) {
            throw new Error("Expected the field `clusterUuid` to be a primitive type in the JSON string but got " + data['clusterUuid']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['operationType'] && !(typeof data['operationType'] === 'string' || data['operationType'] instanceof String)) {
            throw new Error("Expected the field `operationType` to be a primitive type in the JSON string but got " + data['operationType']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          ClusterOperationStatus.validateJSON(data['status']);
        }
        if (data['statusHistory']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statusHistory'])) {
                throw new Error("Expected the field `statusHistory` to be an array in the JSON data but got " + data['statusHistory']);
            }
            // validate the optional field `statusHistory` (array)
            for (const item of data['statusHistory']) {
                ClusterOperationStatus.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['warnings'])) {
            throw new Error("Expected the field `warnings` to be an array in the JSON data but got " + data['warnings']);
        }

        return true;
    }


}



/**
 * Output only. Child operation ids
 * @member {Array.<String>} childOperationIds
 */
ClusterOperationMetadata.prototype['childOperationIds'] = undefined;

/**
 * Output only. Name of the cluster for the operation.
 * @member {String} clusterName
 */
ClusterOperationMetadata.prototype['clusterName'] = undefined;

/**
 * Output only. Cluster UUID for the operation.
 * @member {String} clusterUuid
 */
ClusterOperationMetadata.prototype['clusterUuid'] = undefined;

/**
 * Output only. Short description of operation.
 * @member {String} description
 */
ClusterOperationMetadata.prototype['description'] = undefined;

/**
 * Output only. Labels associated with the operation
 * @member {Object.<String, String>} labels
 */
ClusterOperationMetadata.prototype['labels'] = undefined;

/**
 * Output only. The operation type.
 * @member {String} operationType
 */
ClusterOperationMetadata.prototype['operationType'] = undefined;

/**
 * @member {module:model/ClusterOperationStatus} status
 */
ClusterOperationMetadata.prototype['status'] = undefined;

/**
 * Output only. The previous operation status.
 * @member {Array.<module:model/ClusterOperationStatus>} statusHistory
 */
ClusterOperationMetadata.prototype['statusHistory'] = undefined;

/**
 * Output only. Errors encountered during operation execution.
 * @member {Array.<String>} warnings
 */
ClusterOperationMetadata.prototype['warnings'] = undefined;






export default ClusterOperationMetadata;

