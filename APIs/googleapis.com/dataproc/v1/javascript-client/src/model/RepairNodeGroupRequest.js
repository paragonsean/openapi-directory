/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RepairNodeGroupRequest model module.
 * @module model/RepairNodeGroupRequest
 * @version v1
 */
class RepairNodeGroupRequest {
    /**
     * Constructs a new <code>RepairNodeGroupRequest</code>.
     * @alias module:model/RepairNodeGroupRequest
     */
    constructor() { 
        
        RepairNodeGroupRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RepairNodeGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepairNodeGroupRequest} obj Optional instance to populate.
     * @return {module:model/RepairNodeGroupRequest} The populated <code>RepairNodeGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepairNodeGroupRequest();

            if (data.hasOwnProperty('instanceNames')) {
                obj['instanceNames'] = ApiClient.convertToType(data['instanceNames'], ['String']);
            }
            if (data.hasOwnProperty('repairAction')) {
                obj['repairAction'] = ApiClient.convertToType(data['repairAction'], 'String');
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepairNodeGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepairNodeGroupRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['instanceNames'])) {
            throw new Error("Expected the field `instanceNames` to be an array in the JSON data but got " + data['instanceNames']);
        }
        // ensure the json data is a string
        if (data['repairAction'] && !(typeof data['repairAction'] === 'string' || data['repairAction'] instanceof String)) {
            throw new Error("Expected the field `repairAction` to be a primitive type in the JSON string but got " + data['repairAction']);
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }

        return true;
    }


}



/**
 * Required. Name of instances to be repaired. These instances must belong to specified node pool.
 * @member {Array.<String>} instanceNames
 */
RepairNodeGroupRequest.prototype['instanceNames'] = undefined;

/**
 * Required. Repair action to take on specified resources of the node pool.
 * @member {module:model/RepairNodeGroupRequest.RepairActionEnum} repairAction
 */
RepairNodeGroupRequest.prototype['repairAction'] = undefined;

/**
 * Optional. A unique ID used to identify the request. If the server receives two RepairNodeGroupRequest with the same ID, the second request is ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
 * @member {String} requestId
 */
RepairNodeGroupRequest.prototype['requestId'] = undefined;





/**
 * Allowed values for the <code>repairAction</code> property.
 * @enum {String}
 * @readonly
 */
RepairNodeGroupRequest['RepairActionEnum'] = {

    /**
     * value: "REPAIR_ACTION_UNSPECIFIED"
     * @const
     */
    "REPAIR_ACTION_UNSPECIFIED": "REPAIR_ACTION_UNSPECIFIED",

    /**
     * value: "REPLACE"
     * @const
     */
    "REPLACE": "REPLACE"
};



export default RepairNodeGroupRequest;

