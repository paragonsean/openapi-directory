/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AcceleratorConfig model module.
 * @module model/AcceleratorConfig
 * @version v1
 */
class AcceleratorConfig {
    /**
     * Constructs a new <code>AcceleratorConfig</code>.
     * Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).
     * @alias module:model/AcceleratorConfig
     */
    constructor() { 
        
        AcceleratorConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AcceleratorConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AcceleratorConfig} obj Optional instance to populate.
     * @return {module:model/AcceleratorConfig} The populated <code>AcceleratorConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AcceleratorConfig();

            if (data.hasOwnProperty('acceleratorCount')) {
                obj['acceleratorCount'] = ApiClient.convertToType(data['acceleratorCount'], 'Number');
            }
            if (data.hasOwnProperty('acceleratorTypeUri')) {
                obj['acceleratorTypeUri'] = ApiClient.convertToType(data['acceleratorTypeUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AcceleratorConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AcceleratorConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['acceleratorTypeUri'] && !(typeof data['acceleratorTypeUri'] === 'string' || data['acceleratorTypeUri'] instanceof String)) {
            throw new Error("Expected the field `acceleratorTypeUri` to be a primitive type in the JSON string but got " + data['acceleratorTypeUri']);
        }

        return true;
    }


}



/**
 * The number of the accelerator cards of this type exposed to this instance.
 * @member {Number} acceleratorCount
 */
AcceleratorConfig.prototype['acceleratorCount'] = undefined;

/**
 * Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80.
 * @member {String} acceleratorTypeUri
 */
AcceleratorConfig.prototype['acceleratorTypeUri'] = undefined;






export default AcceleratorConfig;

