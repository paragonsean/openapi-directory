/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudDataprocApi);
  }
}(this, function(expect, CloudDataprocApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudDataprocApi.Job();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Job', function() {
    it('should create an instance of Job', function() {
      // uncomment below and update the code to test Job
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be.a(CloudDataprocApi.Job);
    });

    it('should have the property done (base name: "done")', function() {
      // uncomment below and update the code to test the property done
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property driverControlFilesUri (base name: "driverControlFilesUri")', function() {
      // uncomment below and update the code to test the property driverControlFilesUri
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property driverOutputResourceUri (base name: "driverOutputResourceUri")', function() {
      // uncomment below and update the code to test the property driverOutputResourceUri
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property driverSchedulingConfig (base name: "driverSchedulingConfig")', function() {
      // uncomment below and update the code to test the property driverSchedulingConfig
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property flinkJob (base name: "flinkJob")', function() {
      // uncomment below and update the code to test the property flinkJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property hadoopJob (base name: "hadoopJob")', function() {
      // uncomment below and update the code to test the property hadoopJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property hiveJob (base name: "hiveJob")', function() {
      // uncomment below and update the code to test the property hiveJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property jobUuid (base name: "jobUuid")', function() {
      // uncomment below and update the code to test the property jobUuid
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property pigJob (base name: "pigJob")', function() {
      // uncomment below and update the code to test the property pigJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property placement (base name: "placement")', function() {
      // uncomment below and update the code to test the property placement
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property prestoJob (base name: "prestoJob")', function() {
      // uncomment below and update the code to test the property prestoJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property pysparkJob (base name: "pysparkJob")', function() {
      // uncomment below and update the code to test the property pysparkJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property reference (base name: "reference")', function() {
      // uncomment below and update the code to test the property reference
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property scheduling (base name: "scheduling")', function() {
      // uncomment below and update the code to test the property scheduling
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property sparkJob (base name: "sparkJob")', function() {
      // uncomment below and update the code to test the property sparkJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property sparkRJob (base name: "sparkRJob")', function() {
      // uncomment below and update the code to test the property sparkRJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property sparkSqlJob (base name: "sparkSqlJob")', function() {
      // uncomment below and update the code to test the property sparkSqlJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property statusHistory (base name: "statusHistory")', function() {
      // uncomment below and update the code to test the property statusHistory
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property trinoJob (base name: "trinoJob")', function() {
      // uncomment below and update the code to test the property trinoJob
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

    it('should have the property yarnApplications (base name: "yarnApplications")', function() {
      // uncomment below and update the code to test the property yarnApplications
      //var instance = new CloudDataprocApi.Job();
      //expect(instance).to.be();
    });

  });

}));
