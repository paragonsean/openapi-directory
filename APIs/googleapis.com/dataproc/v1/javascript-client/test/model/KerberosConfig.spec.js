/**
 * Cloud Dataproc API
 * Manages Hadoop-based clusters and jobs on Google Cloud Platform.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudDataprocApi);
  }
}(this, function(expect, CloudDataprocApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudDataprocApi.KerberosConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('KerberosConfig', function() {
    it('should create an instance of KerberosConfig', function() {
      // uncomment below and update the code to test KerberosConfig
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be.a(CloudDataprocApi.KerberosConfig);
    });

    it('should have the property crossRealmTrustAdminServer (base name: "crossRealmTrustAdminServer")', function() {
      // uncomment below and update the code to test the property crossRealmTrustAdminServer
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property crossRealmTrustKdc (base name: "crossRealmTrustKdc")', function() {
      // uncomment below and update the code to test the property crossRealmTrustKdc
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property crossRealmTrustRealm (base name: "crossRealmTrustRealm")', function() {
      // uncomment below and update the code to test the property crossRealmTrustRealm
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property crossRealmTrustSharedPasswordUri (base name: "crossRealmTrustSharedPasswordUri")', function() {
      // uncomment below and update the code to test the property crossRealmTrustSharedPasswordUri
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property enableKerberos (base name: "enableKerberos")', function() {
      // uncomment below and update the code to test the property enableKerberos
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property kdcDbKeyUri (base name: "kdcDbKeyUri")', function() {
      // uncomment below and update the code to test the property kdcDbKeyUri
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property keyPasswordUri (base name: "keyPasswordUri")', function() {
      // uncomment below and update the code to test the property keyPasswordUri
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property keystorePasswordUri (base name: "keystorePasswordUri")', function() {
      // uncomment below and update the code to test the property keystorePasswordUri
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property keystoreUri (base name: "keystoreUri")', function() {
      // uncomment below and update the code to test the property keystoreUri
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property kmsKeyUri (base name: "kmsKeyUri")', function() {
      // uncomment below and update the code to test the property kmsKeyUri
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property realm (base name: "realm")', function() {
      // uncomment below and update the code to test the property realm
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property rootPrincipalPasswordUri (base name: "rootPrincipalPasswordUri")', function() {
      // uncomment below and update the code to test the property rootPrincipalPasswordUri
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property tgtLifetimeHours (base name: "tgtLifetimeHours")', function() {
      // uncomment below and update the code to test the property tgtLifetimeHours
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property truststorePasswordUri (base name: "truststorePasswordUri")', function() {
      // uncomment below and update the code to test the property truststorePasswordUri
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

    it('should have the property truststoreUri (base name: "truststoreUri")', function() {
      // uncomment below and update the code to test the property truststoreUri
      //var instance = new CloudDataprocApi.KerberosConfig();
      //expect(instance).to.be();
    });

  });

}));
