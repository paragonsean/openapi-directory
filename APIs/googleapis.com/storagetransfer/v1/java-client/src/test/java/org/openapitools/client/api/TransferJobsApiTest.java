/*
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListTransferJobsResponse;
import org.openapitools.client.model.Operation;
import org.openapitools.client.model.RunTransferJobRequest;
import org.openapitools.client.model.TransferJob;
import org.openapitools.client.model.UpdateTransferJobRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransferJobsApi
 */
@Disabled
public class TransferJobsApiTest {

    private final TransferJobsApi api = new TransferJobsApi();

    /**
     * Creates a transfer job that runs periodically.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storagetransferTransferJobsCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TransferJob transferJob = null;
        TransferJob response = api.storagetransferTransferJobsCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, transferJob);
        // TODO: test validations
    }

    /**
     * Deletes a transfer job. Deleting a transfer job sets its status to DELETED.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storagetransferTransferJobsDeleteTest() throws ApiException {
        String jobName = null;
        String projectId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Object response = api.storagetransferTransferJobsDelete(jobName, projectId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets a transfer job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storagetransferTransferJobsGetTest() throws ApiException {
        String jobName = null;
        String projectId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        TransferJob response = api.storagetransferTransferJobsGet(jobName, projectId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists transfer jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storagetransferTransferJobsListTest() throws ApiException {
        String filter = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        ListTransferJobsResponse response = api.storagetransferTransferJobsList(filter, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Updates a transfer job. Updating a job&#39;s transfer spec does not affect transfer operations that are running already. **Note:** The job&#39;s status field can be modified using this RPC (for example, to set a job&#39;s status to DELETED, DISABLED, or ENABLED).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storagetransferTransferJobsPatchTest() throws ApiException {
        String jobName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        UpdateTransferJobRequest updateTransferJobRequest = null;
        TransferJob response = api.storagetransferTransferJobsPatch(jobName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateTransferJobRequest);
        // TODO: test validations
    }

    /**
     * Starts a new operation for the specified transfer job. A &#x60;TransferJob&#x60; has a maximum of one active &#x60;TransferOperation&#x60;. If this method is called while a &#x60;TransferOperation&#x60; is active, an error is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void storagetransferTransferJobsRunTest() throws ApiException {
        String jobName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        RunTransferJobRequest runTransferJobRequest = null;
        Operation response = api.storagetransferTransferJobsRun(jobName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, runTransferJobRequest);
        // TODO: test validations
    }

}
