# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventStream(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_stream_expiration_time: str=None, event_stream_start_time: str=None, name: str=None):
        """EventStream - a model defined in OpenAPI

        :param event_stream_expiration_time: The event_stream_expiration_time of this EventStream.
        :param event_stream_start_time: The event_stream_start_time of this EventStream.
        :param name: The name of this EventStream.
        """
        self.openapi_types = {
            'event_stream_expiration_time': str,
            'event_stream_start_time': str,
            'name': str
        }

        self.attribute_map = {
            'event_stream_expiration_time': 'eventStreamExpirationTime',
            'event_stream_start_time': 'eventStreamStartTime',
            'name': 'name'
        }

        self._event_stream_expiration_time = event_stream_expiration_time
        self._event_stream_start_time = event_stream_start_time
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventStream':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventStream of this EventStream.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_stream_expiration_time(self):
        """Gets the event_stream_expiration_time of this EventStream.

        Specifies the data and time at which Storage Transfer Service stops listening for events from this stream. After this time, any transfers in progress will complete, but no new transfers are initiated.

        :return: The event_stream_expiration_time of this EventStream.
        :rtype: str
        """
        return self._event_stream_expiration_time

    @event_stream_expiration_time.setter
    def event_stream_expiration_time(self, event_stream_expiration_time):
        """Sets the event_stream_expiration_time of this EventStream.

        Specifies the data and time at which Storage Transfer Service stops listening for events from this stream. After this time, any transfers in progress will complete, but no new transfers are initiated.

        :param event_stream_expiration_time: The event_stream_expiration_time of this EventStream.
        :type event_stream_expiration_time: str
        """

        self._event_stream_expiration_time = event_stream_expiration_time

    @property
    def event_stream_start_time(self):
        """Gets the event_stream_start_time of this EventStream.

        Specifies the date and time that Storage Transfer Service starts listening for events from this stream. If no start time is specified or start time is in the past, Storage Transfer Service starts listening immediately.

        :return: The event_stream_start_time of this EventStream.
        :rtype: str
        """
        return self._event_stream_start_time

    @event_stream_start_time.setter
    def event_stream_start_time(self, event_stream_start_time):
        """Sets the event_stream_start_time of this EventStream.

        Specifies the date and time that Storage Transfer Service starts listening for events from this stream. If no start time is specified or start time is in the past, Storage Transfer Service starts listening immediately.

        :param event_stream_start_time: The event_stream_start_time of this EventStream.
        :type event_stream_start_time: str
        """

        self._event_stream_start_time = event_stream_start_time

    @property
    def name(self):
        """Gets the name of this EventStream.

        Required. Specifies a unique name of the resource such as AWS SQS ARN in the form 'arn:aws:sqs:region:account_id:queue_name', or Pub/Sub subscription resource name in the form 'projects/{project}/subscriptions/{sub}'.

        :return: The name of this EventStream.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EventStream.

        Required. Specifies a unique name of the resource such as AWS SQS ARN in the form 'arn:aws:sqs:region:account_id:queue_name', or Pub/Sub subscription resource name in the form 'projects/{project}/subscriptions/{sub}'.

        :param name: The name of this EventStream.
        :type name: str
        """

        self._name = name
