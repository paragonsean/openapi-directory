# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.aws_s3_compatible_data import AwsS3CompatibleData
from openapi_server.models.aws_s3_data import AwsS3Data
from openapi_server.models.azure_blob_storage_data import AzureBlobStorageData
from openapi_server.models.gcs_data import GcsData
from openapi_server.models.hdfs_data import HdfsData
from openapi_server.models.http_data import HttpData
from openapi_server.models.object_conditions import ObjectConditions
from openapi_server.models.posix_filesystem import PosixFilesystem
from openapi_server.models.transfer_manifest import TransferManifest
from openapi_server.models.transfer_options import TransferOptions
from openapi_server import util


class TransferSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aws_s3_compatible_data_source: AwsS3CompatibleData=None, aws_s3_data_source: AwsS3Data=None, azure_blob_storage_data_source: AzureBlobStorageData=None, gcs_data_sink: GcsData=None, gcs_data_source: GcsData=None, gcs_intermediate_data_location: GcsData=None, hdfs_data_source: HdfsData=None, http_data_source: HttpData=None, object_conditions: ObjectConditions=None, posix_data_sink: PosixFilesystem=None, posix_data_source: PosixFilesystem=None, sink_agent_pool_name: str=None, source_agent_pool_name: str=None, transfer_manifest: TransferManifest=None, transfer_options: TransferOptions=None):
        """TransferSpec - a model defined in OpenAPI

        :param aws_s3_compatible_data_source: The aws_s3_compatible_data_source of this TransferSpec.
        :param aws_s3_data_source: The aws_s3_data_source of this TransferSpec.
        :param azure_blob_storage_data_source: The azure_blob_storage_data_source of this TransferSpec.
        :param gcs_data_sink: The gcs_data_sink of this TransferSpec.
        :param gcs_data_source: The gcs_data_source of this TransferSpec.
        :param gcs_intermediate_data_location: The gcs_intermediate_data_location of this TransferSpec.
        :param hdfs_data_source: The hdfs_data_source of this TransferSpec.
        :param http_data_source: The http_data_source of this TransferSpec.
        :param object_conditions: The object_conditions of this TransferSpec.
        :param posix_data_sink: The posix_data_sink of this TransferSpec.
        :param posix_data_source: The posix_data_source of this TransferSpec.
        :param sink_agent_pool_name: The sink_agent_pool_name of this TransferSpec.
        :param source_agent_pool_name: The source_agent_pool_name of this TransferSpec.
        :param transfer_manifest: The transfer_manifest of this TransferSpec.
        :param transfer_options: The transfer_options of this TransferSpec.
        """
        self.openapi_types = {
            'aws_s3_compatible_data_source': AwsS3CompatibleData,
            'aws_s3_data_source': AwsS3Data,
            'azure_blob_storage_data_source': AzureBlobStorageData,
            'gcs_data_sink': GcsData,
            'gcs_data_source': GcsData,
            'gcs_intermediate_data_location': GcsData,
            'hdfs_data_source': HdfsData,
            'http_data_source': HttpData,
            'object_conditions': ObjectConditions,
            'posix_data_sink': PosixFilesystem,
            'posix_data_source': PosixFilesystem,
            'sink_agent_pool_name': str,
            'source_agent_pool_name': str,
            'transfer_manifest': TransferManifest,
            'transfer_options': TransferOptions
        }

        self.attribute_map = {
            'aws_s3_compatible_data_source': 'awsS3CompatibleDataSource',
            'aws_s3_data_source': 'awsS3DataSource',
            'azure_blob_storage_data_source': 'azureBlobStorageDataSource',
            'gcs_data_sink': 'gcsDataSink',
            'gcs_data_source': 'gcsDataSource',
            'gcs_intermediate_data_location': 'gcsIntermediateDataLocation',
            'hdfs_data_source': 'hdfsDataSource',
            'http_data_source': 'httpDataSource',
            'object_conditions': 'objectConditions',
            'posix_data_sink': 'posixDataSink',
            'posix_data_source': 'posixDataSource',
            'sink_agent_pool_name': 'sinkAgentPoolName',
            'source_agent_pool_name': 'sourceAgentPoolName',
            'transfer_manifest': 'transferManifest',
            'transfer_options': 'transferOptions'
        }

        self._aws_s3_compatible_data_source = aws_s3_compatible_data_source
        self._aws_s3_data_source = aws_s3_data_source
        self._azure_blob_storage_data_source = azure_blob_storage_data_source
        self._gcs_data_sink = gcs_data_sink
        self._gcs_data_source = gcs_data_source
        self._gcs_intermediate_data_location = gcs_intermediate_data_location
        self._hdfs_data_source = hdfs_data_source
        self._http_data_source = http_data_source
        self._object_conditions = object_conditions
        self._posix_data_sink = posix_data_sink
        self._posix_data_source = posix_data_source
        self._sink_agent_pool_name = sink_agent_pool_name
        self._source_agent_pool_name = source_agent_pool_name
        self._transfer_manifest = transfer_manifest
        self._transfer_options = transfer_options

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransferSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransferSpec of this TransferSpec.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aws_s3_compatible_data_source(self):
        """Gets the aws_s3_compatible_data_source of this TransferSpec.


        :return: The aws_s3_compatible_data_source of this TransferSpec.
        :rtype: AwsS3CompatibleData
        """
        return self._aws_s3_compatible_data_source

    @aws_s3_compatible_data_source.setter
    def aws_s3_compatible_data_source(self, aws_s3_compatible_data_source):
        """Sets the aws_s3_compatible_data_source of this TransferSpec.


        :param aws_s3_compatible_data_source: The aws_s3_compatible_data_source of this TransferSpec.
        :type aws_s3_compatible_data_source: AwsS3CompatibleData
        """

        self._aws_s3_compatible_data_source = aws_s3_compatible_data_source

    @property
    def aws_s3_data_source(self):
        """Gets the aws_s3_data_source of this TransferSpec.


        :return: The aws_s3_data_source of this TransferSpec.
        :rtype: AwsS3Data
        """
        return self._aws_s3_data_source

    @aws_s3_data_source.setter
    def aws_s3_data_source(self, aws_s3_data_source):
        """Sets the aws_s3_data_source of this TransferSpec.


        :param aws_s3_data_source: The aws_s3_data_source of this TransferSpec.
        :type aws_s3_data_source: AwsS3Data
        """

        self._aws_s3_data_source = aws_s3_data_source

    @property
    def azure_blob_storage_data_source(self):
        """Gets the azure_blob_storage_data_source of this TransferSpec.


        :return: The azure_blob_storage_data_source of this TransferSpec.
        :rtype: AzureBlobStorageData
        """
        return self._azure_blob_storage_data_source

    @azure_blob_storage_data_source.setter
    def azure_blob_storage_data_source(self, azure_blob_storage_data_source):
        """Sets the azure_blob_storage_data_source of this TransferSpec.


        :param azure_blob_storage_data_source: The azure_blob_storage_data_source of this TransferSpec.
        :type azure_blob_storage_data_source: AzureBlobStorageData
        """

        self._azure_blob_storage_data_source = azure_blob_storage_data_source

    @property
    def gcs_data_sink(self):
        """Gets the gcs_data_sink of this TransferSpec.


        :return: The gcs_data_sink of this TransferSpec.
        :rtype: GcsData
        """
        return self._gcs_data_sink

    @gcs_data_sink.setter
    def gcs_data_sink(self, gcs_data_sink):
        """Sets the gcs_data_sink of this TransferSpec.


        :param gcs_data_sink: The gcs_data_sink of this TransferSpec.
        :type gcs_data_sink: GcsData
        """

        self._gcs_data_sink = gcs_data_sink

    @property
    def gcs_data_source(self):
        """Gets the gcs_data_source of this TransferSpec.


        :return: The gcs_data_source of this TransferSpec.
        :rtype: GcsData
        """
        return self._gcs_data_source

    @gcs_data_source.setter
    def gcs_data_source(self, gcs_data_source):
        """Sets the gcs_data_source of this TransferSpec.


        :param gcs_data_source: The gcs_data_source of this TransferSpec.
        :type gcs_data_source: GcsData
        """

        self._gcs_data_source = gcs_data_source

    @property
    def gcs_intermediate_data_location(self):
        """Gets the gcs_intermediate_data_location of this TransferSpec.


        :return: The gcs_intermediate_data_location of this TransferSpec.
        :rtype: GcsData
        """
        return self._gcs_intermediate_data_location

    @gcs_intermediate_data_location.setter
    def gcs_intermediate_data_location(self, gcs_intermediate_data_location):
        """Sets the gcs_intermediate_data_location of this TransferSpec.


        :param gcs_intermediate_data_location: The gcs_intermediate_data_location of this TransferSpec.
        :type gcs_intermediate_data_location: GcsData
        """

        self._gcs_intermediate_data_location = gcs_intermediate_data_location

    @property
    def hdfs_data_source(self):
        """Gets the hdfs_data_source of this TransferSpec.


        :return: The hdfs_data_source of this TransferSpec.
        :rtype: HdfsData
        """
        return self._hdfs_data_source

    @hdfs_data_source.setter
    def hdfs_data_source(self, hdfs_data_source):
        """Sets the hdfs_data_source of this TransferSpec.


        :param hdfs_data_source: The hdfs_data_source of this TransferSpec.
        :type hdfs_data_source: HdfsData
        """

        self._hdfs_data_source = hdfs_data_source

    @property
    def http_data_source(self):
        """Gets the http_data_source of this TransferSpec.


        :return: The http_data_source of this TransferSpec.
        :rtype: HttpData
        """
        return self._http_data_source

    @http_data_source.setter
    def http_data_source(self, http_data_source):
        """Sets the http_data_source of this TransferSpec.


        :param http_data_source: The http_data_source of this TransferSpec.
        :type http_data_source: HttpData
        """

        self._http_data_source = http_data_source

    @property
    def object_conditions(self):
        """Gets the object_conditions of this TransferSpec.


        :return: The object_conditions of this TransferSpec.
        :rtype: ObjectConditions
        """
        return self._object_conditions

    @object_conditions.setter
    def object_conditions(self, object_conditions):
        """Sets the object_conditions of this TransferSpec.


        :param object_conditions: The object_conditions of this TransferSpec.
        :type object_conditions: ObjectConditions
        """

        self._object_conditions = object_conditions

    @property
    def posix_data_sink(self):
        """Gets the posix_data_sink of this TransferSpec.


        :return: The posix_data_sink of this TransferSpec.
        :rtype: PosixFilesystem
        """
        return self._posix_data_sink

    @posix_data_sink.setter
    def posix_data_sink(self, posix_data_sink):
        """Sets the posix_data_sink of this TransferSpec.


        :param posix_data_sink: The posix_data_sink of this TransferSpec.
        :type posix_data_sink: PosixFilesystem
        """

        self._posix_data_sink = posix_data_sink

    @property
    def posix_data_source(self):
        """Gets the posix_data_source of this TransferSpec.


        :return: The posix_data_source of this TransferSpec.
        :rtype: PosixFilesystem
        """
        return self._posix_data_source

    @posix_data_source.setter
    def posix_data_source(self, posix_data_source):
        """Sets the posix_data_source of this TransferSpec.


        :param posix_data_source: The posix_data_source of this TransferSpec.
        :type posix_data_source: PosixFilesystem
        """

        self._posix_data_source = posix_data_source

    @property
    def sink_agent_pool_name(self):
        """Gets the sink_agent_pool_name of this TransferSpec.

        Specifies the agent pool name associated with the posix data sink. When unspecified, the default name is used.

        :return: The sink_agent_pool_name of this TransferSpec.
        :rtype: str
        """
        return self._sink_agent_pool_name

    @sink_agent_pool_name.setter
    def sink_agent_pool_name(self, sink_agent_pool_name):
        """Sets the sink_agent_pool_name of this TransferSpec.

        Specifies the agent pool name associated with the posix data sink. When unspecified, the default name is used.

        :param sink_agent_pool_name: The sink_agent_pool_name of this TransferSpec.
        :type sink_agent_pool_name: str
        """

        self._sink_agent_pool_name = sink_agent_pool_name

    @property
    def source_agent_pool_name(self):
        """Gets the source_agent_pool_name of this TransferSpec.

        Specifies the agent pool name associated with the posix data source. When unspecified, the default name is used.

        :return: The source_agent_pool_name of this TransferSpec.
        :rtype: str
        """
        return self._source_agent_pool_name

    @source_agent_pool_name.setter
    def source_agent_pool_name(self, source_agent_pool_name):
        """Sets the source_agent_pool_name of this TransferSpec.

        Specifies the agent pool name associated with the posix data source. When unspecified, the default name is used.

        :param source_agent_pool_name: The source_agent_pool_name of this TransferSpec.
        :type source_agent_pool_name: str
        """

        self._source_agent_pool_name = source_agent_pool_name

    @property
    def transfer_manifest(self):
        """Gets the transfer_manifest of this TransferSpec.


        :return: The transfer_manifest of this TransferSpec.
        :rtype: TransferManifest
        """
        return self._transfer_manifest

    @transfer_manifest.setter
    def transfer_manifest(self, transfer_manifest):
        """Sets the transfer_manifest of this TransferSpec.


        :param transfer_manifest: The transfer_manifest of this TransferSpec.
        :type transfer_manifest: TransferManifest
        """

        self._transfer_manifest = transfer_manifest

    @property
    def transfer_options(self):
        """Gets the transfer_options of this TransferSpec.


        :return: The transfer_options of this TransferSpec.
        :rtype: TransferOptions
        """
        return self._transfer_options

    @transfer_options.setter
    def transfer_options(self, transfer_options):
        """Sets the transfer_options of this TransferSpec.


        :param transfer_options: The transfer_options of this TransferSpec.
        :type transfer_options: TransferOptions
        """

        self._transfer_options = transfer_options
