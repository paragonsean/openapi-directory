# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleServiceAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_email: str=None, subject_id: str=None):
        """GoogleServiceAccount - a model defined in OpenAPI

        :param account_email: The account_email of this GoogleServiceAccount.
        :param subject_id: The subject_id of this GoogleServiceAccount.
        """
        self.openapi_types = {
            'account_email': str,
            'subject_id': str
        }

        self.attribute_map = {
            'account_email': 'accountEmail',
            'subject_id': 'subjectId'
        }

        self._account_email = account_email
        self._subject_id = subject_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleServiceAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleServiceAccount of this GoogleServiceAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_email(self):
        """Gets the account_email of this GoogleServiceAccount.

        Email address of the service account.

        :return: The account_email of this GoogleServiceAccount.
        :rtype: str
        """
        return self._account_email

    @account_email.setter
    def account_email(self, account_email):
        """Sets the account_email of this GoogleServiceAccount.

        Email address of the service account.

        :param account_email: The account_email of this GoogleServiceAccount.
        :type account_email: str
        """

        self._account_email = account_email

    @property
    def subject_id(self):
        """Gets the subject_id of this GoogleServiceAccount.

        Unique identifier for the service account.

        :return: The subject_id of this GoogleServiceAccount.
        :rtype: str
        """
        return self._subject_id

    @subject_id.setter
    def subject_id(self, subject_id):
        """Sets the subject_id of this GoogleServiceAccount.

        Unique identifier for the service account.

        :param subject_id: The subject_id of this GoogleServiceAccount.
        :type subject_id: str
        """

        self._subject_id = subject_id
