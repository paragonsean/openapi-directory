# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HttpData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, list_url: str=None):
        """HttpData - a model defined in OpenAPI

        :param list_url: The list_url of this HttpData.
        """
        self.openapi_types = {
            'list_url': str
        }

        self.attribute_map = {
            'list_url': 'listUrl'
        }

        self._list_url = list_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpData of this HttpData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def list_url(self):
        """Gets the list_url of this HttpData.

        Required. The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.

        :return: The list_url of this HttpData.
        :rtype: str
        """
        return self._list_url

    @list_url.setter
    def list_url(self, list_url):
        """Sets the list_url of this HttpData.

        Required. The URL that points to the file that stores the object list entries. This file must allow public access. Currently, only URLs with HTTP and HTTPS schemes are supported.

        :param list_url: The list_url of this HttpData.
        :type list_url: str
        """

        self._list_url = list_url
