/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StorageTransferApi);
  }
}(this, function(expect, StorageTransferApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StorageTransferApi.TransferSpec();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransferSpec', function() {
    it('should create an instance of TransferSpec', function() {
      // uncomment below and update the code to test TransferSpec
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be.a(StorageTransferApi.TransferSpec);
    });

    it('should have the property awsS3CompatibleDataSource (base name: "awsS3CompatibleDataSource")', function() {
      // uncomment below and update the code to test the property awsS3CompatibleDataSource
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property awsS3DataSource (base name: "awsS3DataSource")', function() {
      // uncomment below and update the code to test the property awsS3DataSource
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property azureBlobStorageDataSource (base name: "azureBlobStorageDataSource")', function() {
      // uncomment below and update the code to test the property azureBlobStorageDataSource
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property gcsDataSink (base name: "gcsDataSink")', function() {
      // uncomment below and update the code to test the property gcsDataSink
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property gcsDataSource (base name: "gcsDataSource")', function() {
      // uncomment below and update the code to test the property gcsDataSource
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property gcsIntermediateDataLocation (base name: "gcsIntermediateDataLocation")', function() {
      // uncomment below and update the code to test the property gcsIntermediateDataLocation
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property hdfsDataSource (base name: "hdfsDataSource")', function() {
      // uncomment below and update the code to test the property hdfsDataSource
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property httpDataSource (base name: "httpDataSource")', function() {
      // uncomment below and update the code to test the property httpDataSource
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property objectConditions (base name: "objectConditions")', function() {
      // uncomment below and update the code to test the property objectConditions
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property posixDataSink (base name: "posixDataSink")', function() {
      // uncomment below and update the code to test the property posixDataSink
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property posixDataSource (base name: "posixDataSource")', function() {
      // uncomment below and update the code to test the property posixDataSource
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property sinkAgentPoolName (base name: "sinkAgentPoolName")', function() {
      // uncomment below and update the code to test the property sinkAgentPoolName
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property sourceAgentPoolName (base name: "sourceAgentPoolName")', function() {
      // uncomment below and update the code to test the property sourceAgentPoolName
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property transferManifest (base name: "transferManifest")', function() {
      // uncomment below and update the code to test the property transferManifest
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

    it('should have the property transferOptions (base name: "transferOptions")', function() {
      // uncomment below and update the code to test the property transferOptions
      //var instance = new StorageTransferApi.TransferSpec();
      //expect(instance).to.be();
    });

  });

}));
