/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StorageTransferApi);
  }
}(this, function(expect, StorageTransferApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StorageTransferApi.TransferCounters();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransferCounters', function() {
    it('should create an instance of TransferCounters', function() {
      // uncomment below and update the code to test TransferCounters
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be.a(StorageTransferApi.TransferCounters);
    });

    it('should have the property bytesCopiedToSink (base name: "bytesCopiedToSink")', function() {
      // uncomment below and update the code to test the property bytesCopiedToSink
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property bytesDeletedFromSink (base name: "bytesDeletedFromSink")', function() {
      // uncomment below and update the code to test the property bytesDeletedFromSink
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property bytesDeletedFromSource (base name: "bytesDeletedFromSource")', function() {
      // uncomment below and update the code to test the property bytesDeletedFromSource
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property bytesFailedToDeleteFromSink (base name: "bytesFailedToDeleteFromSink")', function() {
      // uncomment below and update the code to test the property bytesFailedToDeleteFromSink
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property bytesFoundFromSource (base name: "bytesFoundFromSource")', function() {
      // uncomment below and update the code to test the property bytesFoundFromSource
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property bytesFoundOnlyFromSink (base name: "bytesFoundOnlyFromSink")', function() {
      // uncomment below and update the code to test the property bytesFoundOnlyFromSink
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property bytesFromSourceFailed (base name: "bytesFromSourceFailed")', function() {
      // uncomment below and update the code to test the property bytesFromSourceFailed
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property bytesFromSourceSkippedBySync (base name: "bytesFromSourceSkippedBySync")', function() {
      // uncomment below and update the code to test the property bytesFromSourceSkippedBySync
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property directoriesFailedToListFromSource (base name: "directoriesFailedToListFromSource")', function() {
      // uncomment below and update the code to test the property directoriesFailedToListFromSource
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property directoriesFoundFromSource (base name: "directoriesFoundFromSource")', function() {
      // uncomment below and update the code to test the property directoriesFoundFromSource
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property directoriesSuccessfullyListedFromSource (base name: "directoriesSuccessfullyListedFromSource")', function() {
      // uncomment below and update the code to test the property directoriesSuccessfullyListedFromSource
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property intermediateObjectsCleanedUp (base name: "intermediateObjectsCleanedUp")', function() {
      // uncomment below and update the code to test the property intermediateObjectsCleanedUp
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property intermediateObjectsFailedCleanedUp (base name: "intermediateObjectsFailedCleanedUp")', function() {
      // uncomment below and update the code to test the property intermediateObjectsFailedCleanedUp
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property objectsCopiedToSink (base name: "objectsCopiedToSink")', function() {
      // uncomment below and update the code to test the property objectsCopiedToSink
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property objectsDeletedFromSink (base name: "objectsDeletedFromSink")', function() {
      // uncomment below and update the code to test the property objectsDeletedFromSink
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property objectsDeletedFromSource (base name: "objectsDeletedFromSource")', function() {
      // uncomment below and update the code to test the property objectsDeletedFromSource
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property objectsFailedToDeleteFromSink (base name: "objectsFailedToDeleteFromSink")', function() {
      // uncomment below and update the code to test the property objectsFailedToDeleteFromSink
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property objectsFoundFromSource (base name: "objectsFoundFromSource")', function() {
      // uncomment below and update the code to test the property objectsFoundFromSource
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property objectsFoundOnlyFromSink (base name: "objectsFoundOnlyFromSink")', function() {
      // uncomment below and update the code to test the property objectsFoundOnlyFromSink
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property objectsFromSourceFailed (base name: "objectsFromSourceFailed")', function() {
      // uncomment below and update the code to test the property objectsFromSourceFailed
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

    it('should have the property objectsFromSourceSkippedBySync (base name: "objectsFromSourceSkippedBySync")', function() {
      // uncomment below and update the code to test the property objectsFromSourceSkippedBySync
      //var instance = new StorageTransferApi.TransferCounters();
      //expect(instance).to.be();
    });

  });

}));
