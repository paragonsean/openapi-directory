/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StorageTransferApi);
  }
}(this, function(expect, StorageTransferApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StorageTransferApi.TransferJob();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransferJob', function() {
    it('should create an instance of TransferJob', function() {
      // uncomment below and update the code to test TransferJob
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be.a(StorageTransferApi.TransferJob);
    });

    it('should have the property creationTime (base name: "creationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property deletionTime (base name: "deletionTime")', function() {
      // uncomment below and update the code to test the property deletionTime
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property eventStream (base name: "eventStream")', function() {
      // uncomment below and update the code to test the property eventStream
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property lastModificationTime (base name: "lastModificationTime")', function() {
      // uncomment below and update the code to test the property lastModificationTime
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property latestOperationName (base name: "latestOperationName")', function() {
      // uncomment below and update the code to test the property latestOperationName
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property loggingConfig (base name: "loggingConfig")', function() {
      // uncomment below and update the code to test the property loggingConfig
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property notificationConfig (base name: "notificationConfig")', function() {
      // uncomment below and update the code to test the property notificationConfig
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property projectId (base name: "projectId")', function() {
      // uncomment below and update the code to test the property projectId
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property schedule (base name: "schedule")', function() {
      // uncomment below and update the code to test the property schedule
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

    it('should have the property transferSpec (base name: "transferSpec")', function() {
      // uncomment below and update the code to test the property transferSpec
      //var instance = new StorageTransferApi.TransferJob();
      //expect(instance).to.be();
    });

  });

}));
