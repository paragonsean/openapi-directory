/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The S3CompatibleMetadata model module.
 * @module model/S3CompatibleMetadata
 * @version v1
 */
class S3CompatibleMetadata {
    /**
     * Constructs a new <code>S3CompatibleMetadata</code>.
     * S3CompatibleMetadata contains the metadata fields that apply to the basic types of S3-compatible data providers.
     * @alias module:model/S3CompatibleMetadata
     */
    constructor() { 
        
        S3CompatibleMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>S3CompatibleMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/S3CompatibleMetadata} obj Optional instance to populate.
     * @return {module:model/S3CompatibleMetadata} The populated <code>S3CompatibleMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new S3CompatibleMetadata();

            if (data.hasOwnProperty('authMethod')) {
                obj['authMethod'] = ApiClient.convertToType(data['authMethod'], 'String');
            }
            if (data.hasOwnProperty('listApi')) {
                obj['listApi'] = ApiClient.convertToType(data['listApi'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('requestModel')) {
                obj['requestModel'] = ApiClient.convertToType(data['requestModel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>S3CompatibleMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>S3CompatibleMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authMethod'] && !(typeof data['authMethod'] === 'string' || data['authMethod'] instanceof String)) {
            throw new Error("Expected the field `authMethod` to be a primitive type in the JSON string but got " + data['authMethod']);
        }
        // ensure the json data is a string
        if (data['listApi'] && !(typeof data['listApi'] === 'string' || data['listApi'] instanceof String)) {
            throw new Error("Expected the field `listApi` to be a primitive type in the JSON string but got " + data['listApi']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }
        // ensure the json data is a string
        if (data['requestModel'] && !(typeof data['requestModel'] === 'string' || data['requestModel'] instanceof String)) {
            throw new Error("Expected the field `requestModel` to be a primitive type in the JSON string but got " + data['requestModel']);
        }

        return true;
    }


}



/**
 * Specifies the authentication and authorization method used by the storage service. When not specified, Transfer Service will attempt to determine right auth method to use.
 * @member {module:model/S3CompatibleMetadata.AuthMethodEnum} authMethod
 */
S3CompatibleMetadata.prototype['authMethod'] = undefined;

/**
 * The Listing API to use for discovering objects. When not specified, Transfer Service will attempt to determine the right API to use.
 * @member {module:model/S3CompatibleMetadata.ListApiEnum} listApi
 */
S3CompatibleMetadata.prototype['listApi'] = undefined;

/**
 * Specifies the network protocol of the agent. When not specified, the default value of NetworkProtocol NETWORK_PROTOCOL_HTTPS is used.
 * @member {module:model/S3CompatibleMetadata.ProtocolEnum} protocol
 */
S3CompatibleMetadata.prototype['protocol'] = undefined;

/**
 * Specifies the API request model used to call the storage service. When not specified, the default value of RequestModel REQUEST_MODEL_VIRTUAL_HOSTED_STYLE is used.
 * @member {module:model/S3CompatibleMetadata.RequestModelEnum} requestModel
 */
S3CompatibleMetadata.prototype['requestModel'] = undefined;





/**
 * Allowed values for the <code>authMethod</code> property.
 * @enum {String}
 * @readonly
 */
S3CompatibleMetadata['AuthMethodEnum'] = {

    /**
     * value: "AUTH_METHOD_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "AUTH_METHOD_UNSPECIFIED",

    /**
     * value: "AUTH_METHOD_AWS_SIGNATURE_V4"
     * @const
     */
    "AWS_SIGNATURE_V4": "AUTH_METHOD_AWS_SIGNATURE_V4",

    /**
     * value: "AUTH_METHOD_AWS_SIGNATURE_V2"
     * @const
     */
    "AWS_SIGNATURE_V2": "AUTH_METHOD_AWS_SIGNATURE_V2"
};


/**
 * Allowed values for the <code>listApi</code> property.
 * @enum {String}
 * @readonly
 */
S3CompatibleMetadata['ListApiEnum'] = {

    /**
     * value: "LIST_API_UNSPECIFIED"
     * @const
     */
    "API_UNSPECIFIED": "LIST_API_UNSPECIFIED",

    /**
     * value: "LIST_OBJECTS_V2"
     * @const
     */
    "OBJECTS_V2": "LIST_OBJECTS_V2",

    /**
     * value: "LIST_OBJECTS"
     * @const
     */
    "OBJECTS": "LIST_OBJECTS"
};


/**
 * Allowed values for the <code>protocol</code> property.
 * @enum {String}
 * @readonly
 */
S3CompatibleMetadata['ProtocolEnum'] = {

    /**
     * value: "NETWORK_PROTOCOL_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "NETWORK_PROTOCOL_UNSPECIFIED",

    /**
     * value: "NETWORK_PROTOCOL_HTTPS"
     * @const
     */
    "HTTPS": "NETWORK_PROTOCOL_HTTPS",

    /**
     * value: "NETWORK_PROTOCOL_HTTP"
     * @const
     */
    "HTTP": "NETWORK_PROTOCOL_HTTP"
};


/**
 * Allowed values for the <code>requestModel</code> property.
 * @enum {String}
 * @readonly
 */
S3CompatibleMetadata['RequestModelEnum'] = {

    /**
     * value: "REQUEST_MODEL_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "REQUEST_MODEL_UNSPECIFIED",

    /**
     * value: "REQUEST_MODEL_VIRTUAL_HOSTED_STYLE"
     * @const
     */
    "VIRTUAL_HOSTED_STYLE": "REQUEST_MODEL_VIRTUAL_HOSTED_STYLE",

    /**
     * value: "REQUEST_MODEL_PATH_STYLE"
     * @const
     */
    "PATH_STYLE": "REQUEST_MODEL_PATH_STYLE"
};



export default S3CompatibleMetadata;

