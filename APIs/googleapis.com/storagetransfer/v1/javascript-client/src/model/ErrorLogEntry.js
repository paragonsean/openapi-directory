/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ErrorLogEntry model module.
 * @module model/ErrorLogEntry
 * @version v1
 */
class ErrorLogEntry {
    /**
     * Constructs a new <code>ErrorLogEntry</code>.
     * An entry describing an error that has occurred.
     * @alias module:model/ErrorLogEntry
     */
    constructor() { 
        
        ErrorLogEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErrorLogEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorLogEntry} obj Optional instance to populate.
     * @return {module:model/ErrorLogEntry} The populated <code>ErrorLogEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorLogEntry();

            if (data.hasOwnProperty('errorDetails')) {
                obj['errorDetails'] = ApiClient.convertToType(data['errorDetails'], ['String']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorLogEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorLogEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['errorDetails'])) {
            throw new Error("Expected the field `errorDetails` to be an array in the JSON data but got " + data['errorDetails']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * A list of messages that carry the error details.
 * @member {Array.<String>} errorDetails
 */
ErrorLogEntry.prototype['errorDetails'] = undefined;

/**
 * Required. A URL that refers to the target (a data source, a data sink, or an object) with which the error is associated.
 * @member {String} url
 */
ErrorLogEntry.prototype['url'] = undefined;






export default ErrorLogEntry;

