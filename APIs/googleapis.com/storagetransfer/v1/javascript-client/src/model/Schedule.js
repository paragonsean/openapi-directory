/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ModelDate from './ModelDate';
import TimeOfDay from './TimeOfDay';

/**
 * The Schedule model module.
 * @module model/Schedule
 * @version v1
 */
class Schedule {
    /**
     * Constructs a new <code>Schedule</code>.
     * Transfers can be scheduled to recur or to run just once.
     * @alias module:model/Schedule
     */
    constructor() { 
        
        Schedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Schedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Schedule} obj Optional instance to populate.
     * @return {module:model/Schedule} The populated <code>Schedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Schedule();

            if (data.hasOwnProperty('endTimeOfDay')) {
                obj['endTimeOfDay'] = TimeOfDay.constructFromObject(data['endTimeOfDay']);
            }
            if (data.hasOwnProperty('repeatInterval')) {
                obj['repeatInterval'] = ApiClient.convertToType(data['repeatInterval'], 'String');
            }
            if (data.hasOwnProperty('scheduleEndDate')) {
                obj['scheduleEndDate'] = ModelDate.constructFromObject(data['scheduleEndDate']);
            }
            if (data.hasOwnProperty('scheduleStartDate')) {
                obj['scheduleStartDate'] = ModelDate.constructFromObject(data['scheduleStartDate']);
            }
            if (data.hasOwnProperty('startTimeOfDay')) {
                obj['startTimeOfDay'] = TimeOfDay.constructFromObject(data['startTimeOfDay']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Schedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Schedule</code>.
     */
    static validateJSON(data) {
        // validate the optional field `endTimeOfDay`
        if (data['endTimeOfDay']) { // data not null
          TimeOfDay.validateJSON(data['endTimeOfDay']);
        }
        // ensure the json data is a string
        if (data['repeatInterval'] && !(typeof data['repeatInterval'] === 'string' || data['repeatInterval'] instanceof String)) {
            throw new Error("Expected the field `repeatInterval` to be a primitive type in the JSON string but got " + data['repeatInterval']);
        }
        // validate the optional field `scheduleEndDate`
        if (data['scheduleEndDate']) { // data not null
          ModelDate.validateJSON(data['scheduleEndDate']);
        }
        // validate the optional field `scheduleStartDate`
        if (data['scheduleStartDate']) { // data not null
          ModelDate.validateJSON(data['scheduleStartDate']);
        }
        // validate the optional field `startTimeOfDay`
        if (data['startTimeOfDay']) { // data not null
          TimeOfDay.validateJSON(data['startTimeOfDay']);
        }

        return true;
    }


}



/**
 * @member {module:model/TimeOfDay} endTimeOfDay
 */
Schedule.prototype['endTimeOfDay'] = undefined;

/**
 * Interval between the start of each scheduled TransferOperation. If unspecified, the default value is 24 hours. This value may not be less than 1 hour.
 * @member {String} repeatInterval
 */
Schedule.prototype['repeatInterval'] = undefined;

/**
 * @member {module:model/ModelDate} scheduleEndDate
 */
Schedule.prototype['scheduleEndDate'] = undefined;

/**
 * @member {module:model/ModelDate} scheduleStartDate
 */
Schedule.prototype['scheduleStartDate'] = undefined;

/**
 * @member {module:model/TimeOfDay} startTimeOfDay
 */
Schedule.prototype['startTimeOfDay'] = undefined;






export default Schedule;

