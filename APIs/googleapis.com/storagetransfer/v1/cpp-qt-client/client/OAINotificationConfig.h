/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotificationConfig.h
 *
 * Specification to configure notifications published to Pub/Sub. Notifications are published to the customer-provided topic using the following &#x60;PubsubMessage.attributes&#x60;: * &#x60;\&quot;eventType\&quot;&#x60;: one of the EventType values * &#x60;\&quot;payloadFormat\&quot;&#x60;: one of the PayloadFormat values * &#x60;\&quot;projectId\&quot;&#x60;: the project_id of the &#x60;TransferOperation&#x60; * &#x60;\&quot;transferJobName\&quot;&#x60;: the transfer_job_name of the &#x60;TransferOperation&#x60; * &#x60;\&quot;transferOperationName\&quot;&#x60;: the name of the &#x60;TransferOperation&#x60; The &#x60;PubsubMessage.data&#x60; contains a TransferOperation resource formatted according to the specified &#x60;PayloadFormat&#x60;.
 */

#ifndef OAINotificationConfig_H
#define OAINotificationConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINotificationConfig : public OAIObject {
public:
    OAINotificationConfig();
    OAINotificationConfig(QString json);
    ~OAINotificationConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getEventTypes() const;
    void setEventTypes(const QList<QString> &event_types);
    bool is_event_types_Set() const;
    bool is_event_types_Valid() const;

    QString getPayloadFormat() const;
    void setPayloadFormat(const QString &payload_format);
    bool is_payload_format_Set() const;
    bool is_payload_format_Valid() const;

    QString getPubsubTopic() const;
    void setPubsubTopic(const QString &pubsub_topic);
    bool is_pubsub_topic_Set() const;
    bool is_pubsub_topic_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_event_types;
    bool m_event_types_isSet;
    bool m_event_types_isValid;

    QString m_payload_format;
    bool m_payload_format_isSet;
    bool m_payload_format_isValid;

    QString m_pubsub_topic;
    bool m_pubsub_topic_isSet;
    bool m_pubsub_topic_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotificationConfig)

#endif // OAINotificationConfig_H
