/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransferOperation.h
 *
 * A description of the execution of a transfer.
 */

#ifndef OAITransferOperation_H
#define OAITransferOperation_H

#include <QJsonObject>

#include "OAIErrorSummary.h"
#include "OAILoggingConfig.h"
#include "OAINotificationConfig.h"
#include "OAITransferCounters.h"
#include "OAITransferSpec.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransferCounters;
class OAIErrorSummary;
class OAILoggingConfig;
class OAINotificationConfig;
class OAITransferSpec;

class OAITransferOperation : public OAIObject {
public:
    OAITransferOperation();
    OAITransferOperation(QString json);
    ~OAITransferOperation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITransferCounters getCounters() const;
    void setCounters(const OAITransferCounters &counters);
    bool is_counters_Set() const;
    bool is_counters_Valid() const;

    QString getEndTime() const;
    void setEndTime(const QString &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QList<OAIErrorSummary> getErrorBreakdowns() const;
    void setErrorBreakdowns(const QList<OAIErrorSummary> &error_breakdowns);
    bool is_error_breakdowns_Set() const;
    bool is_error_breakdowns_Valid() const;

    OAILoggingConfig getLoggingConfig() const;
    void setLoggingConfig(const OAILoggingConfig &logging_config);
    bool is_logging_config_Set() const;
    bool is_logging_config_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAINotificationConfig getNotificationConfig() const;
    void setNotificationConfig(const OAINotificationConfig &notification_config);
    bool is_notification_config_Set() const;
    bool is_notification_config_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTransferJobName() const;
    void setTransferJobName(const QString &transfer_job_name);
    bool is_transfer_job_name_Set() const;
    bool is_transfer_job_name_Valid() const;

    OAITransferSpec getTransferSpec() const;
    void setTransferSpec(const OAITransferSpec &transfer_spec);
    bool is_transfer_spec_Set() const;
    bool is_transfer_spec_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITransferCounters m_counters;
    bool m_counters_isSet;
    bool m_counters_isValid;

    QString m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QList<OAIErrorSummary> m_error_breakdowns;
    bool m_error_breakdowns_isSet;
    bool m_error_breakdowns_isValid;

    OAILoggingConfig m_logging_config;
    bool m_logging_config_isSet;
    bool m_logging_config_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAINotificationConfig m_notification_config;
    bool m_notification_config_isSet;
    bool m_notification_config_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_transfer_job_name;
    bool m_transfer_job_name_isSet;
    bool m_transfer_job_name_isValid;

    OAITransferSpec m_transfer_spec;
    bool m_transfer_spec_isSet;
    bool m_transfer_spec_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransferOperation)

#endif // OAITransferOperation_H
