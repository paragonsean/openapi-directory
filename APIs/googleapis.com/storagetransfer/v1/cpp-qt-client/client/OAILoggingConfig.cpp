/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoggingConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoggingConfig::OAILoggingConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoggingConfig::OAILoggingConfig() {
    this->initializeModel();
}

OAILoggingConfig::~OAILoggingConfig() {}

void OAILoggingConfig::initializeModel() {

    m_enable_onprem_gcs_transfer_logs_isSet = false;
    m_enable_onprem_gcs_transfer_logs_isValid = false;

    m_log_action_states_isSet = false;
    m_log_action_states_isValid = false;

    m_log_actions_isSet = false;
    m_log_actions_isValid = false;
}

void OAILoggingConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoggingConfig::fromJsonObject(QJsonObject json) {

    m_enable_onprem_gcs_transfer_logs_isValid = ::OpenAPI::fromJsonValue(m_enable_onprem_gcs_transfer_logs, json[QString("enableOnpremGcsTransferLogs")]);
    m_enable_onprem_gcs_transfer_logs_isSet = !json[QString("enableOnpremGcsTransferLogs")].isNull() && m_enable_onprem_gcs_transfer_logs_isValid;

    m_log_action_states_isValid = ::OpenAPI::fromJsonValue(m_log_action_states, json[QString("logActionStates")]);
    m_log_action_states_isSet = !json[QString("logActionStates")].isNull() && m_log_action_states_isValid;

    m_log_actions_isValid = ::OpenAPI::fromJsonValue(m_log_actions, json[QString("logActions")]);
    m_log_actions_isSet = !json[QString("logActions")].isNull() && m_log_actions_isValid;
}

QString OAILoggingConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoggingConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_onprem_gcs_transfer_logs_isSet) {
        obj.insert(QString("enableOnpremGcsTransferLogs"), ::OpenAPI::toJsonValue(m_enable_onprem_gcs_transfer_logs));
    }
    if (m_log_action_states.size() > 0) {
        obj.insert(QString("logActionStates"), ::OpenAPI::toJsonValue(m_log_action_states));
    }
    if (m_log_actions.size() > 0) {
        obj.insert(QString("logActions"), ::OpenAPI::toJsonValue(m_log_actions));
    }
    return obj;
}

bool OAILoggingConfig::isEnableOnpremGcsTransferLogs() const {
    return m_enable_onprem_gcs_transfer_logs;
}
void OAILoggingConfig::setEnableOnpremGcsTransferLogs(const bool &enable_onprem_gcs_transfer_logs) {
    m_enable_onprem_gcs_transfer_logs = enable_onprem_gcs_transfer_logs;
    m_enable_onprem_gcs_transfer_logs_isSet = true;
}

bool OAILoggingConfig::is_enable_onprem_gcs_transfer_logs_Set() const{
    return m_enable_onprem_gcs_transfer_logs_isSet;
}

bool OAILoggingConfig::is_enable_onprem_gcs_transfer_logs_Valid() const{
    return m_enable_onprem_gcs_transfer_logs_isValid;
}

QList<QString> OAILoggingConfig::getLogActionStates() const {
    return m_log_action_states;
}
void OAILoggingConfig::setLogActionStates(const QList<QString> &log_action_states) {
    m_log_action_states = log_action_states;
    m_log_action_states_isSet = true;
}

bool OAILoggingConfig::is_log_action_states_Set() const{
    return m_log_action_states_isSet;
}

bool OAILoggingConfig::is_log_action_states_Valid() const{
    return m_log_action_states_isValid;
}

QList<QString> OAILoggingConfig::getLogActions() const {
    return m_log_actions;
}
void OAILoggingConfig::setLogActions(const QList<QString> &log_actions) {
    m_log_actions = log_actions;
    m_log_actions_isSet = true;
}

bool OAILoggingConfig::is_log_actions_Set() const{
    return m_log_actions_isSet;
}

bool OAILoggingConfig::is_log_actions_Valid() const{
    return m_log_actions_isValid;
}

bool OAILoggingConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_onprem_gcs_transfer_logs_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_action_states.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_actions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoggingConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
