/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISchedule.h
 *
 * Transfers can be scheduled to recur or to run just once.
 */

#ifndef OAISchedule_H
#define OAISchedule_H

#include <QJsonObject>

#include "OAIDate.h"
#include "OAITimeOfDay.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeOfDay;
class OAIDate;

class OAISchedule : public OAIObject {
public:
    OAISchedule();
    OAISchedule(QString json);
    ~OAISchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITimeOfDay getEndTimeOfDay() const;
    void setEndTimeOfDay(const OAITimeOfDay &end_time_of_day);
    bool is_end_time_of_day_Set() const;
    bool is_end_time_of_day_Valid() const;

    QString getRepeatInterval() const;
    void setRepeatInterval(const QString &repeat_interval);
    bool is_repeat_interval_Set() const;
    bool is_repeat_interval_Valid() const;

    OAIDate getScheduleEndDate() const;
    void setScheduleEndDate(const OAIDate &schedule_end_date);
    bool is_schedule_end_date_Set() const;
    bool is_schedule_end_date_Valid() const;

    OAIDate getScheduleStartDate() const;
    void setScheduleStartDate(const OAIDate &schedule_start_date);
    bool is_schedule_start_date_Set() const;
    bool is_schedule_start_date_Valid() const;

    OAITimeOfDay getStartTimeOfDay() const;
    void setStartTimeOfDay(const OAITimeOfDay &start_time_of_day);
    bool is_start_time_of_day_Set() const;
    bool is_start_time_of_day_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITimeOfDay m_end_time_of_day;
    bool m_end_time_of_day_isSet;
    bool m_end_time_of_day_isValid;

    QString m_repeat_interval;
    bool m_repeat_interval_isSet;
    bool m_repeat_interval_isValid;

    OAIDate m_schedule_end_date;
    bool m_schedule_end_date_isSet;
    bool m_schedule_end_date_isValid;

    OAIDate m_schedule_start_date;
    bool m_schedule_start_date_isSet;
    bool m_schedule_start_date_isValid;

    OAITimeOfDay m_start_time_of_day;
    bool m_start_time_of_day_isSet;
    bool m_start_time_of_day_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISchedule)

#endif // OAISchedule_H
