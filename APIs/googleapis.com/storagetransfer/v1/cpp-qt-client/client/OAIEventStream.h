/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEventStream.h
 *
 * Specifies the Event-driven transfer options. Event-driven transfers listen to an event stream to transfer updated files.
 */

#ifndef OAIEventStream_H
#define OAIEventStream_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEventStream : public OAIObject {
public:
    OAIEventStream();
    OAIEventStream(QString json);
    ~OAIEventStream() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEventStreamExpirationTime() const;
    void setEventStreamExpirationTime(const QString &event_stream_expiration_time);
    bool is_event_stream_expiration_time_Set() const;
    bool is_event_stream_expiration_time_Valid() const;

    QString getEventStreamStartTime() const;
    void setEventStreamStartTime(const QString &event_stream_start_time);
    bool is_event_stream_start_time_Set() const;
    bool is_event_stream_start_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_event_stream_expiration_time;
    bool m_event_stream_expiration_time_isSet;
    bool m_event_stream_expiration_time_isValid;

    QString m_event_stream_start_time;
    bool m_event_stream_start_time_isSet;
    bool m_event_stream_start_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEventStream)

#endif // OAIEventStream_H
