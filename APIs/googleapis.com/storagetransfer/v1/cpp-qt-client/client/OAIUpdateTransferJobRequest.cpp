/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateTransferJobRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateTransferJobRequest::OAIUpdateTransferJobRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateTransferJobRequest::OAIUpdateTransferJobRequest() {
    this->initializeModel();
}

OAIUpdateTransferJobRequest::~OAIUpdateTransferJobRequest() {}

void OAIUpdateTransferJobRequest::initializeModel() {

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_transfer_job_isSet = false;
    m_transfer_job_isValid = false;

    m_update_transfer_job_field_mask_isSet = false;
    m_update_transfer_job_field_mask_isValid = false;
}

void OAIUpdateTransferJobRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateTransferJobRequest::fromJsonObject(QJsonObject json) {

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_transfer_job_isValid = ::OpenAPI::fromJsonValue(m_transfer_job, json[QString("transferJob")]);
    m_transfer_job_isSet = !json[QString("transferJob")].isNull() && m_transfer_job_isValid;

    m_update_transfer_job_field_mask_isValid = ::OpenAPI::fromJsonValue(m_update_transfer_job_field_mask, json[QString("updateTransferJobFieldMask")]);
    m_update_transfer_job_field_mask_isSet = !json[QString("updateTransferJobFieldMask")].isNull() && m_update_transfer_job_field_mask_isValid;
}

QString OAIUpdateTransferJobRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateTransferJobRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_transfer_job.isSet()) {
        obj.insert(QString("transferJob"), ::OpenAPI::toJsonValue(m_transfer_job));
    }
    if (m_update_transfer_job_field_mask_isSet) {
        obj.insert(QString("updateTransferJobFieldMask"), ::OpenAPI::toJsonValue(m_update_transfer_job_field_mask));
    }
    return obj;
}

QString OAIUpdateTransferJobRequest::getProjectId() const {
    return m_project_id;
}
void OAIUpdateTransferJobRequest::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIUpdateTransferJobRequest::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIUpdateTransferJobRequest::is_project_id_Valid() const{
    return m_project_id_isValid;
}

OAITransferJob OAIUpdateTransferJobRequest::getTransferJob() const {
    return m_transfer_job;
}
void OAIUpdateTransferJobRequest::setTransferJob(const OAITransferJob &transfer_job) {
    m_transfer_job = transfer_job;
    m_transfer_job_isSet = true;
}

bool OAIUpdateTransferJobRequest::is_transfer_job_Set() const{
    return m_transfer_job_isSet;
}

bool OAIUpdateTransferJobRequest::is_transfer_job_Valid() const{
    return m_transfer_job_isValid;
}

QString OAIUpdateTransferJobRequest::getUpdateTransferJobFieldMask() const {
    return m_update_transfer_job_field_mask;
}
void OAIUpdateTransferJobRequest::setUpdateTransferJobFieldMask(const QString &update_transfer_job_field_mask) {
    m_update_transfer_job_field_mask = update_transfer_job_field_mask;
    m_update_transfer_job_field_mask_isSet = true;
}

bool OAIUpdateTransferJobRequest::is_update_transfer_job_field_mask_Set() const{
    return m_update_transfer_job_field_mask_isSet;
}

bool OAIUpdateTransferJobRequest::is_update_transfer_job_field_mask_Valid() const{
    return m_update_transfer_job_field_mask_isValid;
}

bool OAIUpdateTransferJobRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_job.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_transfer_job_field_mask_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateTransferJobRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
