/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransferSpec.h
 *
 * Configuration for running a transfer.
 */

#ifndef OAITransferSpec_H
#define OAITransferSpec_H

#include <QJsonObject>

#include "OAIAwsS3CompatibleData.h"
#include "OAIAwsS3Data.h"
#include "OAIAzureBlobStorageData.h"
#include "OAIGcsData.h"
#include "OAIHdfsData.h"
#include "OAIHttpData.h"
#include "OAIObjectConditions.h"
#include "OAIPosixFilesystem.h"
#include "OAITransferManifest.h"
#include "OAITransferOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAwsS3CompatibleData;
class OAIAwsS3Data;
class OAIAzureBlobStorageData;
class OAIGcsData;
class OAIHdfsData;
class OAIHttpData;
class OAIObjectConditions;
class OAIPosixFilesystem;
class OAITransferManifest;
class OAITransferOptions;

class OAITransferSpec : public OAIObject {
public:
    OAITransferSpec();
    OAITransferSpec(QString json);
    ~OAITransferSpec() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAwsS3CompatibleData getAwsS3CompatibleDataSource() const;
    void setAwsS3CompatibleDataSource(const OAIAwsS3CompatibleData &aws_s3_compatible_data_source);
    bool is_aws_s3_compatible_data_source_Set() const;
    bool is_aws_s3_compatible_data_source_Valid() const;

    OAIAwsS3Data getAwsS3DataSource() const;
    void setAwsS3DataSource(const OAIAwsS3Data &aws_s3_data_source);
    bool is_aws_s3_data_source_Set() const;
    bool is_aws_s3_data_source_Valid() const;

    OAIAzureBlobStorageData getAzureBlobStorageDataSource() const;
    void setAzureBlobStorageDataSource(const OAIAzureBlobStorageData &azure_blob_storage_data_source);
    bool is_azure_blob_storage_data_source_Set() const;
    bool is_azure_blob_storage_data_source_Valid() const;

    OAIGcsData getGcsDataSink() const;
    void setGcsDataSink(const OAIGcsData &gcs_data_sink);
    bool is_gcs_data_sink_Set() const;
    bool is_gcs_data_sink_Valid() const;

    OAIGcsData getGcsDataSource() const;
    void setGcsDataSource(const OAIGcsData &gcs_data_source);
    bool is_gcs_data_source_Set() const;
    bool is_gcs_data_source_Valid() const;

    OAIGcsData getGcsIntermediateDataLocation() const;
    void setGcsIntermediateDataLocation(const OAIGcsData &gcs_intermediate_data_location);
    bool is_gcs_intermediate_data_location_Set() const;
    bool is_gcs_intermediate_data_location_Valid() const;

    OAIHdfsData getHdfsDataSource() const;
    void setHdfsDataSource(const OAIHdfsData &hdfs_data_source);
    bool is_hdfs_data_source_Set() const;
    bool is_hdfs_data_source_Valid() const;

    OAIHttpData getHttpDataSource() const;
    void setHttpDataSource(const OAIHttpData &http_data_source);
    bool is_http_data_source_Set() const;
    bool is_http_data_source_Valid() const;

    OAIObjectConditions getObjectConditions() const;
    void setObjectConditions(const OAIObjectConditions &object_conditions);
    bool is_object_conditions_Set() const;
    bool is_object_conditions_Valid() const;

    OAIPosixFilesystem getPosixDataSink() const;
    void setPosixDataSink(const OAIPosixFilesystem &posix_data_sink);
    bool is_posix_data_sink_Set() const;
    bool is_posix_data_sink_Valid() const;

    OAIPosixFilesystem getPosixDataSource() const;
    void setPosixDataSource(const OAIPosixFilesystem &posix_data_source);
    bool is_posix_data_source_Set() const;
    bool is_posix_data_source_Valid() const;

    QString getSinkAgentPoolName() const;
    void setSinkAgentPoolName(const QString &sink_agent_pool_name);
    bool is_sink_agent_pool_name_Set() const;
    bool is_sink_agent_pool_name_Valid() const;

    QString getSourceAgentPoolName() const;
    void setSourceAgentPoolName(const QString &source_agent_pool_name);
    bool is_source_agent_pool_name_Set() const;
    bool is_source_agent_pool_name_Valid() const;

    OAITransferManifest getTransferManifest() const;
    void setTransferManifest(const OAITransferManifest &transfer_manifest);
    bool is_transfer_manifest_Set() const;
    bool is_transfer_manifest_Valid() const;

    OAITransferOptions getTransferOptions() const;
    void setTransferOptions(const OAITransferOptions &transfer_options);
    bool is_transfer_options_Set() const;
    bool is_transfer_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAwsS3CompatibleData m_aws_s3_compatible_data_source;
    bool m_aws_s3_compatible_data_source_isSet;
    bool m_aws_s3_compatible_data_source_isValid;

    OAIAwsS3Data m_aws_s3_data_source;
    bool m_aws_s3_data_source_isSet;
    bool m_aws_s3_data_source_isValid;

    OAIAzureBlobStorageData m_azure_blob_storage_data_source;
    bool m_azure_blob_storage_data_source_isSet;
    bool m_azure_blob_storage_data_source_isValid;

    OAIGcsData m_gcs_data_sink;
    bool m_gcs_data_sink_isSet;
    bool m_gcs_data_sink_isValid;

    OAIGcsData m_gcs_data_source;
    bool m_gcs_data_source_isSet;
    bool m_gcs_data_source_isValid;

    OAIGcsData m_gcs_intermediate_data_location;
    bool m_gcs_intermediate_data_location_isSet;
    bool m_gcs_intermediate_data_location_isValid;

    OAIHdfsData m_hdfs_data_source;
    bool m_hdfs_data_source_isSet;
    bool m_hdfs_data_source_isValid;

    OAIHttpData m_http_data_source;
    bool m_http_data_source_isSet;
    bool m_http_data_source_isValid;

    OAIObjectConditions m_object_conditions;
    bool m_object_conditions_isSet;
    bool m_object_conditions_isValid;

    OAIPosixFilesystem m_posix_data_sink;
    bool m_posix_data_sink_isSet;
    bool m_posix_data_sink_isValid;

    OAIPosixFilesystem m_posix_data_source;
    bool m_posix_data_source_isSet;
    bool m_posix_data_source_isValid;

    QString m_sink_agent_pool_name;
    bool m_sink_agent_pool_name_isSet;
    bool m_sink_agent_pool_name_isValid;

    QString m_source_agent_pool_name;
    bool m_source_agent_pool_name_isSet;
    bool m_source_agent_pool_name_isValid;

    OAITransferManifest m_transfer_manifest;
    bool m_transfer_manifest_isSet;
    bool m_transfer_manifest_isValid;

    OAITransferOptions m_transfer_options;
    bool m_transfer_options_isSet;
    bool m_transfer_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransferSpec)

#endif // OAITransferSpec_H
