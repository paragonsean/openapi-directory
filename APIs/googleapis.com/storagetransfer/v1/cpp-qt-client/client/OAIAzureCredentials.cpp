/**
 * Storage Transfer API
 * Transfers data from external data sources to a Google Cloud Storage bucket or between Google Cloud Storage buckets. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAzureCredentials.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAzureCredentials::OAIAzureCredentials(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAzureCredentials::OAIAzureCredentials() {
    this->initializeModel();
}

OAIAzureCredentials::~OAIAzureCredentials() {}

void OAIAzureCredentials::initializeModel() {

    m_sas_token_isSet = false;
    m_sas_token_isValid = false;
}

void OAIAzureCredentials::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAzureCredentials::fromJsonObject(QJsonObject json) {

    m_sas_token_isValid = ::OpenAPI::fromJsonValue(m_sas_token, json[QString("sasToken")]);
    m_sas_token_isSet = !json[QString("sasToken")].isNull() && m_sas_token_isValid;
}

QString OAIAzureCredentials::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAzureCredentials::asJsonObject() const {
    QJsonObject obj;
    if (m_sas_token_isSet) {
        obj.insert(QString("sasToken"), ::OpenAPI::toJsonValue(m_sas_token));
    }
    return obj;
}

QString OAIAzureCredentials::getSasToken() const {
    return m_sas_token;
}
void OAIAzureCredentials::setSasToken(const QString &sas_token) {
    m_sas_token = sas_token;
    m_sas_token_isSet = true;
}

bool OAIAzureCredentials::is_sas_token_Set() const{
    return m_sas_token_isSet;
}

bool OAIAzureCredentials::is_sas_token_Valid() const{
    return m_sas_token_isValid;
}

bool OAIAzureCredentials::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sas_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAzureCredentials::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
