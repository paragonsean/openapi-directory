# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.weekly_maintenance_window import WeeklyMaintenanceWindow
from openapi_server import util


class GoogleCloudMemcacheV1MaintenancePolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_time: str=None, description: str=None, update_time: str=None, weekly_maintenance_window: List[WeeklyMaintenanceWindow]=None):
        """GoogleCloudMemcacheV1MaintenancePolicy - a model defined in OpenAPI

        :param create_time: The create_time of this GoogleCloudMemcacheV1MaintenancePolicy.
        :param description: The description of this GoogleCloudMemcacheV1MaintenancePolicy.
        :param update_time: The update_time of this GoogleCloudMemcacheV1MaintenancePolicy.
        :param weekly_maintenance_window: The weekly_maintenance_window of this GoogleCloudMemcacheV1MaintenancePolicy.
        """
        self.openapi_types = {
            'create_time': str,
            'description': str,
            'update_time': str,
            'weekly_maintenance_window': List[WeeklyMaintenanceWindow]
        }

        self.attribute_map = {
            'create_time': 'createTime',
            'description': 'description',
            'update_time': 'updateTime',
            'weekly_maintenance_window': 'weeklyMaintenanceWindow'
        }

        self._create_time = create_time
        self._description = description
        self._update_time = update_time
        self._weekly_maintenance_window = weekly_maintenance_window

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudMemcacheV1MaintenancePolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudMemcacheV1MaintenancePolicy of this GoogleCloudMemcacheV1MaintenancePolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudMemcacheV1MaintenancePolicy.

        Output only. The time when the policy was created.

        :return: The create_time of this GoogleCloudMemcacheV1MaintenancePolicy.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudMemcacheV1MaintenancePolicy.

        Output only. The time when the policy was created.

        :param create_time: The create_time of this GoogleCloudMemcacheV1MaintenancePolicy.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def description(self):
        """Gets the description of this GoogleCloudMemcacheV1MaintenancePolicy.

        Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.

        :return: The description of this GoogleCloudMemcacheV1MaintenancePolicy.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudMemcacheV1MaintenancePolicy.

        Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.

        :param description: The description of this GoogleCloudMemcacheV1MaintenancePolicy.
        :type description: str
        """

        self._description = description

    @property
    def update_time(self):
        """Gets the update_time of this GoogleCloudMemcacheV1MaintenancePolicy.

        Output only. The time when the policy was updated.

        :return: The update_time of this GoogleCloudMemcacheV1MaintenancePolicy.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this GoogleCloudMemcacheV1MaintenancePolicy.

        Output only. The time when the policy was updated.

        :param update_time: The update_time of this GoogleCloudMemcacheV1MaintenancePolicy.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def weekly_maintenance_window(self):
        """Gets the weekly_maintenance_window of this GoogleCloudMemcacheV1MaintenancePolicy.

        Required. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_maintenance_windows is expected to be one.

        :return: The weekly_maintenance_window of this GoogleCloudMemcacheV1MaintenancePolicy.
        :rtype: List[WeeklyMaintenanceWindow]
        """
        return self._weekly_maintenance_window

    @weekly_maintenance_window.setter
    def weekly_maintenance_window(self, weekly_maintenance_window):
        """Sets the weekly_maintenance_window of this GoogleCloudMemcacheV1MaintenancePolicy.

        Required. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_maintenance_windows is expected to be one.

        :param weekly_maintenance_window: The weekly_maintenance_window of this GoogleCloudMemcacheV1MaintenancePolicy.
        :type weekly_maintenance_window: List[WeeklyMaintenanceWindow]
        """

        self._weekly_maintenance_window = weekly_maintenance_window
