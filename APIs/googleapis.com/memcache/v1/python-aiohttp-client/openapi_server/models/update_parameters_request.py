# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.memcache_parameters import MemcacheParameters
from openapi_server import util


class UpdateParametersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parameters: MemcacheParameters=None, update_mask: str=None):
        """UpdateParametersRequest - a model defined in OpenAPI

        :param parameters: The parameters of this UpdateParametersRequest.
        :param update_mask: The update_mask of this UpdateParametersRequest.
        """
        self.openapi_types = {
            'parameters': MemcacheParameters,
            'update_mask': str
        }

        self.attribute_map = {
            'parameters': 'parameters',
            'update_mask': 'updateMask'
        }

        self._parameters = parameters
        self._update_mask = update_mask

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateParametersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateParametersRequest of this UpdateParametersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parameters(self):
        """Gets the parameters of this UpdateParametersRequest.


        :return: The parameters of this UpdateParametersRequest.
        :rtype: MemcacheParameters
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this UpdateParametersRequest.


        :param parameters: The parameters of this UpdateParametersRequest.
        :type parameters: MemcacheParameters
        """

        self._parameters = parameters

    @property
    def update_mask(self):
        """Gets the update_mask of this UpdateParametersRequest.

        Required. Mask of fields to update.

        :return: The update_mask of this UpdateParametersRequest.
        :rtype: str
        """
        return self._update_mask

    @update_mask.setter
    def update_mask(self, update_mask):
        """Sets the update_mask of this UpdateParametersRequest.

        Required. Mask of fields to update.

        :param update_mask: The update_mask of this UpdateParametersRequest.
        :type update_mask: str
        """

        self._update_mask = update_mask
