/**
 * Cloud Memorystore for Memcached API
 * Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ApplyParametersRequest from './model/ApplyParametersRequest';
import DailyCycle from './model/DailyCycle';
import DenyMaintenancePeriod from './model/DenyMaintenancePeriod';
import GoogleCloudMemcacheV1LocationMetadata from './model/GoogleCloudMemcacheV1LocationMetadata';
import GoogleCloudMemcacheV1MaintenancePolicy from './model/GoogleCloudMemcacheV1MaintenancePolicy';
import GoogleCloudMemcacheV1OperationMetadata from './model/GoogleCloudMemcacheV1OperationMetadata';
import GoogleCloudMemcacheV1UpgradeInstanceRequest from './model/GoogleCloudMemcacheV1UpgradeInstanceRequest';
import GoogleCloudSaasacceleratorManagementProvidersV1Instance from './model/GoogleCloudSaasacceleratorManagementProvidersV1Instance';
import GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule from './model/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule';
import GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings from './model/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings';
import GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata from './model/GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata';
import GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter from './model/GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter';
import GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility from './model/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility';
import GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource from './model/GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource';
import GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility from './model/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility';
import GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata from './model/GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata';
import Instance from './model/Instance';
import InstanceMessage from './model/InstanceMessage';
import ListInstancesResponse from './model/ListInstancesResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import Location from './model/Location';
import LocationMetadata from './model/LocationMetadata';
import MaintenancePolicy from './model/MaintenancePolicy';
import MaintenanceSchedule from './model/MaintenanceSchedule';
import MaintenanceWindow from './model/MaintenanceWindow';
import MemcacheParameters from './model/MemcacheParameters';
import ModelDate from './model/ModelDate';
import Node from './model/Node';
import NodeConfig from './model/NodeConfig';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import RescheduleMaintenanceRequest from './model/RescheduleMaintenanceRequest';
import Schedule from './model/Schedule';
import Status from './model/Status';
import TimeOfDay from './model/TimeOfDay';
import UpdateParametersRequest from './model/UpdateParametersRequest';
import UpdatePolicy from './model/UpdatePolicy';
import WeeklyCycle from './model/WeeklyCycle';
import WeeklyMaintenanceWindow from './model/WeeklyMaintenanceWindow';
import ProjectsApi from './api/ProjectsApi';


/**
* Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CloudMemorystoreForMemcachedApi = require('index'); // See note below*.
* var xxxSvc = new CloudMemorystoreForMemcachedApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CloudMemorystoreForMemcachedApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CloudMemorystoreForMemcachedApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CloudMemorystoreForMemcachedApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ApplyParametersRequest model constructor.
     * @property {module:model/ApplyParametersRequest}
     */
    ApplyParametersRequest,

    /**
     * The DailyCycle model constructor.
     * @property {module:model/DailyCycle}
     */
    DailyCycle,

    /**
     * The DenyMaintenancePeriod model constructor.
     * @property {module:model/DenyMaintenancePeriod}
     */
    DenyMaintenancePeriod,

    /**
     * The GoogleCloudMemcacheV1LocationMetadata model constructor.
     * @property {module:model/GoogleCloudMemcacheV1LocationMetadata}
     */
    GoogleCloudMemcacheV1LocationMetadata,

    /**
     * The GoogleCloudMemcacheV1MaintenancePolicy model constructor.
     * @property {module:model/GoogleCloudMemcacheV1MaintenancePolicy}
     */
    GoogleCloudMemcacheV1MaintenancePolicy,

    /**
     * The GoogleCloudMemcacheV1OperationMetadata model constructor.
     * @property {module:model/GoogleCloudMemcacheV1OperationMetadata}
     */
    GoogleCloudMemcacheV1OperationMetadata,

    /**
     * The GoogleCloudMemcacheV1UpgradeInstanceRequest model constructor.
     * @property {module:model/GoogleCloudMemcacheV1UpgradeInstanceRequest}
     */
    GoogleCloudMemcacheV1UpgradeInstanceRequest,

    /**
     * The GoogleCloudSaasacceleratorManagementProvidersV1Instance model constructor.
     * @property {module:model/GoogleCloudSaasacceleratorManagementProvidersV1Instance}
     */
    GoogleCloudSaasacceleratorManagementProvidersV1Instance,

    /**
     * The GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule model constructor.
     * @property {module:model/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule}
     */
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule,

    /**
     * The GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings model constructor.
     * @property {module:model/GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings}
     */
    GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings,

    /**
     * The GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata model constructor.
     * @property {module:model/GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata}
     */
    GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata,

    /**
     * The GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter model constructor.
     * @property {module:model/GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter}
     */
    GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter,

    /**
     * The GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility model constructor.
     * @property {module:model/GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility}
     */
    GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility,

    /**
     * The GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource model constructor.
     * @property {module:model/GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource}
     */
    GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource,

    /**
     * The GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility model constructor.
     * @property {module:model/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility}
     */
    GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility,

    /**
     * The GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata model constructor.
     * @property {module:model/GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata}
     */
    GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata,

    /**
     * The Instance model constructor.
     * @property {module:model/Instance}
     */
    Instance,

    /**
     * The InstanceMessage model constructor.
     * @property {module:model/InstanceMessage}
     */
    InstanceMessage,

    /**
     * The ListInstancesResponse model constructor.
     * @property {module:model/ListInstancesResponse}
     */
    ListInstancesResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The LocationMetadata model constructor.
     * @property {module:model/LocationMetadata}
     */
    LocationMetadata,

    /**
     * The MaintenancePolicy model constructor.
     * @property {module:model/MaintenancePolicy}
     */
    MaintenancePolicy,

    /**
     * The MaintenanceSchedule model constructor.
     * @property {module:model/MaintenanceSchedule}
     */
    MaintenanceSchedule,

    /**
     * The MaintenanceWindow model constructor.
     * @property {module:model/MaintenanceWindow}
     */
    MaintenanceWindow,

    /**
     * The MemcacheParameters model constructor.
     * @property {module:model/MemcacheParameters}
     */
    MemcacheParameters,

    /**
     * The ModelDate model constructor.
     * @property {module:model/ModelDate}
     */
    ModelDate,

    /**
     * The Node model constructor.
     * @property {module:model/Node}
     */
    Node,

    /**
     * The NodeConfig model constructor.
     * @property {module:model/NodeConfig}
     */
    NodeConfig,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The RescheduleMaintenanceRequest model constructor.
     * @property {module:model/RescheduleMaintenanceRequest}
     */
    RescheduleMaintenanceRequest,

    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The TimeOfDay model constructor.
     * @property {module:model/TimeOfDay}
     */
    TimeOfDay,

    /**
     * The UpdateParametersRequest model constructor.
     * @property {module:model/UpdateParametersRequest}
     */
    UpdateParametersRequest,

    /**
     * The UpdatePolicy model constructor.
     * @property {module:model/UpdatePolicy}
     */
    UpdatePolicy,

    /**
     * The WeeklyCycle model constructor.
     * @property {module:model/WeeklyCycle}
     */
    WeeklyCycle,

    /**
     * The WeeklyMaintenanceWindow model constructor.
     * @property {module:model/WeeklyMaintenanceWindow}
     */
    WeeklyMaintenanceWindow,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
