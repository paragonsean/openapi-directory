/**
 * Cloud Memorystore for Memcached API
 * Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudMemcacheV1UpgradeInstanceRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::OAIGoogleCloudMemcacheV1UpgradeInstanceRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::OAIGoogleCloudMemcacheV1UpgradeInstanceRequest() {
    this->initializeModel();
}

OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::~OAIGoogleCloudMemcacheV1UpgradeInstanceRequest() {}

void OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::initializeModel() {

    m_memcache_version_isSet = false;
    m_memcache_version_isValid = false;
}

void OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::fromJsonObject(QJsonObject json) {

    m_memcache_version_isValid = ::OpenAPI::fromJsonValue(m_memcache_version, json[QString("memcacheVersion")]);
    m_memcache_version_isSet = !json[QString("memcacheVersion")].isNull() && m_memcache_version_isValid;
}

QString OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_memcache_version_isSet) {
        obj.insert(QString("memcacheVersion"), ::OpenAPI::toJsonValue(m_memcache_version));
    }
    return obj;
}

QString OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::getMemcacheVersion() const {
    return m_memcache_version;
}
void OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::setMemcacheVersion(const QString &memcache_version) {
    m_memcache_version = memcache_version;
    m_memcache_version_isSet = true;
}

bool OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::is_memcache_version_Set() const{
    return m_memcache_version_isSet;
}

bool OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::is_memcache_version_Valid() const{
    return m_memcache_version_isValid;
}

bool OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_memcache_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudMemcacheV1UpgradeInstanceRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
