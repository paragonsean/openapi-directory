/**
 * Cloud Memorystore for Memcached API
 * Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplyParametersRequest.h
 *
 * Request for ApplyParameters.
 */

#ifndef OAIApplyParametersRequest_H
#define OAIApplyParametersRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApplyParametersRequest : public OAIObject {
public:
    OAIApplyParametersRequest();
    OAIApplyParametersRequest(QString json);
    ~OAIApplyParametersRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isApplyAll() const;
    void setApplyAll(const bool &apply_all);
    bool is_apply_all_Set() const;
    bool is_apply_all_Valid() const;

    QList<QString> getNodeIds() const;
    void setNodeIds(const QList<QString> &node_ids);
    bool is_node_ids_Set() const;
    bool is_node_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_apply_all;
    bool m_apply_all_isSet;
    bool m_apply_all_isValid;

    QList<QString> m_node_ids;
    bool m_node_ids_isSet;
    bool m_node_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplyParametersRequest)

#endif // OAIApplyParametersRequest_H
