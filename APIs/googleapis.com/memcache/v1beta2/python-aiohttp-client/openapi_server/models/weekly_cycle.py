# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule import Schedule
from openapi_server import util


class WeeklyCycle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule: List[Schedule]=None):
        """WeeklyCycle - a model defined in OpenAPI

        :param schedule: The schedule of this WeeklyCycle.
        """
        self.openapi_types = {
            'schedule': List[Schedule]
        }

        self.attribute_map = {
            'schedule': 'schedule'
        }

        self._schedule = schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WeeklyCycle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WeeklyCycle of this WeeklyCycle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule(self):
        """Gets the schedule of this WeeklyCycle.

        User can specify multiple windows in a week. Minimum of 1 window.

        :return: The schedule of this WeeklyCycle.
        :rtype: List[Schedule]
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this WeeklyCycle.

        User can specify multiple windows in a week. Minimum of 1 window.

        :param schedule: The schedule of this WeeklyCycle.
        :type schedule: List[Schedule]
        """

        self._schedule = schedule
