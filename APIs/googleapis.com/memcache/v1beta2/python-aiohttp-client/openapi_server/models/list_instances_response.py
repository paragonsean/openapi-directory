# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.instance import Instance
from openapi_server import util


class ListInstancesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, resources: List[Instance]=None, unreachable: List[str]=None):
        """ListInstancesResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListInstancesResponse.
        :param resources: The resources of this ListInstancesResponse.
        :param unreachable: The unreachable of this ListInstancesResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'resources': List[Instance],
            'unreachable': List[str]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'resources': 'resources',
            'unreachable': 'unreachable'
        }

        self._next_page_token = next_page_token
        self._resources = resources
        self._unreachable = unreachable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListInstancesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListInstancesResponse of this ListInstancesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListInstancesResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :return: The next_page_token of this ListInstancesResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListInstancesResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :param next_page_token: The next_page_token of this ListInstancesResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def resources(self):
        """Gets the resources of this ListInstancesResponse.

        A list of Memcached instances in the project in the specified location, or across all locations. If the `location_id` in the parent field of the request is \"-\", all regions available to the project are queried, and the results aggregated.

        :return: The resources of this ListInstancesResponse.
        :rtype: List[Instance]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this ListInstancesResponse.

        A list of Memcached instances in the project in the specified location, or across all locations. If the `location_id` in the parent field of the request is \"-\", all regions available to the project are queried, and the results aggregated.

        :param resources: The resources of this ListInstancesResponse.
        :type resources: List[Instance]
        """

        self._resources = resources

    @property
    def unreachable(self):
        """Gets the unreachable of this ListInstancesResponse.

        Locations that could not be reached.

        :return: The unreachable of this ListInstancesResponse.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this ListInstancesResponse.

        Locations that could not be reached.

        :param unreachable: The unreachable of this ListInstancesResponse.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable
