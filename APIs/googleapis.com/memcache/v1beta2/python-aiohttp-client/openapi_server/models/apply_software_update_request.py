# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplySoftwareUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apply_all: bool=None, node_ids: List[str]=None):
        """ApplySoftwareUpdateRequest - a model defined in OpenAPI

        :param apply_all: The apply_all of this ApplySoftwareUpdateRequest.
        :param node_ids: The node_ids of this ApplySoftwareUpdateRequest.
        """
        self.openapi_types = {
            'apply_all': bool,
            'node_ids': List[str]
        }

        self.attribute_map = {
            'apply_all': 'applyAll',
            'node_ids': 'nodeIds'
        }

        self._apply_all = apply_all
        self._node_ids = node_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplySoftwareUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplySoftwareUpdateRequest of this ApplySoftwareUpdateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apply_all(self):
        """Gets the apply_all of this ApplySoftwareUpdateRequest.

        Whether to apply the update to all nodes. If set to true, will explicitly restrict users from specifying any nodes, and apply software update to all nodes (where applicable) within the instance.

        :return: The apply_all of this ApplySoftwareUpdateRequest.
        :rtype: bool
        """
        return self._apply_all

    @apply_all.setter
    def apply_all(self, apply_all):
        """Sets the apply_all of this ApplySoftwareUpdateRequest.

        Whether to apply the update to all nodes. If set to true, will explicitly restrict users from specifying any nodes, and apply software update to all nodes (where applicable) within the instance.

        :param apply_all: The apply_all of this ApplySoftwareUpdateRequest.
        :type apply_all: bool
        """

        self._apply_all = apply_all

    @property
    def node_ids(self):
        """Gets the node_ids of this ApplySoftwareUpdateRequest.

        Nodes to which we should apply the update to. Note all the selected nodes are updated in parallel.

        :return: The node_ids of this ApplySoftwareUpdateRequest.
        :rtype: List[str]
        """
        return self._node_ids

    @node_ids.setter
    def node_ids(self, node_ids):
        """Sets the node_ids of this ApplySoftwareUpdateRequest.

        Nodes to which we should apply the update to. Note all the selected nodes are updated in parallel.

        :param node_ids: The node_ids of this ApplySoftwareUpdateRequest.
        :type node_ids: List[str]
        """

        self._node_ids = node_ids
