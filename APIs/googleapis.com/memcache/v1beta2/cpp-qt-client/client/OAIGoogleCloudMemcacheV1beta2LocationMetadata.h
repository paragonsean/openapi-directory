/**
 * Cloud Memorystore for Memcached API
 * Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.
 *
 * The version of the OpenAPI document: v1beta2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleCloudMemcacheV1beta2LocationMetadata.h
 *
 * Metadata for the given google.cloud.location.Location.
 */

#ifndef OAIGoogleCloudMemcacheV1beta2LocationMetadata_H
#define OAIGoogleCloudMemcacheV1beta2LocationMetadata_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGoogleCloudMemcacheV1beta2LocationMetadata : public OAIObject {
public:
    OAIGoogleCloudMemcacheV1beta2LocationMetadata();
    OAIGoogleCloudMemcacheV1beta2LocationMetadata(QString json);
    ~OAIGoogleCloudMemcacheV1beta2LocationMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAIObject> getAvailableZones() const;
    void setAvailableZones(const QMap<QString, OAIObject> &available_zones);
    bool is_available_zones_Set() const;
    bool is_available_zones_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAIObject> m_available_zones;
    bool m_available_zones_isSet;
    bool m_available_zones_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleCloudMemcacheV1beta2LocationMetadata)

#endif // OAIGoogleCloudMemcacheV1beta2LocationMetadata_H
