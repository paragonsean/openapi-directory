/**
 * Cloud Memorystore for Memcached API
 * Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility model module.
 * @module model/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility
 * @version v1beta2
 */
class GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility {
    /**
     * Constructs a new <code>GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility</code>.
     * SloEligibility is a tuple containing eligibility value: true if an instance is eligible for SLO calculation or false if it should be excluded from all SLO-related calculations along with a user-defined reason.
     * @alias module:model/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility
     */
    constructor() { 
        
        GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility} obj Optional instance to populate.
     * @return {module:model/GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility} The populated <code>GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility();

            if (data.hasOwnProperty('eligible')) {
                obj['eligible'] = ApiClient.convertToType(data['eligible'], 'Boolean');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }

        return true;
    }


}



/**
 * Whether an instance is eligible or ineligible.
 * @member {Boolean} eligible
 */
GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility.prototype['eligible'] = undefined;

/**
 * User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.
 * @member {String} reason
 */
GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility.prototype['reason'] = undefined;






export default GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility;

