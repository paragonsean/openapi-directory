/**
 * Cloud Memorystore for Memcached API
 * Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.
 *
 * The version of the OpenAPI document: v1beta2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleCloudMemcacheV1beta2UpgradeInstanceRequest model module.
 * @module model/GoogleCloudMemcacheV1beta2UpgradeInstanceRequest
 * @version v1beta2
 */
class GoogleCloudMemcacheV1beta2UpgradeInstanceRequest {
    /**
     * Constructs a new <code>GoogleCloudMemcacheV1beta2UpgradeInstanceRequest</code>.
     * Request for UpgradeInstance.
     * @alias module:model/GoogleCloudMemcacheV1beta2UpgradeInstanceRequest
     */
    constructor() { 
        
        GoogleCloudMemcacheV1beta2UpgradeInstanceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleCloudMemcacheV1beta2UpgradeInstanceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleCloudMemcacheV1beta2UpgradeInstanceRequest} obj Optional instance to populate.
     * @return {module:model/GoogleCloudMemcacheV1beta2UpgradeInstanceRequest} The populated <code>GoogleCloudMemcacheV1beta2UpgradeInstanceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleCloudMemcacheV1beta2UpgradeInstanceRequest();

            if (data.hasOwnProperty('memcacheVersion')) {
                obj['memcacheVersion'] = ApiClient.convertToType(data['memcacheVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleCloudMemcacheV1beta2UpgradeInstanceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleCloudMemcacheV1beta2UpgradeInstanceRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['memcacheVersion'] && !(typeof data['memcacheVersion'] === 'string' || data['memcacheVersion'] instanceof String)) {
            throw new Error("Expected the field `memcacheVersion` to be a primitive type in the JSON string but got " + data['memcacheVersion']);
        }

        return true;
    }


}



/**
 * Required. Specifies the target version of memcached engine to upgrade to.
 * @member {module:model/GoogleCloudMemcacheV1beta2UpgradeInstanceRequest.MemcacheVersionEnum} memcacheVersion
 */
GoogleCloudMemcacheV1beta2UpgradeInstanceRequest.prototype['memcacheVersion'] = undefined;





/**
 * Allowed values for the <code>memcacheVersion</code> property.
 * @enum {String}
 * @readonly
 */
GoogleCloudMemcacheV1beta2UpgradeInstanceRequest['MemcacheVersionEnum'] = {

    /**
     * value: "MEMCACHE_VERSION_UNSPECIFIED"
     * @const
     */
    "VERSION_UNSPECIFIED": "MEMCACHE_VERSION_UNSPECIFIED",

    /**
     * value: "MEMCACHE_1_5"
     * @const
     */
    "1_5": "MEMCACHE_1_5",

    /**
     * value: "MEMCACHE_1_6_15"
     * @const
     */
    "1_6_15": "MEMCACHE_1_6_15"
};



export default GoogleCloudMemcacheV1beta2UpgradeInstanceRequest;

