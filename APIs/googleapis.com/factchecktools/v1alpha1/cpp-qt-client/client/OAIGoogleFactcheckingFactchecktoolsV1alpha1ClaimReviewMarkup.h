/**
 * Fact Check Tools API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup.h
 *
 * Fields for an individual &#x60;ClaimReview&#x60; element. Except for sub-messages that group fields together, each of these fields correspond those in https://schema.org/ClaimReview. We list the precise mapping for each field.
 */

#ifndef OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup_H
#define OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup_H

#include <QJsonObject>

#include "OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor.h"
#include "OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor;
class OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimRating;

class OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup : public OAIObject {
public:
    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup();
    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup(QString json);
    ~OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getClaimAppearances() const;
    void setClaimAppearances(const QList<QString> &claim_appearances);
    bool is_claim_appearances_Set() const;
    bool is_claim_appearances_Valid() const;

    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor getClaimAuthor() const;
    void setClaimAuthor(const OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor &claim_author);
    bool is_claim_author_Set() const;
    bool is_claim_author_Valid() const;

    QString getClaimDate() const;
    void setClaimDate(const QString &claim_date);
    bool is_claim_date_Set() const;
    bool is_claim_date_Valid() const;

    QString getClaimFirstAppearance() const;
    void setClaimFirstAppearance(const QString &claim_first_appearance);
    bool is_claim_first_appearance_Set() const;
    bool is_claim_first_appearance_Valid() const;

    QString getClaimLocation() const;
    void setClaimLocation(const QString &claim_location);
    bool is_claim_location_Set() const;
    bool is_claim_location_Valid() const;

    QString getClaimReviewed() const;
    void setClaimReviewed(const QString &claim_reviewed);
    bool is_claim_reviewed_Set() const;
    bool is_claim_reviewed_Valid() const;

    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimRating getRating() const;
    void setRating(const OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimRating &rating);
    bool is_rating_Set() const;
    bool is_rating_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_claim_appearances;
    bool m_claim_appearances_isSet;
    bool m_claim_appearances_isValid;

    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor m_claim_author;
    bool m_claim_author_isSet;
    bool m_claim_author_isValid;

    QString m_claim_date;
    bool m_claim_date_isSet;
    bool m_claim_date_isValid;

    QString m_claim_first_appearance;
    bool m_claim_first_appearance_isSet;
    bool m_claim_first_appearance_isValid;

    QString m_claim_location;
    bool m_claim_location_isSet;
    bool m_claim_location_isValid;

    QString m_claim_reviewed;
    bool m_claim_reviewed_isSet;
    bool m_claim_reviewed_isValid;

    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimRating m_rating;
    bool m_rating_isSet;
    bool m_rating_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup)

#endif // OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup_H
