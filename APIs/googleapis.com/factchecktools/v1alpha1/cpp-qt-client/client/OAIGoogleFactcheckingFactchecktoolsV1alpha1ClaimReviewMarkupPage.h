/**
 * Fact Check Tools API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage.h
 *
 * Holds one or more instances of &#x60;ClaimReview&#x60; markup for a webpage.
 */

#ifndef OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage_H
#define OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage_H

#include <QJsonObject>

#include "OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor.h"
#include "OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor;
class OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup;

class OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage : public OAIObject {
public:
    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage();
    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage(QString json);
    ~OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor getClaimReviewAuthor() const;
    void setClaimReviewAuthor(const OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor &claim_review_author);
    bool is_claim_review_author_Set() const;
    bool is_claim_review_author_Valid() const;

    QList<OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup> getClaimReviewMarkups() const;
    void setClaimReviewMarkups(const QList<OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup> &claim_review_markups);
    bool is_claim_review_markups_Set() const;
    bool is_claim_review_markups_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPageUrl() const;
    void setPageUrl(const QString &page_url);
    bool is_page_url_Set() const;
    bool is_page_url_Valid() const;

    QString getPublishDate() const;
    void setPublishDate(const QString &publish_date);
    bool is_publish_date_Set() const;
    bool is_publish_date_Valid() const;

    QString getVersionId() const;
    void setVersionId(const QString &version_id);
    bool is_version_id_Set() const;
    bool is_version_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor m_claim_review_author;
    bool m_claim_review_author_isSet;
    bool m_claim_review_author_isValid;

    QList<OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup> m_claim_review_markups;
    bool m_claim_review_markups_isSet;
    bool m_claim_review_markups_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_page_url;
    bool m_page_url_isSet;
    bool m_page_url_isValid;

    QString m_publish_date;
    bool m_publish_date_isSet;
    bool m_publish_date_isValid;

    QString m_version_id;
    bool m_version_id_isSet;
    bool m_version_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage)

#endif // OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage_H
