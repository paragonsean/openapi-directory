/**
 * Fact Check Tools API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage() {
    this->initializeModel();
}

OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::~OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage() {}

void OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::initializeModel() {

    m_claim_review_author_isSet = false;
    m_claim_review_author_isValid = false;

    m_claim_review_markups_isSet = false;
    m_claim_review_markups_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_page_url_isSet = false;
    m_page_url_isValid = false;

    m_publish_date_isSet = false;
    m_publish_date_isValid = false;

    m_version_id_isSet = false;
    m_version_id_isValid = false;
}

void OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::fromJsonObject(QJsonObject json) {

    m_claim_review_author_isValid = ::OpenAPI::fromJsonValue(m_claim_review_author, json[QString("claimReviewAuthor")]);
    m_claim_review_author_isSet = !json[QString("claimReviewAuthor")].isNull() && m_claim_review_author_isValid;

    m_claim_review_markups_isValid = ::OpenAPI::fromJsonValue(m_claim_review_markups, json[QString("claimReviewMarkups")]);
    m_claim_review_markups_isSet = !json[QString("claimReviewMarkups")].isNull() && m_claim_review_markups_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_page_url_isValid = ::OpenAPI::fromJsonValue(m_page_url, json[QString("pageUrl")]);
    m_page_url_isSet = !json[QString("pageUrl")].isNull() && m_page_url_isValid;

    m_publish_date_isValid = ::OpenAPI::fromJsonValue(m_publish_date, json[QString("publishDate")]);
    m_publish_date_isSet = !json[QString("publishDate")].isNull() && m_publish_date_isValid;

    m_version_id_isValid = ::OpenAPI::fromJsonValue(m_version_id, json[QString("versionId")]);
    m_version_id_isSet = !json[QString("versionId")].isNull() && m_version_id_isValid;
}

QString OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::asJsonObject() const {
    QJsonObject obj;
    if (m_claim_review_author.isSet()) {
        obj.insert(QString("claimReviewAuthor"), ::OpenAPI::toJsonValue(m_claim_review_author));
    }
    if (m_claim_review_markups.size() > 0) {
        obj.insert(QString("claimReviewMarkups"), ::OpenAPI::toJsonValue(m_claim_review_markups));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_page_url_isSet) {
        obj.insert(QString("pageUrl"), ::OpenAPI::toJsonValue(m_page_url));
    }
    if (m_publish_date_isSet) {
        obj.insert(QString("publishDate"), ::OpenAPI::toJsonValue(m_publish_date));
    }
    if (m_version_id_isSet) {
        obj.insert(QString("versionId"), ::OpenAPI::toJsonValue(m_version_id));
    }
    return obj;
}

OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::getClaimReviewAuthor() const {
    return m_claim_review_author;
}
void OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::setClaimReviewAuthor(const OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor &claim_review_author) {
    m_claim_review_author = claim_review_author;
    m_claim_review_author_isSet = true;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_claim_review_author_Set() const{
    return m_claim_review_author_isSet;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_claim_review_author_Valid() const{
    return m_claim_review_author_isValid;
}

QList<OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup> OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::getClaimReviewMarkups() const {
    return m_claim_review_markups;
}
void OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::setClaimReviewMarkups(const QList<OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup> &claim_review_markups) {
    m_claim_review_markups = claim_review_markups;
    m_claim_review_markups_isSet = true;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_claim_review_markups_Set() const{
    return m_claim_review_markups_isSet;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_claim_review_markups_Valid() const{
    return m_claim_review_markups_isValid;
}

QString OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::getName() const {
    return m_name;
}
void OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::getPageUrl() const {
    return m_page_url;
}
void OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::setPageUrl(const QString &page_url) {
    m_page_url = page_url;
    m_page_url_isSet = true;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_page_url_Set() const{
    return m_page_url_isSet;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_page_url_Valid() const{
    return m_page_url_isValid;
}

QString OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::getPublishDate() const {
    return m_publish_date;
}
void OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::setPublishDate(const QString &publish_date) {
    m_publish_date = publish_date;
    m_publish_date_isSet = true;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_publish_date_Set() const{
    return m_publish_date_isSet;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_publish_date_Valid() const{
    return m_publish_date_isValid;
}

QString OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::getVersionId() const {
    return m_version_id;
}
void OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::setVersionId(const QString &version_id) {
    m_version_id = version_id;
    m_version_id_isSet = true;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_version_id_Set() const{
    return m_version_id_isSet;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::is_version_id_Valid() const{
    return m_version_id_isValid;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_claim_review_author.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_claim_review_markups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
