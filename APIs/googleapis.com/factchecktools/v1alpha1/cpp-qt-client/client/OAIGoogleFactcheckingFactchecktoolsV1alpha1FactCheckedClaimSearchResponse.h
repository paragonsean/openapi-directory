/**
 * Fact Check Tools API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.h
 *
 * Response from searching fact-checked claims.
 */

#ifndef OAIGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse_H
#define OAIGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse_H

#include <QJsonObject>

#include "OAIGoogleFactcheckingFactchecktoolsV1alpha1Claim.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleFactcheckingFactchecktoolsV1alpha1Claim;

class OAIGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse : public OAIObject {
public:
    OAIGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse();
    OAIGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse(QString json);
    ~OAIGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGoogleFactcheckingFactchecktoolsV1alpha1Claim> getClaims() const;
    void setClaims(const QList<OAIGoogleFactcheckingFactchecktoolsV1alpha1Claim> &claims);
    bool is_claims_Set() const;
    bool is_claims_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGoogleFactcheckingFactchecktoolsV1alpha1Claim> m_claims;
    bool m_claims_isSet;
    bool m_claims_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse)

#endif // OAIGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse_H
