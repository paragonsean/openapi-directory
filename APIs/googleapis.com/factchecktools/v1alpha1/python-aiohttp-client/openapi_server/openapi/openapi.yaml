openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Fact Check Tools API
  version: v1alpha1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.4
    format: google
    url: https://factchecktools.googleapis.com/$discovery/rest?version=v1alpha1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: factchecktools
externalDocs:
  url: https://developers.google.com/fact-check/tools/api/
servers:
- url: https://factchecktools.googleapis.com/
tags:
- name: claims
- name: pages
paths:
  /v1alpha1/claims:search:
    get:
      description: Search through fact-checked claims.
      operationId: factchecktools_claims_search
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\
          \ Can be used to restrict results by language, though we do not currently\
          \ consider the region."
        explode: true
        in: query
        name: languageCode
        required: false
        schema:
          type: string
        style: form
      - description: "The maximum age of the returned search results, in days. Age\
          \ is determined by either claim date or review date, whichever is newer."
        explode: true
        in: query
        name: maxAgeDays
        required: false
        schema:
          type: integer
        style: form
      - description: "An integer that specifies the current offset (that is, starting\
          \ result location) in search results. This field is only considered if `page_token`\
          \ is unset. For example, 0 means to return results starting from the first\
          \ matching result, and 10 means to return from the 11th result."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: The pagination size. We will return up to that many results.
          Defaults to 10 if not set.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The pagination token. You may provide the `next_page_token`\
          \ returned from a previous List request, if any, in order to get the next\
          \ page. All other fields must have the same values as in the previous request."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: Textual query string. Required unless `review_publisher_site_filter`
          is specified.
        explode: true
        in: query
        name: query
        required: false
        schema:
          type: string
        style: form
      - description: "The review publisher site to filter results by, e.g. nytimes.com."
        explode: true
        in: query
        name: reviewPublisherSiteFilter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse'
          description: Successful response
      tags:
      - claims
      x-openapi-router-controller: openapi_server.controllers.claims_controller
  /v1alpha1/pages:
    get:
      description: List the `ClaimReview` markup pages for a specific URL or for an
        organization.
      operationId: factchecktools_pages_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "An integer that specifies the current offset (that is, starting\
          \ result location) in search results. This field is only considered if `page_token`\
          \ is unset, and if the request is not for a specific URL. For example, 0\
          \ means to return results starting from the first matching result, and 10\
          \ means to return from the 11th result."
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      - description: "The organization for which we want to fetch markups for. For\
          \ instance, \"site.com\". Cannot be specified along with an URL."
        explode: true
        in: query
        name: organization
        required: false
        schema:
          type: string
        style: form
      - description: The pagination size. We will return up to that many results.
          Defaults to 10 if not set. Has no effect if a URL is requested.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: "The pagination token. You may provide the `next_page_token`\
          \ returned from a previous List request, if any, in order to get the next\
          \ page. All other fields must have the same values as in the previous request."
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      - description: "The URL from which to get `ClaimReview` markup. There will be\
          \ at most one result. If markup is associated with a more canonical version\
          \ of the URL provided, we will return that URL instead. Cannot be specified\
          \ along with an organization."
        explode: true
        in: query
        name: url
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/userinfo.email
        Oauth2c:
        - https://www.googleapis.com/auth/userinfo.email
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
    post:
      description: Create `ClaimReview` markup on a page.
      operationId: factchecktools_pages_create
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/userinfo.email
        Oauth2c:
        - https://www.googleapis.com/auth/userinfo.email
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
      x-codegen-request-body-name: body
  /v1alpha1/{name}:
    delete:
      description: Delete all `ClaimReview` markup on a page.
      operationId: factchecktools_pages_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The name of the resource to delete, in the form of `pages/{page_id}`."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleProtobufEmpty'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/userinfo.email
        Oauth2c:
        - https://www.googleapis.com/auth/userinfo.email
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
    get:
      description: Get all `ClaimReview` markup on a page.
      operationId: factchecktools_pages_get
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The name of the resource to get, in the form of `pages/{page_id}`."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/userinfo.email
        Oauth2c:
        - https://www.googleapis.com/auth/userinfo.email
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
    put:
      description: "Update for all `ClaimReview` markup on a page Note that this is\
        \ a full update. To retain the existing `ClaimReview` markup on a page, first\
        \ perform a Get operation, then modify the returned markup, and finally call\
        \ Update with the entire `ClaimReview` markup as the body."
      operationId: factchecktools_pages_update
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "The name of this `ClaimReview` markup page resource, in the\
          \ form of `pages/{page_id}`. Except for update requests, this field is output-only\
          \ and should not be set by the user."
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/userinfo.email
        Oauth2c:
        - https://www.googleapis.com/auth/userinfo.email
      tags:
      - pages
      x-openapi-router-controller: openapi_server.controllers.pages_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    GoogleFactcheckingFactchecktoolsV1alpha1Claim:
      description: Information about the claim.
      example:
        claimDate: claimDate
        claimReview:
        - textualRating: textualRating
          reviewDate: reviewDate
          publisher:
            site: site
            name: name
          languageCode: languageCode
          title: title
          url: url
        - textualRating: textualRating
          reviewDate: reviewDate
          publisher:
            site: site
            name: name
          languageCode: languageCode
          title: title
          url: url
        text: text
        claimant: claimant
      properties:
        claimDate:
          description: The date that the claim was made.
          format: google-datetime
          title: claimDate
          type: string
        claimReview:
          description: "One or more reviews of this claim (namely, a fact-checking\
            \ article)."
          items:
            $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview'
          title: claimReview
          type: array
        claimant:
          description: "A person or organization stating the claim. For instance,\
            \ \"John Doe\"."
          title: claimant
          type: string
        text:
          description: "The claim text. For instance, \"Crime has doubled in the last\
            \ 2 years.\""
          title: text
          type: string
      title: GoogleFactcheckingFactchecktoolsV1alpha1Claim
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor:
      description: Information about the claim author.
      example:
        imageUrl: imageUrl
        jobTitle: jobTitle
        name: name
        sameAs: sameAs
      properties:
        imageUrl:
          description: Corresponds to `ClaimReview.itemReviewed.author.image`.
          title: imageUrl
          type: string
        jobTitle:
          description: Corresponds to `ClaimReview.itemReviewed.author.jobTitle`.
          title: jobTitle
          type: string
        name:
          description: "A person or organization stating the claim. For instance,\
            \ \"John Doe\". Corresponds to `ClaimReview.itemReviewed.author.name`."
          title: name
          type: string
        sameAs:
          description: Corresponds to `ClaimReview.itemReviewed.author.sameAs`.
          title: sameAs
          type: string
      title: GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating:
      description: Information about the claim rating.
      example:
        bestRating: 0
        textualRating: textualRating
        imageUrl: imageUrl
        ratingValue: 6
        worstRating: 1
        ratingExplanation: ratingExplanation
      properties:
        bestRating:
          description: "For numeric ratings, the best value possible in the scale\
            \ from worst to best. Corresponds to `ClaimReview.reviewRating.bestRating`."
          format: int32
          title: bestRating
          type: integer
        imageUrl:
          description: Corresponds to `ClaimReview.reviewRating.image`.
          title: imageUrl
          type: string
        ratingExplanation:
          description: Corresponds to `ClaimReview.reviewRating.ratingExplanation`.
          title: ratingExplanation
          type: string
        ratingValue:
          description: "A numeric rating of this claim, in the range worstRating —\
            \ bestRating inclusive. Corresponds to `ClaimReview.reviewRating.ratingValue`."
          format: int32
          title: ratingValue
          type: integer
        textualRating:
          description: The truthfulness rating as a human-readible short word or phrase.
            Corresponds to `ClaimReview.reviewRating.alternateName`.
          title: textualRating
          type: string
        worstRating:
          description: "For numeric ratings, the worst value possible in the scale\
            \ from worst to best. Corresponds to `ClaimReview.reviewRating.worstRating`."
          format: int32
          title: worstRating
          type: integer
      title: GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview:
      description: Information about a claim review.
      example:
        textualRating: textualRating
        reviewDate: reviewDate
        publisher:
          site: site
          name: name
        languageCode: languageCode
        title: title
        url: url
      properties:
        languageCode:
          description: "The language this review was written in. For instance, \"\
            en\" or \"de\"."
          title: languageCode
          type: string
        publisher:
          $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1Publisher'
        reviewDate:
          description: The date the claim was reviewed.
          format: google-datetime
          title: reviewDate
          type: string
        textualRating:
          description: "Textual rating. For instance, \"Mostly false\"."
          title: textualRating
          type: string
        title:
          description: "The title of this claim review, if it can be determined."
          title: title
          type: string
        url:
          description: The URL of this claim review.
          title: url
          type: string
      title: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor:
      description: Information about the claim review author.
      example:
        imageUrl: imageUrl
        name: name
      properties:
        imageUrl:
          description: Corresponds to `ClaimReview.author.image`.
          title: imageUrl
          type: string
        name:
          description: Name of the organization that is publishing the fact check.
            Corresponds to `ClaimReview.author.name`.
          title: name
          type: string
      title: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup:
      description: "Fields for an individual `ClaimReview` element. Except for sub-messages\
        \ that group fields together, each of these fields correspond those in https://schema.org/ClaimReview.\
        \ We list the precise mapping for each field."
      example:
        claimLocation: claimLocation
        claimReviewed: claimReviewed
        claimFirstAppearance: claimFirstAppearance
        claimDate: claimDate
        claimAuthor:
          imageUrl: imageUrl
          jobTitle: jobTitle
          name: name
          sameAs: sameAs
        rating:
          bestRating: 0
          textualRating: textualRating
          imageUrl: imageUrl
          ratingValue: 6
          worstRating: 1
          ratingExplanation: ratingExplanation
        claimAppearances:
        - claimAppearances
        - claimAppearances
        url: url
      properties:
        claimAppearances:
          description: "A list of links to works in which this claim appears, aside\
            \ from the one specified in `claim_first_appearance`. Corresponds to `ClaimReview.itemReviewed[@type=Claim].appearance.url`."
          items:
            type: string
          title: claimAppearances
          type: array
        claimAuthor:
          $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor'
        claimDate:
          description: The date when the claim was made or entered public discourse.
            Corresponds to `ClaimReview.itemReviewed.datePublished`.
          title: claimDate
          type: string
        claimFirstAppearance:
          description: "A link to a work in which this claim first appears. Corresponds\
            \ to `ClaimReview.itemReviewed[@type=Claim].firstAppearance.url`."
          title: claimFirstAppearance
          type: string
        claimLocation:
          description: The location where this claim was made. Corresponds to `ClaimReview.itemReviewed.name`.
          title: claimLocation
          type: string
        claimReviewed:
          description: A short summary of the claim being evaluated. Corresponds to
            `ClaimReview.claimReviewed`.
          title: claimReviewed
          type: string
        rating:
          $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating'
        url:
          description: "This field is optional, and will default to the page URL.\
            \ We provide this field to allow you the override the default value, but\
            \ the only permitted override is the page URL plus an optional anchor\
            \ link (\"page jump\"). Corresponds to `ClaimReview.url`"
          title: url
          type: string
      title: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage:
      description: Holds one or more instances of `ClaimReview` markup for a webpage.
      example:
        versionId: versionId
        claimReviewAuthor:
          imageUrl: imageUrl
          name: name
        name: name
        publishDate: publishDate
        pageUrl: pageUrl
        claimReviewMarkups:
        - claimLocation: claimLocation
          claimReviewed: claimReviewed
          claimFirstAppearance: claimFirstAppearance
          claimDate: claimDate
          claimAuthor:
            imageUrl: imageUrl
            jobTitle: jobTitle
            name: name
            sameAs: sameAs
          rating:
            bestRating: 0
            textualRating: textualRating
            imageUrl: imageUrl
            ratingValue: 6
            worstRating: 1
            ratingExplanation: ratingExplanation
          claimAppearances:
          - claimAppearances
          - claimAppearances
          url: url
        - claimLocation: claimLocation
          claimReviewed: claimReviewed
          claimFirstAppearance: claimFirstAppearance
          claimDate: claimDate
          claimAuthor:
            imageUrl: imageUrl
            jobTitle: jobTitle
            name: name
            sameAs: sameAs
          rating:
            bestRating: 0
            textualRating: textualRating
            imageUrl: imageUrl
            ratingValue: 6
            worstRating: 1
            ratingExplanation: ratingExplanation
          claimAppearances:
          - claimAppearances
          - claimAppearances
          url: url
      properties:
        claimReviewAuthor:
          $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor'
        claimReviewMarkups:
          description: A list of individual claim reviews for this page. Each item
            in the list corresponds to one `ClaimReview` element.
          items:
            $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup'
          title: claimReviewMarkups
          type: array
        name:
          description: "The name of this `ClaimReview` markup page resource, in the\
            \ form of `pages/{page_id}`. Except for update requests, this field is\
            \ output-only and should not be set by the user."
          title: name
          type: string
        pageUrl:
          description: "The URL of the page associated with this `ClaimReview` markup.\
            \ While every individual `ClaimReview` has its own URL field, semantically\
            \ this is a page-level field, and each `ClaimReview` on this page will\
            \ use this value unless individually overridden. Corresponds to `ClaimReview.url`"
          title: pageUrl
          type: string
        publishDate:
          description: "The date when the fact check was published. Similar to the\
            \ URL, semantically this is a page-level field, and each `ClaimReview`\
            \ on this page will contain the same value. Corresponds to `ClaimReview.datePublished`"
          title: publishDate
          type: string
        versionId:
          description: "The version ID for this markup. Except for update requests,\
            \ this field is output-only and should not be set by the user."
          title: versionId
          type: string
      title: GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse:
      description: Response from searching fact-checked claims.
      example:
        nextPageToken: nextPageToken
        claims:
        - claimDate: claimDate
          claimReview:
          - textualRating: textualRating
            reviewDate: reviewDate
            publisher:
              site: site
              name: name
            languageCode: languageCode
            title: title
            url: url
          - textualRating: textualRating
            reviewDate: reviewDate
            publisher:
              site: site
              name: name
            languageCode: languageCode
            title: title
            url: url
          text: text
          claimant: claimant
        - claimDate: claimDate
          claimReview:
          - textualRating: textualRating
            reviewDate: reviewDate
            publisher:
              site: site
              name: name
            languageCode: languageCode
            title: title
            url: url
          - textualRating: textualRating
            reviewDate: reviewDate
            publisher:
              site: site
              name: name
            languageCode: languageCode
            title: title
            url: url
          text: text
          claimant: claimant
      properties:
        claims:
          description: The list of claims and all of their associated information.
          items:
            $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1Claim'
          title: claims
          type: array
        nextPageToken:
          description: The next pagination token in the Search response. It should
            be used as the `page_token` for the following request. An empty value
            means no more results.
          title: nextPageToken
          type: string
      title: GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse:
      description: Response from listing `ClaimReview` markup.
      example:
        nextPageToken: nextPageToken
        claimReviewMarkupPages:
        - versionId: versionId
          claimReviewAuthor:
            imageUrl: imageUrl
            name: name
          name: name
          publishDate: publishDate
          pageUrl: pageUrl
          claimReviewMarkups:
          - claimLocation: claimLocation
            claimReviewed: claimReviewed
            claimFirstAppearance: claimFirstAppearance
            claimDate: claimDate
            claimAuthor:
              imageUrl: imageUrl
              jobTitle: jobTitle
              name: name
              sameAs: sameAs
            rating:
              bestRating: 0
              textualRating: textualRating
              imageUrl: imageUrl
              ratingValue: 6
              worstRating: 1
              ratingExplanation: ratingExplanation
            claimAppearances:
            - claimAppearances
            - claimAppearances
            url: url
          - claimLocation: claimLocation
            claimReviewed: claimReviewed
            claimFirstAppearance: claimFirstAppearance
            claimDate: claimDate
            claimAuthor:
              imageUrl: imageUrl
              jobTitle: jobTitle
              name: name
              sameAs: sameAs
            rating:
              bestRating: 0
              textualRating: textualRating
              imageUrl: imageUrl
              ratingValue: 6
              worstRating: 1
              ratingExplanation: ratingExplanation
            claimAppearances:
            - claimAppearances
            - claimAppearances
            url: url
        - versionId: versionId
          claimReviewAuthor:
            imageUrl: imageUrl
            name: name
          name: name
          publishDate: publishDate
          pageUrl: pageUrl
          claimReviewMarkups:
          - claimLocation: claimLocation
            claimReviewed: claimReviewed
            claimFirstAppearance: claimFirstAppearance
            claimDate: claimDate
            claimAuthor:
              imageUrl: imageUrl
              jobTitle: jobTitle
              name: name
              sameAs: sameAs
            rating:
              bestRating: 0
              textualRating: textualRating
              imageUrl: imageUrl
              ratingValue: 6
              worstRating: 1
              ratingExplanation: ratingExplanation
            claimAppearances:
            - claimAppearances
            - claimAppearances
            url: url
          - claimLocation: claimLocation
            claimReviewed: claimReviewed
            claimFirstAppearance: claimFirstAppearance
            claimDate: claimDate
            claimAuthor:
              imageUrl: imageUrl
              jobTitle: jobTitle
              name: name
              sameAs: sameAs
            rating:
              bestRating: 0
              textualRating: textualRating
              imageUrl: imageUrl
              ratingValue: 6
              worstRating: 1
              ratingExplanation: ratingExplanation
            claimAppearances:
            - claimAppearances
            - claimAppearances
            url: url
      properties:
        claimReviewMarkupPages:
          description: The result list of pages of `ClaimReview` markup.
          items:
            $ref: '#/components/schemas/GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage'
          title: claimReviewMarkupPages
          type: array
        nextPageToken:
          description: The next pagination token in the Search response. It should
            be used as the `page_token` for the following request. An empty value
            means no more results.
          title: nextPageToken
          type: string
      title: GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse
      type: object
    GoogleFactcheckingFactchecktoolsV1alpha1Publisher:
      description: Information about the publisher.
      example:
        site: site
        name: name
      properties:
        name:
          description: "The name of this publisher. For instance, \"Awesome Fact Checks\"\
            ."
          title: name
          type: string
        site:
          description: "Host-level site name, without the protocol or \"www\" prefix.\
            \ For instance, \"awesomefactchecks.com\". This value of this field is\
            \ based purely on the claim review URL."
          title: site
          type: string
      title: GoogleFactcheckingFactchecktoolsV1alpha1Publisher
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining\
        \ duplicated empty messages in your APIs. A typical example is to use it as\
        \ the request or the response type of an API method. For instance: service\
        \ Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/userinfo.email: See your primary Google
              Account email address
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/userinfo.email: See your primary Google
              Account email address
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
