# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, best_rating: int=None, image_url: str=None, rating_explanation: str=None, rating_value: int=None, textual_rating: str=None, worst_rating: int=None):
        """GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating - a model defined in OpenAPI

        :param best_rating: The best_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :param image_url: The image_url of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :param rating_explanation: The rating_explanation of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :param rating_value: The rating_value of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :param textual_rating: The textual_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :param worst_rating: The worst_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        """
        self.openapi_types = {
            'best_rating': int,
            'image_url': str,
            'rating_explanation': str,
            'rating_value': int,
            'textual_rating': str,
            'worst_rating': int
        }

        self.attribute_map = {
            'best_rating': 'bestRating',
            'image_url': 'imageUrl',
            'rating_explanation': 'ratingExplanation',
            'rating_value': 'ratingValue',
            'textual_rating': 'textualRating',
            'worst_rating': 'worstRating'
        }

        self._best_rating = best_rating
        self._image_url = image_url
        self._rating_explanation = rating_explanation
        self._rating_value = rating_value
        self._textual_rating = textual_rating
        self._worst_rating = worst_rating

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def best_rating(self):
        """Gets the best_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        For numeric ratings, the best value possible in the scale from worst to best. Corresponds to `ClaimReview.reviewRating.bestRating`.

        :return: The best_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :rtype: int
        """
        return self._best_rating

    @best_rating.setter
    def best_rating(self, best_rating):
        """Sets the best_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        For numeric ratings, the best value possible in the scale from worst to best. Corresponds to `ClaimReview.reviewRating.bestRating`.

        :param best_rating: The best_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :type best_rating: int
        """

        self._best_rating = best_rating

    @property
    def image_url(self):
        """Gets the image_url of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        Corresponds to `ClaimReview.reviewRating.image`.

        :return: The image_url of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        Corresponds to `ClaimReview.reviewRating.image`.

        :param image_url: The image_url of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def rating_explanation(self):
        """Gets the rating_explanation of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        Corresponds to `ClaimReview.reviewRating.ratingExplanation`.

        :return: The rating_explanation of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :rtype: str
        """
        return self._rating_explanation

    @rating_explanation.setter
    def rating_explanation(self, rating_explanation):
        """Sets the rating_explanation of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        Corresponds to `ClaimReview.reviewRating.ratingExplanation`.

        :param rating_explanation: The rating_explanation of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :type rating_explanation: str
        """

        self._rating_explanation = rating_explanation

    @property
    def rating_value(self):
        """Gets the rating_value of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        A numeric rating of this claim, in the range worstRating — bestRating inclusive. Corresponds to `ClaimReview.reviewRating.ratingValue`.

        :return: The rating_value of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :rtype: int
        """
        return self._rating_value

    @rating_value.setter
    def rating_value(self, rating_value):
        """Sets the rating_value of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        A numeric rating of this claim, in the range worstRating — bestRating inclusive. Corresponds to `ClaimReview.reviewRating.ratingValue`.

        :param rating_value: The rating_value of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :type rating_value: int
        """

        self._rating_value = rating_value

    @property
    def textual_rating(self):
        """Gets the textual_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        The truthfulness rating as a human-readible short word or phrase. Corresponds to `ClaimReview.reviewRating.alternateName`.

        :return: The textual_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :rtype: str
        """
        return self._textual_rating

    @textual_rating.setter
    def textual_rating(self, textual_rating):
        """Sets the textual_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        The truthfulness rating as a human-readible short word or phrase. Corresponds to `ClaimReview.reviewRating.alternateName`.

        :param textual_rating: The textual_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :type textual_rating: str
        """

        self._textual_rating = textual_rating

    @property
    def worst_rating(self):
        """Gets the worst_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        For numeric ratings, the worst value possible in the scale from worst to best. Corresponds to `ClaimReview.reviewRating.worstRating`.

        :return: The worst_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :rtype: int
        """
        return self._worst_rating

    @worst_rating.setter
    def worst_rating(self, worst_rating):
        """Sets the worst_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.

        For numeric ratings, the worst value possible in the scale from worst to best. Corresponds to `ClaimReview.reviewRating.worstRating`.

        :param worst_rating: The worst_rating of this GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.
        :type worst_rating: int
        """

        self._worst_rating = worst_rating
