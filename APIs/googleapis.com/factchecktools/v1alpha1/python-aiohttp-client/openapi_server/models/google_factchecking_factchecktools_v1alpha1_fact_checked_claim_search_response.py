# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_factchecking_factchecktools_v1alpha1_claim import GoogleFactcheckingFactchecktoolsV1alpha1Claim
from openapi_server import util


class GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, claims: List[GoogleFactcheckingFactchecktoolsV1alpha1Claim]=None, next_page_token: str=None):
        """GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse - a model defined in OpenAPI

        :param claims: The claims of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.
        :param next_page_token: The next_page_token of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.
        """
        self.openapi_types = {
            'claims': List[GoogleFactcheckingFactchecktoolsV1alpha1Claim],
            'next_page_token': str
        }

        self.attribute_map = {
            'claims': 'claims',
            'next_page_token': 'nextPageToken'
        }

        self._claims = claims
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def claims(self):
        """Gets the claims of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.

        The list of claims and all of their associated information.

        :return: The claims of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.
        :rtype: List[GoogleFactcheckingFactchecktoolsV1alpha1Claim]
        """
        return self._claims

    @claims.setter
    def claims(self, claims):
        """Sets the claims of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.

        The list of claims and all of their associated information.

        :param claims: The claims of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.
        :type claims: List[GoogleFactcheckingFactchecktoolsV1alpha1Claim]
        """

        self._claims = claims

    @property
    def next_page_token(self):
        """Gets the next_page_token of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.

        The next pagination token in the Search response. It should be used as the `page_token` for the following request. An empty value means no more results.

        :return: The next_page_token of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.

        The next pagination token in the Search response. It should be used as the `page_token` for the following request. An empty value means no more results.

        :param next_page_token: The next_page_token of this GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
