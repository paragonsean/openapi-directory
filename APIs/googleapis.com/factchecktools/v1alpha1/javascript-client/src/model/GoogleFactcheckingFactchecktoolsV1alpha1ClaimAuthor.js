/**
 * Fact Check Tools API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor model module.
 * @module model/GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor
 * @version v1alpha1
 */
class GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor {
    /**
     * Constructs a new <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor</code>.
     * Information about the claim author.
     * @alias module:model/GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor
     */
    constructor() { 
        
        GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor} obj Optional instance to populate.
     * @return {module:model/GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor} The populated <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor();

            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('jobTitle')) {
                obj['jobTitle'] = ApiClient.convertToType(data['jobTitle'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sameAs')) {
                obj['sameAs'] = ApiClient.convertToType(data['sameAs'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['jobTitle'] && !(typeof data['jobTitle'] === 'string' || data['jobTitle'] instanceof String)) {
            throw new Error("Expected the field `jobTitle` to be a primitive type in the JSON string but got " + data['jobTitle']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['sameAs'] && !(typeof data['sameAs'] === 'string' || data['sameAs'] instanceof String)) {
            throw new Error("Expected the field `sameAs` to be a primitive type in the JSON string but got " + data['sameAs']);
        }

        return true;
    }


}



/**
 * Corresponds to `ClaimReview.itemReviewed.author.image`.
 * @member {String} imageUrl
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor.prototype['imageUrl'] = undefined;

/**
 * Corresponds to `ClaimReview.itemReviewed.author.jobTitle`.
 * @member {String} jobTitle
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor.prototype['jobTitle'] = undefined;

/**
 * A person or organization stating the claim. For instance, \"John Doe\". Corresponds to `ClaimReview.itemReviewed.author.name`.
 * @member {String} name
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor.prototype['name'] = undefined;

/**
 * Corresponds to `ClaimReview.itemReviewed.author.sameAs`.
 * @member {String} sameAs
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor.prototype['sameAs'] = undefined;






export default GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor;

