/**
 * Fact Check Tools API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating model module.
 * @module model/GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating
 * @version v1alpha1
 */
class GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating {
    /**
     * Constructs a new <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating</code>.
     * Information about the claim rating.
     * @alias module:model/GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating
     */
    constructor() { 
        
        GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating} obj Optional instance to populate.
     * @return {module:model/GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating} The populated <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating();

            if (data.hasOwnProperty('bestRating')) {
                obj['bestRating'] = ApiClient.convertToType(data['bestRating'], 'Number');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('ratingExplanation')) {
                obj['ratingExplanation'] = ApiClient.convertToType(data['ratingExplanation'], 'String');
            }
            if (data.hasOwnProperty('ratingValue')) {
                obj['ratingValue'] = ApiClient.convertToType(data['ratingValue'], 'Number');
            }
            if (data.hasOwnProperty('textualRating')) {
                obj['textualRating'] = ApiClient.convertToType(data['textualRating'], 'String');
            }
            if (data.hasOwnProperty('worstRating')) {
                obj['worstRating'] = ApiClient.convertToType(data['worstRating'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['ratingExplanation'] && !(typeof data['ratingExplanation'] === 'string' || data['ratingExplanation'] instanceof String)) {
            throw new Error("Expected the field `ratingExplanation` to be a primitive type in the JSON string but got " + data['ratingExplanation']);
        }
        // ensure the json data is a string
        if (data['textualRating'] && !(typeof data['textualRating'] === 'string' || data['textualRating'] instanceof String)) {
            throw new Error("Expected the field `textualRating` to be a primitive type in the JSON string but got " + data['textualRating']);
        }

        return true;
    }


}



/**
 * For numeric ratings, the best value possible in the scale from worst to best. Corresponds to `ClaimReview.reviewRating.bestRating`.
 * @member {Number} bestRating
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.prototype['bestRating'] = undefined;

/**
 * Corresponds to `ClaimReview.reviewRating.image`.
 * @member {String} imageUrl
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.prototype['imageUrl'] = undefined;

/**
 * Corresponds to `ClaimReview.reviewRating.ratingExplanation`.
 * @member {String} ratingExplanation
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.prototype['ratingExplanation'] = undefined;

/**
 * A numeric rating of this claim, in the range worstRating â€” bestRating inclusive. Corresponds to `ClaimReview.reviewRating.ratingValue`.
 * @member {Number} ratingValue
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.prototype['ratingValue'] = undefined;

/**
 * The truthfulness rating as a human-readible short word or phrase. Corresponds to `ClaimReview.reviewRating.alternateName`.
 * @member {String} textualRating
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.prototype['textualRating'] = undefined;

/**
 * For numeric ratings, the worst value possible in the scale from worst to best. Corresponds to `ClaimReview.reviewRating.worstRating`.
 * @member {Number} worstRating
 */
GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating.prototype['worstRating'] = undefined;






export default GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating;

