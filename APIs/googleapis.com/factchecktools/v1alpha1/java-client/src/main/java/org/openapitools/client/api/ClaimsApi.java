/*
 * Fact Check Tools API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ClaimsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ClaimsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ClaimsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for factchecktoolsClaimsSearch
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param languageCode The BCP-47 language code, such as \&quot;en-US\&quot; or \&quot;sr-Latn\&quot;. Can be used to restrict results by language, though we do not currently consider the region. (optional)
     * @param maxAgeDays The maximum age of the returned search results, in days. Age is determined by either claim date or review date, whichever is newer. (optional)
     * @param offset An integer that specifies the current offset (that is, starting result location) in search results. This field is only considered if &#x60;page_token&#x60; is unset. For example, 0 means to return results starting from the first matching result, and 10 means to return from the 11th result. (optional)
     * @param pageSize The pagination size. We will return up to that many results. Defaults to 10 if not set. (optional)
     * @param pageToken The pagination token. You may provide the &#x60;next_page_token&#x60; returned from a previous List request, if any, in order to get the next page. All other fields must have the same values as in the previous request. (optional)
     * @param query Textual query string. Required unless &#x60;review_publisher_site_filter&#x60; is specified. (optional)
     * @param reviewPublisherSiteFilter The review publisher site to filter results by, e.g. nytimes.com. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call factchecktoolsClaimsSearchCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String languageCode, Integer maxAgeDays, Integer offset, Integer pageSize, String pageToken, String query, String reviewPublisherSiteFilter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1alpha1/claims:search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (languageCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("languageCode", languageCode));
        }

        if (maxAgeDays != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxAgeDays", maxAgeDays));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        if (query != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("query", query));
        }

        if (reviewPublisherSiteFilter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("reviewPublisherSiteFilter", reviewPublisherSiteFilter));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call factchecktoolsClaimsSearchValidateBeforeCall(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String languageCode, Integer maxAgeDays, Integer offset, Integer pageSize, String pageToken, String query, String reviewPublisherSiteFilter, final ApiCallback _callback) throws ApiException {
        return factchecktoolsClaimsSearchCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, languageCode, maxAgeDays, offset, pageSize, pageToken, query, reviewPublisherSiteFilter, _callback);

    }

    /**
     * 
     * Search through fact-checked claims.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param languageCode The BCP-47 language code, such as \&quot;en-US\&quot; or \&quot;sr-Latn\&quot;. Can be used to restrict results by language, though we do not currently consider the region. (optional)
     * @param maxAgeDays The maximum age of the returned search results, in days. Age is determined by either claim date or review date, whichever is newer. (optional)
     * @param offset An integer that specifies the current offset (that is, starting result location) in search results. This field is only considered if &#x60;page_token&#x60; is unset. For example, 0 means to return results starting from the first matching result, and 10 means to return from the 11th result. (optional)
     * @param pageSize The pagination size. We will return up to that many results. Defaults to 10 if not set. (optional)
     * @param pageToken The pagination token. You may provide the &#x60;next_page_token&#x60; returned from a previous List request, if any, in order to get the next page. All other fields must have the same values as in the previous request. (optional)
     * @param query Textual query string. Required unless &#x60;review_publisher_site_filter&#x60; is specified. (optional)
     * @param reviewPublisherSiteFilter The review publisher site to filter results by, e.g. nytimes.com. (optional)
     * @return GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse factchecktoolsClaimsSearch(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String languageCode, Integer maxAgeDays, Integer offset, Integer pageSize, String pageToken, String query, String reviewPublisherSiteFilter) throws ApiException {
        ApiResponse<GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse> localVarResp = factchecktoolsClaimsSearchWithHttpInfo($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, languageCode, maxAgeDays, offset, pageSize, pageToken, query, reviewPublisherSiteFilter);
        return localVarResp.getData();
    }

    /**
     * 
     * Search through fact-checked claims.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param languageCode The BCP-47 language code, such as \&quot;en-US\&quot; or \&quot;sr-Latn\&quot;. Can be used to restrict results by language, though we do not currently consider the region. (optional)
     * @param maxAgeDays The maximum age of the returned search results, in days. Age is determined by either claim date or review date, whichever is newer. (optional)
     * @param offset An integer that specifies the current offset (that is, starting result location) in search results. This field is only considered if &#x60;page_token&#x60; is unset. For example, 0 means to return results starting from the first matching result, and 10 means to return from the 11th result. (optional)
     * @param pageSize The pagination size. We will return up to that many results. Defaults to 10 if not set. (optional)
     * @param pageToken The pagination token. You may provide the &#x60;next_page_token&#x60; returned from a previous List request, if any, in order to get the next page. All other fields must have the same values as in the previous request. (optional)
     * @param query Textual query string. Required unless &#x60;review_publisher_site_filter&#x60; is specified. (optional)
     * @param reviewPublisherSiteFilter The review publisher site to filter results by, e.g. nytimes.com. (optional)
     * @return ApiResponse&lt;GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse> factchecktoolsClaimsSearchWithHttpInfo(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String languageCode, Integer maxAgeDays, Integer offset, Integer pageSize, String pageToken, String query, String reviewPublisherSiteFilter) throws ApiException {
        okhttp3.Call localVarCall = factchecktoolsClaimsSearchValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, languageCode, maxAgeDays, offset, pageSize, pageToken, query, reviewPublisherSiteFilter, null);
        Type localVarReturnType = new TypeToken<GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Search through fact-checked claims.
     * @param $xgafv V1 error format. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param alt Data format for response. (optional)
     * @param paramCallback JSONP (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param languageCode The BCP-47 language code, such as \&quot;en-US\&quot; or \&quot;sr-Latn\&quot;. Can be used to restrict results by language, though we do not currently consider the region. (optional)
     * @param maxAgeDays The maximum age of the returned search results, in days. Age is determined by either claim date or review date, whichever is newer. (optional)
     * @param offset An integer that specifies the current offset (that is, starting result location) in search results. This field is only considered if &#x60;page_token&#x60; is unset. For example, 0 means to return results starting from the first matching result, and 10 means to return from the 11th result. (optional)
     * @param pageSize The pagination size. We will return up to that many results. Defaults to 10 if not set. (optional)
     * @param pageToken The pagination token. You may provide the &#x60;next_page_token&#x60; returned from a previous List request, if any, in order to get the next page. All other fields must have the same values as in the previous request. (optional)
     * @param query Textual query string. Required unless &#x60;review_publisher_site_filter&#x60; is specified. (optional)
     * @param reviewPublisherSiteFilter The review publisher site to filter results by, e.g. nytimes.com. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call factchecktoolsClaimsSearchAsync(String $xgafv, String accessToken, String alt, String paramCallback, String fields, String key, String oauthToken, Boolean prettyPrint, String quotaUser, String uploadProtocol, String uploadType, String languageCode, Integer maxAgeDays, Integer offset, Integer pageSize, String pageToken, String query, String reviewPublisherSiteFilter, final ApiCallback<GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = factchecktoolsClaimsSearchValidateBeforeCall($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, languageCode, maxAgeDays, offset, pageSize, pageToken, query, reviewPublisherSiteFilter, _callback);
        Type localVarReturnType = new TypeToken<GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
