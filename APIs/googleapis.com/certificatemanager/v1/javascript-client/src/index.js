/**
 * Certificate Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthorizationAttemptInfo from './model/AuthorizationAttemptInfo';
import Certificate from './model/Certificate';
import CertificateAuthorityConfig from './model/CertificateAuthorityConfig';
import CertificateAuthorityServiceConfig from './model/CertificateAuthorityServiceConfig';
import CertificateIssuanceConfig from './model/CertificateIssuanceConfig';
import CertificateMap from './model/CertificateMap';
import CertificateMapEntry from './model/CertificateMapEntry';
import DnsAuthorization from './model/DnsAuthorization';
import DnsResourceRecord from './model/DnsResourceRecord';
import GclbTarget from './model/GclbTarget';
import IntermediateCA from './model/IntermediateCA';
import IpConfig from './model/IpConfig';
import ListCertificateIssuanceConfigsResponse from './model/ListCertificateIssuanceConfigsResponse';
import ListCertificateMapEntriesResponse from './model/ListCertificateMapEntriesResponse';
import ListCertificateMapsResponse from './model/ListCertificateMapsResponse';
import ListCertificatesResponse from './model/ListCertificatesResponse';
import ListDnsAuthorizationsResponse from './model/ListDnsAuthorizationsResponse';
import ListLocationsResponse from './model/ListLocationsResponse';
import ListOperationsResponse from './model/ListOperationsResponse';
import ListTrustConfigsResponse from './model/ListTrustConfigsResponse';
import Location from './model/Location';
import ManagedCertificate from './model/ManagedCertificate';
import Operation from './model/Operation';
import OperationMetadata from './model/OperationMetadata';
import ProvisioningIssue from './model/ProvisioningIssue';
import SelfManagedCertificate from './model/SelfManagedCertificate';
import Status from './model/Status';
import TrustAnchor from './model/TrustAnchor';
import TrustConfig from './model/TrustConfig';
import TrustStore from './model/TrustStore';
import ProjectsApi from './api/ProjectsApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CertificateManagerApi = require('index'); // See note below*.
* var xxxSvc = new CertificateManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CertificateManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CertificateManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CertificateManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthorizationAttemptInfo model constructor.
     * @property {module:model/AuthorizationAttemptInfo}
     */
    AuthorizationAttemptInfo,

    /**
     * The Certificate model constructor.
     * @property {module:model/Certificate}
     */
    Certificate,

    /**
     * The CertificateAuthorityConfig model constructor.
     * @property {module:model/CertificateAuthorityConfig}
     */
    CertificateAuthorityConfig,

    /**
     * The CertificateAuthorityServiceConfig model constructor.
     * @property {module:model/CertificateAuthorityServiceConfig}
     */
    CertificateAuthorityServiceConfig,

    /**
     * The CertificateIssuanceConfig model constructor.
     * @property {module:model/CertificateIssuanceConfig}
     */
    CertificateIssuanceConfig,

    /**
     * The CertificateMap model constructor.
     * @property {module:model/CertificateMap}
     */
    CertificateMap,

    /**
     * The CertificateMapEntry model constructor.
     * @property {module:model/CertificateMapEntry}
     */
    CertificateMapEntry,

    /**
     * The DnsAuthorization model constructor.
     * @property {module:model/DnsAuthorization}
     */
    DnsAuthorization,

    /**
     * The DnsResourceRecord model constructor.
     * @property {module:model/DnsResourceRecord}
     */
    DnsResourceRecord,

    /**
     * The GclbTarget model constructor.
     * @property {module:model/GclbTarget}
     */
    GclbTarget,

    /**
     * The IntermediateCA model constructor.
     * @property {module:model/IntermediateCA}
     */
    IntermediateCA,

    /**
     * The IpConfig model constructor.
     * @property {module:model/IpConfig}
     */
    IpConfig,

    /**
     * The ListCertificateIssuanceConfigsResponse model constructor.
     * @property {module:model/ListCertificateIssuanceConfigsResponse}
     */
    ListCertificateIssuanceConfigsResponse,

    /**
     * The ListCertificateMapEntriesResponse model constructor.
     * @property {module:model/ListCertificateMapEntriesResponse}
     */
    ListCertificateMapEntriesResponse,

    /**
     * The ListCertificateMapsResponse model constructor.
     * @property {module:model/ListCertificateMapsResponse}
     */
    ListCertificateMapsResponse,

    /**
     * The ListCertificatesResponse model constructor.
     * @property {module:model/ListCertificatesResponse}
     */
    ListCertificatesResponse,

    /**
     * The ListDnsAuthorizationsResponse model constructor.
     * @property {module:model/ListDnsAuthorizationsResponse}
     */
    ListDnsAuthorizationsResponse,

    /**
     * The ListLocationsResponse model constructor.
     * @property {module:model/ListLocationsResponse}
     */
    ListLocationsResponse,

    /**
     * The ListOperationsResponse model constructor.
     * @property {module:model/ListOperationsResponse}
     */
    ListOperationsResponse,

    /**
     * The ListTrustConfigsResponse model constructor.
     * @property {module:model/ListTrustConfigsResponse}
     */
    ListTrustConfigsResponse,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The ManagedCertificate model constructor.
     * @property {module:model/ManagedCertificate}
     */
    ManagedCertificate,

    /**
     * The Operation model constructor.
     * @property {module:model/Operation}
     */
    Operation,

    /**
     * The OperationMetadata model constructor.
     * @property {module:model/OperationMetadata}
     */
    OperationMetadata,

    /**
     * The ProvisioningIssue model constructor.
     * @property {module:model/ProvisioningIssue}
     */
    ProvisioningIssue,

    /**
     * The SelfManagedCertificate model constructor.
     * @property {module:model/SelfManagedCertificate}
     */
    SelfManagedCertificate,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The TrustAnchor model constructor.
     * @property {module:model/TrustAnchor}
     */
    TrustAnchor,

    /**
     * The TrustConfig model constructor.
     * @property {module:model/TrustConfig}
     */
    TrustConfig,

    /**
     * The TrustStore model constructor.
     * @property {module:model/TrustStore}
     */
    TrustStore,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi
};
