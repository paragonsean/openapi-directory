/**
 * Certificate Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IpConfig from './IpConfig';

/**
 * The GclbTarget model module.
 * @module model/GclbTarget
 * @version v1
 */
class GclbTarget {
    /**
     * Constructs a new <code>GclbTarget</code>.
     * Describes a Target Proxy that uses this Certificate Map.
     * @alias module:model/GclbTarget
     */
    constructor() { 
        
        GclbTarget.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GclbTarget</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GclbTarget} obj Optional instance to populate.
     * @return {module:model/GclbTarget} The populated <code>GclbTarget</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GclbTarget();

            if (data.hasOwnProperty('ipConfigs')) {
                obj['ipConfigs'] = ApiClient.convertToType(data['ipConfigs'], [IpConfig]);
            }
            if (data.hasOwnProperty('targetHttpsProxy')) {
                obj['targetHttpsProxy'] = ApiClient.convertToType(data['targetHttpsProxy'], 'String');
            }
            if (data.hasOwnProperty('targetSslProxy')) {
                obj['targetSslProxy'] = ApiClient.convertToType(data['targetSslProxy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GclbTarget</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GclbTarget</code>.
     */
    static validateJSON(data) {
        if (data['ipConfigs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ipConfigs'])) {
                throw new Error("Expected the field `ipConfigs` to be an array in the JSON data but got " + data['ipConfigs']);
            }
            // validate the optional field `ipConfigs` (array)
            for (const item of data['ipConfigs']) {
                IpConfig.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['targetHttpsProxy'] && !(typeof data['targetHttpsProxy'] === 'string' || data['targetHttpsProxy'] instanceof String)) {
            throw new Error("Expected the field `targetHttpsProxy` to be a primitive type in the JSON string but got " + data['targetHttpsProxy']);
        }
        // ensure the json data is a string
        if (data['targetSslProxy'] && !(typeof data['targetSslProxy'] === 'string' || data['targetSslProxy'] instanceof String)) {
            throw new Error("Expected the field `targetSslProxy` to be a primitive type in the JSON string but got " + data['targetSslProxy']);
        }

        return true;
    }


}



/**
 * Output only. IP configurations for this Target Proxy where the Certificate Map is serving.
 * @member {Array.<module:model/IpConfig>} ipConfigs
 */
GclbTarget.prototype['ipConfigs'] = undefined;

/**
 * Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/_*_/global/targetHttpsProxies/_*`.
 * @member {String} targetHttpsProxy
 */
GclbTarget.prototype['targetHttpsProxy'] = undefined;

/**
 * Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/_*_/global/targetSslProxies/_*`.
 * @member {String} targetSslProxy
 */
GclbTarget.prototype['targetSslProxy'] = undefined;






export default GclbTarget;

