/**
 * Certificate Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrustStore.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrustStore::OAITrustStore(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrustStore::OAITrustStore() {
    this->initializeModel();
}

OAITrustStore::~OAITrustStore() {}

void OAITrustStore::initializeModel() {

    m_intermediate_cas_isSet = false;
    m_intermediate_cas_isValid = false;

    m_trust_anchors_isSet = false;
    m_trust_anchors_isValid = false;
}

void OAITrustStore::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrustStore::fromJsonObject(QJsonObject json) {

    m_intermediate_cas_isValid = ::OpenAPI::fromJsonValue(m_intermediate_cas, json[QString("intermediateCas")]);
    m_intermediate_cas_isSet = !json[QString("intermediateCas")].isNull() && m_intermediate_cas_isValid;

    m_trust_anchors_isValid = ::OpenAPI::fromJsonValue(m_trust_anchors, json[QString("trustAnchors")]);
    m_trust_anchors_isSet = !json[QString("trustAnchors")].isNull() && m_trust_anchors_isValid;
}

QString OAITrustStore::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrustStore::asJsonObject() const {
    QJsonObject obj;
    if (m_intermediate_cas.size() > 0) {
        obj.insert(QString("intermediateCas"), ::OpenAPI::toJsonValue(m_intermediate_cas));
    }
    if (m_trust_anchors.size() > 0) {
        obj.insert(QString("trustAnchors"), ::OpenAPI::toJsonValue(m_trust_anchors));
    }
    return obj;
}

QList<OAIIntermediateCA> OAITrustStore::getIntermediateCas() const {
    return m_intermediate_cas;
}
void OAITrustStore::setIntermediateCas(const QList<OAIIntermediateCA> &intermediate_cas) {
    m_intermediate_cas = intermediate_cas;
    m_intermediate_cas_isSet = true;
}

bool OAITrustStore::is_intermediate_cas_Set() const{
    return m_intermediate_cas_isSet;
}

bool OAITrustStore::is_intermediate_cas_Valid() const{
    return m_intermediate_cas_isValid;
}

QList<OAITrustAnchor> OAITrustStore::getTrustAnchors() const {
    return m_trust_anchors;
}
void OAITrustStore::setTrustAnchors(const QList<OAITrustAnchor> &trust_anchors) {
    m_trust_anchors = trust_anchors;
    m_trust_anchors_isSet = true;
}

bool OAITrustStore::is_trust_anchors_Set() const{
    return m_trust_anchors_isSet;
}

bool OAITrustStore::is_trust_anchors_Valid() const{
    return m_trust_anchors_isValid;
}

bool OAITrustStore::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_intermediate_cas.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_trust_anchors.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrustStore::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
