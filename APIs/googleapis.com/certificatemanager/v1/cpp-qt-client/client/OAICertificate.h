/**
 * Certificate Manager API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICertificate.h
 *
 * Defines TLS certificate.
 */

#ifndef OAICertificate_H
#define OAICertificate_H

#include <QJsonObject>

#include "OAIManagedCertificate.h"
#include "OAISelfManagedCertificate.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIManagedCertificate;
class OAISelfManagedCertificate;

class OAICertificate : public OAIObject {
public:
    OAICertificate();
    OAICertificate(QString json);
    ~OAICertificate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getExpireTime() const;
    void setExpireTime(const QString &expire_time);
    bool is_expire_time_Set() const;
    bool is_expire_time_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIManagedCertificate getManaged() const;
    void setManaged(const OAIManagedCertificate &managed);
    bool is_managed_Set() const;
    bool is_managed_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPemCertificate() const;
    void setPemCertificate(const QString &pem_certificate);
    bool is_pem_certificate_Set() const;
    bool is_pem_certificate_Valid() const;

    QList<QString> getSanDnsnames() const;
    void setSanDnsnames(const QList<QString> &san_dnsnames);
    bool is_san_dnsnames_Set() const;
    bool is_san_dnsnames_Valid() const;

    QString getScope() const;
    void setScope(const QString &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    OAISelfManagedCertificate getSelfManaged() const;
    void setSelfManaged(const OAISelfManagedCertificate &self_managed);
    bool is_self_managed_Set() const;
    bool is_self_managed_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_expire_time;
    bool m_expire_time_isSet;
    bool m_expire_time_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIManagedCertificate m_managed;
    bool m_managed_isSet;
    bool m_managed_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_pem_certificate;
    bool m_pem_certificate_isSet;
    bool m_pem_certificate_isValid;

    QList<QString> m_san_dnsnames;
    bool m_san_dnsnames_isSet;
    bool m_san_dnsnames_isValid;

    QString m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    OAISelfManagedCertificate m_self_managed;
    bool m_self_managed_isSet;
    bool m_self_managed_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICertificate)

#endif // OAICertificate_H
