# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CertificateAuthorityServiceConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ca_pool: str=None):
        """CertificateAuthorityServiceConfig - a model defined in OpenAPI

        :param ca_pool: The ca_pool of this CertificateAuthorityServiceConfig.
        """
        self.openapi_types = {
            'ca_pool': str
        }

        self.attribute_map = {
            'ca_pool': 'caPool'
        }

        self._ca_pool = ca_pool

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CertificateAuthorityServiceConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CertificateAuthorityServiceConfig of this CertificateAuthorityServiceConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ca_pool(self):
        """Gets the ca_pool of this CertificateAuthorityServiceConfig.

        Required. A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form \"projects/{project}/locations/{location}/caPools/{ca_pool}\".

        :return: The ca_pool of this CertificateAuthorityServiceConfig.
        :rtype: str
        """
        return self._ca_pool

    @ca_pool.setter
    def ca_pool(self, ca_pool):
        """Sets the ca_pool of this CertificateAuthorityServiceConfig.

        Required. A CA pool resource used to issue a certificate. The CA pool string has a relative resource path following the form \"projects/{project}/locations/{location}/caPools/{ca_pool}\".

        :param ca_pool: The ca_pool of this CertificateAuthorityServiceConfig.
        :type ca_pool: str
        """

        self._ca_pool = ca_pool
