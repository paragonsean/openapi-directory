# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.intermediate_ca import IntermediateCA
from openapi_server.models.trust_anchor import TrustAnchor
from openapi_server import util


class TrustStore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, intermediate_cas: List[IntermediateCA]=None, trust_anchors: List[TrustAnchor]=None):
        """TrustStore - a model defined in OpenAPI

        :param intermediate_cas: The intermediate_cas of this TrustStore.
        :param trust_anchors: The trust_anchors of this TrustStore.
        """
        self.openapi_types = {
            'intermediate_cas': List[IntermediateCA],
            'trust_anchors': List[TrustAnchor]
        }

        self.attribute_map = {
            'intermediate_cas': 'intermediateCas',
            'trust_anchors': 'trustAnchors'
        }

        self._intermediate_cas = intermediate_cas
        self._trust_anchors = trust_anchors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrustStore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TrustStore of this TrustStore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def intermediate_cas(self):
        """Gets the intermediate_cas of this TrustStore.

        Set of intermediate CA certificates used for the path building phase of chain validation. The field is currently not supported if TrustConfig is used for the workload certificate feature.

        :return: The intermediate_cas of this TrustStore.
        :rtype: List[IntermediateCA]
        """
        return self._intermediate_cas

    @intermediate_cas.setter
    def intermediate_cas(self, intermediate_cas):
        """Sets the intermediate_cas of this TrustStore.

        Set of intermediate CA certificates used for the path building phase of chain validation. The field is currently not supported if TrustConfig is used for the workload certificate feature.

        :param intermediate_cas: The intermediate_cas of this TrustStore.
        :type intermediate_cas: List[IntermediateCA]
        """

        self._intermediate_cas = intermediate_cas

    @property
    def trust_anchors(self):
        """Gets the trust_anchors of this TrustStore.

        List of Trust Anchors to be used while performing validation against a given TrustStore.

        :return: The trust_anchors of this TrustStore.
        :rtype: List[TrustAnchor]
        """
        return self._trust_anchors

    @trust_anchors.setter
    def trust_anchors(self, trust_anchors):
        """Sets the trust_anchors of this TrustStore.

        List of Trust Anchors to be used while performing validation against a given TrustStore.

        :param trust_anchors: The trust_anchors of this TrustStore.
        :type trust_anchors: List[TrustAnchor]
        """

        self._trust_anchors = trust_anchors
