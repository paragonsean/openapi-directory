# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ip_config import IpConfig
from openapi_server import util


class GclbTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ip_configs: List[IpConfig]=None, target_https_proxy: str=None, target_ssl_proxy: str=None):
        """GclbTarget - a model defined in OpenAPI

        :param ip_configs: The ip_configs of this GclbTarget.
        :param target_https_proxy: The target_https_proxy of this GclbTarget.
        :param target_ssl_proxy: The target_ssl_proxy of this GclbTarget.
        """
        self.openapi_types = {
            'ip_configs': List[IpConfig],
            'target_https_proxy': str,
            'target_ssl_proxy': str
        }

        self.attribute_map = {
            'ip_configs': 'ipConfigs',
            'target_https_proxy': 'targetHttpsProxy',
            'target_ssl_proxy': 'targetSslProxy'
        }

        self._ip_configs = ip_configs
        self._target_https_proxy = target_https_proxy
        self._target_ssl_proxy = target_ssl_proxy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GclbTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GclbTarget of this GclbTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ip_configs(self):
        """Gets the ip_configs of this GclbTarget.

        Output only. IP configurations for this Target Proxy where the Certificate Map is serving.

        :return: The ip_configs of this GclbTarget.
        :rtype: List[IpConfig]
        """
        return self._ip_configs

    @ip_configs.setter
    def ip_configs(self, ip_configs):
        """Sets the ip_configs of this GclbTarget.

        Output only. IP configurations for this Target Proxy where the Certificate Map is serving.

        :param ip_configs: The ip_configs of this GclbTarget.
        :type ip_configs: List[IpConfig]
        """

        self._ip_configs = ip_configs

    @property
    def target_https_proxy(self):
        """Gets the target_https_proxy of this GclbTarget.

        Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`.

        :return: The target_https_proxy of this GclbTarget.
        :rtype: str
        """
        return self._target_https_proxy

    @target_https_proxy.setter
    def target_https_proxy(self, target_https_proxy):
        """Sets the target_https_proxy of this GclbTarget.

        Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetHttpsProxies/*`.

        :param target_https_proxy: The target_https_proxy of this GclbTarget.
        :type target_https_proxy: str
        """

        self._target_https_proxy = target_https_proxy

    @property
    def target_ssl_proxy(self):
        """Gets the target_ssl_proxy of this GclbTarget.

        Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`.

        :return: The target_ssl_proxy of this GclbTarget.
        :rtype: str
        """
        return self._target_ssl_proxy

    @target_ssl_proxy.setter
    def target_ssl_proxy(self, target_ssl_proxy):
        """Sets the target_ssl_proxy of this GclbTarget.

        Output only. This field returns the resource name in the following format: `//compute.googleapis.com/projects/*/global/targetSslProxies/*`.

        :param target_ssl_proxy: The target_ssl_proxy of this GclbTarget.
        :type target_ssl_proxy: str
        """

        self._target_ssl_proxy = target_ssl_proxy
