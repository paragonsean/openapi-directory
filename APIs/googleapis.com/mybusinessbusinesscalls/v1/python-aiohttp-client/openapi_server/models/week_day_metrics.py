# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WeekDayMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day: str=None, missed_calls_count: int=None):
        """WeekDayMetrics - a model defined in OpenAPI

        :param day: The day of this WeekDayMetrics.
        :param missed_calls_count: The missed_calls_count of this WeekDayMetrics.
        """
        self.openapi_types = {
            'day': str,
            'missed_calls_count': int
        }

        self.attribute_map = {
            'day': 'day',
            'missed_calls_count': 'missedCallsCount'
        }

        self._day = day
        self._missed_calls_count = missed_calls_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WeekDayMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WeekDayMetrics of this WeekDayMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day(self):
        """Gets the day of this WeekDayMetrics.

        Day of the week. Allowed values are Sunday - Saturday.

        :return: The day of this WeekDayMetrics.
        :rtype: str
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this WeekDayMetrics.

        Day of the week. Allowed values are Sunday - Saturday.

        :param day: The day of this WeekDayMetrics.
        :type day: str
        """
        allowed_values = ["DAY_OF_WEEK_UNSPECIFIED", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"]  # noqa: E501
        if day not in allowed_values:
            raise ValueError(
                "Invalid value for `day` ({0}), must be one of {1}"
                .format(day, allowed_values)
            )

        self._day = day

    @property
    def missed_calls_count(self):
        """Gets the missed_calls_count of this WeekDayMetrics.

        Total count of missed calls for this hour.

        :return: The missed_calls_count of this WeekDayMetrics.
        :rtype: int
        """
        return self._missed_calls_count

    @missed_calls_count.setter
    def missed_calls_count(self, missed_calls_count):
        """Sets the missed_calls_count of this WeekDayMetrics.

        Total count of missed calls for this hour.

        :param missed_calls_count: The missed_calls_count of this WeekDayMetrics.
        :type missed_calls_count: int
        """

        self._missed_calls_count = missed_calls_count
