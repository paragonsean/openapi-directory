# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.business_calls_insights import BusinessCallsInsights
from openapi_server import util


class ListBusinessCallsInsightsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_calls_insights: List[BusinessCallsInsights]=None, next_page_token: str=None):
        """ListBusinessCallsInsightsResponse - a model defined in OpenAPI

        :param business_calls_insights: The business_calls_insights of this ListBusinessCallsInsightsResponse.
        :param next_page_token: The next_page_token of this ListBusinessCallsInsightsResponse.
        """
        self.openapi_types = {
            'business_calls_insights': List[BusinessCallsInsights],
            'next_page_token': str
        }

        self.attribute_map = {
            'business_calls_insights': 'businessCallsInsights',
            'next_page_token': 'nextPageToken'
        }

        self._business_calls_insights = business_calls_insights
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListBusinessCallsInsightsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListBusinessCallsInsightsResponse of this ListBusinessCallsInsightsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_calls_insights(self):
        """Gets the business_calls_insights of this ListBusinessCallsInsightsResponse.

        A collection of business calls insights for the location.

        :return: The business_calls_insights of this ListBusinessCallsInsightsResponse.
        :rtype: List[BusinessCallsInsights]
        """
        return self._business_calls_insights

    @business_calls_insights.setter
    def business_calls_insights(self, business_calls_insights):
        """Sets the business_calls_insights of this ListBusinessCallsInsightsResponse.

        A collection of business calls insights for the location.

        :param business_calls_insights: The business_calls_insights of this ListBusinessCallsInsightsResponse.
        :type business_calls_insights: List[BusinessCallsInsights]
        """

        self._business_calls_insights = business_calls_insights

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListBusinessCallsInsightsResponse.

        A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. Some of the metric_types (e.g, AGGREGATE_COUNT) returns a single page. For these metrics, the next_page_token will be empty.

        :return: The next_page_token of this ListBusinessCallsInsightsResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListBusinessCallsInsightsResponse.

        A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages. Some of the metric_types (e.g, AGGREGATE_COUNT) returns a single page. For these metrics, the next_page_token will be empty.

        :param next_page_token: The next_page_token of this ListBusinessCallsInsightsResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
