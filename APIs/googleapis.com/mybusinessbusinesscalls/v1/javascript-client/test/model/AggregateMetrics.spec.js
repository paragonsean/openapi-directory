/**
 * My Business Business Calls API
 * The My Business Business Calls API manages business calls information of a location on Google and collect insights like the number of missed calls to their location. Additional information about Business calls can be found at https://support.google.com/business/answer/9688285?p=call_history. If the Google Business Profile links to a Google Ads account and call history is turned on, calls that last longer than a specific time, and that can be attributed to an ad interaction, will show in the linked Google Ads account under the \"Calls from Ads\" conversion. If smart bidding and call conversions are used in the optimization strategy, there could be a change in ad spend. Learn more about smart bidding. To view and perform actions on a location's calls, you need to be a `OWNER`, `CO_OWNER` or `MANAGER` of the location. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MyBusinessBusinessCallsApi);
  }
}(this, function(expect, MyBusinessBusinessCallsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MyBusinessBusinessCallsApi.AggregateMetrics();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AggregateMetrics', function() {
    it('should create an instance of AggregateMetrics', function() {
      // uncomment below and update the code to test AggregateMetrics
      //var instance = new MyBusinessBusinessCallsApi.AggregateMetrics();
      //expect(instance).to.be.a(MyBusinessBusinessCallsApi.AggregateMetrics);
    });

    it('should have the property answeredCallsCount (base name: "answeredCallsCount")', function() {
      // uncomment below and update the code to test the property answeredCallsCount
      //var instance = new MyBusinessBusinessCallsApi.AggregateMetrics();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new MyBusinessBusinessCallsApi.AggregateMetrics();
      //expect(instance).to.be();
    });

    it('should have the property hourlyMetrics (base name: "hourlyMetrics")', function() {
      // uncomment below and update the code to test the property hourlyMetrics
      //var instance = new MyBusinessBusinessCallsApi.AggregateMetrics();
      //expect(instance).to.be();
    });

    it('should have the property missedCallsCount (base name: "missedCallsCount")', function() {
      // uncomment below and update the code to test the property missedCallsCount
      //var instance = new MyBusinessBusinessCallsApi.AggregateMetrics();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new MyBusinessBusinessCallsApi.AggregateMetrics();
      //expect(instance).to.be();
    });

    it('should have the property weekdayMetrics (base name: "weekdayMetrics")', function() {
      // uncomment below and update the code to test the property weekdayMetrics
      //var instance = new MyBusinessBusinessCallsApi.AggregateMetrics();
      //expect(instance).to.be();
    });

  });

}));
