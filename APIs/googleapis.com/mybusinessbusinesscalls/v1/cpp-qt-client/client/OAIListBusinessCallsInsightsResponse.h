/**
 * My Business Business Calls API
 * The My Business Business Calls API manages business calls information of a location on Google and collect insights like the number of missed calls to their location. Additional information about Business calls can be found at https://support.google.com/business/answer/9688285?p=call_history. If the Google Business Profile links to a Google Ads account and call history is turned on, calls that last longer than a specific time, and that can be attributed to an ad interaction, will show in the linked Google Ads account under the \"Calls from Ads\" conversion. If smart bidding and call conversions are used in the optimization strategy, there could be a change in ad spend. Learn more about smart bidding. To view and perform actions on a location's calls, you need to be a `OWNER`, `CO_OWNER` or `MANAGER` of the location. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListBusinessCallsInsightsResponse.h
 *
 * Response message for ListBusinessCallsInsights.
 */

#ifndef OAIListBusinessCallsInsightsResponse_H
#define OAIListBusinessCallsInsightsResponse_H

#include <QJsonObject>

#include "OAIBusinessCallsInsights.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBusinessCallsInsights;

class OAIListBusinessCallsInsightsResponse : public OAIObject {
public:
    OAIListBusinessCallsInsightsResponse();
    OAIListBusinessCallsInsightsResponse(QString json);
    ~OAIListBusinessCallsInsightsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBusinessCallsInsights> getBusinessCallsInsights() const;
    void setBusinessCallsInsights(const QList<OAIBusinessCallsInsights> &business_calls_insights);
    bool is_business_calls_insights_Set() const;
    bool is_business_calls_insights_Valid() const;

    QString getNextPageToken() const;
    void setNextPageToken(const QString &next_page_token);
    bool is_next_page_token_Set() const;
    bool is_next_page_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBusinessCallsInsights> m_business_calls_insights;
    bool m_business_calls_insights_isSet;
    bool m_business_calls_insights_isValid;

    QString m_next_page_token;
    bool m_next_page_token_isSet;
    bool m_next_page_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListBusinessCallsInsightsResponse)

#endif // OAIListBusinessCallsInsightsResponse_H
