/*
 * My Business Business Calls API
 * The My Business Business Calls API manages business calls information of a location on Google and collect insights like the number of missed calls to their location. Additional information about Business calls can be found at https://support.google.com/business/answer/9688285?p=call_history. If the Google Business Profile links to a Google Ads account and call history is turned on, calls that last longer than a specific time, and that can be attributed to an ad interaction, will show in the linked Google Ads account under the \"Calls from Ads\" conversion. If smart bidding and call conversions are used in the optimization strategy, there could be a change in ad spend. Learn more about smart bidding. To view and perform actions on a location's calls, you need to be a `OWNER`, `CO_OWNER` or `MANAGER` of the location. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BusinessCallsInsights;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Response message for ListBusinessCallsInsights.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:37.076723-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListBusinessCallsInsightsResponse {
  public static final String SERIALIZED_NAME_BUSINESS_CALLS_INSIGHTS = "businessCallsInsights";
  @SerializedName(SERIALIZED_NAME_BUSINESS_CALLS_INSIGHTS)
  private List<BusinessCallsInsights> businessCallsInsights = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEXT_PAGE_TOKEN = "nextPageToken";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE_TOKEN)
  private String nextPageToken;

  public ListBusinessCallsInsightsResponse() {
  }

  public ListBusinessCallsInsightsResponse businessCallsInsights(List<BusinessCallsInsights> businessCallsInsights) {
    this.businessCallsInsights = businessCallsInsights;
    return this;
  }

  public ListBusinessCallsInsightsResponse addBusinessCallsInsightsItem(BusinessCallsInsights businessCallsInsightsItem) {
    if (this.businessCallsInsights == null) {
      this.businessCallsInsights = new ArrayList<>();
    }
    this.businessCallsInsights.add(businessCallsInsightsItem);
    return this;
  }

  /**
   * A collection of business calls insights for the location.
   * @return businessCallsInsights
   */
  @javax.annotation.Nullable
  public List<BusinessCallsInsights> getBusinessCallsInsights() {
    return businessCallsInsights;
  }

  public void setBusinessCallsInsights(List<BusinessCallsInsights> businessCallsInsights) {
    this.businessCallsInsights = businessCallsInsights;
  }


  public ListBusinessCallsInsightsResponse nextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
    return this;
  }

  /**
   * A token, which can be sent as &#x60;page_token&#x60; to retrieve the next page. If this field is omitted, there are no subsequent pages. Some of the metric_types (e.g, AGGREGATE_COUNT) returns a single page. For these metrics, the next_page_token will be empty.
   * @return nextPageToken
   */
  @javax.annotation.Nullable
  public String getNextPageToken() {
    return nextPageToken;
  }

  public void setNextPageToken(String nextPageToken) {
    this.nextPageToken = nextPageToken;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListBusinessCallsInsightsResponse listBusinessCallsInsightsResponse = (ListBusinessCallsInsightsResponse) o;
    return Objects.equals(this.businessCallsInsights, listBusinessCallsInsightsResponse.businessCallsInsights) &&
        Objects.equals(this.nextPageToken, listBusinessCallsInsightsResponse.nextPageToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(businessCallsInsights, nextPageToken);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListBusinessCallsInsightsResponse {\n");
    sb.append("    businessCallsInsights: ").append(toIndentedString(businessCallsInsights)).append("\n");
    sb.append("    nextPageToken: ").append(toIndentedString(nextPageToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("businessCallsInsights");
    openapiFields.add("nextPageToken");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListBusinessCallsInsightsResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListBusinessCallsInsightsResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListBusinessCallsInsightsResponse is not found in the empty JSON string", ListBusinessCallsInsightsResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListBusinessCallsInsightsResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListBusinessCallsInsightsResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("businessCallsInsights") != null && !jsonObj.get("businessCallsInsights").isJsonNull()) {
        JsonArray jsonArraybusinessCallsInsights = jsonObj.getAsJsonArray("businessCallsInsights");
        if (jsonArraybusinessCallsInsights != null) {
          // ensure the json data is an array
          if (!jsonObj.get("businessCallsInsights").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `businessCallsInsights` to be an array in the JSON string but got `%s`", jsonObj.get("businessCallsInsights").toString()));
          }

          // validate the optional field `businessCallsInsights` (array)
          for (int i = 0; i < jsonArraybusinessCallsInsights.size(); i++) {
            BusinessCallsInsights.validateJsonElement(jsonArraybusinessCallsInsights.get(i));
          };
        }
      }
      if ((jsonObj.get("nextPageToken") != null && !jsonObj.get("nextPageToken").isJsonNull()) && !jsonObj.get("nextPageToken").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextPageToken` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextPageToken").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListBusinessCallsInsightsResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListBusinessCallsInsightsResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListBusinessCallsInsightsResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListBusinessCallsInsightsResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ListBusinessCallsInsightsResponse>() {
           @Override
           public void write(JsonWriter out, ListBusinessCallsInsightsResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListBusinessCallsInsightsResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListBusinessCallsInsightsResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListBusinessCallsInsightsResponse
   * @throws IOException if the JSON string is invalid with respect to ListBusinessCallsInsightsResponse
   */
  public static ListBusinessCallsInsightsResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListBusinessCallsInsightsResponse.class);
  }

  /**
   * Convert an instance of ListBusinessCallsInsightsResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

