/*
 * My Business Business Calls API
 * The My Business Business Calls API manages business calls information of a location on Google and collect insights like the number of missed calls to their location. Additional information about Business calls can be found at https://support.google.com/business/answer/9688285?p=call_history. If the Google Business Profile links to a Google Ads account and call history is turned on, calls that last longer than a specific time, and that can be attributed to an ad interaction, will show in the linked Google Ads account under the \"Calls from Ads\" conversion. If smart bidding and call conversions are used in the optimization strategy, there could be a change in ad spend. Learn more about smart bidding. To view and perform actions on a location's calls, you need to be a `OWNER`, `CO_OWNER` or `MANAGER` of the location. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.openapitools.client.model.HourlyMetrics;
import org.openapitools.client.model.WeekDayMetrics;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Metrics aggregated over the input time range.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:42:37.076723-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AggregateMetrics {
  public static final String SERIALIZED_NAME_ANSWERED_CALLS_COUNT = "answeredCallsCount";
  @SerializedName(SERIALIZED_NAME_ANSWERED_CALLS_COUNT)
  private Integer answeredCallsCount;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private Date endDate;

  public static final String SERIALIZED_NAME_HOURLY_METRICS = "hourlyMetrics";
  @SerializedName(SERIALIZED_NAME_HOURLY_METRICS)
  private List<HourlyMetrics> hourlyMetrics = new ArrayList<>();

  public static final String SERIALIZED_NAME_MISSED_CALLS_COUNT = "missedCallsCount";
  @SerializedName(SERIALIZED_NAME_MISSED_CALLS_COUNT)
  private Integer missedCallsCount;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private Date startDate;

  public static final String SERIALIZED_NAME_WEEKDAY_METRICS = "weekdayMetrics";
  @SerializedName(SERIALIZED_NAME_WEEKDAY_METRICS)
  private List<WeekDayMetrics> weekdayMetrics = new ArrayList<>();

  public AggregateMetrics() {
  }

  public AggregateMetrics answeredCallsCount(Integer answeredCallsCount) {
    this.answeredCallsCount = answeredCallsCount;
    return this;
  }

  /**
   * Total count of answered calls.
   * @return answeredCallsCount
   */
  @javax.annotation.Nullable
  public Integer getAnsweredCallsCount() {
    return answeredCallsCount;
  }

  public void setAnsweredCallsCount(Integer answeredCallsCount) {
    this.answeredCallsCount = answeredCallsCount;
  }


  public AggregateMetrics endDate(Date endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nullable
  public Date getEndDate() {
    return endDate;
  }

  public void setEndDate(Date endDate) {
    this.endDate = endDate;
  }


  public AggregateMetrics hourlyMetrics(List<HourlyMetrics> hourlyMetrics) {
    this.hourlyMetrics = hourlyMetrics;
    return this;
  }

  public AggregateMetrics addHourlyMetricsItem(HourlyMetrics hourlyMetricsItem) {
    if (this.hourlyMetrics == null) {
      this.hourlyMetrics = new ArrayList<>();
    }
    this.hourlyMetrics.add(hourlyMetricsItem);
    return this;
  }

  /**
   * A list of metrics by hour of day.
   * @return hourlyMetrics
   */
  @javax.annotation.Nullable
  public List<HourlyMetrics> getHourlyMetrics() {
    return hourlyMetrics;
  }

  public void setHourlyMetrics(List<HourlyMetrics> hourlyMetrics) {
    this.hourlyMetrics = hourlyMetrics;
  }


  public AggregateMetrics missedCallsCount(Integer missedCallsCount) {
    this.missedCallsCount = missedCallsCount;
    return this;
  }

  /**
   * Total count of missed calls.
   * @return missedCallsCount
   */
  @javax.annotation.Nullable
  public Integer getMissedCallsCount() {
    return missedCallsCount;
  }

  public void setMissedCallsCount(Integer missedCallsCount) {
    this.missedCallsCount = missedCallsCount;
  }


  public AggregateMetrics startDate(Date startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nullable
  public Date getStartDate() {
    return startDate;
  }

  public void setStartDate(Date startDate) {
    this.startDate = startDate;
  }


  public AggregateMetrics weekdayMetrics(List<WeekDayMetrics> weekdayMetrics) {
    this.weekdayMetrics = weekdayMetrics;
    return this;
  }

  public AggregateMetrics addWeekdayMetricsItem(WeekDayMetrics weekdayMetricsItem) {
    if (this.weekdayMetrics == null) {
      this.weekdayMetrics = new ArrayList<>();
    }
    this.weekdayMetrics.add(weekdayMetricsItem);
    return this;
  }

  /**
   * A list of metrics by day of week.
   * @return weekdayMetrics
   */
  @javax.annotation.Nullable
  public List<WeekDayMetrics> getWeekdayMetrics() {
    return weekdayMetrics;
  }

  public void setWeekdayMetrics(List<WeekDayMetrics> weekdayMetrics) {
    this.weekdayMetrics = weekdayMetrics;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregateMetrics aggregateMetrics = (AggregateMetrics) o;
    return Objects.equals(this.answeredCallsCount, aggregateMetrics.answeredCallsCount) &&
        Objects.equals(this.endDate, aggregateMetrics.endDate) &&
        Objects.equals(this.hourlyMetrics, aggregateMetrics.hourlyMetrics) &&
        Objects.equals(this.missedCallsCount, aggregateMetrics.missedCallsCount) &&
        Objects.equals(this.startDate, aggregateMetrics.startDate) &&
        Objects.equals(this.weekdayMetrics, aggregateMetrics.weekdayMetrics);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answeredCallsCount, endDate, hourlyMetrics, missedCallsCount, startDate, weekdayMetrics);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregateMetrics {\n");
    sb.append("    answeredCallsCount: ").append(toIndentedString(answeredCallsCount)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    hourlyMetrics: ").append(toIndentedString(hourlyMetrics)).append("\n");
    sb.append("    missedCallsCount: ").append(toIndentedString(missedCallsCount)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    weekdayMetrics: ").append(toIndentedString(weekdayMetrics)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("answeredCallsCount");
    openapiFields.add("endDate");
    openapiFields.add("hourlyMetrics");
    openapiFields.add("missedCallsCount");
    openapiFields.add("startDate");
    openapiFields.add("weekdayMetrics");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AggregateMetrics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AggregateMetrics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AggregateMetrics is not found in the empty JSON string", AggregateMetrics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AggregateMetrics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AggregateMetrics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `endDate`
      if (jsonObj.get("endDate") != null && !jsonObj.get("endDate").isJsonNull()) {
        Date.validateJsonElement(jsonObj.get("endDate"));
      }
      if (jsonObj.get("hourlyMetrics") != null && !jsonObj.get("hourlyMetrics").isJsonNull()) {
        JsonArray jsonArrayhourlyMetrics = jsonObj.getAsJsonArray("hourlyMetrics");
        if (jsonArrayhourlyMetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hourlyMetrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hourlyMetrics` to be an array in the JSON string but got `%s`", jsonObj.get("hourlyMetrics").toString()));
          }

          // validate the optional field `hourlyMetrics` (array)
          for (int i = 0; i < jsonArrayhourlyMetrics.size(); i++) {
            HourlyMetrics.validateJsonElement(jsonArrayhourlyMetrics.get(i));
          };
        }
      }
      // validate the optional field `startDate`
      if (jsonObj.get("startDate") != null && !jsonObj.get("startDate").isJsonNull()) {
        Date.validateJsonElement(jsonObj.get("startDate"));
      }
      if (jsonObj.get("weekdayMetrics") != null && !jsonObj.get("weekdayMetrics").isJsonNull()) {
        JsonArray jsonArrayweekdayMetrics = jsonObj.getAsJsonArray("weekdayMetrics");
        if (jsonArrayweekdayMetrics != null) {
          // ensure the json data is an array
          if (!jsonObj.get("weekdayMetrics").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `weekdayMetrics` to be an array in the JSON string but got `%s`", jsonObj.get("weekdayMetrics").toString()));
          }

          // validate the optional field `weekdayMetrics` (array)
          for (int i = 0; i < jsonArrayweekdayMetrics.size(); i++) {
            WeekDayMetrics.validateJsonElement(jsonArrayweekdayMetrics.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AggregateMetrics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AggregateMetrics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AggregateMetrics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AggregateMetrics.class));

       return (TypeAdapter<T>) new TypeAdapter<AggregateMetrics>() {
           @Override
           public void write(JsonWriter out, AggregateMetrics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AggregateMetrics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AggregateMetrics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AggregateMetrics
   * @throws IOException if the JSON string is invalid with respect to AggregateMetrics
   */
  public static AggregateMetrics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AggregateMetrics.class);
  }

  /**
   * Convert an instance of AggregateMetrics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

