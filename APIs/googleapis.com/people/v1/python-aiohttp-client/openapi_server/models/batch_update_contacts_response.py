# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.person_response import PersonResponse
from openapi_server import util


class BatchUpdateContactsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, update_result: Dict[str, PersonResponse]=None):
        """BatchUpdateContactsResponse - a model defined in OpenAPI

        :param update_result: The update_result of this BatchUpdateContactsResponse.
        """
        self.openapi_types = {
            'update_result': Dict[str, PersonResponse]
        }

        self.attribute_map = {
            'update_result': 'updateResult'
        }

        self._update_result = update_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchUpdateContactsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchUpdateContactsResponse of this BatchUpdateContactsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def update_result(self):
        """Gets the update_result of this BatchUpdateContactsResponse.

        A map of resource names to the contacts that were updated, unless the request `read_mask` is empty.

        :return: The update_result of this BatchUpdateContactsResponse.
        :rtype: Dict[str, PersonResponse]
        """
        return self._update_result

    @update_result.setter
    def update_result(self, update_result):
        """Sets the update_result of this BatchUpdateContactsResponse.

        A map of resource names to the contacts that were updated, unless the request `read_mask` is empty.

        :param update_result: The update_result of this BatchUpdateContactsResponse.
        :type update_result: Dict[str, PersonResponse]
        """

        self._update_result = update_result
