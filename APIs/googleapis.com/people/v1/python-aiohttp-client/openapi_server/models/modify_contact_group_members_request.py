# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ModifyContactGroupMembersRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_names_to_add: List[str]=None, resource_names_to_remove: List[str]=None):
        """ModifyContactGroupMembersRequest - a model defined in OpenAPI

        :param resource_names_to_add: The resource_names_to_add of this ModifyContactGroupMembersRequest.
        :param resource_names_to_remove: The resource_names_to_remove of this ModifyContactGroupMembersRequest.
        """
        self.openapi_types = {
            'resource_names_to_add': List[str],
            'resource_names_to_remove': List[str]
        }

        self.attribute_map = {
            'resource_names_to_add': 'resourceNamesToAdd',
            'resource_names_to_remove': 'resourceNamesToRemove'
        }

        self._resource_names_to_add = resource_names_to_add
        self._resource_names_to_remove = resource_names_to_remove

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModifyContactGroupMembersRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModifyContactGroupMembersRequest of this ModifyContactGroupMembersRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_names_to_add(self):
        """Gets the resource_names_to_add of this ModifyContactGroupMembersRequest.

        Optional. The resource names of the contact people to add in the form of `people/{person_id}`. The total number of resource names in `resource_names_to_add` and `resource_names_to_remove` must be less than or equal to 1000.

        :return: The resource_names_to_add of this ModifyContactGroupMembersRequest.
        :rtype: List[str]
        """
        return self._resource_names_to_add

    @resource_names_to_add.setter
    def resource_names_to_add(self, resource_names_to_add):
        """Sets the resource_names_to_add of this ModifyContactGroupMembersRequest.

        Optional. The resource names of the contact people to add in the form of `people/{person_id}`. The total number of resource names in `resource_names_to_add` and `resource_names_to_remove` must be less than or equal to 1000.

        :param resource_names_to_add: The resource_names_to_add of this ModifyContactGroupMembersRequest.
        :type resource_names_to_add: List[str]
        """

        self._resource_names_to_add = resource_names_to_add

    @property
    def resource_names_to_remove(self):
        """Gets the resource_names_to_remove of this ModifyContactGroupMembersRequest.

        Optional. The resource names of the contact people to remove in the form of `people/{person_id}`. The total number of resource names in `resource_names_to_add` and `resource_names_to_remove` must be less than or equal to 1000.

        :return: The resource_names_to_remove of this ModifyContactGroupMembersRequest.
        :rtype: List[str]
        """
        return self._resource_names_to_remove

    @resource_names_to_remove.setter
    def resource_names_to_remove(self, resource_names_to_remove):
        """Sets the resource_names_to_remove of this ModifyContactGroupMembersRequest.

        Optional. The resource names of the contact people to remove in the form of `people/{person_id}`. The total number of resource names in `resource_names_to_add` and `resource_names_to_remove` must be less than or equal to 1000.

        :param resource_names_to_remove: The resource_names_to_remove of this ModifyContactGroupMembersRequest.
        :type resource_names_to_remove: List[str]
        """

        self._resource_names_to_remove = resource_names_to_remove
