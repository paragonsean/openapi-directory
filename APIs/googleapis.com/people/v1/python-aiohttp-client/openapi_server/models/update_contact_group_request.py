# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_group import ContactGroup
from openapi_server import util


class UpdateContactGroupRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_group: ContactGroup=None, read_group_fields: str=None, update_group_fields: str=None):
        """UpdateContactGroupRequest - a model defined in OpenAPI

        :param contact_group: The contact_group of this UpdateContactGroupRequest.
        :param read_group_fields: The read_group_fields of this UpdateContactGroupRequest.
        :param update_group_fields: The update_group_fields of this UpdateContactGroupRequest.
        """
        self.openapi_types = {
            'contact_group': ContactGroup,
            'read_group_fields': str,
            'update_group_fields': str
        }

        self.attribute_map = {
            'contact_group': 'contactGroup',
            'read_group_fields': 'readGroupFields',
            'update_group_fields': 'updateGroupFields'
        }

        self._contact_group = contact_group
        self._read_group_fields = read_group_fields
        self._update_group_fields = update_group_fields

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateContactGroupRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateContactGroupRequest of this UpdateContactGroupRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_group(self):
        """Gets the contact_group of this UpdateContactGroupRequest.


        :return: The contact_group of this UpdateContactGroupRequest.
        :rtype: ContactGroup
        """
        return self._contact_group

    @contact_group.setter
    def contact_group(self, contact_group):
        """Sets the contact_group of this UpdateContactGroupRequest.


        :param contact_group: The contact_group of this UpdateContactGroupRequest.
        :type contact_group: ContactGroup
        """

        self._contact_group = contact_group

    @property
    def read_group_fields(self):
        """Gets the read_group_fields of this UpdateContactGroupRequest.

        Optional. A field mask to restrict which fields on the group are returned. Defaults to `metadata`, `groupType`, and `name` if not set or set to empty. Valid fields are: * clientData * groupType * memberCount * metadata * name

        :return: The read_group_fields of this UpdateContactGroupRequest.
        :rtype: str
        """
        return self._read_group_fields

    @read_group_fields.setter
    def read_group_fields(self, read_group_fields):
        """Sets the read_group_fields of this UpdateContactGroupRequest.

        Optional. A field mask to restrict which fields on the group are returned. Defaults to `metadata`, `groupType`, and `name` if not set or set to empty. Valid fields are: * clientData * groupType * memberCount * metadata * name

        :param read_group_fields: The read_group_fields of this UpdateContactGroupRequest.
        :type read_group_fields: str
        """

        self._read_group_fields = read_group_fields

    @property
    def update_group_fields(self):
        """Gets the update_group_fields of this UpdateContactGroupRequest.

        Optional. A field mask to restrict which fields on the group are updated. Multiple fields can be specified by separating them with commas. Defaults to `name` if not set or set to empty. Updated fields are replaced. Valid values are: * clientData * name

        :return: The update_group_fields of this UpdateContactGroupRequest.
        :rtype: str
        """
        return self._update_group_fields

    @update_group_fields.setter
    def update_group_fields(self, update_group_fields):
        """Sets the update_group_fields of this UpdateContactGroupRequest.

        Optional. A field mask to restrict which fields on the group are updated. Multiple fields can be specified by separating them with commas. Defaults to `name` if not set or set to empty. Updated fields are replaced. Valid values are: * clientData * name

        :param update_group_fields: The update_group_fields of this UpdateContactGroupRequest.
        :type update_group_fields: str
        """

        self._update_group_fields = update_group_fields
