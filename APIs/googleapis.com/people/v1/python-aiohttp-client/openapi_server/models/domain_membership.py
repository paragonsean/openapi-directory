# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DomainMembership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, in_viewer_domain: bool=None):
        """DomainMembership - a model defined in OpenAPI

        :param in_viewer_domain: The in_viewer_domain of this DomainMembership.
        """
        self.openapi_types = {
            'in_viewer_domain': bool
        }

        self.attribute_map = {
            'in_viewer_domain': 'inViewerDomain'
        }

        self._in_viewer_domain = in_viewer_domain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DomainMembership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DomainMembership of this DomainMembership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def in_viewer_domain(self):
        """Gets the in_viewer_domain of this DomainMembership.

        True if the person is in the viewer's Google Workspace domain.

        :return: The in_viewer_domain of this DomainMembership.
        :rtype: bool
        """
        return self._in_viewer_domain

    @in_viewer_domain.setter
    def in_viewer_domain(self, in_viewer_domain):
        """Sets the in_viewer_domain of this DomainMembership.

        True if the person is in the viewer's Google Workspace domain.

        :param in_viewer_domain: The in_viewer_domain of this DomainMembership.
        :type in_viewer_domain: bool
        """

        self._in_viewer_domain = in_viewer_domain
