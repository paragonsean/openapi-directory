# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_metadata import FieldMetadata
from openapi_server.models.model_date import ModelDate
from openapi_server import util


class Birthday(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: ModelDate=None, metadata: FieldMetadata=None, text: str=None):
        """Birthday - a model defined in OpenAPI

        :param _date: The _date of this Birthday.
        :param metadata: The metadata of this Birthday.
        :param text: The text of this Birthday.
        """
        self.openapi_types = {
            '_date': ModelDate,
            'metadata': FieldMetadata,
            'text': str
        }

        self.attribute_map = {
            '_date': 'date',
            'metadata': 'metadata',
            'text': 'text'
        }

        self.__date = _date
        self._metadata = metadata
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Birthday':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Birthday of this Birthday.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this Birthday.


        :return: The _date of this Birthday.
        :rtype: ModelDate
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Birthday.


        :param _date: The _date of this Birthday.
        :type _date: ModelDate
        """

        self.__date = _date

    @property
    def metadata(self):
        """Gets the metadata of this Birthday.


        :return: The metadata of this Birthday.
        :rtype: FieldMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Birthday.


        :param metadata: The metadata of this Birthday.
        :type metadata: FieldMetadata
        """

        self._metadata = metadata

    @property
    def text(self):
        """Gets the text of this Birthday.

        Prefer to use the `date` field if set. A free-form string representing the user's birthday. This value is not validated.

        :return: The text of this Birthday.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Birthday.

        Prefer to use the `date` field if set. A free-form string representing the user's birthday. This value is not validated.

        :param text: The text of this Birthday.
        :type text: str
        """

        self._text = text
