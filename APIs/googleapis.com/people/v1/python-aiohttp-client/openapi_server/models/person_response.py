# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.person import Person
from openapi_server.models.status import Status
from openapi_server import util


class PersonResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, http_status_code: int=None, person: Person=None, requested_resource_name: str=None, status: Status=None):
        """PersonResponse - a model defined in OpenAPI

        :param http_status_code: The http_status_code of this PersonResponse.
        :param person: The person of this PersonResponse.
        :param requested_resource_name: The requested_resource_name of this PersonResponse.
        :param status: The status of this PersonResponse.
        """
        self.openapi_types = {
            'http_status_code': int,
            'person': Person,
            'requested_resource_name': str,
            'status': Status
        }

        self.attribute_map = {
            'http_status_code': 'httpStatusCode',
            'person': 'person',
            'requested_resource_name': 'requestedResourceName',
            'status': 'status'
        }

        self._http_status_code = http_status_code
        self._person = person
        self._requested_resource_name = requested_resource_name
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PersonResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PersonResponse of this PersonResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def http_status_code(self):
        """Gets the http_status_code of this PersonResponse.

        **DEPRECATED** (Please use status instead) [HTTP 1.1 status code] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).

        :return: The http_status_code of this PersonResponse.
        :rtype: int
        """
        return self._http_status_code

    @http_status_code.setter
    def http_status_code(self, http_status_code):
        """Sets the http_status_code of this PersonResponse.

        **DEPRECATED** (Please use status instead) [HTTP 1.1 status code] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).

        :param http_status_code: The http_status_code of this PersonResponse.
        :type http_status_code: int
        """

        self._http_status_code = http_status_code

    @property
    def person(self):
        """Gets the person of this PersonResponse.


        :return: The person of this PersonResponse.
        :rtype: Person
        """
        return self._person

    @person.setter
    def person(self, person):
        """Sets the person of this PersonResponse.


        :param person: The person of this PersonResponse.
        :type person: Person
        """

        self._person = person

    @property
    def requested_resource_name(self):
        """Gets the requested_resource_name of this PersonResponse.

        The original requested resource name. May be different than the resource name on the returned person. The resource name can change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or a profile URL.

        :return: The requested_resource_name of this PersonResponse.
        :rtype: str
        """
        return self._requested_resource_name

    @requested_resource_name.setter
    def requested_resource_name(self, requested_resource_name):
        """Sets the requested_resource_name of this PersonResponse.

        The original requested resource name. May be different than the resource name on the returned person. The resource name can change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or a profile URL.

        :param requested_resource_name: The requested_resource_name of this PersonResponse.
        :type requested_resource_name: str
        """

        self._requested_resource_name = requested_resource_name

    @property
    def status(self):
        """Gets the status of this PersonResponse.


        :return: The status of this PersonResponse.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PersonResponse.


        :param status: The status of this PersonResponse.
        :type status: Status
        """

        self._status = status
