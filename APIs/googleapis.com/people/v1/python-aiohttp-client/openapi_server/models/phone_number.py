# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_metadata import FieldMetadata
from openapi_server import util


class PhoneNumber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, canonical_form: str=None, formatted_type: str=None, metadata: FieldMetadata=None, type: str=None, value: str=None):
        """PhoneNumber - a model defined in OpenAPI

        :param canonical_form: The canonical_form of this PhoneNumber.
        :param formatted_type: The formatted_type of this PhoneNumber.
        :param metadata: The metadata of this PhoneNumber.
        :param type: The type of this PhoneNumber.
        :param value: The value of this PhoneNumber.
        """
        self.openapi_types = {
            'canonical_form': str,
            'formatted_type': str,
            'metadata': FieldMetadata,
            'type': str,
            'value': str
        }

        self.attribute_map = {
            'canonical_form': 'canonicalForm',
            'formatted_type': 'formattedType',
            'metadata': 'metadata',
            'type': 'type',
            'value': 'value'
        }

        self._canonical_form = canonical_form
        self._formatted_type = formatted_type
        self._metadata = metadata
        self._type = type
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhoneNumber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PhoneNumber of this PhoneNumber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def canonical_form(self):
        """Gets the canonical_form of this PhoneNumber.

        Output only. The canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf) form of the phone number.

        :return: The canonical_form of this PhoneNumber.
        :rtype: str
        """
        return self._canonical_form

    @canonical_form.setter
    def canonical_form(self, canonical_form):
        """Sets the canonical_form of this PhoneNumber.

        Output only. The canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf) form of the phone number.

        :param canonical_form: The canonical_form of this PhoneNumber.
        :type canonical_form: str
        """

        self._canonical_form = canonical_form

    @property
    def formatted_type(self):
        """Gets the formatted_type of this PhoneNumber.

        Output only. The type of the phone number translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.

        :return: The formatted_type of this PhoneNumber.
        :rtype: str
        """
        return self._formatted_type

    @formatted_type.setter
    def formatted_type(self, formatted_type):
        """Sets the formatted_type of this PhoneNumber.

        Output only. The type of the phone number translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.

        :param formatted_type: The formatted_type of this PhoneNumber.
        :type formatted_type: str
        """

        self._formatted_type = formatted_type

    @property
    def metadata(self):
        """Gets the metadata of this PhoneNumber.


        :return: The metadata of this PhoneNumber.
        :rtype: FieldMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this PhoneNumber.


        :param metadata: The metadata of this PhoneNumber.
        :type metadata: FieldMetadata
        """

        self._metadata = metadata

    @property
    def type(self):
        """Gets the type of this PhoneNumber.

        The type of the phone number. The type can be custom or one of these predefined values: * `home` * `work` * `mobile` * `homeFax` * `workFax` * `otherFax` * `pager` * `workMobile` * `workPager` * `main` * `googleVoice` * `other`

        :return: The type of this PhoneNumber.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PhoneNumber.

        The type of the phone number. The type can be custom or one of these predefined values: * `home` * `work` * `mobile` * `homeFax` * `workFax` * `otherFax` * `pager` * `workMobile` * `workPager` * `main` * `googleVoice` * `other`

        :param type: The type of this PhoneNumber.
        :type type: str
        """

        self._type = type

    @property
    def value(self):
        """Gets the value of this PhoneNumber.

        The phone number.

        :return: The value of this PhoneNumber.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this PhoneNumber.

        The phone number.

        :param value: The value of this PhoneNumber.
        :type value: str
        """

        self._value = value
