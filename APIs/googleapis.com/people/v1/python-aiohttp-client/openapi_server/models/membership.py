# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_group_membership import ContactGroupMembership
from openapi_server.models.domain_membership import DomainMembership
from openapi_server.models.field_metadata import FieldMetadata
from openapi_server import util


class Membership(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contact_group_membership: ContactGroupMembership=None, domain_membership: DomainMembership=None, metadata: FieldMetadata=None):
        """Membership - a model defined in OpenAPI

        :param contact_group_membership: The contact_group_membership of this Membership.
        :param domain_membership: The domain_membership of this Membership.
        :param metadata: The metadata of this Membership.
        """
        self.openapi_types = {
            'contact_group_membership': ContactGroupMembership,
            'domain_membership': DomainMembership,
            'metadata': FieldMetadata
        }

        self.attribute_map = {
            'contact_group_membership': 'contactGroupMembership',
            'domain_membership': 'domainMembership',
            'metadata': 'metadata'
        }

        self._contact_group_membership = contact_group_membership
        self._domain_membership = domain_membership
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Membership':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Membership of this Membership.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contact_group_membership(self):
        """Gets the contact_group_membership of this Membership.


        :return: The contact_group_membership of this Membership.
        :rtype: ContactGroupMembership
        """
        return self._contact_group_membership

    @contact_group_membership.setter
    def contact_group_membership(self, contact_group_membership):
        """Sets the contact_group_membership of this Membership.


        :param contact_group_membership: The contact_group_membership of this Membership.
        :type contact_group_membership: ContactGroupMembership
        """

        self._contact_group_membership = contact_group_membership

    @property
    def domain_membership(self):
        """Gets the domain_membership of this Membership.


        :return: The domain_membership of this Membership.
        :rtype: DomainMembership
        """
        return self._domain_membership

    @domain_membership.setter
    def domain_membership(self, domain_membership):
        """Sets the domain_membership of this Membership.


        :param domain_membership: The domain_membership of this Membership.
        :type domain_membership: DomainMembership
        """

        self._domain_membership = domain_membership

    @property
    def metadata(self):
        """Gets the metadata of this Membership.


        :return: The metadata of this Membership.
        :rtype: FieldMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this Membership.


        :param metadata: The metadata of this Membership.
        :type metadata: FieldMetadata
        """

        self._metadata = metadata
