/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICopyOtherContactToMyContactsGroupRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICopyOtherContactToMyContactsGroupRequest::OAICopyOtherContactToMyContactsGroupRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICopyOtherContactToMyContactsGroupRequest::OAICopyOtherContactToMyContactsGroupRequest() {
    this->initializeModel();
}

OAICopyOtherContactToMyContactsGroupRequest::~OAICopyOtherContactToMyContactsGroupRequest() {}

void OAICopyOtherContactToMyContactsGroupRequest::initializeModel() {

    m_copy_mask_isSet = false;
    m_copy_mask_isValid = false;

    m_read_mask_isSet = false;
    m_read_mask_isValid = false;

    m_sources_isSet = false;
    m_sources_isValid = false;
}

void OAICopyOtherContactToMyContactsGroupRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICopyOtherContactToMyContactsGroupRequest::fromJsonObject(QJsonObject json) {

    m_copy_mask_isValid = ::OpenAPI::fromJsonValue(m_copy_mask, json[QString("copyMask")]);
    m_copy_mask_isSet = !json[QString("copyMask")].isNull() && m_copy_mask_isValid;

    m_read_mask_isValid = ::OpenAPI::fromJsonValue(m_read_mask, json[QString("readMask")]);
    m_read_mask_isSet = !json[QString("readMask")].isNull() && m_read_mask_isValid;

    m_sources_isValid = ::OpenAPI::fromJsonValue(m_sources, json[QString("sources")]);
    m_sources_isSet = !json[QString("sources")].isNull() && m_sources_isValid;
}

QString OAICopyOtherContactToMyContactsGroupRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICopyOtherContactToMyContactsGroupRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_copy_mask_isSet) {
        obj.insert(QString("copyMask"), ::OpenAPI::toJsonValue(m_copy_mask));
    }
    if (m_read_mask_isSet) {
        obj.insert(QString("readMask"), ::OpenAPI::toJsonValue(m_read_mask));
    }
    if (m_sources.size() > 0) {
        obj.insert(QString("sources"), ::OpenAPI::toJsonValue(m_sources));
    }
    return obj;
}

QString OAICopyOtherContactToMyContactsGroupRequest::getCopyMask() const {
    return m_copy_mask;
}
void OAICopyOtherContactToMyContactsGroupRequest::setCopyMask(const QString &copy_mask) {
    m_copy_mask = copy_mask;
    m_copy_mask_isSet = true;
}

bool OAICopyOtherContactToMyContactsGroupRequest::is_copy_mask_Set() const{
    return m_copy_mask_isSet;
}

bool OAICopyOtherContactToMyContactsGroupRequest::is_copy_mask_Valid() const{
    return m_copy_mask_isValid;
}

QString OAICopyOtherContactToMyContactsGroupRequest::getReadMask() const {
    return m_read_mask;
}
void OAICopyOtherContactToMyContactsGroupRequest::setReadMask(const QString &read_mask) {
    m_read_mask = read_mask;
    m_read_mask_isSet = true;
}

bool OAICopyOtherContactToMyContactsGroupRequest::is_read_mask_Set() const{
    return m_read_mask_isSet;
}

bool OAICopyOtherContactToMyContactsGroupRequest::is_read_mask_Valid() const{
    return m_read_mask_isValid;
}

QList<QString> OAICopyOtherContactToMyContactsGroupRequest::getSources() const {
    return m_sources;
}
void OAICopyOtherContactToMyContactsGroupRequest::setSources(const QList<QString> &sources) {
    m_sources = sources;
    m_sources_isSet = true;
}

bool OAICopyOtherContactToMyContactsGroupRequest::is_sources_Set() const{
    return m_sources_isSet;
}

bool OAICopyOtherContactToMyContactsGroupRequest::is_sources_Valid() const{
    return m_sources_isValid;
}

bool OAICopyOtherContactToMyContactsGroupRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_copy_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_read_mask_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sources.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICopyOtherContactToMyContactsGroupRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
