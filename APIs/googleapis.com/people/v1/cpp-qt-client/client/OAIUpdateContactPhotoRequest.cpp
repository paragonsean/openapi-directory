/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateContactPhotoRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateContactPhotoRequest::OAIUpdateContactPhotoRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateContactPhotoRequest::OAIUpdateContactPhotoRequest() {
    this->initializeModel();
}

OAIUpdateContactPhotoRequest::~OAIUpdateContactPhotoRequest() {}

void OAIUpdateContactPhotoRequest::initializeModel() {

    m_person_fields_isSet = false;
    m_person_fields_isValid = false;

    m_photo_bytes_isSet = false;
    m_photo_bytes_isValid = false;

    m_sources_isSet = false;
    m_sources_isValid = false;
}

void OAIUpdateContactPhotoRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateContactPhotoRequest::fromJsonObject(QJsonObject json) {

    m_person_fields_isValid = ::OpenAPI::fromJsonValue(m_person_fields, json[QString("personFields")]);
    m_person_fields_isSet = !json[QString("personFields")].isNull() && m_person_fields_isValid;

    m_photo_bytes_isValid = ::OpenAPI::fromJsonValue(m_photo_bytes, json[QString("photoBytes")]);
    m_photo_bytes_isSet = !json[QString("photoBytes")].isNull() && m_photo_bytes_isValid;

    m_sources_isValid = ::OpenAPI::fromJsonValue(m_sources, json[QString("sources")]);
    m_sources_isSet = !json[QString("sources")].isNull() && m_sources_isValid;
}

QString OAIUpdateContactPhotoRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateContactPhotoRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_person_fields_isSet) {
        obj.insert(QString("personFields"), ::OpenAPI::toJsonValue(m_person_fields));
    }
    if (m_photo_bytes_isSet) {
        obj.insert(QString("photoBytes"), ::OpenAPI::toJsonValue(m_photo_bytes));
    }
    if (m_sources.size() > 0) {
        obj.insert(QString("sources"), ::OpenAPI::toJsonValue(m_sources));
    }
    return obj;
}

QString OAIUpdateContactPhotoRequest::getPersonFields() const {
    return m_person_fields;
}
void OAIUpdateContactPhotoRequest::setPersonFields(const QString &person_fields) {
    m_person_fields = person_fields;
    m_person_fields_isSet = true;
}

bool OAIUpdateContactPhotoRequest::is_person_fields_Set() const{
    return m_person_fields_isSet;
}

bool OAIUpdateContactPhotoRequest::is_person_fields_Valid() const{
    return m_person_fields_isValid;
}

QByteArray OAIUpdateContactPhotoRequest::getPhotoBytes() const {
    return m_photo_bytes;
}
void OAIUpdateContactPhotoRequest::setPhotoBytes(const QByteArray &photo_bytes) {
    m_photo_bytes = photo_bytes;
    m_photo_bytes_isSet = true;
}

bool OAIUpdateContactPhotoRequest::is_photo_bytes_Set() const{
    return m_photo_bytes_isSet;
}

bool OAIUpdateContactPhotoRequest::is_photo_bytes_Valid() const{
    return m_photo_bytes_isValid;
}

QList<QString> OAIUpdateContactPhotoRequest::getSources() const {
    return m_sources;
}
void OAIUpdateContactPhotoRequest::setSources(const QList<QString> &sources) {
    m_sources = sources;
    m_sources_isSet = true;
}

bool OAIUpdateContactPhotoRequest::is_sources_Set() const{
    return m_sources_isSet;
}

bool OAIUpdateContactPhotoRequest::is_sources_Valid() const{
    return m_sources_isValid;
}

bool OAIUpdateContactPhotoRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_person_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_photo_bytes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sources.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateContactPhotoRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
