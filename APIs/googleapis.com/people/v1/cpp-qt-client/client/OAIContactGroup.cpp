/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactGroup::OAIContactGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactGroup::OAIContactGroup() {
    this->initializeModel();
}

OAIContactGroup::~OAIContactGroup() {}

void OAIContactGroup::initializeModel() {

    m_client_data_isSet = false;
    m_client_data_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_formatted_name_isSet = false;
    m_formatted_name_isValid = false;

    m_group_type_isSet = false;
    m_group_type_isValid = false;

    m_member_count_isSet = false;
    m_member_count_isValid = false;

    m_member_resource_names_isSet = false;
    m_member_resource_names_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_resource_name_isSet = false;
    m_resource_name_isValid = false;
}

void OAIContactGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactGroup::fromJsonObject(QJsonObject json) {

    m_client_data_isValid = ::OpenAPI::fromJsonValue(m_client_data, json[QString("clientData")]);
    m_client_data_isSet = !json[QString("clientData")].isNull() && m_client_data_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_formatted_name_isValid = ::OpenAPI::fromJsonValue(m_formatted_name, json[QString("formattedName")]);
    m_formatted_name_isSet = !json[QString("formattedName")].isNull() && m_formatted_name_isValid;

    m_group_type_isValid = ::OpenAPI::fromJsonValue(m_group_type, json[QString("groupType")]);
    m_group_type_isSet = !json[QString("groupType")].isNull() && m_group_type_isValid;

    m_member_count_isValid = ::OpenAPI::fromJsonValue(m_member_count, json[QString("memberCount")]);
    m_member_count_isSet = !json[QString("memberCount")].isNull() && m_member_count_isValid;

    m_member_resource_names_isValid = ::OpenAPI::fromJsonValue(m_member_resource_names, json[QString("memberResourceNames")]);
    m_member_resource_names_isSet = !json[QString("memberResourceNames")].isNull() && m_member_resource_names_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_resource_name_isValid = ::OpenAPI::fromJsonValue(m_resource_name, json[QString("resourceName")]);
    m_resource_name_isSet = !json[QString("resourceName")].isNull() && m_resource_name_isValid;
}

QString OAIContactGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_client_data.size() > 0) {
        obj.insert(QString("clientData"), ::OpenAPI::toJsonValue(m_client_data));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_formatted_name_isSet) {
        obj.insert(QString("formattedName"), ::OpenAPI::toJsonValue(m_formatted_name));
    }
    if (m_group_type_isSet) {
        obj.insert(QString("groupType"), ::OpenAPI::toJsonValue(m_group_type));
    }
    if (m_member_count_isSet) {
        obj.insert(QString("memberCount"), ::OpenAPI::toJsonValue(m_member_count));
    }
    if (m_member_resource_names.size() > 0) {
        obj.insert(QString("memberResourceNames"), ::OpenAPI::toJsonValue(m_member_resource_names));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_resource_name_isSet) {
        obj.insert(QString("resourceName"), ::OpenAPI::toJsonValue(m_resource_name));
    }
    return obj;
}

QList<OAIGroupClientData> OAIContactGroup::getClientData() const {
    return m_client_data;
}
void OAIContactGroup::setClientData(const QList<OAIGroupClientData> &client_data) {
    m_client_data = client_data;
    m_client_data_isSet = true;
}

bool OAIContactGroup::is_client_data_Set() const{
    return m_client_data_isSet;
}

bool OAIContactGroup::is_client_data_Valid() const{
    return m_client_data_isValid;
}

QString OAIContactGroup::getEtag() const {
    return m_etag;
}
void OAIContactGroup::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIContactGroup::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIContactGroup::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIContactGroup::getFormattedName() const {
    return m_formatted_name;
}
void OAIContactGroup::setFormattedName(const QString &formatted_name) {
    m_formatted_name = formatted_name;
    m_formatted_name_isSet = true;
}

bool OAIContactGroup::is_formatted_name_Set() const{
    return m_formatted_name_isSet;
}

bool OAIContactGroup::is_formatted_name_Valid() const{
    return m_formatted_name_isValid;
}

QString OAIContactGroup::getGroupType() const {
    return m_group_type;
}
void OAIContactGroup::setGroupType(const QString &group_type) {
    m_group_type = group_type;
    m_group_type_isSet = true;
}

bool OAIContactGroup::is_group_type_Set() const{
    return m_group_type_isSet;
}

bool OAIContactGroup::is_group_type_Valid() const{
    return m_group_type_isValid;
}

qint32 OAIContactGroup::getMemberCount() const {
    return m_member_count;
}
void OAIContactGroup::setMemberCount(const qint32 &member_count) {
    m_member_count = member_count;
    m_member_count_isSet = true;
}

bool OAIContactGroup::is_member_count_Set() const{
    return m_member_count_isSet;
}

bool OAIContactGroup::is_member_count_Valid() const{
    return m_member_count_isValid;
}

QList<QString> OAIContactGroup::getMemberResourceNames() const {
    return m_member_resource_names;
}
void OAIContactGroup::setMemberResourceNames(const QList<QString> &member_resource_names) {
    m_member_resource_names = member_resource_names;
    m_member_resource_names_isSet = true;
}

bool OAIContactGroup::is_member_resource_names_Set() const{
    return m_member_resource_names_isSet;
}

bool OAIContactGroup::is_member_resource_names_Valid() const{
    return m_member_resource_names_isValid;
}

OAIContactGroupMetadata OAIContactGroup::getMetadata() const {
    return m_metadata;
}
void OAIContactGroup::setMetadata(const OAIContactGroupMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIContactGroup::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIContactGroup::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIContactGroup::getName() const {
    return m_name;
}
void OAIContactGroup::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIContactGroup::is_name_Set() const{
    return m_name_isSet;
}

bool OAIContactGroup::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIContactGroup::getResourceName() const {
    return m_resource_name;
}
void OAIContactGroup::setResourceName(const QString &resource_name) {
    m_resource_name = resource_name;
    m_resource_name_isSet = true;
}

bool OAIContactGroup::is_resource_name_Set() const{
    return m_resource_name_isSet;
}

bool OAIContactGroup::is_resource_name_Valid() const{
    return m_resource_name_isValid;
}

bool OAIContactGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_formatted_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_member_resource_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
