/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMembership.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMembership::OAIMembership(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMembership::OAIMembership() {
    this->initializeModel();
}

OAIMembership::~OAIMembership() {}

void OAIMembership::initializeModel() {

    m_contact_group_membership_isSet = false;
    m_contact_group_membership_isValid = false;

    m_domain_membership_isSet = false;
    m_domain_membership_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;
}

void OAIMembership::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMembership::fromJsonObject(QJsonObject json) {

    m_contact_group_membership_isValid = ::OpenAPI::fromJsonValue(m_contact_group_membership, json[QString("contactGroupMembership")]);
    m_contact_group_membership_isSet = !json[QString("contactGroupMembership")].isNull() && m_contact_group_membership_isValid;

    m_domain_membership_isValid = ::OpenAPI::fromJsonValue(m_domain_membership, json[QString("domainMembership")]);
    m_domain_membership_isSet = !json[QString("domainMembership")].isNull() && m_domain_membership_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;
}

QString OAIMembership::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMembership::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_group_membership.isSet()) {
        obj.insert(QString("contactGroupMembership"), ::OpenAPI::toJsonValue(m_contact_group_membership));
    }
    if (m_domain_membership.isSet()) {
        obj.insert(QString("domainMembership"), ::OpenAPI::toJsonValue(m_domain_membership));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    return obj;
}

OAIContactGroupMembership OAIMembership::getContactGroupMembership() const {
    return m_contact_group_membership;
}
void OAIMembership::setContactGroupMembership(const OAIContactGroupMembership &contact_group_membership) {
    m_contact_group_membership = contact_group_membership;
    m_contact_group_membership_isSet = true;
}

bool OAIMembership::is_contact_group_membership_Set() const{
    return m_contact_group_membership_isSet;
}

bool OAIMembership::is_contact_group_membership_Valid() const{
    return m_contact_group_membership_isValid;
}

OAIDomainMembership OAIMembership::getDomainMembership() const {
    return m_domain_membership;
}
void OAIMembership::setDomainMembership(const OAIDomainMembership &domain_membership) {
    m_domain_membership = domain_membership;
    m_domain_membership_isSet = true;
}

bool OAIMembership::is_domain_membership_Set() const{
    return m_domain_membership_isSet;
}

bool OAIMembership::is_domain_membership_Valid() const{
    return m_domain_membership_isValid;
}

OAIFieldMetadata OAIMembership::getMetadata() const {
    return m_metadata;
}
void OAIMembership::setMetadata(const OAIFieldMetadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIMembership::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIMembership::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAIMembership::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_group_membership.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_domain_membership.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMembership::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
