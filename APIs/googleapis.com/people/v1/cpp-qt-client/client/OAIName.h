/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIName.h
 *
 * A person&#39;s name. If the name is a mononym, the family name is empty.
 */

#ifndef OAIName_H
#define OAIName_H

#include <QJsonObject>

#include "OAIFieldMetadata.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFieldMetadata;

class OAIName : public OAIObject {
public:
    OAIName();
    OAIName(QString json);
    ~OAIName() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getDisplayNameLastFirst() const;
    void setDisplayNameLastFirst(const QString &display_name_last_first);
    bool is_display_name_last_first_Set() const;
    bool is_display_name_last_first_Valid() const;

    QString getFamilyName() const;
    void setFamilyName(const QString &family_name);
    bool is_family_name_Set() const;
    bool is_family_name_Valid() const;

    QString getGivenName() const;
    void setGivenName(const QString &given_name);
    bool is_given_name_Set() const;
    bool is_given_name_Valid() const;

    QString getHonorificPrefix() const;
    void setHonorificPrefix(const QString &honorific_prefix);
    bool is_honorific_prefix_Set() const;
    bool is_honorific_prefix_Valid() const;

    QString getHonorificSuffix() const;
    void setHonorificSuffix(const QString &honorific_suffix);
    bool is_honorific_suffix_Set() const;
    bool is_honorific_suffix_Valid() const;

    OAIFieldMetadata getMetadata() const;
    void setMetadata(const OAIFieldMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getMiddleName() const;
    void setMiddleName(const QString &middle_name);
    bool is_middle_name_Set() const;
    bool is_middle_name_Valid() const;

    QString getPhoneticFamilyName() const;
    void setPhoneticFamilyName(const QString &phonetic_family_name);
    bool is_phonetic_family_name_Set() const;
    bool is_phonetic_family_name_Valid() const;

    QString getPhoneticFullName() const;
    void setPhoneticFullName(const QString &phonetic_full_name);
    bool is_phonetic_full_name_Set() const;
    bool is_phonetic_full_name_Valid() const;

    QString getPhoneticGivenName() const;
    void setPhoneticGivenName(const QString &phonetic_given_name);
    bool is_phonetic_given_name_Set() const;
    bool is_phonetic_given_name_Valid() const;

    QString getPhoneticHonorificPrefix() const;
    void setPhoneticHonorificPrefix(const QString &phonetic_honorific_prefix);
    bool is_phonetic_honorific_prefix_Set() const;
    bool is_phonetic_honorific_prefix_Valid() const;

    QString getPhoneticHonorificSuffix() const;
    void setPhoneticHonorificSuffix(const QString &phonetic_honorific_suffix);
    bool is_phonetic_honorific_suffix_Set() const;
    bool is_phonetic_honorific_suffix_Valid() const;

    QString getPhoneticMiddleName() const;
    void setPhoneticMiddleName(const QString &phonetic_middle_name);
    bool is_phonetic_middle_name_Set() const;
    bool is_phonetic_middle_name_Valid() const;

    QString getUnstructuredName() const;
    void setUnstructuredName(const QString &unstructured_name);
    bool is_unstructured_name_Set() const;
    bool is_unstructured_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_display_name_last_first;
    bool m_display_name_last_first_isSet;
    bool m_display_name_last_first_isValid;

    QString m_family_name;
    bool m_family_name_isSet;
    bool m_family_name_isValid;

    QString m_given_name;
    bool m_given_name_isSet;
    bool m_given_name_isValid;

    QString m_honorific_prefix;
    bool m_honorific_prefix_isSet;
    bool m_honorific_prefix_isValid;

    QString m_honorific_suffix;
    bool m_honorific_suffix_isSet;
    bool m_honorific_suffix_isValid;

    OAIFieldMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_middle_name;
    bool m_middle_name_isSet;
    bool m_middle_name_isValid;

    QString m_phonetic_family_name;
    bool m_phonetic_family_name_isSet;
    bool m_phonetic_family_name_isValid;

    QString m_phonetic_full_name;
    bool m_phonetic_full_name_isSet;
    bool m_phonetic_full_name_isValid;

    QString m_phonetic_given_name;
    bool m_phonetic_given_name_isSet;
    bool m_phonetic_given_name_isValid;

    QString m_phonetic_honorific_prefix;
    bool m_phonetic_honorific_prefix_isSet;
    bool m_phonetic_honorific_prefix_isValid;

    QString m_phonetic_honorific_suffix;
    bool m_phonetic_honorific_suffix_isSet;
    bool m_phonetic_honorific_suffix_isValid;

    QString m_phonetic_middle_name;
    bool m_phonetic_middle_name_isSet;
    bool m_phonetic_middle_name_isValid;

    QString m_unstructured_name;
    bool m_unstructured_name_isSet;
    bool m_unstructured_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIName)

#endif // OAIName_H
