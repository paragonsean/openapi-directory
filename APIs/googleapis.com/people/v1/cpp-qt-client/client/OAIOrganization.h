/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrganization.h
 *
 * A person&#39;s past or current organization. Overlapping date ranges are permitted.
 */

#ifndef OAIOrganization_H
#define OAIOrganization_H

#include <QJsonObject>

#include "OAIDate.h"
#include "OAIFieldMetadata.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDate;
class OAIFieldMetadata;

class OAIOrganization : public OAIObject {
public:
    OAIOrganization();
    OAIOrganization(QString json);
    ~OAIOrganization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCostCenter() const;
    void setCostCenter(const QString &cost_center);
    bool is_cost_center_Set() const;
    bool is_cost_center_Valid() const;

    bool isCurrent() const;
    void setCurrent(const bool &current);
    bool is_current_Set() const;
    bool is_current_Valid() const;

    QString getDepartment() const;
    void setDepartment(const QString &department);
    bool is_department_Set() const;
    bool is_department_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    OAIDate getEndDate() const;
    void setEndDate(const OAIDate &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getFormattedType() const;
    void setFormattedType(const QString &formatted_type);
    bool is_formatted_type_Set() const;
    bool is_formatted_type_Valid() const;

    qint32 getFullTimeEquivalentMillipercent() const;
    void setFullTimeEquivalentMillipercent(const qint32 &full_time_equivalent_millipercent);
    bool is_full_time_equivalent_millipercent_Set() const;
    bool is_full_time_equivalent_millipercent_Valid() const;

    QString getJobDescription() const;
    void setJobDescription(const QString &job_description);
    bool is_job_description_Set() const;
    bool is_job_description_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIFieldMetadata getMetadata() const;
    void setMetadata(const OAIFieldMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPhoneticName() const;
    void setPhoneticName(const QString &phonetic_name);
    bool is_phonetic_name_Set() const;
    bool is_phonetic_name_Valid() const;

    OAIDate getStartDate() const;
    void setStartDate(const OAIDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cost_center;
    bool m_cost_center_isSet;
    bool m_cost_center_isValid;

    bool m_current;
    bool m_current_isSet;
    bool m_current_isValid;

    QString m_department;
    bool m_department_isSet;
    bool m_department_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    OAIDate m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_formatted_type;
    bool m_formatted_type_isSet;
    bool m_formatted_type_isValid;

    qint32 m_full_time_equivalent_millipercent;
    bool m_full_time_equivalent_millipercent_isSet;
    bool m_full_time_equivalent_millipercent_isValid;

    QString m_job_description;
    bool m_job_description_isSet;
    bool m_job_description_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIFieldMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_phonetic_name;
    bool m_phonetic_name_isSet;
    bool m_phonetic_name_isValid;

    OAIDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrganization)

#endif // OAIOrganization_H
