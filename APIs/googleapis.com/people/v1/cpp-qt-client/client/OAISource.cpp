/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISource::OAISource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISource::OAISource() {
    this->initializeModel();
}

OAISource::~OAISource() {}

void OAISource::initializeModel() {

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_profile_metadata_isSet = false;
    m_profile_metadata_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_update_time_isSet = false;
    m_update_time_isValid = false;
}

void OAISource::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISource::fromJsonObject(QJsonObject json) {

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_profile_metadata_isValid = ::OpenAPI::fromJsonValue(m_profile_metadata, json[QString("profileMetadata")]);
    m_profile_metadata_isSet = !json[QString("profileMetadata")].isNull() && m_profile_metadata_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_update_time_isValid = ::OpenAPI::fromJsonValue(m_update_time, json[QString("updateTime")]);
    m_update_time_isSet = !json[QString("updateTime")].isNull() && m_update_time_isValid;
}

QString OAISource::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISource::asJsonObject() const {
    QJsonObject obj;
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_profile_metadata.isSet()) {
        obj.insert(QString("profileMetadata"), ::OpenAPI::toJsonValue(m_profile_metadata));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_update_time_isSet) {
        obj.insert(QString("updateTime"), ::OpenAPI::toJsonValue(m_update_time));
    }
    return obj;
}

QString OAISource::getEtag() const {
    return m_etag;
}
void OAISource::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAISource::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAISource::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAISource::getId() const {
    return m_id;
}
void OAISource::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISource::is_id_Set() const{
    return m_id_isSet;
}

bool OAISource::is_id_Valid() const{
    return m_id_isValid;
}

OAIProfileMetadata OAISource::getProfileMetadata() const {
    return m_profile_metadata;
}
void OAISource::setProfileMetadata(const OAIProfileMetadata &profile_metadata) {
    m_profile_metadata = profile_metadata;
    m_profile_metadata_isSet = true;
}

bool OAISource::is_profile_metadata_Set() const{
    return m_profile_metadata_isSet;
}

bool OAISource::is_profile_metadata_Valid() const{
    return m_profile_metadata_isValid;
}

QString OAISource::getType() const {
    return m_type;
}
void OAISource::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAISource::is_type_Set() const{
    return m_type_isSet;
}

bool OAISource::is_type_Valid() const{
    return m_type_isValid;
}

QString OAISource::getUpdateTime() const {
    return m_update_time;
}
void OAISource::setUpdateTime(const QString &update_time) {
    m_update_time = update_time;
    m_update_time_isSet = true;
}

bool OAISource::is_update_time_Set() const{
    return m_update_time_isSet;
}

bool OAISource::is_update_time_Valid() const{
    return m_update_time_isValid;
}

bool OAISource::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISource::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
