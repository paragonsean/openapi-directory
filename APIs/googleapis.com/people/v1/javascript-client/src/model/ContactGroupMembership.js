/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContactGroupMembership model module.
 * @module model/ContactGroupMembership
 * @version v1
 */
class ContactGroupMembership {
    /**
     * Constructs a new <code>ContactGroupMembership</code>.
     * A Google contact group membership.
     * @alias module:model/ContactGroupMembership
     */
    constructor() { 
        
        ContactGroupMembership.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContactGroupMembership</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContactGroupMembership} obj Optional instance to populate.
     * @return {module:model/ContactGroupMembership} The populated <code>ContactGroupMembership</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContactGroupMembership();

            if (data.hasOwnProperty('contactGroupId')) {
                obj['contactGroupId'] = ApiClient.convertToType(data['contactGroupId'], 'String');
            }
            if (data.hasOwnProperty('contactGroupResourceName')) {
                obj['contactGroupResourceName'] = ApiClient.convertToType(data['contactGroupResourceName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContactGroupMembership</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContactGroupMembership</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['contactGroupId'] && !(typeof data['contactGroupId'] === 'string' || data['contactGroupId'] instanceof String)) {
            throw new Error("Expected the field `contactGroupId` to be a primitive type in the JSON string but got " + data['contactGroupId']);
        }
        // ensure the json data is a string
        if (data['contactGroupResourceName'] && !(typeof data['contactGroupResourceName'] === 'string' || data['contactGroupResourceName'] instanceof String)) {
            throw new Error("Expected the field `contactGroupResourceName` to be a primitive type in the JSON string but got " + data['contactGroupResourceName']);
        }

        return true;
    }


}



/**
 * Output only. The contact group ID for the contact group membership.
 * @member {String} contactGroupId
 */
ContactGroupMembership.prototype['contactGroupId'] = undefined;

/**
 * The resource name for the contact group, assigned by the server. An ASCII string, in the form of `contactGroups/{contact_group_id}`. Only contact_group_resource_name can be used for modifying memberships. Any contact group membership can be removed, but only user group or \"myContacts\" or \"starred\" system groups memberships can be added. A contact must always have at least one contact group membership.
 * @member {String} contactGroupResourceName
 */
ContactGroupMembership.prototype['contactGroupResourceName'] = undefined;






export default ContactGroupMembership;

