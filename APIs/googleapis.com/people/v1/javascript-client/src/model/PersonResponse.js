/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Person from './Person';
import Status from './Status';

/**
 * The PersonResponse model module.
 * @module model/PersonResponse
 * @version v1
 */
class PersonResponse {
    /**
     * Constructs a new <code>PersonResponse</code>.
     * The response for a single person
     * @alias module:model/PersonResponse
     */
    constructor() { 
        
        PersonResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PersonResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersonResponse} obj Optional instance to populate.
     * @return {module:model/PersonResponse} The populated <code>PersonResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersonResponse();

            if (data.hasOwnProperty('httpStatusCode')) {
                obj['httpStatusCode'] = ApiClient.convertToType(data['httpStatusCode'], 'Number');
            }
            if (data.hasOwnProperty('person')) {
                obj['person'] = Person.constructFromObject(data['person']);
            }
            if (data.hasOwnProperty('requestedResourceName')) {
                obj['requestedResourceName'] = ApiClient.convertToType(data['requestedResourceName'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PersonResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PersonResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `person`
        if (data['person']) { // data not null
          Person.validateJSON(data['person']);
        }
        // ensure the json data is a string
        if (data['requestedResourceName'] && !(typeof data['requestedResourceName'] === 'string' || data['requestedResourceName'] instanceof String)) {
            throw new Error("Expected the field `requestedResourceName` to be a primitive type in the JSON string but got " + data['requestedResourceName']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          Status.validateJSON(data['status']);
        }

        return true;
    }


}



/**
 * **DEPRECATED** (Please use status instead) [HTTP 1.1 status code] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).
 * @member {Number} httpStatusCode
 */
PersonResponse.prototype['httpStatusCode'] = undefined;

/**
 * @member {module:model/Person} person
 */
PersonResponse.prototype['person'] = undefined;

/**
 * The original requested resource name. May be different than the resource name on the returned person. The resource name can change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or a profile URL.
 * @member {String} requestedResourceName
 */
PersonResponse.prototype['requestedResourceName'] = undefined;

/**
 * @member {module:model/Status} status
 */
PersonResponse.prototype['status'] = undefined;






export default PersonResponse;

