/**
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContactGroup from './ContactGroup';

/**
 * The CreateContactGroupRequest model module.
 * @module model/CreateContactGroupRequest
 * @version v1
 */
class CreateContactGroupRequest {
    /**
     * Constructs a new <code>CreateContactGroupRequest</code>.
     * A request to create a new contact group.
     * @alias module:model/CreateContactGroupRequest
     */
    constructor() { 
        
        CreateContactGroupRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateContactGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateContactGroupRequest} obj Optional instance to populate.
     * @return {module:model/CreateContactGroupRequest} The populated <code>CreateContactGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateContactGroupRequest();

            if (data.hasOwnProperty('contactGroup')) {
                obj['contactGroup'] = ContactGroup.constructFromObject(data['contactGroup']);
            }
            if (data.hasOwnProperty('readGroupFields')) {
                obj['readGroupFields'] = ApiClient.convertToType(data['readGroupFields'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateContactGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateContactGroupRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `contactGroup`
        if (data['contactGroup']) { // data not null
          ContactGroup.validateJSON(data['contactGroup']);
        }
        // ensure the json data is a string
        if (data['readGroupFields'] && !(typeof data['readGroupFields'] === 'string' || data['readGroupFields'] instanceof String)) {
            throw new Error("Expected the field `readGroupFields` to be a primitive type in the JSON string but got " + data['readGroupFields']);
        }

        return true;
    }


}



/**
 * @member {module:model/ContactGroup} contactGroup
 */
CreateContactGroupRequest.prototype['contactGroup'] = undefined;

/**
 * Optional. A field mask to restrict which fields on the group are returned. Defaults to `metadata`, `groupType`, and `name` if not set or set to empty. Valid fields are: * clientData * groupType * metadata * name
 * @member {String} readGroupFields
 */
CreateContactGroupRequest.prototype['readGroupFields'] = undefined;






export default CreateContactGroupRequest;

