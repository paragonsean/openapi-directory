/*
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BatchGetContactGroupsResponse;
import org.openapitools.client.model.ContactGroup;
import org.openapitools.client.model.CreateContactGroupRequest;
import org.openapitools.client.model.ListContactGroupsResponse;
import org.openapitools.client.model.ModifyContactGroupMembersRequest;
import org.openapitools.client.model.ModifyContactGroupMembersResponse;
import org.openapitools.client.model.UpdateContactGroupRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContactGroupsApi
 */
@Disabled
public class ContactGroupsApiTest {

    private final ContactGroupsApi api = new ContactGroupsApi();

    /**
     * Get a list of contact groups owned by the authenticated user by specifying a list of contact group resource names.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peopleContactGroupsBatchGetTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String groupFields = null;
        Integer maxMembers = null;
        List<String> resourceNames = null;
        BatchGetContactGroupsResponse response = api.peopleContactGroupsBatchGet($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, groupFields, maxMembers, resourceNames);
        // TODO: test validations
    }

    /**
     * Create a new contact group owned by the authenticated user. Created contact group names must be unique to the users contact groups. Attempting to create a group with a duplicate name will return a HTTP 409 error. Mutate requests for the same user should be sent sequentially to avoid increased latency and failures.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peopleContactGroupsCreateTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CreateContactGroupRequest createContactGroupRequest = null;
        ContactGroup response = api.peopleContactGroupsCreate($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, createContactGroupRequest);
        // TODO: test validations
    }

    /**
     * Delete an existing contact group owned by the authenticated user by specifying a contact group resource name. Mutate requests for the same user should be sent sequentially to avoid increased latency and failures.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peopleContactGroupsDeleteTest() throws ApiException {
        String resourceName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Boolean deleteContacts = null;
        Object response = api.peopleContactGroupsDelete(resourceName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, deleteContacts);
        // TODO: test validations
    }

    /**
     * List all contact groups owned by the authenticated user. Members of the contact groups are not populated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peopleContactGroupsListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String groupFields = null;
        Integer pageSize = null;
        String pageToken = null;
        String syncToken = null;
        ListContactGroupsResponse response = api.peopleContactGroupsList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, groupFields, pageSize, pageToken, syncToken);
        // TODO: test validations
    }

    /**
     * Modify the members of a contact group owned by the authenticated user. The only system contact groups that can have members added are &#x60;contactGroups/myContacts&#x60; and &#x60;contactGroups/starred&#x60;. Other system contact groups are deprecated and can only have contacts removed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peopleContactGroupsMembersModifyTest() throws ApiException {
        String resourceName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ModifyContactGroupMembersRequest modifyContactGroupMembersRequest = null;
        ModifyContactGroupMembersResponse response = api.peopleContactGroupsMembersModify(resourceName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, modifyContactGroupMembersRequest);
        // TODO: test validations
    }

    /**
     * Update the name of an existing contact group owned by the authenticated user. Updated contact group names must be unique to the users contact groups. Attempting to create a group with a duplicate name will return a HTTP 409 error. Mutate requests for the same user should be sent sequentially to avoid increased latency and failures.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peopleContactGroupsUpdateTest() throws ApiException {
        String resourceName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        UpdateContactGroupRequest updateContactGroupRequest = null;
        ContactGroup response = api.peopleContactGroupsUpdate(resourceName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, updateContactGroupRequest);
        // TODO: test validations
    }

}
