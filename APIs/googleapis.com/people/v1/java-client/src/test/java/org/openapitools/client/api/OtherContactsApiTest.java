/*
 * People API
 * Provides access to information about profiles and contacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CopyOtherContactToMyContactsGroupRequest;
import org.openapitools.client.model.ListOtherContactsResponse;
import org.openapitools.client.model.Person;
import org.openapitools.client.model.SearchResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OtherContactsApi
 */
@Disabled
public class OtherContactsApiTest {

    private final OtherContactsApi api = new OtherContactsApi();

    /**
     * Copies an \&quot;Other contact\&quot; to a new contact in the user&#39;s \&quot;myContacts\&quot; group Mutate requests for the same user should be sent sequentially to avoid increased latency and failures.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peopleOtherContactsCopyOtherContactToMyContactsGroupTest() throws ApiException {
        String resourceName = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        CopyOtherContactToMyContactsGroupRequest copyOtherContactToMyContactsGroupRequest = null;
        Person response = api.peopleOtherContactsCopyOtherContactToMyContactsGroup(resourceName, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, copyOtherContactToMyContactsGroupRequest);
        // TODO: test validations
    }

    /**
     * List all \&quot;Other contacts\&quot;, that is contacts that are not in a contact group. \&quot;Other contacts\&quot; are typically auto created contacts from interactions. Sync tokens expire 7 days after the full sync. A request with an expired sync token will get an error with an [google.rpc.ErrorInfo](https://cloud.google.com/apis/design/errors#error_info) with reason \&quot;EXPIRED_SYNC_TOKEN\&quot;. In the case of such an error clients should make a full sync request without a &#x60;sync_token&#x60;. The first page of a full sync request has an additional quota. If the quota is exceeded, a 429 error will be returned. This quota is fixed and can not be increased. When the &#x60;sync_token&#x60; is specified, resources deleted since the last sync will be returned as a person with &#x60;PersonMetadata.deleted&#x60; set to true. When the &#x60;page_token&#x60; or &#x60;sync_token&#x60; is specified, all other request parameters must match the first call. Writes may have a propagation delay of several minutes for sync requests. Incremental syncs are not intended for read-after-write use cases. See example usage at [List the user&#39;s other contacts that have changed](/people/v1/other-contacts#list_the_users_other_contacts_that_have_changed).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peopleOtherContactsListTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String pageToken = null;
        String readMask = null;
        Boolean requestSyncToken = null;
        List<String> sources = null;
        String syncToken = null;
        ListOtherContactsResponse response = api.peopleOtherContactsList($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, pageToken, readMask, requestSyncToken, sources, syncToken);
        // TODO: test validations
    }

    /**
     * Provides a list of contacts in the authenticated user&#39;s other contacts that matches the search query. The query matches on a contact&#39;s &#x60;names&#x60;, &#x60;emailAddresses&#x60;, and &#x60;phoneNumbers&#x60; fields that are from the OTHER_CONTACT source. **IMPORTANT**: Before searching, clients should send a warmup request with an empty query to update the cache. See https://developers.google.com/people/v1/other-contacts#search_the_users_other_contacts
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void peopleOtherContactsSearchTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer pageSize = null;
        String query = null;
        String readMask = null;
        SearchResponse response = api.peopleOtherContactsSearch($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, pageSize, query, readMask);
        // TODO: test validations
    }

}
