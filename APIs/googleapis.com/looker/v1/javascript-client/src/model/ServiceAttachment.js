/**
 * Looker (Google Cloud core) API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServiceAttachment model module.
 * @module model/ServiceAttachment
 * @version v1
 */
class ServiceAttachment {
    /**
     * Constructs a new <code>ServiceAttachment</code>.
     * Service attachment configuration.
     * @alias module:model/ServiceAttachment
     */
    constructor() { 
        
        ServiceAttachment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServiceAttachment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServiceAttachment} obj Optional instance to populate.
     * @return {module:model/ServiceAttachment} The populated <code>ServiceAttachment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServiceAttachment();

            if (data.hasOwnProperty('connectionStatus')) {
                obj['connectionStatus'] = ApiClient.convertToType(data['connectionStatus'], 'String');
            }
            if (data.hasOwnProperty('localFqdn')) {
                obj['localFqdn'] = ApiClient.convertToType(data['localFqdn'], 'String');
            }
            if (data.hasOwnProperty('targetServiceAttachmentUri')) {
                obj['targetServiceAttachmentUri'] = ApiClient.convertToType(data['targetServiceAttachmentUri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServiceAttachment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServiceAttachment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['connectionStatus'] && !(typeof data['connectionStatus'] === 'string' || data['connectionStatus'] instanceof String)) {
            throw new Error("Expected the field `connectionStatus` to be a primitive type in the JSON string but got " + data['connectionStatus']);
        }
        // ensure the json data is a string
        if (data['localFqdn'] && !(typeof data['localFqdn'] === 'string' || data['localFqdn'] instanceof String)) {
            throw new Error("Expected the field `localFqdn` to be a primitive type in the JSON string but got " + data['localFqdn']);
        }
        // ensure the json data is a string
        if (data['targetServiceAttachmentUri'] && !(typeof data['targetServiceAttachmentUri'] === 'string' || data['targetServiceAttachmentUri'] instanceof String)) {
            throw new Error("Expected the field `targetServiceAttachmentUri` to be a primitive type in the JSON string but got " + data['targetServiceAttachmentUri']);
        }

        return true;
    }


}



/**
 * Output only. Connection status.
 * @member {module:model/ServiceAttachment.ConnectionStatusEnum} connectionStatus
 */
ServiceAttachment.prototype['connectionStatus'] = undefined;

/**
 * Required. Fully qualified domain name that will be used in the private DNS record created for the service attachment.
 * @member {String} localFqdn
 */
ServiceAttachment.prototype['localFqdn'] = undefined;

/**
 * Required. URI of the service attachment to connect to. Format: projects/{project}/regions/{region}/serviceAttachments/{service_attachment}
 * @member {String} targetServiceAttachmentUri
 */
ServiceAttachment.prototype['targetServiceAttachmentUri'] = undefined;





/**
 * Allowed values for the <code>connectionStatus</code> property.
 * @enum {String}
 * @readonly
 */
ServiceAttachment['ConnectionStatusEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "ACCEPTED"
     * @const
     */
    "ACCEPTED": "ACCEPTED",

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "REJECTED"
     * @const
     */
    "REJECTED": "REJECTED",

    /**
     * value: "NEEDS_ATTENTION"
     * @const
     */
    "NEEDS_ATTENTION": "NEEDS_ATTENTION",

    /**
     * value: "CLOSED"
     * @const
     */
    "CLOSED": "CLOSED"
};



export default ServiceAttachment;

