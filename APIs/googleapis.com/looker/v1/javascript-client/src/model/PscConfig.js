/**
 * Looker (Google Cloud core) API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ServiceAttachment from './ServiceAttachment';

/**
 * The PscConfig model module.
 * @module model/PscConfig
 * @version v1
 */
class PscConfig {
    /**
     * Constructs a new <code>PscConfig</code>.
     * Information for Private Service Connect (PSC) setup for a Looker instance.
     * @alias module:model/PscConfig
     */
    constructor() { 
        
        PscConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PscConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PscConfig} obj Optional instance to populate.
     * @return {module:model/PscConfig} The populated <code>PscConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PscConfig();

            if (data.hasOwnProperty('allowedVpcs')) {
                obj['allowedVpcs'] = ApiClient.convertToType(data['allowedVpcs'], ['String']);
            }
            if (data.hasOwnProperty('lookerServiceAttachmentUri')) {
                obj['lookerServiceAttachmentUri'] = ApiClient.convertToType(data['lookerServiceAttachmentUri'], 'String');
            }
            if (data.hasOwnProperty('serviceAttachments')) {
                obj['serviceAttachments'] = ApiClient.convertToType(data['serviceAttachments'], [ServiceAttachment]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PscConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PscConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedVpcs'])) {
            throw new Error("Expected the field `allowedVpcs` to be an array in the JSON data but got " + data['allowedVpcs']);
        }
        // ensure the json data is a string
        if (data['lookerServiceAttachmentUri'] && !(typeof data['lookerServiceAttachmentUri'] === 'string' || data['lookerServiceAttachmentUri'] instanceof String)) {
            throw new Error("Expected the field `lookerServiceAttachmentUri` to be a primitive type in the JSON string but got " + data['lookerServiceAttachmentUri']);
        }
        if (data['serviceAttachments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['serviceAttachments'])) {
                throw new Error("Expected the field `serviceAttachments` to be an array in the JSON data but got " + data['serviceAttachments']);
            }
            // validate the optional field `serviceAttachments` (array)
            for (const item of data['serviceAttachments']) {
                ServiceAttachment.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Optional. List of VPCs that are allowed ingress into looker. Format: projects/{project}/global/networks/{network}
 * @member {Array.<String>} allowedVpcs
 */
PscConfig.prototype['allowedVpcs'] = undefined;

/**
 * Output only. URI of the Looker service attachment.
 * @member {String} lookerServiceAttachmentUri
 */
PscConfig.prototype['lookerServiceAttachmentUri'] = undefined;

/**
 * Optional. List of egress service attachment configurations.
 * @member {Array.<module:model/ServiceAttachment>} serviceAttachments
 */
PscConfig.prototype['serviceAttachments'] = undefined;






export default PscConfig;

