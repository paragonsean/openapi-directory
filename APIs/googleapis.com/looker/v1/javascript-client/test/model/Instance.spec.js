/**
 * Looker (Google Cloud core) API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LookerGoogleCloudCoreApi);
  }
}(this, function(expect, LookerGoogleCloudCoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LookerGoogleCloudCoreApi.Instance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Instance', function() {
    it('should create an instance of Instance', function() {
      // uncomment below and update the code to test Instance
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be.a(LookerGoogleCloudCoreApi.Instance);
    });

    it('should have the property adminSettings (base name: "adminSettings")', function() {
      // uncomment below and update the code to test the property adminSettings
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property consumerNetwork (base name: "consumerNetwork")', function() {
      // uncomment below and update the code to test the property consumerNetwork
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property createTime (base name: "createTime")', function() {
      // uncomment below and update the code to test the property createTime
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property customDomain (base name: "customDomain")', function() {
      // uncomment below and update the code to test the property customDomain
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property denyMaintenancePeriod (base name: "denyMaintenancePeriod")', function() {
      // uncomment below and update the code to test the property denyMaintenancePeriod
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property egressPublicIp (base name: "egressPublicIp")', function() {
      // uncomment below and update the code to test the property egressPublicIp
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property encryptionConfig (base name: "encryptionConfig")', function() {
      // uncomment below and update the code to test the property encryptionConfig
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property ingressPrivateIp (base name: "ingressPrivateIp")', function() {
      // uncomment below and update the code to test the property ingressPrivateIp
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property ingressPublicIp (base name: "ingressPublicIp")', function() {
      // uncomment below and update the code to test the property ingressPublicIp
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property lastDenyMaintenancePeriod (base name: "lastDenyMaintenancePeriod")', function() {
      // uncomment below and update the code to test the property lastDenyMaintenancePeriod
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property lookerUri (base name: "lookerUri")', function() {
      // uncomment below and update the code to test the property lookerUri
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property lookerVersion (base name: "lookerVersion")', function() {
      // uncomment below and update the code to test the property lookerVersion
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceSchedule (base name: "maintenanceSchedule")', function() {
      // uncomment below and update the code to test the property maintenanceSchedule
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property maintenanceWindow (base name: "maintenanceWindow")', function() {
      // uncomment below and update the code to test the property maintenanceWindow
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property oauthConfig (base name: "oauthConfig")', function() {
      // uncomment below and update the code to test the property oauthConfig
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property platformEdition (base name: "platformEdition")', function() {
      // uncomment below and update the code to test the property platformEdition
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property privateIpEnabled (base name: "privateIpEnabled")', function() {
      // uncomment below and update the code to test the property privateIpEnabled
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property pscConfig (base name: "pscConfig")', function() {
      // uncomment below and update the code to test the property pscConfig
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property pscEnabled (base name: "pscEnabled")', function() {
      // uncomment below and update the code to test the property pscEnabled
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property publicIpEnabled (base name: "publicIpEnabled")', function() {
      // uncomment below and update the code to test the property publicIpEnabled
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property reservedRange (base name: "reservedRange")', function() {
      // uncomment below and update the code to test the property reservedRange
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property updateTime (base name: "updateTime")', function() {
      // uncomment below and update the code to test the property updateTime
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

    it('should have the property userMetadata (base name: "userMetadata")', function() {
      // uncomment below and update the code to test the property userMetadata
      //var instance = new LookerGoogleCloudCoreApi.Instance();
      //expect(instance).to.be();
    });

  });

}));
