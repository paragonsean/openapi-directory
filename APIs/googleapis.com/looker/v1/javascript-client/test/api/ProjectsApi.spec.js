/**
 * Looker (Google Cloud core) API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.LookerGoogleCloudCoreApi);
  }
}(this, function(expect, LookerGoogleCloudCoreApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new LookerGoogleCloudCoreApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('lookerProjectsLocationsInstancesBackupsGetIamPolicy', function() {
      it('should call lookerProjectsLocationsInstancesBackupsGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsInstancesBackupsGetIamPolicy
        //instance.lookerProjectsLocationsInstancesBackupsGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsInstancesBackupsSetIamPolicy', function() {
      it('should call lookerProjectsLocationsInstancesBackupsSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsInstancesBackupsSetIamPolicy
        //instance.lookerProjectsLocationsInstancesBackupsSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsInstancesBackupsTestIamPermissions', function() {
      it('should call lookerProjectsLocationsInstancesBackupsTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsInstancesBackupsTestIamPermissions
        //instance.lookerProjectsLocationsInstancesBackupsTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsInstancesCreate', function() {
      it('should call lookerProjectsLocationsInstancesCreate successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsInstancesCreate
        //instance.lookerProjectsLocationsInstancesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsInstancesExport', function() {
      it('should call lookerProjectsLocationsInstancesExport successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsInstancesExport
        //instance.lookerProjectsLocationsInstancesExport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsInstancesImport', function() {
      it('should call lookerProjectsLocationsInstancesImport successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsInstancesImport
        //instance.lookerProjectsLocationsInstancesImport(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsInstancesList', function() {
      it('should call lookerProjectsLocationsInstancesList successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsInstancesList
        //instance.lookerProjectsLocationsInstancesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsInstancesPatch', function() {
      it('should call lookerProjectsLocationsInstancesPatch successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsInstancesPatch
        //instance.lookerProjectsLocationsInstancesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsInstancesRestart', function() {
      it('should call lookerProjectsLocationsInstancesRestart successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsInstancesRestart
        //instance.lookerProjectsLocationsInstancesRestart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsList', function() {
      it('should call lookerProjectsLocationsList successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsList
        //instance.lookerProjectsLocationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsOperationsCancel', function() {
      it('should call lookerProjectsLocationsOperationsCancel successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsOperationsCancel
        //instance.lookerProjectsLocationsOperationsCancel(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsOperationsDelete', function() {
      it('should call lookerProjectsLocationsOperationsDelete successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsOperationsDelete
        //instance.lookerProjectsLocationsOperationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsOperationsGet', function() {
      it('should call lookerProjectsLocationsOperationsGet successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsOperationsGet
        //instance.lookerProjectsLocationsOperationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('lookerProjectsLocationsOperationsList', function() {
      it('should call lookerProjectsLocationsOperationsList successfully', function(done) {
        //uncomment below and update the code to test lookerProjectsLocationsOperationsList
        //instance.lookerProjectsLocationsOperationsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
