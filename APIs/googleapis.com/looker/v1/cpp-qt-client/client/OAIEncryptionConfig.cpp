/**
 * Looker (Google Cloud core) API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEncryptionConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEncryptionConfig::OAIEncryptionConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEncryptionConfig::OAIEncryptionConfig() {
    this->initializeModel();
}

OAIEncryptionConfig::~OAIEncryptionConfig() {}

void OAIEncryptionConfig::initializeModel() {

    m_kms_key_name_isSet = false;
    m_kms_key_name_isValid = false;

    m_kms_key_name_version_isSet = false;
    m_kms_key_name_version_isValid = false;

    m_kms_key_state_isSet = false;
    m_kms_key_state_isValid = false;
}

void OAIEncryptionConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEncryptionConfig::fromJsonObject(QJsonObject json) {

    m_kms_key_name_isValid = ::OpenAPI::fromJsonValue(m_kms_key_name, json[QString("kmsKeyName")]);
    m_kms_key_name_isSet = !json[QString("kmsKeyName")].isNull() && m_kms_key_name_isValid;

    m_kms_key_name_version_isValid = ::OpenAPI::fromJsonValue(m_kms_key_name_version, json[QString("kmsKeyNameVersion")]);
    m_kms_key_name_version_isSet = !json[QString("kmsKeyNameVersion")].isNull() && m_kms_key_name_version_isValid;

    m_kms_key_state_isValid = ::OpenAPI::fromJsonValue(m_kms_key_state, json[QString("kmsKeyState")]);
    m_kms_key_state_isSet = !json[QString("kmsKeyState")].isNull() && m_kms_key_state_isValid;
}

QString OAIEncryptionConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEncryptionConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_kms_key_name_isSet) {
        obj.insert(QString("kmsKeyName"), ::OpenAPI::toJsonValue(m_kms_key_name));
    }
    if (m_kms_key_name_version_isSet) {
        obj.insert(QString("kmsKeyNameVersion"), ::OpenAPI::toJsonValue(m_kms_key_name_version));
    }
    if (m_kms_key_state_isSet) {
        obj.insert(QString("kmsKeyState"), ::OpenAPI::toJsonValue(m_kms_key_state));
    }
    return obj;
}

QString OAIEncryptionConfig::getKmsKeyName() const {
    return m_kms_key_name;
}
void OAIEncryptionConfig::setKmsKeyName(const QString &kms_key_name) {
    m_kms_key_name = kms_key_name;
    m_kms_key_name_isSet = true;
}

bool OAIEncryptionConfig::is_kms_key_name_Set() const{
    return m_kms_key_name_isSet;
}

bool OAIEncryptionConfig::is_kms_key_name_Valid() const{
    return m_kms_key_name_isValid;
}

QString OAIEncryptionConfig::getKmsKeyNameVersion() const {
    return m_kms_key_name_version;
}
void OAIEncryptionConfig::setKmsKeyNameVersion(const QString &kms_key_name_version) {
    m_kms_key_name_version = kms_key_name_version;
    m_kms_key_name_version_isSet = true;
}

bool OAIEncryptionConfig::is_kms_key_name_version_Set() const{
    return m_kms_key_name_version_isSet;
}

bool OAIEncryptionConfig::is_kms_key_name_version_Valid() const{
    return m_kms_key_name_version_isValid;
}

QString OAIEncryptionConfig::getKmsKeyState() const {
    return m_kms_key_state;
}
void OAIEncryptionConfig::setKmsKeyState(const QString &kms_key_state) {
    m_kms_key_state = kms_key_state;
    m_kms_key_state_isSet = true;
}

bool OAIEncryptionConfig::is_kms_key_state_Set() const{
    return m_kms_key_state_isSet;
}

bool OAIEncryptionConfig::is_kms_key_state_Valid() const{
    return m_kms_key_state_isValid;
}

bool OAIEncryptionConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kms_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_name_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kms_key_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEncryptionConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
