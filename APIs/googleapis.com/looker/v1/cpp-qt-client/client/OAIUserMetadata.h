/**
 * Looker (Google Cloud core) API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserMetadata.h
 *
 * Metadata about users for a Looker instance.
 */

#ifndef OAIUserMetadata_H
#define OAIUserMetadata_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserMetadata : public OAIObject {
public:
    OAIUserMetadata();
    OAIUserMetadata(QString json);
    ~OAIUserMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdditionalDeveloperUserCount() const;
    void setAdditionalDeveloperUserCount(const qint32 &additional_developer_user_count);
    bool is_additional_developer_user_count_Set() const;
    bool is_additional_developer_user_count_Valid() const;

    qint32 getAdditionalStandardUserCount() const;
    void setAdditionalStandardUserCount(const qint32 &additional_standard_user_count);
    bool is_additional_standard_user_count_Set() const;
    bool is_additional_standard_user_count_Valid() const;

    qint32 getAdditionalViewerUserCount() const;
    void setAdditionalViewerUserCount(const qint32 &additional_viewer_user_count);
    bool is_additional_viewer_user_count_Set() const;
    bool is_additional_viewer_user_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_additional_developer_user_count;
    bool m_additional_developer_user_count_isSet;
    bool m_additional_developer_user_count_isValid;

    qint32 m_additional_standard_user_count;
    bool m_additional_standard_user_count_isSet;
    bool m_additional_standard_user_count_isValid;

    qint32 m_additional_viewer_user_count;
    bool m_additional_viewer_user_count_isSet;
    bool m_additional_viewer_user_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserMetadata)

#endif // OAIUserMetadata_H
