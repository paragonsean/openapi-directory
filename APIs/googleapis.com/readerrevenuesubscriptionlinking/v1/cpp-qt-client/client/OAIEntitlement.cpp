/**
 * Reader Revenue Subscription Linking API
 * readerrevenuesubscriptionlinking.googleapis.com API.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEntitlement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEntitlement::OAIEntitlement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEntitlement::OAIEntitlement() {
    this->initializeModel();
}

OAIEntitlement::~OAIEntitlement() {}

void OAIEntitlement::initializeModel() {

    m_detail_isSet = false;
    m_detail_isValid = false;

    m_expire_time_isSet = false;
    m_expire_time_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_subscription_token_isSet = false;
    m_subscription_token_isValid = false;
}

void OAIEntitlement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEntitlement::fromJsonObject(QJsonObject json) {

    m_detail_isValid = ::OpenAPI::fromJsonValue(m_detail, json[QString("detail")]);
    m_detail_isSet = !json[QString("detail")].isNull() && m_detail_isValid;

    m_expire_time_isValid = ::OpenAPI::fromJsonValue(m_expire_time, json[QString("expireTime")]);
    m_expire_time_isSet = !json[QString("expireTime")].isNull() && m_expire_time_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("productId")]);
    m_product_id_isSet = !json[QString("productId")].isNull() && m_product_id_isValid;

    m_subscription_token_isValid = ::OpenAPI::fromJsonValue(m_subscription_token, json[QString("subscriptionToken")]);
    m_subscription_token_isSet = !json[QString("subscriptionToken")].isNull() && m_subscription_token_isValid;
}

QString OAIEntitlement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEntitlement::asJsonObject() const {
    QJsonObject obj;
    if (m_detail_isSet) {
        obj.insert(QString("detail"), ::OpenAPI::toJsonValue(m_detail));
    }
    if (m_expire_time_isSet) {
        obj.insert(QString("expireTime"), ::OpenAPI::toJsonValue(m_expire_time));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("productId"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_subscription_token_isSet) {
        obj.insert(QString("subscriptionToken"), ::OpenAPI::toJsonValue(m_subscription_token));
    }
    return obj;
}

QString OAIEntitlement::getDetail() const {
    return m_detail;
}
void OAIEntitlement::setDetail(const QString &detail) {
    m_detail = detail;
    m_detail_isSet = true;
}

bool OAIEntitlement::is_detail_Set() const{
    return m_detail_isSet;
}

bool OAIEntitlement::is_detail_Valid() const{
    return m_detail_isValid;
}

QString OAIEntitlement::getExpireTime() const {
    return m_expire_time;
}
void OAIEntitlement::setExpireTime(const QString &expire_time) {
    m_expire_time = expire_time;
    m_expire_time_isSet = true;
}

bool OAIEntitlement::is_expire_time_Set() const{
    return m_expire_time_isSet;
}

bool OAIEntitlement::is_expire_time_Valid() const{
    return m_expire_time_isValid;
}

QString OAIEntitlement::getProductId() const {
    return m_product_id;
}
void OAIEntitlement::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIEntitlement::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIEntitlement::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAIEntitlement::getSubscriptionToken() const {
    return m_subscription_token;
}
void OAIEntitlement::setSubscriptionToken(const QString &subscription_token) {
    m_subscription_token = subscription_token;
    m_subscription_token_isSet = true;
}

bool OAIEntitlement::is_subscription_token_Set() const{
    return m_subscription_token_isSet;
}

bool OAIEntitlement::is_subscription_token_Valid() const{
    return m_subscription_token_isValid;
}

bool OAIEntitlement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expire_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscription_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEntitlement::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
