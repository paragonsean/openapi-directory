openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: readerrevenuesubscriptionlinking.googleapis.com API.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Reader Revenue Subscription Linking API
  version: v1
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://readerrevenuesubscriptionlinking.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: readerrevenuesubscriptionlinking
externalDocs:
  url: https://developers.google.com/news/subscribe/subscription-linking/overview
servers:
- url: https://readerrevenuesubscriptionlinking.googleapis.com/
tags:
- name: publications
paths:
  /v1/{name}:
    delete:
      description: "Removes a publication reader, effectively severing the association\
        \ with a Google user. If `force` is set to true, any entitlements for this\
        \ reader will also be deleted. (Otherwise, the request will only work if the\
        \ reader has no entitlements.) - If the reader does not exist, return NOT_FOUND.\
        \ - Return FAILED_PRECONDITION if the force field is false (or unset) and\
        \ entitlements are present."
      operationId: readerrevenuesubscriptionlinking_publications_readers_delete
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The resource name of the reader. Format: publications/{publication_id}/readers/{ppid}"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to true, any entitlements under the reader will also\
          \ be purged."
        explode: true
        in: query
        name: force
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReaderResponse'
          description: Successful response
      tags:
      - publications
      x-openapi-router-controller: openapi_server.controllers.publications_controller
    get:
      description: Gets the reader entitlements for a publication reader. - Returns
        PERMISSION_DENIED if the caller does not have access. - Returns NOT_FOUND
        if the reader does not exist.
      operationId: readerrevenuesubscriptionlinking_publications_readers_get_entitlements
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Required. The name of the reader entitlements to retrieve. Format:\
          \ publications/{publication_id}/readers/{reader_id}/entitlements"
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReaderEntitlements'
          description: Successful response
      tags:
      - publications
      x-openapi-router-controller: openapi_server.controllers.publications_controller
    patch:
      description: "Updates the reader entitlements for a publication reader. The\
        \ entire reader entitlements will be overwritten by the new reader entitlements\
        \ in the payload, like a PUT. - Returns PERMISSION_DENIED if the caller does\
        \ not have access. - Returns NOT_FOUND if the reader does not exist."
      operationId: readerrevenuesubscriptionlinking_publications_readers_update_entitlements
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Output only. The resource name of the singleton.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: Optional. The list of fields to update. Defaults to all fields.
        explode: true
        in: query
        name: updateMask
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReaderEntitlements'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReaderEntitlements'
          description: Successful response
      tags:
      - publications
      x-openapi-router-controller: openapi_server.controllers.publications_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    DeleteReaderResponse:
      description: Response to deleting a reader of a publication.
      properties: {}
      type: object
    Entitlement:
      description: A single entitlement for a publication reader
      example:
        expireTime: expireTime
        productId: productId
        subscriptionToken: subscriptionToken
        detail: detail
      properties:
        detail:
          description: "The detail field can carry a description of the SKU that corresponds\
            \ to what the user has been granted access to. This description, which\
            \ is opaque to Google, can be displayed in the Google user subscription\
            \ console for users who linked the subscription to a Google Account. Max\
            \ 80 character limit."
          title: detail
          type: string
        expireTime:
          description: Required. Expiration time of the entitlement. Entitlements
            that have expired over 30 days will be purged. Required. LINT.IfChange(expire_time)
            The max expire_time is 398 days from now(). LINT.ThenChange(//depot/google3/java/com/google/subscribewithgoogle/accountlinking/subscriptionlink/service/config/protoconf.pi:max_expiry_age)
          format: google-datetime
          title: expireTime
          type: string
        productId:
          description: Required. The publication's product ID that the user has access
            to. This is the same product ID as can be found in Schema.org markup (http://schema.org/productID).
            E.g. "dailybugle.com:basic"
          title: productId
          type: string
        subscriptionToken:
          description: A source-specific subscription token. This is an opaque string
            that the publisher provides to Google. This token is opaque and has no
            meaning to Google.
          title: subscriptionToken
          type: string
      title: Entitlement
      type: object
    Reader:
      description: A reader of a publication.
      properties:
        createTime:
          description: Output only. Time the publication reader was created and associated
            with a Google user.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: Output only. The resource name of the reader. The last part
            of ppid in the resource name is the publisher provided id.
          readOnly: true
          type: string
      type: object
    ReaderEntitlements:
      description: A singleton containing all of a reader's entitlements for a publication.
      example:
        entitlements:
        - expireTime: expireTime
          productId: productId
          subscriptionToken: subscriptionToken
          detail: detail
        - expireTime: expireTime
          productId: productId
          subscriptionToken: subscriptionToken
          detail: detail
        name: name
      properties:
        entitlements:
          description: All of the entitlements for a publication reader.
          items:
            $ref: '#/components/schemas/Entitlement'
          title: entitlements
          type: array
        name:
          description: Output only. The resource name of the singleton.
          readOnly: true
          title: name
          type: string
      title: ReaderEntitlements
      type: object
