/**
 * BigQuery Data Policy API
 * Allows users to manage BigQuery data policies.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DataMaskingPolicy model module.
 * @module model/DataMaskingPolicy
 * @version v1
 */
class DataMaskingPolicy {
    /**
     * Constructs a new <code>DataMaskingPolicy</code>.
     * The data masking policy that is used to specify data masking rule.
     * @alias module:model/DataMaskingPolicy
     */
    constructor() { 
        
        DataMaskingPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DataMaskingPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DataMaskingPolicy} obj Optional instance to populate.
     * @return {module:model/DataMaskingPolicy} The populated <code>DataMaskingPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DataMaskingPolicy();

            if (data.hasOwnProperty('predefinedExpression')) {
                obj['predefinedExpression'] = ApiClient.convertToType(data['predefinedExpression'], 'String');
            }
            if (data.hasOwnProperty('routine')) {
                obj['routine'] = ApiClient.convertToType(data['routine'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DataMaskingPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DataMaskingPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['predefinedExpression'] && !(typeof data['predefinedExpression'] === 'string' || data['predefinedExpression'] instanceof String)) {
            throw new Error("Expected the field `predefinedExpression` to be a primitive type in the JSON string but got " + data['predefinedExpression']);
        }
        // ensure the json data is a string
        if (data['routine'] && !(typeof data['routine'] === 'string' || data['routine'] instanceof String)) {
            throw new Error("Expected the field `routine` to be a primitive type in the JSON string but got " + data['routine']);
        }

        return true;
    }


}



/**
 * A predefined masking expression.
 * @member {module:model/DataMaskingPolicy.PredefinedExpressionEnum} predefinedExpression
 */
DataMaskingPolicy.prototype['predefinedExpression'] = undefined;

/**
 * The name of the BigQuery routine that contains the custom masking routine, in the format of `projects/{project_number}/datasets/{dataset_id}/routines/{routine_id}`.
 * @member {String} routine
 */
DataMaskingPolicy.prototype['routine'] = undefined;





/**
 * Allowed values for the <code>predefinedExpression</code> property.
 * @enum {String}
 * @readonly
 */
DataMaskingPolicy['PredefinedExpressionEnum'] = {

    /**
     * value: "PREDEFINED_EXPRESSION_UNSPECIFIED"
     * @const
     */
    "PREDEFINED_EXPRESSION_UNSPECIFIED": "PREDEFINED_EXPRESSION_UNSPECIFIED",

    /**
     * value: "SHA256"
     * @const
     */
    "SHA256": "SHA256",

    /**
     * value: "ALWAYS_NULL"
     * @const
     */
    "ALWAYS_NULL": "ALWAYS_NULL",

    /**
     * value: "DEFAULT_MASKING_VALUE"
     * @const
     */
    "DEFAULT_MASKING_VALUE": "DEFAULT_MASKING_VALUE",

    /**
     * value: "LAST_FOUR_CHARACTERS"
     * @const
     */
    "LAST_FOUR_CHARACTERS": "LAST_FOUR_CHARACTERS",

    /**
     * value: "FIRST_FOUR_CHARACTERS"
     * @const
     */
    "FIRST_FOUR_CHARACTERS": "FIRST_FOUR_CHARACTERS",

    /**
     * value: "EMAIL_MASK"
     * @const
     */
    "EMAIL_MASK": "EMAIL_MASK",

    /**
     * value: "DATE_YEAR_MASK"
     * @const
     */
    "DATE_YEAR_MASK": "DATE_YEAR_MASK"
};



export default DataMaskingPolicy;

