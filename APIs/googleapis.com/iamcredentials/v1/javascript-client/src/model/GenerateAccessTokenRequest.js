/**
 * IAM Service Account Credentials API
 * Creates short-lived credentials for impersonating IAM service accounts. To enable this API, you must enable the IAM API (iam.googleapis.com). 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GenerateAccessTokenRequest model module.
 * @module model/GenerateAccessTokenRequest
 * @version v1
 */
class GenerateAccessTokenRequest {
    /**
     * Constructs a new <code>GenerateAccessTokenRequest</code>.
     * @alias module:model/GenerateAccessTokenRequest
     */
    constructor() { 
        
        GenerateAccessTokenRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GenerateAccessTokenRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenerateAccessTokenRequest} obj Optional instance to populate.
     * @return {module:model/GenerateAccessTokenRequest} The populated <code>GenerateAccessTokenRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenerateAccessTokenRequest();

            if (data.hasOwnProperty('delegates')) {
                obj['delegates'] = ApiClient.convertToType(data['delegates'], ['String']);
            }
            if (data.hasOwnProperty('lifetime')) {
                obj['lifetime'] = ApiClient.convertToType(data['lifetime'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GenerateAccessTokenRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GenerateAccessTokenRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['delegates'])) {
            throw new Error("Expected the field `delegates` to be an array in the JSON data but got " + data['delegates']);
        }
        // ensure the json data is a string
        if (data['lifetime'] && !(typeof data['lifetime'] === 'string' || data['lifetime'] instanceof String)) {
            throw new Error("Expected the field `lifetime` to be a primitive type in the JSON string but got " + data['lifetime']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['scope'])) {
            throw new Error("Expected the field `scope` to be an array in the JSON data but got " + data['scope']);
        }

        return true;
    }


}



/**
 * The sequence of service accounts in a delegation chain. This field is required for [delegated requests](https://cloud.google.com/iam/help/credentials/delegated-request). For [direct requests](https://cloud.google.com/iam/help/credentials/direct-request), which are more common, do not specify this field. Each service account must be granted the `roles/iam.serviceAccountTokenCreator` role on its next service account in the chain. The last service account in the chain must be granted the `roles/iam.serviceAccountTokenCreator` role on the service account that is specified in the `name` field of the request. The delegates must have the following format: `projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard character is required; replacing it with a project ID is invalid.
 * @member {Array.<String>} delegates
 */
GenerateAccessTokenRequest.prototype['delegates'] = undefined;

/**
 * The desired lifetime duration of the access token in seconds. By default, the maximum allowed value is 1 hour. To set a lifetime of up to 12 hours, you can add the service account as an allowed value in an Organization Policy that enforces the `constraints/iam.allowServiceAccountCredentialLifetimeExtension` constraint. See detailed instructions at https://cloud.google.com/iam/help/credentials/lifetime If a value is not specified, the token's lifetime will be set to a default value of 1 hour.
 * @member {String} lifetime
 */
GenerateAccessTokenRequest.prototype['lifetime'] = undefined;

/**
 * Required. Code to identify the scopes to be included in the OAuth 2.0 access token. See https://developers.google.com/identity/protocols/googlescopes for more information. At least one value required.
 * @member {Array.<String>} scope
 */
GenerateAccessTokenRequest.prototype['scope'] = undefined;






export default GenerateAccessTokenRequest;

