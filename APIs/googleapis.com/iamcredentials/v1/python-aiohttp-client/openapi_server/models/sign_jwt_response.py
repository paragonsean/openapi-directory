# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SignJwtResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_id: str=None, signed_jwt: str=None):
        """SignJwtResponse - a model defined in OpenAPI

        :param key_id: The key_id of this SignJwtResponse.
        :param signed_jwt: The signed_jwt of this SignJwtResponse.
        """
        self.openapi_types = {
            'key_id': str,
            'signed_jwt': str
        }

        self.attribute_map = {
            'key_id': 'keyId',
            'signed_jwt': 'signedJwt'
        }

        self._key_id = key_id
        self._signed_jwt = signed_jwt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SignJwtResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SignJwtResponse of this SignJwtResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_id(self):
        """Gets the key_id of this SignJwtResponse.

        The ID of the key used to sign the JWT. The key used for signing will remain valid for at least 12 hours after the JWT is signed. To verify the signature, you can retrieve the public key in several formats from the following endpoints: - RSA public key wrapped in an X.509 v3 certificate: `https://www.googleapis.com/service_accounts/v1/metadata/x509/{ACCOUNT_EMAIL}` - Raw key in JSON format: `https://www.googleapis.com/service_accounts/v1/metadata/raw/{ACCOUNT_EMAIL}` - JSON Web Key (JWK): `https://www.googleapis.com/service_accounts/v1/metadata/jwk/{ACCOUNT_EMAIL}`

        :return: The key_id of this SignJwtResponse.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this SignJwtResponse.

        The ID of the key used to sign the JWT. The key used for signing will remain valid for at least 12 hours after the JWT is signed. To verify the signature, you can retrieve the public key in several formats from the following endpoints: - RSA public key wrapped in an X.509 v3 certificate: `https://www.googleapis.com/service_accounts/v1/metadata/x509/{ACCOUNT_EMAIL}` - Raw key in JSON format: `https://www.googleapis.com/service_accounts/v1/metadata/raw/{ACCOUNT_EMAIL}` - JSON Web Key (JWK): `https://www.googleapis.com/service_accounts/v1/metadata/jwk/{ACCOUNT_EMAIL}`

        :param key_id: The key_id of this SignJwtResponse.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def signed_jwt(self):
        """Gets the signed_jwt of this SignJwtResponse.

        The signed JWT. Contains the automatically generated header; the client-supplied payload; and the signature, which is generated using the key referenced by the `kid` field in the header. After the key pair referenced by the `key_id` response field expires, Google no longer exposes the public key that can be used to verify the JWT. As a result, the receiver can no longer verify the signature.

        :return: The signed_jwt of this SignJwtResponse.
        :rtype: str
        """
        return self._signed_jwt

    @signed_jwt.setter
    def signed_jwt(self, signed_jwt):
        """Sets the signed_jwt of this SignJwtResponse.

        The signed JWT. Contains the automatically generated header; the client-supplied payload; and the signature, which is generated using the key referenced by the `kid` field in the header. After the key pair referenced by the `key_id` response field expires, Google no longer exposes the public key that can be used to verify the JWT. As a result, the receiver can no longer verify the signature.

        :param signed_jwt: The signed_jwt of this SignJwtResponse.
        :type signed_jwt: str
        """

        self._signed_jwt = signed_jwt
