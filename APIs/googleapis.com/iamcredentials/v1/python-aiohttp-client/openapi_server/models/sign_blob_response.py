# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SignBlobResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_id: str=None, signed_blob: str=None):
        """SignBlobResponse - a model defined in OpenAPI

        :param key_id: The key_id of this SignBlobResponse.
        :param signed_blob: The signed_blob of this SignBlobResponse.
        """
        self.openapi_types = {
            'key_id': str,
            'signed_blob': str
        }

        self.attribute_map = {
            'key_id': 'keyId',
            'signed_blob': 'signedBlob'
        }

        self._key_id = key_id
        self._signed_blob = signed_blob

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SignBlobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SignBlobResponse of this SignBlobResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_id(self):
        """Gets the key_id of this SignBlobResponse.

        The ID of the key used to sign the blob. The key used for signing will remain valid for at least 12 hours after the blob is signed. To verify the signature, you can retrieve the public key in several formats from the following endpoints: - RSA public key wrapped in an X.509 v3 certificate: `https://www.googleapis.com/service_accounts/v1/metadata/x509/{ACCOUNT_EMAIL}` - Raw key in JSON format: `https://www.googleapis.com/service_accounts/v1/metadata/raw/{ACCOUNT_EMAIL}` - JSON Web Key (JWK): `https://www.googleapis.com/service_accounts/v1/metadata/jwk/{ACCOUNT_EMAIL}`

        :return: The key_id of this SignBlobResponse.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this SignBlobResponse.

        The ID of the key used to sign the blob. The key used for signing will remain valid for at least 12 hours after the blob is signed. To verify the signature, you can retrieve the public key in several formats from the following endpoints: - RSA public key wrapped in an X.509 v3 certificate: `https://www.googleapis.com/service_accounts/v1/metadata/x509/{ACCOUNT_EMAIL}` - Raw key in JSON format: `https://www.googleapis.com/service_accounts/v1/metadata/raw/{ACCOUNT_EMAIL}` - JSON Web Key (JWK): `https://www.googleapis.com/service_accounts/v1/metadata/jwk/{ACCOUNT_EMAIL}`

        :param key_id: The key_id of this SignBlobResponse.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def signed_blob(self):
        """Gets the signed_blob of this SignBlobResponse.

        The signature for the blob. Does not include the original blob. After the key pair referenced by the `key_id` response field expires, Google no longer exposes the public key that can be used to verify the blob. As a result, the receiver can no longer verify the signature.

        :return: The signed_blob of this SignBlobResponse.
        :rtype: str
        """
        return self._signed_blob

    @signed_blob.setter
    def signed_blob(self, signed_blob):
        """Sets the signed_blob of this SignBlobResponse.

        The signature for the blob. Does not include the original blob. After the key pair referenced by the `key_id` response field expires, Google no longer exposes the public key that can be used to verify the blob. As a result, the receiver can no longer verify the signature.

        :param signed_blob: The signed_blob of this SignBlobResponse.
        :type signed_blob: str
        """

        self._signed_blob = signed_blob
