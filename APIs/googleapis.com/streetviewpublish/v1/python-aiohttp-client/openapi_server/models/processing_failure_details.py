# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.gps_data_gap_failure_details import GpsDataGapFailureDetails
from openapi_server.models.imu_data_gap_failure_details import ImuDataGapFailureDetails
from openapi_server.models.insufficient_gps_failure_details import InsufficientGpsFailureDetails
from openapi_server.models.no_overlap_gps_failure_details import NoOverlapGpsFailureDetails
from openapi_server.models.not_outdoors_failure_details import NotOutdoorsFailureDetails
from openapi_server import util


class ProcessingFailureDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gps_data_gap_details: GpsDataGapFailureDetails=None, imu_data_gap_details: ImuDataGapFailureDetails=None, insufficient_gps_details: InsufficientGpsFailureDetails=None, no_overlap_gps_details: NoOverlapGpsFailureDetails=None, not_outdoors_details: NotOutdoorsFailureDetails=None):
        """ProcessingFailureDetails - a model defined in OpenAPI

        :param gps_data_gap_details: The gps_data_gap_details of this ProcessingFailureDetails.
        :param imu_data_gap_details: The imu_data_gap_details of this ProcessingFailureDetails.
        :param insufficient_gps_details: The insufficient_gps_details of this ProcessingFailureDetails.
        :param no_overlap_gps_details: The no_overlap_gps_details of this ProcessingFailureDetails.
        :param not_outdoors_details: The not_outdoors_details of this ProcessingFailureDetails.
        """
        self.openapi_types = {
            'gps_data_gap_details': GpsDataGapFailureDetails,
            'imu_data_gap_details': ImuDataGapFailureDetails,
            'insufficient_gps_details': InsufficientGpsFailureDetails,
            'no_overlap_gps_details': NoOverlapGpsFailureDetails,
            'not_outdoors_details': NotOutdoorsFailureDetails
        }

        self.attribute_map = {
            'gps_data_gap_details': 'gpsDataGapDetails',
            'imu_data_gap_details': 'imuDataGapDetails',
            'insufficient_gps_details': 'insufficientGpsDetails',
            'no_overlap_gps_details': 'noOverlapGpsDetails',
            'not_outdoors_details': 'notOutdoorsDetails'
        }

        self._gps_data_gap_details = gps_data_gap_details
        self._imu_data_gap_details = imu_data_gap_details
        self._insufficient_gps_details = insufficient_gps_details
        self._no_overlap_gps_details = no_overlap_gps_details
        self._not_outdoors_details = not_outdoors_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProcessingFailureDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProcessingFailureDetails of this ProcessingFailureDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gps_data_gap_details(self):
        """Gets the gps_data_gap_details of this ProcessingFailureDetails.


        :return: The gps_data_gap_details of this ProcessingFailureDetails.
        :rtype: GpsDataGapFailureDetails
        """
        return self._gps_data_gap_details

    @gps_data_gap_details.setter
    def gps_data_gap_details(self, gps_data_gap_details):
        """Sets the gps_data_gap_details of this ProcessingFailureDetails.


        :param gps_data_gap_details: The gps_data_gap_details of this ProcessingFailureDetails.
        :type gps_data_gap_details: GpsDataGapFailureDetails
        """

        self._gps_data_gap_details = gps_data_gap_details

    @property
    def imu_data_gap_details(self):
        """Gets the imu_data_gap_details of this ProcessingFailureDetails.


        :return: The imu_data_gap_details of this ProcessingFailureDetails.
        :rtype: ImuDataGapFailureDetails
        """
        return self._imu_data_gap_details

    @imu_data_gap_details.setter
    def imu_data_gap_details(self, imu_data_gap_details):
        """Sets the imu_data_gap_details of this ProcessingFailureDetails.


        :param imu_data_gap_details: The imu_data_gap_details of this ProcessingFailureDetails.
        :type imu_data_gap_details: ImuDataGapFailureDetails
        """

        self._imu_data_gap_details = imu_data_gap_details

    @property
    def insufficient_gps_details(self):
        """Gets the insufficient_gps_details of this ProcessingFailureDetails.


        :return: The insufficient_gps_details of this ProcessingFailureDetails.
        :rtype: InsufficientGpsFailureDetails
        """
        return self._insufficient_gps_details

    @insufficient_gps_details.setter
    def insufficient_gps_details(self, insufficient_gps_details):
        """Sets the insufficient_gps_details of this ProcessingFailureDetails.


        :param insufficient_gps_details: The insufficient_gps_details of this ProcessingFailureDetails.
        :type insufficient_gps_details: InsufficientGpsFailureDetails
        """

        self._insufficient_gps_details = insufficient_gps_details

    @property
    def no_overlap_gps_details(self):
        """Gets the no_overlap_gps_details of this ProcessingFailureDetails.


        :return: The no_overlap_gps_details of this ProcessingFailureDetails.
        :rtype: NoOverlapGpsFailureDetails
        """
        return self._no_overlap_gps_details

    @no_overlap_gps_details.setter
    def no_overlap_gps_details(self, no_overlap_gps_details):
        """Sets the no_overlap_gps_details of this ProcessingFailureDetails.


        :param no_overlap_gps_details: The no_overlap_gps_details of this ProcessingFailureDetails.
        :type no_overlap_gps_details: NoOverlapGpsFailureDetails
        """

        self._no_overlap_gps_details = no_overlap_gps_details

    @property
    def not_outdoors_details(self):
        """Gets the not_outdoors_details of this ProcessingFailureDetails.


        :return: The not_outdoors_details of this ProcessingFailureDetails.
        :rtype: NotOutdoorsFailureDetails
        """
        return self._not_outdoors_details

    @not_outdoors_details.setter
    def not_outdoors_details(self, not_outdoors_details):
        """Sets the not_outdoors_details of this ProcessingFailureDetails.


        :param not_outdoors_details: The not_outdoors_details of this ProcessingFailureDetails.
        :type not_outdoors_details: NotOutdoorsFailureDetails
        """

        self._not_outdoors_details = not_outdoors_details
