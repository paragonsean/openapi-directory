# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.photo import Photo
from openapi_server import util


class ListPhotosResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, next_page_token: str=None, photos: List[Photo]=None):
        """ListPhotosResponse - a model defined in OpenAPI

        :param next_page_token: The next_page_token of this ListPhotosResponse.
        :param photos: The photos of this ListPhotosResponse.
        """
        self.openapi_types = {
            'next_page_token': str,
            'photos': List[Photo]
        }

        self.attribute_map = {
            'next_page_token': 'nextPageToken',
            'photos': 'photos'
        }

        self._next_page_token = next_page_token
        self._photos = photos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListPhotosResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListPhotosResponse of this ListPhotosResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ListPhotosResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :return: The next_page_token of this ListPhotosResponse.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ListPhotosResponse.

        Token to retrieve the next page of results, or empty if there are no more results in the list.

        :param next_page_token: The next_page_token of this ListPhotosResponse.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def photos(self):
        """Gets the photos of this ListPhotosResponse.

        List of photos. The pageSize field in the request determines the number of items returned.

        :return: The photos of this ListPhotosResponse.
        :rtype: List[Photo]
        """
        return self._photos

    @photos.setter
    def photos(self, photos):
        """Sets the photos of this ListPhotosResponse.

        List of photos. The pageSize field in the request determines the number of items returned.

        :param photos: The photos of this ListPhotosResponse.
        :type photos: List[Photo]
        """

        self._photos = photos
