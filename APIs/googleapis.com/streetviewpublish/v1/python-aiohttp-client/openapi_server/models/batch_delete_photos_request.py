# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchDeletePhotosRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, photo_ids: List[str]=None):
        """BatchDeletePhotosRequest - a model defined in OpenAPI

        :param photo_ids: The photo_ids of this BatchDeletePhotosRequest.
        """
        self.openapi_types = {
            'photo_ids': List[str]
        }

        self.attribute_map = {
            'photo_ids': 'photoIds'
        }

        self._photo_ids = photo_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchDeletePhotosRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchDeletePhotosRequest of this BatchDeletePhotosRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def photo_ids(self):
        """Gets the photo_ids of this BatchDeletePhotosRequest.

        Required. IDs of the Photos. HTTP GET requests require the following syntax for the URL query parameter: `photoIds=&photoIds=&...`.

        :return: The photo_ids of this BatchDeletePhotosRequest.
        :rtype: List[str]
        """
        return self._photo_ids

    @photo_ids.setter
    def photo_ids(self, photo_ids):
        """Sets the photo_ids of this BatchDeletePhotosRequest.

        Required. IDs of the Photos. HTTP GET requests require the following syntax for the URL query parameter: `photoIds=&photoIds=&...`.

        :param photo_ids: The photo_ids of this BatchDeletePhotosRequest.
        :type photo_ids: List[str]
        """

        self._photo_ids = photo_ids
