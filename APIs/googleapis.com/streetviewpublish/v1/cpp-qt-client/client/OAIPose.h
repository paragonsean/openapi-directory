/**
 * Street View Publish API
 * Publishes 360 photos to Google Maps, along with position, orientation, and connectivity metadata. Apps can offer an interface for positioning, connecting, and uploading user-generated Street View images. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPose.h
 *
 * Raw pose measurement for an entity.
 */

#ifndef OAIPose_H
#define OAIPose_H

#include <QJsonObject>

#include "OAILatLng.h"
#include "OAILevel.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILatLng;
class OAILevel;

class OAIPose : public OAIObject {
public:
    OAIPose();
    OAIPose(QString json);
    ~OAIPose() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getAccuracyMeters() const;
    void setAccuracyMeters(const float &accuracy_meters);
    bool is_accuracy_meters_Set() const;
    bool is_accuracy_meters_Valid() const;

    double getAltitude() const;
    void setAltitude(const double &altitude);
    bool is_altitude_Set() const;
    bool is_altitude_Valid() const;

    QString getGpsRecordTimestampUnixEpoch() const;
    void setGpsRecordTimestampUnixEpoch(const QString &gps_record_timestamp_unix_epoch);
    bool is_gps_record_timestamp_unix_epoch_Set() const;
    bool is_gps_record_timestamp_unix_epoch_Valid() const;

    double getHeading() const;
    void setHeading(const double &heading);
    bool is_heading_Set() const;
    bool is_heading_Valid() const;

    OAILatLng getLatLngPair() const;
    void setLatLngPair(const OAILatLng &lat_lng_pair);
    bool is_lat_lng_pair_Set() const;
    bool is_lat_lng_pair_Valid() const;

    OAILevel getLevel() const;
    void setLevel(const OAILevel &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    double getPitch() const;
    void setPitch(const double &pitch);
    bool is_pitch_Set() const;
    bool is_pitch_Valid() const;

    double getRoll() const;
    void setRoll(const double &roll);
    bool is_roll_Set() const;
    bool is_roll_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_accuracy_meters;
    bool m_accuracy_meters_isSet;
    bool m_accuracy_meters_isValid;

    double m_altitude;
    bool m_altitude_isSet;
    bool m_altitude_isValid;

    QString m_gps_record_timestamp_unix_epoch;
    bool m_gps_record_timestamp_unix_epoch_isSet;
    bool m_gps_record_timestamp_unix_epoch_isValid;

    double m_heading;
    bool m_heading_isSet;
    bool m_heading_isValid;

    OAILatLng m_lat_lng_pair;
    bool m_lat_lng_pair_isSet;
    bool m_lat_lng_pair_isValid;

    OAILevel m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    double m_pitch;
    bool m_pitch_isSet;
    bool m_pitch_isValid;

    double m_roll;
    bool m_roll_isSet;
    bool m_roll_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPose)

#endif // OAIPose_H
