/**
 * Street View Publish API
 * Publishes 360 photos to Google Maps, along with position, orientation, and connectivity metadata. Apps can offer an interface for positioning, connecting, and uploading user-generated Street View images. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdatePhotoRequest from './UpdatePhotoRequest';

/**
 * The BatchUpdatePhotosRequest model module.
 * @module model/BatchUpdatePhotosRequest
 * @version v1
 */
class BatchUpdatePhotosRequest {
    /**
     * Constructs a new <code>BatchUpdatePhotosRequest</code>.
     * Request to update the metadata of photos. Updating the pixels of photos is not supported.
     * @alias module:model/BatchUpdatePhotosRequest
     */
    constructor() { 
        
        BatchUpdatePhotosRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchUpdatePhotosRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchUpdatePhotosRequest} obj Optional instance to populate.
     * @return {module:model/BatchUpdatePhotosRequest} The populated <code>BatchUpdatePhotosRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchUpdatePhotosRequest();

            if (data.hasOwnProperty('updatePhotoRequests')) {
                obj['updatePhotoRequests'] = ApiClient.convertToType(data['updatePhotoRequests'], [UpdatePhotoRequest]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchUpdatePhotosRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchUpdatePhotosRequest</code>.
     */
    static validateJSON(data) {
        if (data['updatePhotoRequests']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['updatePhotoRequests'])) {
                throw new Error("Expected the field `updatePhotoRequests` to be an array in the JSON data but got " + data['updatePhotoRequests']);
            }
            // validate the optional field `updatePhotoRequests` (array)
            for (const item of data['updatePhotoRequests']) {
                UpdatePhotoRequest.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. List of UpdatePhotoRequests.
 * @member {Array.<module:model/UpdatePhotoRequest>} updatePhotoRequests
 */
BatchUpdatePhotosRequest.prototype['updatePhotoRequests'] = undefined;






export default BatchUpdatePhotosRequest;

