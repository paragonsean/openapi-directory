/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputDataChange from './InputDataChange';

/**
 * The StagePerformanceChangeInsight model module.
 * @module model/StagePerformanceChangeInsight
 * @version v2
 */
class StagePerformanceChangeInsight {
    /**
     * Constructs a new <code>StagePerformanceChangeInsight</code>.
     * Performance insights compared to the previous executions for a specific stage.
     * @alias module:model/StagePerformanceChangeInsight
     */
    constructor() { 
        
        StagePerformanceChangeInsight.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StagePerformanceChangeInsight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StagePerformanceChangeInsight} obj Optional instance to populate.
     * @return {module:model/StagePerformanceChangeInsight} The populated <code>StagePerformanceChangeInsight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StagePerformanceChangeInsight();

            if (data.hasOwnProperty('inputDataChange')) {
                obj['inputDataChange'] = InputDataChange.constructFromObject(data['inputDataChange']);
            }
            if (data.hasOwnProperty('stageId')) {
                obj['stageId'] = ApiClient.convertToType(data['stageId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StagePerformanceChangeInsight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StagePerformanceChangeInsight</code>.
     */
    static validateJSON(data) {
        // validate the optional field `inputDataChange`
        if (data['inputDataChange']) { // data not null
          InputDataChange.validateJSON(data['inputDataChange']);
        }
        // ensure the json data is a string
        if (data['stageId'] && !(typeof data['stageId'] === 'string' || data['stageId'] instanceof String)) {
            throw new Error("Expected the field `stageId` to be a primitive type in the JSON string but got " + data['stageId']);
        }

        return true;
    }


}



/**
 * @member {module:model/InputDataChange} inputDataChange
 */
StagePerformanceChangeInsight.prototype['inputDataChange'] = undefined;

/**
 * Output only. The stage id that the insight mapped to.
 * @member {String} stageId
 */
StagePerformanceChangeInsight.prototype['stageId'] = undefined;






export default StagePerformanceChangeInsight;

