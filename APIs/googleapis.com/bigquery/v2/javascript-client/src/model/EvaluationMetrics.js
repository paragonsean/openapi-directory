/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ArimaForecastingMetrics from './ArimaForecastingMetrics';
import BinaryClassificationMetrics from './BinaryClassificationMetrics';
import ClusteringMetrics from './ClusteringMetrics';
import DimensionalityReductionMetrics from './DimensionalityReductionMetrics';
import MultiClassClassificationMetrics from './MultiClassClassificationMetrics';
import RankingMetrics from './RankingMetrics';
import RegressionMetrics from './RegressionMetrics';

/**
 * The EvaluationMetrics model module.
 * @module model/EvaluationMetrics
 * @version v2
 */
class EvaluationMetrics {
    /**
     * Constructs a new <code>EvaluationMetrics</code>.
     * Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
     * @alias module:model/EvaluationMetrics
     */
    constructor() { 
        
        EvaluationMetrics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EvaluationMetrics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EvaluationMetrics} obj Optional instance to populate.
     * @return {module:model/EvaluationMetrics} The populated <code>EvaluationMetrics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EvaluationMetrics();

            if (data.hasOwnProperty('arimaForecastingMetrics')) {
                obj['arimaForecastingMetrics'] = ArimaForecastingMetrics.constructFromObject(data['arimaForecastingMetrics']);
            }
            if (data.hasOwnProperty('binaryClassificationMetrics')) {
                obj['binaryClassificationMetrics'] = BinaryClassificationMetrics.constructFromObject(data['binaryClassificationMetrics']);
            }
            if (data.hasOwnProperty('clusteringMetrics')) {
                obj['clusteringMetrics'] = ClusteringMetrics.constructFromObject(data['clusteringMetrics']);
            }
            if (data.hasOwnProperty('dimensionalityReductionMetrics')) {
                obj['dimensionalityReductionMetrics'] = DimensionalityReductionMetrics.constructFromObject(data['dimensionalityReductionMetrics']);
            }
            if (data.hasOwnProperty('multiClassClassificationMetrics')) {
                obj['multiClassClassificationMetrics'] = MultiClassClassificationMetrics.constructFromObject(data['multiClassClassificationMetrics']);
            }
            if (data.hasOwnProperty('rankingMetrics')) {
                obj['rankingMetrics'] = RankingMetrics.constructFromObject(data['rankingMetrics']);
            }
            if (data.hasOwnProperty('regressionMetrics')) {
                obj['regressionMetrics'] = RegressionMetrics.constructFromObject(data['regressionMetrics']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EvaluationMetrics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EvaluationMetrics</code>.
     */
    static validateJSON(data) {
        // validate the optional field `arimaForecastingMetrics`
        if (data['arimaForecastingMetrics']) { // data not null
          ArimaForecastingMetrics.validateJSON(data['arimaForecastingMetrics']);
        }
        // validate the optional field `binaryClassificationMetrics`
        if (data['binaryClassificationMetrics']) { // data not null
          BinaryClassificationMetrics.validateJSON(data['binaryClassificationMetrics']);
        }
        // validate the optional field `clusteringMetrics`
        if (data['clusteringMetrics']) { // data not null
          ClusteringMetrics.validateJSON(data['clusteringMetrics']);
        }
        // validate the optional field `dimensionalityReductionMetrics`
        if (data['dimensionalityReductionMetrics']) { // data not null
          DimensionalityReductionMetrics.validateJSON(data['dimensionalityReductionMetrics']);
        }
        // validate the optional field `multiClassClassificationMetrics`
        if (data['multiClassClassificationMetrics']) { // data not null
          MultiClassClassificationMetrics.validateJSON(data['multiClassClassificationMetrics']);
        }
        // validate the optional field `rankingMetrics`
        if (data['rankingMetrics']) { // data not null
          RankingMetrics.validateJSON(data['rankingMetrics']);
        }
        // validate the optional field `regressionMetrics`
        if (data['regressionMetrics']) { // data not null
          RegressionMetrics.validateJSON(data['regressionMetrics']);
        }

        return true;
    }


}



/**
 * @member {module:model/ArimaForecastingMetrics} arimaForecastingMetrics
 */
EvaluationMetrics.prototype['arimaForecastingMetrics'] = undefined;

/**
 * @member {module:model/BinaryClassificationMetrics} binaryClassificationMetrics
 */
EvaluationMetrics.prototype['binaryClassificationMetrics'] = undefined;

/**
 * @member {module:model/ClusteringMetrics} clusteringMetrics
 */
EvaluationMetrics.prototype['clusteringMetrics'] = undefined;

/**
 * @member {module:model/DimensionalityReductionMetrics} dimensionalityReductionMetrics
 */
EvaluationMetrics.prototype['dimensionalityReductionMetrics'] = undefined;

/**
 * @member {module:model/MultiClassClassificationMetrics} multiClassClassificationMetrics
 */
EvaluationMetrics.prototype['multiClassClassificationMetrics'] = undefined;

/**
 * @member {module:model/RankingMetrics} rankingMetrics
 */
EvaluationMetrics.prototype['rankingMetrics'] = undefined;

/**
 * @member {module:model/RegressionMetrics} regressionMetrics
 */
EvaluationMetrics.prototype['regressionMetrics'] = undefined;






export default EvaluationMetrics;

