/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ErrorProto model module.
 * @module model/ErrorProto
 * @version v2
 */
class ErrorProto {
    /**
     * Constructs a new <code>ErrorProto</code>.
     * Error details.
     * @alias module:model/ErrorProto
     */
    constructor() { 
        
        ErrorProto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErrorProto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorProto} obj Optional instance to populate.
     * @return {module:model/ErrorProto} The populated <code>ErrorProto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorProto();

            if (data.hasOwnProperty('debugInfo')) {
                obj['debugInfo'] = ApiClient.convertToType(data['debugInfo'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorProto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorProto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['debugInfo'] && !(typeof data['debugInfo'] === 'string' || data['debugInfo'] instanceof String)) {
            throw new Error("Expected the field `debugInfo` to be a primitive type in the JSON string but got " + data['debugInfo']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }

        return true;
    }


}



/**
 * Debugging information. This property is internal to Google and should not be used.
 * @member {String} debugInfo
 */
ErrorProto.prototype['debugInfo'] = undefined;

/**
 * Specifies where the error occurred, if present.
 * @member {String} location
 */
ErrorProto.prototype['location'] = undefined;

/**
 * A human-readable description of the error.
 * @member {String} message
 */
ErrorProto.prototype['message'] = undefined;

/**
 * A short error code that summarizes the error.
 * @member {String} reason
 */
ErrorProto.prototype['reason'] = undefined;






export default ErrorProto;

