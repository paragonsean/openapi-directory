/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataMaskingStatistics from './DataMaskingStatistics';
import JobStatistics2 from './JobStatistics2';
import JobStatistics3 from './JobStatistics3';
import JobStatistics4 from './JobStatistics4';
import JobStatistics5 from './JobStatistics5';
import JobStatisticsReservationUsageInner from './JobStatisticsReservationUsageInner';
import RowLevelSecurityStatistics from './RowLevelSecurityStatistics';
import ScriptStatistics from './ScriptStatistics';
import SessionInfo from './SessionInfo';
import TransactionInfo from './TransactionInfo';

/**
 * The JobStatistics model module.
 * @module model/JobStatistics
 * @version v2
 */
class JobStatistics {
    /**
     * Constructs a new <code>JobStatistics</code>.
     * Statistics for a single job execution.
     * @alias module:model/JobStatistics
     */
    constructor() { 
        
        JobStatistics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobStatistics} obj Optional instance to populate.
     * @return {module:model/JobStatistics} The populated <code>JobStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobStatistics();

            if (data.hasOwnProperty('completionRatio')) {
                obj['completionRatio'] = ApiClient.convertToType(data['completionRatio'], 'Number');
            }
            if (data.hasOwnProperty('copy')) {
                obj['copy'] = JobStatistics5.constructFromObject(data['copy']);
            }
            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'String');
            }
            if (data.hasOwnProperty('dataMaskingStatistics')) {
                obj['dataMaskingStatistics'] = DataMaskingStatistics.constructFromObject(data['dataMaskingStatistics']);
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'String');
            }
            if (data.hasOwnProperty('extract')) {
                obj['extract'] = JobStatistics4.constructFromObject(data['extract']);
            }
            if (data.hasOwnProperty('finalExecutionDurationMs')) {
                obj['finalExecutionDurationMs'] = ApiClient.convertToType(data['finalExecutionDurationMs'], 'String');
            }
            if (data.hasOwnProperty('load')) {
                obj['load'] = JobStatistics3.constructFromObject(data['load']);
            }
            if (data.hasOwnProperty('numChildJobs')) {
                obj['numChildJobs'] = ApiClient.convertToType(data['numChildJobs'], 'String');
            }
            if (data.hasOwnProperty('parentJobId')) {
                obj['parentJobId'] = ApiClient.convertToType(data['parentJobId'], 'String');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = JobStatistics2.constructFromObject(data['query']);
            }
            if (data.hasOwnProperty('quotaDeferments')) {
                obj['quotaDeferments'] = ApiClient.convertToType(data['quotaDeferments'], ['String']);
            }
            if (data.hasOwnProperty('reservationUsage')) {
                obj['reservationUsage'] = ApiClient.convertToType(data['reservationUsage'], [JobStatisticsReservationUsageInner]);
            }
            if (data.hasOwnProperty('reservation_id')) {
                obj['reservation_id'] = ApiClient.convertToType(data['reservation_id'], 'String');
            }
            if (data.hasOwnProperty('rowLevelSecurityStatistics')) {
                obj['rowLevelSecurityStatistics'] = RowLevelSecurityStatistics.constructFromObject(data['rowLevelSecurityStatistics']);
            }
            if (data.hasOwnProperty('scriptStatistics')) {
                obj['scriptStatistics'] = ScriptStatistics.constructFromObject(data['scriptStatistics']);
            }
            if (data.hasOwnProperty('sessionInfo')) {
                obj['sessionInfo'] = SessionInfo.constructFromObject(data['sessionInfo']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'String');
            }
            if (data.hasOwnProperty('totalBytesProcessed')) {
                obj['totalBytesProcessed'] = ApiClient.convertToType(data['totalBytesProcessed'], 'String');
            }
            if (data.hasOwnProperty('totalSlotMs')) {
                obj['totalSlotMs'] = ApiClient.convertToType(data['totalSlotMs'], 'String');
            }
            if (data.hasOwnProperty('transactionInfo')) {
                obj['transactionInfo'] = TransactionInfo.constructFromObject(data['transactionInfo']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobStatistics</code>.
     */
    static validateJSON(data) {
        // validate the optional field `copy`
        if (data['copy']) { // data not null
          JobStatistics5.validateJSON(data['copy']);
        }
        // ensure the json data is a string
        if (data['creationTime'] && !(typeof data['creationTime'] === 'string' || data['creationTime'] instanceof String)) {
            throw new Error("Expected the field `creationTime` to be a primitive type in the JSON string but got " + data['creationTime']);
        }
        // validate the optional field `dataMaskingStatistics`
        if (data['dataMaskingStatistics']) { // data not null
          DataMaskingStatistics.validateJSON(data['dataMaskingStatistics']);
        }
        // ensure the json data is a string
        if (data['endTime'] && !(typeof data['endTime'] === 'string' || data['endTime'] instanceof String)) {
            throw new Error("Expected the field `endTime` to be a primitive type in the JSON string but got " + data['endTime']);
        }
        // validate the optional field `extract`
        if (data['extract']) { // data not null
          JobStatistics4.validateJSON(data['extract']);
        }
        // ensure the json data is a string
        if (data['finalExecutionDurationMs'] && !(typeof data['finalExecutionDurationMs'] === 'string' || data['finalExecutionDurationMs'] instanceof String)) {
            throw new Error("Expected the field `finalExecutionDurationMs` to be a primitive type in the JSON string but got " + data['finalExecutionDurationMs']);
        }
        // validate the optional field `load`
        if (data['load']) { // data not null
          JobStatistics3.validateJSON(data['load']);
        }
        // ensure the json data is a string
        if (data['numChildJobs'] && !(typeof data['numChildJobs'] === 'string' || data['numChildJobs'] instanceof String)) {
            throw new Error("Expected the field `numChildJobs` to be a primitive type in the JSON string but got " + data['numChildJobs']);
        }
        // ensure the json data is a string
        if (data['parentJobId'] && !(typeof data['parentJobId'] === 'string' || data['parentJobId'] instanceof String)) {
            throw new Error("Expected the field `parentJobId` to be a primitive type in the JSON string but got " + data['parentJobId']);
        }
        // validate the optional field `query`
        if (data['query']) { // data not null
          JobStatistics2.validateJSON(data['query']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['quotaDeferments'])) {
            throw new Error("Expected the field `quotaDeferments` to be an array in the JSON data but got " + data['quotaDeferments']);
        }
        if (data['reservationUsage']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reservationUsage'])) {
                throw new Error("Expected the field `reservationUsage` to be an array in the JSON data but got " + data['reservationUsage']);
            }
            // validate the optional field `reservationUsage` (array)
            for (const item of data['reservationUsage']) {
                JobStatisticsReservationUsageInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['reservation_id'] && !(typeof data['reservation_id'] === 'string' || data['reservation_id'] instanceof String)) {
            throw new Error("Expected the field `reservation_id` to be a primitive type in the JSON string but got " + data['reservation_id']);
        }
        // validate the optional field `rowLevelSecurityStatistics`
        if (data['rowLevelSecurityStatistics']) { // data not null
          RowLevelSecurityStatistics.validateJSON(data['rowLevelSecurityStatistics']);
        }
        // validate the optional field `scriptStatistics`
        if (data['scriptStatistics']) { // data not null
          ScriptStatistics.validateJSON(data['scriptStatistics']);
        }
        // validate the optional field `sessionInfo`
        if (data['sessionInfo']) { // data not null
          SessionInfo.validateJSON(data['sessionInfo']);
        }
        // ensure the json data is a string
        if (data['startTime'] && !(typeof data['startTime'] === 'string' || data['startTime'] instanceof String)) {
            throw new Error("Expected the field `startTime` to be a primitive type in the JSON string but got " + data['startTime']);
        }
        // ensure the json data is a string
        if (data['totalBytesProcessed'] && !(typeof data['totalBytesProcessed'] === 'string' || data['totalBytesProcessed'] instanceof String)) {
            throw new Error("Expected the field `totalBytesProcessed` to be a primitive type in the JSON string but got " + data['totalBytesProcessed']);
        }
        // ensure the json data is a string
        if (data['totalSlotMs'] && !(typeof data['totalSlotMs'] === 'string' || data['totalSlotMs'] instanceof String)) {
            throw new Error("Expected the field `totalSlotMs` to be a primitive type in the JSON string but got " + data['totalSlotMs']);
        }
        // validate the optional field `transactionInfo`
        if (data['transactionInfo']) { // data not null
          TransactionInfo.validateJSON(data['transactionInfo']);
        }

        return true;
    }


}



/**
 * Output only. [TrustedTester] Job progress (0.0 -> 1.0) for LOAD and EXTRACT jobs.
 * @member {Number} completionRatio
 */
JobStatistics.prototype['completionRatio'] = undefined;

/**
 * @member {module:model/JobStatistics5} copy
 */
JobStatistics.prototype['copy'] = undefined;

/**
 * Output only. Creation time of this job, in milliseconds since the epoch. This field will be present on all jobs.
 * @member {String} creationTime
 */
JobStatistics.prototype['creationTime'] = undefined;

/**
 * @member {module:model/DataMaskingStatistics} dataMaskingStatistics
 */
JobStatistics.prototype['dataMaskingStatistics'] = undefined;

/**
 * Output only. End time of this job, in milliseconds since the epoch. This field will be present whenever a job is in the DONE state.
 * @member {String} endTime
 */
JobStatistics.prototype['endTime'] = undefined;

/**
 * @member {module:model/JobStatistics4} extract
 */
JobStatistics.prototype['extract'] = undefined;

/**
 * Output only. The duration in milliseconds of the execution of the final attempt of this job, as BigQuery may internally re-attempt to execute the job.
 * @member {String} finalExecutionDurationMs
 */
JobStatistics.prototype['finalExecutionDurationMs'] = undefined;

/**
 * @member {module:model/JobStatistics3} load
 */
JobStatistics.prototype['load'] = undefined;

/**
 * Output only. Number of child jobs executed.
 * @member {String} numChildJobs
 */
JobStatistics.prototype['numChildJobs'] = undefined;

/**
 * Output only. If this is a child job, specifies the job ID of the parent.
 * @member {String} parentJobId
 */
JobStatistics.prototype['parentJobId'] = undefined;

/**
 * @member {module:model/JobStatistics2} query
 */
JobStatistics.prototype['query'] = undefined;

/**
 * Output only. Quotas which delayed this job's start time.
 * @member {Array.<String>} quotaDeferments
 */
JobStatistics.prototype['quotaDeferments'] = undefined;

/**
 * Output only. Job resource usage breakdown by reservation. This field reported misleading information and will no longer be populated.
 * @member {Array.<module:model/JobStatisticsReservationUsageInner>} reservationUsage
 */
JobStatistics.prototype['reservationUsage'] = undefined;

/**
 * Output only. Name of the primary reservation assigned to this job. Note that this could be different than reservations reported in the reservation usage field if parent reservations were used to execute this job.
 * @member {String} reservation_id
 */
JobStatistics.prototype['reservation_id'] = undefined;

/**
 * @member {module:model/RowLevelSecurityStatistics} rowLevelSecurityStatistics
 */
JobStatistics.prototype['rowLevelSecurityStatistics'] = undefined;

/**
 * @member {module:model/ScriptStatistics} scriptStatistics
 */
JobStatistics.prototype['scriptStatistics'] = undefined;

/**
 * @member {module:model/SessionInfo} sessionInfo
 */
JobStatistics.prototype['sessionInfo'] = undefined;

/**
 * Output only. Start time of this job, in milliseconds since the epoch. This field will be present when the job transitions from the PENDING state to either RUNNING or DONE.
 * @member {String} startTime
 */
JobStatistics.prototype['startTime'] = undefined;

/**
 * Output only. Total bytes processed for the job.
 * @member {String} totalBytesProcessed
 */
JobStatistics.prototype['totalBytesProcessed'] = undefined;

/**
 * Output only. Slot-milliseconds for the job.
 * @member {String} totalSlotMs
 */
JobStatistics.prototype['totalSlotMs'] = undefined;

/**
 * @member {module:model/TransactionInfo} transactionInfo
 */
JobStatistics.prototype['transactionInfo'] = undefined;






export default JobStatistics;

