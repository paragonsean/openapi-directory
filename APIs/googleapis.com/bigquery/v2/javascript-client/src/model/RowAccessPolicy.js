/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RowAccessPolicyReference from './RowAccessPolicyReference';

/**
 * The RowAccessPolicy model module.
 * @module model/RowAccessPolicy
 * @version v2
 */
class RowAccessPolicy {
    /**
     * Constructs a new <code>RowAccessPolicy</code>.
     * Represents access on a subset of rows on the specified table, defined by its filter predicate. Access to the subset of rows is controlled by its IAM policy.
     * @alias module:model/RowAccessPolicy
     */
    constructor() { 
        
        RowAccessPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RowAccessPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RowAccessPolicy} obj Optional instance to populate.
     * @return {module:model/RowAccessPolicy} The populated <code>RowAccessPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RowAccessPolicy();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('filterPredicate')) {
                obj['filterPredicate'] = ApiClient.convertToType(data['filterPredicate'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'String');
            }
            if (data.hasOwnProperty('rowAccessPolicyReference')) {
                obj['rowAccessPolicyReference'] = RowAccessPolicyReference.constructFromObject(data['rowAccessPolicyReference']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RowAccessPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RowAccessPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['creationTime'] && !(typeof data['creationTime'] === 'string' || data['creationTime'] instanceof String)) {
            throw new Error("Expected the field `creationTime` to be a primitive type in the JSON string but got " + data['creationTime']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['filterPredicate'] && !(typeof data['filterPredicate'] === 'string' || data['filterPredicate'] instanceof String)) {
            throw new Error("Expected the field `filterPredicate` to be a primitive type in the JSON string but got " + data['filterPredicate']);
        }
        // ensure the json data is a string
        if (data['lastModifiedTime'] && !(typeof data['lastModifiedTime'] === 'string' || data['lastModifiedTime'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedTime` to be a primitive type in the JSON string but got " + data['lastModifiedTime']);
        }
        // validate the optional field `rowAccessPolicyReference`
        if (data['rowAccessPolicyReference']) { // data not null
          RowAccessPolicyReference.validateJSON(data['rowAccessPolicyReference']);
        }

        return true;
    }


}



/**
 * Output only. The time when this row access policy was created, in milliseconds since the epoch.
 * @member {String} creationTime
 */
RowAccessPolicy.prototype['creationTime'] = undefined;

/**
 * Output only. A hash of this resource.
 * @member {String} etag
 */
RowAccessPolicy.prototype['etag'] = undefined;

/**
 * Required. A SQL boolean expression that represents the rows defined by this row access policy, similar to the boolean expression in a WHERE clause of a SELECT query on a table. References to other tables, routines, and temporary functions are not supported. Examples: region=\"EU\" date_field = CAST('2019-9-27' as DATE) nullable_field is not NULL numeric_field BETWEEN 1.0 AND 5.0
 * @member {String} filterPredicate
 */
RowAccessPolicy.prototype['filterPredicate'] = undefined;

/**
 * Output only. The time when this row access policy was last modified, in milliseconds since the epoch.
 * @member {String} lastModifiedTime
 */
RowAccessPolicy.prototype['lastModifiedTime'] = undefined;

/**
 * @member {module:model/RowAccessPolicyReference} rowAccessPolicyReference
 */
RowAccessPolicy.prototype['rowAccessPolicyReference'] = undefined;






export default RowAccessPolicy;

