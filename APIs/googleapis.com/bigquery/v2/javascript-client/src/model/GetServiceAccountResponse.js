/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetServiceAccountResponse model module.
 * @module model/GetServiceAccountResponse
 * @version v2
 */
class GetServiceAccountResponse {
    /**
     * Constructs a new <code>GetServiceAccountResponse</code>.
     * Response object of GetServiceAccount
     * @alias module:model/GetServiceAccountResponse
     */
    constructor() { 
        
        GetServiceAccountResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'bigquery#getServiceAccountResponse';
    }

    /**
     * Constructs a <code>GetServiceAccountResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetServiceAccountResponse} obj Optional instance to populate.
     * @return {module:model/GetServiceAccountResponse} The populated <code>GetServiceAccountResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetServiceAccountResponse();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetServiceAccountResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetServiceAccountResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * The service account email address.
 * @member {String} email
 */
GetServiceAccountResponse.prototype['email'] = undefined;

/**
 * The resource type of the response.
 * @member {String} kind
 * @default 'bigquery#getServiceAccountResponse'
 */
GetServiceAccountResponse.prototype['kind'] = 'bigquery#getServiceAccountResponse';






export default GetServiceAccountResponse;

