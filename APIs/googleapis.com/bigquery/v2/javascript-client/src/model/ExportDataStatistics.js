/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportDataStatistics model module.
 * @module model/ExportDataStatistics
 * @version v2
 */
class ExportDataStatistics {
    /**
     * Constructs a new <code>ExportDataStatistics</code>.
     * Statistics for the EXPORT DATA statement as part of Query Job. EXTRACT JOB statistics are populated in JobStatistics4.
     * @alias module:model/ExportDataStatistics
     */
    constructor() { 
        
        ExportDataStatistics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportDataStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportDataStatistics} obj Optional instance to populate.
     * @return {module:model/ExportDataStatistics} The populated <code>ExportDataStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportDataStatistics();

            if (data.hasOwnProperty('fileCount')) {
                obj['fileCount'] = ApiClient.convertToType(data['fileCount'], 'String');
            }
            if (data.hasOwnProperty('rowCount')) {
                obj['rowCount'] = ApiClient.convertToType(data['rowCount'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportDataStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportDataStatistics</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fileCount'] && !(typeof data['fileCount'] === 'string' || data['fileCount'] instanceof String)) {
            throw new Error("Expected the field `fileCount` to be a primitive type in the JSON string but got " + data['fileCount']);
        }
        // ensure the json data is a string
        if (data['rowCount'] && !(typeof data['rowCount'] === 'string' || data['rowCount'] instanceof String)) {
            throw new Error("Expected the field `rowCount` to be a primitive type in the JSON string but got " + data['rowCount']);
        }

        return true;
    }


}



/**
 * Number of destination files generated in case of EXPORT DATA statement only.
 * @member {String} fileCount
 */
ExportDataStatistics.prototype['fileCount'] = undefined;

/**
 * [Alpha] Number of destination rows generated in case of EXPORT DATA statement only.
 * @member {String} rowCount
 */
ExportDataStatistics.prototype['rowCount'] = undefined;






export default ExportDataStatistics;

