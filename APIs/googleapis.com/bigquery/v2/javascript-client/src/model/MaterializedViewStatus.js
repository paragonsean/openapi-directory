/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorProto from './ErrorProto';

/**
 * The MaterializedViewStatus model module.
 * @module model/MaterializedViewStatus
 * @version v2
 */
class MaterializedViewStatus {
    /**
     * Constructs a new <code>MaterializedViewStatus</code>.
     * Status of a materialized view. The last refresh timestamp status is omitted here, but is present in the MaterializedViewDefinition message.
     * @alias module:model/MaterializedViewStatus
     */
    constructor() { 
        
        MaterializedViewStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MaterializedViewStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MaterializedViewStatus} obj Optional instance to populate.
     * @return {module:model/MaterializedViewStatus} The populated <code>MaterializedViewStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MaterializedViewStatus();

            if (data.hasOwnProperty('lastRefreshStatus')) {
                obj['lastRefreshStatus'] = ErrorProto.constructFromObject(data['lastRefreshStatus']);
            }
            if (data.hasOwnProperty('refreshWatermark')) {
                obj['refreshWatermark'] = ApiClient.convertToType(data['refreshWatermark'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MaterializedViewStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MaterializedViewStatus</code>.
     */
    static validateJSON(data) {
        // validate the optional field `lastRefreshStatus`
        if (data['lastRefreshStatus']) { // data not null
          ErrorProto.validateJSON(data['lastRefreshStatus']);
        }
        // ensure the json data is a string
        if (data['refreshWatermark'] && !(typeof data['refreshWatermark'] === 'string' || data['refreshWatermark'] instanceof String)) {
            throw new Error("Expected the field `refreshWatermark` to be a primitive type in the JSON string but got " + data['refreshWatermark']);
        }

        return true;
    }


}



/**
 * @member {module:model/ErrorProto} lastRefreshStatus
 */
MaterializedViewStatus.prototype['lastRefreshStatus'] = undefined;

/**
 * Output only. Refresh watermark of materialized view. The base tables' data were collected into the materialized view cache until this time.
 * @member {String} refreshWatermark
 */
MaterializedViewStatus.prototype['refreshWatermark'] = undefined;






export default MaterializedViewStatus;

