/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryTimelineSample model module.
 * @module model/QueryTimelineSample
 * @version v2
 */
class QueryTimelineSample {
    /**
     * Constructs a new <code>QueryTimelineSample</code>.
     * Summary of the state of query execution at a given time.
     * @alias module:model/QueryTimelineSample
     */
    constructor() { 
        
        QueryTimelineSample.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryTimelineSample</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryTimelineSample} obj Optional instance to populate.
     * @return {module:model/QueryTimelineSample} The populated <code>QueryTimelineSample</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryTimelineSample();

            if (data.hasOwnProperty('activeUnits')) {
                obj['activeUnits'] = ApiClient.convertToType(data['activeUnits'], 'String');
            }
            if (data.hasOwnProperty('completedUnits')) {
                obj['completedUnits'] = ApiClient.convertToType(data['completedUnits'], 'String');
            }
            if (data.hasOwnProperty('elapsedMs')) {
                obj['elapsedMs'] = ApiClient.convertToType(data['elapsedMs'], 'String');
            }
            if (data.hasOwnProperty('estimatedRunnableUnits')) {
                obj['estimatedRunnableUnits'] = ApiClient.convertToType(data['estimatedRunnableUnits'], 'String');
            }
            if (data.hasOwnProperty('pendingUnits')) {
                obj['pendingUnits'] = ApiClient.convertToType(data['pendingUnits'], 'String');
            }
            if (data.hasOwnProperty('totalSlotMs')) {
                obj['totalSlotMs'] = ApiClient.convertToType(data['totalSlotMs'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryTimelineSample</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryTimelineSample</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activeUnits'] && !(typeof data['activeUnits'] === 'string' || data['activeUnits'] instanceof String)) {
            throw new Error("Expected the field `activeUnits` to be a primitive type in the JSON string but got " + data['activeUnits']);
        }
        // ensure the json data is a string
        if (data['completedUnits'] && !(typeof data['completedUnits'] === 'string' || data['completedUnits'] instanceof String)) {
            throw new Error("Expected the field `completedUnits` to be a primitive type in the JSON string but got " + data['completedUnits']);
        }
        // ensure the json data is a string
        if (data['elapsedMs'] && !(typeof data['elapsedMs'] === 'string' || data['elapsedMs'] instanceof String)) {
            throw new Error("Expected the field `elapsedMs` to be a primitive type in the JSON string but got " + data['elapsedMs']);
        }
        // ensure the json data is a string
        if (data['estimatedRunnableUnits'] && !(typeof data['estimatedRunnableUnits'] === 'string' || data['estimatedRunnableUnits'] instanceof String)) {
            throw new Error("Expected the field `estimatedRunnableUnits` to be a primitive type in the JSON string but got " + data['estimatedRunnableUnits']);
        }
        // ensure the json data is a string
        if (data['pendingUnits'] && !(typeof data['pendingUnits'] === 'string' || data['pendingUnits'] instanceof String)) {
            throw new Error("Expected the field `pendingUnits` to be a primitive type in the JSON string but got " + data['pendingUnits']);
        }
        // ensure the json data is a string
        if (data['totalSlotMs'] && !(typeof data['totalSlotMs'] === 'string' || data['totalSlotMs'] instanceof String)) {
            throw new Error("Expected the field `totalSlotMs` to be a primitive type in the JSON string but got " + data['totalSlotMs']);
        }

        return true;
    }


}



/**
 * Total number of active workers. This does not correspond directly to slot usage. This is the largest value observed since the last sample.
 * @member {String} activeUnits
 */
QueryTimelineSample.prototype['activeUnits'] = undefined;

/**
 * Total parallel units of work completed by this query.
 * @member {String} completedUnits
 */
QueryTimelineSample.prototype['completedUnits'] = undefined;

/**
 * Milliseconds elapsed since the start of query execution.
 * @member {String} elapsedMs
 */
QueryTimelineSample.prototype['elapsedMs'] = undefined;

/**
 * Units of work that can be scheduled immediately. Providing additional slots for these units of work will accelerate the query, if no other query in the reservation needs additional slots.
 * @member {String} estimatedRunnableUnits
 */
QueryTimelineSample.prototype['estimatedRunnableUnits'] = undefined;

/**
 * Total units of work remaining for the query. This number can be revised (increased or decreased) while the query is running.
 * @member {String} pendingUnits
 */
QueryTimelineSample.prototype['pendingUnits'] = undefined;

/**
 * Cumulative slot-ms consumed by the query.
 * @member {String} totalSlotMs
 */
QueryTimelineSample.prototype['totalSlotMs'] = undefined;






export default QueryTimelineSample;

