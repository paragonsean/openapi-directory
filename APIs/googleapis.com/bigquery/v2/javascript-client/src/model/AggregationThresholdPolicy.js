/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AggregationThresholdPolicy model module.
 * @module model/AggregationThresholdPolicy
 * @version v2
 */
class AggregationThresholdPolicy {
    /**
     * Constructs a new <code>AggregationThresholdPolicy</code>.
     * Represents privacy policy associated with \&quot;aggregation threshold\&quot; method.
     * @alias module:model/AggregationThresholdPolicy
     */
    constructor() { 
        
        AggregationThresholdPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AggregationThresholdPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AggregationThresholdPolicy} obj Optional instance to populate.
     * @return {module:model/AggregationThresholdPolicy} The populated <code>AggregationThresholdPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AggregationThresholdPolicy();

            if (data.hasOwnProperty('privacyUnitColumns')) {
                obj['privacyUnitColumns'] = ApiClient.convertToType(data['privacyUnitColumns'], ['String']);
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AggregationThresholdPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AggregationThresholdPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['privacyUnitColumns'])) {
            throw new Error("Expected the field `privacyUnitColumns` to be an array in the JSON data but got " + data['privacyUnitColumns']);
        }
        // ensure the json data is a string
        if (data['threshold'] && !(typeof data['threshold'] === 'string' || data['threshold'] instanceof String)) {
            throw new Error("Expected the field `threshold` to be a primitive type in the JSON string but got " + data['threshold']);
        }

        return true;
    }


}



/**
 * Optional. The privacy unit column(s) associated with this policy. For now, only one column per data source object (table, view) is allowed as a privacy unit column. Representing as a repeated field in metadata for extensibility to multiple columns in future. Duplicates and Repeated struct fields are not allowed. For nested fields, use dot notation (\"outer.inner\")
 * @member {Array.<String>} privacyUnitColumns
 */
AggregationThresholdPolicy.prototype['privacyUnitColumns'] = undefined;

/**
 * Optional. The threshold for the \"aggregation threshold\" policy.
 * @member {String} threshold
 */
AggregationThresholdPolicy.prototype['threshold'] = undefined;






export default AggregationThresholdPolicy;

