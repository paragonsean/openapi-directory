/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RangeValue from './RangeValue';

/**
 * The QueryParameterValue model module.
 * @module model/QueryParameterValue
 * @version v2
 */
class QueryParameterValue {
    /**
     * Constructs a new <code>QueryParameterValue</code>.
     * The value of a query parameter.
     * @alias module:model/QueryParameterValue
     */
    constructor() { 
        
        QueryParameterValue.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryParameterValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryParameterValue} obj Optional instance to populate.
     * @return {module:model/QueryParameterValue} The populated <code>QueryParameterValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryParameterValue();

            if (data.hasOwnProperty('arrayValues')) {
                obj['arrayValues'] = ApiClient.convertToType(data['arrayValues'], [QueryParameterValue]);
            }
            if (data.hasOwnProperty('rangeValue')) {
                obj['rangeValue'] = RangeValue.constructFromObject(data['rangeValue']);
            }
            if (data.hasOwnProperty('structValues')) {
                obj['structValues'] = ApiClient.convertToType(data['structValues'], {'String': QueryParameterValue});
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryParameterValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryParameterValue</code>.
     */
    static validateJSON(data) {
        if (data['arrayValues']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['arrayValues'])) {
                throw new Error("Expected the field `arrayValues` to be an array in the JSON data but got " + data['arrayValues']);
            }
            // validate the optional field `arrayValues` (array)
            for (const item of data['arrayValues']) {
                QueryParameterValue.validateJSON(item);
            };
        }
        // validate the optional field `rangeValue`
        if (data['rangeValue']) { // data not null
          RangeValue.validateJSON(data['rangeValue']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Optional. The array values, if this is an array type.
 * @member {Array.<module:model/QueryParameterValue>} arrayValues
 */
QueryParameterValue.prototype['arrayValues'] = undefined;

/**
 * @member {module:model/RangeValue} rangeValue
 */
QueryParameterValue.prototype['rangeValue'] = undefined;

/**
 * The struct field values.
 * @member {Object.<String, module:model/QueryParameterValue>} structValues
 */
QueryParameterValue.prototype['structValues'] = undefined;

/**
 * Optional. The value of this value, if a simple scalar type.
 * @member {String} value
 */
QueryParameterValue.prototype['value'] = undefined;






export default QueryParameterValue;

