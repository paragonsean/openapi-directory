/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TableReference from './TableReference';

/**
 * The MaterializedView model module.
 * @module model/MaterializedView
 * @version v2
 */
class MaterializedView {
    /**
     * Constructs a new <code>MaterializedView</code>.
     * A materialized view considered for a query job.
     * @alias module:model/MaterializedView
     */
    constructor() { 
        
        MaterializedView.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MaterializedView</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MaterializedView} obj Optional instance to populate.
     * @return {module:model/MaterializedView} The populated <code>MaterializedView</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MaterializedView();

            if (data.hasOwnProperty('chosen')) {
                obj['chosen'] = ApiClient.convertToType(data['chosen'], 'Boolean');
            }
            if (data.hasOwnProperty('estimatedBytesSaved')) {
                obj['estimatedBytesSaved'] = ApiClient.convertToType(data['estimatedBytesSaved'], 'String');
            }
            if (data.hasOwnProperty('rejectedReason')) {
                obj['rejectedReason'] = ApiClient.convertToType(data['rejectedReason'], 'String');
            }
            if (data.hasOwnProperty('tableReference')) {
                obj['tableReference'] = TableReference.constructFromObject(data['tableReference']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MaterializedView</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MaterializedView</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['estimatedBytesSaved'] && !(typeof data['estimatedBytesSaved'] === 'string' || data['estimatedBytesSaved'] instanceof String)) {
            throw new Error("Expected the field `estimatedBytesSaved` to be a primitive type in the JSON string but got " + data['estimatedBytesSaved']);
        }
        // ensure the json data is a string
        if (data['rejectedReason'] && !(typeof data['rejectedReason'] === 'string' || data['rejectedReason'] instanceof String)) {
            throw new Error("Expected the field `rejectedReason` to be a primitive type in the JSON string but got " + data['rejectedReason']);
        }
        // validate the optional field `tableReference`
        if (data['tableReference']) { // data not null
          TableReference.validateJSON(data['tableReference']);
        }

        return true;
    }


}



/**
 * Whether the materialized view is chosen for the query. A materialized view can be chosen to rewrite multiple parts of the same query. If a materialized view is chosen to rewrite any part of the query, then this field is true, even if the materialized view was not chosen to rewrite others parts.
 * @member {Boolean} chosen
 */
MaterializedView.prototype['chosen'] = undefined;

/**
 * If present, specifies a best-effort estimation of the bytes saved by using the materialized view rather than its base tables.
 * @member {String} estimatedBytesSaved
 */
MaterializedView.prototype['estimatedBytesSaved'] = undefined;

/**
 * If present, specifies the reason why the materialized view was not chosen for the query.
 * @member {module:model/MaterializedView.RejectedReasonEnum} rejectedReason
 */
MaterializedView.prototype['rejectedReason'] = undefined;

/**
 * @member {module:model/TableReference} tableReference
 */
MaterializedView.prototype['tableReference'] = undefined;





/**
 * Allowed values for the <code>rejectedReason</code> property.
 * @enum {String}
 * @readonly
 */
MaterializedView['RejectedReasonEnum'] = {

    /**
     * value: "REJECTED_REASON_UNSPECIFIED"
     * @const
     */
    "REJECTED_REASON_UNSPECIFIED": "REJECTED_REASON_UNSPECIFIED",

    /**
     * value: "NO_DATA"
     * @const
     */
    "NO_DATA": "NO_DATA",

    /**
     * value: "COST"
     * @const
     */
    "COST": "COST",

    /**
     * value: "BASE_TABLE_TRUNCATED"
     * @const
     */
    "BASE_TABLE_TRUNCATED": "BASE_TABLE_TRUNCATED",

    /**
     * value: "BASE_TABLE_DATA_CHANGE"
     * @const
     */
    "BASE_TABLE_DATA_CHANGE": "BASE_TABLE_DATA_CHANGE",

    /**
     * value: "BASE_TABLE_PARTITION_EXPIRATION_CHANGE"
     * @const
     */
    "BASE_TABLE_PARTITION_EXPIRATION_CHANGE": "BASE_TABLE_PARTITION_EXPIRATION_CHANGE",

    /**
     * value: "BASE_TABLE_EXPIRED_PARTITION"
     * @const
     */
    "BASE_TABLE_EXPIRED_PARTITION": "BASE_TABLE_EXPIRED_PARTITION",

    /**
     * value: "BASE_TABLE_INCOMPATIBLE_METADATA_CHANGE"
     * @const
     */
    "BASE_TABLE_INCOMPATIBLE_METADATA_CHANGE": "BASE_TABLE_INCOMPATIBLE_METADATA_CHANGE",

    /**
     * value: "TIME_ZONE"
     * @const
     */
    "TIME_ZONE": "TIME_ZONE",

    /**
     * value: "OUT_OF_TIME_TRAVEL_WINDOW"
     * @const
     */
    "OUT_OF_TIME_TRAVEL_WINDOW": "OUT_OF_TIME_TRAVEL_WINDOW",

    /**
     * value: "BASE_TABLE_FINE_GRAINED_SECURITY_POLICY"
     * @const
     */
    "BASE_TABLE_FINE_GRAINED_SECURITY_POLICY": "BASE_TABLE_FINE_GRAINED_SECURITY_POLICY",

    /**
     * value: "BASE_TABLE_TOO_STALE"
     * @const
     */
    "BASE_TABLE_TOO_STALE": "BASE_TABLE_TOO_STALE"
};



export default MaterializedView;

