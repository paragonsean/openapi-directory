/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IndexUnusedReason from './IndexUnusedReason';

/**
 * The VectorSearchStatistics model module.
 * @module model/VectorSearchStatistics
 * @version v2
 */
class VectorSearchStatistics {
    /**
     * Constructs a new <code>VectorSearchStatistics</code>.
     * Statistics for a vector search query. Populated as part of JobStatistics2.
     * @alias module:model/VectorSearchStatistics
     */
    constructor() { 
        
        VectorSearchStatistics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VectorSearchStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VectorSearchStatistics} obj Optional instance to populate.
     * @return {module:model/VectorSearchStatistics} The populated <code>VectorSearchStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VectorSearchStatistics();

            if (data.hasOwnProperty('indexUnusedReasons')) {
                obj['indexUnusedReasons'] = ApiClient.convertToType(data['indexUnusedReasons'], [IndexUnusedReason]);
            }
            if (data.hasOwnProperty('indexUsageMode')) {
                obj['indexUsageMode'] = ApiClient.convertToType(data['indexUsageMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VectorSearchStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VectorSearchStatistics</code>.
     */
    static validateJSON(data) {
        if (data['indexUnusedReasons']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['indexUnusedReasons'])) {
                throw new Error("Expected the field `indexUnusedReasons` to be an array in the JSON data but got " + data['indexUnusedReasons']);
            }
            // validate the optional field `indexUnusedReasons` (array)
            for (const item of data['indexUnusedReasons']) {
                IndexUnusedReason.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['indexUsageMode'] && !(typeof data['indexUsageMode'] === 'string' || data['indexUsageMode'] instanceof String)) {
            throw new Error("Expected the field `indexUsageMode` to be a primitive type in the JSON string but got " + data['indexUsageMode']);
        }

        return true;
    }


}



/**
 * When `indexUsageMode` is `UNUSED` or `PARTIALLY_USED`, this field explains why indexes were not used in all or part of the vector search query. If `indexUsageMode` is `FULLY_USED`, this field is not populated.
 * @member {Array.<module:model/IndexUnusedReason>} indexUnusedReasons
 */
VectorSearchStatistics.prototype['indexUnusedReasons'] = undefined;

/**
 * Specifies the index usage mode for the query.
 * @member {module:model/VectorSearchStatistics.IndexUsageModeEnum} indexUsageMode
 */
VectorSearchStatistics.prototype['indexUsageMode'] = undefined;





/**
 * Allowed values for the <code>indexUsageMode</code> property.
 * @enum {String}
 * @readonly
 */
VectorSearchStatistics['IndexUsageModeEnum'] = {

    /**
     * value: "INDEX_USAGE_MODE_UNSPECIFIED"
     * @const
     */
    "INDEX_USAGE_MODE_UNSPECIFIED": "INDEX_USAGE_MODE_UNSPECIFIED",

    /**
     * value: "UNUSED"
     * @const
     */
    "UNUSED": "UNUSED",

    /**
     * value: "PARTIALLY_USED"
     * @const
     */
    "PARTIALLY_USED": "PARTIALLY_USED",

    /**
     * value: "FULLY_USED"
     * @const
     */
    "FULLY_USED": "FULLY_USED"
};



export default VectorSearchStatistics;

