/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HparamTuningTrial from './HparamTuningTrial';
import IterationResult from './IterationResult';

/**
 * The MlStatistics model module.
 * @module model/MlStatistics
 * @version v2
 */
class MlStatistics {
    /**
     * Constructs a new <code>MlStatistics</code>.
     * Job statistics specific to a BigQuery ML training job.
     * @alias module:model/MlStatistics
     */
    constructor() { 
        
        MlStatistics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MlStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MlStatistics} obj Optional instance to populate.
     * @return {module:model/MlStatistics} The populated <code>MlStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MlStatistics();

            if (data.hasOwnProperty('hparamTrials')) {
                obj['hparamTrials'] = ApiClient.convertToType(data['hparamTrials'], [HparamTuningTrial]);
            }
            if (data.hasOwnProperty('iterationResults')) {
                obj['iterationResults'] = ApiClient.convertToType(data['iterationResults'], [IterationResult]);
            }
            if (data.hasOwnProperty('maxIterations')) {
                obj['maxIterations'] = ApiClient.convertToType(data['maxIterations'], 'String');
            }
            if (data.hasOwnProperty('modelType')) {
                obj['modelType'] = ApiClient.convertToType(data['modelType'], 'String');
            }
            if (data.hasOwnProperty('trainingType')) {
                obj['trainingType'] = ApiClient.convertToType(data['trainingType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MlStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MlStatistics</code>.
     */
    static validateJSON(data) {
        if (data['hparamTrials']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['hparamTrials'])) {
                throw new Error("Expected the field `hparamTrials` to be an array in the JSON data but got " + data['hparamTrials']);
            }
            // validate the optional field `hparamTrials` (array)
            for (const item of data['hparamTrials']) {
                HparamTuningTrial.validateJSON(item);
            };
        }
        if (data['iterationResults']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['iterationResults'])) {
                throw new Error("Expected the field `iterationResults` to be an array in the JSON data but got " + data['iterationResults']);
            }
            // validate the optional field `iterationResults` (array)
            for (const item of data['iterationResults']) {
                IterationResult.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['maxIterations'] && !(typeof data['maxIterations'] === 'string' || data['maxIterations'] instanceof String)) {
            throw new Error("Expected the field `maxIterations` to be a primitive type in the JSON string but got " + data['maxIterations']);
        }
        // ensure the json data is a string
        if (data['modelType'] && !(typeof data['modelType'] === 'string' || data['modelType'] instanceof String)) {
            throw new Error("Expected the field `modelType` to be a primitive type in the JSON string but got " + data['modelType']);
        }
        // ensure the json data is a string
        if (data['trainingType'] && !(typeof data['trainingType'] === 'string' || data['trainingType'] instanceof String)) {
            throw new Error("Expected the field `trainingType` to be a primitive type in the JSON string but got " + data['trainingType']);
        }

        return true;
    }


}



/**
 * Output only. Trials of a [hyperparameter tuning job](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) sorted by trial_id.
 * @member {Array.<module:model/HparamTuningTrial>} hparamTrials
 */
MlStatistics.prototype['hparamTrials'] = undefined;

/**
 * Results for all completed iterations. Empty for [hyperparameter tuning jobs](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview).
 * @member {Array.<module:model/IterationResult>} iterationResults
 */
MlStatistics.prototype['iterationResults'] = undefined;

/**
 * Output only. Maximum number of iterations specified as max_iterations in the 'CREATE MODEL' query. The actual number of iterations may be less than this number due to early stop.
 * @member {String} maxIterations
 */
MlStatistics.prototype['maxIterations'] = undefined;

/**
 * Output only. The type of the model that is being trained.
 * @member {module:model/MlStatistics.ModelTypeEnum} modelType
 */
MlStatistics.prototype['modelType'] = undefined;

/**
 * Output only. Training type of the job.
 * @member {module:model/MlStatistics.TrainingTypeEnum} trainingType
 */
MlStatistics.prototype['trainingType'] = undefined;





/**
 * Allowed values for the <code>modelType</code> property.
 * @enum {String}
 * @readonly
 */
MlStatistics['ModelTypeEnum'] = {

    /**
     * value: "MODEL_TYPE_UNSPECIFIED"
     * @const
     */
    "MODEL_TYPE_UNSPECIFIED": "MODEL_TYPE_UNSPECIFIED",

    /**
     * value: "LINEAR_REGRESSION"
     * @const
     */
    "LINEAR_REGRESSION": "LINEAR_REGRESSION",

    /**
     * value: "LOGISTIC_REGRESSION"
     * @const
     */
    "LOGISTIC_REGRESSION": "LOGISTIC_REGRESSION",

    /**
     * value: "KMEANS"
     * @const
     */
    "KMEANS": "KMEANS",

    /**
     * value: "MATRIX_FACTORIZATION"
     * @const
     */
    "MATRIX_FACTORIZATION": "MATRIX_FACTORIZATION",

    /**
     * value: "DNN_CLASSIFIER"
     * @const
     */
    "DNN_CLASSIFIER": "DNN_CLASSIFIER",

    /**
     * value: "TENSORFLOW"
     * @const
     */
    "TENSORFLOW": "TENSORFLOW",

    /**
     * value: "DNN_REGRESSOR"
     * @const
     */
    "DNN_REGRESSOR": "DNN_REGRESSOR",

    /**
     * value: "XGBOOST"
     * @const
     */
    "XGBOOST": "XGBOOST",

    /**
     * value: "BOOSTED_TREE_REGRESSOR"
     * @const
     */
    "BOOSTED_TREE_REGRESSOR": "BOOSTED_TREE_REGRESSOR",

    /**
     * value: "BOOSTED_TREE_CLASSIFIER"
     * @const
     */
    "BOOSTED_TREE_CLASSIFIER": "BOOSTED_TREE_CLASSIFIER",

    /**
     * value: "ARIMA"
     * @const
     */
    "ARIMA": "ARIMA",

    /**
     * value: "AUTOML_REGRESSOR"
     * @const
     */
    "AUTOML_REGRESSOR": "AUTOML_REGRESSOR",

    /**
     * value: "AUTOML_CLASSIFIER"
     * @const
     */
    "AUTOML_CLASSIFIER": "AUTOML_CLASSIFIER",

    /**
     * value: "PCA"
     * @const
     */
    "PCA": "PCA",

    /**
     * value: "DNN_LINEAR_COMBINED_CLASSIFIER"
     * @const
     */
    "DNN_LINEAR_COMBINED_CLASSIFIER": "DNN_LINEAR_COMBINED_CLASSIFIER",

    /**
     * value: "DNN_LINEAR_COMBINED_REGRESSOR"
     * @const
     */
    "DNN_LINEAR_COMBINED_REGRESSOR": "DNN_LINEAR_COMBINED_REGRESSOR",

    /**
     * value: "AUTOENCODER"
     * @const
     */
    "AUTOENCODER": "AUTOENCODER",

    /**
     * value: "ARIMA_PLUS"
     * @const
     */
    "ARIMA_PLUS": "ARIMA_PLUS",

    /**
     * value: "ARIMA_PLUS_XREG"
     * @const
     */
    "ARIMA_PLUS_XREG": "ARIMA_PLUS_XREG",

    /**
     * value: "RANDOM_FOREST_REGRESSOR"
     * @const
     */
    "RANDOM_FOREST_REGRESSOR": "RANDOM_FOREST_REGRESSOR",

    /**
     * value: "RANDOM_FOREST_CLASSIFIER"
     * @const
     */
    "RANDOM_FOREST_CLASSIFIER": "RANDOM_FOREST_CLASSIFIER",

    /**
     * value: "TENSORFLOW_LITE"
     * @const
     */
    "TENSORFLOW_LITE": "TENSORFLOW_LITE",

    /**
     * value: "ONNX"
     * @const
     */
    "ONNX": "ONNX"
};


/**
 * Allowed values for the <code>trainingType</code> property.
 * @enum {String}
 * @readonly
 */
MlStatistics['TrainingTypeEnum'] = {

    /**
     * value: "TRAINING_TYPE_UNSPECIFIED"
     * @const
     */
    "TRAINING_TYPE_UNSPECIFIED": "TRAINING_TYPE_UNSPECIFIED",

    /**
     * value: "SINGLE_TRAINING"
     * @const
     */
    "SINGLE_TRAINING": "SINGLE_TRAINING",

    /**
     * value: "HPARAM_TUNING"
     * @const
     */
    "HPARAM_TUNING": "HPARAM_TUNING"
};



export default MlStatistics;

