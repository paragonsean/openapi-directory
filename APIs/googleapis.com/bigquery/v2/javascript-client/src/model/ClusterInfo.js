/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClusterInfo model module.
 * @module model/ClusterInfo
 * @version v2
 */
class ClusterInfo {
    /**
     * Constructs a new <code>ClusterInfo</code>.
     * Information about a single cluster for clustering model.
     * @alias module:model/ClusterInfo
     */
    constructor() { 
        
        ClusterInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusterInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusterInfo} obj Optional instance to populate.
     * @return {module:model/ClusterInfo} The populated <code>ClusterInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusterInfo();

            if (data.hasOwnProperty('centroidId')) {
                obj['centroidId'] = ApiClient.convertToType(data['centroidId'], 'String');
            }
            if (data.hasOwnProperty('clusterRadius')) {
                obj['clusterRadius'] = ApiClient.convertToType(data['clusterRadius'], 'Number');
            }
            if (data.hasOwnProperty('clusterSize')) {
                obj['clusterSize'] = ApiClient.convertToType(data['clusterSize'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusterInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusterInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['centroidId'] && !(typeof data['centroidId'] === 'string' || data['centroidId'] instanceof String)) {
            throw new Error("Expected the field `centroidId` to be a primitive type in the JSON string but got " + data['centroidId']);
        }
        // ensure the json data is a string
        if (data['clusterSize'] && !(typeof data['clusterSize'] === 'string' || data['clusterSize'] instanceof String)) {
            throw new Error("Expected the field `clusterSize` to be a primitive type in the JSON string but got " + data['clusterSize']);
        }

        return true;
    }


}



/**
 * Centroid id.
 * @member {String} centroidId
 */
ClusterInfo.prototype['centroidId'] = undefined;

/**
 * Cluster radius, the average distance from centroid to each point assigned to the cluster.
 * @member {Number} clusterRadius
 */
ClusterInfo.prototype['clusterRadius'] = undefined;

/**
 * Cluster size, the total number of points assigned to the cluster.
 * @member {String} clusterSize
 */
ClusterInfo.prototype['clusterSize'] = undefined;






export default ClusterInfo;

