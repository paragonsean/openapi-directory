/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Cluster from './Cluster';

/**
 * The ClusteringMetrics model module.
 * @module model/ClusteringMetrics
 * @version v2
 */
class ClusteringMetrics {
    /**
     * Constructs a new <code>ClusteringMetrics</code>.
     * Evaluation metrics for clustering models.
     * @alias module:model/ClusteringMetrics
     */
    constructor() { 
        
        ClusteringMetrics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClusteringMetrics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClusteringMetrics} obj Optional instance to populate.
     * @return {module:model/ClusteringMetrics} The populated <code>ClusteringMetrics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClusteringMetrics();

            if (data.hasOwnProperty('clusters')) {
                obj['clusters'] = ApiClient.convertToType(data['clusters'], [Cluster]);
            }
            if (data.hasOwnProperty('daviesBouldinIndex')) {
                obj['daviesBouldinIndex'] = ApiClient.convertToType(data['daviesBouldinIndex'], 'Number');
            }
            if (data.hasOwnProperty('meanSquaredDistance')) {
                obj['meanSquaredDistance'] = ApiClient.convertToType(data['meanSquaredDistance'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClusteringMetrics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClusteringMetrics</code>.
     */
    static validateJSON(data) {
        if (data['clusters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clusters'])) {
                throw new Error("Expected the field `clusters` to be an array in the JSON data but got " + data['clusters']);
            }
            // validate the optional field `clusters` (array)
            for (const item of data['clusters']) {
                Cluster.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Information for all clusters.
 * @member {Array.<module:model/Cluster>} clusters
 */
ClusteringMetrics.prototype['clusters'] = undefined;

/**
 * Davies-Bouldin index.
 * @member {Number} daviesBouldinIndex
 */
ClusteringMetrics.prototype['daviesBouldinIndex'] = undefined;

/**
 * Mean of squared distances between each sample to its cluster centroid.
 * @member {Number} meanSquaredDistance
 */
ClusteringMetrics.prototype['meanSquaredDistance'] = undefined;






export default ClusteringMetrics;

