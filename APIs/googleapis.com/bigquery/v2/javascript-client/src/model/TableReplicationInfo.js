/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorProto from './ErrorProto';
import TableReference from './TableReference';

/**
 * The TableReplicationInfo model module.
 * @module model/TableReplicationInfo
 * @version v2
 */
class TableReplicationInfo {
    /**
     * Constructs a new <code>TableReplicationInfo</code>.
     * Replication info of a table created using &#x60;AS REPLICA&#x60; DDL like: &#x60;CREATE MATERIALIZED VIEW mv1 AS REPLICA OF src_mv&#x60;
     * @alias module:model/TableReplicationInfo
     */
    constructor() { 
        
        TableReplicationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TableReplicationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TableReplicationInfo} obj Optional instance to populate.
     * @return {module:model/TableReplicationInfo} The populated <code>TableReplicationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TableReplicationInfo();

            if (data.hasOwnProperty('replicatedSourceLastRefreshTime')) {
                obj['replicatedSourceLastRefreshTime'] = ApiClient.convertToType(data['replicatedSourceLastRefreshTime'], 'String');
            }
            if (data.hasOwnProperty('replicationError')) {
                obj['replicationError'] = ErrorProto.constructFromObject(data['replicationError']);
            }
            if (data.hasOwnProperty('replicationIntervalMs')) {
                obj['replicationIntervalMs'] = ApiClient.convertToType(data['replicationIntervalMs'], 'String');
            }
            if (data.hasOwnProperty('replicationStatus')) {
                obj['replicationStatus'] = ApiClient.convertToType(data['replicationStatus'], 'String');
            }
            if (data.hasOwnProperty('sourceTable')) {
                obj['sourceTable'] = TableReference.constructFromObject(data['sourceTable']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TableReplicationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TableReplicationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['replicatedSourceLastRefreshTime'] && !(typeof data['replicatedSourceLastRefreshTime'] === 'string' || data['replicatedSourceLastRefreshTime'] instanceof String)) {
            throw new Error("Expected the field `replicatedSourceLastRefreshTime` to be a primitive type in the JSON string but got " + data['replicatedSourceLastRefreshTime']);
        }
        // validate the optional field `replicationError`
        if (data['replicationError']) { // data not null
          ErrorProto.validateJSON(data['replicationError']);
        }
        // ensure the json data is a string
        if (data['replicationIntervalMs'] && !(typeof data['replicationIntervalMs'] === 'string' || data['replicationIntervalMs'] instanceof String)) {
            throw new Error("Expected the field `replicationIntervalMs` to be a primitive type in the JSON string but got " + data['replicationIntervalMs']);
        }
        // ensure the json data is a string
        if (data['replicationStatus'] && !(typeof data['replicationStatus'] === 'string' || data['replicationStatus'] instanceof String)) {
            throw new Error("Expected the field `replicationStatus` to be a primitive type in the JSON string but got " + data['replicationStatus']);
        }
        // validate the optional field `sourceTable`
        if (data['sourceTable']) { // data not null
          TableReference.validateJSON(data['sourceTable']);
        }

        return true;
    }


}



/**
 * Optional. Output only. If source is a materialized view, this field signifies the last refresh time of the source.
 * @member {String} replicatedSourceLastRefreshTime
 */
TableReplicationInfo.prototype['replicatedSourceLastRefreshTime'] = undefined;

/**
 * @member {module:model/ErrorProto} replicationError
 */
TableReplicationInfo.prototype['replicationError'] = undefined;

/**
 * Required. Specifies the interval at which the source table is polled for updates.
 * @member {String} replicationIntervalMs
 */
TableReplicationInfo.prototype['replicationIntervalMs'] = undefined;

/**
 * Optional. Output only. Replication status of configured replication.
 * @member {module:model/TableReplicationInfo.ReplicationStatusEnum} replicationStatus
 */
TableReplicationInfo.prototype['replicationStatus'] = undefined;

/**
 * @member {module:model/TableReference} sourceTable
 */
TableReplicationInfo.prototype['sourceTable'] = undefined;





/**
 * Allowed values for the <code>replicationStatus</code> property.
 * @enum {String}
 * @readonly
 */
TableReplicationInfo['ReplicationStatusEnum'] = {

    /**
     * value: "REPLICATION_STATUS_UNSPECIFIED"
     * @const
     */
    "REPLICATION_STATUS_UNSPECIFIED": "REPLICATION_STATUS_UNSPECIFIED",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "SOURCE_DELETED"
     * @const
     */
    "SOURCE_DELETED": "SOURCE_DELETED",

    /**
     * value: "PERMISSION_DENIED"
     * @const
     */
    "PERMISSION_DENIED": "PERMISSION_DENIED",

    /**
     * value: "UNSUPPORTED_CONFIGURATION"
     * @const
     */
    "UNSUPPORTED_CONFIGURATION": "UNSUPPORTED_CONFIGURATION"
};



export default TableReplicationInfo;

