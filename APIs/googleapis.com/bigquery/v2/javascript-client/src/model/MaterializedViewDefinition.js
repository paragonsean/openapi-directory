/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MaterializedViewDefinition model module.
 * @module model/MaterializedViewDefinition
 * @version v2
 */
class MaterializedViewDefinition {
    /**
     * Constructs a new <code>MaterializedViewDefinition</code>.
     * Definition and configuration of a materialized view.
     * @alias module:model/MaterializedViewDefinition
     */
    constructor() { 
        
        MaterializedViewDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MaterializedViewDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MaterializedViewDefinition} obj Optional instance to populate.
     * @return {module:model/MaterializedViewDefinition} The populated <code>MaterializedViewDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MaterializedViewDefinition();

            if (data.hasOwnProperty('allowNonIncrementalDefinition')) {
                obj['allowNonIncrementalDefinition'] = ApiClient.convertToType(data['allowNonIncrementalDefinition'], 'Boolean');
            }
            if (data.hasOwnProperty('enableRefresh')) {
                obj['enableRefresh'] = ApiClient.convertToType(data['enableRefresh'], 'Boolean');
            }
            if (data.hasOwnProperty('lastRefreshTime')) {
                obj['lastRefreshTime'] = ApiClient.convertToType(data['lastRefreshTime'], 'String');
            }
            if (data.hasOwnProperty('maxStaleness')) {
                obj['maxStaleness'] = ApiClient.convertToType(data['maxStaleness'], 'Blob');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
            if (data.hasOwnProperty('refreshIntervalMs')) {
                obj['refreshIntervalMs'] = ApiClient.convertToType(data['refreshIntervalMs'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MaterializedViewDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MaterializedViewDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lastRefreshTime'] && !(typeof data['lastRefreshTime'] === 'string' || data['lastRefreshTime'] instanceof String)) {
            throw new Error("Expected the field `lastRefreshTime` to be a primitive type in the JSON string but got " + data['lastRefreshTime']);
        }
        // ensure the json data is a string
        if (data['query'] && !(typeof data['query'] === 'string' || data['query'] instanceof String)) {
            throw new Error("Expected the field `query` to be a primitive type in the JSON string but got " + data['query']);
        }
        // ensure the json data is a string
        if (data['refreshIntervalMs'] && !(typeof data['refreshIntervalMs'] === 'string' || data['refreshIntervalMs'] instanceof String)) {
            throw new Error("Expected the field `refreshIntervalMs` to be a primitive type in the JSON string but got " + data['refreshIntervalMs']);
        }

        return true;
    }


}



/**
 * Optional. This option declares authors intention to construct a materialized view that will not be refreshed incrementally.
 * @member {Boolean} allowNonIncrementalDefinition
 */
MaterializedViewDefinition.prototype['allowNonIncrementalDefinition'] = undefined;

/**
 * Optional. Enable automatic refresh of the materialized view when the base table is updated. The default value is \"true\".
 * @member {Boolean} enableRefresh
 */
MaterializedViewDefinition.prototype['enableRefresh'] = undefined;

/**
 * Output only. The time when this materialized view was last refreshed, in milliseconds since the epoch.
 * @member {String} lastRefreshTime
 */
MaterializedViewDefinition.prototype['lastRefreshTime'] = undefined;

/**
 * [Optional] Max staleness of data that could be returned when materizlized view is queried (formatted as Google SQL Interval type).
 * @member {Blob} maxStaleness
 */
MaterializedViewDefinition.prototype['maxStaleness'] = undefined;

/**
 * Required. A query whose results are persisted.
 * @member {String} query
 */
MaterializedViewDefinition.prototype['query'] = undefined;

/**
 * Optional. The maximum frequency at which this materialized view will be refreshed. The default value is \"1800000\" (30 minutes).
 * @member {String} refreshIntervalMs
 */
MaterializedViewDefinition.prototype['refreshIntervalMs'] = undefined;






export default MaterializedViewDefinition;

