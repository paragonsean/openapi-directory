/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LoadQueryStatistics model module.
 * @module model/LoadQueryStatistics
 * @version v2
 */
class LoadQueryStatistics {
    /**
     * Constructs a new <code>LoadQueryStatistics</code>.
     * Statistics for a LOAD query.
     * @alias module:model/LoadQueryStatistics
     */
    constructor() { 
        
        LoadQueryStatistics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoadQueryStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoadQueryStatistics} obj Optional instance to populate.
     * @return {module:model/LoadQueryStatistics} The populated <code>LoadQueryStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoadQueryStatistics();

            if (data.hasOwnProperty('badRecords')) {
                obj['badRecords'] = ApiClient.convertToType(data['badRecords'], 'String');
            }
            if (data.hasOwnProperty('bytesTransferred')) {
                obj['bytesTransferred'] = ApiClient.convertToType(data['bytesTransferred'], 'String');
            }
            if (data.hasOwnProperty('inputFileBytes')) {
                obj['inputFileBytes'] = ApiClient.convertToType(data['inputFileBytes'], 'String');
            }
            if (data.hasOwnProperty('inputFiles')) {
                obj['inputFiles'] = ApiClient.convertToType(data['inputFiles'], 'String');
            }
            if (data.hasOwnProperty('outputBytes')) {
                obj['outputBytes'] = ApiClient.convertToType(data['outputBytes'], 'String');
            }
            if (data.hasOwnProperty('outputRows')) {
                obj['outputRows'] = ApiClient.convertToType(data['outputRows'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoadQueryStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoadQueryStatistics</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['badRecords'] && !(typeof data['badRecords'] === 'string' || data['badRecords'] instanceof String)) {
            throw new Error("Expected the field `badRecords` to be a primitive type in the JSON string but got " + data['badRecords']);
        }
        // ensure the json data is a string
        if (data['bytesTransferred'] && !(typeof data['bytesTransferred'] === 'string' || data['bytesTransferred'] instanceof String)) {
            throw new Error("Expected the field `bytesTransferred` to be a primitive type in the JSON string but got " + data['bytesTransferred']);
        }
        // ensure the json data is a string
        if (data['inputFileBytes'] && !(typeof data['inputFileBytes'] === 'string' || data['inputFileBytes'] instanceof String)) {
            throw new Error("Expected the field `inputFileBytes` to be a primitive type in the JSON string but got " + data['inputFileBytes']);
        }
        // ensure the json data is a string
        if (data['inputFiles'] && !(typeof data['inputFiles'] === 'string' || data['inputFiles'] instanceof String)) {
            throw new Error("Expected the field `inputFiles` to be a primitive type in the JSON string but got " + data['inputFiles']);
        }
        // ensure the json data is a string
        if (data['outputBytes'] && !(typeof data['outputBytes'] === 'string' || data['outputBytes'] instanceof String)) {
            throw new Error("Expected the field `outputBytes` to be a primitive type in the JSON string but got " + data['outputBytes']);
        }
        // ensure the json data is a string
        if (data['outputRows'] && !(typeof data['outputRows'] === 'string' || data['outputRows'] instanceof String)) {
            throw new Error("Expected the field `outputRows` to be a primitive type in the JSON string but got " + data['outputRows']);
        }

        return true;
    }


}



/**
 * Output only. The number of bad records encountered while processing a LOAD query. Note that if the job has failed because of more bad records encountered than the maximum allowed in the load job configuration, then this number can be less than the total number of bad records present in the input data.
 * @member {String} badRecords
 */
LoadQueryStatistics.prototype['badRecords'] = undefined;

/**
 * Output only. This field is deprecated. The number of bytes of source data copied over the network for a `LOAD` query. `transferred_bytes` has the canonical value for physical transferred bytes, which is used for BigQuery Omni billing.
 * @member {String} bytesTransferred
 */
LoadQueryStatistics.prototype['bytesTransferred'] = undefined;

/**
 * Output only. Number of bytes of source data in a LOAD query.
 * @member {String} inputFileBytes
 */
LoadQueryStatistics.prototype['inputFileBytes'] = undefined;

/**
 * Output only. Number of source files in a LOAD query.
 * @member {String} inputFiles
 */
LoadQueryStatistics.prototype['inputFiles'] = undefined;

/**
 * Output only. Size of the loaded data in bytes. Note that while a LOAD query is in the running state, this value may change.
 * @member {String} outputBytes
 */
LoadQueryStatistics.prototype['outputBytes'] = undefined;

/**
 * Output only. Number of rows imported in a LOAD query. Note that while a LOAD query is in the running state, this value may change.
 * @member {String} outputRows
 */
LoadQueryStatistics.prototype['outputRows'] = undefined;






export default LoadQueryStatistics;

