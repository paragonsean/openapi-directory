/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModelDefinitionModelOptions model module.
 * @module model/ModelDefinitionModelOptions
 * @version v2
 */
class ModelDefinitionModelOptions {
    /**
     * Constructs a new <code>ModelDefinitionModelOptions</code>.
     * Deprecated.
     * @alias module:model/ModelDefinitionModelOptions
     */
    constructor() { 
        
        ModelDefinitionModelOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModelDefinitionModelOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModelDefinitionModelOptions} obj Optional instance to populate.
     * @return {module:model/ModelDefinitionModelOptions} The populated <code>ModelDefinitionModelOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModelDefinitionModelOptions();

            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], ['String']);
            }
            if (data.hasOwnProperty('lossType')) {
                obj['lossType'] = ApiClient.convertToType(data['lossType'], 'String');
            }
            if (data.hasOwnProperty('modelType')) {
                obj['modelType'] = ApiClient.convertToType(data['modelType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModelDefinitionModelOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModelDefinitionModelOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['labels'])) {
            throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
        }
        // ensure the json data is a string
        if (data['lossType'] && !(typeof data['lossType'] === 'string' || data['lossType'] instanceof String)) {
            throw new Error("Expected the field `lossType` to be a primitive type in the JSON string but got " + data['lossType']);
        }
        // ensure the json data is a string
        if (data['modelType'] && !(typeof data['modelType'] === 'string' || data['modelType'] instanceof String)) {
            throw new Error("Expected the field `modelType` to be a primitive type in the JSON string but got " + data['modelType']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} labels
 */
ModelDefinitionModelOptions.prototype['labels'] = undefined;

/**
 * @member {String} lossType
 */
ModelDefinitionModelOptions.prototype['lossType'] = undefined;

/**
 * @member {String} modelType
 */
ModelDefinitionModelOptions.prototype['modelType'] = undefined;






export default ModelDefinitionModelOptions;

