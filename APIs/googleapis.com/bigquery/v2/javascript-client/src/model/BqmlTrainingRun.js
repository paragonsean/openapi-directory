/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BqmlIterationResult from './BqmlIterationResult';
import BqmlTrainingRunTrainingOptions from './BqmlTrainingRunTrainingOptions';

/**
 * The BqmlTrainingRun model module.
 * @module model/BqmlTrainingRun
 * @version v2
 */
class BqmlTrainingRun {
    /**
     * Constructs a new <code>BqmlTrainingRun</code>.
     * @alias module:model/BqmlTrainingRun
     */
    constructor() { 
        
        BqmlTrainingRun.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BqmlTrainingRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BqmlTrainingRun} obj Optional instance to populate.
     * @return {module:model/BqmlTrainingRun} The populated <code>BqmlTrainingRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BqmlTrainingRun();

            if (data.hasOwnProperty('iterationResults')) {
                obj['iterationResults'] = ApiClient.convertToType(data['iterationResults'], [BqmlIterationResult]);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('trainingOptions')) {
                obj['trainingOptions'] = BqmlTrainingRunTrainingOptions.constructFromObject(data['trainingOptions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BqmlTrainingRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BqmlTrainingRun</code>.
     */
    static validateJSON(data) {
        if (data['iterationResults']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['iterationResults'])) {
                throw new Error("Expected the field `iterationResults` to be an array in the JSON data but got " + data['iterationResults']);
            }
            // validate the optional field `iterationResults` (array)
            for (const item of data['iterationResults']) {
                BqmlIterationResult.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `trainingOptions`
        if (data['trainingOptions']) { // data not null
          BqmlTrainingRunTrainingOptions.validateJSON(data['trainingOptions']);
        }

        return true;
    }


}



/**
 * Deprecated.
 * @member {Array.<module:model/BqmlIterationResult>} iterationResults
 */
BqmlTrainingRun.prototype['iterationResults'] = undefined;

/**
 * Deprecated.
 * @member {Date} startTime
 */
BqmlTrainingRun.prototype['startTime'] = undefined;

/**
 * Deprecated.
 * @member {String} state
 */
BqmlTrainingRun.prototype['state'] = undefined;

/**
 * @member {module:model/BqmlTrainingRunTrainingOptions} trainingOptions
 */
BqmlTrainingRun.prototype['trainingOptions'] = undefined;






export default BqmlTrainingRun;

