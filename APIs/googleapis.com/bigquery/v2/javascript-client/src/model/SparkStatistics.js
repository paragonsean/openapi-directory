/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SparkLoggingInfo from './SparkLoggingInfo';

/**
 * The SparkStatistics model module.
 * @module model/SparkStatistics
 * @version v2
 */
class SparkStatistics {
    /**
     * Constructs a new <code>SparkStatistics</code>.
     * Statistics for a BigSpark query. Populated as part of JobStatistics2
     * @alias module:model/SparkStatistics
     */
    constructor() { 
        
        SparkStatistics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SparkStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SparkStatistics} obj Optional instance to populate.
     * @return {module:model/SparkStatistics} The populated <code>SparkStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SparkStatistics();

            if (data.hasOwnProperty('endpoints')) {
                obj['endpoints'] = ApiClient.convertToType(data['endpoints'], {'String': 'String'});
            }
            if (data.hasOwnProperty('gcsStagingBucket')) {
                obj['gcsStagingBucket'] = ApiClient.convertToType(data['gcsStagingBucket'], 'String');
            }
            if (data.hasOwnProperty('kmsKeyName')) {
                obj['kmsKeyName'] = ApiClient.convertToType(data['kmsKeyName'], 'String');
            }
            if (data.hasOwnProperty('loggingInfo')) {
                obj['loggingInfo'] = SparkLoggingInfo.constructFromObject(data['loggingInfo']);
            }
            if (data.hasOwnProperty('sparkJobId')) {
                obj['sparkJobId'] = ApiClient.convertToType(data['sparkJobId'], 'String');
            }
            if (data.hasOwnProperty('sparkJobLocation')) {
                obj['sparkJobLocation'] = ApiClient.convertToType(data['sparkJobLocation'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SparkStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SparkStatistics</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gcsStagingBucket'] && !(typeof data['gcsStagingBucket'] === 'string' || data['gcsStagingBucket'] instanceof String)) {
            throw new Error("Expected the field `gcsStagingBucket` to be a primitive type in the JSON string but got " + data['gcsStagingBucket']);
        }
        // ensure the json data is a string
        if (data['kmsKeyName'] && !(typeof data['kmsKeyName'] === 'string' || data['kmsKeyName'] instanceof String)) {
            throw new Error("Expected the field `kmsKeyName` to be a primitive type in the JSON string but got " + data['kmsKeyName']);
        }
        // validate the optional field `loggingInfo`
        if (data['loggingInfo']) { // data not null
          SparkLoggingInfo.validateJSON(data['loggingInfo']);
        }
        // ensure the json data is a string
        if (data['sparkJobId'] && !(typeof data['sparkJobId'] === 'string' || data['sparkJobId'] instanceof String)) {
            throw new Error("Expected the field `sparkJobId` to be a primitive type in the JSON string but got " + data['sparkJobId']);
        }
        // ensure the json data is a string
        if (data['sparkJobLocation'] && !(typeof data['sparkJobLocation'] === 'string' || data['sparkJobLocation'] instanceof String)) {
            throw new Error("Expected the field `sparkJobLocation` to be a primitive type in the JSON string but got " + data['sparkJobLocation']);
        }

        return true;
    }


}



/**
 * Output only. Endpoints returned from Dataproc. Key list: - history_server_endpoint: A link to Spark job UI.
 * @member {Object.<String, String>} endpoints
 */
SparkStatistics.prototype['endpoints'] = undefined;

/**
 * Output only. The Google Cloud Storage bucket that is used as the default filesystem by the Spark application. This fields is only filled when the Spark procedure uses the INVOKER security mode. It is inferred from the system variable @@spark_proc_properties.staging_bucket if it is provided. Otherwise, BigQuery creates a default staging bucket for the job and returns the bucket name in this field. Example: * `gs://[bucket_name]`
 * @member {String} gcsStagingBucket
 */
SparkStatistics.prototype['gcsStagingBucket'] = undefined;

/**
 * Output only. The Cloud KMS encryption key that is used to protect the resources created by the Spark job. If the Spark procedure uses DEFINER security mode, the Cloud KMS key is inferred from the Spark connection associated with the procedure if it is provided. Otherwise the key is inferred from the default key of the Spark connection's project if the CMEK organization policy is enforced. If the Spark procedure uses INVOKER security mode, the Cloud KMS encryption key is inferred from the system variable @@spark_proc_properties.kms_key_name if it is provided. Otherwise, the key is inferred fromt he default key of the BigQuery job's project if the CMEK organization policy is enforced. Example: * `projects/[kms_project_id]/locations/[region]/keyRings/[key_region]/cryptoKeys/[key]`
 * @member {String} kmsKeyName
 */
SparkStatistics.prototype['kmsKeyName'] = undefined;

/**
 * @member {module:model/SparkLoggingInfo} loggingInfo
 */
SparkStatistics.prototype['loggingInfo'] = undefined;

/**
 * Output only. Spark job ID if a Spark job is created successfully.
 * @member {String} sparkJobId
 */
SparkStatistics.prototype['sparkJobId'] = undefined;

/**
 * Output only. Location where the Spark job is executed. A location is selected by BigQueury for jobs configured to run in a multi-region.
 * @member {String} sparkJobLocation
 */
SparkStatistics.prototype['sparkJobLocation'] = undefined;






export default SparkStatistics;

