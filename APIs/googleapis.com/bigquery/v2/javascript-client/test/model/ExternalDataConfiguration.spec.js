/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BigQueryApi);
  }
}(this, function(expect, BigQueryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BigQueryApi.ExternalDataConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ExternalDataConfiguration', function() {
    it('should create an instance of ExternalDataConfiguration', function() {
      // uncomment below and update the code to test ExternalDataConfiguration
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be.a(BigQueryApi.ExternalDataConfiguration);
    });

    it('should have the property autodetect (base name: "autodetect")', function() {
      // uncomment below and update the code to test the property autodetect
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property avroOptions (base name: "avroOptions")', function() {
      // uncomment below and update the code to test the property avroOptions
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property bigtableOptions (base name: "bigtableOptions")', function() {
      // uncomment below and update the code to test the property bigtableOptions
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property compression (base name: "compression")', function() {
      // uncomment below and update the code to test the property compression
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property connectionId (base name: "connectionId")', function() {
      // uncomment below and update the code to test the property connectionId
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property csvOptions (base name: "csvOptions")', function() {
      // uncomment below and update the code to test the property csvOptions
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property decimalTargetTypes (base name: "decimalTargetTypes")', function() {
      // uncomment below and update the code to test the property decimalTargetTypes
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property fileSetSpecType (base name: "fileSetSpecType")', function() {
      // uncomment below and update the code to test the property fileSetSpecType
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property googleSheetsOptions (base name: "googleSheetsOptions")', function() {
      // uncomment below and update the code to test the property googleSheetsOptions
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property hivePartitioningOptions (base name: "hivePartitioningOptions")', function() {
      // uncomment below and update the code to test the property hivePartitioningOptions
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property ignoreUnknownValues (base name: "ignoreUnknownValues")', function() {
      // uncomment below and update the code to test the property ignoreUnknownValues
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property jsonExtension (base name: "jsonExtension")', function() {
      // uncomment below and update the code to test the property jsonExtension
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property jsonOptions (base name: "jsonOptions")', function() {
      // uncomment below and update the code to test the property jsonOptions
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property maxBadRecords (base name: "maxBadRecords")', function() {
      // uncomment below and update the code to test the property maxBadRecords
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property metadataCacheMode (base name: "metadataCacheMode")', function() {
      // uncomment below and update the code to test the property metadataCacheMode
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property objectMetadata (base name: "objectMetadata")', function() {
      // uncomment below and update the code to test the property objectMetadata
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property parquetOptions (base name: "parquetOptions")', function() {
      // uncomment below and update the code to test the property parquetOptions
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property referenceFileSchemaUri (base name: "referenceFileSchemaUri")', function() {
      // uncomment below and update the code to test the property referenceFileSchemaUri
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property schema (base name: "schema")', function() {
      // uncomment below and update the code to test the property schema
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property sourceFormat (base name: "sourceFormat")', function() {
      // uncomment below and update the code to test the property sourceFormat
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property sourceUris (base name: "sourceUris")', function() {
      // uncomment below and update the code to test the property sourceUris
      //var instance = new BigQueryApi.ExternalDataConfiguration();
      //expect(instance).to.be();
    });

  });

}));
