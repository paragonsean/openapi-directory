/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BigQueryApi);
  }
}(this, function(expect, BigQueryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BigQueryApi.Table();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Table', function() {
    it('should create an instance of Table', function() {
      // uncomment below and update the code to test Table
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be.a(BigQueryApi.Table);
    });

    it('should have the property biglakeConfiguration (base name: "biglakeConfiguration")', function() {
      // uncomment below and update the code to test the property biglakeConfiguration
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property cloneDefinition (base name: "cloneDefinition")', function() {
      // uncomment below and update the code to test the property cloneDefinition
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property clustering (base name: "clustering")', function() {
      // uncomment below and update the code to test the property clustering
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "creationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property defaultCollation (base name: "defaultCollation")', function() {
      // uncomment below and update the code to test the property defaultCollation
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property defaultRoundingMode (base name: "defaultRoundingMode")', function() {
      // uncomment below and update the code to test the property defaultRoundingMode
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property encryptionConfiguration (base name: "encryptionConfiguration")', function() {
      // uncomment below and update the code to test the property encryptionConfiguration
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property expirationTime (base name: "expirationTime")', function() {
      // uncomment below and update the code to test the property expirationTime
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property externalDataConfiguration (base name: "externalDataConfiguration")', function() {
      // uncomment below and update the code to test the property externalDataConfiguration
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property friendlyName (base name: "friendlyName")', function() {
      // uncomment below and update the code to test the property friendlyName
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedTime (base name: "lastModifiedTime")', function() {
      // uncomment below and update the code to test the property lastModifiedTime
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property materializedView (base name: "materializedView")', function() {
      // uncomment below and update the code to test the property materializedView
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property materializedViewStatus (base name: "materializedViewStatus")', function() {
      // uncomment below and update the code to test the property materializedViewStatus
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property maxStaleness (base name: "maxStaleness")', function() {
      // uncomment below and update the code to test the property maxStaleness
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numActiveLogicalBytes (base name: "numActiveLogicalBytes")', function() {
      // uncomment below and update the code to test the property numActiveLogicalBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numActivePhysicalBytes (base name: "numActivePhysicalBytes")', function() {
      // uncomment below and update the code to test the property numActivePhysicalBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numBytes (base name: "numBytes")', function() {
      // uncomment below and update the code to test the property numBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numLongTermBytes (base name: "numLongTermBytes")', function() {
      // uncomment below and update the code to test the property numLongTermBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numLongTermLogicalBytes (base name: "numLongTermLogicalBytes")', function() {
      // uncomment below and update the code to test the property numLongTermLogicalBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numLongTermPhysicalBytes (base name: "numLongTermPhysicalBytes")', function() {
      // uncomment below and update the code to test the property numLongTermPhysicalBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numPartitions (base name: "numPartitions")', function() {
      // uncomment below and update the code to test the property numPartitions
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numPhysicalBytes (base name: "numPhysicalBytes")', function() {
      // uncomment below and update the code to test the property numPhysicalBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numRows (base name: "numRows")', function() {
      // uncomment below and update the code to test the property numRows
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numTimeTravelPhysicalBytes (base name: "numTimeTravelPhysicalBytes")', function() {
      // uncomment below and update the code to test the property numTimeTravelPhysicalBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numTotalLogicalBytes (base name: "numTotalLogicalBytes")', function() {
      // uncomment below and update the code to test the property numTotalLogicalBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property numTotalPhysicalBytes (base name: "numTotalPhysicalBytes")', function() {
      // uncomment below and update the code to test the property numTotalPhysicalBytes
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property rangePartitioning (base name: "rangePartitioning")', function() {
      // uncomment below and update the code to test the property rangePartitioning
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property replicas (base name: "replicas")', function() {
      // uncomment below and update the code to test the property replicas
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property requirePartitionFilter (base name: "requirePartitionFilter")', function() {
      // uncomment below and update the code to test the property requirePartitionFilter
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property resourceTags (base name: "resourceTags")', function() {
      // uncomment below and update the code to test the property resourceTags
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property schema (base name: "schema")', function() {
      // uncomment below and update the code to test the property schema
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property selfLink (base name: "selfLink")', function() {
      // uncomment below and update the code to test the property selfLink
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property snapshotDefinition (base name: "snapshotDefinition")', function() {
      // uncomment below and update the code to test the property snapshotDefinition
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property streamingBuffer (base name: "streamingBuffer")', function() {
      // uncomment below and update the code to test the property streamingBuffer
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property tableConstraints (base name: "tableConstraints")', function() {
      // uncomment below and update the code to test the property tableConstraints
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property tableReference (base name: "tableReference")', function() {
      // uncomment below and update the code to test the property tableReference
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property tableReplicationInfo (base name: "tableReplicationInfo")', function() {
      // uncomment below and update the code to test the property tableReplicationInfo
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property timePartitioning (base name: "timePartitioning")', function() {
      // uncomment below and update the code to test the property timePartitioning
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

    it('should have the property view (base name: "view")', function() {
      // uncomment below and update the code to test the property view
      //var instance = new BigQueryApi.Table();
      //expect(instance).to.be();
    });

  });

}));
