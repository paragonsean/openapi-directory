/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BigQueryApi);
  }
}(this, function(expect, BigQueryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BigQueryApi.TrainingOptions();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TrainingOptions', function() {
    it('should create an instance of TrainingOptions', function() {
      // uncomment below and update the code to test TrainingOptions
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be.a(BigQueryApi.TrainingOptions);
    });

    it('should have the property activationFn (base name: "activationFn")', function() {
      // uncomment below and update the code to test the property activationFn
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property adjustStepChanges (base name: "adjustStepChanges")', function() {
      // uncomment below and update the code to test the property adjustStepChanges
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property approxGlobalFeatureContrib (base name: "approxGlobalFeatureContrib")', function() {
      // uncomment below and update the code to test the property approxGlobalFeatureContrib
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property autoArima (base name: "autoArima")', function() {
      // uncomment below and update the code to test the property autoArima
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property autoArimaMaxOrder (base name: "autoArimaMaxOrder")', function() {
      // uncomment below and update the code to test the property autoArimaMaxOrder
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property autoArimaMinOrder (base name: "autoArimaMinOrder")', function() {
      // uncomment below and update the code to test the property autoArimaMinOrder
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property autoClassWeights (base name: "autoClassWeights")', function() {
      // uncomment below and update the code to test the property autoClassWeights
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property batchSize (base name: "batchSize")', function() {
      // uncomment below and update the code to test the property batchSize
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property boosterType (base name: "boosterType")', function() {
      // uncomment below and update the code to test the property boosterType
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property budgetHours (base name: "budgetHours")', function() {
      // uncomment below and update the code to test the property budgetHours
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property calculatePValues (base name: "calculatePValues")', function() {
      // uncomment below and update the code to test the property calculatePValues
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property categoryEncodingMethod (base name: "categoryEncodingMethod")', function() {
      // uncomment below and update the code to test the property categoryEncodingMethod
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property cleanSpikesAndDips (base name: "cleanSpikesAndDips")', function() {
      // uncomment below and update the code to test the property cleanSpikesAndDips
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property colorSpace (base name: "colorSpace")', function() {
      // uncomment below and update the code to test the property colorSpace
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property colsampleBylevel (base name: "colsampleBylevel")', function() {
      // uncomment below and update the code to test the property colsampleBylevel
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property colsampleBynode (base name: "colsampleBynode")', function() {
      // uncomment below and update the code to test the property colsampleBynode
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property colsampleBytree (base name: "colsampleBytree")', function() {
      // uncomment below and update the code to test the property colsampleBytree
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property dartNormalizeType (base name: "dartNormalizeType")', function() {
      // uncomment below and update the code to test the property dartNormalizeType
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property dataFrequency (base name: "dataFrequency")', function() {
      // uncomment below and update the code to test the property dataFrequency
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property dataSplitColumn (base name: "dataSplitColumn")', function() {
      // uncomment below and update the code to test the property dataSplitColumn
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property dataSplitEvalFraction (base name: "dataSplitEvalFraction")', function() {
      // uncomment below and update the code to test the property dataSplitEvalFraction
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property dataSplitMethod (base name: "dataSplitMethod")', function() {
      // uncomment below and update the code to test the property dataSplitMethod
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property decomposeTimeSeries (base name: "decomposeTimeSeries")', function() {
      // uncomment below and update the code to test the property decomposeTimeSeries
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property distanceType (base name: "distanceType")', function() {
      // uncomment below and update the code to test the property distanceType
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property dropout (base name: "dropout")', function() {
      // uncomment below and update the code to test the property dropout
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property earlyStop (base name: "earlyStop")', function() {
      // uncomment below and update the code to test the property earlyStop
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property enableGlobalExplain (base name: "enableGlobalExplain")', function() {
      // uncomment below and update the code to test the property enableGlobalExplain
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property feedbackType (base name: "feedbackType")', function() {
      // uncomment below and update the code to test the property feedbackType
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property fitIntercept (base name: "fitIntercept")', function() {
      // uncomment below and update the code to test the property fitIntercept
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property hiddenUnits (base name: "hiddenUnits")', function() {
      // uncomment below and update the code to test the property hiddenUnits
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property holidayRegion (base name: "holidayRegion")', function() {
      // uncomment below and update the code to test the property holidayRegion
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property holidayRegions (base name: "holidayRegions")', function() {
      // uncomment below and update the code to test the property holidayRegions
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property horizon (base name: "horizon")', function() {
      // uncomment below and update the code to test the property horizon
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property hparamTuningObjectives (base name: "hparamTuningObjectives")', function() {
      // uncomment below and update the code to test the property hparamTuningObjectives
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property includeDrift (base name: "includeDrift")', function() {
      // uncomment below and update the code to test the property includeDrift
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property initialLearnRate (base name: "initialLearnRate")', function() {
      // uncomment below and update the code to test the property initialLearnRate
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property inputLabelColumns (base name: "inputLabelColumns")', function() {
      // uncomment below and update the code to test the property inputLabelColumns
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property instanceWeightColumn (base name: "instanceWeightColumn")', function() {
      // uncomment below and update the code to test the property instanceWeightColumn
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property integratedGradientsNumSteps (base name: "integratedGradientsNumSteps")', function() {
      // uncomment below and update the code to test the property integratedGradientsNumSteps
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property itemColumn (base name: "itemColumn")', function() {
      // uncomment below and update the code to test the property itemColumn
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property kmeansInitializationColumn (base name: "kmeansInitializationColumn")', function() {
      // uncomment below and update the code to test the property kmeansInitializationColumn
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property kmeansInitializationMethod (base name: "kmeansInitializationMethod")', function() {
      // uncomment below and update the code to test the property kmeansInitializationMethod
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property l1RegActivation (base name: "l1RegActivation")', function() {
      // uncomment below and update the code to test the property l1RegActivation
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property l1Regularization (base name: "l1Regularization")', function() {
      // uncomment below and update the code to test the property l1Regularization
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property l2Regularization (base name: "l2Regularization")', function() {
      // uncomment below and update the code to test the property l2Regularization
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property labelClassWeights (base name: "labelClassWeights")', function() {
      // uncomment below and update the code to test the property labelClassWeights
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property learnRate (base name: "learnRate")', function() {
      // uncomment below and update the code to test the property learnRate
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property learnRateStrategy (base name: "learnRateStrategy")', function() {
      // uncomment below and update the code to test the property learnRateStrategy
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property lossType (base name: "lossType")', function() {
      // uncomment below and update the code to test the property lossType
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property maxIterations (base name: "maxIterations")', function() {
      // uncomment below and update the code to test the property maxIterations
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property maxParallelTrials (base name: "maxParallelTrials")', function() {
      // uncomment below and update the code to test the property maxParallelTrials
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property maxTimeSeriesLength (base name: "maxTimeSeriesLength")', function() {
      // uncomment below and update the code to test the property maxTimeSeriesLength
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property maxTreeDepth (base name: "maxTreeDepth")', function() {
      // uncomment below and update the code to test the property maxTreeDepth
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property minRelativeProgress (base name: "minRelativeProgress")', function() {
      // uncomment below and update the code to test the property minRelativeProgress
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property minSplitLoss (base name: "minSplitLoss")', function() {
      // uncomment below and update the code to test the property minSplitLoss
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property minTimeSeriesLength (base name: "minTimeSeriesLength")', function() {
      // uncomment below and update the code to test the property minTimeSeriesLength
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property minTreeChildWeight (base name: "minTreeChildWeight")', function() {
      // uncomment below and update the code to test the property minTreeChildWeight
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property modelRegistry (base name: "modelRegistry")', function() {
      // uncomment below and update the code to test the property modelRegistry
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property modelUri (base name: "modelUri")', function() {
      // uncomment below and update the code to test the property modelUri
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property nonSeasonalOrder (base name: "nonSeasonalOrder")', function() {
      // uncomment below and update the code to test the property nonSeasonalOrder
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property numClusters (base name: "numClusters")', function() {
      // uncomment below and update the code to test the property numClusters
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property numFactors (base name: "numFactors")', function() {
      // uncomment below and update the code to test the property numFactors
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property numParallelTree (base name: "numParallelTree")', function() {
      // uncomment below and update the code to test the property numParallelTree
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property numPrincipalComponents (base name: "numPrincipalComponents")', function() {
      // uncomment below and update the code to test the property numPrincipalComponents
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property numTrials (base name: "numTrials")', function() {
      // uncomment below and update the code to test the property numTrials
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property optimizationStrategy (base name: "optimizationStrategy")', function() {
      // uncomment below and update the code to test the property optimizationStrategy
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property optimizer (base name: "optimizer")', function() {
      // uncomment below and update the code to test the property optimizer
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property pcaExplainedVarianceRatio (base name: "pcaExplainedVarianceRatio")', function() {
      // uncomment below and update the code to test the property pcaExplainedVarianceRatio
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property pcaSolver (base name: "pcaSolver")', function() {
      // uncomment below and update the code to test the property pcaSolver
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property sampledShapleyNumPaths (base name: "sampledShapleyNumPaths")', function() {
      // uncomment below and update the code to test the property sampledShapleyNumPaths
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property scaleFeatures (base name: "scaleFeatures")', function() {
      // uncomment below and update the code to test the property scaleFeatures
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property standardizeFeatures (base name: "standardizeFeatures")', function() {
      // uncomment below and update the code to test the property standardizeFeatures
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property subsample (base name: "subsample")', function() {
      // uncomment below and update the code to test the property subsample
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property tfVersion (base name: "tfVersion")', function() {
      // uncomment below and update the code to test the property tfVersion
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property timeSeriesDataColumn (base name: "timeSeriesDataColumn")', function() {
      // uncomment below and update the code to test the property timeSeriesDataColumn
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property timeSeriesIdColumn (base name: "timeSeriesIdColumn")', function() {
      // uncomment below and update the code to test the property timeSeriesIdColumn
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property timeSeriesIdColumns (base name: "timeSeriesIdColumns")', function() {
      // uncomment below and update the code to test the property timeSeriesIdColumns
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property timeSeriesLengthFraction (base name: "timeSeriesLengthFraction")', function() {
      // uncomment below and update the code to test the property timeSeriesLengthFraction
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property timeSeriesTimestampColumn (base name: "timeSeriesTimestampColumn")', function() {
      // uncomment below and update the code to test the property timeSeriesTimestampColumn
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property treeMethod (base name: "treeMethod")', function() {
      // uncomment below and update the code to test the property treeMethod
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property trendSmoothingWindowSize (base name: "trendSmoothingWindowSize")', function() {
      // uncomment below and update the code to test the property trendSmoothingWindowSize
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property userColumn (base name: "userColumn")', function() {
      // uncomment below and update the code to test the property userColumn
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property vertexAiModelVersionAliases (base name: "vertexAiModelVersionAliases")', function() {
      // uncomment below and update the code to test the property vertexAiModelVersionAliases
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property walsAlpha (base name: "walsAlpha")', function() {
      // uncomment below and update the code to test the property walsAlpha
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property warmStart (base name: "warmStart")', function() {
      // uncomment below and update the code to test the property warmStart
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

    it('should have the property xgboostVersion (base name: "xgboostVersion")', function() {
      // uncomment below and update the code to test the property xgboostVersion
      //var instance = new BigQueryApi.TrainingOptions();
      //expect(instance).to.be();
    });

  });

}));
