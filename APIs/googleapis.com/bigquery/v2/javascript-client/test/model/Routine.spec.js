/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BigQueryApi);
  }
}(this, function(expect, BigQueryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BigQueryApi.Routine();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Routine', function() {
    it('should create an instance of Routine', function() {
      // uncomment below and update the code to test Routine
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be.a(BigQueryApi.Routine);
    });

    it('should have the property _arguments (base name: "arguments")', function() {
      // uncomment below and update the code to test the property _arguments
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property creationTime (base name: "creationTime")', function() {
      // uncomment below and update the code to test the property creationTime
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property dataGovernanceType (base name: "dataGovernanceType")', function() {
      // uncomment below and update the code to test the property dataGovernanceType
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property definitionBody (base name: "definitionBody")', function() {
      // uncomment below and update the code to test the property definitionBody
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property determinismLevel (base name: "determinismLevel")', function() {
      // uncomment below and update the code to test the property determinismLevel
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property importedLibraries (base name: "importedLibraries")', function() {
      // uncomment below and update the code to test the property importedLibraries
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedTime (base name: "lastModifiedTime")', function() {
      // uncomment below and update the code to test the property lastModifiedTime
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property remoteFunctionOptions (base name: "remoteFunctionOptions")', function() {
      // uncomment below and update the code to test the property remoteFunctionOptions
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property returnTableType (base name: "returnTableType")', function() {
      // uncomment below and update the code to test the property returnTableType
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property returnType (base name: "returnType")', function() {
      // uncomment below and update the code to test the property returnType
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property routineReference (base name: "routineReference")', function() {
      // uncomment below and update the code to test the property routineReference
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property routineType (base name: "routineType")', function() {
      // uncomment below and update the code to test the property routineType
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property securityMode (base name: "securityMode")', function() {
      // uncomment below and update the code to test the property securityMode
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property sparkOptions (base name: "sparkOptions")', function() {
      // uncomment below and update the code to test the property sparkOptions
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

    it('should have the property strictMode (base name: "strictMode")', function() {
      // uncomment below and update the code to test the property strictMode
      //var instance = new BigQueryApi.Routine();
      //expect(instance).to.be();
    });

  });

}));
