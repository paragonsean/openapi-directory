# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LoadQueryStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bad_records: str=None, bytes_transferred: str=None, input_file_bytes: str=None, input_files: str=None, output_bytes: str=None, output_rows: str=None):
        """LoadQueryStatistics - a model defined in OpenAPI

        :param bad_records: The bad_records of this LoadQueryStatistics.
        :param bytes_transferred: The bytes_transferred of this LoadQueryStatistics.
        :param input_file_bytes: The input_file_bytes of this LoadQueryStatistics.
        :param input_files: The input_files of this LoadQueryStatistics.
        :param output_bytes: The output_bytes of this LoadQueryStatistics.
        :param output_rows: The output_rows of this LoadQueryStatistics.
        """
        self.openapi_types = {
            'bad_records': str,
            'bytes_transferred': str,
            'input_file_bytes': str,
            'input_files': str,
            'output_bytes': str,
            'output_rows': str
        }

        self.attribute_map = {
            'bad_records': 'badRecords',
            'bytes_transferred': 'bytesTransferred',
            'input_file_bytes': 'inputFileBytes',
            'input_files': 'inputFiles',
            'output_bytes': 'outputBytes',
            'output_rows': 'outputRows'
        }

        self._bad_records = bad_records
        self._bytes_transferred = bytes_transferred
        self._input_file_bytes = input_file_bytes
        self._input_files = input_files
        self._output_bytes = output_bytes
        self._output_rows = output_rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoadQueryStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoadQueryStatistics of this LoadQueryStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bad_records(self):
        """Gets the bad_records of this LoadQueryStatistics.

        Output only. The number of bad records encountered while processing a LOAD query. Note that if the job has failed because of more bad records encountered than the maximum allowed in the load job configuration, then this number can be less than the total number of bad records present in the input data.

        :return: The bad_records of this LoadQueryStatistics.
        :rtype: str
        """
        return self._bad_records

    @bad_records.setter
    def bad_records(self, bad_records):
        """Sets the bad_records of this LoadQueryStatistics.

        Output only. The number of bad records encountered while processing a LOAD query. Note that if the job has failed because of more bad records encountered than the maximum allowed in the load job configuration, then this number can be less than the total number of bad records present in the input data.

        :param bad_records: The bad_records of this LoadQueryStatistics.
        :type bad_records: str
        """

        self._bad_records = bad_records

    @property
    def bytes_transferred(self):
        """Gets the bytes_transferred of this LoadQueryStatistics.

        Output only. This field is deprecated. The number of bytes of source data copied over the network for a `LOAD` query. `transferred_bytes` has the canonical value for physical transferred bytes, which is used for BigQuery Omni billing.

        :return: The bytes_transferred of this LoadQueryStatistics.
        :rtype: str
        """
        return self._bytes_transferred

    @bytes_transferred.setter
    def bytes_transferred(self, bytes_transferred):
        """Sets the bytes_transferred of this LoadQueryStatistics.

        Output only. This field is deprecated. The number of bytes of source data copied over the network for a `LOAD` query. `transferred_bytes` has the canonical value for physical transferred bytes, which is used for BigQuery Omni billing.

        :param bytes_transferred: The bytes_transferred of this LoadQueryStatistics.
        :type bytes_transferred: str
        """

        self._bytes_transferred = bytes_transferred

    @property
    def input_file_bytes(self):
        """Gets the input_file_bytes of this LoadQueryStatistics.

        Output only. Number of bytes of source data in a LOAD query.

        :return: The input_file_bytes of this LoadQueryStatistics.
        :rtype: str
        """
        return self._input_file_bytes

    @input_file_bytes.setter
    def input_file_bytes(self, input_file_bytes):
        """Sets the input_file_bytes of this LoadQueryStatistics.

        Output only. Number of bytes of source data in a LOAD query.

        :param input_file_bytes: The input_file_bytes of this LoadQueryStatistics.
        :type input_file_bytes: str
        """

        self._input_file_bytes = input_file_bytes

    @property
    def input_files(self):
        """Gets the input_files of this LoadQueryStatistics.

        Output only. Number of source files in a LOAD query.

        :return: The input_files of this LoadQueryStatistics.
        :rtype: str
        """
        return self._input_files

    @input_files.setter
    def input_files(self, input_files):
        """Sets the input_files of this LoadQueryStatistics.

        Output only. Number of source files in a LOAD query.

        :param input_files: The input_files of this LoadQueryStatistics.
        :type input_files: str
        """

        self._input_files = input_files

    @property
    def output_bytes(self):
        """Gets the output_bytes of this LoadQueryStatistics.

        Output only. Size of the loaded data in bytes. Note that while a LOAD query is in the running state, this value may change.

        :return: The output_bytes of this LoadQueryStatistics.
        :rtype: str
        """
        return self._output_bytes

    @output_bytes.setter
    def output_bytes(self, output_bytes):
        """Sets the output_bytes of this LoadQueryStatistics.

        Output only. Size of the loaded data in bytes. Note that while a LOAD query is in the running state, this value may change.

        :param output_bytes: The output_bytes of this LoadQueryStatistics.
        :type output_bytes: str
        """

        self._output_bytes = output_bytes

    @property
    def output_rows(self):
        """Gets the output_rows of this LoadQueryStatistics.

        Output only. Number of rows imported in a LOAD query. Note that while a LOAD query is in the running state, this value may change.

        :return: The output_rows of this LoadQueryStatistics.
        :rtype: str
        """
        return self._output_rows

    @output_rows.setter
    def output_rows(self, output_rows):
        """Sets the output_rows of this LoadQueryStatistics.

        Output only. Number of rows imported in a LOAD query. Note that while a LOAD query is in the running state, this value may change.

        :param output_rows: The output_rows of this LoadQueryStatistics.
        :type output_rows: str
        """

        self._output_rows = output_rows
