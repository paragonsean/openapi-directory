# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArimaOrder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, d: str=None, p: str=None, q: str=None):
        """ArimaOrder - a model defined in OpenAPI

        :param d: The d of this ArimaOrder.
        :param p: The p of this ArimaOrder.
        :param q: The q of this ArimaOrder.
        """
        self.openapi_types = {
            'd': str,
            'p': str,
            'q': str
        }

        self.attribute_map = {
            'd': 'd',
            'p': 'p',
            'q': 'q'
        }

        self._d = d
        self._p = p
        self._q = q

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArimaOrder':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArimaOrder of this ArimaOrder.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def d(self):
        """Gets the d of this ArimaOrder.

        Order of the differencing part.

        :return: The d of this ArimaOrder.
        :rtype: str
        """
        return self._d

    @d.setter
    def d(self, d):
        """Sets the d of this ArimaOrder.

        Order of the differencing part.

        :param d: The d of this ArimaOrder.
        :type d: str
        """

        self._d = d

    @property
    def p(self):
        """Gets the p of this ArimaOrder.

        Order of the autoregressive part.

        :return: The p of this ArimaOrder.
        :rtype: str
        """
        return self._p

    @p.setter
    def p(self, p):
        """Sets the p of this ArimaOrder.

        Order of the autoregressive part.

        :param p: The p of this ArimaOrder.
        :type p: str
        """

        self._p = p

    @property
    def q(self):
        """Gets the q of this ArimaOrder.

        Order of the moving-average part.

        :return: The q of this ArimaOrder.
        :rtype: str
        """
        return self._q

    @q.setter
    def q(self, q):
        """Sets the q of this ArimaOrder.

        Order of the moving-average part.

        :param q: The q of this ArimaOrder.
        :type q: str
        """

        self._q = q
