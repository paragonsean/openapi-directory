# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UndeleteDatasetRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deletion_time: str=None):
        """UndeleteDatasetRequest - a model defined in OpenAPI

        :param deletion_time: The deletion_time of this UndeleteDatasetRequest.
        """
        self.openapi_types = {
            'deletion_time': str
        }

        self.attribute_map = {
            'deletion_time': 'deletionTime'
        }

        self._deletion_time = deletion_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UndeleteDatasetRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UndeleteDatasetRequest of this UndeleteDatasetRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deletion_time(self):
        """Gets the deletion_time of this UndeleteDatasetRequest.

        Optional. The exact time when the dataset was deleted. If not specified, it will undelete the most recently deleted version.

        :return: The deletion_time of this UndeleteDatasetRequest.
        :rtype: str
        """
        return self._deletion_time

    @deletion_time.setter
    def deletion_time(self, deletion_time):
        """Sets the deletion_time of this UndeleteDatasetRequest.

        Optional. The exact time when the dataset was deleted. If not specified, it will undelete the most recently deleted version.

        :param deletion_time: The deletion_time of this UndeleteDatasetRequest.
        :type deletion_time: str
        """

        self._deletion_time = deletion_time
