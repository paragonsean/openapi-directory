# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DmlStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted_row_count: str=None, inserted_row_count: str=None, updated_row_count: str=None):
        """DmlStatistics - a model defined in OpenAPI

        :param deleted_row_count: The deleted_row_count of this DmlStatistics.
        :param inserted_row_count: The inserted_row_count of this DmlStatistics.
        :param updated_row_count: The updated_row_count of this DmlStatistics.
        """
        self.openapi_types = {
            'deleted_row_count': str,
            'inserted_row_count': str,
            'updated_row_count': str
        }

        self.attribute_map = {
            'deleted_row_count': 'deletedRowCount',
            'inserted_row_count': 'insertedRowCount',
            'updated_row_count': 'updatedRowCount'
        }

        self._deleted_row_count = deleted_row_count
        self._inserted_row_count = inserted_row_count
        self._updated_row_count = updated_row_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DmlStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DmlStatistics of this DmlStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted_row_count(self):
        """Gets the deleted_row_count of this DmlStatistics.

        Output only. Number of deleted Rows. populated by DML DELETE, MERGE and TRUNCATE statements.

        :return: The deleted_row_count of this DmlStatistics.
        :rtype: str
        """
        return self._deleted_row_count

    @deleted_row_count.setter
    def deleted_row_count(self, deleted_row_count):
        """Sets the deleted_row_count of this DmlStatistics.

        Output only. Number of deleted Rows. populated by DML DELETE, MERGE and TRUNCATE statements.

        :param deleted_row_count: The deleted_row_count of this DmlStatistics.
        :type deleted_row_count: str
        """

        self._deleted_row_count = deleted_row_count

    @property
    def inserted_row_count(self):
        """Gets the inserted_row_count of this DmlStatistics.

        Output only. Number of inserted Rows. Populated by DML INSERT and MERGE statements

        :return: The inserted_row_count of this DmlStatistics.
        :rtype: str
        """
        return self._inserted_row_count

    @inserted_row_count.setter
    def inserted_row_count(self, inserted_row_count):
        """Sets the inserted_row_count of this DmlStatistics.

        Output only. Number of inserted Rows. Populated by DML INSERT and MERGE statements

        :param inserted_row_count: The inserted_row_count of this DmlStatistics.
        :type inserted_row_count: str
        """

        self._inserted_row_count = inserted_row_count

    @property
    def updated_row_count(self):
        """Gets the updated_row_count of this DmlStatistics.

        Output only. Number of updated Rows. Populated by DML UPDATE and MERGE statements.

        :return: The updated_row_count of this DmlStatistics.
        :rtype: str
        """
        return self._updated_row_count

    @updated_row_count.setter
    def updated_row_count(self, updated_row_count):
        """Sets the updated_row_count of this DmlStatistics.

        Output only. Number of updated Rows. Populated by DML UPDATE and MERGE statements.

        :param updated_row_count: The updated_row_count of this DmlStatistics.
        :type updated_row_count: str
        """

        self._updated_row_count = updated_row_count
