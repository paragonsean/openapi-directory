# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.table_reference import TableReference
from openapi_server import util


class CloneDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_table_reference: TableReference=None, clone_time: datetime=None):
        """CloneDefinition - a model defined in OpenAPI

        :param base_table_reference: The base_table_reference of this CloneDefinition.
        :param clone_time: The clone_time of this CloneDefinition.
        """
        self.openapi_types = {
            'base_table_reference': TableReference,
            'clone_time': datetime
        }

        self.attribute_map = {
            'base_table_reference': 'baseTableReference',
            'clone_time': 'cloneTime'
        }

        self._base_table_reference = base_table_reference
        self._clone_time = clone_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloneDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloneDefinition of this CloneDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_table_reference(self):
        """Gets the base_table_reference of this CloneDefinition.


        :return: The base_table_reference of this CloneDefinition.
        :rtype: TableReference
        """
        return self._base_table_reference

    @base_table_reference.setter
    def base_table_reference(self, base_table_reference):
        """Sets the base_table_reference of this CloneDefinition.


        :param base_table_reference: The base_table_reference of this CloneDefinition.
        :type base_table_reference: TableReference
        """

        self._base_table_reference = base_table_reference

    @property
    def clone_time(self):
        """Gets the clone_time of this CloneDefinition.

        Required. The time at which the base table was cloned. This value is reported in the JSON response using RFC3339 format.

        :return: The clone_time of this CloneDefinition.
        :rtype: datetime
        """
        return self._clone_time

    @clone_time.setter
    def clone_time(self, clone_time):
        """Sets the clone_time of this CloneDefinition.

        Required. The time at which the base table was cloned. This value is reported in the JSON response using RFC3339 format.

        :param clone_time: The clone_time of this CloneDefinition.
        :type clone_time: datetime
        """

        self._clone_time = clone_time
