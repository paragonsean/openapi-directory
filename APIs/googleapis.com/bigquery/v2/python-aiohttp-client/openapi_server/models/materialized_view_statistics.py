# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.materialized_view import MaterializedView
from openapi_server import util


class MaterializedViewStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, materialized_view: List[MaterializedView]=None):
        """MaterializedViewStatistics - a model defined in OpenAPI

        :param materialized_view: The materialized_view of this MaterializedViewStatistics.
        """
        self.openapi_types = {
            'materialized_view': List[MaterializedView]
        }

        self.attribute_map = {
            'materialized_view': 'materializedView'
        }

        self._materialized_view = materialized_view

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MaterializedViewStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MaterializedViewStatistics of this MaterializedViewStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def materialized_view(self):
        """Gets the materialized_view of this MaterializedViewStatistics.

        Materialized views considered for the query job. Only certain materialized views are used. For a detailed list, see the child message. If many materialized views are considered, then the list might be incomplete.

        :return: The materialized_view of this MaterializedViewStatistics.
        :rtype: List[MaterializedView]
        """
        return self._materialized_view

    @materialized_view.setter
    def materialized_view(self, materialized_view):
        """Sets the materialized_view of this MaterializedViewStatistics.

        Materialized views considered for the query job. Only certain materialized views are used. For a detailed list, see the child message. If many materialized views are considered, then the list might be incomplete.

        :param materialized_view: The materialized_view of this MaterializedViewStatistics.
        :type materialized_view: List[MaterializedView]
        """

        self._materialized_view = materialized_view
