# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BqmlTrainingRunTrainingOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, early_stop: bool=None, l1_reg: float=None, l2_reg: float=None, learn_rate: float=None, learn_rate_strategy: str=None, line_search_init_learn_rate: float=None, max_iteration: str=None, min_rel_progress: float=None, warm_start: bool=None):
        """BqmlTrainingRunTrainingOptions - a model defined in OpenAPI

        :param early_stop: The early_stop of this BqmlTrainingRunTrainingOptions.
        :param l1_reg: The l1_reg of this BqmlTrainingRunTrainingOptions.
        :param l2_reg: The l2_reg of this BqmlTrainingRunTrainingOptions.
        :param learn_rate: The learn_rate of this BqmlTrainingRunTrainingOptions.
        :param learn_rate_strategy: The learn_rate_strategy of this BqmlTrainingRunTrainingOptions.
        :param line_search_init_learn_rate: The line_search_init_learn_rate of this BqmlTrainingRunTrainingOptions.
        :param max_iteration: The max_iteration of this BqmlTrainingRunTrainingOptions.
        :param min_rel_progress: The min_rel_progress of this BqmlTrainingRunTrainingOptions.
        :param warm_start: The warm_start of this BqmlTrainingRunTrainingOptions.
        """
        self.openapi_types = {
            'early_stop': bool,
            'l1_reg': float,
            'l2_reg': float,
            'learn_rate': float,
            'learn_rate_strategy': str,
            'line_search_init_learn_rate': float,
            'max_iteration': str,
            'min_rel_progress': float,
            'warm_start': bool
        }

        self.attribute_map = {
            'early_stop': 'earlyStop',
            'l1_reg': 'l1Reg',
            'l2_reg': 'l2Reg',
            'learn_rate': 'learnRate',
            'learn_rate_strategy': 'learnRateStrategy',
            'line_search_init_learn_rate': 'lineSearchInitLearnRate',
            'max_iteration': 'maxIteration',
            'min_rel_progress': 'minRelProgress',
            'warm_start': 'warmStart'
        }

        self._early_stop = early_stop
        self._l1_reg = l1_reg
        self._l2_reg = l2_reg
        self._learn_rate = learn_rate
        self._learn_rate_strategy = learn_rate_strategy
        self._line_search_init_learn_rate = line_search_init_learn_rate
        self._max_iteration = max_iteration
        self._min_rel_progress = min_rel_progress
        self._warm_start = warm_start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BqmlTrainingRunTrainingOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BqmlTrainingRun_trainingOptions of this BqmlTrainingRunTrainingOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def early_stop(self):
        """Gets the early_stop of this BqmlTrainingRunTrainingOptions.


        :return: The early_stop of this BqmlTrainingRunTrainingOptions.
        :rtype: bool
        """
        return self._early_stop

    @early_stop.setter
    def early_stop(self, early_stop):
        """Sets the early_stop of this BqmlTrainingRunTrainingOptions.


        :param early_stop: The early_stop of this BqmlTrainingRunTrainingOptions.
        :type early_stop: bool
        """

        self._early_stop = early_stop

    @property
    def l1_reg(self):
        """Gets the l1_reg of this BqmlTrainingRunTrainingOptions.


        :return: The l1_reg of this BqmlTrainingRunTrainingOptions.
        :rtype: float
        """
        return self._l1_reg

    @l1_reg.setter
    def l1_reg(self, l1_reg):
        """Sets the l1_reg of this BqmlTrainingRunTrainingOptions.


        :param l1_reg: The l1_reg of this BqmlTrainingRunTrainingOptions.
        :type l1_reg: float
        """

        self._l1_reg = l1_reg

    @property
    def l2_reg(self):
        """Gets the l2_reg of this BqmlTrainingRunTrainingOptions.


        :return: The l2_reg of this BqmlTrainingRunTrainingOptions.
        :rtype: float
        """
        return self._l2_reg

    @l2_reg.setter
    def l2_reg(self, l2_reg):
        """Sets the l2_reg of this BqmlTrainingRunTrainingOptions.


        :param l2_reg: The l2_reg of this BqmlTrainingRunTrainingOptions.
        :type l2_reg: float
        """

        self._l2_reg = l2_reg

    @property
    def learn_rate(self):
        """Gets the learn_rate of this BqmlTrainingRunTrainingOptions.


        :return: The learn_rate of this BqmlTrainingRunTrainingOptions.
        :rtype: float
        """
        return self._learn_rate

    @learn_rate.setter
    def learn_rate(self, learn_rate):
        """Sets the learn_rate of this BqmlTrainingRunTrainingOptions.


        :param learn_rate: The learn_rate of this BqmlTrainingRunTrainingOptions.
        :type learn_rate: float
        """

        self._learn_rate = learn_rate

    @property
    def learn_rate_strategy(self):
        """Gets the learn_rate_strategy of this BqmlTrainingRunTrainingOptions.


        :return: The learn_rate_strategy of this BqmlTrainingRunTrainingOptions.
        :rtype: str
        """
        return self._learn_rate_strategy

    @learn_rate_strategy.setter
    def learn_rate_strategy(self, learn_rate_strategy):
        """Sets the learn_rate_strategy of this BqmlTrainingRunTrainingOptions.


        :param learn_rate_strategy: The learn_rate_strategy of this BqmlTrainingRunTrainingOptions.
        :type learn_rate_strategy: str
        """

        self._learn_rate_strategy = learn_rate_strategy

    @property
    def line_search_init_learn_rate(self):
        """Gets the line_search_init_learn_rate of this BqmlTrainingRunTrainingOptions.


        :return: The line_search_init_learn_rate of this BqmlTrainingRunTrainingOptions.
        :rtype: float
        """
        return self._line_search_init_learn_rate

    @line_search_init_learn_rate.setter
    def line_search_init_learn_rate(self, line_search_init_learn_rate):
        """Sets the line_search_init_learn_rate of this BqmlTrainingRunTrainingOptions.


        :param line_search_init_learn_rate: The line_search_init_learn_rate of this BqmlTrainingRunTrainingOptions.
        :type line_search_init_learn_rate: float
        """

        self._line_search_init_learn_rate = line_search_init_learn_rate

    @property
    def max_iteration(self):
        """Gets the max_iteration of this BqmlTrainingRunTrainingOptions.


        :return: The max_iteration of this BqmlTrainingRunTrainingOptions.
        :rtype: str
        """
        return self._max_iteration

    @max_iteration.setter
    def max_iteration(self, max_iteration):
        """Sets the max_iteration of this BqmlTrainingRunTrainingOptions.


        :param max_iteration: The max_iteration of this BqmlTrainingRunTrainingOptions.
        :type max_iteration: str
        """

        self._max_iteration = max_iteration

    @property
    def min_rel_progress(self):
        """Gets the min_rel_progress of this BqmlTrainingRunTrainingOptions.


        :return: The min_rel_progress of this BqmlTrainingRunTrainingOptions.
        :rtype: float
        """
        return self._min_rel_progress

    @min_rel_progress.setter
    def min_rel_progress(self, min_rel_progress):
        """Sets the min_rel_progress of this BqmlTrainingRunTrainingOptions.


        :param min_rel_progress: The min_rel_progress of this BqmlTrainingRunTrainingOptions.
        :type min_rel_progress: float
        """

        self._min_rel_progress = min_rel_progress

    @property
    def warm_start(self):
        """Gets the warm_start of this BqmlTrainingRunTrainingOptions.


        :return: The warm_start of this BqmlTrainingRunTrainingOptions.
        :rtype: bool
        """
        return self._warm_start

    @warm_start.setter
    def warm_start(self, warm_start):
        """Sets the warm_start of this BqmlTrainingRunTrainingOptions.


        :param warm_start: The warm_start of this BqmlTrainingRunTrainingOptions.
        :type warm_start: bool
        """

        self._warm_start = warm_start
