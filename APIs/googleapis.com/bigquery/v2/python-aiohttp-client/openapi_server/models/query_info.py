# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, optimization_details: Dict[str, object]=None):
        """QueryInfo - a model defined in OpenAPI

        :param optimization_details: The optimization_details of this QueryInfo.
        """
        self.openapi_types = {
            'optimization_details': Dict[str, object]
        }

        self.attribute_map = {
            'optimization_details': 'optimizationDetails'
        }

        self._optimization_details = optimization_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryInfo of this QueryInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def optimization_details(self):
        """Gets the optimization_details of this QueryInfo.

        Output only. Information about query optimizations.

        :return: The optimization_details of this QueryInfo.
        :rtype: Dict[str, object]
        """
        return self._optimization_details

    @optimization_details.setter
    def optimization_details(self, optimization_details):
        """Sets the optimization_details of this QueryInfo.

        Output only. Information about query optimizations.

        :param optimization_details: The optimization_details of this QueryInfo.
        :type optimization_details: Dict[str, object]
        """

        self._optimization_details = optimization_details
