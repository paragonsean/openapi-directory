# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bqml_training_run import BqmlTrainingRun
from openapi_server.models.model_definition_model_options import ModelDefinitionModelOptions
from openapi_server import util


class ModelDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, model_options: ModelDefinitionModelOptions=None, training_runs: List[BqmlTrainingRun]=None):
        """ModelDefinition - a model defined in OpenAPI

        :param model_options: The model_options of this ModelDefinition.
        :param training_runs: The training_runs of this ModelDefinition.
        """
        self.openapi_types = {
            'model_options': ModelDefinitionModelOptions,
            'training_runs': List[BqmlTrainingRun]
        }

        self.attribute_map = {
            'model_options': 'modelOptions',
            'training_runs': 'trainingRuns'
        }

        self._model_options = model_options
        self._training_runs = training_runs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ModelDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ModelDefinition of this ModelDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_options(self):
        """Gets the model_options of this ModelDefinition.


        :return: The model_options of this ModelDefinition.
        :rtype: ModelDefinitionModelOptions
        """
        return self._model_options

    @model_options.setter
    def model_options(self, model_options):
        """Sets the model_options of this ModelDefinition.


        :param model_options: The model_options of this ModelDefinition.
        :type model_options: ModelDefinitionModelOptions
        """

        self._model_options = model_options

    @property
    def training_runs(self):
        """Gets the training_runs of this ModelDefinition.

        Deprecated.

        :return: The training_runs of this ModelDefinition.
        :rtype: List[BqmlTrainingRun]
        """
        return self._training_runs

    @training_runs.setter
    def training_runs(self, training_runs):
        """Sets the training_runs of this ModelDefinition.

        Deprecated.

        :param training_runs: The training_runs of this ModelDefinition.
        :type training_runs: List[BqmlTrainingRun]
        """

        self._training_runs = training_runs
