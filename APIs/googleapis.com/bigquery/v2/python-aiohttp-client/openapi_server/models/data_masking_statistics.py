# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataMaskingStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_masking_applied: bool=None):
        """DataMaskingStatistics - a model defined in OpenAPI

        :param data_masking_applied: The data_masking_applied of this DataMaskingStatistics.
        """
        self.openapi_types = {
            'data_masking_applied': bool
        }

        self.attribute_map = {
            'data_masking_applied': 'dataMaskingApplied'
        }

        self._data_masking_applied = data_masking_applied

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataMaskingStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataMaskingStatistics of this DataMaskingStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_masking_applied(self):
        """Gets the data_masking_applied of this DataMaskingStatistics.

        Whether any accessed data was protected by the data masking.

        :return: The data_masking_applied of this DataMaskingStatistics.
        :rtype: bool
        """
        return self._data_masking_applied

    @data_masking_applied.setter
    def data_masking_applied(self, data_masking_applied):
        """Sets the data_masking_applied of this DataMaskingStatistics.

        Whether any accessed data was protected by the data masking.

        :param data_masking_applied: The data_masking_applied of this DataMaskingStatistics.
        :type data_masking_applied: bool
        """

        self._data_masking_applied = data_masking_applied
