# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.table_reference import TableReference
from openapi_server import util


class DataSplitResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, evaluation_table: TableReference=None, test_table: TableReference=None, training_table: TableReference=None):
        """DataSplitResult - a model defined in OpenAPI

        :param evaluation_table: The evaluation_table of this DataSplitResult.
        :param test_table: The test_table of this DataSplitResult.
        :param training_table: The training_table of this DataSplitResult.
        """
        self.openapi_types = {
            'evaluation_table': TableReference,
            'test_table': TableReference,
            'training_table': TableReference
        }

        self.attribute_map = {
            'evaluation_table': 'evaluationTable',
            'test_table': 'testTable',
            'training_table': 'trainingTable'
        }

        self._evaluation_table = evaluation_table
        self._test_table = test_table
        self._training_table = training_table

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataSplitResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataSplitResult of this DataSplitResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def evaluation_table(self):
        """Gets the evaluation_table of this DataSplitResult.


        :return: The evaluation_table of this DataSplitResult.
        :rtype: TableReference
        """
        return self._evaluation_table

    @evaluation_table.setter
    def evaluation_table(self, evaluation_table):
        """Sets the evaluation_table of this DataSplitResult.


        :param evaluation_table: The evaluation_table of this DataSplitResult.
        :type evaluation_table: TableReference
        """

        self._evaluation_table = evaluation_table

    @property
    def test_table(self):
        """Gets the test_table of this DataSplitResult.


        :return: The test_table of this DataSplitResult.
        :rtype: TableReference
        """
        return self._test_table

    @test_table.setter
    def test_table(self, test_table):
        """Sets the test_table of this DataSplitResult.


        :param test_table: The test_table of this DataSplitResult.
        :type test_table: TableReference
        """

        self._test_table = test_table

    @property
    def training_table(self):
        """Gets the training_table of this DataSplitResult.


        :return: The training_table of this DataSplitResult.
        :rtype: TableReference
        """
        return self._training_table

    @training_table.setter
    def training_table(self, training_table):
        """Sets the training_table of this DataSplitResult.


        :param training_table: The training_table of this DataSplitResult.
        :type training_table: TableReference
        """

        self._training_table = training_table
