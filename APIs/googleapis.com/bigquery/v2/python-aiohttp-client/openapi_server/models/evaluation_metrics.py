# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.arima_forecasting_metrics import ArimaForecastingMetrics
from openapi_server.models.binary_classification_metrics import BinaryClassificationMetrics
from openapi_server.models.clustering_metrics import ClusteringMetrics
from openapi_server.models.dimensionality_reduction_metrics import DimensionalityReductionMetrics
from openapi_server.models.multi_class_classification_metrics import MultiClassClassificationMetrics
from openapi_server.models.ranking_metrics import RankingMetrics
from openapi_server.models.regression_metrics import RegressionMetrics
from openapi_server import util


class EvaluationMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arima_forecasting_metrics: ArimaForecastingMetrics=None, binary_classification_metrics: BinaryClassificationMetrics=None, clustering_metrics: ClusteringMetrics=None, dimensionality_reduction_metrics: DimensionalityReductionMetrics=None, multi_class_classification_metrics: MultiClassClassificationMetrics=None, ranking_metrics: RankingMetrics=None, regression_metrics: RegressionMetrics=None):
        """EvaluationMetrics - a model defined in OpenAPI

        :param arima_forecasting_metrics: The arima_forecasting_metrics of this EvaluationMetrics.
        :param binary_classification_metrics: The binary_classification_metrics of this EvaluationMetrics.
        :param clustering_metrics: The clustering_metrics of this EvaluationMetrics.
        :param dimensionality_reduction_metrics: The dimensionality_reduction_metrics of this EvaluationMetrics.
        :param multi_class_classification_metrics: The multi_class_classification_metrics of this EvaluationMetrics.
        :param ranking_metrics: The ranking_metrics of this EvaluationMetrics.
        :param regression_metrics: The regression_metrics of this EvaluationMetrics.
        """
        self.openapi_types = {
            'arima_forecasting_metrics': ArimaForecastingMetrics,
            'binary_classification_metrics': BinaryClassificationMetrics,
            'clustering_metrics': ClusteringMetrics,
            'dimensionality_reduction_metrics': DimensionalityReductionMetrics,
            'multi_class_classification_metrics': MultiClassClassificationMetrics,
            'ranking_metrics': RankingMetrics,
            'regression_metrics': RegressionMetrics
        }

        self.attribute_map = {
            'arima_forecasting_metrics': 'arimaForecastingMetrics',
            'binary_classification_metrics': 'binaryClassificationMetrics',
            'clustering_metrics': 'clusteringMetrics',
            'dimensionality_reduction_metrics': 'dimensionalityReductionMetrics',
            'multi_class_classification_metrics': 'multiClassClassificationMetrics',
            'ranking_metrics': 'rankingMetrics',
            'regression_metrics': 'regressionMetrics'
        }

        self._arima_forecasting_metrics = arima_forecasting_metrics
        self._binary_classification_metrics = binary_classification_metrics
        self._clustering_metrics = clustering_metrics
        self._dimensionality_reduction_metrics = dimensionality_reduction_metrics
        self._multi_class_classification_metrics = multi_class_classification_metrics
        self._ranking_metrics = ranking_metrics
        self._regression_metrics = regression_metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EvaluationMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EvaluationMetrics of this EvaluationMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arima_forecasting_metrics(self):
        """Gets the arima_forecasting_metrics of this EvaluationMetrics.


        :return: The arima_forecasting_metrics of this EvaluationMetrics.
        :rtype: ArimaForecastingMetrics
        """
        return self._arima_forecasting_metrics

    @arima_forecasting_metrics.setter
    def arima_forecasting_metrics(self, arima_forecasting_metrics):
        """Sets the arima_forecasting_metrics of this EvaluationMetrics.


        :param arima_forecasting_metrics: The arima_forecasting_metrics of this EvaluationMetrics.
        :type arima_forecasting_metrics: ArimaForecastingMetrics
        """

        self._arima_forecasting_metrics = arima_forecasting_metrics

    @property
    def binary_classification_metrics(self):
        """Gets the binary_classification_metrics of this EvaluationMetrics.


        :return: The binary_classification_metrics of this EvaluationMetrics.
        :rtype: BinaryClassificationMetrics
        """
        return self._binary_classification_metrics

    @binary_classification_metrics.setter
    def binary_classification_metrics(self, binary_classification_metrics):
        """Sets the binary_classification_metrics of this EvaluationMetrics.


        :param binary_classification_metrics: The binary_classification_metrics of this EvaluationMetrics.
        :type binary_classification_metrics: BinaryClassificationMetrics
        """

        self._binary_classification_metrics = binary_classification_metrics

    @property
    def clustering_metrics(self):
        """Gets the clustering_metrics of this EvaluationMetrics.


        :return: The clustering_metrics of this EvaluationMetrics.
        :rtype: ClusteringMetrics
        """
        return self._clustering_metrics

    @clustering_metrics.setter
    def clustering_metrics(self, clustering_metrics):
        """Sets the clustering_metrics of this EvaluationMetrics.


        :param clustering_metrics: The clustering_metrics of this EvaluationMetrics.
        :type clustering_metrics: ClusteringMetrics
        """

        self._clustering_metrics = clustering_metrics

    @property
    def dimensionality_reduction_metrics(self):
        """Gets the dimensionality_reduction_metrics of this EvaluationMetrics.


        :return: The dimensionality_reduction_metrics of this EvaluationMetrics.
        :rtype: DimensionalityReductionMetrics
        """
        return self._dimensionality_reduction_metrics

    @dimensionality_reduction_metrics.setter
    def dimensionality_reduction_metrics(self, dimensionality_reduction_metrics):
        """Sets the dimensionality_reduction_metrics of this EvaluationMetrics.


        :param dimensionality_reduction_metrics: The dimensionality_reduction_metrics of this EvaluationMetrics.
        :type dimensionality_reduction_metrics: DimensionalityReductionMetrics
        """

        self._dimensionality_reduction_metrics = dimensionality_reduction_metrics

    @property
    def multi_class_classification_metrics(self):
        """Gets the multi_class_classification_metrics of this EvaluationMetrics.


        :return: The multi_class_classification_metrics of this EvaluationMetrics.
        :rtype: MultiClassClassificationMetrics
        """
        return self._multi_class_classification_metrics

    @multi_class_classification_metrics.setter
    def multi_class_classification_metrics(self, multi_class_classification_metrics):
        """Sets the multi_class_classification_metrics of this EvaluationMetrics.


        :param multi_class_classification_metrics: The multi_class_classification_metrics of this EvaluationMetrics.
        :type multi_class_classification_metrics: MultiClassClassificationMetrics
        """

        self._multi_class_classification_metrics = multi_class_classification_metrics

    @property
    def ranking_metrics(self):
        """Gets the ranking_metrics of this EvaluationMetrics.


        :return: The ranking_metrics of this EvaluationMetrics.
        :rtype: RankingMetrics
        """
        return self._ranking_metrics

    @ranking_metrics.setter
    def ranking_metrics(self, ranking_metrics):
        """Sets the ranking_metrics of this EvaluationMetrics.


        :param ranking_metrics: The ranking_metrics of this EvaluationMetrics.
        :type ranking_metrics: RankingMetrics
        """

        self._ranking_metrics = ranking_metrics

    @property
    def regression_metrics(self):
        """Gets the regression_metrics of this EvaluationMetrics.


        :return: The regression_metrics of this EvaluationMetrics.
        :rtype: RegressionMetrics
        """
        return self._regression_metrics

    @regression_metrics.setter
    def regression_metrics(self, regression_metrics):
        """Sets the regression_metrics of this EvaluationMetrics.


        :param regression_metrics: The regression_metrics of this EvaluationMetrics.
        :type regression_metrics: RegressionMetrics
        """

        self._regression_metrics = regression_metrics
