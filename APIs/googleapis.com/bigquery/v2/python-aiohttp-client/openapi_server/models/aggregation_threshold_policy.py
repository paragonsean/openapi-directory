# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AggregationThresholdPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, privacy_unit_columns: List[str]=None, threshold: str=None):
        """AggregationThresholdPolicy - a model defined in OpenAPI

        :param privacy_unit_columns: The privacy_unit_columns of this AggregationThresholdPolicy.
        :param threshold: The threshold of this AggregationThresholdPolicy.
        """
        self.openapi_types = {
            'privacy_unit_columns': List[str],
            'threshold': str
        }

        self.attribute_map = {
            'privacy_unit_columns': 'privacyUnitColumns',
            'threshold': 'threshold'
        }

        self._privacy_unit_columns = privacy_unit_columns
        self._threshold = threshold

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AggregationThresholdPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AggregationThresholdPolicy of this AggregationThresholdPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def privacy_unit_columns(self):
        """Gets the privacy_unit_columns of this AggregationThresholdPolicy.

        Optional. The privacy unit column(s) associated with this policy. For now, only one column per data source object (table, view) is allowed as a privacy unit column. Representing as a repeated field in metadata for extensibility to multiple columns in future. Duplicates and Repeated struct fields are not allowed. For nested fields, use dot notation (\"outer.inner\")

        :return: The privacy_unit_columns of this AggregationThresholdPolicy.
        :rtype: List[str]
        """
        return self._privacy_unit_columns

    @privacy_unit_columns.setter
    def privacy_unit_columns(self, privacy_unit_columns):
        """Sets the privacy_unit_columns of this AggregationThresholdPolicy.

        Optional. The privacy unit column(s) associated with this policy. For now, only one column per data source object (table, view) is allowed as a privacy unit column. Representing as a repeated field in metadata for extensibility to multiple columns in future. Duplicates and Repeated struct fields are not allowed. For nested fields, use dot notation (\"outer.inner\")

        :param privacy_unit_columns: The privacy_unit_columns of this AggregationThresholdPolicy.
        :type privacy_unit_columns: List[str]
        """

        self._privacy_unit_columns = privacy_unit_columns

    @property
    def threshold(self):
        """Gets the threshold of this AggregationThresholdPolicy.

        Optional. The threshold for the \"aggregation threshold\" policy.

        :return: The threshold of this AggregationThresholdPolicy.
        :rtype: str
        """
        return self._threshold

    @threshold.setter
    def threshold(self, threshold):
        """Sets the threshold of this AggregationThresholdPolicy.

        Optional. The threshold for the \"aggregation threshold\" policy.

        :param threshold: The threshold of this AggregationThresholdPolicy.
        :type threshold: str
        """

        self._threshold = threshold
