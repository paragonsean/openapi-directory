# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.arima_result import ArimaResult
from openapi_server.models.cluster_info import ClusterInfo
from openapi_server.models.principal_component_info import PrincipalComponentInfo
from openapi_server import util


class IterationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arima_result: ArimaResult=None, cluster_infos: List[ClusterInfo]=None, duration_ms: str=None, eval_loss: float=None, index: int=None, learn_rate: float=None, principal_component_infos: List[PrincipalComponentInfo]=None, training_loss: float=None):
        """IterationResult - a model defined in OpenAPI

        :param arima_result: The arima_result of this IterationResult.
        :param cluster_infos: The cluster_infos of this IterationResult.
        :param duration_ms: The duration_ms of this IterationResult.
        :param eval_loss: The eval_loss of this IterationResult.
        :param index: The index of this IterationResult.
        :param learn_rate: The learn_rate of this IterationResult.
        :param principal_component_infos: The principal_component_infos of this IterationResult.
        :param training_loss: The training_loss of this IterationResult.
        """
        self.openapi_types = {
            'arima_result': ArimaResult,
            'cluster_infos': List[ClusterInfo],
            'duration_ms': str,
            'eval_loss': float,
            'index': int,
            'learn_rate': float,
            'principal_component_infos': List[PrincipalComponentInfo],
            'training_loss': float
        }

        self.attribute_map = {
            'arima_result': 'arimaResult',
            'cluster_infos': 'clusterInfos',
            'duration_ms': 'durationMs',
            'eval_loss': 'evalLoss',
            'index': 'index',
            'learn_rate': 'learnRate',
            'principal_component_infos': 'principalComponentInfos',
            'training_loss': 'trainingLoss'
        }

        self._arima_result = arima_result
        self._cluster_infos = cluster_infos
        self._duration_ms = duration_ms
        self._eval_loss = eval_loss
        self._index = index
        self._learn_rate = learn_rate
        self._principal_component_infos = principal_component_infos
        self._training_loss = training_loss

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IterationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IterationResult of this IterationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arima_result(self):
        """Gets the arima_result of this IterationResult.


        :return: The arima_result of this IterationResult.
        :rtype: ArimaResult
        """
        return self._arima_result

    @arima_result.setter
    def arima_result(self, arima_result):
        """Sets the arima_result of this IterationResult.


        :param arima_result: The arima_result of this IterationResult.
        :type arima_result: ArimaResult
        """

        self._arima_result = arima_result

    @property
    def cluster_infos(self):
        """Gets the cluster_infos of this IterationResult.

        Information about top clusters for clustering models.

        :return: The cluster_infos of this IterationResult.
        :rtype: List[ClusterInfo]
        """
        return self._cluster_infos

    @cluster_infos.setter
    def cluster_infos(self, cluster_infos):
        """Sets the cluster_infos of this IterationResult.

        Information about top clusters for clustering models.

        :param cluster_infos: The cluster_infos of this IterationResult.
        :type cluster_infos: List[ClusterInfo]
        """

        self._cluster_infos = cluster_infos

    @property
    def duration_ms(self):
        """Gets the duration_ms of this IterationResult.

        Time taken to run the iteration in milliseconds.

        :return: The duration_ms of this IterationResult.
        :rtype: str
        """
        return self._duration_ms

    @duration_ms.setter
    def duration_ms(self, duration_ms):
        """Sets the duration_ms of this IterationResult.

        Time taken to run the iteration in milliseconds.

        :param duration_ms: The duration_ms of this IterationResult.
        :type duration_ms: str
        """

        self._duration_ms = duration_ms

    @property
    def eval_loss(self):
        """Gets the eval_loss of this IterationResult.

        Loss computed on the eval data at the end of iteration.

        :return: The eval_loss of this IterationResult.
        :rtype: float
        """
        return self._eval_loss

    @eval_loss.setter
    def eval_loss(self, eval_loss):
        """Sets the eval_loss of this IterationResult.

        Loss computed on the eval data at the end of iteration.

        :param eval_loss: The eval_loss of this IterationResult.
        :type eval_loss: float
        """

        self._eval_loss = eval_loss

    @property
    def index(self):
        """Gets the index of this IterationResult.

        Index of the iteration, 0 based.

        :return: The index of this IterationResult.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this IterationResult.

        Index of the iteration, 0 based.

        :param index: The index of this IterationResult.
        :type index: int
        """

        self._index = index

    @property
    def learn_rate(self):
        """Gets the learn_rate of this IterationResult.

        Learn rate used for this iteration.

        :return: The learn_rate of this IterationResult.
        :rtype: float
        """
        return self._learn_rate

    @learn_rate.setter
    def learn_rate(self, learn_rate):
        """Sets the learn_rate of this IterationResult.

        Learn rate used for this iteration.

        :param learn_rate: The learn_rate of this IterationResult.
        :type learn_rate: float
        """

        self._learn_rate = learn_rate

    @property
    def principal_component_infos(self):
        """Gets the principal_component_infos of this IterationResult.

        The information of the principal components.

        :return: The principal_component_infos of this IterationResult.
        :rtype: List[PrincipalComponentInfo]
        """
        return self._principal_component_infos

    @principal_component_infos.setter
    def principal_component_infos(self, principal_component_infos):
        """Sets the principal_component_infos of this IterationResult.

        The information of the principal components.

        :param principal_component_infos: The principal_component_infos of this IterationResult.
        :type principal_component_infos: List[PrincipalComponentInfo]
        """

        self._principal_component_infos = principal_component_infos

    @property
    def training_loss(self):
        """Gets the training_loss of this IterationResult.

        Loss computed on the training data at the end of iteration.

        :return: The training_loss of this IterationResult.
        :rtype: float
        """
        return self._training_loss

    @training_loss.setter
    def training_loss(self, training_loss):
        """Sets the training_loss of this IterationResult.

        Loss computed on the training data at the end of iteration.

        :param training_loss: The training_loss of this IterationResult.
        :type training_loss: float
        """

        self._training_loss = training_loss
