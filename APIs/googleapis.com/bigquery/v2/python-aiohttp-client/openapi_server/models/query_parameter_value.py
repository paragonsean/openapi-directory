# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.range_value import RangeValue
from openapi_server import util


class QueryParameterValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, array_values: List[QueryParameterValue]=None, range_value: RangeValue=None, struct_values: Dict[str, QueryParameterValue]=None, value: str=None):
        """QueryParameterValue - a model defined in OpenAPI

        :param array_values: The array_values of this QueryParameterValue.
        :param range_value: The range_value of this QueryParameterValue.
        :param struct_values: The struct_values of this QueryParameterValue.
        :param value: The value of this QueryParameterValue.
        """
        self.openapi_types = {
            'array_values': List[QueryParameterValue],
            'range_value': RangeValue,
            'struct_values': Dict[str, QueryParameterValue],
            'value': str
        }

        self.attribute_map = {
            'array_values': 'arrayValues',
            'range_value': 'rangeValue',
            'struct_values': 'structValues',
            'value': 'value'
        }

        self._array_values = array_values
        self._range_value = range_value
        self._struct_values = struct_values
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryParameterValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryParameterValue of this QueryParameterValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def array_values(self):
        """Gets the array_values of this QueryParameterValue.

        Optional. The array values, if this is an array type.

        :return: The array_values of this QueryParameterValue.
        :rtype: List[QueryParameterValue]
        """
        return self._array_values

    @array_values.setter
    def array_values(self, array_values):
        """Sets the array_values of this QueryParameterValue.

        Optional. The array values, if this is an array type.

        :param array_values: The array_values of this QueryParameterValue.
        :type array_values: List[QueryParameterValue]
        """

        self._array_values = array_values

    @property
    def range_value(self):
        """Gets the range_value of this QueryParameterValue.


        :return: The range_value of this QueryParameterValue.
        :rtype: RangeValue
        """
        return self._range_value

    @range_value.setter
    def range_value(self, range_value):
        """Sets the range_value of this QueryParameterValue.


        :param range_value: The range_value of this QueryParameterValue.
        :type range_value: RangeValue
        """

        self._range_value = range_value

    @property
    def struct_values(self):
        """Gets the struct_values of this QueryParameterValue.

        The struct field values.

        :return: The struct_values of this QueryParameterValue.
        :rtype: Dict[str, QueryParameterValue]
        """
        return self._struct_values

    @struct_values.setter
    def struct_values(self, struct_values):
        """Sets the struct_values of this QueryParameterValue.

        The struct field values.

        :param struct_values: The struct_values of this QueryParameterValue.
        :type struct_values: Dict[str, QueryParameterValue]
        """

        self._struct_values = struct_values

    @property
    def value(self):
        """Gets the value of this QueryParameterValue.

        Optional. The value of this value, if a simple scalar type.

        :return: The value of this QueryParameterValue.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this QueryParameterValue.

        Optional. The value of this value, if a simple scalar type.

        :param value: The value of this QueryParameterValue.
        :type value: str
        """

        self._value = value
