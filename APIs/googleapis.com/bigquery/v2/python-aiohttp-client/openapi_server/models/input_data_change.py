# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InputDataChange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, records_read_diff_percentage: float=None):
        """InputDataChange - a model defined in OpenAPI

        :param records_read_diff_percentage: The records_read_diff_percentage of this InputDataChange.
        """
        self.openapi_types = {
            'records_read_diff_percentage': float
        }

        self.attribute_map = {
            'records_read_diff_percentage': 'recordsReadDiffPercentage'
        }

        self._records_read_diff_percentage = records_read_diff_percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputDataChange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InputDataChange of this InputDataChange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def records_read_diff_percentage(self):
        """Gets the records_read_diff_percentage of this InputDataChange.

        Output only. Records read difference percentage compared to a previous run.

        :return: The records_read_diff_percentage of this InputDataChange.
        :rtype: float
        """
        return self._records_read_diff_percentage

    @records_read_diff_percentage.setter
    def records_read_diff_percentage(self, records_read_diff_percentage):
        """Sets the records_read_diff_percentage of this InputDataChange.

        Output only. Records read difference percentage compared to a previous run.

        :param records_read_diff_percentage: The records_read_diff_percentage of this InputDataChange.
        :type records_read_diff_percentage: float
        """

        self._records_read_diff_percentage = records_read_diff_percentage
