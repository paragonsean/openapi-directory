# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.project_list_projects_inner import ProjectListProjectsInner
from openapi_server import util


class ProjectList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, kind: str='bigquery#projectList', next_page_token: str=None, projects: List[ProjectListProjectsInner]=None, total_items: int=None):
        """ProjectList - a model defined in OpenAPI

        :param etag: The etag of this ProjectList.
        :param kind: The kind of this ProjectList.
        :param next_page_token: The next_page_token of this ProjectList.
        :param projects: The projects of this ProjectList.
        :param total_items: The total_items of this ProjectList.
        """
        self.openapi_types = {
            'etag': str,
            'kind': str,
            'next_page_token': str,
            'projects': List[ProjectListProjectsInner],
            'total_items': int
        }

        self.attribute_map = {
            'etag': 'etag',
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'projects': 'projects',
            'total_items': 'totalItems'
        }

        self._etag = etag
        self._kind = kind
        self._next_page_token = next_page_token
        self._projects = projects
        self._total_items = total_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectList of this ProjectList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this ProjectList.

        A hash of the page of results.

        :return: The etag of this ProjectList.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ProjectList.

        A hash of the page of results.

        :param etag: The etag of this ProjectList.
        :type etag: str
        """

        self._etag = etag

    @property
    def kind(self):
        """Gets the kind of this ProjectList.

        The resource type of the response.

        :return: The kind of this ProjectList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ProjectList.

        The resource type of the response.

        :param kind: The kind of this ProjectList.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ProjectList.

        Use this token to request the next page of results.

        :return: The next_page_token of this ProjectList.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ProjectList.

        Use this token to request the next page of results.

        :param next_page_token: The next_page_token of this ProjectList.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def projects(self):
        """Gets the projects of this ProjectList.

        Projects to which the user has at least READ access.

        :return: The projects of this ProjectList.
        :rtype: List[ProjectListProjectsInner]
        """
        return self._projects

    @projects.setter
    def projects(self, projects):
        """Sets the projects of this ProjectList.

        Projects to which the user has at least READ access.

        :param projects: The projects of this ProjectList.
        :type projects: List[ProjectListProjectsInner]
        """

        self._projects = projects

    @property
    def total_items(self):
        """Gets the total_items of this ProjectList.

        The total number of projects in the page. A wrapper is used here because the field should still be in the response when the value is 0.

        :return: The total_items of this ProjectList.
        :rtype: int
        """
        return self._total_items

    @total_items.setter
    def total_items(self, total_items):
        """Sets the total_items of this ProjectList.

        The total number of projects in the page. A wrapper is used here because the field should still be in the response when the value is 0.

        :param total_items: The total_items of this ProjectList.
        :type total_items: int
        """

        self._total_items = total_items
