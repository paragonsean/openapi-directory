# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.table_reference import TableReference
from openapi_server import util


class TableMetadataCacheUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, explanation: str=None, table_reference: TableReference=None, table_type: str=None, unused_reason: str=None):
        """TableMetadataCacheUsage - a model defined in OpenAPI

        :param explanation: The explanation of this TableMetadataCacheUsage.
        :param table_reference: The table_reference of this TableMetadataCacheUsage.
        :param table_type: The table_type of this TableMetadataCacheUsage.
        :param unused_reason: The unused_reason of this TableMetadataCacheUsage.
        """
        self.openapi_types = {
            'explanation': str,
            'table_reference': TableReference,
            'table_type': str,
            'unused_reason': str
        }

        self.attribute_map = {
            'explanation': 'explanation',
            'table_reference': 'tableReference',
            'table_type': 'tableType',
            'unused_reason': 'unusedReason'
        }

        self._explanation = explanation
        self._table_reference = table_reference
        self._table_type = table_type
        self._unused_reason = unused_reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableMetadataCacheUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableMetadataCacheUsage of this TableMetadataCacheUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def explanation(self):
        """Gets the explanation of this TableMetadataCacheUsage.

        Free form human-readable reason metadata caching was unused for the job.

        :return: The explanation of this TableMetadataCacheUsage.
        :rtype: str
        """
        return self._explanation

    @explanation.setter
    def explanation(self, explanation):
        """Sets the explanation of this TableMetadataCacheUsage.

        Free form human-readable reason metadata caching was unused for the job.

        :param explanation: The explanation of this TableMetadataCacheUsage.
        :type explanation: str
        """

        self._explanation = explanation

    @property
    def table_reference(self):
        """Gets the table_reference of this TableMetadataCacheUsage.


        :return: The table_reference of this TableMetadataCacheUsage.
        :rtype: TableReference
        """
        return self._table_reference

    @table_reference.setter
    def table_reference(self, table_reference):
        """Sets the table_reference of this TableMetadataCacheUsage.


        :param table_reference: The table_reference of this TableMetadataCacheUsage.
        :type table_reference: TableReference
        """

        self._table_reference = table_reference

    @property
    def table_type(self):
        """Gets the table_type of this TableMetadataCacheUsage.

        [Table type](/bigquery/docs/reference/rest/v2/tables#Table.FIELDS.type).

        :return: The table_type of this TableMetadataCacheUsage.
        :rtype: str
        """
        return self._table_type

    @table_type.setter
    def table_type(self, table_type):
        """Sets the table_type of this TableMetadataCacheUsage.

        [Table type](/bigquery/docs/reference/rest/v2/tables#Table.FIELDS.type).

        :param table_type: The table_type of this TableMetadataCacheUsage.
        :type table_type: str
        """

        self._table_type = table_type

    @property
    def unused_reason(self):
        """Gets the unused_reason of this TableMetadataCacheUsage.

        Reason for not using metadata caching for the table.

        :return: The unused_reason of this TableMetadataCacheUsage.
        :rtype: str
        """
        return self._unused_reason

    @unused_reason.setter
    def unused_reason(self, unused_reason):
        """Sets the unused_reason of this TableMetadataCacheUsage.

        Reason for not using metadata caching for the table.

        :param unused_reason: The unused_reason of this TableMetadataCacheUsage.
        :type unused_reason: str
        """
        allowed_values = ["UNUSED_REASON_UNSPECIFIED", "EXCEEDED_MAX_STALENESS", "METADATA_CACHING_NOT_ENABLED", "OTHER_REASON"]  # noqa: E501
        if unused_reason not in allowed_values:
            raise ValueError(
                "Invalid value for `unused_reason` ({0}), must be one of {1}"
                .format(unused_reason, allowed_values)
            )

        self._unused_reason = unused_reason
