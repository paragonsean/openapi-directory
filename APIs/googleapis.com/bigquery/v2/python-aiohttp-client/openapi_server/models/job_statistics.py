# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.data_masking_statistics import DataMaskingStatistics
from openapi_server.models.job_statistics2 import JobStatistics2
from openapi_server.models.job_statistics3 import JobStatistics3
from openapi_server.models.job_statistics4 import JobStatistics4
from openapi_server.models.job_statistics5 import JobStatistics5
from openapi_server.models.job_statistics_reservation_usage_inner import JobStatisticsReservationUsageInner
from openapi_server.models.row_level_security_statistics import RowLevelSecurityStatistics
from openapi_server.models.script_statistics import ScriptStatistics
from openapi_server.models.session_info import SessionInfo
from openapi_server.models.transaction_info import TransactionInfo
from openapi_server import util


class JobStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completion_ratio: float=None, copy: JobStatistics5=None, creation_time: str=None, data_masking_statistics: DataMaskingStatistics=None, end_time: str=None, extract: JobStatistics4=None, final_execution_duration_ms: str=None, load: JobStatistics3=None, num_child_jobs: str=None, parent_job_id: str=None, query: JobStatistics2=None, quota_deferments: List[str]=None, reservation_usage: List[JobStatisticsReservationUsageInner]=None, reservation_id: str=None, row_level_security_statistics: RowLevelSecurityStatistics=None, script_statistics: ScriptStatistics=None, session_info: SessionInfo=None, start_time: str=None, total_bytes_processed: str=None, total_slot_ms: str=None, transaction_info: TransactionInfo=None):
        """JobStatistics - a model defined in OpenAPI

        :param completion_ratio: The completion_ratio of this JobStatistics.
        :param copy: The copy of this JobStatistics.
        :param creation_time: The creation_time of this JobStatistics.
        :param data_masking_statistics: The data_masking_statistics of this JobStatistics.
        :param end_time: The end_time of this JobStatistics.
        :param extract: The extract of this JobStatistics.
        :param final_execution_duration_ms: The final_execution_duration_ms of this JobStatistics.
        :param load: The load of this JobStatistics.
        :param num_child_jobs: The num_child_jobs of this JobStatistics.
        :param parent_job_id: The parent_job_id of this JobStatistics.
        :param query: The query of this JobStatistics.
        :param quota_deferments: The quota_deferments of this JobStatistics.
        :param reservation_usage: The reservation_usage of this JobStatistics.
        :param reservation_id: The reservation_id of this JobStatistics.
        :param row_level_security_statistics: The row_level_security_statistics of this JobStatistics.
        :param script_statistics: The script_statistics of this JobStatistics.
        :param session_info: The session_info of this JobStatistics.
        :param start_time: The start_time of this JobStatistics.
        :param total_bytes_processed: The total_bytes_processed of this JobStatistics.
        :param total_slot_ms: The total_slot_ms of this JobStatistics.
        :param transaction_info: The transaction_info of this JobStatistics.
        """
        self.openapi_types = {
            'completion_ratio': float,
            'copy': JobStatistics5,
            'creation_time': str,
            'data_masking_statistics': DataMaskingStatistics,
            'end_time': str,
            'extract': JobStatistics4,
            'final_execution_duration_ms': str,
            'load': JobStatistics3,
            'num_child_jobs': str,
            'parent_job_id': str,
            'query': JobStatistics2,
            'quota_deferments': List[str],
            'reservation_usage': List[JobStatisticsReservationUsageInner],
            'reservation_id': str,
            'row_level_security_statistics': RowLevelSecurityStatistics,
            'script_statistics': ScriptStatistics,
            'session_info': SessionInfo,
            'start_time': str,
            'total_bytes_processed': str,
            'total_slot_ms': str,
            'transaction_info': TransactionInfo
        }

        self.attribute_map = {
            'completion_ratio': 'completionRatio',
            'copy': 'copy',
            'creation_time': 'creationTime',
            'data_masking_statistics': 'dataMaskingStatistics',
            'end_time': 'endTime',
            'extract': 'extract',
            'final_execution_duration_ms': 'finalExecutionDurationMs',
            'load': 'load',
            'num_child_jobs': 'numChildJobs',
            'parent_job_id': 'parentJobId',
            'query': 'query',
            'quota_deferments': 'quotaDeferments',
            'reservation_usage': 'reservationUsage',
            'reservation_id': 'reservation_id',
            'row_level_security_statistics': 'rowLevelSecurityStatistics',
            'script_statistics': 'scriptStatistics',
            'session_info': 'sessionInfo',
            'start_time': 'startTime',
            'total_bytes_processed': 'totalBytesProcessed',
            'total_slot_ms': 'totalSlotMs',
            'transaction_info': 'transactionInfo'
        }

        self._completion_ratio = completion_ratio
        self._copy = copy
        self._creation_time = creation_time
        self._data_masking_statistics = data_masking_statistics
        self._end_time = end_time
        self._extract = extract
        self._final_execution_duration_ms = final_execution_duration_ms
        self._load = load
        self._num_child_jobs = num_child_jobs
        self._parent_job_id = parent_job_id
        self._query = query
        self._quota_deferments = quota_deferments
        self._reservation_usage = reservation_usage
        self._reservation_id = reservation_id
        self._row_level_security_statistics = row_level_security_statistics
        self._script_statistics = script_statistics
        self._session_info = session_info
        self._start_time = start_time
        self._total_bytes_processed = total_bytes_processed
        self._total_slot_ms = total_slot_ms
        self._transaction_info = transaction_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobStatistics of this JobStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completion_ratio(self):
        """Gets the completion_ratio of this JobStatistics.

        Output only. [TrustedTester] Job progress (0.0 -> 1.0) for LOAD and EXTRACT jobs.

        :return: The completion_ratio of this JobStatistics.
        :rtype: float
        """
        return self._completion_ratio

    @completion_ratio.setter
    def completion_ratio(self, completion_ratio):
        """Sets the completion_ratio of this JobStatistics.

        Output only. [TrustedTester] Job progress (0.0 -> 1.0) for LOAD and EXTRACT jobs.

        :param completion_ratio: The completion_ratio of this JobStatistics.
        :type completion_ratio: float
        """

        self._completion_ratio = completion_ratio

    @property
    def copy(self):
        """Gets the copy of this JobStatistics.


        :return: The copy of this JobStatistics.
        :rtype: JobStatistics5
        """
        return self._copy

    @copy.setter
    def copy(self, copy):
        """Sets the copy of this JobStatistics.


        :param copy: The copy of this JobStatistics.
        :type copy: JobStatistics5
        """

        self._copy = copy

    @property
    def creation_time(self):
        """Gets the creation_time of this JobStatistics.

        Output only. Creation time of this job, in milliseconds since the epoch. This field will be present on all jobs.

        :return: The creation_time of this JobStatistics.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this JobStatistics.

        Output only. Creation time of this job, in milliseconds since the epoch. This field will be present on all jobs.

        :param creation_time: The creation_time of this JobStatistics.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def data_masking_statistics(self):
        """Gets the data_masking_statistics of this JobStatistics.


        :return: The data_masking_statistics of this JobStatistics.
        :rtype: DataMaskingStatistics
        """
        return self._data_masking_statistics

    @data_masking_statistics.setter
    def data_masking_statistics(self, data_masking_statistics):
        """Sets the data_masking_statistics of this JobStatistics.


        :param data_masking_statistics: The data_masking_statistics of this JobStatistics.
        :type data_masking_statistics: DataMaskingStatistics
        """

        self._data_masking_statistics = data_masking_statistics

    @property
    def end_time(self):
        """Gets the end_time of this JobStatistics.

        Output only. End time of this job, in milliseconds since the epoch. This field will be present whenever a job is in the DONE state.

        :return: The end_time of this JobStatistics.
        :rtype: str
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this JobStatistics.

        Output only. End time of this job, in milliseconds since the epoch. This field will be present whenever a job is in the DONE state.

        :param end_time: The end_time of this JobStatistics.
        :type end_time: str
        """

        self._end_time = end_time

    @property
    def extract(self):
        """Gets the extract of this JobStatistics.


        :return: The extract of this JobStatistics.
        :rtype: JobStatistics4
        """
        return self._extract

    @extract.setter
    def extract(self, extract):
        """Sets the extract of this JobStatistics.


        :param extract: The extract of this JobStatistics.
        :type extract: JobStatistics4
        """

        self._extract = extract

    @property
    def final_execution_duration_ms(self):
        """Gets the final_execution_duration_ms of this JobStatistics.

        Output only. The duration in milliseconds of the execution of the final attempt of this job, as BigQuery may internally re-attempt to execute the job.

        :return: The final_execution_duration_ms of this JobStatistics.
        :rtype: str
        """
        return self._final_execution_duration_ms

    @final_execution_duration_ms.setter
    def final_execution_duration_ms(self, final_execution_duration_ms):
        """Sets the final_execution_duration_ms of this JobStatistics.

        Output only. The duration in milliseconds of the execution of the final attempt of this job, as BigQuery may internally re-attempt to execute the job.

        :param final_execution_duration_ms: The final_execution_duration_ms of this JobStatistics.
        :type final_execution_duration_ms: str
        """

        self._final_execution_duration_ms = final_execution_duration_ms

    @property
    def load(self):
        """Gets the load of this JobStatistics.


        :return: The load of this JobStatistics.
        :rtype: JobStatistics3
        """
        return self._load

    @load.setter
    def load(self, load):
        """Sets the load of this JobStatistics.


        :param load: The load of this JobStatistics.
        :type load: JobStatistics3
        """

        self._load = load

    @property
    def num_child_jobs(self):
        """Gets the num_child_jobs of this JobStatistics.

        Output only. Number of child jobs executed.

        :return: The num_child_jobs of this JobStatistics.
        :rtype: str
        """
        return self._num_child_jobs

    @num_child_jobs.setter
    def num_child_jobs(self, num_child_jobs):
        """Sets the num_child_jobs of this JobStatistics.

        Output only. Number of child jobs executed.

        :param num_child_jobs: The num_child_jobs of this JobStatistics.
        :type num_child_jobs: str
        """

        self._num_child_jobs = num_child_jobs

    @property
    def parent_job_id(self):
        """Gets the parent_job_id of this JobStatistics.

        Output only. If this is a child job, specifies the job ID of the parent.

        :return: The parent_job_id of this JobStatistics.
        :rtype: str
        """
        return self._parent_job_id

    @parent_job_id.setter
    def parent_job_id(self, parent_job_id):
        """Sets the parent_job_id of this JobStatistics.

        Output only. If this is a child job, specifies the job ID of the parent.

        :param parent_job_id: The parent_job_id of this JobStatistics.
        :type parent_job_id: str
        """

        self._parent_job_id = parent_job_id

    @property
    def query(self):
        """Gets the query of this JobStatistics.


        :return: The query of this JobStatistics.
        :rtype: JobStatistics2
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this JobStatistics.


        :param query: The query of this JobStatistics.
        :type query: JobStatistics2
        """

        self._query = query

    @property
    def quota_deferments(self):
        """Gets the quota_deferments of this JobStatistics.

        Output only. Quotas which delayed this job's start time.

        :return: The quota_deferments of this JobStatistics.
        :rtype: List[str]
        """
        return self._quota_deferments

    @quota_deferments.setter
    def quota_deferments(self, quota_deferments):
        """Sets the quota_deferments of this JobStatistics.

        Output only. Quotas which delayed this job's start time.

        :param quota_deferments: The quota_deferments of this JobStatistics.
        :type quota_deferments: List[str]
        """

        self._quota_deferments = quota_deferments

    @property
    def reservation_usage(self):
        """Gets the reservation_usage of this JobStatistics.

        Output only. Job resource usage breakdown by reservation. This field reported misleading information and will no longer be populated.

        :return: The reservation_usage of this JobStatistics.
        :rtype: List[JobStatisticsReservationUsageInner]
        """
        return self._reservation_usage

    @reservation_usage.setter
    def reservation_usage(self, reservation_usage):
        """Sets the reservation_usage of this JobStatistics.

        Output only. Job resource usage breakdown by reservation. This field reported misleading information and will no longer be populated.

        :param reservation_usage: The reservation_usage of this JobStatistics.
        :type reservation_usage: List[JobStatisticsReservationUsageInner]
        """

        self._reservation_usage = reservation_usage

    @property
    def reservation_id(self):
        """Gets the reservation_id of this JobStatistics.

        Output only. Name of the primary reservation assigned to this job. Note that this could be different than reservations reported in the reservation usage field if parent reservations were used to execute this job.

        :return: The reservation_id of this JobStatistics.
        :rtype: str
        """
        return self._reservation_id

    @reservation_id.setter
    def reservation_id(self, reservation_id):
        """Sets the reservation_id of this JobStatistics.

        Output only. Name of the primary reservation assigned to this job. Note that this could be different than reservations reported in the reservation usage field if parent reservations were used to execute this job.

        :param reservation_id: The reservation_id of this JobStatistics.
        :type reservation_id: str
        """

        self._reservation_id = reservation_id

    @property
    def row_level_security_statistics(self):
        """Gets the row_level_security_statistics of this JobStatistics.


        :return: The row_level_security_statistics of this JobStatistics.
        :rtype: RowLevelSecurityStatistics
        """
        return self._row_level_security_statistics

    @row_level_security_statistics.setter
    def row_level_security_statistics(self, row_level_security_statistics):
        """Sets the row_level_security_statistics of this JobStatistics.


        :param row_level_security_statistics: The row_level_security_statistics of this JobStatistics.
        :type row_level_security_statistics: RowLevelSecurityStatistics
        """

        self._row_level_security_statistics = row_level_security_statistics

    @property
    def script_statistics(self):
        """Gets the script_statistics of this JobStatistics.


        :return: The script_statistics of this JobStatistics.
        :rtype: ScriptStatistics
        """
        return self._script_statistics

    @script_statistics.setter
    def script_statistics(self, script_statistics):
        """Sets the script_statistics of this JobStatistics.


        :param script_statistics: The script_statistics of this JobStatistics.
        :type script_statistics: ScriptStatistics
        """

        self._script_statistics = script_statistics

    @property
    def session_info(self):
        """Gets the session_info of this JobStatistics.


        :return: The session_info of this JobStatistics.
        :rtype: SessionInfo
        """
        return self._session_info

    @session_info.setter
    def session_info(self, session_info):
        """Sets the session_info of this JobStatistics.


        :param session_info: The session_info of this JobStatistics.
        :type session_info: SessionInfo
        """

        self._session_info = session_info

    @property
    def start_time(self):
        """Gets the start_time of this JobStatistics.

        Output only. Start time of this job, in milliseconds since the epoch. This field will be present when the job transitions from the PENDING state to either RUNNING or DONE.

        :return: The start_time of this JobStatistics.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this JobStatistics.

        Output only. Start time of this job, in milliseconds since the epoch. This field will be present when the job transitions from the PENDING state to either RUNNING or DONE.

        :param start_time: The start_time of this JobStatistics.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def total_bytes_processed(self):
        """Gets the total_bytes_processed of this JobStatistics.

        Output only. Total bytes processed for the job.

        :return: The total_bytes_processed of this JobStatistics.
        :rtype: str
        """
        return self._total_bytes_processed

    @total_bytes_processed.setter
    def total_bytes_processed(self, total_bytes_processed):
        """Sets the total_bytes_processed of this JobStatistics.

        Output only. Total bytes processed for the job.

        :param total_bytes_processed: The total_bytes_processed of this JobStatistics.
        :type total_bytes_processed: str
        """

        self._total_bytes_processed = total_bytes_processed

    @property
    def total_slot_ms(self):
        """Gets the total_slot_ms of this JobStatistics.

        Output only. Slot-milliseconds for the job.

        :return: The total_slot_ms of this JobStatistics.
        :rtype: str
        """
        return self._total_slot_ms

    @total_slot_ms.setter
    def total_slot_ms(self, total_slot_ms):
        """Sets the total_slot_ms of this JobStatistics.

        Output only. Slot-milliseconds for the job.

        :param total_slot_ms: The total_slot_ms of this JobStatistics.
        :type total_slot_ms: str
        """

        self._total_slot_ms = total_slot_ms

    @property
    def transaction_info(self):
        """Gets the transaction_info of this JobStatistics.


        :return: The transaction_info of this JobStatistics.
        :rtype: TransactionInfo
        """
        return self._transaction_info

    @transaction_info.setter
    def transaction_info(self, transaction_info):
        """Sets the transaction_info of this JobStatistics.


        :param transaction_info: The transaction_info of this JobStatistics.
        :type transaction_info: TransactionInfo
        """

        self._transaction_info = transaction_info
