# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportDataStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_count: str=None, row_count: str=None):
        """ExportDataStatistics - a model defined in OpenAPI

        :param file_count: The file_count of this ExportDataStatistics.
        :param row_count: The row_count of this ExportDataStatistics.
        """
        self.openapi_types = {
            'file_count': str,
            'row_count': str
        }

        self.attribute_map = {
            'file_count': 'fileCount',
            'row_count': 'rowCount'
        }

        self._file_count = file_count
        self._row_count = row_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportDataStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportDataStatistics of this ExportDataStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_count(self):
        """Gets the file_count of this ExportDataStatistics.

        Number of destination files generated in case of EXPORT DATA statement only.

        :return: The file_count of this ExportDataStatistics.
        :rtype: str
        """
        return self._file_count

    @file_count.setter
    def file_count(self, file_count):
        """Sets the file_count of this ExportDataStatistics.

        Number of destination files generated in case of EXPORT DATA statement only.

        :param file_count: The file_count of this ExportDataStatistics.
        :type file_count: str
        """

        self._file_count = file_count

    @property
    def row_count(self):
        """Gets the row_count of this ExportDataStatistics.

        [Alpha] Number of destination rows generated in case of EXPORT DATA statement only.

        :return: The row_count of this ExportDataStatistics.
        :rtype: str
        """
        return self._row_count

    @row_count.setter
    def row_count(self, row_count):
        """Sets the row_count of this ExportDataStatistics.

        [Alpha] Number of destination rows generated in case of EXPORT DATA statement only.

        :param row_count: The row_count of this ExportDataStatistics.
        :type row_count: str
        """

        self._row_count = row_count
