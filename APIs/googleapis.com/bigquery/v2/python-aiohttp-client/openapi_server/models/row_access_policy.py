# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.row_access_policy_reference import RowAccessPolicyReference
from openapi_server import util


class RowAccessPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: str=None, etag: str=None, filter_predicate: str=None, last_modified_time: str=None, row_access_policy_reference: RowAccessPolicyReference=None):
        """RowAccessPolicy - a model defined in OpenAPI

        :param creation_time: The creation_time of this RowAccessPolicy.
        :param etag: The etag of this RowAccessPolicy.
        :param filter_predicate: The filter_predicate of this RowAccessPolicy.
        :param last_modified_time: The last_modified_time of this RowAccessPolicy.
        :param row_access_policy_reference: The row_access_policy_reference of this RowAccessPolicy.
        """
        self.openapi_types = {
            'creation_time': str,
            'etag': str,
            'filter_predicate': str,
            'last_modified_time': str,
            'row_access_policy_reference': RowAccessPolicyReference
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'etag': 'etag',
            'filter_predicate': 'filterPredicate',
            'last_modified_time': 'lastModifiedTime',
            'row_access_policy_reference': 'rowAccessPolicyReference'
        }

        self._creation_time = creation_time
        self._etag = etag
        self._filter_predicate = filter_predicate
        self._last_modified_time = last_modified_time
        self._row_access_policy_reference = row_access_policy_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RowAccessPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RowAccessPolicy of this RowAccessPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this RowAccessPolicy.

        Output only. The time when this row access policy was created, in milliseconds since the epoch.

        :return: The creation_time of this RowAccessPolicy.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this RowAccessPolicy.

        Output only. The time when this row access policy was created, in milliseconds since the epoch.

        :param creation_time: The creation_time of this RowAccessPolicy.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def etag(self):
        """Gets the etag of this RowAccessPolicy.

        Output only. A hash of this resource.

        :return: The etag of this RowAccessPolicy.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this RowAccessPolicy.

        Output only. A hash of this resource.

        :param etag: The etag of this RowAccessPolicy.
        :type etag: str
        """

        self._etag = etag

    @property
    def filter_predicate(self):
        """Gets the filter_predicate of this RowAccessPolicy.

        Required. A SQL boolean expression that represents the rows defined by this row access policy, similar to the boolean expression in a WHERE clause of a SELECT query on a table. References to other tables, routines, and temporary functions are not supported. Examples: region=\"EU\" date_field = CAST('2019-9-27' as DATE) nullable_field is not NULL numeric_field BETWEEN 1.0 AND 5.0

        :return: The filter_predicate of this RowAccessPolicy.
        :rtype: str
        """
        return self._filter_predicate

    @filter_predicate.setter
    def filter_predicate(self, filter_predicate):
        """Sets the filter_predicate of this RowAccessPolicy.

        Required. A SQL boolean expression that represents the rows defined by this row access policy, similar to the boolean expression in a WHERE clause of a SELECT query on a table. References to other tables, routines, and temporary functions are not supported. Examples: region=\"EU\" date_field = CAST('2019-9-27' as DATE) nullable_field is not NULL numeric_field BETWEEN 1.0 AND 5.0

        :param filter_predicate: The filter_predicate of this RowAccessPolicy.
        :type filter_predicate: str
        """

        self._filter_predicate = filter_predicate

    @property
    def last_modified_time(self):
        """Gets the last_modified_time of this RowAccessPolicy.

        Output only. The time when this row access policy was last modified, in milliseconds since the epoch.

        :return: The last_modified_time of this RowAccessPolicy.
        :rtype: str
        """
        return self._last_modified_time

    @last_modified_time.setter
    def last_modified_time(self, last_modified_time):
        """Sets the last_modified_time of this RowAccessPolicy.

        Output only. The time when this row access policy was last modified, in milliseconds since the epoch.

        :param last_modified_time: The last_modified_time of this RowAccessPolicy.
        :type last_modified_time: str
        """

        self._last_modified_time = last_modified_time

    @property
    def row_access_policy_reference(self):
        """Gets the row_access_policy_reference of this RowAccessPolicy.


        :return: The row_access_policy_reference of this RowAccessPolicy.
        :rtype: RowAccessPolicyReference
        """
        return self._row_access_policy_reference

    @row_access_policy_reference.setter
    def row_access_policy_reference(self, row_access_policy_reference):
        """Sets the row_access_policy_reference of this RowAccessPolicy.


        :param row_access_policy_reference: The row_access_policy_reference of this RowAccessPolicy.
        :type row_access_policy_reference: RowAccessPolicyReference
        """

        self._row_access_policy_reference = row_access_policy_reference
