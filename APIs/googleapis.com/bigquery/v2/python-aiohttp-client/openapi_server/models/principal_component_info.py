# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PrincipalComponentInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cumulative_explained_variance_ratio: float=None, explained_variance: float=None, explained_variance_ratio: float=None, principal_component_id: str=None):
        """PrincipalComponentInfo - a model defined in OpenAPI

        :param cumulative_explained_variance_ratio: The cumulative_explained_variance_ratio of this PrincipalComponentInfo.
        :param explained_variance: The explained_variance of this PrincipalComponentInfo.
        :param explained_variance_ratio: The explained_variance_ratio of this PrincipalComponentInfo.
        :param principal_component_id: The principal_component_id of this PrincipalComponentInfo.
        """
        self.openapi_types = {
            'cumulative_explained_variance_ratio': float,
            'explained_variance': float,
            'explained_variance_ratio': float,
            'principal_component_id': str
        }

        self.attribute_map = {
            'cumulative_explained_variance_ratio': 'cumulativeExplainedVarianceRatio',
            'explained_variance': 'explainedVariance',
            'explained_variance_ratio': 'explainedVarianceRatio',
            'principal_component_id': 'principalComponentId'
        }

        self._cumulative_explained_variance_ratio = cumulative_explained_variance_ratio
        self._explained_variance = explained_variance
        self._explained_variance_ratio = explained_variance_ratio
        self._principal_component_id = principal_component_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrincipalComponentInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrincipalComponentInfo of this PrincipalComponentInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cumulative_explained_variance_ratio(self):
        """Gets the cumulative_explained_variance_ratio of this PrincipalComponentInfo.

        The explained_variance is pre-ordered in the descending order to compute the cumulative explained variance ratio.

        :return: The cumulative_explained_variance_ratio of this PrincipalComponentInfo.
        :rtype: float
        """
        return self._cumulative_explained_variance_ratio

    @cumulative_explained_variance_ratio.setter
    def cumulative_explained_variance_ratio(self, cumulative_explained_variance_ratio):
        """Sets the cumulative_explained_variance_ratio of this PrincipalComponentInfo.

        The explained_variance is pre-ordered in the descending order to compute the cumulative explained variance ratio.

        :param cumulative_explained_variance_ratio: The cumulative_explained_variance_ratio of this PrincipalComponentInfo.
        :type cumulative_explained_variance_ratio: float
        """

        self._cumulative_explained_variance_ratio = cumulative_explained_variance_ratio

    @property
    def explained_variance(self):
        """Gets the explained_variance of this PrincipalComponentInfo.

        Explained variance by this principal component, which is simply the eigenvalue.

        :return: The explained_variance of this PrincipalComponentInfo.
        :rtype: float
        """
        return self._explained_variance

    @explained_variance.setter
    def explained_variance(self, explained_variance):
        """Sets the explained_variance of this PrincipalComponentInfo.

        Explained variance by this principal component, which is simply the eigenvalue.

        :param explained_variance: The explained_variance of this PrincipalComponentInfo.
        :type explained_variance: float
        """

        self._explained_variance = explained_variance

    @property
    def explained_variance_ratio(self):
        """Gets the explained_variance_ratio of this PrincipalComponentInfo.

        Explained_variance over the total explained variance.

        :return: The explained_variance_ratio of this PrincipalComponentInfo.
        :rtype: float
        """
        return self._explained_variance_ratio

    @explained_variance_ratio.setter
    def explained_variance_ratio(self, explained_variance_ratio):
        """Sets the explained_variance_ratio of this PrincipalComponentInfo.

        Explained_variance over the total explained variance.

        :param explained_variance_ratio: The explained_variance_ratio of this PrincipalComponentInfo.
        :type explained_variance_ratio: float
        """

        self._explained_variance_ratio = explained_variance_ratio

    @property
    def principal_component_id(self):
        """Gets the principal_component_id of this PrincipalComponentInfo.

        Id of the principal component.

        :return: The principal_component_id of this PrincipalComponentInfo.
        :rtype: str
        """
        return self._principal_component_id

    @principal_component_id.setter
    def principal_component_id(self, principal_component_id):
        """Sets the principal_component_id of this PrincipalComponentInfo.

        Id of the principal component.

        :param principal_component_id: The principal_component_id of this PrincipalComponentInfo.
        :type principal_component_id: str
        """

        self._principal_component_id = principal_component_id
