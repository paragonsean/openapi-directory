# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorProto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, debug_info: str=None, location: str=None, message: str=None, reason: str=None):
        """ErrorProto - a model defined in OpenAPI

        :param debug_info: The debug_info of this ErrorProto.
        :param location: The location of this ErrorProto.
        :param message: The message of this ErrorProto.
        :param reason: The reason of this ErrorProto.
        """
        self.openapi_types = {
            'debug_info': str,
            'location': str,
            'message': str,
            'reason': str
        }

        self.attribute_map = {
            'debug_info': 'debugInfo',
            'location': 'location',
            'message': 'message',
            'reason': 'reason'
        }

        self._debug_info = debug_info
        self._location = location
        self._message = message
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorProto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorProto of this ErrorProto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def debug_info(self):
        """Gets the debug_info of this ErrorProto.

        Debugging information. This property is internal to Google and should not be used.

        :return: The debug_info of this ErrorProto.
        :rtype: str
        """
        return self._debug_info

    @debug_info.setter
    def debug_info(self, debug_info):
        """Sets the debug_info of this ErrorProto.

        Debugging information. This property is internal to Google and should not be used.

        :param debug_info: The debug_info of this ErrorProto.
        :type debug_info: str
        """

        self._debug_info = debug_info

    @property
    def location(self):
        """Gets the location of this ErrorProto.

        Specifies where the error occurred, if present.

        :return: The location of this ErrorProto.
        :rtype: str
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this ErrorProto.

        Specifies where the error occurred, if present.

        :param location: The location of this ErrorProto.
        :type location: str
        """

        self._location = location

    @property
    def message(self):
        """Gets the message of this ErrorProto.

        A human-readable description of the error.

        :return: The message of this ErrorProto.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ErrorProto.

        A human-readable description of the error.

        :param message: The message of this ErrorProto.
        :type message: str
        """

        self._message = message

    @property
    def reason(self):
        """Gets the reason of this ErrorProto.

        A short error code that summarizes the error.

        :return: The reason of this ErrorProto.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this ErrorProto.

        A short error code that summarizes the error.

        :param reason: The reason of this ErrorProto.
        :type reason: str
        """

        self._reason = reason
