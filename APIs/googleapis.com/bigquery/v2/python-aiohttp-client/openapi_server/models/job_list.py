# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_list_jobs_inner import JobListJobsInner
from openapi_server import util


class JobList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, jobs: List[JobListJobsInner]=None, kind: str='bigquery#jobList', next_page_token: str=None, unreachable: List[str]=None):
        """JobList - a model defined in OpenAPI

        :param etag: The etag of this JobList.
        :param jobs: The jobs of this JobList.
        :param kind: The kind of this JobList.
        :param next_page_token: The next_page_token of this JobList.
        :param unreachable: The unreachable of this JobList.
        """
        self.openapi_types = {
            'etag': str,
            'jobs': List[JobListJobsInner],
            'kind': str,
            'next_page_token': str,
            'unreachable': List[str]
        }

        self.attribute_map = {
            'etag': 'etag',
            'jobs': 'jobs',
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'unreachable': 'unreachable'
        }

        self._etag = etag
        self._jobs = jobs
        self._kind = kind
        self._next_page_token = next_page_token
        self._unreachable = unreachable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobList of this JobList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this JobList.

        A hash of this page of results.

        :return: The etag of this JobList.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this JobList.

        A hash of this page of results.

        :param etag: The etag of this JobList.
        :type etag: str
        """

        self._etag = etag

    @property
    def jobs(self):
        """Gets the jobs of this JobList.

        List of jobs that were requested.

        :return: The jobs of this JobList.
        :rtype: List[JobListJobsInner]
        """
        return self._jobs

    @jobs.setter
    def jobs(self, jobs):
        """Sets the jobs of this JobList.

        List of jobs that were requested.

        :param jobs: The jobs of this JobList.
        :type jobs: List[JobListJobsInner]
        """

        self._jobs = jobs

    @property
    def kind(self):
        """Gets the kind of this JobList.

        The resource type of the response.

        :return: The kind of this JobList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this JobList.

        The resource type of the response.

        :param kind: The kind of this JobList.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this JobList.

        A token to request the next page of results.

        :return: The next_page_token of this JobList.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this JobList.

        A token to request the next page of results.

        :param next_page_token: The next_page_token of this JobList.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def unreachable(self):
        """Gets the unreachable of this JobList.

        A list of skipped locations that were unreachable. For more information about BigQuery locations, see: https://cloud.google.com/bigquery/docs/locations. Example: \"europe-west5\"

        :return: The unreachable of this JobList.
        :rtype: List[str]
        """
        return self._unreachable

    @unreachable.setter
    def unreachable(self, unreachable):
        """Sets the unreachable of this JobList.

        A list of skipped locations that were unreachable. For more information about BigQuery locations, see: https://cloud.google.com/bigquery/docs/locations. Example: \"europe-west5\"

        :param unreachable: The unreachable of this JobList.
        :type unreachable: List[str]
        """

        self._unreachable = unreachable
