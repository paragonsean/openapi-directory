# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.privacy_policy import PrivacyPolicy
from openapi_server import util


class TableListTablesInnerView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, privacy_policy: PrivacyPolicy=None, use_legacy_sql: bool=None):
        """TableListTablesInnerView - a model defined in OpenAPI

        :param privacy_policy: The privacy_policy of this TableListTablesInnerView.
        :param use_legacy_sql: The use_legacy_sql of this TableListTablesInnerView.
        """
        self.openapi_types = {
            'privacy_policy': PrivacyPolicy,
            'use_legacy_sql': bool
        }

        self.attribute_map = {
            'privacy_policy': 'privacyPolicy',
            'use_legacy_sql': 'useLegacySql'
        }

        self._privacy_policy = privacy_policy
        self._use_legacy_sql = use_legacy_sql

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableListTablesInnerView':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableList_tables_inner_view of this TableListTablesInnerView.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def privacy_policy(self):
        """Gets the privacy_policy of this TableListTablesInnerView.


        :return: The privacy_policy of this TableListTablesInnerView.
        :rtype: PrivacyPolicy
        """
        return self._privacy_policy

    @privacy_policy.setter
    def privacy_policy(self, privacy_policy):
        """Sets the privacy_policy of this TableListTablesInnerView.


        :param privacy_policy: The privacy_policy of this TableListTablesInnerView.
        :type privacy_policy: PrivacyPolicy
        """

        self._privacy_policy = privacy_policy

    @property
    def use_legacy_sql(self):
        """Gets the use_legacy_sql of this TableListTablesInnerView.

        True if view is defined in legacy SQL dialect, false if in GoogleSQL.

        :return: The use_legacy_sql of this TableListTablesInnerView.
        :rtype: bool
        """
        return self._use_legacy_sql

    @use_legacy_sql.setter
    def use_legacy_sql(self, use_legacy_sql):
        """Sets the use_legacy_sql of this TableListTablesInnerView.

        True if view is defined in legacy SQL dialect, false if in GoogleSQL.

        :param use_legacy_sql: The use_legacy_sql of this TableListTablesInnerView.
        :type use_legacy_sql: bool
        """

        self._use_legacy_sql = use_legacy_sql
