# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobStatistics5(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, copied_logical_bytes: str=None, copied_rows: str=None):
        """JobStatistics5 - a model defined in OpenAPI

        :param copied_logical_bytes: The copied_logical_bytes of this JobStatistics5.
        :param copied_rows: The copied_rows of this JobStatistics5.
        """
        self.openapi_types = {
            'copied_logical_bytes': str,
            'copied_rows': str
        }

        self.attribute_map = {
            'copied_logical_bytes': 'copiedLogicalBytes',
            'copied_rows': 'copiedRows'
        }

        self._copied_logical_bytes = copied_logical_bytes
        self._copied_rows = copied_rows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobStatistics5':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobStatistics5 of this JobStatistics5.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def copied_logical_bytes(self):
        """Gets the copied_logical_bytes of this JobStatistics5.

        Output only. Number of logical bytes copied to the destination table.

        :return: The copied_logical_bytes of this JobStatistics5.
        :rtype: str
        """
        return self._copied_logical_bytes

    @copied_logical_bytes.setter
    def copied_logical_bytes(self, copied_logical_bytes):
        """Sets the copied_logical_bytes of this JobStatistics5.

        Output only. Number of logical bytes copied to the destination table.

        :param copied_logical_bytes: The copied_logical_bytes of this JobStatistics5.
        :type copied_logical_bytes: str
        """

        self._copied_logical_bytes = copied_logical_bytes

    @property
    def copied_rows(self):
        """Gets the copied_rows of this JobStatistics5.

        Output only. Number of rows copied to the destination table.

        :return: The copied_rows of this JobStatistics5.
        :rtype: str
        """
        return self._copied_rows

    @copied_rows.setter
    def copied_rows(self, copied_rows):
        """Sets the copied_rows of this JobStatistics5.

        Output only. Number of rows copied to the destination table.

        :param copied_rows: The copied_rows of this JobStatistics5.
        :type copied_rows: str
        """

        self._copied_rows = copied_rows
