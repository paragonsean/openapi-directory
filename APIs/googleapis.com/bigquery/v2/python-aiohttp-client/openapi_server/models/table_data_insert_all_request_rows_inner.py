# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TableDataInsertAllRequestRowsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, insert_id: str=None, _json: Dict[str, object]=None):
        """TableDataInsertAllRequestRowsInner - a model defined in OpenAPI

        :param insert_id: The insert_id of this TableDataInsertAllRequestRowsInner.
        :param _json: The _json of this TableDataInsertAllRequestRowsInner.
        """
        self.openapi_types = {
            'insert_id': str,
            '_json': Dict[str, object]
        }

        self.attribute_map = {
            'insert_id': 'insertId',
            '_json': 'json'
        }

        self._insert_id = insert_id
        self.__json = _json

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableDataInsertAllRequestRowsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableDataInsertAllRequest_rows_inner of this TableDataInsertAllRequestRowsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def insert_id(self):
        """Gets the insert_id of this TableDataInsertAllRequestRowsInner.

        Insertion ID for best-effort deduplication. This feature is not recommended, and users seeking stronger insertion semantics are encouraged to use other mechanisms such as the BigQuery Write API.

        :return: The insert_id of this TableDataInsertAllRequestRowsInner.
        :rtype: str
        """
        return self._insert_id

    @insert_id.setter
    def insert_id(self, insert_id):
        """Sets the insert_id of this TableDataInsertAllRequestRowsInner.

        Insertion ID for best-effort deduplication. This feature is not recommended, and users seeking stronger insertion semantics are encouraged to use other mechanisms such as the BigQuery Write API.

        :param insert_id: The insert_id of this TableDataInsertAllRequestRowsInner.
        :type insert_id: str
        """

        self._insert_id = insert_id

    @property
    def _json(self):
        """Gets the _json of this TableDataInsertAllRequestRowsInner.

        Represents a single JSON object.

        :return: The _json of this TableDataInsertAllRequestRowsInner.
        :rtype: Dict[str, object]
        """
        return self.__json

    @_json.setter
    def _json(self, _json):
        """Sets the _json of this TableDataInsertAllRequestRowsInner.

        Represents a single JSON object.

        :param _json: The _json of this TableDataInsertAllRequestRowsInner.
        :type _json: Dict[str, object]
        """

        self.__json = _json
