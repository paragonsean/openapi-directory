# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Explanation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribution: float=None, feature_name: str=None):
        """Explanation - a model defined in OpenAPI

        :param attribution: The attribution of this Explanation.
        :param feature_name: The feature_name of this Explanation.
        """
        self.openapi_types = {
            'attribution': float,
            'feature_name': str
        }

        self.attribute_map = {
            'attribution': 'attribution',
            'feature_name': 'featureName'
        }

        self._attribution = attribution
        self._feature_name = feature_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Explanation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Explanation of this Explanation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribution(self):
        """Gets the attribution of this Explanation.

        Attribution of feature.

        :return: The attribution of this Explanation.
        :rtype: float
        """
        return self._attribution

    @attribution.setter
    def attribution(self, attribution):
        """Sets the attribution of this Explanation.

        Attribution of feature.

        :param attribution: The attribution of this Explanation.
        :type attribution: float
        """

        self._attribution = attribution

    @property
    def feature_name(self):
        """Gets the feature_name of this Explanation.

        The full feature name. For non-numerical features, will be formatted like `.`. Overall size of feature name will always be truncated to first 120 characters.

        :return: The feature_name of this Explanation.
        :rtype: str
        """
        return self._feature_name

    @feature_name.setter
    def feature_name(self, feature_name):
        """Sets the feature_name of this Explanation.

        The full feature name. For non-numerical features, will be formatted like `.`. Overall size of feature name will always be truncated to first 120 characters.

        :param feature_name: The feature_name of this Explanation.
        :type feature_name: str
        """

        self._feature_name = feature_name
