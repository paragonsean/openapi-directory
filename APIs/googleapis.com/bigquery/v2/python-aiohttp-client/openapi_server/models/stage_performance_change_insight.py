# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.input_data_change import InputDataChange
from openapi_server import util


class StagePerformanceChangeInsight(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_data_change: InputDataChange=None, stage_id: str=None):
        """StagePerformanceChangeInsight - a model defined in OpenAPI

        :param input_data_change: The input_data_change of this StagePerformanceChangeInsight.
        :param stage_id: The stage_id of this StagePerformanceChangeInsight.
        """
        self.openapi_types = {
            'input_data_change': InputDataChange,
            'stage_id': str
        }

        self.attribute_map = {
            'input_data_change': 'inputDataChange',
            'stage_id': 'stageId'
        }

        self._input_data_change = input_data_change
        self._stage_id = stage_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StagePerformanceChangeInsight':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StagePerformanceChangeInsight of this StagePerformanceChangeInsight.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_data_change(self):
        """Gets the input_data_change of this StagePerformanceChangeInsight.


        :return: The input_data_change of this StagePerformanceChangeInsight.
        :rtype: InputDataChange
        """
        return self._input_data_change

    @input_data_change.setter
    def input_data_change(self, input_data_change):
        """Sets the input_data_change of this StagePerformanceChangeInsight.


        :param input_data_change: The input_data_change of this StagePerformanceChangeInsight.
        :type input_data_change: InputDataChange
        """

        self._input_data_change = input_data_change

    @property
    def stage_id(self):
        """Gets the stage_id of this StagePerformanceChangeInsight.

        Output only. The stage id that the insight mapped to.

        :return: The stage_id of this StagePerformanceChangeInsight.
        :rtype: str
        """
        return self._stage_id

    @stage_id.setter
    def stage_id(self, stage_id):
        """Sets the stage_id of this StagePerformanceChangeInsight.

        Output only. The stage id that the insight mapped to.

        :param stage_id: The stage_id of this StagePerformanceChangeInsight.
        :type stage_id: str
        """

        self._stage_id = stage_id
