# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.explain_query_step import ExplainQueryStep
from openapi_server import util


class ExplainQueryStage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completed_parallel_inputs: str=None, compute_mode: str=None, compute_ms_avg: str=None, compute_ms_max: str=None, compute_ratio_avg: float=None, compute_ratio_max: float=None, end_ms: str=None, id: str=None, input_stages: List[str]=None, name: str=None, parallel_inputs: str=None, read_ms_avg: str=None, read_ms_max: str=None, read_ratio_avg: float=None, read_ratio_max: float=None, records_read: str=None, records_written: str=None, shuffle_output_bytes: str=None, shuffle_output_bytes_spilled: str=None, slot_ms: str=None, start_ms: str=None, status: str=None, steps: List[ExplainQueryStep]=None, wait_ms_avg: str=None, wait_ms_max: str=None, wait_ratio_avg: float=None, wait_ratio_max: float=None, write_ms_avg: str=None, write_ms_max: str=None, write_ratio_avg: float=None, write_ratio_max: float=None):
        """ExplainQueryStage - a model defined in OpenAPI

        :param completed_parallel_inputs: The completed_parallel_inputs of this ExplainQueryStage.
        :param compute_mode: The compute_mode of this ExplainQueryStage.
        :param compute_ms_avg: The compute_ms_avg of this ExplainQueryStage.
        :param compute_ms_max: The compute_ms_max of this ExplainQueryStage.
        :param compute_ratio_avg: The compute_ratio_avg of this ExplainQueryStage.
        :param compute_ratio_max: The compute_ratio_max of this ExplainQueryStage.
        :param end_ms: The end_ms of this ExplainQueryStage.
        :param id: The id of this ExplainQueryStage.
        :param input_stages: The input_stages of this ExplainQueryStage.
        :param name: The name of this ExplainQueryStage.
        :param parallel_inputs: The parallel_inputs of this ExplainQueryStage.
        :param read_ms_avg: The read_ms_avg of this ExplainQueryStage.
        :param read_ms_max: The read_ms_max of this ExplainQueryStage.
        :param read_ratio_avg: The read_ratio_avg of this ExplainQueryStage.
        :param read_ratio_max: The read_ratio_max of this ExplainQueryStage.
        :param records_read: The records_read of this ExplainQueryStage.
        :param records_written: The records_written of this ExplainQueryStage.
        :param shuffle_output_bytes: The shuffle_output_bytes of this ExplainQueryStage.
        :param shuffle_output_bytes_spilled: The shuffle_output_bytes_spilled of this ExplainQueryStage.
        :param slot_ms: The slot_ms of this ExplainQueryStage.
        :param start_ms: The start_ms of this ExplainQueryStage.
        :param status: The status of this ExplainQueryStage.
        :param steps: The steps of this ExplainQueryStage.
        :param wait_ms_avg: The wait_ms_avg of this ExplainQueryStage.
        :param wait_ms_max: The wait_ms_max of this ExplainQueryStage.
        :param wait_ratio_avg: The wait_ratio_avg of this ExplainQueryStage.
        :param wait_ratio_max: The wait_ratio_max of this ExplainQueryStage.
        :param write_ms_avg: The write_ms_avg of this ExplainQueryStage.
        :param write_ms_max: The write_ms_max of this ExplainQueryStage.
        :param write_ratio_avg: The write_ratio_avg of this ExplainQueryStage.
        :param write_ratio_max: The write_ratio_max of this ExplainQueryStage.
        """
        self.openapi_types = {
            'completed_parallel_inputs': str,
            'compute_mode': str,
            'compute_ms_avg': str,
            'compute_ms_max': str,
            'compute_ratio_avg': float,
            'compute_ratio_max': float,
            'end_ms': str,
            'id': str,
            'input_stages': List[str],
            'name': str,
            'parallel_inputs': str,
            'read_ms_avg': str,
            'read_ms_max': str,
            'read_ratio_avg': float,
            'read_ratio_max': float,
            'records_read': str,
            'records_written': str,
            'shuffle_output_bytes': str,
            'shuffle_output_bytes_spilled': str,
            'slot_ms': str,
            'start_ms': str,
            'status': str,
            'steps': List[ExplainQueryStep],
            'wait_ms_avg': str,
            'wait_ms_max': str,
            'wait_ratio_avg': float,
            'wait_ratio_max': float,
            'write_ms_avg': str,
            'write_ms_max': str,
            'write_ratio_avg': float,
            'write_ratio_max': float
        }

        self.attribute_map = {
            'completed_parallel_inputs': 'completedParallelInputs',
            'compute_mode': 'computeMode',
            'compute_ms_avg': 'computeMsAvg',
            'compute_ms_max': 'computeMsMax',
            'compute_ratio_avg': 'computeRatioAvg',
            'compute_ratio_max': 'computeRatioMax',
            'end_ms': 'endMs',
            'id': 'id',
            'input_stages': 'inputStages',
            'name': 'name',
            'parallel_inputs': 'parallelInputs',
            'read_ms_avg': 'readMsAvg',
            'read_ms_max': 'readMsMax',
            'read_ratio_avg': 'readRatioAvg',
            'read_ratio_max': 'readRatioMax',
            'records_read': 'recordsRead',
            'records_written': 'recordsWritten',
            'shuffle_output_bytes': 'shuffleOutputBytes',
            'shuffle_output_bytes_spilled': 'shuffleOutputBytesSpilled',
            'slot_ms': 'slotMs',
            'start_ms': 'startMs',
            'status': 'status',
            'steps': 'steps',
            'wait_ms_avg': 'waitMsAvg',
            'wait_ms_max': 'waitMsMax',
            'wait_ratio_avg': 'waitRatioAvg',
            'wait_ratio_max': 'waitRatioMax',
            'write_ms_avg': 'writeMsAvg',
            'write_ms_max': 'writeMsMax',
            'write_ratio_avg': 'writeRatioAvg',
            'write_ratio_max': 'writeRatioMax'
        }

        self._completed_parallel_inputs = completed_parallel_inputs
        self._compute_mode = compute_mode
        self._compute_ms_avg = compute_ms_avg
        self._compute_ms_max = compute_ms_max
        self._compute_ratio_avg = compute_ratio_avg
        self._compute_ratio_max = compute_ratio_max
        self._end_ms = end_ms
        self._id = id
        self._input_stages = input_stages
        self._name = name
        self._parallel_inputs = parallel_inputs
        self._read_ms_avg = read_ms_avg
        self._read_ms_max = read_ms_max
        self._read_ratio_avg = read_ratio_avg
        self._read_ratio_max = read_ratio_max
        self._records_read = records_read
        self._records_written = records_written
        self._shuffle_output_bytes = shuffle_output_bytes
        self._shuffle_output_bytes_spilled = shuffle_output_bytes_spilled
        self._slot_ms = slot_ms
        self._start_ms = start_ms
        self._status = status
        self._steps = steps
        self._wait_ms_avg = wait_ms_avg
        self._wait_ms_max = wait_ms_max
        self._wait_ratio_avg = wait_ratio_avg
        self._wait_ratio_max = wait_ratio_max
        self._write_ms_avg = write_ms_avg
        self._write_ms_max = write_ms_max
        self._write_ratio_avg = write_ratio_avg
        self._write_ratio_max = write_ratio_max

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExplainQueryStage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExplainQueryStage of this ExplainQueryStage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completed_parallel_inputs(self):
        """Gets the completed_parallel_inputs of this ExplainQueryStage.

        Number of parallel input segments completed.

        :return: The completed_parallel_inputs of this ExplainQueryStage.
        :rtype: str
        """
        return self._completed_parallel_inputs

    @completed_parallel_inputs.setter
    def completed_parallel_inputs(self, completed_parallel_inputs):
        """Sets the completed_parallel_inputs of this ExplainQueryStage.

        Number of parallel input segments completed.

        :param completed_parallel_inputs: The completed_parallel_inputs of this ExplainQueryStage.
        :type completed_parallel_inputs: str
        """

        self._completed_parallel_inputs = completed_parallel_inputs

    @property
    def compute_mode(self):
        """Gets the compute_mode of this ExplainQueryStage.

        Output only. Compute mode for this stage.

        :return: The compute_mode of this ExplainQueryStage.
        :rtype: str
        """
        return self._compute_mode

    @compute_mode.setter
    def compute_mode(self, compute_mode):
        """Sets the compute_mode of this ExplainQueryStage.

        Output only. Compute mode for this stage.

        :param compute_mode: The compute_mode of this ExplainQueryStage.
        :type compute_mode: str
        """
        allowed_values = ["COMPUTE_MODE_UNSPECIFIED", "BIGQUERY", "BI_ENGINE"]  # noqa: E501
        if compute_mode not in allowed_values:
            raise ValueError(
                "Invalid value for `compute_mode` ({0}), must be one of {1}"
                .format(compute_mode, allowed_values)
            )

        self._compute_mode = compute_mode

    @property
    def compute_ms_avg(self):
        """Gets the compute_ms_avg of this ExplainQueryStage.

        Milliseconds the average shard spent on CPU-bound tasks.

        :return: The compute_ms_avg of this ExplainQueryStage.
        :rtype: str
        """
        return self._compute_ms_avg

    @compute_ms_avg.setter
    def compute_ms_avg(self, compute_ms_avg):
        """Sets the compute_ms_avg of this ExplainQueryStage.

        Milliseconds the average shard spent on CPU-bound tasks.

        :param compute_ms_avg: The compute_ms_avg of this ExplainQueryStage.
        :type compute_ms_avg: str
        """

        self._compute_ms_avg = compute_ms_avg

    @property
    def compute_ms_max(self):
        """Gets the compute_ms_max of this ExplainQueryStage.

        Milliseconds the slowest shard spent on CPU-bound tasks.

        :return: The compute_ms_max of this ExplainQueryStage.
        :rtype: str
        """
        return self._compute_ms_max

    @compute_ms_max.setter
    def compute_ms_max(self, compute_ms_max):
        """Sets the compute_ms_max of this ExplainQueryStage.

        Milliseconds the slowest shard spent on CPU-bound tasks.

        :param compute_ms_max: The compute_ms_max of this ExplainQueryStage.
        :type compute_ms_max: str
        """

        self._compute_ms_max = compute_ms_max

    @property
    def compute_ratio_avg(self):
        """Gets the compute_ratio_avg of this ExplainQueryStage.

        Relative amount of time the average shard spent on CPU-bound tasks.

        :return: The compute_ratio_avg of this ExplainQueryStage.
        :rtype: float
        """
        return self._compute_ratio_avg

    @compute_ratio_avg.setter
    def compute_ratio_avg(self, compute_ratio_avg):
        """Sets the compute_ratio_avg of this ExplainQueryStage.

        Relative amount of time the average shard spent on CPU-bound tasks.

        :param compute_ratio_avg: The compute_ratio_avg of this ExplainQueryStage.
        :type compute_ratio_avg: float
        """

        self._compute_ratio_avg = compute_ratio_avg

    @property
    def compute_ratio_max(self):
        """Gets the compute_ratio_max of this ExplainQueryStage.

        Relative amount of time the slowest shard spent on CPU-bound tasks.

        :return: The compute_ratio_max of this ExplainQueryStage.
        :rtype: float
        """
        return self._compute_ratio_max

    @compute_ratio_max.setter
    def compute_ratio_max(self, compute_ratio_max):
        """Sets the compute_ratio_max of this ExplainQueryStage.

        Relative amount of time the slowest shard spent on CPU-bound tasks.

        :param compute_ratio_max: The compute_ratio_max of this ExplainQueryStage.
        :type compute_ratio_max: float
        """

        self._compute_ratio_max = compute_ratio_max

    @property
    def end_ms(self):
        """Gets the end_ms of this ExplainQueryStage.

        Stage end time represented as milliseconds since the epoch.

        :return: The end_ms of this ExplainQueryStage.
        :rtype: str
        """
        return self._end_ms

    @end_ms.setter
    def end_ms(self, end_ms):
        """Sets the end_ms of this ExplainQueryStage.

        Stage end time represented as milliseconds since the epoch.

        :param end_ms: The end_ms of this ExplainQueryStage.
        :type end_ms: str
        """

        self._end_ms = end_ms

    @property
    def id(self):
        """Gets the id of this ExplainQueryStage.

        Unique ID for the stage within the plan.

        :return: The id of this ExplainQueryStage.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ExplainQueryStage.

        Unique ID for the stage within the plan.

        :param id: The id of this ExplainQueryStage.
        :type id: str
        """

        self._id = id

    @property
    def input_stages(self):
        """Gets the input_stages of this ExplainQueryStage.

        IDs for stages that are inputs to this stage.

        :return: The input_stages of this ExplainQueryStage.
        :rtype: List[str]
        """
        return self._input_stages

    @input_stages.setter
    def input_stages(self, input_stages):
        """Sets the input_stages of this ExplainQueryStage.

        IDs for stages that are inputs to this stage.

        :param input_stages: The input_stages of this ExplainQueryStage.
        :type input_stages: List[str]
        """

        self._input_stages = input_stages

    @property
    def name(self):
        """Gets the name of this ExplainQueryStage.

        Human-readable name for the stage.

        :return: The name of this ExplainQueryStage.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ExplainQueryStage.

        Human-readable name for the stage.

        :param name: The name of this ExplainQueryStage.
        :type name: str
        """

        self._name = name

    @property
    def parallel_inputs(self):
        """Gets the parallel_inputs of this ExplainQueryStage.

        Number of parallel input segments to be processed

        :return: The parallel_inputs of this ExplainQueryStage.
        :rtype: str
        """
        return self._parallel_inputs

    @parallel_inputs.setter
    def parallel_inputs(self, parallel_inputs):
        """Sets the parallel_inputs of this ExplainQueryStage.

        Number of parallel input segments to be processed

        :param parallel_inputs: The parallel_inputs of this ExplainQueryStage.
        :type parallel_inputs: str
        """

        self._parallel_inputs = parallel_inputs

    @property
    def read_ms_avg(self):
        """Gets the read_ms_avg of this ExplainQueryStage.

        Milliseconds the average shard spent reading input.

        :return: The read_ms_avg of this ExplainQueryStage.
        :rtype: str
        """
        return self._read_ms_avg

    @read_ms_avg.setter
    def read_ms_avg(self, read_ms_avg):
        """Sets the read_ms_avg of this ExplainQueryStage.

        Milliseconds the average shard spent reading input.

        :param read_ms_avg: The read_ms_avg of this ExplainQueryStage.
        :type read_ms_avg: str
        """

        self._read_ms_avg = read_ms_avg

    @property
    def read_ms_max(self):
        """Gets the read_ms_max of this ExplainQueryStage.

        Milliseconds the slowest shard spent reading input.

        :return: The read_ms_max of this ExplainQueryStage.
        :rtype: str
        """
        return self._read_ms_max

    @read_ms_max.setter
    def read_ms_max(self, read_ms_max):
        """Sets the read_ms_max of this ExplainQueryStage.

        Milliseconds the slowest shard spent reading input.

        :param read_ms_max: The read_ms_max of this ExplainQueryStage.
        :type read_ms_max: str
        """

        self._read_ms_max = read_ms_max

    @property
    def read_ratio_avg(self):
        """Gets the read_ratio_avg of this ExplainQueryStage.

        Relative amount of time the average shard spent reading input.

        :return: The read_ratio_avg of this ExplainQueryStage.
        :rtype: float
        """
        return self._read_ratio_avg

    @read_ratio_avg.setter
    def read_ratio_avg(self, read_ratio_avg):
        """Sets the read_ratio_avg of this ExplainQueryStage.

        Relative amount of time the average shard spent reading input.

        :param read_ratio_avg: The read_ratio_avg of this ExplainQueryStage.
        :type read_ratio_avg: float
        """

        self._read_ratio_avg = read_ratio_avg

    @property
    def read_ratio_max(self):
        """Gets the read_ratio_max of this ExplainQueryStage.

        Relative amount of time the slowest shard spent reading input.

        :return: The read_ratio_max of this ExplainQueryStage.
        :rtype: float
        """
        return self._read_ratio_max

    @read_ratio_max.setter
    def read_ratio_max(self, read_ratio_max):
        """Sets the read_ratio_max of this ExplainQueryStage.

        Relative amount of time the slowest shard spent reading input.

        :param read_ratio_max: The read_ratio_max of this ExplainQueryStage.
        :type read_ratio_max: float
        """

        self._read_ratio_max = read_ratio_max

    @property
    def records_read(self):
        """Gets the records_read of this ExplainQueryStage.

        Number of records read into the stage.

        :return: The records_read of this ExplainQueryStage.
        :rtype: str
        """
        return self._records_read

    @records_read.setter
    def records_read(self, records_read):
        """Sets the records_read of this ExplainQueryStage.

        Number of records read into the stage.

        :param records_read: The records_read of this ExplainQueryStage.
        :type records_read: str
        """

        self._records_read = records_read

    @property
    def records_written(self):
        """Gets the records_written of this ExplainQueryStage.

        Number of records written by the stage.

        :return: The records_written of this ExplainQueryStage.
        :rtype: str
        """
        return self._records_written

    @records_written.setter
    def records_written(self, records_written):
        """Sets the records_written of this ExplainQueryStage.

        Number of records written by the stage.

        :param records_written: The records_written of this ExplainQueryStage.
        :type records_written: str
        """

        self._records_written = records_written

    @property
    def shuffle_output_bytes(self):
        """Gets the shuffle_output_bytes of this ExplainQueryStage.

        Total number of bytes written to shuffle.

        :return: The shuffle_output_bytes of this ExplainQueryStage.
        :rtype: str
        """
        return self._shuffle_output_bytes

    @shuffle_output_bytes.setter
    def shuffle_output_bytes(self, shuffle_output_bytes):
        """Sets the shuffle_output_bytes of this ExplainQueryStage.

        Total number of bytes written to shuffle.

        :param shuffle_output_bytes: The shuffle_output_bytes of this ExplainQueryStage.
        :type shuffle_output_bytes: str
        """

        self._shuffle_output_bytes = shuffle_output_bytes

    @property
    def shuffle_output_bytes_spilled(self):
        """Gets the shuffle_output_bytes_spilled of this ExplainQueryStage.

        Total number of bytes written to shuffle and spilled to disk.

        :return: The shuffle_output_bytes_spilled of this ExplainQueryStage.
        :rtype: str
        """
        return self._shuffle_output_bytes_spilled

    @shuffle_output_bytes_spilled.setter
    def shuffle_output_bytes_spilled(self, shuffle_output_bytes_spilled):
        """Sets the shuffle_output_bytes_spilled of this ExplainQueryStage.

        Total number of bytes written to shuffle and spilled to disk.

        :param shuffle_output_bytes_spilled: The shuffle_output_bytes_spilled of this ExplainQueryStage.
        :type shuffle_output_bytes_spilled: str
        """

        self._shuffle_output_bytes_spilled = shuffle_output_bytes_spilled

    @property
    def slot_ms(self):
        """Gets the slot_ms of this ExplainQueryStage.

        Slot-milliseconds used by the stage.

        :return: The slot_ms of this ExplainQueryStage.
        :rtype: str
        """
        return self._slot_ms

    @slot_ms.setter
    def slot_ms(self, slot_ms):
        """Sets the slot_ms of this ExplainQueryStage.

        Slot-milliseconds used by the stage.

        :param slot_ms: The slot_ms of this ExplainQueryStage.
        :type slot_ms: str
        """

        self._slot_ms = slot_ms

    @property
    def start_ms(self):
        """Gets the start_ms of this ExplainQueryStage.

        Stage start time represented as milliseconds since the epoch.

        :return: The start_ms of this ExplainQueryStage.
        :rtype: str
        """
        return self._start_ms

    @start_ms.setter
    def start_ms(self, start_ms):
        """Sets the start_ms of this ExplainQueryStage.

        Stage start time represented as milliseconds since the epoch.

        :param start_ms: The start_ms of this ExplainQueryStage.
        :type start_ms: str
        """

        self._start_ms = start_ms

    @property
    def status(self):
        """Gets the status of this ExplainQueryStage.

        Current status for this stage.

        :return: The status of this ExplainQueryStage.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ExplainQueryStage.

        Current status for this stage.

        :param status: The status of this ExplainQueryStage.
        :type status: str
        """

        self._status = status

    @property
    def steps(self):
        """Gets the steps of this ExplainQueryStage.

        List of operations within the stage in dependency order (approximately chronological).

        :return: The steps of this ExplainQueryStage.
        :rtype: List[ExplainQueryStep]
        """
        return self._steps

    @steps.setter
    def steps(self, steps):
        """Sets the steps of this ExplainQueryStage.

        List of operations within the stage in dependency order (approximately chronological).

        :param steps: The steps of this ExplainQueryStage.
        :type steps: List[ExplainQueryStep]
        """

        self._steps = steps

    @property
    def wait_ms_avg(self):
        """Gets the wait_ms_avg of this ExplainQueryStage.

        Milliseconds the average shard spent waiting to be scheduled.

        :return: The wait_ms_avg of this ExplainQueryStage.
        :rtype: str
        """
        return self._wait_ms_avg

    @wait_ms_avg.setter
    def wait_ms_avg(self, wait_ms_avg):
        """Sets the wait_ms_avg of this ExplainQueryStage.

        Milliseconds the average shard spent waiting to be scheduled.

        :param wait_ms_avg: The wait_ms_avg of this ExplainQueryStage.
        :type wait_ms_avg: str
        """

        self._wait_ms_avg = wait_ms_avg

    @property
    def wait_ms_max(self):
        """Gets the wait_ms_max of this ExplainQueryStage.

        Milliseconds the slowest shard spent waiting to be scheduled.

        :return: The wait_ms_max of this ExplainQueryStage.
        :rtype: str
        """
        return self._wait_ms_max

    @wait_ms_max.setter
    def wait_ms_max(self, wait_ms_max):
        """Sets the wait_ms_max of this ExplainQueryStage.

        Milliseconds the slowest shard spent waiting to be scheduled.

        :param wait_ms_max: The wait_ms_max of this ExplainQueryStage.
        :type wait_ms_max: str
        """

        self._wait_ms_max = wait_ms_max

    @property
    def wait_ratio_avg(self):
        """Gets the wait_ratio_avg of this ExplainQueryStage.

        Relative amount of time the average shard spent waiting to be scheduled.

        :return: The wait_ratio_avg of this ExplainQueryStage.
        :rtype: float
        """
        return self._wait_ratio_avg

    @wait_ratio_avg.setter
    def wait_ratio_avg(self, wait_ratio_avg):
        """Sets the wait_ratio_avg of this ExplainQueryStage.

        Relative amount of time the average shard spent waiting to be scheduled.

        :param wait_ratio_avg: The wait_ratio_avg of this ExplainQueryStage.
        :type wait_ratio_avg: float
        """

        self._wait_ratio_avg = wait_ratio_avg

    @property
    def wait_ratio_max(self):
        """Gets the wait_ratio_max of this ExplainQueryStage.

        Relative amount of time the slowest shard spent waiting to be scheduled.

        :return: The wait_ratio_max of this ExplainQueryStage.
        :rtype: float
        """
        return self._wait_ratio_max

    @wait_ratio_max.setter
    def wait_ratio_max(self, wait_ratio_max):
        """Sets the wait_ratio_max of this ExplainQueryStage.

        Relative amount of time the slowest shard spent waiting to be scheduled.

        :param wait_ratio_max: The wait_ratio_max of this ExplainQueryStage.
        :type wait_ratio_max: float
        """

        self._wait_ratio_max = wait_ratio_max

    @property
    def write_ms_avg(self):
        """Gets the write_ms_avg of this ExplainQueryStage.

        Milliseconds the average shard spent on writing output.

        :return: The write_ms_avg of this ExplainQueryStage.
        :rtype: str
        """
        return self._write_ms_avg

    @write_ms_avg.setter
    def write_ms_avg(self, write_ms_avg):
        """Sets the write_ms_avg of this ExplainQueryStage.

        Milliseconds the average shard spent on writing output.

        :param write_ms_avg: The write_ms_avg of this ExplainQueryStage.
        :type write_ms_avg: str
        """

        self._write_ms_avg = write_ms_avg

    @property
    def write_ms_max(self):
        """Gets the write_ms_max of this ExplainQueryStage.

        Milliseconds the slowest shard spent on writing output.

        :return: The write_ms_max of this ExplainQueryStage.
        :rtype: str
        """
        return self._write_ms_max

    @write_ms_max.setter
    def write_ms_max(self, write_ms_max):
        """Sets the write_ms_max of this ExplainQueryStage.

        Milliseconds the slowest shard spent on writing output.

        :param write_ms_max: The write_ms_max of this ExplainQueryStage.
        :type write_ms_max: str
        """

        self._write_ms_max = write_ms_max

    @property
    def write_ratio_avg(self):
        """Gets the write_ratio_avg of this ExplainQueryStage.

        Relative amount of time the average shard spent on writing output.

        :return: The write_ratio_avg of this ExplainQueryStage.
        :rtype: float
        """
        return self._write_ratio_avg

    @write_ratio_avg.setter
    def write_ratio_avg(self, write_ratio_avg):
        """Sets the write_ratio_avg of this ExplainQueryStage.

        Relative amount of time the average shard spent on writing output.

        :param write_ratio_avg: The write_ratio_avg of this ExplainQueryStage.
        :type write_ratio_avg: float
        """

        self._write_ratio_avg = write_ratio_avg

    @property
    def write_ratio_max(self):
        """Gets the write_ratio_max of this ExplainQueryStage.

        Relative amount of time the slowest shard spent on writing output.

        :return: The write_ratio_max of this ExplainQueryStage.
        :rtype: float
        """
        return self._write_ratio_max

    @write_ratio_max.setter
    def write_ratio_max(self, write_ratio_max):
        """Sets the write_ratio_max of this ExplainQueryStage.

        Relative amount of time the slowest shard spent on writing output.

        :param write_ratio_max: The write_ratio_max of this ExplainQueryStage.
        :type write_ratio_max: float
        """

        self._write_ratio_max = write_ratio_max
