# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.table_cell import TableCell
from openapi_server import util


class TableRow(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, f: List[TableCell]=None):
        """TableRow - a model defined in OpenAPI

        :param f: The f of this TableRow.
        """
        self.openapi_types = {
            'f': List[TableCell]
        }

        self.attribute_map = {
            'f': 'f'
        }

        self._f = f

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableRow':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableRow of this TableRow.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def f(self):
        """Gets the f of this TableRow.

        Represents a single row in the result set, consisting of one or more fields.

        :return: The f of this TableRow.
        :rtype: List[TableCell]
        """
        return self._f

    @f.setter
    def f(self, f):
        """Sets the f of this TableRow.

        Represents a single row in the result set, consisting of one or more fields.

        :param f: The f of this TableRow.
        :type f: List[TableCell]
        """

        self._f = f
