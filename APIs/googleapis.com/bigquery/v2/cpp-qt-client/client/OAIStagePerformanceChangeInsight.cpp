/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStagePerformanceChangeInsight.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStagePerformanceChangeInsight::OAIStagePerformanceChangeInsight(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStagePerformanceChangeInsight::OAIStagePerformanceChangeInsight() {
    this->initializeModel();
}

OAIStagePerformanceChangeInsight::~OAIStagePerformanceChangeInsight() {}

void OAIStagePerformanceChangeInsight::initializeModel() {

    m_input_data_change_isSet = false;
    m_input_data_change_isValid = false;

    m_stage_id_isSet = false;
    m_stage_id_isValid = false;
}

void OAIStagePerformanceChangeInsight::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStagePerformanceChangeInsight::fromJsonObject(QJsonObject json) {

    m_input_data_change_isValid = ::OpenAPI::fromJsonValue(m_input_data_change, json[QString("inputDataChange")]);
    m_input_data_change_isSet = !json[QString("inputDataChange")].isNull() && m_input_data_change_isValid;

    m_stage_id_isValid = ::OpenAPI::fromJsonValue(m_stage_id, json[QString("stageId")]);
    m_stage_id_isSet = !json[QString("stageId")].isNull() && m_stage_id_isValid;
}

QString OAIStagePerformanceChangeInsight::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStagePerformanceChangeInsight::asJsonObject() const {
    QJsonObject obj;
    if (m_input_data_change.isSet()) {
        obj.insert(QString("inputDataChange"), ::OpenAPI::toJsonValue(m_input_data_change));
    }
    if (m_stage_id_isSet) {
        obj.insert(QString("stageId"), ::OpenAPI::toJsonValue(m_stage_id));
    }
    return obj;
}

OAIInputDataChange OAIStagePerformanceChangeInsight::getInputDataChange() const {
    return m_input_data_change;
}
void OAIStagePerformanceChangeInsight::setInputDataChange(const OAIInputDataChange &input_data_change) {
    m_input_data_change = input_data_change;
    m_input_data_change_isSet = true;
}

bool OAIStagePerformanceChangeInsight::is_input_data_change_Set() const{
    return m_input_data_change_isSet;
}

bool OAIStagePerformanceChangeInsight::is_input_data_change_Valid() const{
    return m_input_data_change_isValid;
}

QString OAIStagePerformanceChangeInsight::getStageId() const {
    return m_stage_id;
}
void OAIStagePerformanceChangeInsight::setStageId(const QString &stage_id) {
    m_stage_id = stage_id;
    m_stage_id_isSet = true;
}

bool OAIStagePerformanceChangeInsight::is_stage_id_Set() const{
    return m_stage_id_isSet;
}

bool OAIStagePerformanceChangeInsight::is_stage_id_Valid() const{
    return m_stage_id_isValid;
}

bool OAIStagePerformanceChangeInsight::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_data_change.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStagePerformanceChangeInsight::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
