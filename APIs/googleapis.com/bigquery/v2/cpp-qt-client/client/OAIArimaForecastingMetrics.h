/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArimaForecastingMetrics.h
 *
 * Model evaluation metrics for ARIMA forecasting models.
 */

#ifndef OAIArimaForecastingMetrics_H
#define OAIArimaForecastingMetrics_H

#include <QJsonObject>

#include "OAIArimaFittingMetrics.h"
#include "OAIArimaOrder.h"
#include "OAIArimaSingleModelForecastingMetrics.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArimaFittingMetrics;
class OAIArimaSingleModelForecastingMetrics;
class OAIArimaOrder;

class OAIArimaForecastingMetrics : public OAIObject {
public:
    OAIArimaForecastingMetrics();
    OAIArimaForecastingMetrics(QString json);
    ~OAIArimaForecastingMetrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    Q_DECL_DEPRECATED QList<OAIArimaFittingMetrics> getArimaFittingMetrics() const;
    Q_DECL_DEPRECATED void setArimaFittingMetrics(const QList<OAIArimaFittingMetrics> &arima_fitting_metrics);
    Q_DECL_DEPRECATED bool is_arima_fitting_metrics_Set() const;
    Q_DECL_DEPRECATED bool is_arima_fitting_metrics_Valid() const;

    QList<OAIArimaSingleModelForecastingMetrics> getArimaSingleModelForecastingMetrics() const;
    void setArimaSingleModelForecastingMetrics(const QList<OAIArimaSingleModelForecastingMetrics> &arima_single_model_forecasting_metrics);
    bool is_arima_single_model_forecasting_metrics_Set() const;
    bool is_arima_single_model_forecasting_metrics_Valid() const;

    Q_DECL_DEPRECATED QList<bool> getHasDrift() const;
    Q_DECL_DEPRECATED void setHasDrift(const QList<bool> &has_drift);
    Q_DECL_DEPRECATED bool is_has_drift_Set() const;
    Q_DECL_DEPRECATED bool is_has_drift_Valid() const;

    Q_DECL_DEPRECATED QList<OAIArimaOrder> getNonSeasonalOrder() const;
    Q_DECL_DEPRECATED void setNonSeasonalOrder(const QList<OAIArimaOrder> &non_seasonal_order);
    Q_DECL_DEPRECATED bool is_non_seasonal_order_Set() const;
    Q_DECL_DEPRECATED bool is_non_seasonal_order_Valid() const;

    Q_DECL_DEPRECATED QList<QString> getSeasonalPeriods() const;
    Q_DECL_DEPRECATED void setSeasonalPeriods(const QList<QString> &seasonal_periods);
    Q_DECL_DEPRECATED bool is_seasonal_periods_Set() const;
    Q_DECL_DEPRECATED bool is_seasonal_periods_Valid() const;

    Q_DECL_DEPRECATED QList<QString> getTimeSeriesId() const;
    Q_DECL_DEPRECATED void setTimeSeriesId(const QList<QString> &time_series_id);
    Q_DECL_DEPRECATED bool is_time_series_id_Set() const;
    Q_DECL_DEPRECATED bool is_time_series_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIArimaFittingMetrics> m_arima_fitting_metrics;
    bool m_arima_fitting_metrics_isSet;
    bool m_arima_fitting_metrics_isValid;

    QList<OAIArimaSingleModelForecastingMetrics> m_arima_single_model_forecasting_metrics;
    bool m_arima_single_model_forecasting_metrics_isSet;
    bool m_arima_single_model_forecasting_metrics_isValid;

    QList<bool> m_has_drift;
    bool m_has_drift_isSet;
    bool m_has_drift_isValid;

    QList<OAIArimaOrder> m_non_seasonal_order;
    bool m_non_seasonal_order_isSet;
    bool m_non_seasonal_order_isValid;

    QList<QString> m_seasonal_periods;
    bool m_seasonal_periods_isSet;
    bool m_seasonal_periods_isValid;

    QList<QString> m_time_series_id;
    bool m_time_series_id_isSet;
    bool m_time_series_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArimaForecastingMetrics)

#endif // OAIArimaForecastingMetrics_H
