/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIViewDefinition.h
 *
 * Describes the definition of a logical view.
 */

#ifndef OAIViewDefinition_H
#define OAIViewDefinition_H

#include <QJsonObject>

#include "OAIPrivacyPolicy.h"
#include "OAIUserDefinedFunctionResource.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPrivacyPolicy;
class OAIUserDefinedFunctionResource;

class OAIViewDefinition : public OAIObject {
public:
    OAIViewDefinition();
    OAIViewDefinition(QString json);
    ~OAIViewDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPrivacyPolicy getPrivacyPolicy() const;
    void setPrivacyPolicy(const OAIPrivacyPolicy &privacy_policy);
    bool is_privacy_policy_Set() const;
    bool is_privacy_policy_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    bool isUseExplicitColumnNames() const;
    void setUseExplicitColumnNames(const bool &use_explicit_column_names);
    bool is_use_explicit_column_names_Set() const;
    bool is_use_explicit_column_names_Valid() const;

    bool isUseLegacySql() const;
    void setUseLegacySql(const bool &use_legacy_sql);
    bool is_use_legacy_sql_Set() const;
    bool is_use_legacy_sql_Valid() const;

    QList<OAIUserDefinedFunctionResource> getUserDefinedFunctionResources() const;
    void setUserDefinedFunctionResources(const QList<OAIUserDefinedFunctionResource> &user_defined_function_resources);
    bool is_user_defined_function_resources_Set() const;
    bool is_user_defined_function_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPrivacyPolicy m_privacy_policy;
    bool m_privacy_policy_isSet;
    bool m_privacy_policy_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    bool m_use_explicit_column_names;
    bool m_use_explicit_column_names_isSet;
    bool m_use_explicit_column_names_isValid;

    bool m_use_legacy_sql;
    bool m_use_legacy_sql_isSet;
    bool m_use_legacy_sql_isValid;

    QList<OAIUserDefinedFunctionResource> m_user_defined_function_resources;
    bool m_user_defined_function_resources_isSet;
    bool m_user_defined_function_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIViewDefinition)

#endif // OAIViewDefinition_H
