/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArimaCoefficients.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArimaCoefficients::OAIArimaCoefficients(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArimaCoefficients::OAIArimaCoefficients() {
    this->initializeModel();
}

OAIArimaCoefficients::~OAIArimaCoefficients() {}

void OAIArimaCoefficients::initializeModel() {

    m_auto_regressive_coefficients_isSet = false;
    m_auto_regressive_coefficients_isValid = false;

    m_intercept_coefficient_isSet = false;
    m_intercept_coefficient_isValid = false;

    m_moving_average_coefficients_isSet = false;
    m_moving_average_coefficients_isValid = false;
}

void OAIArimaCoefficients::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArimaCoefficients::fromJsonObject(QJsonObject json) {

    m_auto_regressive_coefficients_isValid = ::OpenAPI::fromJsonValue(m_auto_regressive_coefficients, json[QString("autoRegressiveCoefficients")]);
    m_auto_regressive_coefficients_isSet = !json[QString("autoRegressiveCoefficients")].isNull() && m_auto_regressive_coefficients_isValid;

    m_intercept_coefficient_isValid = ::OpenAPI::fromJsonValue(m_intercept_coefficient, json[QString("interceptCoefficient")]);
    m_intercept_coefficient_isSet = !json[QString("interceptCoefficient")].isNull() && m_intercept_coefficient_isValid;

    m_moving_average_coefficients_isValid = ::OpenAPI::fromJsonValue(m_moving_average_coefficients, json[QString("movingAverageCoefficients")]);
    m_moving_average_coefficients_isSet = !json[QString("movingAverageCoefficients")].isNull() && m_moving_average_coefficients_isValid;
}

QString OAIArimaCoefficients::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArimaCoefficients::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_regressive_coefficients.size() > 0) {
        obj.insert(QString("autoRegressiveCoefficients"), ::OpenAPI::toJsonValue(m_auto_regressive_coefficients));
    }
    if (m_intercept_coefficient_isSet) {
        obj.insert(QString("interceptCoefficient"), ::OpenAPI::toJsonValue(m_intercept_coefficient));
    }
    if (m_moving_average_coefficients.size() > 0) {
        obj.insert(QString("movingAverageCoefficients"), ::OpenAPI::toJsonValue(m_moving_average_coefficients));
    }
    return obj;
}

QList<double> OAIArimaCoefficients::getAutoRegressiveCoefficients() const {
    return m_auto_regressive_coefficients;
}
void OAIArimaCoefficients::setAutoRegressiveCoefficients(const QList<double> &auto_regressive_coefficients) {
    m_auto_regressive_coefficients = auto_regressive_coefficients;
    m_auto_regressive_coefficients_isSet = true;
}

bool OAIArimaCoefficients::is_auto_regressive_coefficients_Set() const{
    return m_auto_regressive_coefficients_isSet;
}

bool OAIArimaCoefficients::is_auto_regressive_coefficients_Valid() const{
    return m_auto_regressive_coefficients_isValid;
}

double OAIArimaCoefficients::getInterceptCoefficient() const {
    return m_intercept_coefficient;
}
void OAIArimaCoefficients::setInterceptCoefficient(const double &intercept_coefficient) {
    m_intercept_coefficient = intercept_coefficient;
    m_intercept_coefficient_isSet = true;
}

bool OAIArimaCoefficients::is_intercept_coefficient_Set() const{
    return m_intercept_coefficient_isSet;
}

bool OAIArimaCoefficients::is_intercept_coefficient_Valid() const{
    return m_intercept_coefficient_isValid;
}

QList<double> OAIArimaCoefficients::getMovingAverageCoefficients() const {
    return m_moving_average_coefficients;
}
void OAIArimaCoefficients::setMovingAverageCoefficients(const QList<double> &moving_average_coefficients) {
    m_moving_average_coefficients = moving_average_coefficients;
    m_moving_average_coefficients_isSet = true;
}

bool OAIArimaCoefficients::is_moving_average_coefficients_Set() const{
    return m_moving_average_coefficients_isSet;
}

bool OAIArimaCoefficients::is_moving_average_coefficients_Valid() const{
    return m_moving_average_coefficients_isValid;
}

bool OAIArimaCoefficients::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_regressive_coefficients.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_intercept_coefficient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_moving_average_coefficients.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArimaCoefficients::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
