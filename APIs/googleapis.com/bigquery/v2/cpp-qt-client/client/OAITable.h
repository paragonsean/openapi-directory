/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITable.h
 *
 * 
 */

#ifndef OAITable_H
#define OAITable_H

#include <QJsonObject>

#include "OAIBigLakeConfiguration.h"
#include "OAICloneDefinition.h"
#include "OAIClustering.h"
#include "OAIEncryptionConfiguration.h"
#include "OAIExternalDataConfiguration.h"
#include "OAIMaterializedViewDefinition.h"
#include "OAIMaterializedViewStatus.h"
#include "OAIModelDefinition.h"
#include "OAIRangePartitioning.h"
#include "OAISnapshotDefinition.h"
#include "OAIStreamingbuffer.h"
#include "OAITableConstraints.h"
#include "OAITableReference.h"
#include "OAITableReplicationInfo.h"
#include "OAITableSchema.h"
#include "OAITimePartitioning.h"
#include "OAIViewDefinition.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBigLakeConfiguration;
class OAICloneDefinition;
class OAIClustering;
class OAIEncryptionConfiguration;
class OAIExternalDataConfiguration;
class OAIMaterializedViewDefinition;
class OAIMaterializedViewStatus;
class OAIModelDefinition;
class OAIRangePartitioning;
class OAITableReference;
class OAITableSchema;
class OAISnapshotDefinition;
class OAIStreamingbuffer;
class OAITableConstraints;
class OAITableReplicationInfo;
class OAITimePartitioning;
class OAIViewDefinition;

class OAITable : public OAIObject {
public:
    OAITable();
    OAITable(QString json);
    ~OAITable() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBigLakeConfiguration getBiglakeConfiguration() const;
    void setBiglakeConfiguration(const OAIBigLakeConfiguration &biglake_configuration);
    bool is_biglake_configuration_Set() const;
    bool is_biglake_configuration_Valid() const;

    OAICloneDefinition getCloneDefinition() const;
    void setCloneDefinition(const OAICloneDefinition &clone_definition);
    bool is_clone_definition_Set() const;
    bool is_clone_definition_Valid() const;

    OAIClustering getClustering() const;
    void setClustering(const OAIClustering &clustering);
    bool is_clustering_Set() const;
    bool is_clustering_Valid() const;

    QString getCreationTime() const;
    void setCreationTime(const QString &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getDefaultCollation() const;
    void setDefaultCollation(const QString &default_collation);
    bool is_default_collation_Set() const;
    bool is_default_collation_Valid() const;

    QString getDefaultRoundingMode() const;
    void setDefaultRoundingMode(const QString &default_rounding_mode);
    bool is_default_rounding_mode_Set() const;
    bool is_default_rounding_mode_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIEncryptionConfiguration getEncryptionConfiguration() const;
    void setEncryptionConfiguration(const OAIEncryptionConfiguration &encryption_configuration);
    bool is_encryption_configuration_Set() const;
    bool is_encryption_configuration_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QString getExpirationTime() const;
    void setExpirationTime(const QString &expiration_time);
    bool is_expiration_time_Set() const;
    bool is_expiration_time_Valid() const;

    OAIExternalDataConfiguration getExternalDataConfiguration() const;
    void setExternalDataConfiguration(const OAIExternalDataConfiguration &external_data_configuration);
    bool is_external_data_configuration_Set() const;
    bool is_external_data_configuration_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLastModifiedTime() const;
    void setLastModifiedTime(const QString &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIMaterializedViewDefinition getMaterializedView() const;
    void setMaterializedView(const OAIMaterializedViewDefinition &materialized_view);
    bool is_materialized_view_Set() const;
    bool is_materialized_view_Valid() const;

    OAIMaterializedViewStatus getMaterializedViewStatus() const;
    void setMaterializedViewStatus(const OAIMaterializedViewStatus &materialized_view_status);
    bool is_materialized_view_status_Set() const;
    bool is_materialized_view_status_Valid() const;

    QString getMaxStaleness() const;
    void setMaxStaleness(const QString &max_staleness);
    bool is_max_staleness_Set() const;
    bool is_max_staleness_Valid() const;

    OAIModelDefinition getModel() const;
    void setModel(const OAIModelDefinition &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getNumActiveLogicalBytes() const;
    void setNumActiveLogicalBytes(const QString &num_active_logical_bytes);
    bool is_num_active_logical_bytes_Set() const;
    bool is_num_active_logical_bytes_Valid() const;

    QString getNumActivePhysicalBytes() const;
    void setNumActivePhysicalBytes(const QString &num_active_physical_bytes);
    bool is_num_active_physical_bytes_Set() const;
    bool is_num_active_physical_bytes_Valid() const;

    QString getNumBytes() const;
    void setNumBytes(const QString &num_bytes);
    bool is_num_bytes_Set() const;
    bool is_num_bytes_Valid() const;

    QString getNumLongTermBytes() const;
    void setNumLongTermBytes(const QString &num_long_term_bytes);
    bool is_num_long_term_bytes_Set() const;
    bool is_num_long_term_bytes_Valid() const;

    QString getNumLongTermLogicalBytes() const;
    void setNumLongTermLogicalBytes(const QString &num_long_term_logical_bytes);
    bool is_num_long_term_logical_bytes_Set() const;
    bool is_num_long_term_logical_bytes_Valid() const;

    QString getNumLongTermPhysicalBytes() const;
    void setNumLongTermPhysicalBytes(const QString &num_long_term_physical_bytes);
    bool is_num_long_term_physical_bytes_Set() const;
    bool is_num_long_term_physical_bytes_Valid() const;

    QString getNumPartitions() const;
    void setNumPartitions(const QString &num_partitions);
    bool is_num_partitions_Set() const;
    bool is_num_partitions_Valid() const;

    QString getNumPhysicalBytes() const;
    void setNumPhysicalBytes(const QString &num_physical_bytes);
    bool is_num_physical_bytes_Set() const;
    bool is_num_physical_bytes_Valid() const;

    QString getNumRows() const;
    void setNumRows(const QString &num_rows);
    bool is_num_rows_Set() const;
    bool is_num_rows_Valid() const;

    QString getNumTimeTravelPhysicalBytes() const;
    void setNumTimeTravelPhysicalBytes(const QString &num_time_travel_physical_bytes);
    bool is_num_time_travel_physical_bytes_Set() const;
    bool is_num_time_travel_physical_bytes_Valid() const;

    QString getNumTotalLogicalBytes() const;
    void setNumTotalLogicalBytes(const QString &num_total_logical_bytes);
    bool is_num_total_logical_bytes_Set() const;
    bool is_num_total_logical_bytes_Valid() const;

    QString getNumTotalPhysicalBytes() const;
    void setNumTotalPhysicalBytes(const QString &num_total_physical_bytes);
    bool is_num_total_physical_bytes_Set() const;
    bool is_num_total_physical_bytes_Valid() const;

    OAIRangePartitioning getRangePartitioning() const;
    void setRangePartitioning(const OAIRangePartitioning &range_partitioning);
    bool is_range_partitioning_Set() const;
    bool is_range_partitioning_Valid() const;

    QList<OAITableReference> getReplicas() const;
    void setReplicas(const QList<OAITableReference> &replicas);
    bool is_replicas_Set() const;
    bool is_replicas_Valid() const;

    bool isRequirePartitionFilter() const;
    void setRequirePartitionFilter(const bool &require_partition_filter);
    bool is_require_partition_filter_Set() const;
    bool is_require_partition_filter_Valid() const;

    QMap<QString, QString> getResourceTags() const;
    void setResourceTags(const QMap<QString, QString> &resource_tags);
    bool is_resource_tags_Set() const;
    bool is_resource_tags_Valid() const;

    OAITableSchema getSchema() const;
    void setSchema(const OAITableSchema &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    QString getSelfLink() const;
    void setSelfLink(const QString &self_link);
    bool is_self_link_Set() const;
    bool is_self_link_Valid() const;

    OAISnapshotDefinition getSnapshotDefinition() const;
    void setSnapshotDefinition(const OAISnapshotDefinition &snapshot_definition);
    bool is_snapshot_definition_Set() const;
    bool is_snapshot_definition_Valid() const;

    OAIStreamingbuffer getStreamingBuffer() const;
    void setStreamingBuffer(const OAIStreamingbuffer &streaming_buffer);
    bool is_streaming_buffer_Set() const;
    bool is_streaming_buffer_Valid() const;

    OAITableConstraints getTableConstraints() const;
    void setTableConstraints(const OAITableConstraints &table_constraints);
    bool is_table_constraints_Set() const;
    bool is_table_constraints_Valid() const;

    OAITableReference getTableReference() const;
    void setTableReference(const OAITableReference &table_reference);
    bool is_table_reference_Set() const;
    bool is_table_reference_Valid() const;

    OAITableReplicationInfo getTableReplicationInfo() const;
    void setTableReplicationInfo(const OAITableReplicationInfo &table_replication_info);
    bool is_table_replication_info_Set() const;
    bool is_table_replication_info_Valid() const;

    OAITimePartitioning getTimePartitioning() const;
    void setTimePartitioning(const OAITimePartitioning &time_partitioning);
    bool is_time_partitioning_Set() const;
    bool is_time_partitioning_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIViewDefinition getView() const;
    void setView(const OAIViewDefinition &view);
    bool is_view_Set() const;
    bool is_view_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBigLakeConfiguration m_biglake_configuration;
    bool m_biglake_configuration_isSet;
    bool m_biglake_configuration_isValid;

    OAICloneDefinition m_clone_definition;
    bool m_clone_definition_isSet;
    bool m_clone_definition_isValid;

    OAIClustering m_clustering;
    bool m_clustering_isSet;
    bool m_clustering_isValid;

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_default_collation;
    bool m_default_collation_isSet;
    bool m_default_collation_isValid;

    QString m_default_rounding_mode;
    bool m_default_rounding_mode_isSet;
    bool m_default_rounding_mode_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIEncryptionConfiguration m_encryption_configuration;
    bool m_encryption_configuration_isSet;
    bool m_encryption_configuration_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QString m_expiration_time;
    bool m_expiration_time_isSet;
    bool m_expiration_time_isValid;

    OAIExternalDataConfiguration m_external_data_configuration;
    bool m_external_data_configuration_isSet;
    bool m_external_data_configuration_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIMaterializedViewDefinition m_materialized_view;
    bool m_materialized_view_isSet;
    bool m_materialized_view_isValid;

    OAIMaterializedViewStatus m_materialized_view_status;
    bool m_materialized_view_status_isSet;
    bool m_materialized_view_status_isValid;

    QString m_max_staleness;
    bool m_max_staleness_isSet;
    bool m_max_staleness_isValid;

    OAIModelDefinition m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_num_active_logical_bytes;
    bool m_num_active_logical_bytes_isSet;
    bool m_num_active_logical_bytes_isValid;

    QString m_num_active_physical_bytes;
    bool m_num_active_physical_bytes_isSet;
    bool m_num_active_physical_bytes_isValid;

    QString m_num_bytes;
    bool m_num_bytes_isSet;
    bool m_num_bytes_isValid;

    QString m_num_long_term_bytes;
    bool m_num_long_term_bytes_isSet;
    bool m_num_long_term_bytes_isValid;

    QString m_num_long_term_logical_bytes;
    bool m_num_long_term_logical_bytes_isSet;
    bool m_num_long_term_logical_bytes_isValid;

    QString m_num_long_term_physical_bytes;
    bool m_num_long_term_physical_bytes_isSet;
    bool m_num_long_term_physical_bytes_isValid;

    QString m_num_partitions;
    bool m_num_partitions_isSet;
    bool m_num_partitions_isValid;

    QString m_num_physical_bytes;
    bool m_num_physical_bytes_isSet;
    bool m_num_physical_bytes_isValid;

    QString m_num_rows;
    bool m_num_rows_isSet;
    bool m_num_rows_isValid;

    QString m_num_time_travel_physical_bytes;
    bool m_num_time_travel_physical_bytes_isSet;
    bool m_num_time_travel_physical_bytes_isValid;

    QString m_num_total_logical_bytes;
    bool m_num_total_logical_bytes_isSet;
    bool m_num_total_logical_bytes_isValid;

    QString m_num_total_physical_bytes;
    bool m_num_total_physical_bytes_isSet;
    bool m_num_total_physical_bytes_isValid;

    OAIRangePartitioning m_range_partitioning;
    bool m_range_partitioning_isSet;
    bool m_range_partitioning_isValid;

    QList<OAITableReference> m_replicas;
    bool m_replicas_isSet;
    bool m_replicas_isValid;

    bool m_require_partition_filter;
    bool m_require_partition_filter_isSet;
    bool m_require_partition_filter_isValid;

    QMap<QString, QString> m_resource_tags;
    bool m_resource_tags_isSet;
    bool m_resource_tags_isValid;

    OAITableSchema m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    QString m_self_link;
    bool m_self_link_isSet;
    bool m_self_link_isValid;

    OAISnapshotDefinition m_snapshot_definition;
    bool m_snapshot_definition_isSet;
    bool m_snapshot_definition_isValid;

    OAIStreamingbuffer m_streaming_buffer;
    bool m_streaming_buffer_isSet;
    bool m_streaming_buffer_isValid;

    OAITableConstraints m_table_constraints;
    bool m_table_constraints_isSet;
    bool m_table_constraints_isValid;

    OAITableReference m_table_reference;
    bool m_table_reference_isSet;
    bool m_table_reference_isValid;

    OAITableReplicationInfo m_table_replication_info;
    bool m_table_replication_info_isSet;
    bool m_table_replication_info_isValid;

    OAITimePartitioning m_time_partitioning;
    bool m_time_partitioning_isSet;
    bool m_time_partitioning_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIViewDefinition m_view;
    bool m_view_isSet;
    bool m_view_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITable)

#endif // OAITable_H
