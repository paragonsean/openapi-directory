/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMaterializedViewDefinition.h
 *
 * Definition and configuration of a materialized view.
 */

#ifndef OAIMaterializedViewDefinition_H
#define OAIMaterializedViewDefinition_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMaterializedViewDefinition : public OAIObject {
public:
    OAIMaterializedViewDefinition();
    OAIMaterializedViewDefinition(QString json);
    ~OAIMaterializedViewDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowNonIncrementalDefinition() const;
    void setAllowNonIncrementalDefinition(const bool &allow_non_incremental_definition);
    bool is_allow_non_incremental_definition_Set() const;
    bool is_allow_non_incremental_definition_Valid() const;

    bool isEnableRefresh() const;
    void setEnableRefresh(const bool &enable_refresh);
    bool is_enable_refresh_Set() const;
    bool is_enable_refresh_Valid() const;

    QString getLastRefreshTime() const;
    void setLastRefreshTime(const QString &last_refresh_time);
    bool is_last_refresh_time_Set() const;
    bool is_last_refresh_time_Valid() const;

    QByteArray getMaxStaleness() const;
    void setMaxStaleness(const QByteArray &max_staleness);
    bool is_max_staleness_Set() const;
    bool is_max_staleness_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QString getRefreshIntervalMs() const;
    void setRefreshIntervalMs(const QString &refresh_interval_ms);
    bool is_refresh_interval_ms_Set() const;
    bool is_refresh_interval_ms_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_non_incremental_definition;
    bool m_allow_non_incremental_definition_isSet;
    bool m_allow_non_incremental_definition_isValid;

    bool m_enable_refresh;
    bool m_enable_refresh_isSet;
    bool m_enable_refresh_isValid;

    QString m_last_refresh_time;
    bool m_last_refresh_time_isSet;
    bool m_last_refresh_time_isValid;

    QByteArray m_max_staleness;
    bool m_max_staleness_isSet;
    bool m_max_staleness_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QString m_refresh_interval_ms;
    bool m_refresh_interval_ms_isSet;
    bool m_refresh_interval_ms_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMaterializedViewDefinition)

#endif // OAIMaterializedViewDefinition_H
