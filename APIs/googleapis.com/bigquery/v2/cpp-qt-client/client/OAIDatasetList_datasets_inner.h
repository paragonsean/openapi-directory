/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDatasetList_datasets_inner.h
 *
 * A dataset resource with only a subset of fields, to be returned in a list of datasets.
 */

#ifndef OAIDatasetList_datasets_inner_H
#define OAIDatasetList_datasets_inner_H

#include <QJsonObject>

#include "OAIDatasetReference.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDatasetReference;

class OAIDatasetList_datasets_inner : public OAIObject {
public:
    OAIDatasetList_datasets_inner();
    OAIDatasetList_datasets_inner(QString json);
    ~OAIDatasetList_datasets_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDatasetReference getDatasetReference() const;
    void setDatasetReference(const OAIDatasetReference &dataset_reference);
    bool is_dataset_reference_Set() const;
    bool is_dataset_reference_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDatasetReference m_dataset_reference;
    bool m_dataset_reference_isSet;
    bool m_dataset_reference_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDatasetList_datasets_inner)

#endif // OAIDatasetList_datasets_inner_H
