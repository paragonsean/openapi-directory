/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectList_projects_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectList_projects_inner::OAIProjectList_projects_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectList_projects_inner::OAIProjectList_projects_inner() {
    this->initializeModel();
}

OAIProjectList_projects_inner::~OAIProjectList_projects_inner() {}

void OAIProjectList_projects_inner::initializeModel() {

    m_friendly_name_isSet = false;
    m_friendly_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_numeric_id_isSet = false;
    m_numeric_id_isValid = false;

    m_project_reference_isSet = false;
    m_project_reference_isValid = false;
}

void OAIProjectList_projects_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectList_projects_inner::fromJsonObject(QJsonObject json) {

    m_friendly_name_isValid = ::OpenAPI::fromJsonValue(m_friendly_name, json[QString("friendlyName")]);
    m_friendly_name_isSet = !json[QString("friendlyName")].isNull() && m_friendly_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_numeric_id_isValid = ::OpenAPI::fromJsonValue(m_numeric_id, json[QString("numericId")]);
    m_numeric_id_isSet = !json[QString("numericId")].isNull() && m_numeric_id_isValid;

    m_project_reference_isValid = ::OpenAPI::fromJsonValue(m_project_reference, json[QString("projectReference")]);
    m_project_reference_isSet = !json[QString("projectReference")].isNull() && m_project_reference_isValid;
}

QString OAIProjectList_projects_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectList_projects_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_friendly_name_isSet) {
        obj.insert(QString("friendlyName"), ::OpenAPI::toJsonValue(m_friendly_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_numeric_id_isSet) {
        obj.insert(QString("numericId"), ::OpenAPI::toJsonValue(m_numeric_id));
    }
    if (m_project_reference.isSet()) {
        obj.insert(QString("projectReference"), ::OpenAPI::toJsonValue(m_project_reference));
    }
    return obj;
}

QString OAIProjectList_projects_inner::getFriendlyName() const {
    return m_friendly_name;
}
void OAIProjectList_projects_inner::setFriendlyName(const QString &friendly_name) {
    m_friendly_name = friendly_name;
    m_friendly_name_isSet = true;
}

bool OAIProjectList_projects_inner::is_friendly_name_Set() const{
    return m_friendly_name_isSet;
}

bool OAIProjectList_projects_inner::is_friendly_name_Valid() const{
    return m_friendly_name_isValid;
}

QString OAIProjectList_projects_inner::getId() const {
    return m_id;
}
void OAIProjectList_projects_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProjectList_projects_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProjectList_projects_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProjectList_projects_inner::getKind() const {
    return m_kind;
}
void OAIProjectList_projects_inner::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIProjectList_projects_inner::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIProjectList_projects_inner::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIProjectList_projects_inner::getNumericId() const {
    return m_numeric_id;
}
void OAIProjectList_projects_inner::setNumericId(const QString &numeric_id) {
    m_numeric_id = numeric_id;
    m_numeric_id_isSet = true;
}

bool OAIProjectList_projects_inner::is_numeric_id_Set() const{
    return m_numeric_id_isSet;
}

bool OAIProjectList_projects_inner::is_numeric_id_Valid() const{
    return m_numeric_id_isValid;
}

OAIProjectReference OAIProjectList_projects_inner::getProjectReference() const {
    return m_project_reference;
}
void OAIProjectList_projects_inner::setProjectReference(const OAIProjectReference &project_reference) {
    m_project_reference = project_reference;
    m_project_reference_isSet = true;
}

bool OAIProjectList_projects_inner::is_project_reference_Set() const{
    return m_project_reference_isSet;
}

bool OAIProjectList_projects_inner::is_project_reference_Valid() const{
    return m_project_reference_isValid;
}

bool OAIProjectList_projects_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_friendly_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_numeric_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectList_projects_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
