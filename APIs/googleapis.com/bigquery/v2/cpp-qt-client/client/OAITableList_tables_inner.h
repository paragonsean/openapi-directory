/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableList_tables_inner.h
 *
 * 
 */

#ifndef OAITableList_tables_inner_H
#define OAITableList_tables_inner_H

#include <QJsonObject>

#include "OAIClustering.h"
#include "OAIRangePartitioning.h"
#include "OAITableList_tables_inner_view.h"
#include "OAITableReference.h"
#include "OAITimePartitioning.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClustering;
class OAIRangePartitioning;
class OAITableReference;
class OAITimePartitioning;
class OAITableList_tables_inner_view;

class OAITableList_tables_inner : public OAIObject {
public:
    OAITableList_tables_inner();
    OAITableList_tables_inner(QString json);
    ~OAITableList_tables_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIClustering getClustering() const;
    void setClustering(const OAIClustering &clustering);
    bool is_clustering_Set() const;
    bool is_clustering_Valid() const;

    QString getCreationTime() const;
    void setCreationTime(const QString &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getExpirationTime() const;
    void setExpirationTime(const QString &expiration_time);
    bool is_expiration_time_Set() const;
    bool is_expiration_time_Valid() const;

    QString getFriendlyName() const;
    void setFriendlyName(const QString &friendly_name);
    bool is_friendly_name_Set() const;
    bool is_friendly_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    OAIRangePartitioning getRangePartitioning() const;
    void setRangePartitioning(const OAIRangePartitioning &range_partitioning);
    bool is_range_partitioning_Set() const;
    bool is_range_partitioning_Valid() const;

    bool isRequirePartitionFilter() const;
    void setRequirePartitionFilter(const bool &require_partition_filter);
    bool is_require_partition_filter_Set() const;
    bool is_require_partition_filter_Valid() const;

    OAITableReference getTableReference() const;
    void setTableReference(const OAITableReference &table_reference);
    bool is_table_reference_Set() const;
    bool is_table_reference_Valid() const;

    OAITimePartitioning getTimePartitioning() const;
    void setTimePartitioning(const OAITimePartitioning &time_partitioning);
    bool is_time_partitioning_Set() const;
    bool is_time_partitioning_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAITableList_tables_inner_view getView() const;
    void setView(const OAITableList_tables_inner_view &view);
    bool is_view_Set() const;
    bool is_view_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIClustering m_clustering;
    bool m_clustering_isSet;
    bool m_clustering_isValid;

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_expiration_time;
    bool m_expiration_time_isSet;
    bool m_expiration_time_isValid;

    QString m_friendly_name;
    bool m_friendly_name_isSet;
    bool m_friendly_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    OAIRangePartitioning m_range_partitioning;
    bool m_range_partitioning_isSet;
    bool m_range_partitioning_isValid;

    bool m_require_partition_filter;
    bool m_require_partition_filter_isSet;
    bool m_require_partition_filter_isValid;

    OAITableReference m_table_reference;
    bool m_table_reference_isSet;
    bool m_table_reference_isValid;

    OAITimePartitioning m_time_partitioning;
    bool m_time_partitioning_isSet;
    bool m_time_partitioning_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAITableList_tables_inner_view m_view;
    bool m_view_isSet;
    bool m_view_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableList_tables_inner)

#endif // OAITableList_tables_inner_H
