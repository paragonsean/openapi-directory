/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParquetOptions.h
 *
 * Parquet Options for load and make external tables.
 */

#ifndef OAIParquetOptions_H
#define OAIParquetOptions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParquetOptions : public OAIObject {
public:
    OAIParquetOptions();
    OAIParquetOptions(QString json);
    ~OAIParquetOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnableListInference() const;
    void setEnableListInference(const bool &enable_list_inference);
    bool is_enable_list_inference_Set() const;
    bool is_enable_list_inference_Valid() const;

    bool isEnumAsString() const;
    void setEnumAsString(const bool &enum_as_string);
    bool is_enum_as_string_Set() const;
    bool is_enum_as_string_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enable_list_inference;
    bool m_enable_list_inference_isSet;
    bool m_enable_list_inference_isValid;

    bool m_enum_as_string;
    bool m_enum_as_string_isSet;
    bool m_enum_as_string_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParquetOptions)

#endif // OAIParquetOptions_H
