/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDmlStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDmlStatistics::OAIDmlStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDmlStatistics::OAIDmlStatistics() {
    this->initializeModel();
}

OAIDmlStatistics::~OAIDmlStatistics() {}

void OAIDmlStatistics::initializeModel() {

    m_deleted_row_count_isSet = false;
    m_deleted_row_count_isValid = false;

    m_inserted_row_count_isSet = false;
    m_inserted_row_count_isValid = false;

    m_updated_row_count_isSet = false;
    m_updated_row_count_isValid = false;
}

void OAIDmlStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDmlStatistics::fromJsonObject(QJsonObject json) {

    m_deleted_row_count_isValid = ::OpenAPI::fromJsonValue(m_deleted_row_count, json[QString("deletedRowCount")]);
    m_deleted_row_count_isSet = !json[QString("deletedRowCount")].isNull() && m_deleted_row_count_isValid;

    m_inserted_row_count_isValid = ::OpenAPI::fromJsonValue(m_inserted_row_count, json[QString("insertedRowCount")]);
    m_inserted_row_count_isSet = !json[QString("insertedRowCount")].isNull() && m_inserted_row_count_isValid;

    m_updated_row_count_isValid = ::OpenAPI::fromJsonValue(m_updated_row_count, json[QString("updatedRowCount")]);
    m_updated_row_count_isSet = !json[QString("updatedRowCount")].isNull() && m_updated_row_count_isValid;
}

QString OAIDmlStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDmlStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_deleted_row_count_isSet) {
        obj.insert(QString("deletedRowCount"), ::OpenAPI::toJsonValue(m_deleted_row_count));
    }
    if (m_inserted_row_count_isSet) {
        obj.insert(QString("insertedRowCount"), ::OpenAPI::toJsonValue(m_inserted_row_count));
    }
    if (m_updated_row_count_isSet) {
        obj.insert(QString("updatedRowCount"), ::OpenAPI::toJsonValue(m_updated_row_count));
    }
    return obj;
}

QString OAIDmlStatistics::getDeletedRowCount() const {
    return m_deleted_row_count;
}
void OAIDmlStatistics::setDeletedRowCount(const QString &deleted_row_count) {
    m_deleted_row_count = deleted_row_count;
    m_deleted_row_count_isSet = true;
}

bool OAIDmlStatistics::is_deleted_row_count_Set() const{
    return m_deleted_row_count_isSet;
}

bool OAIDmlStatistics::is_deleted_row_count_Valid() const{
    return m_deleted_row_count_isValid;
}

QString OAIDmlStatistics::getInsertedRowCount() const {
    return m_inserted_row_count;
}
void OAIDmlStatistics::setInsertedRowCount(const QString &inserted_row_count) {
    m_inserted_row_count = inserted_row_count;
    m_inserted_row_count_isSet = true;
}

bool OAIDmlStatistics::is_inserted_row_count_Set() const{
    return m_inserted_row_count_isSet;
}

bool OAIDmlStatistics::is_inserted_row_count_Valid() const{
    return m_inserted_row_count_isValid;
}

QString OAIDmlStatistics::getUpdatedRowCount() const {
    return m_updated_row_count;
}
void OAIDmlStatistics::setUpdatedRowCount(const QString &updated_row_count) {
    m_updated_row_count = updated_row_count;
    m_updated_row_count_isSet = true;
}

bool OAIDmlStatistics::is_updated_row_count_Set() const{
    return m_updated_row_count_isSet;
}

bool OAIDmlStatistics::is_updated_row_count_Valid() const{
    return m_updated_row_count_isValid;
}

bool OAIDmlStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deleted_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inserted_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_row_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDmlStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
