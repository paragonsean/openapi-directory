/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataset_access_inner.h
 *
 * An object that defines dataset access for an entity.
 */

#ifndef OAIDataset_access_inner_H
#define OAIDataset_access_inner_H

#include <QJsonObject>

#include "OAIDatasetAccessEntry.h"
#include "OAIRoutineReference.h"
#include "OAITableReference.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDatasetAccessEntry;
class OAIRoutineReference;
class OAITableReference;

class OAIDataset_access_inner : public OAIObject {
public:
    OAIDataset_access_inner();
    OAIDataset_access_inner(QString json);
    ~OAIDataset_access_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDatasetAccessEntry getDataset() const;
    void setDataset(const OAIDatasetAccessEntry &dataset);
    bool is_dataset_Set() const;
    bool is_dataset_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getGroupByEmail() const;
    void setGroupByEmail(const QString &group_by_email);
    bool is_group_by_email_Set() const;
    bool is_group_by_email_Valid() const;

    QString getIamMember() const;
    void setIamMember(const QString &iam_member);
    bool is_iam_member_Set() const;
    bool is_iam_member_Valid() const;

    QString getRole() const;
    void setRole(const QString &role);
    bool is_role_Set() const;
    bool is_role_Valid() const;

    OAIRoutineReference getRoutine() const;
    void setRoutine(const OAIRoutineReference &routine);
    bool is_routine_Set() const;
    bool is_routine_Valid() const;

    QString getSpecialGroup() const;
    void setSpecialGroup(const QString &special_group);
    bool is_special_group_Set() const;
    bool is_special_group_Valid() const;

    QString getUserByEmail() const;
    void setUserByEmail(const QString &user_by_email);
    bool is_user_by_email_Set() const;
    bool is_user_by_email_Valid() const;

    OAITableReference getView() const;
    void setView(const OAITableReference &view);
    bool is_view_Set() const;
    bool is_view_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDatasetAccessEntry m_dataset;
    bool m_dataset_isSet;
    bool m_dataset_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_group_by_email;
    bool m_group_by_email_isSet;
    bool m_group_by_email_isValid;

    QString m_iam_member;
    bool m_iam_member_isSet;
    bool m_iam_member_isValid;

    QString m_role;
    bool m_role_isSet;
    bool m_role_isValid;

    OAIRoutineReference m_routine;
    bool m_routine_isSet;
    bool m_routine_isValid;

    QString m_special_group;
    bool m_special_group_isSet;
    bool m_special_group_isValid;

    QString m_user_by_email;
    bool m_user_by_email_isSet;
    bool m_user_by_email_isValid;

    OAITableReference m_view;
    bool m_view_isSet;
    bool m_view_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataset_access_inner)

#endif // OAIDataset_access_inner_H
