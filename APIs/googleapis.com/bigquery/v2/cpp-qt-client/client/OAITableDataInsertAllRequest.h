/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableDataInsertAllRequest.h
 *
 * Request for sending a single streaming insert.
 */

#ifndef OAITableDataInsertAllRequest_H
#define OAITableDataInsertAllRequest_H

#include <QJsonObject>

#include "OAITableDataInsertAllRequest_rows_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableDataInsertAllRequest_rows_inner;

class OAITableDataInsertAllRequest : public OAIObject {
public:
    OAITableDataInsertAllRequest();
    OAITableDataInsertAllRequest(QString json);
    ~OAITableDataInsertAllRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIgnoreUnknownValues() const;
    void setIgnoreUnknownValues(const bool &ignore_unknown_values);
    bool is_ignore_unknown_values_Set() const;
    bool is_ignore_unknown_values_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QList<OAITableDataInsertAllRequest_rows_inner> getRows() const;
    void setRows(const QList<OAITableDataInsertAllRequest_rows_inner> &rows);
    bool is_rows_Set() const;
    bool is_rows_Valid() const;

    bool isSkipInvalidRows() const;
    void setSkipInvalidRows(const bool &skip_invalid_rows);
    bool is_skip_invalid_rows_Set() const;
    bool is_skip_invalid_rows_Valid() const;

    QString getTemplateSuffix() const;
    void setTemplateSuffix(const QString &template_suffix);
    bool is_template_suffix_Set() const;
    bool is_template_suffix_Valid() const;

    QString getTraceId() const;
    void setTraceId(const QString &trace_id);
    bool is_trace_id_Set() const;
    bool is_trace_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ignore_unknown_values;
    bool m_ignore_unknown_values_isSet;
    bool m_ignore_unknown_values_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QList<OAITableDataInsertAllRequest_rows_inner> m_rows;
    bool m_rows_isSet;
    bool m_rows_isValid;

    bool m_skip_invalid_rows;
    bool m_skip_invalid_rows_isSet;
    bool m_skip_invalid_rows_isValid;

    QString m_template_suffix;
    bool m_template_suffix_isSet;
    bool m_template_suffix_isValid;

    QString m_trace_id;
    bool m_trace_id_isSet;
    bool m_trace_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableDataInsertAllRequest)

#endif // OAITableDataInsertAllRequest_H
