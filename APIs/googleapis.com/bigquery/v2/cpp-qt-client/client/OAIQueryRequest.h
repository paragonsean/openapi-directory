/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryRequest.h
 *
 * Describes the format of the jobs.query request.
 */

#ifndef OAIQueryRequest_H
#define OAIQueryRequest_H

#include <QJsonObject>

#include "OAIConnectionProperty.h"
#include "OAIDataFormatOptions.h"
#include "OAIDatasetReference.h"
#include "OAIQueryParameter.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConnectionProperty;
class OAIDatasetReference;
class OAIDataFormatOptions;
class OAIQueryParameter;

class OAIQueryRequest : public OAIObject {
public:
    OAIQueryRequest();
    OAIQueryRequest(QString json);
    ~OAIQueryRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIConnectionProperty> getConnectionProperties() const;
    void setConnectionProperties(const QList<OAIConnectionProperty> &connection_properties);
    bool is_connection_properties_Set() const;
    bool is_connection_properties_Valid() const;

    bool isContinuous() const;
    void setContinuous(const bool &continuous);
    bool is_continuous_Set() const;
    bool is_continuous_Valid() const;

    bool isCreateSession() const;
    void setCreateSession(const bool &create_session);
    bool is_create_session_Set() const;
    bool is_create_session_Valid() const;

    OAIDatasetReference getDefaultDataset() const;
    void setDefaultDataset(const OAIDatasetReference &default_dataset);
    bool is_default_dataset_Set() const;
    bool is_default_dataset_Valid() const;

    bool isDryRun() const;
    void setDryRun(const bool &dry_run);
    bool is_dry_run_Set() const;
    bool is_dry_run_Valid() const;

    OAIDataFormatOptions getFormatOptions() const;
    void setFormatOptions(const OAIDataFormatOptions &format_options);
    bool is_format_options_Set() const;
    bool is_format_options_Valid() const;

    QString getJobCreationMode() const;
    void setJobCreationMode(const QString &job_creation_mode);
    bool is_job_creation_mode_Set() const;
    bool is_job_creation_mode_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QMap<QString, QString> getLabels() const;
    void setLabels(const QMap<QString, QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getMaximumBytesBilled() const;
    void setMaximumBytesBilled(const QString &maximum_bytes_billed);
    bool is_maximum_bytes_billed_Set() const;
    bool is_maximum_bytes_billed_Valid() const;

    QString getParameterMode() const;
    void setParameterMode(const QString &parameter_mode);
    bool is_parameter_mode_Set() const;
    bool is_parameter_mode_Valid() const;

    Q_DECL_DEPRECATED bool isPreserveNulls() const;
    Q_DECL_DEPRECATED void setPreserveNulls(const bool &preserve_nulls);
    Q_DECL_DEPRECATED bool is_preserve_nulls_Set() const;
    Q_DECL_DEPRECATED bool is_preserve_nulls_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QList<OAIQueryParameter> getQueryParameters() const;
    void setQueryParameters(const QList<OAIQueryParameter> &query_parameters);
    bool is_query_parameters_Set() const;
    bool is_query_parameters_Valid() const;

    QString getRequestId() const;
    void setRequestId(const QString &request_id);
    bool is_request_id_Set() const;
    bool is_request_id_Valid() const;

    qint32 getTimeoutMs() const;
    void setTimeoutMs(const qint32 &timeout_ms);
    bool is_timeout_ms_Set() const;
    bool is_timeout_ms_Valid() const;

    bool isUseLegacySql() const;
    void setUseLegacySql(const bool &use_legacy_sql);
    bool is_use_legacy_sql_Set() const;
    bool is_use_legacy_sql_Valid() const;

    bool isUseQueryCache() const;
    void setUseQueryCache(const bool &use_query_cache);
    bool is_use_query_cache_Set() const;
    bool is_use_query_cache_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIConnectionProperty> m_connection_properties;
    bool m_connection_properties_isSet;
    bool m_connection_properties_isValid;

    bool m_continuous;
    bool m_continuous_isSet;
    bool m_continuous_isValid;

    bool m_create_session;
    bool m_create_session_isSet;
    bool m_create_session_isValid;

    OAIDatasetReference m_default_dataset;
    bool m_default_dataset_isSet;
    bool m_default_dataset_isValid;

    bool m_dry_run;
    bool m_dry_run_isSet;
    bool m_dry_run_isValid;

    OAIDataFormatOptions m_format_options;
    bool m_format_options_isSet;
    bool m_format_options_isValid;

    QString m_job_creation_mode;
    bool m_job_creation_mode_isSet;
    bool m_job_creation_mode_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QMap<QString, QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_maximum_bytes_billed;
    bool m_maximum_bytes_billed_isSet;
    bool m_maximum_bytes_billed_isValid;

    QString m_parameter_mode;
    bool m_parameter_mode_isSet;
    bool m_parameter_mode_isValid;

    bool m_preserve_nulls;
    bool m_preserve_nulls_isSet;
    bool m_preserve_nulls_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QList<OAIQueryParameter> m_query_parameters;
    bool m_query_parameters_isSet;
    bool m_query_parameters_isValid;

    QString m_request_id;
    bool m_request_id_isSet;
    bool m_request_id_isValid;

    qint32 m_timeout_ms;
    bool m_timeout_ms_isSet;
    bool m_timeout_ms_isValid;

    bool m_use_legacy_sql;
    bool m_use_legacy_sql_isSet;
    bool m_use_legacy_sql_isValid;

    bool m_use_query_cache;
    bool m_use_query_cache_isSet;
    bool m_use_query_cache_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryRequest)

#endif // OAIQueryRequest_H
