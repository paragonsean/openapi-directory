/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimePartitioning.h
 *
 * 
 */

#ifndef OAITimePartitioning_H
#define OAITimePartitioning_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITimePartitioning : public OAIObject {
public:
    OAITimePartitioning();
    OAITimePartitioning(QString json);
    ~OAITimePartitioning() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExpirationMs() const;
    void setExpirationMs(const QString &expiration_ms);
    bool is_expiration_ms_Set() const;
    bool is_expiration_ms_Valid() const;

    QString getField() const;
    void setField(const QString &field);
    bool is_field_Set() const;
    bool is_field_Valid() const;

    Q_DECL_DEPRECATED bool isRequirePartitionFilter() const;
    Q_DECL_DEPRECATED void setRequirePartitionFilter(const bool &require_partition_filter);
    Q_DECL_DEPRECATED bool is_require_partition_filter_Set() const;
    Q_DECL_DEPRECATED bool is_require_partition_filter_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_expiration_ms;
    bool m_expiration_ms_isSet;
    bool m_expiration_ms_isValid;

    QString m_field;
    bool m_field_isSet;
    bool m_field_isValid;

    bool m_require_partition_filter;
    bool m_require_partition_filter_isSet;
    bool m_require_partition_filter_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimePartitioning)

#endif // OAITimePartitioning_H
