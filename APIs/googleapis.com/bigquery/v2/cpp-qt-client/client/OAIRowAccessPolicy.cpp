/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRowAccessPolicy.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRowAccessPolicy::OAIRowAccessPolicy(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRowAccessPolicy::OAIRowAccessPolicy() {
    this->initializeModel();
}

OAIRowAccessPolicy::~OAIRowAccessPolicy() {}

void OAIRowAccessPolicy::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_filter_predicate_isSet = false;
    m_filter_predicate_isValid = false;

    m_last_modified_time_isSet = false;
    m_last_modified_time_isValid = false;

    m_row_access_policy_reference_isSet = false;
    m_row_access_policy_reference_isValid = false;
}

void OAIRowAccessPolicy::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRowAccessPolicy::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_filter_predicate_isValid = ::OpenAPI::fromJsonValue(m_filter_predicate, json[QString("filterPredicate")]);
    m_filter_predicate_isSet = !json[QString("filterPredicate")].isNull() && m_filter_predicate_isValid;

    m_last_modified_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_time, json[QString("lastModifiedTime")]);
    m_last_modified_time_isSet = !json[QString("lastModifiedTime")].isNull() && m_last_modified_time_isValid;

    m_row_access_policy_reference_isValid = ::OpenAPI::fromJsonValue(m_row_access_policy_reference, json[QString("rowAccessPolicyReference")]);
    m_row_access_policy_reference_isSet = !json[QString("rowAccessPolicyReference")].isNull() && m_row_access_policy_reference_isValid;
}

QString OAIRowAccessPolicy::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRowAccessPolicy::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_filter_predicate_isSet) {
        obj.insert(QString("filterPredicate"), ::OpenAPI::toJsonValue(m_filter_predicate));
    }
    if (m_last_modified_time_isSet) {
        obj.insert(QString("lastModifiedTime"), ::OpenAPI::toJsonValue(m_last_modified_time));
    }
    if (m_row_access_policy_reference.isSet()) {
        obj.insert(QString("rowAccessPolicyReference"), ::OpenAPI::toJsonValue(m_row_access_policy_reference));
    }
    return obj;
}

QString OAIRowAccessPolicy::getCreationTime() const {
    return m_creation_time;
}
void OAIRowAccessPolicy::setCreationTime(const QString &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAIRowAccessPolicy::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAIRowAccessPolicy::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAIRowAccessPolicy::getEtag() const {
    return m_etag;
}
void OAIRowAccessPolicy::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIRowAccessPolicy::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIRowAccessPolicy::is_etag_Valid() const{
    return m_etag_isValid;
}

QString OAIRowAccessPolicy::getFilterPredicate() const {
    return m_filter_predicate;
}
void OAIRowAccessPolicy::setFilterPredicate(const QString &filter_predicate) {
    m_filter_predicate = filter_predicate;
    m_filter_predicate_isSet = true;
}

bool OAIRowAccessPolicy::is_filter_predicate_Set() const{
    return m_filter_predicate_isSet;
}

bool OAIRowAccessPolicy::is_filter_predicate_Valid() const{
    return m_filter_predicate_isValid;
}

QString OAIRowAccessPolicy::getLastModifiedTime() const {
    return m_last_modified_time;
}
void OAIRowAccessPolicy::setLastModifiedTime(const QString &last_modified_time) {
    m_last_modified_time = last_modified_time;
    m_last_modified_time_isSet = true;
}

bool OAIRowAccessPolicy::is_last_modified_time_Set() const{
    return m_last_modified_time_isSet;
}

bool OAIRowAccessPolicy::is_last_modified_time_Valid() const{
    return m_last_modified_time_isValid;
}

OAIRowAccessPolicyReference OAIRowAccessPolicy::getRowAccessPolicyReference() const {
    return m_row_access_policy_reference;
}
void OAIRowAccessPolicy::setRowAccessPolicyReference(const OAIRowAccessPolicyReference &row_access_policy_reference) {
    m_row_access_policy_reference = row_access_policy_reference;
    m_row_access_policy_reference_isSet = true;
}

bool OAIRowAccessPolicy::is_row_access_policy_reference_Set() const{
    return m_row_access_policy_reference_isSet;
}

bool OAIRowAccessPolicy::is_row_access_policy_reference_Valid() const{
    return m_row_access_policy_reference_isValid;
}

bool OAIRowAccessPolicy::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter_predicate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_row_access_policy_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRowAccessPolicy::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
