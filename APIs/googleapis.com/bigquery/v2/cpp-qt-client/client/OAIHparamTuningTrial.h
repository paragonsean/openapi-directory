/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHparamTuningTrial.h
 *
 * Training info of a trial in [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models.
 */

#ifndef OAIHparamTuningTrial_H
#define OAIHparamTuningTrial_H

#include <QJsonObject>

#include "OAIEvaluationMetrics.h"
#include "OAITrainingOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEvaluationMetrics;
class OAITrainingOptions;

class OAIHparamTuningTrial : public OAIObject {
public:
    OAIHparamTuningTrial();
    OAIHparamTuningTrial(QString json);
    ~OAIHparamTuningTrial() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEndTimeMs() const;
    void setEndTimeMs(const QString &end_time_ms);
    bool is_end_time_ms_Set() const;
    bool is_end_time_ms_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    double getEvalLoss() const;
    void setEvalLoss(const double &eval_loss);
    bool is_eval_loss_Set() const;
    bool is_eval_loss_Valid() const;

    OAIEvaluationMetrics getEvaluationMetrics() const;
    void setEvaluationMetrics(const OAIEvaluationMetrics &evaluation_metrics);
    bool is_evaluation_metrics_Set() const;
    bool is_evaluation_metrics_Valid() const;

    OAIEvaluationMetrics getHparamTuningEvaluationMetrics() const;
    void setHparamTuningEvaluationMetrics(const OAIEvaluationMetrics &hparam_tuning_evaluation_metrics);
    bool is_hparam_tuning_evaluation_metrics_Set() const;
    bool is_hparam_tuning_evaluation_metrics_Valid() const;

    OAITrainingOptions getHparams() const;
    void setHparams(const OAITrainingOptions &hparams);
    bool is_hparams_Set() const;
    bool is_hparams_Valid() const;

    QString getStartTimeMs() const;
    void setStartTimeMs(const QString &start_time_ms);
    bool is_start_time_ms_Set() const;
    bool is_start_time_ms_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    double getTrainingLoss() const;
    void setTrainingLoss(const double &training_loss);
    bool is_training_loss_Set() const;
    bool is_training_loss_Valid() const;

    QString getTrialId() const;
    void setTrialId(const QString &trial_id);
    bool is_trial_id_Set() const;
    bool is_trial_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_end_time_ms;
    bool m_end_time_ms_isSet;
    bool m_end_time_ms_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    double m_eval_loss;
    bool m_eval_loss_isSet;
    bool m_eval_loss_isValid;

    OAIEvaluationMetrics m_evaluation_metrics;
    bool m_evaluation_metrics_isSet;
    bool m_evaluation_metrics_isValid;

    OAIEvaluationMetrics m_hparam_tuning_evaluation_metrics;
    bool m_hparam_tuning_evaluation_metrics_isSet;
    bool m_hparam_tuning_evaluation_metrics_isValid;

    OAITrainingOptions m_hparams;
    bool m_hparams_isSet;
    bool m_hparams_isValid;

    QString m_start_time_ms;
    bool m_start_time_ms_isSet;
    bool m_start_time_ms_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    double m_training_loss;
    bool m_training_loss_isSet;
    bool m_training_loss_isValid;

    QString m_trial_id;
    bool m_trial_id_isSet;
    bool m_trial_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHparamTuningTrial)

#endif // OAIHparamTuningTrial_H
