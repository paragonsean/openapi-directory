/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrincipalComponentInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrincipalComponentInfo::OAIPrincipalComponentInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrincipalComponentInfo::OAIPrincipalComponentInfo() {
    this->initializeModel();
}

OAIPrincipalComponentInfo::~OAIPrincipalComponentInfo() {}

void OAIPrincipalComponentInfo::initializeModel() {

    m_cumulative_explained_variance_ratio_isSet = false;
    m_cumulative_explained_variance_ratio_isValid = false;

    m_explained_variance_isSet = false;
    m_explained_variance_isValid = false;

    m_explained_variance_ratio_isSet = false;
    m_explained_variance_ratio_isValid = false;

    m_principal_component_id_isSet = false;
    m_principal_component_id_isValid = false;
}

void OAIPrincipalComponentInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrincipalComponentInfo::fromJsonObject(QJsonObject json) {

    m_cumulative_explained_variance_ratio_isValid = ::OpenAPI::fromJsonValue(m_cumulative_explained_variance_ratio, json[QString("cumulativeExplainedVarianceRatio")]);
    m_cumulative_explained_variance_ratio_isSet = !json[QString("cumulativeExplainedVarianceRatio")].isNull() && m_cumulative_explained_variance_ratio_isValid;

    m_explained_variance_isValid = ::OpenAPI::fromJsonValue(m_explained_variance, json[QString("explainedVariance")]);
    m_explained_variance_isSet = !json[QString("explainedVariance")].isNull() && m_explained_variance_isValid;

    m_explained_variance_ratio_isValid = ::OpenAPI::fromJsonValue(m_explained_variance_ratio, json[QString("explainedVarianceRatio")]);
    m_explained_variance_ratio_isSet = !json[QString("explainedVarianceRatio")].isNull() && m_explained_variance_ratio_isValid;

    m_principal_component_id_isValid = ::OpenAPI::fromJsonValue(m_principal_component_id, json[QString("principalComponentId")]);
    m_principal_component_id_isSet = !json[QString("principalComponentId")].isNull() && m_principal_component_id_isValid;
}

QString OAIPrincipalComponentInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrincipalComponentInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_cumulative_explained_variance_ratio_isSet) {
        obj.insert(QString("cumulativeExplainedVarianceRatio"), ::OpenAPI::toJsonValue(m_cumulative_explained_variance_ratio));
    }
    if (m_explained_variance_isSet) {
        obj.insert(QString("explainedVariance"), ::OpenAPI::toJsonValue(m_explained_variance));
    }
    if (m_explained_variance_ratio_isSet) {
        obj.insert(QString("explainedVarianceRatio"), ::OpenAPI::toJsonValue(m_explained_variance_ratio));
    }
    if (m_principal_component_id_isSet) {
        obj.insert(QString("principalComponentId"), ::OpenAPI::toJsonValue(m_principal_component_id));
    }
    return obj;
}

double OAIPrincipalComponentInfo::getCumulativeExplainedVarianceRatio() const {
    return m_cumulative_explained_variance_ratio;
}
void OAIPrincipalComponentInfo::setCumulativeExplainedVarianceRatio(const double &cumulative_explained_variance_ratio) {
    m_cumulative_explained_variance_ratio = cumulative_explained_variance_ratio;
    m_cumulative_explained_variance_ratio_isSet = true;
}

bool OAIPrincipalComponentInfo::is_cumulative_explained_variance_ratio_Set() const{
    return m_cumulative_explained_variance_ratio_isSet;
}

bool OAIPrincipalComponentInfo::is_cumulative_explained_variance_ratio_Valid() const{
    return m_cumulative_explained_variance_ratio_isValid;
}

double OAIPrincipalComponentInfo::getExplainedVariance() const {
    return m_explained_variance;
}
void OAIPrincipalComponentInfo::setExplainedVariance(const double &explained_variance) {
    m_explained_variance = explained_variance;
    m_explained_variance_isSet = true;
}

bool OAIPrincipalComponentInfo::is_explained_variance_Set() const{
    return m_explained_variance_isSet;
}

bool OAIPrincipalComponentInfo::is_explained_variance_Valid() const{
    return m_explained_variance_isValid;
}

double OAIPrincipalComponentInfo::getExplainedVarianceRatio() const {
    return m_explained_variance_ratio;
}
void OAIPrincipalComponentInfo::setExplainedVarianceRatio(const double &explained_variance_ratio) {
    m_explained_variance_ratio = explained_variance_ratio;
    m_explained_variance_ratio_isSet = true;
}

bool OAIPrincipalComponentInfo::is_explained_variance_ratio_Set() const{
    return m_explained_variance_ratio_isSet;
}

bool OAIPrincipalComponentInfo::is_explained_variance_ratio_Valid() const{
    return m_explained_variance_ratio_isValid;
}

QString OAIPrincipalComponentInfo::getPrincipalComponentId() const {
    return m_principal_component_id;
}
void OAIPrincipalComponentInfo::setPrincipalComponentId(const QString &principal_component_id) {
    m_principal_component_id = principal_component_id;
    m_principal_component_id_isSet = true;
}

bool OAIPrincipalComponentInfo::is_principal_component_id_Set() const{
    return m_principal_component_id_isSet;
}

bool OAIPrincipalComponentInfo::is_principal_component_id_Valid() const{
    return m_principal_component_id_isValid;
}

bool OAIPrincipalComponentInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cumulative_explained_variance_ratio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_explained_variance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_explained_variance_ratio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_principal_component_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrincipalComponentInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
