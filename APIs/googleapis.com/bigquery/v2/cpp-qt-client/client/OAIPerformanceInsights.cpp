/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPerformanceInsights.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPerformanceInsights::OAIPerformanceInsights(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPerformanceInsights::OAIPerformanceInsights() {
    this->initializeModel();
}

OAIPerformanceInsights::~OAIPerformanceInsights() {}

void OAIPerformanceInsights::initializeModel() {

    m_avg_previous_execution_ms_isSet = false;
    m_avg_previous_execution_ms_isValid = false;

    m_stage_performance_change_insights_isSet = false;
    m_stage_performance_change_insights_isValid = false;

    m_stage_performance_standalone_insights_isSet = false;
    m_stage_performance_standalone_insights_isValid = false;
}

void OAIPerformanceInsights::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPerformanceInsights::fromJsonObject(QJsonObject json) {

    m_avg_previous_execution_ms_isValid = ::OpenAPI::fromJsonValue(m_avg_previous_execution_ms, json[QString("avgPreviousExecutionMs")]);
    m_avg_previous_execution_ms_isSet = !json[QString("avgPreviousExecutionMs")].isNull() && m_avg_previous_execution_ms_isValid;

    m_stage_performance_change_insights_isValid = ::OpenAPI::fromJsonValue(m_stage_performance_change_insights, json[QString("stagePerformanceChangeInsights")]);
    m_stage_performance_change_insights_isSet = !json[QString("stagePerformanceChangeInsights")].isNull() && m_stage_performance_change_insights_isValid;

    m_stage_performance_standalone_insights_isValid = ::OpenAPI::fromJsonValue(m_stage_performance_standalone_insights, json[QString("stagePerformanceStandaloneInsights")]);
    m_stage_performance_standalone_insights_isSet = !json[QString("stagePerformanceStandaloneInsights")].isNull() && m_stage_performance_standalone_insights_isValid;
}

QString OAIPerformanceInsights::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPerformanceInsights::asJsonObject() const {
    QJsonObject obj;
    if (m_avg_previous_execution_ms_isSet) {
        obj.insert(QString("avgPreviousExecutionMs"), ::OpenAPI::toJsonValue(m_avg_previous_execution_ms));
    }
    if (m_stage_performance_change_insights.size() > 0) {
        obj.insert(QString("stagePerformanceChangeInsights"), ::OpenAPI::toJsonValue(m_stage_performance_change_insights));
    }
    if (m_stage_performance_standalone_insights.size() > 0) {
        obj.insert(QString("stagePerformanceStandaloneInsights"), ::OpenAPI::toJsonValue(m_stage_performance_standalone_insights));
    }
    return obj;
}

QString OAIPerformanceInsights::getAvgPreviousExecutionMs() const {
    return m_avg_previous_execution_ms;
}
void OAIPerformanceInsights::setAvgPreviousExecutionMs(const QString &avg_previous_execution_ms) {
    m_avg_previous_execution_ms = avg_previous_execution_ms;
    m_avg_previous_execution_ms_isSet = true;
}

bool OAIPerformanceInsights::is_avg_previous_execution_ms_Set() const{
    return m_avg_previous_execution_ms_isSet;
}

bool OAIPerformanceInsights::is_avg_previous_execution_ms_Valid() const{
    return m_avg_previous_execution_ms_isValid;
}

QList<OAIStagePerformanceChangeInsight> OAIPerformanceInsights::getStagePerformanceChangeInsights() const {
    return m_stage_performance_change_insights;
}
void OAIPerformanceInsights::setStagePerformanceChangeInsights(const QList<OAIStagePerformanceChangeInsight> &stage_performance_change_insights) {
    m_stage_performance_change_insights = stage_performance_change_insights;
    m_stage_performance_change_insights_isSet = true;
}

bool OAIPerformanceInsights::is_stage_performance_change_insights_Set() const{
    return m_stage_performance_change_insights_isSet;
}

bool OAIPerformanceInsights::is_stage_performance_change_insights_Valid() const{
    return m_stage_performance_change_insights_isValid;
}

QList<OAIStagePerformanceStandaloneInsight> OAIPerformanceInsights::getStagePerformanceStandaloneInsights() const {
    return m_stage_performance_standalone_insights;
}
void OAIPerformanceInsights::setStagePerformanceStandaloneInsights(const QList<OAIStagePerformanceStandaloneInsight> &stage_performance_standalone_insights) {
    m_stage_performance_standalone_insights = stage_performance_standalone_insights;
    m_stage_performance_standalone_insights_isSet = true;
}

bool OAIPerformanceInsights::is_stage_performance_standalone_insights_Set() const{
    return m_stage_performance_standalone_insights_isSet;
}

bool OAIPerformanceInsights::is_stage_performance_standalone_insights_Valid() const{
    return m_stage_performance_standalone_insights_isValid;
}

bool OAIPerformanceInsights::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avg_previous_execution_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_performance_change_insights.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_stage_performance_standalone_insights.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPerformanceInsights::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
