/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBigtableColumnFamily.h
 *
 * Information related to a Bigtable column family.
 */

#ifndef OAIBigtableColumnFamily_H
#define OAIBigtableColumnFamily_H

#include <QJsonObject>

#include "OAIBigtableColumn.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBigtableColumn;

class OAIBigtableColumnFamily : public OAIObject {
public:
    OAIBigtableColumnFamily();
    OAIBigtableColumnFamily(QString json);
    ~OAIBigtableColumnFamily() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBigtableColumn> getColumns() const;
    void setColumns(const QList<OAIBigtableColumn> &columns);
    bool is_columns_Set() const;
    bool is_columns_Valid() const;

    QString getEncoding() const;
    void setEncoding(const QString &encoding);
    bool is_encoding_Set() const;
    bool is_encoding_Valid() const;

    QString getFamilyId() const;
    void setFamilyId(const QString &family_id);
    bool is_family_id_Set() const;
    bool is_family_id_Valid() const;

    bool isOnlyReadLatest() const;
    void setOnlyReadLatest(const bool &only_read_latest);
    bool is_only_read_latest_Set() const;
    bool is_only_read_latest_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBigtableColumn> m_columns;
    bool m_columns_isSet;
    bool m_columns_isValid;

    QString m_encoding;
    bool m_encoding_isSet;
    bool m_encoding_isValid;

    QString m_family_id;
    bool m_family_id_isSet;
    bool m_family_id_isValid;

    bool m_only_read_latest;
    bool m_only_read_latest_isSet;
    bool m_only_read_latest_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBigtableColumnFamily)

#endif // OAIBigtableColumnFamily_H
