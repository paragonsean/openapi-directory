/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBqmlTrainingRun_trainingOptions.h
 *
 * Deprecated.
 */

#ifndef OAIBqmlTrainingRun_trainingOptions_H
#define OAIBqmlTrainingRun_trainingOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBqmlTrainingRun_trainingOptions : public OAIObject {
public:
    OAIBqmlTrainingRun_trainingOptions();
    OAIBqmlTrainingRun_trainingOptions(QString json);
    ~OAIBqmlTrainingRun_trainingOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEarlyStop() const;
    void setEarlyStop(const bool &early_stop);
    bool is_early_stop_Set() const;
    bool is_early_stop_Valid() const;

    double getL1Reg() const;
    void setL1Reg(const double &l1_reg);
    bool is_l1_reg_Set() const;
    bool is_l1_reg_Valid() const;

    double getL2Reg() const;
    void setL2Reg(const double &l2_reg);
    bool is_l2_reg_Set() const;
    bool is_l2_reg_Valid() const;

    double getLearnRate() const;
    void setLearnRate(const double &learn_rate);
    bool is_learn_rate_Set() const;
    bool is_learn_rate_Valid() const;

    QString getLearnRateStrategy() const;
    void setLearnRateStrategy(const QString &learn_rate_strategy);
    bool is_learn_rate_strategy_Set() const;
    bool is_learn_rate_strategy_Valid() const;

    double getLineSearchInitLearnRate() const;
    void setLineSearchInitLearnRate(const double &line_search_init_learn_rate);
    bool is_line_search_init_learn_rate_Set() const;
    bool is_line_search_init_learn_rate_Valid() const;

    QString getMaxIteration() const;
    void setMaxIteration(const QString &max_iteration);
    bool is_max_iteration_Set() const;
    bool is_max_iteration_Valid() const;

    double getMinRelProgress() const;
    void setMinRelProgress(const double &min_rel_progress);
    bool is_min_rel_progress_Set() const;
    bool is_min_rel_progress_Valid() const;

    bool isWarmStart() const;
    void setWarmStart(const bool &warm_start);
    bool is_warm_start_Set() const;
    bool is_warm_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_early_stop;
    bool m_early_stop_isSet;
    bool m_early_stop_isValid;

    double m_l1_reg;
    bool m_l1_reg_isSet;
    bool m_l1_reg_isValid;

    double m_l2_reg;
    bool m_l2_reg_isSet;
    bool m_l2_reg_isValid;

    double m_learn_rate;
    bool m_learn_rate_isSet;
    bool m_learn_rate_isValid;

    QString m_learn_rate_strategy;
    bool m_learn_rate_strategy_isSet;
    bool m_learn_rate_strategy_isValid;

    double m_line_search_init_learn_rate;
    bool m_line_search_init_learn_rate_isSet;
    bool m_line_search_init_learn_rate_isValid;

    QString m_max_iteration;
    bool m_max_iteration_isSet;
    bool m_max_iteration_isValid;

    double m_min_rel_progress;
    bool m_min_rel_progress_isSet;
    bool m_min_rel_progress_isValid;

    bool m_warm_start;
    bool m_warm_start_isSet;
    bool m_warm_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBqmlTrainingRun_trainingOptions)

#endif // OAIBqmlTrainingRun_trainingOptions_H
