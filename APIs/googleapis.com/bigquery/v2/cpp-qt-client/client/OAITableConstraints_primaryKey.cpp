/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableConstraints_primaryKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableConstraints_primaryKey::OAITableConstraints_primaryKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableConstraints_primaryKey::OAITableConstraints_primaryKey() {
    this->initializeModel();
}

OAITableConstraints_primaryKey::~OAITableConstraints_primaryKey() {}

void OAITableConstraints_primaryKey::initializeModel() {

    m_columns_isSet = false;
    m_columns_isValid = false;
}

void OAITableConstraints_primaryKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableConstraints_primaryKey::fromJsonObject(QJsonObject json) {

    m_columns_isValid = ::OpenAPI::fromJsonValue(m_columns, json[QString("columns")]);
    m_columns_isSet = !json[QString("columns")].isNull() && m_columns_isValid;
}

QString OAITableConstraints_primaryKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableConstraints_primaryKey::asJsonObject() const {
    QJsonObject obj;
    if (m_columns.size() > 0) {
        obj.insert(QString("columns"), ::OpenAPI::toJsonValue(m_columns));
    }
    return obj;
}

QList<QString> OAITableConstraints_primaryKey::getColumns() const {
    return m_columns;
}
void OAITableConstraints_primaryKey::setColumns(const QList<QString> &columns) {
    m_columns = columns;
    m_columns_isSet = true;
}

bool OAITableConstraints_primaryKey::is_columns_Set() const{
    return m_columns_isSet;
}

bool OAITableConstraints_primaryKey::is_columns_Valid() const{
    return m_columns_isValid;
}

bool OAITableConstraints_primaryKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableConstraints_primaryKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
