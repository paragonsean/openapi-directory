/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataMaskingStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataMaskingStatistics::OAIDataMaskingStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataMaskingStatistics::OAIDataMaskingStatistics() {
    this->initializeModel();
}

OAIDataMaskingStatistics::~OAIDataMaskingStatistics() {}

void OAIDataMaskingStatistics::initializeModel() {

    m_data_masking_applied_isSet = false;
    m_data_masking_applied_isValid = false;
}

void OAIDataMaskingStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataMaskingStatistics::fromJsonObject(QJsonObject json) {

    m_data_masking_applied_isValid = ::OpenAPI::fromJsonValue(m_data_masking_applied, json[QString("dataMaskingApplied")]);
    m_data_masking_applied_isSet = !json[QString("dataMaskingApplied")].isNull() && m_data_masking_applied_isValid;
}

QString OAIDataMaskingStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataMaskingStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_data_masking_applied_isSet) {
        obj.insert(QString("dataMaskingApplied"), ::OpenAPI::toJsonValue(m_data_masking_applied));
    }
    return obj;
}

bool OAIDataMaskingStatistics::isDataMaskingApplied() const {
    return m_data_masking_applied;
}
void OAIDataMaskingStatistics::setDataMaskingApplied(const bool &data_masking_applied) {
    m_data_masking_applied = data_masking_applied;
    m_data_masking_applied_isSet = true;
}

bool OAIDataMaskingStatistics::is_data_masking_applied_Set() const{
    return m_data_masking_applied_isSet;
}

bool OAIDataMaskingStatistics::is_data_masking_applied_Valid() const{
    return m_data_masking_applied_isValid;
}

bool OAIDataMaskingStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_masking_applied_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataMaskingStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
