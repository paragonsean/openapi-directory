/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITableMetadataCacheUsage.h
 *
 * Table level detail on the usage of metadata caching. Only set for Metadata caching eligible tables referenced in the query.
 */

#ifndef OAITableMetadataCacheUsage_H
#define OAITableMetadataCacheUsage_H

#include <QJsonObject>

#include "OAITableReference.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITableReference;

class OAITableMetadataCacheUsage : public OAIObject {
public:
    OAITableMetadataCacheUsage();
    OAITableMetadataCacheUsage(QString json);
    ~OAITableMetadataCacheUsage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExplanation() const;
    void setExplanation(const QString &explanation);
    bool is_explanation_Set() const;
    bool is_explanation_Valid() const;

    OAITableReference getTableReference() const;
    void setTableReference(const OAITableReference &table_reference);
    bool is_table_reference_Set() const;
    bool is_table_reference_Valid() const;

    QString getTableType() const;
    void setTableType(const QString &table_type);
    bool is_table_type_Set() const;
    bool is_table_type_Valid() const;

    QString getUnusedReason() const;
    void setUnusedReason(const QString &unused_reason);
    bool is_unused_reason_Set() const;
    bool is_unused_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_explanation;
    bool m_explanation_isSet;
    bool m_explanation_isValid;

    OAITableReference m_table_reference;
    bool m_table_reference_isSet;
    bool m_table_reference_isValid;

    QString m_table_type;
    bool m_table_type_isSet;
    bool m_table_type_isValid;

    QString m_unused_reason;
    bool m_unused_reason_isSet;
    bool m_unused_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITableMetadataCacheUsage)

#endif // OAITableMetadataCacheUsage_H
