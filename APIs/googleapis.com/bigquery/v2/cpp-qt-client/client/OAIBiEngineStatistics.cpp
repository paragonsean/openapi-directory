/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBiEngineStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBiEngineStatistics::OAIBiEngineStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBiEngineStatistics::OAIBiEngineStatistics() {
    this->initializeModel();
}

OAIBiEngineStatistics::~OAIBiEngineStatistics() {}

void OAIBiEngineStatistics::initializeModel() {

    m_acceleration_mode_isSet = false;
    m_acceleration_mode_isValid = false;

    m_bi_engine_mode_isSet = false;
    m_bi_engine_mode_isValid = false;

    m_bi_engine_reasons_isSet = false;
    m_bi_engine_reasons_isValid = false;
}

void OAIBiEngineStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBiEngineStatistics::fromJsonObject(QJsonObject json) {

    m_acceleration_mode_isValid = ::OpenAPI::fromJsonValue(m_acceleration_mode, json[QString("accelerationMode")]);
    m_acceleration_mode_isSet = !json[QString("accelerationMode")].isNull() && m_acceleration_mode_isValid;

    m_bi_engine_mode_isValid = ::OpenAPI::fromJsonValue(m_bi_engine_mode, json[QString("biEngineMode")]);
    m_bi_engine_mode_isSet = !json[QString("biEngineMode")].isNull() && m_bi_engine_mode_isValid;

    m_bi_engine_reasons_isValid = ::OpenAPI::fromJsonValue(m_bi_engine_reasons, json[QString("biEngineReasons")]);
    m_bi_engine_reasons_isSet = !json[QString("biEngineReasons")].isNull() && m_bi_engine_reasons_isValid;
}

QString OAIBiEngineStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBiEngineStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_acceleration_mode_isSet) {
        obj.insert(QString("accelerationMode"), ::OpenAPI::toJsonValue(m_acceleration_mode));
    }
    if (m_bi_engine_mode_isSet) {
        obj.insert(QString("biEngineMode"), ::OpenAPI::toJsonValue(m_bi_engine_mode));
    }
    if (m_bi_engine_reasons.size() > 0) {
        obj.insert(QString("biEngineReasons"), ::OpenAPI::toJsonValue(m_bi_engine_reasons));
    }
    return obj;
}

QString OAIBiEngineStatistics::getAccelerationMode() const {
    return m_acceleration_mode;
}
void OAIBiEngineStatistics::setAccelerationMode(const QString &acceleration_mode) {
    m_acceleration_mode = acceleration_mode;
    m_acceleration_mode_isSet = true;
}

bool OAIBiEngineStatistics::is_acceleration_mode_Set() const{
    return m_acceleration_mode_isSet;
}

bool OAIBiEngineStatistics::is_acceleration_mode_Valid() const{
    return m_acceleration_mode_isValid;
}

QString OAIBiEngineStatistics::getBiEngineMode() const {
    return m_bi_engine_mode;
}
void OAIBiEngineStatistics::setBiEngineMode(const QString &bi_engine_mode) {
    m_bi_engine_mode = bi_engine_mode;
    m_bi_engine_mode_isSet = true;
}

bool OAIBiEngineStatistics::is_bi_engine_mode_Set() const{
    return m_bi_engine_mode_isSet;
}

bool OAIBiEngineStatistics::is_bi_engine_mode_Valid() const{
    return m_bi_engine_mode_isValid;
}

QList<OAIBiEngineReason> OAIBiEngineStatistics::getBiEngineReasons() const {
    return m_bi_engine_reasons;
}
void OAIBiEngineStatistics::setBiEngineReasons(const QList<OAIBiEngineReason> &bi_engine_reasons) {
    m_bi_engine_reasons = bi_engine_reasons;
    m_bi_engine_reasons_isSet = true;
}

bool OAIBiEngineStatistics::is_bi_engine_reasons_Set() const{
    return m_bi_engine_reasons_isSet;
}

bool OAIBiEngineStatistics::is_bi_engine_reasons_Valid() const{
    return m_bi_engine_reasons_isValid;
}

bool OAIBiEngineStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_acceleration_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bi_engine_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bi_engine_reasons.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBiEngineStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
