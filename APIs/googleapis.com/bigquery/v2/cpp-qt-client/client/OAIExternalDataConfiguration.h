/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExternalDataConfiguration.h
 *
 * 
 */

#ifndef OAIExternalDataConfiguration_H
#define OAIExternalDataConfiguration_H

#include <QJsonObject>

#include "OAIAvroOptions.h"
#include "OAIBigtableOptions.h"
#include "OAICsvOptions.h"
#include "OAIGoogleSheetsOptions.h"
#include "OAIHivePartitioningOptions.h"
#include "OAIJsonOptions.h"
#include "OAIParquetOptions.h"
#include "OAITableSchema.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAvroOptions;
class OAIBigtableOptions;
class OAICsvOptions;
class OAIGoogleSheetsOptions;
class OAIHivePartitioningOptions;
class OAIJsonOptions;
class OAIParquetOptions;
class OAITableSchema;

class OAIExternalDataConfiguration : public OAIObject {
public:
    OAIExternalDataConfiguration();
    OAIExternalDataConfiguration(QString json);
    ~OAIExternalDataConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutodetect() const;
    void setAutodetect(const bool &autodetect);
    bool is_autodetect_Set() const;
    bool is_autodetect_Valid() const;

    OAIAvroOptions getAvroOptions() const;
    void setAvroOptions(const OAIAvroOptions &avro_options);
    bool is_avro_options_Set() const;
    bool is_avro_options_Valid() const;

    OAIBigtableOptions getBigtableOptions() const;
    void setBigtableOptions(const OAIBigtableOptions &bigtable_options);
    bool is_bigtable_options_Set() const;
    bool is_bigtable_options_Valid() const;

    QString getCompression() const;
    void setCompression(const QString &compression);
    bool is_compression_Set() const;
    bool is_compression_Valid() const;

    QString getConnectionId() const;
    void setConnectionId(const QString &connection_id);
    bool is_connection_id_Set() const;
    bool is_connection_id_Valid() const;

    OAICsvOptions getCsvOptions() const;
    void setCsvOptions(const OAICsvOptions &csv_options);
    bool is_csv_options_Set() const;
    bool is_csv_options_Valid() const;

    QList<QString> getDecimalTargetTypes() const;
    void setDecimalTargetTypes(const QList<QString> &decimal_target_types);
    bool is_decimal_target_types_Set() const;
    bool is_decimal_target_types_Valid() const;

    QString getFileSetSpecType() const;
    void setFileSetSpecType(const QString &file_set_spec_type);
    bool is_file_set_spec_type_Set() const;
    bool is_file_set_spec_type_Valid() const;

    OAIGoogleSheetsOptions getGoogleSheetsOptions() const;
    void setGoogleSheetsOptions(const OAIGoogleSheetsOptions &google_sheets_options);
    bool is_google_sheets_options_Set() const;
    bool is_google_sheets_options_Valid() const;

    OAIHivePartitioningOptions getHivePartitioningOptions() const;
    void setHivePartitioningOptions(const OAIHivePartitioningOptions &hive_partitioning_options);
    bool is_hive_partitioning_options_Set() const;
    bool is_hive_partitioning_options_Valid() const;

    bool isIgnoreUnknownValues() const;
    void setIgnoreUnknownValues(const bool &ignore_unknown_values);
    bool is_ignore_unknown_values_Set() const;
    bool is_ignore_unknown_values_Valid() const;

    QString getJsonExtension() const;
    void setJsonExtension(const QString &json_extension);
    bool is_json_extension_Set() const;
    bool is_json_extension_Valid() const;

    OAIJsonOptions getJsonOptions() const;
    void setJsonOptions(const OAIJsonOptions &json_options);
    bool is_json_options_Set() const;
    bool is_json_options_Valid() const;

    qint32 getMaxBadRecords() const;
    void setMaxBadRecords(const qint32 &max_bad_records);
    bool is_max_bad_records_Set() const;
    bool is_max_bad_records_Valid() const;

    QString getMetadataCacheMode() const;
    void setMetadataCacheMode(const QString &metadata_cache_mode);
    bool is_metadata_cache_mode_Set() const;
    bool is_metadata_cache_mode_Valid() const;

    QString getObjectMetadata() const;
    void setObjectMetadata(const QString &object_metadata);
    bool is_object_metadata_Set() const;
    bool is_object_metadata_Valid() const;

    OAIParquetOptions getParquetOptions() const;
    void setParquetOptions(const OAIParquetOptions &parquet_options);
    bool is_parquet_options_Set() const;
    bool is_parquet_options_Valid() const;

    QString getReferenceFileSchemaUri() const;
    void setReferenceFileSchemaUri(const QString &reference_file_schema_uri);
    bool is_reference_file_schema_uri_Set() const;
    bool is_reference_file_schema_uri_Valid() const;

    OAITableSchema getSchema() const;
    void setSchema(const OAITableSchema &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    QString getSourceFormat() const;
    void setSourceFormat(const QString &source_format);
    bool is_source_format_Set() const;
    bool is_source_format_Valid() const;

    QList<QString> getSourceUris() const;
    void setSourceUris(const QList<QString> &source_uris);
    bool is_source_uris_Set() const;
    bool is_source_uris_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_autodetect;
    bool m_autodetect_isSet;
    bool m_autodetect_isValid;

    OAIAvroOptions m_avro_options;
    bool m_avro_options_isSet;
    bool m_avro_options_isValid;

    OAIBigtableOptions m_bigtable_options;
    bool m_bigtable_options_isSet;
    bool m_bigtable_options_isValid;

    QString m_compression;
    bool m_compression_isSet;
    bool m_compression_isValid;

    QString m_connection_id;
    bool m_connection_id_isSet;
    bool m_connection_id_isValid;

    OAICsvOptions m_csv_options;
    bool m_csv_options_isSet;
    bool m_csv_options_isValid;

    QList<QString> m_decimal_target_types;
    bool m_decimal_target_types_isSet;
    bool m_decimal_target_types_isValid;

    QString m_file_set_spec_type;
    bool m_file_set_spec_type_isSet;
    bool m_file_set_spec_type_isValid;

    OAIGoogleSheetsOptions m_google_sheets_options;
    bool m_google_sheets_options_isSet;
    bool m_google_sheets_options_isValid;

    OAIHivePartitioningOptions m_hive_partitioning_options;
    bool m_hive_partitioning_options_isSet;
    bool m_hive_partitioning_options_isValid;

    bool m_ignore_unknown_values;
    bool m_ignore_unknown_values_isSet;
    bool m_ignore_unknown_values_isValid;

    QString m_json_extension;
    bool m_json_extension_isSet;
    bool m_json_extension_isValid;

    OAIJsonOptions m_json_options;
    bool m_json_options_isSet;
    bool m_json_options_isValid;

    qint32 m_max_bad_records;
    bool m_max_bad_records_isSet;
    bool m_max_bad_records_isValid;

    QString m_metadata_cache_mode;
    bool m_metadata_cache_mode_isSet;
    bool m_metadata_cache_mode_isValid;

    QString m_object_metadata;
    bool m_object_metadata_isSet;
    bool m_object_metadata_isValid;

    OAIParquetOptions m_parquet_options;
    bool m_parquet_options_isSet;
    bool m_parquet_options_isValid;

    QString m_reference_file_schema_uri;
    bool m_reference_file_schema_uri_isSet;
    bool m_reference_file_schema_uri_isValid;

    OAITableSchema m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    QString m_source_format;
    bool m_source_format_isSet;
    bool m_source_format_isValid;

    QList<QString> m_source_uris;
    bool m_source_uris_isSet;
    bool m_source_uris_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExternalDataConfiguration)

#endif // OAIExternalDataConfiguration_H
