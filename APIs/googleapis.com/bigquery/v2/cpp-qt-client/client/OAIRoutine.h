/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoutine.h
 *
 * A user-defined function or a stored procedure.
 */

#ifndef OAIRoutine_H
#define OAIRoutine_H

#include <QJsonObject>

#include "OAIArgument.h"
#include "OAIRemoteFunctionOptions.h"
#include "OAIRoutineReference.h"
#include "OAISparkOptions.h"
#include "OAIStandardSqlDataType.h"
#include "OAIStandardSqlTableType.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArgument;
class OAIRemoteFunctionOptions;
class OAIStandardSqlTableType;
class OAIStandardSqlDataType;
class OAIRoutineReference;
class OAISparkOptions;

class OAIRoutine : public OAIObject {
public:
    OAIRoutine();
    OAIRoutine(QString json);
    ~OAIRoutine() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIArgument> getArguments() const;
    void setArguments(const QList<OAIArgument> &arguments);
    bool is_arguments_Set() const;
    bool is_arguments_Valid() const;

    QString getCreationTime() const;
    void setCreationTime(const QString &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getDataGovernanceType() const;
    void setDataGovernanceType(const QString &data_governance_type);
    bool is_data_governance_type_Set() const;
    bool is_data_governance_type_Valid() const;

    QString getDefinitionBody() const;
    void setDefinitionBody(const QString &definition_body);
    bool is_definition_body_Set() const;
    bool is_definition_body_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDeterminismLevel() const;
    void setDeterminismLevel(const QString &determinism_level);
    bool is_determinism_level_Set() const;
    bool is_determinism_level_Valid() const;

    QString getEtag() const;
    void setEtag(const QString &etag);
    bool is_etag_Set() const;
    bool is_etag_Valid() const;

    QList<QString> getImportedLibraries() const;
    void setImportedLibraries(const QList<QString> &imported_libraries);
    bool is_imported_libraries_Set() const;
    bool is_imported_libraries_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getLastModifiedTime() const;
    void setLastModifiedTime(const QString &last_modified_time);
    bool is_last_modified_time_Set() const;
    bool is_last_modified_time_Valid() const;

    OAIRemoteFunctionOptions getRemoteFunctionOptions() const;
    void setRemoteFunctionOptions(const OAIRemoteFunctionOptions &remote_function_options);
    bool is_remote_function_options_Set() const;
    bool is_remote_function_options_Valid() const;

    OAIStandardSqlTableType getReturnTableType() const;
    void setReturnTableType(const OAIStandardSqlTableType &return_table_type);
    bool is_return_table_type_Set() const;
    bool is_return_table_type_Valid() const;

    OAIStandardSqlDataType getReturnType() const;
    void setReturnType(const OAIStandardSqlDataType &return_type);
    bool is_return_type_Set() const;
    bool is_return_type_Valid() const;

    OAIRoutineReference getRoutineReference() const;
    void setRoutineReference(const OAIRoutineReference &routine_reference);
    bool is_routine_reference_Set() const;
    bool is_routine_reference_Valid() const;

    QString getRoutineType() const;
    void setRoutineType(const QString &routine_type);
    bool is_routine_type_Set() const;
    bool is_routine_type_Valid() const;

    QString getSecurityMode() const;
    void setSecurityMode(const QString &security_mode);
    bool is_security_mode_Set() const;
    bool is_security_mode_Valid() const;

    OAISparkOptions getSparkOptions() const;
    void setSparkOptions(const OAISparkOptions &spark_options);
    bool is_spark_options_Set() const;
    bool is_spark_options_Valid() const;

    bool isStrictMode() const;
    void setStrictMode(const bool &strict_mode);
    bool is_strict_mode_Set() const;
    bool is_strict_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIArgument> m_arguments;
    bool m_arguments_isSet;
    bool m_arguments_isValid;

    QString m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_data_governance_type;
    bool m_data_governance_type_isSet;
    bool m_data_governance_type_isValid;

    QString m_definition_body;
    bool m_definition_body_isSet;
    bool m_definition_body_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_determinism_level;
    bool m_determinism_level_isSet;
    bool m_determinism_level_isValid;

    QString m_etag;
    bool m_etag_isSet;
    bool m_etag_isValid;

    QList<QString> m_imported_libraries;
    bool m_imported_libraries_isSet;
    bool m_imported_libraries_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_last_modified_time;
    bool m_last_modified_time_isSet;
    bool m_last_modified_time_isValid;

    OAIRemoteFunctionOptions m_remote_function_options;
    bool m_remote_function_options_isSet;
    bool m_remote_function_options_isValid;

    OAIStandardSqlTableType m_return_table_type;
    bool m_return_table_type_isSet;
    bool m_return_table_type_isValid;

    OAIStandardSqlDataType m_return_type;
    bool m_return_type_isSet;
    bool m_return_type_isValid;

    OAIRoutineReference m_routine_reference;
    bool m_routine_reference_isSet;
    bool m_routine_reference_isValid;

    QString m_routine_type;
    bool m_routine_type_isSet;
    bool m_routine_type_isValid;

    QString m_security_mode;
    bool m_security_mode_isSet;
    bool m_security_mode_isValid;

    OAISparkOptions m_spark_options;
    bool m_spark_options_isSet;
    bool m_spark_options_isValid;

    bool m_strict_mode;
    bool m_strict_mode_isSet;
    bool m_strict_mode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoutine)

#endif // OAIRoutine_H
