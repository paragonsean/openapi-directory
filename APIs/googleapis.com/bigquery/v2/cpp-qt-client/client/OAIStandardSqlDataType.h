/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStandardSqlDataType.h
 *
 * The data type of a variable such as a function argument. Examples include: * INT64: &#x60;{\&quot;typeKind\&quot;: \&quot;INT64\&quot;}&#x60; * ARRAY: { \&quot;typeKind\&quot;: \&quot;ARRAY\&quot;, \&quot;arrayElementType\&quot;: {\&quot;typeKind\&quot;: \&quot;STRING\&quot;} } * STRUCT&gt;: { \&quot;typeKind\&quot;: \&quot;STRUCT\&quot;, \&quot;structType\&quot;: { \&quot;fields\&quot;: [ { \&quot;name\&quot;: \&quot;x\&quot;, \&quot;type\&quot;: {\&quot;typeKind\&quot;: \&quot;STRING\&quot;} }, { \&quot;name\&quot;: \&quot;y\&quot;, \&quot;type\&quot;: { \&quot;typeKind\&quot;: \&quot;ARRAY\&quot;, \&quot;arrayElementType\&quot;: {\&quot;typeKind\&quot;: \&quot;DATE\&quot;} } } ] } }
 */

#ifndef OAIStandardSqlDataType_H
#define OAIStandardSqlDataType_H

#include <QJsonObject>

#include "OAIStandardSqlStructType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStandardSqlStructType;

class OAIStandardSqlDataType : public OAIObject {
public:
    OAIStandardSqlDataType();
    OAIStandardSqlDataType(QString json);
    ~OAIStandardSqlDataType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStandardSqlDataType getArrayElementType() const;
    void setArrayElementType(const OAIStandardSqlDataType &array_element_type);
    bool is_array_element_type_Set() const;
    bool is_array_element_type_Valid() const;

    OAIStandardSqlDataType getRangeElementType() const;
    void setRangeElementType(const OAIStandardSqlDataType &range_element_type);
    bool is_range_element_type_Set() const;
    bool is_range_element_type_Valid() const;

    OAIStandardSqlStructType getStructType() const;
    void setStructType(const OAIStandardSqlStructType &struct_type);
    bool is_struct_type_Set() const;
    bool is_struct_type_Valid() const;

    QString getTypeKind() const;
    void setTypeKind(const QString &type_kind);
    bool is_type_kind_Set() const;
    bool is_type_kind_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStandardSqlDataType m_array_element_type;
    bool m_array_element_type_isSet;
    bool m_array_element_type_isValid;

    OAIStandardSqlDataType m_range_element_type;
    bool m_range_element_type_isSet;
    bool m_range_element_type_isValid;

    OAIStandardSqlStructType m_struct_type;
    bool m_struct_type_isSet;
    bool m_struct_type_isValid;

    QString m_type_kind;
    bool m_type_kind_isSet;
    bool m_type_kind_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStandardSqlDataType)

#endif // OAIStandardSqlDataType_H
