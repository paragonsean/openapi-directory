/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISparkOptions.h
 *
 * Options for a user-defined Spark routine.
 */

#ifndef OAISparkOptions_H
#define OAISparkOptions_H

#include <QJsonObject>

#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISparkOptions : public OAIObject {
public:
    OAISparkOptions();
    OAISparkOptions(QString json);
    ~OAISparkOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getArchiveUris() const;
    void setArchiveUris(const QList<QString> &archive_uris);
    bool is_archive_uris_Set() const;
    bool is_archive_uris_Valid() const;

    QString getConnection() const;
    void setConnection(const QString &connection);
    bool is_connection_Set() const;
    bool is_connection_Valid() const;

    QString getContainerImage() const;
    void setContainerImage(const QString &container_image);
    bool is_container_image_Set() const;
    bool is_container_image_Valid() const;

    QList<QString> getFileUris() const;
    void setFileUris(const QList<QString> &file_uris);
    bool is_file_uris_Set() const;
    bool is_file_uris_Valid() const;

    QList<QString> getJarUris() const;
    void setJarUris(const QList<QString> &jar_uris);
    bool is_jar_uris_Set() const;
    bool is_jar_uris_Valid() const;

    QString getMainClass() const;
    void setMainClass(const QString &main_class);
    bool is_main_class_Set() const;
    bool is_main_class_Valid() const;

    QString getMainFileUri() const;
    void setMainFileUri(const QString &main_file_uri);
    bool is_main_file_uri_Set() const;
    bool is_main_file_uri_Valid() const;

    QMap<QString, QString> getProperties() const;
    void setProperties(const QMap<QString, QString> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    QList<QString> getPyFileUris() const;
    void setPyFileUris(const QList<QString> &py_file_uris);
    bool is_py_file_uris_Set() const;
    bool is_py_file_uris_Valid() const;

    QString getRuntimeVersion() const;
    void setRuntimeVersion(const QString &runtime_version);
    bool is_runtime_version_Set() const;
    bool is_runtime_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_archive_uris;
    bool m_archive_uris_isSet;
    bool m_archive_uris_isValid;

    QString m_connection;
    bool m_connection_isSet;
    bool m_connection_isValid;

    QString m_container_image;
    bool m_container_image_isSet;
    bool m_container_image_isValid;

    QList<QString> m_file_uris;
    bool m_file_uris_isSet;
    bool m_file_uris_isValid;

    QList<QString> m_jar_uris;
    bool m_jar_uris_isSet;
    bool m_jar_uris_isValid;

    QString m_main_class;
    bool m_main_class_isSet;
    bool m_main_class_isValid;

    QString m_main_file_uri;
    bool m_main_file_uri_isSet;
    bool m_main_file_uri_isValid;

    QMap<QString, QString> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    QList<QString> m_py_file_uris;
    bool m_py_file_uris_isSet;
    bool m_py_file_uris_isValid;

    QString m_runtime_version;
    bool m_runtime_version_isSet;
    bool m_runtime_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISparkOptions)

#endif // OAISparkOptions_H
