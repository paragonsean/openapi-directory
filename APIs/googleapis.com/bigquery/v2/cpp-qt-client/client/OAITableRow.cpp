/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableRow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableRow::OAITableRow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableRow::OAITableRow() {
    this->initializeModel();
}

OAITableRow::~OAITableRow() {}

void OAITableRow::initializeModel() {

    m_f_isSet = false;
    m_f_isValid = false;
}

void OAITableRow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableRow::fromJsonObject(QJsonObject json) {

    m_f_isValid = ::OpenAPI::fromJsonValue(m_f, json[QString("f")]);
    m_f_isSet = !json[QString("f")].isNull() && m_f_isValid;
}

QString OAITableRow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableRow::asJsonObject() const {
    QJsonObject obj;
    if (m_f.size() > 0) {
        obj.insert(QString("f"), ::OpenAPI::toJsonValue(m_f));
    }
    return obj;
}

QList<OAITableCell> OAITableRow::getF() const {
    return m_f;
}
void OAITableRow::setF(const QList<OAITableCell> &f) {
    m_f = f;
    m_f_isSet = true;
}

bool OAITableRow::is_f_Set() const{
    return m_f_isSet;
}

bool OAITableRow::is_f_Valid() const{
    return m_f_isValid;
}

bool OAITableRow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_f.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableRow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
