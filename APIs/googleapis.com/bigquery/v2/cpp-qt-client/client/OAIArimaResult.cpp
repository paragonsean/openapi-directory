/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArimaResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArimaResult::OAIArimaResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArimaResult::OAIArimaResult() {
    this->initializeModel();
}

OAIArimaResult::~OAIArimaResult() {}

void OAIArimaResult::initializeModel() {

    m_arima_model_info_isSet = false;
    m_arima_model_info_isValid = false;

    m_seasonal_periods_isSet = false;
    m_seasonal_periods_isValid = false;
}

void OAIArimaResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArimaResult::fromJsonObject(QJsonObject json) {

    m_arima_model_info_isValid = ::OpenAPI::fromJsonValue(m_arima_model_info, json[QString("arimaModelInfo")]);
    m_arima_model_info_isSet = !json[QString("arimaModelInfo")].isNull() && m_arima_model_info_isValid;

    m_seasonal_periods_isValid = ::OpenAPI::fromJsonValue(m_seasonal_periods, json[QString("seasonalPeriods")]);
    m_seasonal_periods_isSet = !json[QString("seasonalPeriods")].isNull() && m_seasonal_periods_isValid;
}

QString OAIArimaResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArimaResult::asJsonObject() const {
    QJsonObject obj;
    if (m_arima_model_info.size() > 0) {
        obj.insert(QString("arimaModelInfo"), ::OpenAPI::toJsonValue(m_arima_model_info));
    }
    if (m_seasonal_periods.size() > 0) {
        obj.insert(QString("seasonalPeriods"), ::OpenAPI::toJsonValue(m_seasonal_periods));
    }
    return obj;
}

QList<OAIArimaModelInfo> OAIArimaResult::getArimaModelInfo() const {
    return m_arima_model_info;
}
void OAIArimaResult::setArimaModelInfo(const QList<OAIArimaModelInfo> &arima_model_info) {
    m_arima_model_info = arima_model_info;
    m_arima_model_info_isSet = true;
}

bool OAIArimaResult::is_arima_model_info_Set() const{
    return m_arima_model_info_isSet;
}

bool OAIArimaResult::is_arima_model_info_Valid() const{
    return m_arima_model_info_isValid;
}

QList<QString> OAIArimaResult::getSeasonalPeriods() const {
    return m_seasonal_periods;
}
void OAIArimaResult::setSeasonalPeriods(const QList<QString> &seasonal_periods) {
    m_seasonal_periods = seasonal_periods;
    m_seasonal_periods_isSet = true;
}

bool OAIArimaResult::is_seasonal_periods_Set() const{
    return m_seasonal_periods_isSet;
}

bool OAIArimaResult::is_seasonal_periods_Valid() const{
    return m_seasonal_periods_isValid;
}

bool OAIArimaResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_arima_model_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_seasonal_periods.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArimaResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
