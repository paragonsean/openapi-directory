/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrainingOptions.h
 *
 * Options used in model training.
 */

#ifndef OAITrainingOptions_H
#define OAITrainingOptions_H

#include <QJsonObject>

#include "OAIArimaOrder.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArimaOrder;

class OAITrainingOptions : public OAIObject {
public:
    OAITrainingOptions();
    OAITrainingOptions(QString json);
    ~OAITrainingOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActivationFn() const;
    void setActivationFn(const QString &activation_fn);
    bool is_activation_fn_Set() const;
    bool is_activation_fn_Valid() const;

    bool isAdjustStepChanges() const;
    void setAdjustStepChanges(const bool &adjust_step_changes);
    bool is_adjust_step_changes_Set() const;
    bool is_adjust_step_changes_Valid() const;

    bool isApproxGlobalFeatureContrib() const;
    void setApproxGlobalFeatureContrib(const bool &approx_global_feature_contrib);
    bool is_approx_global_feature_contrib_Set() const;
    bool is_approx_global_feature_contrib_Valid() const;

    bool isAutoArima() const;
    void setAutoArima(const bool &auto_arima);
    bool is_auto_arima_Set() const;
    bool is_auto_arima_Valid() const;

    QString getAutoArimaMaxOrder() const;
    void setAutoArimaMaxOrder(const QString &auto_arima_max_order);
    bool is_auto_arima_max_order_Set() const;
    bool is_auto_arima_max_order_Valid() const;

    QString getAutoArimaMinOrder() const;
    void setAutoArimaMinOrder(const QString &auto_arima_min_order);
    bool is_auto_arima_min_order_Set() const;
    bool is_auto_arima_min_order_Valid() const;

    bool isAutoClassWeights() const;
    void setAutoClassWeights(const bool &auto_class_weights);
    bool is_auto_class_weights_Set() const;
    bool is_auto_class_weights_Valid() const;

    QString getBatchSize() const;
    void setBatchSize(const QString &batch_size);
    bool is_batch_size_Set() const;
    bool is_batch_size_Valid() const;

    QString getBoosterType() const;
    void setBoosterType(const QString &booster_type);
    bool is_booster_type_Set() const;
    bool is_booster_type_Valid() const;

    double getBudgetHours() const;
    void setBudgetHours(const double &budget_hours);
    bool is_budget_hours_Set() const;
    bool is_budget_hours_Valid() const;

    bool isCalculatePValues() const;
    void setCalculatePValues(const bool &calculate_p_values);
    bool is_calculate_p_values_Set() const;
    bool is_calculate_p_values_Valid() const;

    QString getCategoryEncodingMethod() const;
    void setCategoryEncodingMethod(const QString &category_encoding_method);
    bool is_category_encoding_method_Set() const;
    bool is_category_encoding_method_Valid() const;

    bool isCleanSpikesAndDips() const;
    void setCleanSpikesAndDips(const bool &clean_spikes_and_dips);
    bool is_clean_spikes_and_dips_Set() const;
    bool is_clean_spikes_and_dips_Valid() const;

    QString getColorSpace() const;
    void setColorSpace(const QString &color_space);
    bool is_color_space_Set() const;
    bool is_color_space_Valid() const;

    double getColsampleBylevel() const;
    void setColsampleBylevel(const double &colsample_bylevel);
    bool is_colsample_bylevel_Set() const;
    bool is_colsample_bylevel_Valid() const;

    double getColsampleBynode() const;
    void setColsampleBynode(const double &colsample_bynode);
    bool is_colsample_bynode_Set() const;
    bool is_colsample_bynode_Valid() const;

    double getColsampleBytree() const;
    void setColsampleBytree(const double &colsample_bytree);
    bool is_colsample_bytree_Set() const;
    bool is_colsample_bytree_Valid() const;

    QString getDartNormalizeType() const;
    void setDartNormalizeType(const QString &dart_normalize_type);
    bool is_dart_normalize_type_Set() const;
    bool is_dart_normalize_type_Valid() const;

    QString getDataFrequency() const;
    void setDataFrequency(const QString &data_frequency);
    bool is_data_frequency_Set() const;
    bool is_data_frequency_Valid() const;

    QString getDataSplitColumn() const;
    void setDataSplitColumn(const QString &data_split_column);
    bool is_data_split_column_Set() const;
    bool is_data_split_column_Valid() const;

    double getDataSplitEvalFraction() const;
    void setDataSplitEvalFraction(const double &data_split_eval_fraction);
    bool is_data_split_eval_fraction_Set() const;
    bool is_data_split_eval_fraction_Valid() const;

    QString getDataSplitMethod() const;
    void setDataSplitMethod(const QString &data_split_method);
    bool is_data_split_method_Set() const;
    bool is_data_split_method_Valid() const;

    bool isDecomposeTimeSeries() const;
    void setDecomposeTimeSeries(const bool &decompose_time_series);
    bool is_decompose_time_series_Set() const;
    bool is_decompose_time_series_Valid() const;

    QString getDistanceType() const;
    void setDistanceType(const QString &distance_type);
    bool is_distance_type_Set() const;
    bool is_distance_type_Valid() const;

    double getDropout() const;
    void setDropout(const double &dropout);
    bool is_dropout_Set() const;
    bool is_dropout_Valid() const;

    bool isEarlyStop() const;
    void setEarlyStop(const bool &early_stop);
    bool is_early_stop_Set() const;
    bool is_early_stop_Valid() const;

    bool isEnableGlobalExplain() const;
    void setEnableGlobalExplain(const bool &enable_global_explain);
    bool is_enable_global_explain_Set() const;
    bool is_enable_global_explain_Valid() const;

    QString getFeedbackType() const;
    void setFeedbackType(const QString &feedback_type);
    bool is_feedback_type_Set() const;
    bool is_feedback_type_Valid() const;

    bool isFitIntercept() const;
    void setFitIntercept(const bool &fit_intercept);
    bool is_fit_intercept_Set() const;
    bool is_fit_intercept_Valid() const;

    QList<QString> getHiddenUnits() const;
    void setHiddenUnits(const QList<QString> &hidden_units);
    bool is_hidden_units_Set() const;
    bool is_hidden_units_Valid() const;

    QString getHolidayRegion() const;
    void setHolidayRegion(const QString &holiday_region);
    bool is_holiday_region_Set() const;
    bool is_holiday_region_Valid() const;

    QList<QString> getHolidayRegions() const;
    void setHolidayRegions(const QList<QString> &holiday_regions);
    bool is_holiday_regions_Set() const;
    bool is_holiday_regions_Valid() const;

    QString getHorizon() const;
    void setHorizon(const QString &horizon);
    bool is_horizon_Set() const;
    bool is_horizon_Valid() const;

    QList<QString> getHparamTuningObjectives() const;
    void setHparamTuningObjectives(const QList<QString> &hparam_tuning_objectives);
    bool is_hparam_tuning_objectives_Set() const;
    bool is_hparam_tuning_objectives_Valid() const;

    bool isIncludeDrift() const;
    void setIncludeDrift(const bool &include_drift);
    bool is_include_drift_Set() const;
    bool is_include_drift_Valid() const;

    double getInitialLearnRate() const;
    void setInitialLearnRate(const double &initial_learn_rate);
    bool is_initial_learn_rate_Set() const;
    bool is_initial_learn_rate_Valid() const;

    QList<QString> getInputLabelColumns() const;
    void setInputLabelColumns(const QList<QString> &input_label_columns);
    bool is_input_label_columns_Set() const;
    bool is_input_label_columns_Valid() const;

    QString getInstanceWeightColumn() const;
    void setInstanceWeightColumn(const QString &instance_weight_column);
    bool is_instance_weight_column_Set() const;
    bool is_instance_weight_column_Valid() const;

    QString getIntegratedGradientsNumSteps() const;
    void setIntegratedGradientsNumSteps(const QString &integrated_gradients_num_steps);
    bool is_integrated_gradients_num_steps_Set() const;
    bool is_integrated_gradients_num_steps_Valid() const;

    QString getItemColumn() const;
    void setItemColumn(const QString &item_column);
    bool is_item_column_Set() const;
    bool is_item_column_Valid() const;

    QString getKmeansInitializationColumn() const;
    void setKmeansInitializationColumn(const QString &kmeans_initialization_column);
    bool is_kmeans_initialization_column_Set() const;
    bool is_kmeans_initialization_column_Valid() const;

    QString getKmeansInitializationMethod() const;
    void setKmeansInitializationMethod(const QString &kmeans_initialization_method);
    bool is_kmeans_initialization_method_Set() const;
    bool is_kmeans_initialization_method_Valid() const;

    double getL1RegActivation() const;
    void setL1RegActivation(const double &l1_reg_activation);
    bool is_l1_reg_activation_Set() const;
    bool is_l1_reg_activation_Valid() const;

    double getL1Regularization() const;
    void setL1Regularization(const double &l1_regularization);
    bool is_l1_regularization_Set() const;
    bool is_l1_regularization_Valid() const;

    double getL2Regularization() const;
    void setL2Regularization(const double &l2_regularization);
    bool is_l2_regularization_Set() const;
    bool is_l2_regularization_Valid() const;

    QMap<QString, double> getLabelClassWeights() const;
    void setLabelClassWeights(const QMap<QString, double> &label_class_weights);
    bool is_label_class_weights_Set() const;
    bool is_label_class_weights_Valid() const;

    double getLearnRate() const;
    void setLearnRate(const double &learn_rate);
    bool is_learn_rate_Set() const;
    bool is_learn_rate_Valid() const;

    QString getLearnRateStrategy() const;
    void setLearnRateStrategy(const QString &learn_rate_strategy);
    bool is_learn_rate_strategy_Set() const;
    bool is_learn_rate_strategy_Valid() const;

    QString getLossType() const;
    void setLossType(const QString &loss_type);
    bool is_loss_type_Set() const;
    bool is_loss_type_Valid() const;

    QString getMaxIterations() const;
    void setMaxIterations(const QString &max_iterations);
    bool is_max_iterations_Set() const;
    bool is_max_iterations_Valid() const;

    QString getMaxParallelTrials() const;
    void setMaxParallelTrials(const QString &max_parallel_trials);
    bool is_max_parallel_trials_Set() const;
    bool is_max_parallel_trials_Valid() const;

    QString getMaxTimeSeriesLength() const;
    void setMaxTimeSeriesLength(const QString &max_time_series_length);
    bool is_max_time_series_length_Set() const;
    bool is_max_time_series_length_Valid() const;

    QString getMaxTreeDepth() const;
    void setMaxTreeDepth(const QString &max_tree_depth);
    bool is_max_tree_depth_Set() const;
    bool is_max_tree_depth_Valid() const;

    double getMinRelativeProgress() const;
    void setMinRelativeProgress(const double &min_relative_progress);
    bool is_min_relative_progress_Set() const;
    bool is_min_relative_progress_Valid() const;

    double getMinSplitLoss() const;
    void setMinSplitLoss(const double &min_split_loss);
    bool is_min_split_loss_Set() const;
    bool is_min_split_loss_Valid() const;

    QString getMinTimeSeriesLength() const;
    void setMinTimeSeriesLength(const QString &min_time_series_length);
    bool is_min_time_series_length_Set() const;
    bool is_min_time_series_length_Valid() const;

    QString getMinTreeChildWeight() const;
    void setMinTreeChildWeight(const QString &min_tree_child_weight);
    bool is_min_tree_child_weight_Set() const;
    bool is_min_tree_child_weight_Valid() const;

    QString getModelRegistry() const;
    void setModelRegistry(const QString &model_registry);
    bool is_model_registry_Set() const;
    bool is_model_registry_Valid() const;

    QString getModelUri() const;
    void setModelUri(const QString &model_uri);
    bool is_model_uri_Set() const;
    bool is_model_uri_Valid() const;

    OAIArimaOrder getNonSeasonalOrder() const;
    void setNonSeasonalOrder(const OAIArimaOrder &non_seasonal_order);
    bool is_non_seasonal_order_Set() const;
    bool is_non_seasonal_order_Valid() const;

    QString getNumClusters() const;
    void setNumClusters(const QString &num_clusters);
    bool is_num_clusters_Set() const;
    bool is_num_clusters_Valid() const;

    QString getNumFactors() const;
    void setNumFactors(const QString &num_factors);
    bool is_num_factors_Set() const;
    bool is_num_factors_Valid() const;

    QString getNumParallelTree() const;
    void setNumParallelTree(const QString &num_parallel_tree);
    bool is_num_parallel_tree_Set() const;
    bool is_num_parallel_tree_Valid() const;

    QString getNumPrincipalComponents() const;
    void setNumPrincipalComponents(const QString &num_principal_components);
    bool is_num_principal_components_Set() const;
    bool is_num_principal_components_Valid() const;

    QString getNumTrials() const;
    void setNumTrials(const QString &num_trials);
    bool is_num_trials_Set() const;
    bool is_num_trials_Valid() const;

    QString getOptimizationStrategy() const;
    void setOptimizationStrategy(const QString &optimization_strategy);
    bool is_optimization_strategy_Set() const;
    bool is_optimization_strategy_Valid() const;

    QString getOptimizer() const;
    void setOptimizer(const QString &optimizer);
    bool is_optimizer_Set() const;
    bool is_optimizer_Valid() const;

    double getPcaExplainedVarianceRatio() const;
    void setPcaExplainedVarianceRatio(const double &pca_explained_variance_ratio);
    bool is_pca_explained_variance_ratio_Set() const;
    bool is_pca_explained_variance_ratio_Valid() const;

    QString getPcaSolver() const;
    void setPcaSolver(const QString &pca_solver);
    bool is_pca_solver_Set() const;
    bool is_pca_solver_Valid() const;

    QString getSampledShapleyNumPaths() const;
    void setSampledShapleyNumPaths(const QString &sampled_shapley_num_paths);
    bool is_sampled_shapley_num_paths_Set() const;
    bool is_sampled_shapley_num_paths_Valid() const;

    bool isScaleFeatures() const;
    void setScaleFeatures(const bool &scale_features);
    bool is_scale_features_Set() const;
    bool is_scale_features_Valid() const;

    bool isStandardizeFeatures() const;
    void setStandardizeFeatures(const bool &standardize_features);
    bool is_standardize_features_Set() const;
    bool is_standardize_features_Valid() const;

    double getSubsample() const;
    void setSubsample(const double &subsample);
    bool is_subsample_Set() const;
    bool is_subsample_Valid() const;

    QString getTfVersion() const;
    void setTfVersion(const QString &tf_version);
    bool is_tf_version_Set() const;
    bool is_tf_version_Valid() const;

    QString getTimeSeriesDataColumn() const;
    void setTimeSeriesDataColumn(const QString &time_series_data_column);
    bool is_time_series_data_column_Set() const;
    bool is_time_series_data_column_Valid() const;

    QString getTimeSeriesIdColumn() const;
    void setTimeSeriesIdColumn(const QString &time_series_id_column);
    bool is_time_series_id_column_Set() const;
    bool is_time_series_id_column_Valid() const;

    QList<QString> getTimeSeriesIdColumns() const;
    void setTimeSeriesIdColumns(const QList<QString> &time_series_id_columns);
    bool is_time_series_id_columns_Set() const;
    bool is_time_series_id_columns_Valid() const;

    double getTimeSeriesLengthFraction() const;
    void setTimeSeriesLengthFraction(const double &time_series_length_fraction);
    bool is_time_series_length_fraction_Set() const;
    bool is_time_series_length_fraction_Valid() const;

    QString getTimeSeriesTimestampColumn() const;
    void setTimeSeriesTimestampColumn(const QString &time_series_timestamp_column);
    bool is_time_series_timestamp_column_Set() const;
    bool is_time_series_timestamp_column_Valid() const;

    QString getTreeMethod() const;
    void setTreeMethod(const QString &tree_method);
    bool is_tree_method_Set() const;
    bool is_tree_method_Valid() const;

    QString getTrendSmoothingWindowSize() const;
    void setTrendSmoothingWindowSize(const QString &trend_smoothing_window_size);
    bool is_trend_smoothing_window_size_Set() const;
    bool is_trend_smoothing_window_size_Valid() const;

    QString getUserColumn() const;
    void setUserColumn(const QString &user_column);
    bool is_user_column_Set() const;
    bool is_user_column_Valid() const;

    QList<QString> getVertexAiModelVersionAliases() const;
    void setVertexAiModelVersionAliases(const QList<QString> &vertex_ai_model_version_aliases);
    bool is_vertex_ai_model_version_aliases_Set() const;
    bool is_vertex_ai_model_version_aliases_Valid() const;

    double getWalsAlpha() const;
    void setWalsAlpha(const double &wals_alpha);
    bool is_wals_alpha_Set() const;
    bool is_wals_alpha_Valid() const;

    bool isWarmStart() const;
    void setWarmStart(const bool &warm_start);
    bool is_warm_start_Set() const;
    bool is_warm_start_Valid() const;

    QString getXgboostVersion() const;
    void setXgboostVersion(const QString &xgboost_version);
    bool is_xgboost_version_Set() const;
    bool is_xgboost_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_activation_fn;
    bool m_activation_fn_isSet;
    bool m_activation_fn_isValid;

    bool m_adjust_step_changes;
    bool m_adjust_step_changes_isSet;
    bool m_adjust_step_changes_isValid;

    bool m_approx_global_feature_contrib;
    bool m_approx_global_feature_contrib_isSet;
    bool m_approx_global_feature_contrib_isValid;

    bool m_auto_arima;
    bool m_auto_arima_isSet;
    bool m_auto_arima_isValid;

    QString m_auto_arima_max_order;
    bool m_auto_arima_max_order_isSet;
    bool m_auto_arima_max_order_isValid;

    QString m_auto_arima_min_order;
    bool m_auto_arima_min_order_isSet;
    bool m_auto_arima_min_order_isValid;

    bool m_auto_class_weights;
    bool m_auto_class_weights_isSet;
    bool m_auto_class_weights_isValid;

    QString m_batch_size;
    bool m_batch_size_isSet;
    bool m_batch_size_isValid;

    QString m_booster_type;
    bool m_booster_type_isSet;
    bool m_booster_type_isValid;

    double m_budget_hours;
    bool m_budget_hours_isSet;
    bool m_budget_hours_isValid;

    bool m_calculate_p_values;
    bool m_calculate_p_values_isSet;
    bool m_calculate_p_values_isValid;

    QString m_category_encoding_method;
    bool m_category_encoding_method_isSet;
    bool m_category_encoding_method_isValid;

    bool m_clean_spikes_and_dips;
    bool m_clean_spikes_and_dips_isSet;
    bool m_clean_spikes_and_dips_isValid;

    QString m_color_space;
    bool m_color_space_isSet;
    bool m_color_space_isValid;

    double m_colsample_bylevel;
    bool m_colsample_bylevel_isSet;
    bool m_colsample_bylevel_isValid;

    double m_colsample_bynode;
    bool m_colsample_bynode_isSet;
    bool m_colsample_bynode_isValid;

    double m_colsample_bytree;
    bool m_colsample_bytree_isSet;
    bool m_colsample_bytree_isValid;

    QString m_dart_normalize_type;
    bool m_dart_normalize_type_isSet;
    bool m_dart_normalize_type_isValid;

    QString m_data_frequency;
    bool m_data_frequency_isSet;
    bool m_data_frequency_isValid;

    QString m_data_split_column;
    bool m_data_split_column_isSet;
    bool m_data_split_column_isValid;

    double m_data_split_eval_fraction;
    bool m_data_split_eval_fraction_isSet;
    bool m_data_split_eval_fraction_isValid;

    QString m_data_split_method;
    bool m_data_split_method_isSet;
    bool m_data_split_method_isValid;

    bool m_decompose_time_series;
    bool m_decompose_time_series_isSet;
    bool m_decompose_time_series_isValid;

    QString m_distance_type;
    bool m_distance_type_isSet;
    bool m_distance_type_isValid;

    double m_dropout;
    bool m_dropout_isSet;
    bool m_dropout_isValid;

    bool m_early_stop;
    bool m_early_stop_isSet;
    bool m_early_stop_isValid;

    bool m_enable_global_explain;
    bool m_enable_global_explain_isSet;
    bool m_enable_global_explain_isValid;

    QString m_feedback_type;
    bool m_feedback_type_isSet;
    bool m_feedback_type_isValid;

    bool m_fit_intercept;
    bool m_fit_intercept_isSet;
    bool m_fit_intercept_isValid;

    QList<QString> m_hidden_units;
    bool m_hidden_units_isSet;
    bool m_hidden_units_isValid;

    QString m_holiday_region;
    bool m_holiday_region_isSet;
    bool m_holiday_region_isValid;

    QList<QString> m_holiday_regions;
    bool m_holiday_regions_isSet;
    bool m_holiday_regions_isValid;

    QString m_horizon;
    bool m_horizon_isSet;
    bool m_horizon_isValid;

    QList<QString> m_hparam_tuning_objectives;
    bool m_hparam_tuning_objectives_isSet;
    bool m_hparam_tuning_objectives_isValid;

    bool m_include_drift;
    bool m_include_drift_isSet;
    bool m_include_drift_isValid;

    double m_initial_learn_rate;
    bool m_initial_learn_rate_isSet;
    bool m_initial_learn_rate_isValid;

    QList<QString> m_input_label_columns;
    bool m_input_label_columns_isSet;
    bool m_input_label_columns_isValid;

    QString m_instance_weight_column;
    bool m_instance_weight_column_isSet;
    bool m_instance_weight_column_isValid;

    QString m_integrated_gradients_num_steps;
    bool m_integrated_gradients_num_steps_isSet;
    bool m_integrated_gradients_num_steps_isValid;

    QString m_item_column;
    bool m_item_column_isSet;
    bool m_item_column_isValid;

    QString m_kmeans_initialization_column;
    bool m_kmeans_initialization_column_isSet;
    bool m_kmeans_initialization_column_isValid;

    QString m_kmeans_initialization_method;
    bool m_kmeans_initialization_method_isSet;
    bool m_kmeans_initialization_method_isValid;

    double m_l1_reg_activation;
    bool m_l1_reg_activation_isSet;
    bool m_l1_reg_activation_isValid;

    double m_l1_regularization;
    bool m_l1_regularization_isSet;
    bool m_l1_regularization_isValid;

    double m_l2_regularization;
    bool m_l2_regularization_isSet;
    bool m_l2_regularization_isValid;

    QMap<QString, double> m_label_class_weights;
    bool m_label_class_weights_isSet;
    bool m_label_class_weights_isValid;

    double m_learn_rate;
    bool m_learn_rate_isSet;
    bool m_learn_rate_isValid;

    QString m_learn_rate_strategy;
    bool m_learn_rate_strategy_isSet;
    bool m_learn_rate_strategy_isValid;

    QString m_loss_type;
    bool m_loss_type_isSet;
    bool m_loss_type_isValid;

    QString m_max_iterations;
    bool m_max_iterations_isSet;
    bool m_max_iterations_isValid;

    QString m_max_parallel_trials;
    bool m_max_parallel_trials_isSet;
    bool m_max_parallel_trials_isValid;

    QString m_max_time_series_length;
    bool m_max_time_series_length_isSet;
    bool m_max_time_series_length_isValid;

    QString m_max_tree_depth;
    bool m_max_tree_depth_isSet;
    bool m_max_tree_depth_isValid;

    double m_min_relative_progress;
    bool m_min_relative_progress_isSet;
    bool m_min_relative_progress_isValid;

    double m_min_split_loss;
    bool m_min_split_loss_isSet;
    bool m_min_split_loss_isValid;

    QString m_min_time_series_length;
    bool m_min_time_series_length_isSet;
    bool m_min_time_series_length_isValid;

    QString m_min_tree_child_weight;
    bool m_min_tree_child_weight_isSet;
    bool m_min_tree_child_weight_isValid;

    QString m_model_registry;
    bool m_model_registry_isSet;
    bool m_model_registry_isValid;

    QString m_model_uri;
    bool m_model_uri_isSet;
    bool m_model_uri_isValid;

    OAIArimaOrder m_non_seasonal_order;
    bool m_non_seasonal_order_isSet;
    bool m_non_seasonal_order_isValid;

    QString m_num_clusters;
    bool m_num_clusters_isSet;
    bool m_num_clusters_isValid;

    QString m_num_factors;
    bool m_num_factors_isSet;
    bool m_num_factors_isValid;

    QString m_num_parallel_tree;
    bool m_num_parallel_tree_isSet;
    bool m_num_parallel_tree_isValid;

    QString m_num_principal_components;
    bool m_num_principal_components_isSet;
    bool m_num_principal_components_isValid;

    QString m_num_trials;
    bool m_num_trials_isSet;
    bool m_num_trials_isValid;

    QString m_optimization_strategy;
    bool m_optimization_strategy_isSet;
    bool m_optimization_strategy_isValid;

    QString m_optimizer;
    bool m_optimizer_isSet;
    bool m_optimizer_isValid;

    double m_pca_explained_variance_ratio;
    bool m_pca_explained_variance_ratio_isSet;
    bool m_pca_explained_variance_ratio_isValid;

    QString m_pca_solver;
    bool m_pca_solver_isSet;
    bool m_pca_solver_isValid;

    QString m_sampled_shapley_num_paths;
    bool m_sampled_shapley_num_paths_isSet;
    bool m_sampled_shapley_num_paths_isValid;

    bool m_scale_features;
    bool m_scale_features_isSet;
    bool m_scale_features_isValid;

    bool m_standardize_features;
    bool m_standardize_features_isSet;
    bool m_standardize_features_isValid;

    double m_subsample;
    bool m_subsample_isSet;
    bool m_subsample_isValid;

    QString m_tf_version;
    bool m_tf_version_isSet;
    bool m_tf_version_isValid;

    QString m_time_series_data_column;
    bool m_time_series_data_column_isSet;
    bool m_time_series_data_column_isValid;

    QString m_time_series_id_column;
    bool m_time_series_id_column_isSet;
    bool m_time_series_id_column_isValid;

    QList<QString> m_time_series_id_columns;
    bool m_time_series_id_columns_isSet;
    bool m_time_series_id_columns_isValid;

    double m_time_series_length_fraction;
    bool m_time_series_length_fraction_isSet;
    bool m_time_series_length_fraction_isValid;

    QString m_time_series_timestamp_column;
    bool m_time_series_timestamp_column_isSet;
    bool m_time_series_timestamp_column_isValid;

    QString m_tree_method;
    bool m_tree_method_isSet;
    bool m_tree_method_isValid;

    QString m_trend_smoothing_window_size;
    bool m_trend_smoothing_window_size_isSet;
    bool m_trend_smoothing_window_size_isValid;

    QString m_user_column;
    bool m_user_column_isSet;
    bool m_user_column_isValid;

    QList<QString> m_vertex_ai_model_version_aliases;
    bool m_vertex_ai_model_version_aliases_isSet;
    bool m_vertex_ai_model_version_aliases_isValid;

    double m_wals_alpha;
    bool m_wals_alpha_isSet;
    bool m_wals_alpha_isValid;

    bool m_warm_start;
    bool m_warm_start_isSet;
    bool m_warm_start_isValid;

    QString m_xgboost_version;
    bool m_xgboost_version_isSet;
    bool m_xgboost_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrainingOptions)

#endif // OAITrainingOptions_H
