/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArimaSingleModelForecastingMetrics.h
 *
 * Model evaluation metrics for a single ARIMA forecasting model.
 */

#ifndef OAIArimaSingleModelForecastingMetrics_H
#define OAIArimaSingleModelForecastingMetrics_H

#include <QJsonObject>

#include "OAIArimaFittingMetrics.h"
#include "OAIArimaOrder.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArimaFittingMetrics;
class OAIArimaOrder;

class OAIArimaSingleModelForecastingMetrics : public OAIObject {
public:
    OAIArimaSingleModelForecastingMetrics();
    OAIArimaSingleModelForecastingMetrics(QString json);
    ~OAIArimaSingleModelForecastingMetrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIArimaFittingMetrics getArimaFittingMetrics() const;
    void setArimaFittingMetrics(const OAIArimaFittingMetrics &arima_fitting_metrics);
    bool is_arima_fitting_metrics_Set() const;
    bool is_arima_fitting_metrics_Valid() const;

    bool isHasDrift() const;
    void setHasDrift(const bool &has_drift);
    bool is_has_drift_Set() const;
    bool is_has_drift_Valid() const;

    bool isHasHolidayEffect() const;
    void setHasHolidayEffect(const bool &has_holiday_effect);
    bool is_has_holiday_effect_Set() const;
    bool is_has_holiday_effect_Valid() const;

    bool isHasSpikesAndDips() const;
    void setHasSpikesAndDips(const bool &has_spikes_and_dips);
    bool is_has_spikes_and_dips_Set() const;
    bool is_has_spikes_and_dips_Valid() const;

    bool isHasStepChanges() const;
    void setHasStepChanges(const bool &has_step_changes);
    bool is_has_step_changes_Set() const;
    bool is_has_step_changes_Valid() const;

    OAIArimaOrder getNonSeasonalOrder() const;
    void setNonSeasonalOrder(const OAIArimaOrder &non_seasonal_order);
    bool is_non_seasonal_order_Set() const;
    bool is_non_seasonal_order_Valid() const;

    QList<QString> getSeasonalPeriods() const;
    void setSeasonalPeriods(const QList<QString> &seasonal_periods);
    bool is_seasonal_periods_Set() const;
    bool is_seasonal_periods_Valid() const;

    QString getTimeSeriesId() const;
    void setTimeSeriesId(const QString &time_series_id);
    bool is_time_series_id_Set() const;
    bool is_time_series_id_Valid() const;

    QList<QString> getTimeSeriesIds() const;
    void setTimeSeriesIds(const QList<QString> &time_series_ids);
    bool is_time_series_ids_Set() const;
    bool is_time_series_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIArimaFittingMetrics m_arima_fitting_metrics;
    bool m_arima_fitting_metrics_isSet;
    bool m_arima_fitting_metrics_isValid;

    bool m_has_drift;
    bool m_has_drift_isSet;
    bool m_has_drift_isValid;

    bool m_has_holiday_effect;
    bool m_has_holiday_effect_isSet;
    bool m_has_holiday_effect_isValid;

    bool m_has_spikes_and_dips;
    bool m_has_spikes_and_dips_isSet;
    bool m_has_spikes_and_dips_isValid;

    bool m_has_step_changes;
    bool m_has_step_changes_isSet;
    bool m_has_step_changes_isValid;

    OAIArimaOrder m_non_seasonal_order;
    bool m_non_seasonal_order_isSet;
    bool m_non_seasonal_order_isValid;

    QList<QString> m_seasonal_periods;
    bool m_seasonal_periods_isSet;
    bool m_seasonal_periods_isValid;

    QString m_time_series_id;
    bool m_time_series_id_isSet;
    bool m_time_series_id_isValid;

    QList<QString> m_time_series_ids;
    bool m_time_series_ids_isSet;
    bool m_time_series_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArimaSingleModelForecastingMetrics)

#endif // OAIArimaSingleModelForecastingMetrics_H
