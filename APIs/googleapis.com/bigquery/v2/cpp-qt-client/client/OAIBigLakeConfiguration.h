/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBigLakeConfiguration.h
 *
 * Configuration for BigLake managed tables.
 */

#ifndef OAIBigLakeConfiguration_H
#define OAIBigLakeConfiguration_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBigLakeConfiguration : public OAIObject {
public:
    OAIBigLakeConfiguration();
    OAIBigLakeConfiguration(QString json);
    ~OAIBigLakeConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConnectionId() const;
    void setConnectionId(const QString &connection_id);
    bool is_connection_id_Set() const;
    bool is_connection_id_Valid() const;

    QString getFileFormat() const;
    void setFileFormat(const QString &file_format);
    bool is_file_format_Set() const;
    bool is_file_format_Valid() const;

    QString getStorageUri() const;
    void setStorageUri(const QString &storage_uri);
    bool is_storage_uri_Set() const;
    bool is_storage_uri_Valid() const;

    QString getTableFormat() const;
    void setTableFormat(const QString &table_format);
    bool is_table_format_Set() const;
    bool is_table_format_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_connection_id;
    bool m_connection_id_isSet;
    bool m_connection_id_isValid;

    QString m_file_format;
    bool m_file_format_isSet;
    bool m_file_format_isValid;

    QString m_storage_uri;
    bool m_storage_uri_isSet;
    bool m_storage_uri_isValid;

    QString m_table_format;
    bool m_table_format_isSet;
    bool m_table_format_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBigLakeConfiguration)

#endif // OAIBigLakeConfiguration_H
