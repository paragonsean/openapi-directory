/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArimaFittingMetrics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArimaFittingMetrics::OAIArimaFittingMetrics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArimaFittingMetrics::OAIArimaFittingMetrics() {
    this->initializeModel();
}

OAIArimaFittingMetrics::~OAIArimaFittingMetrics() {}

void OAIArimaFittingMetrics::initializeModel() {

    m_aic_isSet = false;
    m_aic_isValid = false;

    m_log_likelihood_isSet = false;
    m_log_likelihood_isValid = false;

    m_variance_isSet = false;
    m_variance_isValid = false;
}

void OAIArimaFittingMetrics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArimaFittingMetrics::fromJsonObject(QJsonObject json) {

    m_aic_isValid = ::OpenAPI::fromJsonValue(m_aic, json[QString("aic")]);
    m_aic_isSet = !json[QString("aic")].isNull() && m_aic_isValid;

    m_log_likelihood_isValid = ::OpenAPI::fromJsonValue(m_log_likelihood, json[QString("logLikelihood")]);
    m_log_likelihood_isSet = !json[QString("logLikelihood")].isNull() && m_log_likelihood_isValid;

    m_variance_isValid = ::OpenAPI::fromJsonValue(m_variance, json[QString("variance")]);
    m_variance_isSet = !json[QString("variance")].isNull() && m_variance_isValid;
}

QString OAIArimaFittingMetrics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArimaFittingMetrics::asJsonObject() const {
    QJsonObject obj;
    if (m_aic_isSet) {
        obj.insert(QString("aic"), ::OpenAPI::toJsonValue(m_aic));
    }
    if (m_log_likelihood_isSet) {
        obj.insert(QString("logLikelihood"), ::OpenAPI::toJsonValue(m_log_likelihood));
    }
    if (m_variance_isSet) {
        obj.insert(QString("variance"), ::OpenAPI::toJsonValue(m_variance));
    }
    return obj;
}

double OAIArimaFittingMetrics::getAic() const {
    return m_aic;
}
void OAIArimaFittingMetrics::setAic(const double &aic) {
    m_aic = aic;
    m_aic_isSet = true;
}

bool OAIArimaFittingMetrics::is_aic_Set() const{
    return m_aic_isSet;
}

bool OAIArimaFittingMetrics::is_aic_Valid() const{
    return m_aic_isValid;
}

double OAIArimaFittingMetrics::getLogLikelihood() const {
    return m_log_likelihood;
}
void OAIArimaFittingMetrics::setLogLikelihood(const double &log_likelihood) {
    m_log_likelihood = log_likelihood;
    m_log_likelihood_isSet = true;
}

bool OAIArimaFittingMetrics::is_log_likelihood_Set() const{
    return m_log_likelihood_isSet;
}

bool OAIArimaFittingMetrics::is_log_likelihood_Valid() const{
    return m_log_likelihood_isValid;
}

double OAIArimaFittingMetrics::getVariance() const {
    return m_variance;
}
void OAIArimaFittingMetrics::setVariance(const double &variance) {
    m_variance = variance;
    m_variance_isSet = true;
}

bool OAIArimaFittingMetrics::is_variance_Set() const{
    return m_variance_isSet;
}

bool OAIArimaFittingMetrics::is_variance_Valid() const{
    return m_variance_isValid;
}

bool OAIArimaFittingMetrics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aic_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_likelihood_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_variance_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArimaFittingMetrics::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
