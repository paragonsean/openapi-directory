/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrainingRun.h
 *
 * Information about a single training query run for the model.
 */

#ifndef OAITrainingRun_H
#define OAITrainingRun_H

#include <QJsonObject>

#include "OAIDataSplitResult.h"
#include "OAIEvaluationMetrics.h"
#include "OAIGlobalExplanation.h"
#include "OAIIterationResult.h"
#include "OAITrainingOptions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGlobalExplanation;
class OAIDataSplitResult;
class OAIEvaluationMetrics;
class OAIIterationResult;
class OAITrainingOptions;

class OAITrainingRun : public OAIObject {
public:
    OAITrainingRun();
    OAITrainingRun(QString json);
    ~OAITrainingRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIGlobalExplanation> getClassLevelGlobalExplanations() const;
    void setClassLevelGlobalExplanations(const QList<OAIGlobalExplanation> &class_level_global_explanations);
    bool is_class_level_global_explanations_Set() const;
    bool is_class_level_global_explanations_Valid() const;

    OAIDataSplitResult getDataSplitResult() const;
    void setDataSplitResult(const OAIDataSplitResult &data_split_result);
    bool is_data_split_result_Set() const;
    bool is_data_split_result_Valid() const;

    OAIEvaluationMetrics getEvaluationMetrics() const;
    void setEvaluationMetrics(const OAIEvaluationMetrics &evaluation_metrics);
    bool is_evaluation_metrics_Set() const;
    bool is_evaluation_metrics_Valid() const;

    OAIGlobalExplanation getModelLevelGlobalExplanation() const;
    void setModelLevelGlobalExplanation(const OAIGlobalExplanation &model_level_global_explanation);
    bool is_model_level_global_explanation_Set() const;
    bool is_model_level_global_explanation_Valid() const;

    QList<OAIIterationResult> getResults() const;
    void setResults(const QList<OAIIterationResult> &results);
    bool is_results_Set() const;
    bool is_results_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    OAITrainingOptions getTrainingOptions() const;
    void setTrainingOptions(const OAITrainingOptions &training_options);
    bool is_training_options_Set() const;
    bool is_training_options_Valid() const;

    Q_DECL_DEPRECATED QString getTrainingStartTime() const;
    Q_DECL_DEPRECATED void setTrainingStartTime(const QString &training_start_time);
    Q_DECL_DEPRECATED bool is_training_start_time_Set() const;
    Q_DECL_DEPRECATED bool is_training_start_time_Valid() const;

    QString getVertexAiModelId() const;
    void setVertexAiModelId(const QString &vertex_ai_model_id);
    bool is_vertex_ai_model_id_Set() const;
    bool is_vertex_ai_model_id_Valid() const;

    QString getVertexAiModelVersion() const;
    void setVertexAiModelVersion(const QString &vertex_ai_model_version);
    bool is_vertex_ai_model_version_Set() const;
    bool is_vertex_ai_model_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIGlobalExplanation> m_class_level_global_explanations;
    bool m_class_level_global_explanations_isSet;
    bool m_class_level_global_explanations_isValid;

    OAIDataSplitResult m_data_split_result;
    bool m_data_split_result_isSet;
    bool m_data_split_result_isValid;

    OAIEvaluationMetrics m_evaluation_metrics;
    bool m_evaluation_metrics_isSet;
    bool m_evaluation_metrics_isValid;

    OAIGlobalExplanation m_model_level_global_explanation;
    bool m_model_level_global_explanation_isSet;
    bool m_model_level_global_explanation_isValid;

    QList<OAIIterationResult> m_results;
    bool m_results_isSet;
    bool m_results_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    OAITrainingOptions m_training_options;
    bool m_training_options_isSet;
    bool m_training_options_isValid;

    QString m_training_start_time;
    bool m_training_start_time_isSet;
    bool m_training_start_time_isValid;

    QString m_vertex_ai_model_id;
    bool m_vertex_ai_model_id_isSet;
    bool m_vertex_ai_model_id_isValid;

    QString m_vertex_ai_model_version;
    bool m_vertex_ai_model_version_isSet;
    bool m_vertex_ai_model_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrainingRun)

#endif // OAITrainingRun_H
