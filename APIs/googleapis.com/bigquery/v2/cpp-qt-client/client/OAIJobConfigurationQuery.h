/**
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobConfigurationQuery.h
 *
 * JobConfigurationQuery configures a BigQuery query job.
 */

#ifndef OAIJobConfigurationQuery_H
#define OAIJobConfigurationQuery_H

#include <QJsonObject>

#include "OAIClustering.h"
#include "OAIConnectionProperty.h"
#include "OAIDatasetReference.h"
#include "OAIEncryptionConfiguration.h"
#include "OAIExternalDataConfiguration.h"
#include "OAIQueryParameter.h"
#include "OAIRangePartitioning.h"
#include "OAIScriptOptions.h"
#include "OAISystemVariables.h"
#include "OAITableReference.h"
#include "OAITimePartitioning.h"
#include "OAIUserDefinedFunctionResource.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClustering;
class OAIConnectionProperty;
class OAIDatasetReference;
class OAIEncryptionConfiguration;
class OAITableReference;
class OAIQueryParameter;
class OAIRangePartitioning;
class OAIScriptOptions;
class OAISystemVariables;
class OAIExternalDataConfiguration;
class OAITimePartitioning;
class OAIUserDefinedFunctionResource;

class OAIJobConfigurationQuery : public OAIObject {
public:
    OAIJobConfigurationQuery();
    OAIJobConfigurationQuery(QString json);
    ~OAIJobConfigurationQuery() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowLargeResults() const;
    void setAllowLargeResults(const bool &allow_large_results);
    bool is_allow_large_results_Set() const;
    bool is_allow_large_results_Valid() const;

    OAIClustering getClustering() const;
    void setClustering(const OAIClustering &clustering);
    bool is_clustering_Set() const;
    bool is_clustering_Valid() const;

    QList<OAIConnectionProperty> getConnectionProperties() const;
    void setConnectionProperties(const QList<OAIConnectionProperty> &connection_properties);
    bool is_connection_properties_Set() const;
    bool is_connection_properties_Valid() const;

    bool isContinuous() const;
    void setContinuous(const bool &continuous);
    bool is_continuous_Set() const;
    bool is_continuous_Valid() const;

    QString getCreateDisposition() const;
    void setCreateDisposition(const QString &create_disposition);
    bool is_create_disposition_Set() const;
    bool is_create_disposition_Valid() const;

    bool isCreateSession() const;
    void setCreateSession(const bool &create_session);
    bool is_create_session_Set() const;
    bool is_create_session_Valid() const;

    OAIDatasetReference getDefaultDataset() const;
    void setDefaultDataset(const OAIDatasetReference &default_dataset);
    bool is_default_dataset_Set() const;
    bool is_default_dataset_Valid() const;

    OAIEncryptionConfiguration getDestinationEncryptionConfiguration() const;
    void setDestinationEncryptionConfiguration(const OAIEncryptionConfiguration &destination_encryption_configuration);
    bool is_destination_encryption_configuration_Set() const;
    bool is_destination_encryption_configuration_Valid() const;

    OAITableReference getDestinationTable() const;
    void setDestinationTable(const OAITableReference &destination_table);
    bool is_destination_table_Set() const;
    bool is_destination_table_Valid() const;

    bool isFlattenResults() const;
    void setFlattenResults(const bool &flatten_results);
    bool is_flatten_results_Set() const;
    bool is_flatten_results_Valid() const;

    qint32 getMaximumBillingTier() const;
    void setMaximumBillingTier(const qint32 &maximum_billing_tier);
    bool is_maximum_billing_tier_Set() const;
    bool is_maximum_billing_tier_Valid() const;

    QString getMaximumBytesBilled() const;
    void setMaximumBytesBilled(const QString &maximum_bytes_billed);
    bool is_maximum_bytes_billed_Set() const;
    bool is_maximum_bytes_billed_Valid() const;

    QString getParameterMode() const;
    void setParameterMode(const QString &parameter_mode);
    bool is_parameter_mode_Set() const;
    bool is_parameter_mode_Valid() const;

    bool isPreserveNulls() const;
    void setPreserveNulls(const bool &preserve_nulls);
    bool is_preserve_nulls_Set() const;
    bool is_preserve_nulls_Valid() const;

    QString getPriority() const;
    void setPriority(const QString &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QList<OAIQueryParameter> getQueryParameters() const;
    void setQueryParameters(const QList<OAIQueryParameter> &query_parameters);
    bool is_query_parameters_Set() const;
    bool is_query_parameters_Valid() const;

    OAIRangePartitioning getRangePartitioning() const;
    void setRangePartitioning(const OAIRangePartitioning &range_partitioning);
    bool is_range_partitioning_Set() const;
    bool is_range_partitioning_Valid() const;

    QList<QString> getSchemaUpdateOptions() const;
    void setSchemaUpdateOptions(const QList<QString> &schema_update_options);
    bool is_schema_update_options_Set() const;
    bool is_schema_update_options_Valid() const;

    OAIScriptOptions getScriptOptions() const;
    void setScriptOptions(const OAIScriptOptions &script_options);
    bool is_script_options_Set() const;
    bool is_script_options_Valid() const;

    OAISystemVariables getSystemVariables() const;
    void setSystemVariables(const OAISystemVariables &system_variables);
    bool is_system_variables_Set() const;
    bool is_system_variables_Valid() const;

    QMap<QString, OAIExternalDataConfiguration> getTableDefinitions() const;
    void setTableDefinitions(const QMap<QString, OAIExternalDataConfiguration> &table_definitions);
    bool is_table_definitions_Set() const;
    bool is_table_definitions_Valid() const;

    OAITimePartitioning getTimePartitioning() const;
    void setTimePartitioning(const OAITimePartitioning &time_partitioning);
    bool is_time_partitioning_Set() const;
    bool is_time_partitioning_Valid() const;

    bool isUseLegacySql() const;
    void setUseLegacySql(const bool &use_legacy_sql);
    bool is_use_legacy_sql_Set() const;
    bool is_use_legacy_sql_Valid() const;

    bool isUseQueryCache() const;
    void setUseQueryCache(const bool &use_query_cache);
    bool is_use_query_cache_Set() const;
    bool is_use_query_cache_Valid() const;

    QList<OAIUserDefinedFunctionResource> getUserDefinedFunctionResources() const;
    void setUserDefinedFunctionResources(const QList<OAIUserDefinedFunctionResource> &user_defined_function_resources);
    bool is_user_defined_function_resources_Set() const;
    bool is_user_defined_function_resources_Valid() const;

    QString getWriteDisposition() const;
    void setWriteDisposition(const QString &write_disposition);
    bool is_write_disposition_Set() const;
    bool is_write_disposition_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_large_results;
    bool m_allow_large_results_isSet;
    bool m_allow_large_results_isValid;

    OAIClustering m_clustering;
    bool m_clustering_isSet;
    bool m_clustering_isValid;

    QList<OAIConnectionProperty> m_connection_properties;
    bool m_connection_properties_isSet;
    bool m_connection_properties_isValid;

    bool m_continuous;
    bool m_continuous_isSet;
    bool m_continuous_isValid;

    QString m_create_disposition;
    bool m_create_disposition_isSet;
    bool m_create_disposition_isValid;

    bool m_create_session;
    bool m_create_session_isSet;
    bool m_create_session_isValid;

    OAIDatasetReference m_default_dataset;
    bool m_default_dataset_isSet;
    bool m_default_dataset_isValid;

    OAIEncryptionConfiguration m_destination_encryption_configuration;
    bool m_destination_encryption_configuration_isSet;
    bool m_destination_encryption_configuration_isValid;

    OAITableReference m_destination_table;
    bool m_destination_table_isSet;
    bool m_destination_table_isValid;

    bool m_flatten_results;
    bool m_flatten_results_isSet;
    bool m_flatten_results_isValid;

    qint32 m_maximum_billing_tier;
    bool m_maximum_billing_tier_isSet;
    bool m_maximum_billing_tier_isValid;

    QString m_maximum_bytes_billed;
    bool m_maximum_bytes_billed_isSet;
    bool m_maximum_bytes_billed_isValid;

    QString m_parameter_mode;
    bool m_parameter_mode_isSet;
    bool m_parameter_mode_isValid;

    bool m_preserve_nulls;
    bool m_preserve_nulls_isSet;
    bool m_preserve_nulls_isValid;

    QString m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QList<OAIQueryParameter> m_query_parameters;
    bool m_query_parameters_isSet;
    bool m_query_parameters_isValid;

    OAIRangePartitioning m_range_partitioning;
    bool m_range_partitioning_isSet;
    bool m_range_partitioning_isValid;

    QList<QString> m_schema_update_options;
    bool m_schema_update_options_isSet;
    bool m_schema_update_options_isValid;

    OAIScriptOptions m_script_options;
    bool m_script_options_isSet;
    bool m_script_options_isValid;

    OAISystemVariables m_system_variables;
    bool m_system_variables_isSet;
    bool m_system_variables_isValid;

    QMap<QString, OAIExternalDataConfiguration> m_table_definitions;
    bool m_table_definitions_isSet;
    bool m_table_definitions_isValid;

    OAITimePartitioning m_time_partitioning;
    bool m_time_partitioning_isSet;
    bool m_time_partitioning_isValid;

    bool m_use_legacy_sql;
    bool m_use_legacy_sql_isSet;
    bool m_use_legacy_sql_isValid;

    bool m_use_query_cache;
    bool m_use_query_cache_isSet;
    bool m_use_query_cache_isValid;

    QList<OAIUserDefinedFunctionResource> m_user_defined_function_resources;
    bool m_user_defined_function_resources_isSet;
    bool m_user_defined_function_resources_isValid;

    QString m_write_disposition;
    bool m_write_disposition_isSet;
    bool m_write_disposition_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobConfigurationQuery)

#endif // OAIJobConfigurationQuery_H
