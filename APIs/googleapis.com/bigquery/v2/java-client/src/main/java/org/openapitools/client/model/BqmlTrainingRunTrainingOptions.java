/*
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Deprecated.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:43:22.147192-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BqmlTrainingRunTrainingOptions {
  public static final String SERIALIZED_NAME_EARLY_STOP = "earlyStop";
  @SerializedName(SERIALIZED_NAME_EARLY_STOP)
  private Boolean earlyStop;

  public static final String SERIALIZED_NAME_L1_REG = "l1Reg";
  @SerializedName(SERIALIZED_NAME_L1_REG)
  private Double l1Reg;

  public static final String SERIALIZED_NAME_L2_REG = "l2Reg";
  @SerializedName(SERIALIZED_NAME_L2_REG)
  private Double l2Reg;

  public static final String SERIALIZED_NAME_LEARN_RATE = "learnRate";
  @SerializedName(SERIALIZED_NAME_LEARN_RATE)
  private Double learnRate;

  public static final String SERIALIZED_NAME_LEARN_RATE_STRATEGY = "learnRateStrategy";
  @SerializedName(SERIALIZED_NAME_LEARN_RATE_STRATEGY)
  private String learnRateStrategy;

  public static final String SERIALIZED_NAME_LINE_SEARCH_INIT_LEARN_RATE = "lineSearchInitLearnRate";
  @SerializedName(SERIALIZED_NAME_LINE_SEARCH_INIT_LEARN_RATE)
  private Double lineSearchInitLearnRate;

  public static final String SERIALIZED_NAME_MAX_ITERATION = "maxIteration";
  @SerializedName(SERIALIZED_NAME_MAX_ITERATION)
  private String maxIteration;

  public static final String SERIALIZED_NAME_MIN_REL_PROGRESS = "minRelProgress";
  @SerializedName(SERIALIZED_NAME_MIN_REL_PROGRESS)
  private Double minRelProgress;

  public static final String SERIALIZED_NAME_WARM_START = "warmStart";
  @SerializedName(SERIALIZED_NAME_WARM_START)
  private Boolean warmStart;

  public BqmlTrainingRunTrainingOptions() {
  }

  public BqmlTrainingRunTrainingOptions earlyStop(Boolean earlyStop) {
    this.earlyStop = earlyStop;
    return this;
  }

  /**
   * Get earlyStop
   * @return earlyStop
   */
  @javax.annotation.Nullable
  public Boolean getEarlyStop() {
    return earlyStop;
  }

  public void setEarlyStop(Boolean earlyStop) {
    this.earlyStop = earlyStop;
  }


  public BqmlTrainingRunTrainingOptions l1Reg(Double l1Reg) {
    this.l1Reg = l1Reg;
    return this;
  }

  /**
   * Get l1Reg
   * @return l1Reg
   */
  @javax.annotation.Nullable
  public Double getL1Reg() {
    return l1Reg;
  }

  public void setL1Reg(Double l1Reg) {
    this.l1Reg = l1Reg;
  }


  public BqmlTrainingRunTrainingOptions l2Reg(Double l2Reg) {
    this.l2Reg = l2Reg;
    return this;
  }

  /**
   * Get l2Reg
   * @return l2Reg
   */
  @javax.annotation.Nullable
  public Double getL2Reg() {
    return l2Reg;
  }

  public void setL2Reg(Double l2Reg) {
    this.l2Reg = l2Reg;
  }


  public BqmlTrainingRunTrainingOptions learnRate(Double learnRate) {
    this.learnRate = learnRate;
    return this;
  }

  /**
   * Get learnRate
   * @return learnRate
   */
  @javax.annotation.Nullable
  public Double getLearnRate() {
    return learnRate;
  }

  public void setLearnRate(Double learnRate) {
    this.learnRate = learnRate;
  }


  public BqmlTrainingRunTrainingOptions learnRateStrategy(String learnRateStrategy) {
    this.learnRateStrategy = learnRateStrategy;
    return this;
  }

  /**
   * Get learnRateStrategy
   * @return learnRateStrategy
   */
  @javax.annotation.Nullable
  public String getLearnRateStrategy() {
    return learnRateStrategy;
  }

  public void setLearnRateStrategy(String learnRateStrategy) {
    this.learnRateStrategy = learnRateStrategy;
  }


  public BqmlTrainingRunTrainingOptions lineSearchInitLearnRate(Double lineSearchInitLearnRate) {
    this.lineSearchInitLearnRate = lineSearchInitLearnRate;
    return this;
  }

  /**
   * Get lineSearchInitLearnRate
   * @return lineSearchInitLearnRate
   */
  @javax.annotation.Nullable
  public Double getLineSearchInitLearnRate() {
    return lineSearchInitLearnRate;
  }

  public void setLineSearchInitLearnRate(Double lineSearchInitLearnRate) {
    this.lineSearchInitLearnRate = lineSearchInitLearnRate;
  }


  public BqmlTrainingRunTrainingOptions maxIteration(String maxIteration) {
    this.maxIteration = maxIteration;
    return this;
  }

  /**
   * Get maxIteration
   * @return maxIteration
   */
  @javax.annotation.Nullable
  public String getMaxIteration() {
    return maxIteration;
  }

  public void setMaxIteration(String maxIteration) {
    this.maxIteration = maxIteration;
  }


  public BqmlTrainingRunTrainingOptions minRelProgress(Double minRelProgress) {
    this.minRelProgress = minRelProgress;
    return this;
  }

  /**
   * Get minRelProgress
   * @return minRelProgress
   */
  @javax.annotation.Nullable
  public Double getMinRelProgress() {
    return minRelProgress;
  }

  public void setMinRelProgress(Double minRelProgress) {
    this.minRelProgress = minRelProgress;
  }


  public BqmlTrainingRunTrainingOptions warmStart(Boolean warmStart) {
    this.warmStart = warmStart;
    return this;
  }

  /**
   * Get warmStart
   * @return warmStart
   */
  @javax.annotation.Nullable
  public Boolean getWarmStart() {
    return warmStart;
  }

  public void setWarmStart(Boolean warmStart) {
    this.warmStart = warmStart;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BqmlTrainingRunTrainingOptions bqmlTrainingRunTrainingOptions = (BqmlTrainingRunTrainingOptions) o;
    return Objects.equals(this.earlyStop, bqmlTrainingRunTrainingOptions.earlyStop) &&
        Objects.equals(this.l1Reg, bqmlTrainingRunTrainingOptions.l1Reg) &&
        Objects.equals(this.l2Reg, bqmlTrainingRunTrainingOptions.l2Reg) &&
        Objects.equals(this.learnRate, bqmlTrainingRunTrainingOptions.learnRate) &&
        Objects.equals(this.learnRateStrategy, bqmlTrainingRunTrainingOptions.learnRateStrategy) &&
        Objects.equals(this.lineSearchInitLearnRate, bqmlTrainingRunTrainingOptions.lineSearchInitLearnRate) &&
        Objects.equals(this.maxIteration, bqmlTrainingRunTrainingOptions.maxIteration) &&
        Objects.equals(this.minRelProgress, bqmlTrainingRunTrainingOptions.minRelProgress) &&
        Objects.equals(this.warmStart, bqmlTrainingRunTrainingOptions.warmStart);
  }

  @Override
  public int hashCode() {
    return Objects.hash(earlyStop, l1Reg, l2Reg, learnRate, learnRateStrategy, lineSearchInitLearnRate, maxIteration, minRelProgress, warmStart);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BqmlTrainingRunTrainingOptions {\n");
    sb.append("    earlyStop: ").append(toIndentedString(earlyStop)).append("\n");
    sb.append("    l1Reg: ").append(toIndentedString(l1Reg)).append("\n");
    sb.append("    l2Reg: ").append(toIndentedString(l2Reg)).append("\n");
    sb.append("    learnRate: ").append(toIndentedString(learnRate)).append("\n");
    sb.append("    learnRateStrategy: ").append(toIndentedString(learnRateStrategy)).append("\n");
    sb.append("    lineSearchInitLearnRate: ").append(toIndentedString(lineSearchInitLearnRate)).append("\n");
    sb.append("    maxIteration: ").append(toIndentedString(maxIteration)).append("\n");
    sb.append("    minRelProgress: ").append(toIndentedString(minRelProgress)).append("\n");
    sb.append("    warmStart: ").append(toIndentedString(warmStart)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("earlyStop");
    openapiFields.add("l1Reg");
    openapiFields.add("l2Reg");
    openapiFields.add("learnRate");
    openapiFields.add("learnRateStrategy");
    openapiFields.add("lineSearchInitLearnRate");
    openapiFields.add("maxIteration");
    openapiFields.add("minRelProgress");
    openapiFields.add("warmStart");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BqmlTrainingRunTrainingOptions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BqmlTrainingRunTrainingOptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BqmlTrainingRunTrainingOptions is not found in the empty JSON string", BqmlTrainingRunTrainingOptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BqmlTrainingRunTrainingOptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BqmlTrainingRunTrainingOptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("learnRateStrategy") != null && !jsonObj.get("learnRateStrategy").isJsonNull()) && !jsonObj.get("learnRateStrategy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `learnRateStrategy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("learnRateStrategy").toString()));
      }
      if ((jsonObj.get("maxIteration") != null && !jsonObj.get("maxIteration").isJsonNull()) && !jsonObj.get("maxIteration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maxIteration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maxIteration").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BqmlTrainingRunTrainingOptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BqmlTrainingRunTrainingOptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BqmlTrainingRunTrainingOptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BqmlTrainingRunTrainingOptions.class));

       return (TypeAdapter<T>) new TypeAdapter<BqmlTrainingRunTrainingOptions>() {
           @Override
           public void write(JsonWriter out, BqmlTrainingRunTrainingOptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BqmlTrainingRunTrainingOptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BqmlTrainingRunTrainingOptions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BqmlTrainingRunTrainingOptions
   * @throws IOException if the JSON string is invalid with respect to BqmlTrainingRunTrainingOptions
   */
  public static BqmlTrainingRunTrainingOptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BqmlTrainingRunTrainingOptions.class);
  }

  /**
   * Convert an instance of BqmlTrainingRunTrainingOptions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

