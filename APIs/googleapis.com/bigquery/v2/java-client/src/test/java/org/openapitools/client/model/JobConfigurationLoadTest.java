/*
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Clustering;
import org.openapitools.client.model.ConnectionProperty;
import org.openapitools.client.model.DestinationTableProperties;
import org.openapitools.client.model.EncryptionConfiguration;
import org.openapitools.client.model.HivePartitioningOptions;
import org.openapitools.client.model.ParquetOptions;
import org.openapitools.client.model.RangePartitioning;
import org.openapitools.client.model.TableReference;
import org.openapitools.client.model.TableSchema;
import org.openapitools.client.model.TimePartitioning;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for JobConfigurationLoad
 */
public class JobConfigurationLoadTest {
    private final JobConfigurationLoad model = new JobConfigurationLoad();

    /**
     * Model tests for JobConfigurationLoad
     */
    @Test
    public void testJobConfigurationLoad() {
        // TODO: test JobConfigurationLoad
    }

    /**
     * Test the property 'allowJaggedRows'
     */
    @Test
    public void allowJaggedRowsTest() {
        // TODO: test allowJaggedRows
    }

    /**
     * Test the property 'allowQuotedNewlines'
     */
    @Test
    public void allowQuotedNewlinesTest() {
        // TODO: test allowQuotedNewlines
    }

    /**
     * Test the property 'autodetect'
     */
    @Test
    public void autodetectTest() {
        // TODO: test autodetect
    }

    /**
     * Test the property 'clustering'
     */
    @Test
    public void clusteringTest() {
        // TODO: test clustering
    }

    /**
     * Test the property 'connectionProperties'
     */
    @Test
    public void connectionPropertiesTest() {
        // TODO: test connectionProperties
    }

    /**
     * Test the property 'copyFilesOnly'
     */
    @Test
    public void copyFilesOnlyTest() {
        // TODO: test copyFilesOnly
    }

    /**
     * Test the property 'createDisposition'
     */
    @Test
    public void createDispositionTest() {
        // TODO: test createDisposition
    }

    /**
     * Test the property 'createSession'
     */
    @Test
    public void createSessionTest() {
        // TODO: test createSession
    }

    /**
     * Test the property 'decimalTargetTypes'
     */
    @Test
    public void decimalTargetTypesTest() {
        // TODO: test decimalTargetTypes
    }

    /**
     * Test the property 'destinationEncryptionConfiguration'
     */
    @Test
    public void destinationEncryptionConfigurationTest() {
        // TODO: test destinationEncryptionConfiguration
    }

    /**
     * Test the property 'destinationTable'
     */
    @Test
    public void destinationTableTest() {
        // TODO: test destinationTable
    }

    /**
     * Test the property 'destinationTableProperties'
     */
    @Test
    public void destinationTablePropertiesTest() {
        // TODO: test destinationTableProperties
    }

    /**
     * Test the property 'encoding'
     */
    @Test
    public void encodingTest() {
        // TODO: test encoding
    }

    /**
     * Test the property 'fieldDelimiter'
     */
    @Test
    public void fieldDelimiterTest() {
        // TODO: test fieldDelimiter
    }

    /**
     * Test the property 'fileSetSpecType'
     */
    @Test
    public void fileSetSpecTypeTest() {
        // TODO: test fileSetSpecType
    }

    /**
     * Test the property 'hivePartitioningOptions'
     */
    @Test
    public void hivePartitioningOptionsTest() {
        // TODO: test hivePartitioningOptions
    }

    /**
     * Test the property 'ignoreUnknownValues'
     */
    @Test
    public void ignoreUnknownValuesTest() {
        // TODO: test ignoreUnknownValues
    }

    /**
     * Test the property 'jsonExtension'
     */
    @Test
    public void jsonExtensionTest() {
        // TODO: test jsonExtension
    }

    /**
     * Test the property 'maxBadRecords'
     */
    @Test
    public void maxBadRecordsTest() {
        // TODO: test maxBadRecords
    }

    /**
     * Test the property 'nullMarker'
     */
    @Test
    public void nullMarkerTest() {
        // TODO: test nullMarker
    }

    /**
     * Test the property 'parquetOptions'
     */
    @Test
    public void parquetOptionsTest() {
        // TODO: test parquetOptions
    }

    /**
     * Test the property 'preserveAsciiControlCharacters'
     */
    @Test
    public void preserveAsciiControlCharactersTest() {
        // TODO: test preserveAsciiControlCharacters
    }

    /**
     * Test the property 'projectionFields'
     */
    @Test
    public void projectionFieldsTest() {
        // TODO: test projectionFields
    }

    /**
     * Test the property 'quote'
     */
    @Test
    public void quoteTest() {
        // TODO: test quote
    }

    /**
     * Test the property 'rangePartitioning'
     */
    @Test
    public void rangePartitioningTest() {
        // TODO: test rangePartitioning
    }

    /**
     * Test the property 'referenceFileSchemaUri'
     */
    @Test
    public void referenceFileSchemaUriTest() {
        // TODO: test referenceFileSchemaUri
    }

    /**
     * Test the property 'schema'
     */
    @Test
    public void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'schemaInline'
     */
    @Test
    public void schemaInlineTest() {
        // TODO: test schemaInline
    }

    /**
     * Test the property 'schemaInlineFormat'
     */
    @Test
    public void schemaInlineFormatTest() {
        // TODO: test schemaInlineFormat
    }

    /**
     * Test the property 'schemaUpdateOptions'
     */
    @Test
    public void schemaUpdateOptionsTest() {
        // TODO: test schemaUpdateOptions
    }

    /**
     * Test the property 'skipLeadingRows'
     */
    @Test
    public void skipLeadingRowsTest() {
        // TODO: test skipLeadingRows
    }

    /**
     * Test the property 'sourceFormat'
     */
    @Test
    public void sourceFormatTest() {
        // TODO: test sourceFormat
    }

    /**
     * Test the property 'sourceUris'
     */
    @Test
    public void sourceUrisTest() {
        // TODO: test sourceUris
    }

    /**
     * Test the property 'timePartitioning'
     */
    @Test
    public void timePartitioningTest() {
        // TODO: test timePartitioning
    }

    /**
     * Test the property 'useAvroLogicalTypes'
     */
    @Test
    public void useAvroLogicalTypesTest() {
        // TODO: test useAvroLogicalTypes
    }

    /**
     * Test the property 'writeDisposition'
     */
    @Test
    public void writeDispositionTest() {
        // TODO: test writeDisposition
    }

}
