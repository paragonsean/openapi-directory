/*
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListModelsResponse;
import org.openapitools.client.model.Model;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ModelsApi
 */
@Disabled
public class ModelsApiTest {

    private final ModelsApi api = new ModelsApi();

    /**
     * Deletes the model specified by modelId from the dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bigqueryModelsDeleteTest() throws ApiException {
        String projectId = null;
        String datasetId = null;
        String modelId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.bigqueryModelsDelete(projectId, datasetId, modelId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets the specified model resource by model ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bigqueryModelsGetTest() throws ApiException {
        String projectId = null;
        String datasetId = null;
        String modelId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Model response = api.bigqueryModelsGet(projectId, datasetId, modelId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Lists all models in the specified dataset. Requires the READER dataset role. After retrieving the list of models, you can get information about a particular model by calling the models.get method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bigqueryModelsListTest() throws ApiException {
        String projectId = null;
        String datasetId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Integer maxResults = null;
        String pageToken = null;
        ListModelsResponse response = api.bigqueryModelsList(projectId, datasetId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, maxResults, pageToken);
        // TODO: test validations
    }

    /**
     * Patch specific fields in the specified model.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bigqueryModelsPatchTest() throws ApiException {
        String projectId = null;
        String datasetId = null;
        String modelId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Model model = null;
        Model response = api.bigqueryModelsPatch(projectId, datasetId, modelId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, model);
        // TODO: test validations
    }

}
