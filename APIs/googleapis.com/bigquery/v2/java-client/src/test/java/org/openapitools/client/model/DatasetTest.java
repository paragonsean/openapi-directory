/*
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.DatasetAccessInner;
import org.openapitools.client.model.DatasetReference;
import org.openapitools.client.model.DatasetTagsInner;
import org.openapitools.client.model.EncryptionConfiguration;
import org.openapitools.client.model.ExternalDatasetReference;
import org.openapitools.client.model.LinkedDatasetSource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Dataset
 */
public class DatasetTest {
    private final Dataset model = new Dataset();

    /**
     * Model tests for Dataset
     */
    @Test
    public void testDataset() {
        // TODO: test Dataset
    }

    /**
     * Test the property 'access'
     */
    @Test
    public void accessTest() {
        // TODO: test access
    }

    /**
     * Test the property 'creationTime'
     */
    @Test
    public void creationTimeTest() {
        // TODO: test creationTime
    }

    /**
     * Test the property 'datasetReference'
     */
    @Test
    public void datasetReferenceTest() {
        // TODO: test datasetReference
    }

    /**
     * Test the property 'defaultCollation'
     */
    @Test
    public void defaultCollationTest() {
        // TODO: test defaultCollation
    }

    /**
     * Test the property 'defaultEncryptionConfiguration'
     */
    @Test
    public void defaultEncryptionConfigurationTest() {
        // TODO: test defaultEncryptionConfiguration
    }

    /**
     * Test the property 'defaultPartitionExpirationMs'
     */
    @Test
    public void defaultPartitionExpirationMsTest() {
        // TODO: test defaultPartitionExpirationMs
    }

    /**
     * Test the property 'defaultRoundingMode'
     */
    @Test
    public void defaultRoundingModeTest() {
        // TODO: test defaultRoundingMode
    }

    /**
     * Test the property 'defaultTableExpirationMs'
     */
    @Test
    public void defaultTableExpirationMsTest() {
        // TODO: test defaultTableExpirationMs
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'externalDatasetReference'
     */
    @Test
    public void externalDatasetReferenceTest() {
        // TODO: test externalDatasetReference
    }

    /**
     * Test the property 'friendlyName'
     */
    @Test
    public void friendlyNameTest() {
        // TODO: test friendlyName
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isCaseInsensitive'
     */
    @Test
    public void isCaseInsensitiveTest() {
        // TODO: test isCaseInsensitive
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

    /**
     * Test the property 'lastModifiedTime'
     */
    @Test
    public void lastModifiedTimeTest() {
        // TODO: test lastModifiedTime
    }

    /**
     * Test the property 'linkedDatasetSource'
     */
    @Test
    public void linkedDatasetSourceTest() {
        // TODO: test linkedDatasetSource
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'maxTimeTravelHours'
     */
    @Test
    public void maxTimeTravelHoursTest() {
        // TODO: test maxTimeTravelHours
    }

    /**
     * Test the property 'satisfiesPzi'
     */
    @Test
    public void satisfiesPziTest() {
        // TODO: test satisfiesPzi
    }

    /**
     * Test the property 'satisfiesPzs'
     */
    @Test
    public void satisfiesPzsTest() {
        // TODO: test satisfiesPzs
    }

    /**
     * Test the property 'selfLink'
     */
    @Test
    public void selfLinkTest() {
        // TODO: test selfLink
    }

    /**
     * Test the property 'storageBillingModel'
     */
    @Test
    public void storageBillingModelTest() {
        // TODO: test storageBillingModel
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
