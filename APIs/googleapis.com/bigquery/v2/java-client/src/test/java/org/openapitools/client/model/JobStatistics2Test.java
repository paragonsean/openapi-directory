/*
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.BiEngineStatistics;
import org.openapitools.client.model.BigQueryModelTraining;
import org.openapitools.client.model.DatasetReference;
import org.openapitools.client.model.DmlStatistics;
import org.openapitools.client.model.ExplainQueryStage;
import org.openapitools.client.model.ExportDataStatistics;
import org.openapitools.client.model.ExternalServiceCost;
import org.openapitools.client.model.JobStatisticsReservationUsageInner;
import org.openapitools.client.model.LoadQueryStatistics;
import org.openapitools.client.model.MaterializedViewStatistics;
import org.openapitools.client.model.MetadataCacheStatistics;
import org.openapitools.client.model.MlStatistics;
import org.openapitools.client.model.PerformanceInsights;
import org.openapitools.client.model.QueryInfo;
import org.openapitools.client.model.QueryParameter;
import org.openapitools.client.model.QueryTimelineSample;
import org.openapitools.client.model.RoutineReference;
import org.openapitools.client.model.RowAccessPolicyReference;
import org.openapitools.client.model.SearchStatistics;
import org.openapitools.client.model.SparkStatistics;
import org.openapitools.client.model.TableReference;
import org.openapitools.client.model.TableSchema;
import org.openapitools.client.model.VectorSearchStatistics;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for JobStatistics2
 */
public class JobStatistics2Test {
    private final JobStatistics2 model = new JobStatistics2();

    /**
     * Model tests for JobStatistics2
     */
    @Test
    public void testJobStatistics2() {
        // TODO: test JobStatistics2
    }

    /**
     * Test the property 'biEngineStatistics'
     */
    @Test
    public void biEngineStatisticsTest() {
        // TODO: test biEngineStatistics
    }

    /**
     * Test the property 'billingTier'
     */
    @Test
    public void billingTierTest() {
        // TODO: test billingTier
    }

    /**
     * Test the property 'cacheHit'
     */
    @Test
    public void cacheHitTest() {
        // TODO: test cacheHit
    }

    /**
     * Test the property 'dclTargetDataset'
     */
    @Test
    public void dclTargetDatasetTest() {
        // TODO: test dclTargetDataset
    }

    /**
     * Test the property 'dclTargetTable'
     */
    @Test
    public void dclTargetTableTest() {
        // TODO: test dclTargetTable
    }

    /**
     * Test the property 'dclTargetView'
     */
    @Test
    public void dclTargetViewTest() {
        // TODO: test dclTargetView
    }

    /**
     * Test the property 'ddlAffectedRowAccessPolicyCount'
     */
    @Test
    public void ddlAffectedRowAccessPolicyCountTest() {
        // TODO: test ddlAffectedRowAccessPolicyCount
    }

    /**
     * Test the property 'ddlDestinationTable'
     */
    @Test
    public void ddlDestinationTableTest() {
        // TODO: test ddlDestinationTable
    }

    /**
     * Test the property 'ddlOperationPerformed'
     */
    @Test
    public void ddlOperationPerformedTest() {
        // TODO: test ddlOperationPerformed
    }

    /**
     * Test the property 'ddlTargetDataset'
     */
    @Test
    public void ddlTargetDatasetTest() {
        // TODO: test ddlTargetDataset
    }

    /**
     * Test the property 'ddlTargetRoutine'
     */
    @Test
    public void ddlTargetRoutineTest() {
        // TODO: test ddlTargetRoutine
    }

    /**
     * Test the property 'ddlTargetRowAccessPolicy'
     */
    @Test
    public void ddlTargetRowAccessPolicyTest() {
        // TODO: test ddlTargetRowAccessPolicy
    }

    /**
     * Test the property 'ddlTargetTable'
     */
    @Test
    public void ddlTargetTableTest() {
        // TODO: test ddlTargetTable
    }

    /**
     * Test the property 'dmlStats'
     */
    @Test
    public void dmlStatsTest() {
        // TODO: test dmlStats
    }

    /**
     * Test the property 'estimatedBytesProcessed'
     */
    @Test
    public void estimatedBytesProcessedTest() {
        // TODO: test estimatedBytesProcessed
    }

    /**
     * Test the property 'exportDataStatistics'
     */
    @Test
    public void exportDataStatisticsTest() {
        // TODO: test exportDataStatistics
    }

    /**
     * Test the property 'externalServiceCosts'
     */
    @Test
    public void externalServiceCostsTest() {
        // TODO: test externalServiceCosts
    }

    /**
     * Test the property 'loadQueryStatistics'
     */
    @Test
    public void loadQueryStatisticsTest() {
        // TODO: test loadQueryStatistics
    }

    /**
     * Test the property 'materializedViewStatistics'
     */
    @Test
    public void materializedViewStatisticsTest() {
        // TODO: test materializedViewStatistics
    }

    /**
     * Test the property 'metadataCacheStatistics'
     */
    @Test
    public void metadataCacheStatisticsTest() {
        // TODO: test metadataCacheStatistics
    }

    /**
     * Test the property 'mlStatistics'
     */
    @Test
    public void mlStatisticsTest() {
        // TODO: test mlStatistics
    }

    /**
     * Test the property 'modelTraining'
     */
    @Test
    public void modelTrainingTest() {
        // TODO: test modelTraining
    }

    /**
     * Test the property 'modelTrainingCurrentIteration'
     */
    @Test
    public void modelTrainingCurrentIterationTest() {
        // TODO: test modelTrainingCurrentIteration
    }

    /**
     * Test the property 'modelTrainingExpectedTotalIteration'
     */
    @Test
    public void modelTrainingExpectedTotalIterationTest() {
        // TODO: test modelTrainingExpectedTotalIteration
    }

    /**
     * Test the property 'numDmlAffectedRows'
     */
    @Test
    public void numDmlAffectedRowsTest() {
        // TODO: test numDmlAffectedRows
    }

    /**
     * Test the property 'performanceInsights'
     */
    @Test
    public void performanceInsightsTest() {
        // TODO: test performanceInsights
    }

    /**
     * Test the property 'queryInfo'
     */
    @Test
    public void queryInfoTest() {
        // TODO: test queryInfo
    }

    /**
     * Test the property 'queryPlan'
     */
    @Test
    public void queryPlanTest() {
        // TODO: test queryPlan
    }

    /**
     * Test the property 'referencedRoutines'
     */
    @Test
    public void referencedRoutinesTest() {
        // TODO: test referencedRoutines
    }

    /**
     * Test the property 'referencedTables'
     */
    @Test
    public void referencedTablesTest() {
        // TODO: test referencedTables
    }

    /**
     * Test the property 'reservationUsage'
     */
    @Test
    public void reservationUsageTest() {
        // TODO: test reservationUsage
    }

    /**
     * Test the property 'schema'
     */
    @Test
    public void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'searchStatistics'
     */
    @Test
    public void searchStatisticsTest() {
        // TODO: test searchStatistics
    }

    /**
     * Test the property 'sparkStatistics'
     */
    @Test
    public void sparkStatisticsTest() {
        // TODO: test sparkStatistics
    }

    /**
     * Test the property 'statementType'
     */
    @Test
    public void statementTypeTest() {
        // TODO: test statementType
    }

    /**
     * Test the property 'timeline'
     */
    @Test
    public void timelineTest() {
        // TODO: test timeline
    }

    /**
     * Test the property 'totalBytesBilled'
     */
    @Test
    public void totalBytesBilledTest() {
        // TODO: test totalBytesBilled
    }

    /**
     * Test the property 'totalBytesProcessed'
     */
    @Test
    public void totalBytesProcessedTest() {
        // TODO: test totalBytesProcessed
    }

    /**
     * Test the property 'totalBytesProcessedAccuracy'
     */
    @Test
    public void totalBytesProcessedAccuracyTest() {
        // TODO: test totalBytesProcessedAccuracy
    }

    /**
     * Test the property 'totalPartitionsProcessed'
     */
    @Test
    public void totalPartitionsProcessedTest() {
        // TODO: test totalPartitionsProcessed
    }

    /**
     * Test the property 'totalSlotMs'
     */
    @Test
    public void totalSlotMsTest() {
        // TODO: test totalSlotMs
    }

    /**
     * Test the property 'transferredBytes'
     */
    @Test
    public void transferredBytesTest() {
        // TODO: test transferredBytes
    }

    /**
     * Test the property 'undeclaredQueryParameters'
     */
    @Test
    public void undeclaredQueryParametersTest() {
        // TODO: test undeclaredQueryParameters
    }

    /**
     * Test the property 'vectorSearchStatistics'
     */
    @Test
    public void vectorSearchStatisticsTest() {
        // TODO: test vectorSearchStatistics
    }

}
