/*
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.DataSplitResult;
import org.openapitools.client.model.EvaluationMetrics;
import org.openapitools.client.model.GlobalExplanation;
import org.openapitools.client.model.IterationResult;
import org.openapitools.client.model.TrainingOptions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TrainingRun
 */
public class TrainingRunTest {
    private final TrainingRun model = new TrainingRun();

    /**
     * Model tests for TrainingRun
     */
    @Test
    public void testTrainingRun() {
        // TODO: test TrainingRun
    }

    /**
     * Test the property 'classLevelGlobalExplanations'
     */
    @Test
    public void classLevelGlobalExplanationsTest() {
        // TODO: test classLevelGlobalExplanations
    }

    /**
     * Test the property 'dataSplitResult'
     */
    @Test
    public void dataSplitResultTest() {
        // TODO: test dataSplitResult
    }

    /**
     * Test the property 'evaluationMetrics'
     */
    @Test
    public void evaluationMetricsTest() {
        // TODO: test evaluationMetrics
    }

    /**
     * Test the property 'modelLevelGlobalExplanation'
     */
    @Test
    public void modelLevelGlobalExplanationTest() {
        // TODO: test modelLevelGlobalExplanation
    }

    /**
     * Test the property 'results'
     */
    @Test
    public void resultsTest() {
        // TODO: test results
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'trainingOptions'
     */
    @Test
    public void trainingOptionsTest() {
        // TODO: test trainingOptions
    }

    /**
     * Test the property 'trainingStartTime'
     */
    @Test
    public void trainingStartTimeTest() {
        // TODO: test trainingStartTime
    }

    /**
     * Test the property 'vertexAiModelId'
     */
    @Test
    public void vertexAiModelIdTest() {
        // TODO: test vertexAiModelId
    }

    /**
     * Test the property 'vertexAiModelVersion'
     */
    @Test
    public void vertexAiModelVersionTest() {
        // TODO: test vertexAiModelVersion
    }

}
