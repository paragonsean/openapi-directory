/*
 * BigQuery API
 * A data platform for customers to create, manage, share and query data.
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ListRoutinesResponse;
import org.openapitools.client.model.Routine;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RoutinesApi
 */
@Disabled
public class RoutinesApiTest {

    private final RoutinesApi api = new RoutinesApi();

    /**
     * Deletes the routine specified by routineId from the dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bigqueryRoutinesDeleteTest() throws ApiException {
        String projectId = null;
        String datasetId = null;
        String routineId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        api.bigqueryRoutinesDelete(projectId, datasetId, routineId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Gets the specified routine resource by routine ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bigqueryRoutinesGetTest() throws ApiException {
        String projectId = null;
        String datasetId = null;
        String routineId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String readMask = null;
        Routine response = api.bigqueryRoutinesGet(projectId, datasetId, routineId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, readMask);
        // TODO: test validations
    }

    /**
     * Creates a new routine in the dataset.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bigqueryRoutinesInsertTest() throws ApiException {
        String projectId = null;
        String datasetId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Routine routine = null;
        Routine response = api.bigqueryRoutinesInsert(projectId, datasetId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, routine);
        // TODO: test validations
    }

    /**
     * Lists all routines in the specified dataset. Requires the READER dataset role.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bigqueryRoutinesListTest() throws ApiException {
        String projectId = null;
        String datasetId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String filter = null;
        Integer maxResults = null;
        String pageToken = null;
        String readMask = null;
        ListRoutinesResponse response = api.bigqueryRoutinesList(projectId, datasetId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, filter, maxResults, pageToken, readMask);
        // TODO: test validations
    }

    /**
     * Updates information in an existing routine. The update method replaces the entire Routine resource.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bigqueryRoutinesUpdateTest() throws ApiException {
        String projectId = null;
        String datasetId = null;
        String routineId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Routine routine = null;
        Routine response = api.bigqueryRoutinesUpdate(projectId, datasetId, routineId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, routine);
        // TODO: test validations
    }

}
