/**
 * Chrome UX Report API
 * The Chrome UX Report API lets you view real user experience data for millions of websites. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetric.h
 *
 * A &#x60;metric&#x60; is a set of user experience data for a single web performance metric, like \&quot;first contentful paint\&quot;. It contains a summary histogram of real world Chrome usage as a series of &#x60;bins&#x60;.
 */

#ifndef OAIMetric_H
#define OAIMetric_H

#include <QJsonObject>

#include "OAIBin.h"
#include "OAIPercentiles.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBin;
class OAIPercentiles;

class OAIMetric : public OAIObject {
public:
    OAIMetric();
    OAIMetric(QString json);
    ~OAIMetric() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, double> getFractions() const;
    void setFractions(const QMap<QString, double> &fractions);
    bool is_fractions_Set() const;
    bool is_fractions_Valid() const;

    QList<OAIBin> getHistogram() const;
    void setHistogram(const QList<OAIBin> &histogram);
    bool is_histogram_Set() const;
    bool is_histogram_Valid() const;

    OAIPercentiles getPercentiles() const;
    void setPercentiles(const OAIPercentiles &percentiles);
    bool is_percentiles_Set() const;
    bool is_percentiles_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, double> m_fractions;
    bool m_fractions_isSet;
    bool m_fractions_isValid;

    QList<OAIBin> m_histogram;
    bool m_histogram_isSet;
    bool m_histogram_isValid;

    OAIPercentiles m_percentiles;
    bool m_percentiles_isSet;
    bool m_percentiles_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetric)

#endif // OAIMetric_H
