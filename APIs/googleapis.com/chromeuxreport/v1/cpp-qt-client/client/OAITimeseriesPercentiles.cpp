/**
 * Chrome UX Report API
 * The Chrome UX Report API lets you view real user experience data for millions of websites. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeseriesPercentiles.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeseriesPercentiles::OAITimeseriesPercentiles(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeseriesPercentiles::OAITimeseriesPercentiles() {
    this->initializeModel();
}

OAITimeseriesPercentiles::~OAITimeseriesPercentiles() {}

void OAITimeseriesPercentiles::initializeModel() {

    m_p75s_isSet = false;
    m_p75s_isValid = false;
}

void OAITimeseriesPercentiles::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeseriesPercentiles::fromJsonObject(QJsonObject json) {

    m_p75s_isValid = ::OpenAPI::fromJsonValue(m_p75s, json[QString("p75s")]);
    m_p75s_isSet = !json[QString("p75s")].isNull() && m_p75s_isValid;
}

QString OAITimeseriesPercentiles::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeseriesPercentiles::asJsonObject() const {
    QJsonObject obj;
    if (m_p75s.size() > 0) {
        obj.insert(QString("p75s"), ::OpenAPI::toJsonValue(m_p75s));
    }
    return obj;
}

QList<QJsonValue> OAITimeseriesPercentiles::getP75s() const {
    return m_p75s;
}
void OAITimeseriesPercentiles::setP75s(const QList<QJsonValue> &p75s) {
    m_p75s = p75s;
    m_p75s_isSet = true;
}

bool OAITimeseriesPercentiles::is_p75s_Set() const{
    return m_p75s_isSet;
}

bool OAITimeseriesPercentiles::is_p75s_Valid() const{
    return m_p75s_isValid;
}

bool OAITimeseriesPercentiles::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_p75s.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeseriesPercentiles::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
