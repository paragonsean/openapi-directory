/**
 * Chrome UX Report API
 * The Chrome UX Report API lets you view real user experience data for millions of websites. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHistoryRecord.h
 *
 * HistoryRecord is a timeseries of Chrome UX Report data. It contains user experience statistics for a single url pattern and a set of dimensions.
 */

#ifndef OAIHistoryRecord_H
#define OAIHistoryRecord_H

#include <QJsonObject>

#include "OAICollectionPeriod.h"
#include "OAIHistoryKey.h"
#include "OAIMetricTimeseries.h"
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICollectionPeriod;
class OAIHistoryKey;
class OAIMetricTimeseries;

class OAIHistoryRecord : public OAIObject {
public:
    OAIHistoryRecord();
    OAIHistoryRecord(QString json);
    ~OAIHistoryRecord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICollectionPeriod> getCollectionPeriods() const;
    void setCollectionPeriods(const QList<OAICollectionPeriod> &collection_periods);
    bool is_collection_periods_Set() const;
    bool is_collection_periods_Valid() const;

    OAIHistoryKey getKey() const;
    void setKey(const OAIHistoryKey &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QMap<QString, OAIMetricTimeseries> getMetrics() const;
    void setMetrics(const QMap<QString, OAIMetricTimeseries> &metrics);
    bool is_metrics_Set() const;
    bool is_metrics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICollectionPeriod> m_collection_periods;
    bool m_collection_periods_isSet;
    bool m_collection_periods_isValid;

    OAIHistoryKey m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QMap<QString, OAIMetricTimeseries> m_metrics;
    bool m_metrics_isSet;
    bool m_metrics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHistoryRecord)

#endif // OAIHistoryRecord_H
