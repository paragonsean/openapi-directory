/**
 * Chrome UX Report API
 * The Chrome UX Report API lets you view real user experience data for millions of websites. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFractionTimeseries.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFractionTimeseries::OAIFractionTimeseries(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFractionTimeseries::OAIFractionTimeseries() {
    this->initializeModel();
}

OAIFractionTimeseries::~OAIFractionTimeseries() {}

void OAIFractionTimeseries::initializeModel() {

    m_fractions_isSet = false;
    m_fractions_isValid = false;
}

void OAIFractionTimeseries::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFractionTimeseries::fromJsonObject(QJsonObject json) {

    m_fractions_isValid = ::OpenAPI::fromJsonValue(m_fractions, json[QString("fractions")]);
    m_fractions_isSet = !json[QString("fractions")].isNull() && m_fractions_isValid;
}

QString OAIFractionTimeseries::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFractionTimeseries::asJsonObject() const {
    QJsonObject obj;
    if (m_fractions.size() > 0) {
        obj.insert(QString("fractions"), ::OpenAPI::toJsonValue(m_fractions));
    }
    return obj;
}

QList<double> OAIFractionTimeseries::getFractions() const {
    return m_fractions;
}
void OAIFractionTimeseries::setFractions(const QList<double> &fractions) {
    m_fractions = fractions;
    m_fractions_isSet = true;
}

bool OAIFractionTimeseries::is_fractions_Set() const{
    return m_fractions_isSet;
}

bool OAIFractionTimeseries::is_fractions_Valid() const{
    return m_fractions_isValid;
}

bool OAIFractionTimeseries::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fractions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFractionTimeseries::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
