/**
 * Chrome UX Report API
 * The Chrome UX Report API lets you view real user experience data for millions of websites. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICollectionPeriod.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICollectionPeriod::OAICollectionPeriod(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICollectionPeriod::OAICollectionPeriod() {
    this->initializeModel();
}

OAICollectionPeriod::~OAICollectionPeriod() {}

void OAICollectionPeriod::initializeModel() {

    m_first_date_isSet = false;
    m_first_date_isValid = false;

    m_last_date_isSet = false;
    m_last_date_isValid = false;
}

void OAICollectionPeriod::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICollectionPeriod::fromJsonObject(QJsonObject json) {

    m_first_date_isValid = ::OpenAPI::fromJsonValue(m_first_date, json[QString("firstDate")]);
    m_first_date_isSet = !json[QString("firstDate")].isNull() && m_first_date_isValid;

    m_last_date_isValid = ::OpenAPI::fromJsonValue(m_last_date, json[QString("lastDate")]);
    m_last_date_isSet = !json[QString("lastDate")].isNull() && m_last_date_isValid;
}

QString OAICollectionPeriod::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICollectionPeriod::asJsonObject() const {
    QJsonObject obj;
    if (m_first_date.isSet()) {
        obj.insert(QString("firstDate"), ::OpenAPI::toJsonValue(m_first_date));
    }
    if (m_last_date.isSet()) {
        obj.insert(QString("lastDate"), ::OpenAPI::toJsonValue(m_last_date));
    }
    return obj;
}

OAIDate OAICollectionPeriod::getFirstDate() const {
    return m_first_date;
}
void OAICollectionPeriod::setFirstDate(const OAIDate &first_date) {
    m_first_date = first_date;
    m_first_date_isSet = true;
}

bool OAICollectionPeriod::is_first_date_Set() const{
    return m_first_date_isSet;
}

bool OAICollectionPeriod::is_first_date_Valid() const{
    return m_first_date_isValid;
}

OAIDate OAICollectionPeriod::getLastDate() const {
    return m_last_date;
}
void OAICollectionPeriod::setLastDate(const OAIDate &last_date) {
    m_last_date = last_date;
    m_last_date_isSet = true;
}

bool OAICollectionPeriod::is_last_date_Set() const{
    return m_last_date_isSet;
}

bool OAICollectionPeriod::is_last_date_Valid() const{
    return m_last_date_isValid;
}

bool OAICollectionPeriod::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_date.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICollectionPeriod::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
