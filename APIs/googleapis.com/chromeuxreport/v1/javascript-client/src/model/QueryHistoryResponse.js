/**
 * Chrome UX Report API
 * The Chrome UX Report API lets you view real user experience data for millions of websites. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HistoryRecord from './HistoryRecord';
import UrlNormalization from './UrlNormalization';

/**
 * The QueryHistoryResponse model module.
 * @module model/QueryHistoryResponse
 * @version v1
 */
class QueryHistoryResponse {
    /**
     * Constructs a new <code>QueryHistoryResponse</code>.
     * Response payload sent back to a physical web client. This response contains the record found based on the identiers present in a &#x60;QueryHistoryRequest&#x60;. The returned response will have a history record, and sometimes details on normalization actions taken on the request that were necessary to make the request successful.
     * @alias module:model/QueryHistoryResponse
     */
    constructor() { 
        
        QueryHistoryResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryHistoryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryHistoryResponse} obj Optional instance to populate.
     * @return {module:model/QueryHistoryResponse} The populated <code>QueryHistoryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryHistoryResponse();

            if (data.hasOwnProperty('record')) {
                obj['record'] = HistoryRecord.constructFromObject(data['record']);
            }
            if (data.hasOwnProperty('urlNormalizationDetails')) {
                obj['urlNormalizationDetails'] = UrlNormalization.constructFromObject(data['urlNormalizationDetails']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryHistoryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryHistoryResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `record`
        if (data['record']) { // data not null
          HistoryRecord.validateJSON(data['record']);
        }
        // validate the optional field `urlNormalizationDetails`
        if (data['urlNormalizationDetails']) { // data not null
          UrlNormalization.validateJSON(data['urlNormalizationDetails']);
        }

        return true;
    }


}



/**
 * @member {module:model/HistoryRecord} record
 */
QueryHistoryResponse.prototype['record'] = undefined;

/**
 * @member {module:model/UrlNormalization} urlNormalizationDetails
 */
QueryHistoryResponse.prototype['urlNormalizationDetails'] = undefined;






export default QueryHistoryResponse;

