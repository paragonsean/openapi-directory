/**
 * Chrome UX Report API
 * The Chrome UX Report API lets you view real user experience data for millions of websites. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Bin model module.
 * @module model/Bin
 * @version v1
 */
class Bin {
    /**
     * Constructs a new <code>Bin</code>.
     * A bin is a discrete portion of data spanning from start to end, or if no end is given, then from start to +inf. A bin&#39;s start and end values are given in the value type of the metric it represents. For example, \&quot;first contentful paint\&quot; is measured in milliseconds and exposed as ints, therefore its metric bins will use int32s for its start and end types. However, \&quot;cumulative layout shift\&quot; is measured in unitless decimals and is exposed as a decimal encoded as a string, therefore its metric bins will use strings for its value type.
     * @alias module:model/Bin
     */
    constructor() { 
        
        Bin.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Bin</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Bin} obj Optional instance to populate.
     * @return {module:model/Bin} The populated <code>Bin</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Bin();

            if (data.hasOwnProperty('density')) {
                obj['density'] = ApiClient.convertToType(data['density'], 'Number');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], Object);
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Bin</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Bin</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The proportion of users that experienced this bin's value for the given metric.
 * @member {Number} density
 */
Bin.prototype['density'] = undefined;

/**
 * End is the end of the data bin. If end is not populated, then the bin has no end and is valid from start to +inf.
 * @member {Object} end
 */
Bin.prototype['end'] = undefined;

/**
 * Start is the beginning of the data bin.
 * @member {Object} start
 */
Bin.prototype['start'] = undefined;






export default Bin;

