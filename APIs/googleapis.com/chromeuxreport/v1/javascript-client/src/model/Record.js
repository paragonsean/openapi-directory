/**
 * Chrome UX Report API
 * The Chrome UX Report API lets you view real user experience data for millions of websites. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CollectionPeriod from './CollectionPeriod';
import Key from './Key';
import Metric from './Metric';

/**
 * The Record model module.
 * @module model/Record
 * @version v1
 */
class Record {
    /**
     * Constructs a new <code>Record</code>.
     * Record is a single Chrome UX report data record. It contains use experience statistics for a single url pattern and set of dimensions.
     * @alias module:model/Record
     */
    constructor() { 
        
        Record.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Record</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Record} obj Optional instance to populate.
     * @return {module:model/Record} The populated <code>Record</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Record();

            if (data.hasOwnProperty('collectionPeriod')) {
                obj['collectionPeriod'] = CollectionPeriod.constructFromObject(data['collectionPeriod']);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = Key.constructFromObject(data['key']);
            }
            if (data.hasOwnProperty('metrics')) {
                obj['metrics'] = ApiClient.convertToType(data['metrics'], {'String': Metric});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Record</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Record</code>.
     */
    static validateJSON(data) {
        // validate the optional field `collectionPeriod`
        if (data['collectionPeriod']) { // data not null
          CollectionPeriod.validateJSON(data['collectionPeriod']);
        }
        // validate the optional field `key`
        if (data['key']) { // data not null
          Key.validateJSON(data['key']);
        }

        return true;
    }


}



/**
 * @member {module:model/CollectionPeriod} collectionPeriod
 */
Record.prototype['collectionPeriod'] = undefined;

/**
 * @member {module:model/Key} key
 */
Record.prototype['key'] = undefined;

/**
 * Metrics is the map of user experience data available for the record defined in the key field. Metrics are keyed on the metric name. Allowed key values: [\"first_contentful_paint\", \"first_input_delay\", \"largest_contentful_paint\", \"cumulative_layout_shift\", \"experimental_time_to_first_byte\", \"experimental_interaction_to_next_paint\"]
 * @member {Object.<String, module:model/Metric>} metrics
 */
Record.prototype['metrics'] = undefined;






export default Record;

