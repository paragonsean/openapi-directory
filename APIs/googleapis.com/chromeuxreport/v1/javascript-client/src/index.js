/**
 * Chrome UX Report API
 * The Chrome UX Report API lets you view real user experience data for millions of websites. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Bin from './model/Bin';
import CollectionPeriod from './model/CollectionPeriod';
import FractionTimeseries from './model/FractionTimeseries';
import HistoryKey from './model/HistoryKey';
import HistoryRecord from './model/HistoryRecord';
import Key from './model/Key';
import Metric from './model/Metric';
import MetricTimeseries from './model/MetricTimeseries';
import ModelDate from './model/ModelDate';
import Percentiles from './model/Percentiles';
import QueryHistoryRequest from './model/QueryHistoryRequest';
import QueryHistoryResponse from './model/QueryHistoryResponse';
import QueryRequest from './model/QueryRequest';
import QueryResponse from './model/QueryResponse';
import Record from './model/Record';
import TimeseriesBin from './model/TimeseriesBin';
import TimeseriesPercentiles from './model/TimeseriesPercentiles';
import UrlNormalization from './model/UrlNormalization';
import RecordsApi from './api/RecordsApi';


/**
* The Chrome UX Report API lets you view real user experience data for millions of websites. .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ChromeUxReportApi = require('index'); // See note below*.
* var xxxSvc = new ChromeUxReportApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ChromeUxReportApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ChromeUxReportApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ChromeUxReportApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Bin model constructor.
     * @property {module:model/Bin}
     */
    Bin,

    /**
     * The CollectionPeriod model constructor.
     * @property {module:model/CollectionPeriod}
     */
    CollectionPeriod,

    /**
     * The FractionTimeseries model constructor.
     * @property {module:model/FractionTimeseries}
     */
    FractionTimeseries,

    /**
     * The HistoryKey model constructor.
     * @property {module:model/HistoryKey}
     */
    HistoryKey,

    /**
     * The HistoryRecord model constructor.
     * @property {module:model/HistoryRecord}
     */
    HistoryRecord,

    /**
     * The Key model constructor.
     * @property {module:model/Key}
     */
    Key,

    /**
     * The Metric model constructor.
     * @property {module:model/Metric}
     */
    Metric,

    /**
     * The MetricTimeseries model constructor.
     * @property {module:model/MetricTimeseries}
     */
    MetricTimeseries,

    /**
     * The ModelDate model constructor.
     * @property {module:model/ModelDate}
     */
    ModelDate,

    /**
     * The Percentiles model constructor.
     * @property {module:model/Percentiles}
     */
    Percentiles,

    /**
     * The QueryHistoryRequest model constructor.
     * @property {module:model/QueryHistoryRequest}
     */
    QueryHistoryRequest,

    /**
     * The QueryHistoryResponse model constructor.
     * @property {module:model/QueryHistoryResponse}
     */
    QueryHistoryResponse,

    /**
     * The QueryRequest model constructor.
     * @property {module:model/QueryRequest}
     */
    QueryRequest,

    /**
     * The QueryResponse model constructor.
     * @property {module:model/QueryResponse}
     */
    QueryResponse,

    /**
     * The Record model constructor.
     * @property {module:model/Record}
     */
    Record,

    /**
     * The TimeseriesBin model constructor.
     * @property {module:model/TimeseriesBin}
     */
    TimeseriesBin,

    /**
     * The TimeseriesPercentiles model constructor.
     * @property {module:model/TimeseriesPercentiles}
     */
    TimeseriesPercentiles,

    /**
     * The UrlNormalization model constructor.
     * @property {module:model/UrlNormalization}
     */
    UrlNormalization,

    /**
    * The RecordsApi service constructor.
    * @property {module:api/RecordsApi}
    */
    RecordsApi
};
