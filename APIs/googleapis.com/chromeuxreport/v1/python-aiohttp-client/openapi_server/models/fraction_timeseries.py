# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FractionTimeseries(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fractions: List[float]=None):
        """FractionTimeseries - a model defined in OpenAPI

        :param fractions: The fractions of this FractionTimeseries.
        """
        self.openapi_types = {
            'fractions': List[float]
        }

        self.attribute_map = {
            'fractions': 'fractions'
        }

        self._fractions = fractions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FractionTimeseries':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FractionTimeseries of this FractionTimeseries.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fractions(self):
        """Gets the fractions of this FractionTimeseries.

        Values between 0.0 and 1.0 (inclusive) and NaN.

        :return: The fractions of this FractionTimeseries.
        :rtype: List[float]
        """
        return self._fractions

    @fractions.setter
    def fractions(self, fractions):
        """Sets the fractions of this FractionTimeseries.

        Values between 0.0 and 1.0 (inclusive) and NaN.

        :param fractions: The fractions of this FractionTimeseries.
        :type fractions: List[float]
        """

        self._fractions = fractions
