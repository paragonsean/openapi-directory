# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QueryHistoryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, form_factor: str=None, metrics: List[str]=None, origin: str=None, url: str=None):
        """QueryHistoryRequest - a model defined in OpenAPI

        :param form_factor: The form_factor of this QueryHistoryRequest.
        :param metrics: The metrics of this QueryHistoryRequest.
        :param origin: The origin of this QueryHistoryRequest.
        :param url: The url of this QueryHistoryRequest.
        """
        self.openapi_types = {
            'form_factor': str,
            'metrics': List[str],
            'origin': str,
            'url': str
        }

        self.attribute_map = {
            'form_factor': 'formFactor',
            'metrics': 'metrics',
            'origin': 'origin',
            'url': 'url'
        }

        self._form_factor = form_factor
        self._metrics = metrics
        self._origin = origin
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryHistoryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryHistoryRequest of this QueryHistoryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def form_factor(self):
        """Gets the form_factor of this QueryHistoryRequest.

        The form factor is a query dimension that specifies the device class that the record's data should belong to. Note: If no form factor is specified, then a special record with aggregated data over all form factors will be returned.

        :return: The form_factor of this QueryHistoryRequest.
        :rtype: str
        """
        return self._form_factor

    @form_factor.setter
    def form_factor(self, form_factor):
        """Sets the form_factor of this QueryHistoryRequest.

        The form factor is a query dimension that specifies the device class that the record's data should belong to. Note: If no form factor is specified, then a special record with aggregated data over all form factors will be returned.

        :param form_factor: The form_factor of this QueryHistoryRequest.
        :type form_factor: str
        """
        allowed_values = ["ALL_FORM_FACTORS", "PHONE", "DESKTOP", "TABLET"]  # noqa: E501
        if form_factor not in allowed_values:
            raise ValueError(
                "Invalid value for `form_factor` ({0}), must be one of {1}"
                .format(form_factor, allowed_values)
            )

        self._form_factor = form_factor

    @property
    def metrics(self):
        """Gets the metrics of this QueryHistoryRequest.

        The metrics that should be included in the response. If none are specified then any metrics found will be returned. Allowed values: [\"first_contentful_paint\", \"first_input_delay\", \"largest_contentful_paint\", \"cumulative_layout_shift\", \"experimental_time_to_first_byte\", \"experimental_interaction_to_next_paint\"]

        :return: The metrics of this QueryHistoryRequest.
        :rtype: List[str]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this QueryHistoryRequest.

        The metrics that should be included in the response. If none are specified then any metrics found will be returned. Allowed values: [\"first_contentful_paint\", \"first_input_delay\", \"largest_contentful_paint\", \"cumulative_layout_shift\", \"experimental_time_to_first_byte\", \"experimental_interaction_to_next_paint\"]

        :param metrics: The metrics of this QueryHistoryRequest.
        :type metrics: List[str]
        """

        self._metrics = metrics

    @property
    def origin(self):
        """Gets the origin of this QueryHistoryRequest.

        The url pattern \"origin\" refers to a url pattern that is the origin of a website. Examples: \"https://example.com\", \"https://cloud.google.com\"

        :return: The origin of this QueryHistoryRequest.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this QueryHistoryRequest.

        The url pattern \"origin\" refers to a url pattern that is the origin of a website. Examples: \"https://example.com\", \"https://cloud.google.com\"

        :param origin: The origin of this QueryHistoryRequest.
        :type origin: str
        """

        self._origin = origin

    @property
    def url(self):
        """Gets the url of this QueryHistoryRequest.

        The url pattern \"url\" refers to a url pattern that is any arbitrary url. Examples: \"https://example.com/\", \"https://cloud.google.com/why-google-cloud/\"

        :return: The url of this QueryHistoryRequest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this QueryHistoryRequest.

        The url pattern \"url\" refers to a url pattern that is any arbitrary url. Examples: \"https://example.com/\", \"https://cloud.google.com/why-google-cloud/\"

        :param url: The url of this QueryHistoryRequest.
        :type url: str
        """

        self._url = url
