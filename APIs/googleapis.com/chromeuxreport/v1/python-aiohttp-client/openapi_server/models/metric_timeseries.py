# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fraction_timeseries import FractionTimeseries
from openapi_server.models.timeseries_bin import TimeseriesBin
from openapi_server.models.timeseries_percentiles import TimeseriesPercentiles
from openapi_server import util


class MetricTimeseries(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fraction_timeseries: Dict[str, FractionTimeseries]=None, histogram_timeseries: List[TimeseriesBin]=None, percentiles_timeseries: TimeseriesPercentiles=None):
        """MetricTimeseries - a model defined in OpenAPI

        :param fraction_timeseries: The fraction_timeseries of this MetricTimeseries.
        :param histogram_timeseries: The histogram_timeseries of this MetricTimeseries.
        :param percentiles_timeseries: The percentiles_timeseries of this MetricTimeseries.
        """
        self.openapi_types = {
            'fraction_timeseries': Dict[str, FractionTimeseries],
            'histogram_timeseries': List[TimeseriesBin],
            'percentiles_timeseries': TimeseriesPercentiles
        }

        self.attribute_map = {
            'fraction_timeseries': 'fractionTimeseries',
            'histogram_timeseries': 'histogramTimeseries',
            'percentiles_timeseries': 'percentilesTimeseries'
        }

        self._fraction_timeseries = fraction_timeseries
        self._histogram_timeseries = histogram_timeseries
        self._percentiles_timeseries = percentiles_timeseries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetricTimeseries':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MetricTimeseries of this MetricTimeseries.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fraction_timeseries(self):
        """Gets the fraction_timeseries of this MetricTimeseries.

        Mapping from labels to timeseries of fractions attributed to this label.

        :return: The fraction_timeseries of this MetricTimeseries.
        :rtype: Dict[str, FractionTimeseries]
        """
        return self._fraction_timeseries

    @fraction_timeseries.setter
    def fraction_timeseries(self, fraction_timeseries):
        """Sets the fraction_timeseries of this MetricTimeseries.

        Mapping from labels to timeseries of fractions attributed to this label.

        :param fraction_timeseries: The fraction_timeseries of this MetricTimeseries.
        :type fraction_timeseries: Dict[str, FractionTimeseries]
        """

        self._fraction_timeseries = fraction_timeseries

    @property
    def histogram_timeseries(self):
        """Gets the histogram_timeseries of this MetricTimeseries.

        The histogram of user experiences for a metric. The histogram will have at least one bin and the densities of all bins will add up to ~1, for each timeseries entry.

        :return: The histogram_timeseries of this MetricTimeseries.
        :rtype: List[TimeseriesBin]
        """
        return self._histogram_timeseries

    @histogram_timeseries.setter
    def histogram_timeseries(self, histogram_timeseries):
        """Sets the histogram_timeseries of this MetricTimeseries.

        The histogram of user experiences for a metric. The histogram will have at least one bin and the densities of all bins will add up to ~1, for each timeseries entry.

        :param histogram_timeseries: The histogram_timeseries of this MetricTimeseries.
        :type histogram_timeseries: List[TimeseriesBin]
        """

        self._histogram_timeseries = histogram_timeseries

    @property
    def percentiles_timeseries(self):
        """Gets the percentiles_timeseries of this MetricTimeseries.


        :return: The percentiles_timeseries of this MetricTimeseries.
        :rtype: TimeseriesPercentiles
        """
        return self._percentiles_timeseries

    @percentiles_timeseries.setter
    def percentiles_timeseries(self, percentiles_timeseries):
        """Sets the percentiles_timeseries of this MetricTimeseries.


        :param percentiles_timeseries: The percentiles_timeseries of this MetricTimeseries.
        :type percentiles_timeseries: TimeseriesPercentiles
        """

        self._percentiles_timeseries = percentiles_timeseries
