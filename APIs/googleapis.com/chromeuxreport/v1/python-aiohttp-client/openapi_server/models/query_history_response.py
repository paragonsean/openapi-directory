# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.history_record import HistoryRecord
from openapi_server.models.url_normalization import UrlNormalization
from openapi_server import util


class QueryHistoryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, record: HistoryRecord=None, url_normalization_details: UrlNormalization=None):
        """QueryHistoryResponse - a model defined in OpenAPI

        :param record: The record of this QueryHistoryResponse.
        :param url_normalization_details: The url_normalization_details of this QueryHistoryResponse.
        """
        self.openapi_types = {
            'record': HistoryRecord,
            'url_normalization_details': UrlNormalization
        }

        self.attribute_map = {
            'record': 'record',
            'url_normalization_details': 'urlNormalizationDetails'
        }

        self._record = record
        self._url_normalization_details = url_normalization_details

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryHistoryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueryHistoryResponse of this QueryHistoryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def record(self):
        """Gets the record of this QueryHistoryResponse.


        :return: The record of this QueryHistoryResponse.
        :rtype: HistoryRecord
        """
        return self._record

    @record.setter
    def record(self, record):
        """Sets the record of this QueryHistoryResponse.


        :param record: The record of this QueryHistoryResponse.
        :type record: HistoryRecord
        """

        self._record = record

    @property
    def url_normalization_details(self):
        """Gets the url_normalization_details of this QueryHistoryResponse.


        :return: The url_normalization_details of this QueryHistoryResponse.
        :rtype: UrlNormalization
        """
        return self._url_normalization_details

    @url_normalization_details.setter
    def url_normalization_details(self, url_normalization_details):
        """Sets the url_normalization_details of this QueryHistoryResponse.


        :param url_normalization_details: The url_normalization_details of this QueryHistoryResponse.
        :type url_normalization_details: UrlNormalization
        """

        self._url_normalization_details = url_normalization_details
