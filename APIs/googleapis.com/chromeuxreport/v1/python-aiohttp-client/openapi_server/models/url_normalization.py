# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UrlNormalization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, normalized_url: str=None, original_url: str=None):
        """UrlNormalization - a model defined in OpenAPI

        :param normalized_url: The normalized_url of this UrlNormalization.
        :param original_url: The original_url of this UrlNormalization.
        """
        self.openapi_types = {
            'normalized_url': str,
            'original_url': str
        }

        self.attribute_map = {
            'normalized_url': 'normalizedUrl',
            'original_url': 'originalUrl'
        }

        self._normalized_url = normalized_url
        self._original_url = original_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UrlNormalization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UrlNormalization of this UrlNormalization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def normalized_url(self):
        """Gets the normalized_url of this UrlNormalization.

        The URL after any normalization actions. This is a valid user experience URL that could reasonably be looked up.

        :return: The normalized_url of this UrlNormalization.
        :rtype: str
        """
        return self._normalized_url

    @normalized_url.setter
    def normalized_url(self, normalized_url):
        """Sets the normalized_url of this UrlNormalization.

        The URL after any normalization actions. This is a valid user experience URL that could reasonably be looked up.

        :param normalized_url: The normalized_url of this UrlNormalization.
        :type normalized_url: str
        """

        self._normalized_url = normalized_url

    @property
    def original_url(self):
        """Gets the original_url of this UrlNormalization.

        The original requested URL prior to any normalization actions.

        :return: The original_url of this UrlNormalization.
        :rtype: str
        """
        return self._original_url

    @original_url.setter
    def original_url(self, original_url):
        """Sets the original_url of this UrlNormalization.

        The original requested URL prior to any normalization actions.

        :param original_url: The original_url of this UrlNormalization.
        :type original_url: str
        """

        self._original_url = original_url
