# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeseriesPercentiles(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, p75s: List[object]=None):
        """TimeseriesPercentiles - a model defined in OpenAPI

        :param p75s: The p75s of this TimeseriesPercentiles.
        """
        self.openapi_types = {
            'p75s': List[object]
        }

        self.attribute_map = {
            'p75s': 'p75s'
        }

        self._p75s = p75s

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeseriesPercentiles':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeseriesPercentiles of this TimeseriesPercentiles.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def p75s(self):
        """Gets the p75s of this TimeseriesPercentiles.

        75% of users experienced the given metric at or below this value. The length of this list of densities is equal to the length of the CollectionPeriods field in the HistoryRecord message, which describes when the density was observed in the field.

        :return: The p75s of this TimeseriesPercentiles.
        :rtype: List[object]
        """
        return self._p75s

    @p75s.setter
    def p75s(self, p75s):
        """Sets the p75s of this TimeseriesPercentiles.

        75% of users experienced the given metric at or below this value. The length of this list of densities is equal to the length of the CollectionPeriods field in the HistoryRecord message, which describes when the density was observed in the field.

        :param p75s: The p75s of this TimeseriesPercentiles.
        :type p75s: List[object]
        """

        self._p75s = p75s
