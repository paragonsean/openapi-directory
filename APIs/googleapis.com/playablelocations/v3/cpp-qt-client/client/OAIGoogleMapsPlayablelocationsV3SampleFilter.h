/**
 * Playable Locations API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleMapsPlayablelocationsV3SampleFilter.h
 *
 * Specifies the filters to use when searching for playable locations.
 */

#ifndef OAIGoogleMapsPlayablelocationsV3SampleFilter_H
#define OAIGoogleMapsPlayablelocationsV3SampleFilter_H

#include <QJsonObject>

#include "OAIGoogleMapsPlayablelocationsV3SampleSpacingOptions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleMapsPlayablelocationsV3SampleSpacingOptions;

class OAIGoogleMapsPlayablelocationsV3SampleFilter : public OAIObject {
public:
    OAIGoogleMapsPlayablelocationsV3SampleFilter();
    OAIGoogleMapsPlayablelocationsV3SampleFilter(QString json);
    ~OAIGoogleMapsPlayablelocationsV3SampleFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getIncludedTypes() const;
    void setIncludedTypes(const QList<QString> &included_types);
    bool is_included_types_Set() const;
    bool is_included_types_Valid() const;

    qint32 getMaxLocationCount() const;
    void setMaxLocationCount(const qint32 &max_location_count);
    bool is_max_location_count_Set() const;
    bool is_max_location_count_Valid() const;

    OAIGoogleMapsPlayablelocationsV3SampleSpacingOptions getSpacing() const;
    void setSpacing(const OAIGoogleMapsPlayablelocationsV3SampleSpacingOptions &spacing);
    bool is_spacing_Set() const;
    bool is_spacing_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_included_types;
    bool m_included_types_isSet;
    bool m_included_types_isValid;

    qint32 m_max_location_count;
    bool m_max_location_count_isSet;
    bool m_max_location_count_isValid;

    OAIGoogleMapsPlayablelocationsV3SampleSpacingOptions m_spacing;
    bool m_spacing_isSet;
    bool m_spacing_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleMapsPlayablelocationsV3SampleFilter)

#endif // OAIGoogleMapsPlayablelocationsV3SampleFilter_H
