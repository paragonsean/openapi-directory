openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Playable Locations API
  version: v3
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
  - format: google
    url: https://playablelocations.googleapis.com/$discovery/rest?version=v3
    version: v1
  x-providerName: googleapis.com
  x-serviceName: playablelocations
externalDocs:
  url: https://developers.google.com/maps/contact-sales/
servers:
- url: https://playablelocations.googleapis.com/
tags:
- name: v3
paths:
  /v3:logImpressions:
    post:
      description: "Logs new events when playable locations are displayed, and when\
        \ they are interacted with. Impressions are not partially saved; either all\
        \ impressions are saved and this request succeeds, or no impressions are saved,\
        \ and this request fails."
      operationId: playablelocations_log_impressions
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3LogImpressionsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3LogImpressionsResponse'
          description: Successful response
      tags:
      - v3
      x-openapi-router-controller: openapi_server.controllers.v3_controller
      x-codegen-request-body-name: body
  /v3:logPlayerReports:
    post:
      description: "Logs bad playable location reports submitted by players. Reports\
        \ are not partially saved; either all reports are saved and this request succeeds,\
        \ or no reports are saved, and this request fails."
      operationId: playablelocations_log_player_reports
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3LogPlayerReportsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3LogPlayerReportsResponse'
          description: Successful response
      tags:
      - v3
      x-openapi-router-controller: openapi_server.controllers.v3_controller
      x-codegen-request-body-name: body
  /v3:samplePlayableLocations:
    post:
      description: "Returns a set of playable locations that lie within a specified\
        \ area, that satisfy optional filter criteria. Note: Identical `SamplePlayableLocations`\
        \ requests can return different results as the state of the world changes\
        \ over time."
      operationId: playablelocations_sample_playable_locations
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse'
          description: Successful response
      tags:
      - v3
      x-openapi-router-controller: openapi_server.controllers.v3_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    GoogleMapsPlayablelocationsV3Impression:
      description: Encapsulates impression event details.
      example:
        gameObjectType: 0
        locationName: locationName
        impressionType: IMPRESSION_TYPE_UNSPECIFIED
      properties:
        gameObjectType:
          description: "An arbitrary, developer-defined type identifier for each type\
            \ of game object used in your game. Since players interact with differ\
            \ types of game objects in different ways, this field allows you to segregate\
            \ impression data by type for analysis. You should assign a unique `game_object_type`\
            \ ID to represent a distinct type of game object in your game. For example,\
            \ 1=monster location, 2=powerup location."
          format: int32
          title: gameObjectType
          type: integer
        impressionType:
          description: Required. The type of impression event.
          enum:
          - IMPRESSION_TYPE_UNSPECIFIED
          - PRESENTED
          - INTERACTED
          title: impressionType
          type: string
        locationName:
          description: Required. The name of the playable location.
          title: locationName
          type: string
      title: GoogleMapsPlayablelocationsV3Impression
      type: object
    GoogleMapsPlayablelocationsV3LogImpressionsRequest:
      description: A request for logging impressions.
      example:
        requestId: requestId
        clientInfo:
          applicationVersion: applicationVersion
          apiClient: apiClient
          operatingSystemBuild: operatingSystemBuild
          deviceModel: deviceModel
          applicationId: applicationId
          languageCode: languageCode
          operatingSystem: operatingSystem
          platform: PLATFORM_UNSPECIFIED
        impressions:
        - gameObjectType: 0
          locationName: locationName
          impressionType: IMPRESSION_TYPE_UNSPECIFIED
        - gameObjectType: 0
          locationName: locationName
          impressionType: IMPRESSION_TYPE_UNSPECIFIED
      properties:
        clientInfo:
          $ref: '#/components/schemas/GoogleMapsUnityClientInfo'
        impressions:
          description: Required. Impression event details. The maximum number of impression
            reports that you can log at once is 50.
          items:
            $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3Impression'
          title: impressions
          type: array
        requestId:
          description: "Required. A string that uniquely identifies the log impressions\
            \ request. This allows you to detect duplicate requests. We recommend\
            \ that you use UUIDs for this value. The value must not exceed 50 characters.\
            \ You should reuse the `request_id` only when retrying a request in case\
            \ of failure. In this case, the request must be identical to the one that\
            \ failed."
          title: requestId
          type: string
      title: GoogleMapsPlayablelocationsV3LogImpressionsRequest
      type: object
    GoogleMapsPlayablelocationsV3LogImpressionsResponse:
      description: A response for the LogImpressions method. This method returns no
        data upon success.
      properties: {}
      type: object
    GoogleMapsPlayablelocationsV3LogPlayerReportsRequest:
      description: A request for logging your player's bad location reports.
      example:
        playerReports:
        - locationName: locationName
          reasons:
          - BAD_LOCATION_REASON_UNSPECIFIED
          - BAD_LOCATION_REASON_UNSPECIFIED
          languageCode: languageCode
          reasonDetails: reasonDetails
        - locationName: locationName
          reasons:
          - BAD_LOCATION_REASON_UNSPECIFIED
          - BAD_LOCATION_REASON_UNSPECIFIED
          languageCode: languageCode
          reasonDetails: reasonDetails
        requestId: requestId
        clientInfo:
          applicationVersion: applicationVersion
          apiClient: apiClient
          operatingSystemBuild: operatingSystemBuild
          deviceModel: deviceModel
          applicationId: applicationId
          languageCode: languageCode
          operatingSystem: operatingSystem
          platform: PLATFORM_UNSPECIFIED
      properties:
        clientInfo:
          $ref: '#/components/schemas/GoogleMapsUnityClientInfo'
        playerReports:
          description: Required. Player reports. The maximum number of player reports
            that you can log at once is 50.
          items:
            $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3PlayerReport'
          title: playerReports
          type: array
        requestId:
          description: "Required. A string that uniquely identifies the log player\
            \ reports request. This allows you to detect duplicate requests. We recommend\
            \ that you use UUIDs for this value. The value must not exceed 50 characters.\
            \ You should reuse the `request_id` only when retrying a request in the\
            \ case of a failure. In that case, the request must be identical to the\
            \ one that failed."
          title: requestId
          type: string
      title: GoogleMapsPlayablelocationsV3LogPlayerReportsRequest
      type: object
    GoogleMapsPlayablelocationsV3LogPlayerReportsResponse:
      description: A response for the LogPlayerReports method. This method returns
        no data upon success.
      properties: {}
      type: object
    GoogleMapsPlayablelocationsV3PlayerReport:
      description: A report submitted by a player about a playable location that is
        considered inappropriate for use in the game.
      example:
        locationName: locationName
        reasons:
        - BAD_LOCATION_REASON_UNSPECIFIED
        - BAD_LOCATION_REASON_UNSPECIFIED
        languageCode: languageCode
        reasonDetails: reasonDetails
      properties:
        languageCode:
          description: "Language code (in BCP-47 format) indicating the language of\
            \ the freeform description provided in `reason_details`. Examples are\
            \ \"en\", \"en-US\" or \"ja-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
          title: languageCode
          type: string
        locationName:
          description: Required. The name of the playable location.
          title: locationName
          type: string
        reasonDetails:
          description: Required. A free-form description detailing why the playable
            location is considered bad.
          title: reasonDetails
          type: string
        reasons:
          description: Required. One or more reasons why this playable location is
            considered bad.
          items:
            enum:
            - BAD_LOCATION_REASON_UNSPECIFIED
            - OTHER
            - NOT_PEDESTRIAN_ACCESSIBLE
            - NOT_OPEN_TO_PUBLIC
            - PERMANENTLY_CLOSED
            - TEMPORARILY_INACCESSIBLE
            type: string
          title: reasons
          type: array
      title: GoogleMapsPlayablelocationsV3PlayerReport
      type: object
    GoogleMapsPlayablelocationsV3SampleAreaFilter:
      description: Specifies the area to search for playable locations.
      example:
        s2CellId: s2CellId
      properties:
        s2CellId:
          description: "Required. The S2 cell ID of the area you want. This must be\
            \ between cell level 11 and 14 (inclusive). S2 cells are 64-bit integers\
            \ that identify areas on the Earth. They are hierarchical, and can therefore\
            \ be used for spatial indexing. The S2 geometry library is available in\
            \ a number of languages: * [C++](https://github.com/google/s2geometry)\
            \ * [Java](https://github.com/google/s2-geometry-library-java) * [Go](https://github.com/golang/geo)\
            \ * [Python](https://github.com/google/s2geometry/tree/master/src/python)"
          format: uint64
          title: s2CellId
          type: string
      title: GoogleMapsPlayablelocationsV3SampleAreaFilter
      type: object
    GoogleMapsPlayablelocationsV3SampleCriterion:
      description: Encapsulates a filter criterion for searching for a set of playable
        locations.
      example:
        filter:
          includedTypes:
          - includedTypes
          - includedTypes
          spacing:
            pointType: POINT_TYPE_UNSPECIFIED
            minSpacingMeters: 6.027456183070403
          maxLocationCount: 0
        fieldsToReturn: fieldsToReturn
        gameObjectType: 1
      properties:
        fieldsToReturn:
          description: "Specifies which `PlayableLocation` fields are returned. `name`\
            \ (which is used for logging impressions), `center_point` and `place_id`\
            \ (or `plus_code`) are always returned. The following fields are omitted\
            \ unless you specify them here: * snapped_point * types Note: The more\
            \ fields you include, the more expensive in terms of data and associated\
            \ latency your query will be."
          format: google-fieldmask
          title: fieldsToReturn
          type: string
        filter:
          $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3SampleFilter'
        gameObjectType:
          description: "Required. An arbitrary, developer-defined identifier of the\
            \ type of game object that the playable location is used for. This field\
            \ allows you to specify criteria per game object type when searching for\
            \ playable locations. You should assign a unique `game_object_type` ID\
            \ across all `request_criteria` to represent a distinct type of game object.\
            \ For example, 1=monster location, 2=powerup location. The response contains\
            \ a map."
          format: int32
          title: gameObjectType
          type: integer
      title: GoogleMapsPlayablelocationsV3SampleCriterion
      type: object
    GoogleMapsPlayablelocationsV3SampleFilter:
      description: Specifies the filters to use when searching for playable locations.
      example:
        includedTypes:
        - includedTypes
        - includedTypes
        spacing:
          pointType: POINT_TYPE_UNSPECIFIED
          minSpacingMeters: 6.027456183070403
        maxLocationCount: 0
      properties:
        includedTypes:
          description: "Restricts the set of playable locations to just the [types](/maps/documentation/gaming/tt/types)\
            \ that you want."
          items:
            type: string
          title: includedTypes
          type: array
        maxLocationCount:
          description: Specifies the maximum number of playable locations to return.
            This value must not be greater than 1000. The default value is 100. Only
            the top-ranking playable locations are returned.
          format: int32
          title: maxLocationCount
          type: integer
        spacing:
          $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3SampleSpacingOptions'
      title: GoogleMapsPlayablelocationsV3SampleFilter
      type: object
    GoogleMapsPlayablelocationsV3SamplePlayableLocation:
      description: A geographical point suitable for placing game objects in location-based
        games.
      example:
        types:
        - types
        - types
        snappedPoint:
          latitude: 0.8008281904610115
          longitude: 6.027456183070403
        plusCode: plusCode
        name: name
        placeId: placeId
        centerPoint:
          latitude: 0.8008281904610115
          longitude: 6.027456183070403
      properties:
        centerPoint:
          $ref: '#/components/schemas/GoogleTypeLatLng'
        name:
          description: Required. The name of this playable location.
          title: name
          type: string
        placeId:
          description: "A [place ID] (https://developers.google.com/places/place-id)"
          title: placeId
          type: string
        plusCode:
          description: "A [plus code] (http://openlocationcode.com)"
          title: plusCode
          type: string
        snappedPoint:
          $ref: '#/components/schemas/GoogleTypeLatLng'
        types:
          description: "A collection of [Playable Location Types](/maps/documentation/gaming/tt/types)\
            \ for this playable location. The first type in the collection is the\
            \ primary type. Type information might not be available for all playable\
            \ locations."
          items:
            type: string
          title: types
          type: array
      title: GoogleMapsPlayablelocationsV3SamplePlayableLocation
      type: object
    GoogleMapsPlayablelocationsV3SamplePlayableLocationList:
      description: A list of PlayableLocation objects that satisfies a single Criterion.
      example:
        locations:
        - types:
          - types
          - types
          snappedPoint:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
          plusCode: plusCode
          name: name
          placeId: placeId
          centerPoint:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
        - types:
          - types
          - types
          snappedPoint:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
          plusCode: plusCode
          name: name
          placeId: placeId
          centerPoint:
            latitude: 0.8008281904610115
            longitude: 6.027456183070403
      properties:
        locations:
          description: A list of playable locations for this game object type.
          items:
            $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3SamplePlayableLocation'
          title: locations
          type: array
      title: GoogleMapsPlayablelocationsV3SamplePlayableLocationList
      type: object
    GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest:
      description: " Life of a query: - When a game starts in a new location, your\
        \ game server issues a SamplePlayableLocations request. The request specifies\
        \ the S2 cell, and contains one or more \"criteria\" for filtering: - Criterion\
        \ 0: i locations for long-lived bases, or level 0 monsters, or... - Criterion\
        \ 1: j locations for short-lived bases, or level 1 monsters, ... - Criterion\
        \ 2: k locations for random objects. - etc (up to 5 criterion may be specified).\
        \ `PlayableLocationList` will then contain mutually exclusive lists of `PlayableLocation`\
        \ objects that satisfy each of the criteria. Think of it as a collection of\
        \ real-world locations that you can then associate with your game state. Note:\
        \ These points are impermanent in nature. E.g, parks can close, and places\
        \ can be removed. The response specifies how long you can expect the playable\
        \ locations to last. Once they expire, you should query the `samplePlayableLocations`\
        \ API again to get a fresh view of the real world."
      example:
        criteria:
        - filter:
            includedTypes:
            - includedTypes
            - includedTypes
            spacing:
              pointType: POINT_TYPE_UNSPECIFIED
              minSpacingMeters: 6.027456183070403
            maxLocationCount: 0
          fieldsToReturn: fieldsToReturn
          gameObjectType: 1
        - filter:
            includedTypes:
            - includedTypes
            - includedTypes
            spacing:
              pointType: POINT_TYPE_UNSPECIFIED
              minSpacingMeters: 6.027456183070403
            maxLocationCount: 0
          fieldsToReturn: fieldsToReturn
          gameObjectType: 1
        areaFilter:
          s2CellId: s2CellId
      properties:
        areaFilter:
          $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3SampleAreaFilter'
        criteria:
          description: Required. Specifies one or more (up to 5) criteria for filtering
            the returned playable locations.
          items:
            $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3SampleCriterion'
          title: criteria
          type: array
      title: GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest
      type: object
    GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse:
      description: ' Response for the SamplePlayableLocations method.'
      example:
        locationsPerGameObjectType:
          key:
            locations:
            - types:
              - types
              - types
              snappedPoint:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              plusCode: plusCode
              name: name
              placeId: placeId
              centerPoint:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
            - types:
              - types
              - types
              snappedPoint:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
              plusCode: plusCode
              name: name
              placeId: placeId
              centerPoint:
                latitude: 0.8008281904610115
                longitude: 6.027456183070403
        ttl: ttl
      properties:
        locationsPerGameObjectType:
          additionalProperties:
            $ref: '#/components/schemas/GoogleMapsPlayablelocationsV3SamplePlayableLocationList'
          description: Each PlayableLocation object corresponds to a game_object_type
            specified in the request.
          title: locationsPerGameObjectType
          type: object
        ttl:
          description: "Required. Specifies the \"time-to-live\" for the set of playable\
            \ locations. You can use this value to determine how long to cache the\
            \ set of playable locations. After this length of time, your back-end\
            \ game server should issue a new SamplePlayableLocations request to get\
            \ a fresh set of playable locations (because for example, they might have\
            \ been removed, a park might have closed for the day, a business might\
            \ have closed permanently)."
          format: google-duration
          title: ttl
          type: string
      title: GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse
      type: object
    GoogleMapsPlayablelocationsV3SampleSpacingOptions:
      description: A set of options that specifies the separation between playable
        locations.
      example:
        pointType: POINT_TYPE_UNSPECIFIED
        minSpacingMeters: 6.027456183070403
      properties:
        minSpacingMeters:
          description: "Required. The minimum spacing between any two playable locations,\
            \ measured in meters. The minimum value is 30. The maximum value is 1000.\
            \ Inputs will be rounded up to the next 10 meter interval. The default\
            \ value is 200m. Set this field to remove tight clusters of playable locations.\
            \ Note: The spacing is a greedy algorithm. It optimizes for selecting\
            \ the highest ranking locations first, not to maximize the number of locations\
            \ selected. Consider the following scenario: * Rank: A: 2, B: 1, C: 3.\
            \ * Distance: A--200m--B--200m--C If spacing=250, it will pick the highest\
            \ ranked location [B], not [A, C]. Note: Spacing works within the game\
            \ object type itself, as well as the previous ones. Suppose three game\
            \ object types, each with the following spacing: * X: 400m, Y: undefined,\
            \ Z: 200m. 1. Add locations for X, within 400m of each other. 2. Add locations\
            \ for Y, without any spacing. 3. Finally, add locations for Z within 200m\
            \ of each other as well X and Y. The distance diagram between those locations\
            \ end up as: * From->To. * X->X: 400m * Y->X, Y->Y: unspecified. * Z->X,\
            \ Z->Y, Z->Z: 200m."
          format: double
          title: minSpacingMeters
          type: number
        pointType:
          description: "Specifies whether the minimum spacing constraint applies to\
            \ the center-point or to the snapped point of playable locations. The\
            \ default value is `CENTER_POINT`. If a snapped point is not available\
            \ for a playable location, its center-point is used instead. Set this\
            \ to the point type used in your game."
          enum:
          - POINT_TYPE_UNSPECIFIED
          - CENTER_POINT
          - SNAPPED_POINT
          title: pointType
          type: string
      title: GoogleMapsPlayablelocationsV3SampleSpacingOptions
      type: object
    GoogleMapsUnityClientInfo:
      description: Client information.
      example:
        applicationVersion: applicationVersion
        apiClient: apiClient
        operatingSystemBuild: operatingSystemBuild
        deviceModel: deviceModel
        applicationId: applicationId
        languageCode: languageCode
        operatingSystem: operatingSystem
        platform: PLATFORM_UNSPECIFIED
      properties:
        apiClient:
          description: "API client name and version. For example, the SDK calling\
            \ the API. The exact format is up to the client."
          title: apiClient
          type: string
        applicationId:
          description: "Application ID, such as the package name on Android and the\
            \ bundle identifier on iOS platforms."
          title: applicationId
          type: string
        applicationVersion:
          description: "Application version number, such as \"1.2.3\". The exact format\
            \ is application-dependent."
          title: applicationVersion
          type: string
        deviceModel:
          description: Device model as reported by the device. The exact format is
            platform-dependent.
          title: deviceModel
          type: string
        languageCode:
          description: "Language code (in BCP-47 format) indicating the UI language\
            \ of the client. Examples are \"en\", \"en-US\" or \"ja-Latn\". For more\
            \ information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
          title: languageCode
          type: string
        operatingSystem:
          description: "Operating system name and version as reported by the OS. For\
            \ example, \"Mac OS X 10.10.4\". The exact format is platform-dependent."
          title: operatingSystem
          type: string
        operatingSystemBuild:
          description: "Build number/version of the operating system. e.g., the contents\
            \ of android.os.Build.ID in Android, or the contents of sysctl \"kern.osversion\"\
            \ in iOS."
          title: operatingSystemBuild
          type: string
        platform:
          description: Platform where the application is running.
          enum:
          - PLATFORM_UNSPECIFIED
          - EDITOR
          - MAC_OS
          - WINDOWS
          - LINUX
          - ANDROID
          - IOS
          - WEB_GL
          title: platform
          type: string
      title: GoogleMapsUnityClientInfo
      type: object
    GoogleTypeLatLng:
      description: "An object that represents a latitude/longitude pair. This is expressed\
        \ as a pair of doubles to represent degrees latitude and degrees longitude.\
        \ Unless specified otherwise, this object must conform to the WGS84 standard.\
        \ Values must be within normalized ranges."
      example:
        latitude: 0.8008281904610115
        longitude: 6.027456183070403
      properties:
        latitude:
          description: "The latitude in degrees. It must be in the range [-90.0, +90.0]."
          format: double
          title: latitude
          type: number
        longitude:
          description: "The longitude in degrees. It must be in the range [-180.0,\
            \ +180.0]."
          format: double
          title: longitude
          type: number
      title: GoogleTypeLatLng
      type: object
