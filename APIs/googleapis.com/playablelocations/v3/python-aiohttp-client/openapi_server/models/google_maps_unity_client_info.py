# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleMapsUnityClientInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_client: str=None, application_id: str=None, application_version: str=None, device_model: str=None, language_code: str=None, operating_system: str=None, operating_system_build: str=None, platform: str=None):
        """GoogleMapsUnityClientInfo - a model defined in OpenAPI

        :param api_client: The api_client of this GoogleMapsUnityClientInfo.
        :param application_id: The application_id of this GoogleMapsUnityClientInfo.
        :param application_version: The application_version of this GoogleMapsUnityClientInfo.
        :param device_model: The device_model of this GoogleMapsUnityClientInfo.
        :param language_code: The language_code of this GoogleMapsUnityClientInfo.
        :param operating_system: The operating_system of this GoogleMapsUnityClientInfo.
        :param operating_system_build: The operating_system_build of this GoogleMapsUnityClientInfo.
        :param platform: The platform of this GoogleMapsUnityClientInfo.
        """
        self.openapi_types = {
            'api_client': str,
            'application_id': str,
            'application_version': str,
            'device_model': str,
            'language_code': str,
            'operating_system': str,
            'operating_system_build': str,
            'platform': str
        }

        self.attribute_map = {
            'api_client': 'apiClient',
            'application_id': 'applicationId',
            'application_version': 'applicationVersion',
            'device_model': 'deviceModel',
            'language_code': 'languageCode',
            'operating_system': 'operatingSystem',
            'operating_system_build': 'operatingSystemBuild',
            'platform': 'platform'
        }

        self._api_client = api_client
        self._application_id = application_id
        self._application_version = application_version
        self._device_model = device_model
        self._language_code = language_code
        self._operating_system = operating_system
        self._operating_system_build = operating_system_build
        self._platform = platform

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsUnityClientInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsUnityClientInfo of this GoogleMapsUnityClientInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_client(self):
        """Gets the api_client of this GoogleMapsUnityClientInfo.

        API client name and version. For example, the SDK calling the API. The exact format is up to the client.

        :return: The api_client of this GoogleMapsUnityClientInfo.
        :rtype: str
        """
        return self._api_client

    @api_client.setter
    def api_client(self, api_client):
        """Sets the api_client of this GoogleMapsUnityClientInfo.

        API client name and version. For example, the SDK calling the API. The exact format is up to the client.

        :param api_client: The api_client of this GoogleMapsUnityClientInfo.
        :type api_client: str
        """

        self._api_client = api_client

    @property
    def application_id(self):
        """Gets the application_id of this GoogleMapsUnityClientInfo.

        Application ID, such as the package name on Android and the bundle identifier on iOS platforms.

        :return: The application_id of this GoogleMapsUnityClientInfo.
        :rtype: str
        """
        return self._application_id

    @application_id.setter
    def application_id(self, application_id):
        """Sets the application_id of this GoogleMapsUnityClientInfo.

        Application ID, such as the package name on Android and the bundle identifier on iOS platforms.

        :param application_id: The application_id of this GoogleMapsUnityClientInfo.
        :type application_id: str
        """

        self._application_id = application_id

    @property
    def application_version(self):
        """Gets the application_version of this GoogleMapsUnityClientInfo.

        Application version number, such as \"1.2.3\". The exact format is application-dependent.

        :return: The application_version of this GoogleMapsUnityClientInfo.
        :rtype: str
        """
        return self._application_version

    @application_version.setter
    def application_version(self, application_version):
        """Sets the application_version of this GoogleMapsUnityClientInfo.

        Application version number, such as \"1.2.3\". The exact format is application-dependent.

        :param application_version: The application_version of this GoogleMapsUnityClientInfo.
        :type application_version: str
        """

        self._application_version = application_version

    @property
    def device_model(self):
        """Gets the device_model of this GoogleMapsUnityClientInfo.

        Device model as reported by the device. The exact format is platform-dependent.

        :return: The device_model of this GoogleMapsUnityClientInfo.
        :rtype: str
        """
        return self._device_model

    @device_model.setter
    def device_model(self, device_model):
        """Sets the device_model of this GoogleMapsUnityClientInfo.

        Device model as reported by the device. The exact format is platform-dependent.

        :param device_model: The device_model of this GoogleMapsUnityClientInfo.
        :type device_model: str
        """

        self._device_model = device_model

    @property
    def language_code(self):
        """Gets the language_code of this GoogleMapsUnityClientInfo.

        Language code (in BCP-47 format) indicating the UI language of the client. Examples are \"en\", \"en-US\" or \"ja-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.

        :return: The language_code of this GoogleMapsUnityClientInfo.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this GoogleMapsUnityClientInfo.

        Language code (in BCP-47 format) indicating the UI language of the client. Examples are \"en\", \"en-US\" or \"ja-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.

        :param language_code: The language_code of this GoogleMapsUnityClientInfo.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def operating_system(self):
        """Gets the operating_system of this GoogleMapsUnityClientInfo.

        Operating system name and version as reported by the OS. For example, \"Mac OS X 10.10.4\". The exact format is platform-dependent.

        :return: The operating_system of this GoogleMapsUnityClientInfo.
        :rtype: str
        """
        return self._operating_system

    @operating_system.setter
    def operating_system(self, operating_system):
        """Sets the operating_system of this GoogleMapsUnityClientInfo.

        Operating system name and version as reported by the OS. For example, \"Mac OS X 10.10.4\". The exact format is platform-dependent.

        :param operating_system: The operating_system of this GoogleMapsUnityClientInfo.
        :type operating_system: str
        """

        self._operating_system = operating_system

    @property
    def operating_system_build(self):
        """Gets the operating_system_build of this GoogleMapsUnityClientInfo.

        Build number/version of the operating system. e.g., the contents of android.os.Build.ID in Android, or the contents of sysctl \"kern.osversion\" in iOS.

        :return: The operating_system_build of this GoogleMapsUnityClientInfo.
        :rtype: str
        """
        return self._operating_system_build

    @operating_system_build.setter
    def operating_system_build(self, operating_system_build):
        """Sets the operating_system_build of this GoogleMapsUnityClientInfo.

        Build number/version of the operating system. e.g., the contents of android.os.Build.ID in Android, or the contents of sysctl \"kern.osversion\" in iOS.

        :param operating_system_build: The operating_system_build of this GoogleMapsUnityClientInfo.
        :type operating_system_build: str
        """

        self._operating_system_build = operating_system_build

    @property
    def platform(self):
        """Gets the platform of this GoogleMapsUnityClientInfo.

        Platform where the application is running.

        :return: The platform of this GoogleMapsUnityClientInfo.
        :rtype: str
        """
        return self._platform

    @platform.setter
    def platform(self, platform):
        """Sets the platform of this GoogleMapsUnityClientInfo.

        Platform where the application is running.

        :param platform: The platform of this GoogleMapsUnityClientInfo.
        :type platform: str
        """
        allowed_values = ["PLATFORM_UNSPECIFIED", "EDITOR", "MAC_OS", "WINDOWS", "LINUX", "ANDROID", "IOS", "WEB_GL"]  # noqa: E501
        if platform not in allowed_values:
            raise ValueError(
                "Invalid value for `platform` ({0}), must be one of {1}"
                .format(platform, allowed_values)
            )

        self._platform = platform
