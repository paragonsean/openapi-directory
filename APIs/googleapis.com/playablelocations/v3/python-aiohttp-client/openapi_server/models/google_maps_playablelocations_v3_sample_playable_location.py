# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_type_lat_lng import GoogleTypeLatLng
from openapi_server import util


class GoogleMapsPlayablelocationsV3SamplePlayableLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, center_point: GoogleTypeLatLng=None, name: str=None, place_id: str=None, plus_code: str=None, snapped_point: GoogleTypeLatLng=None, types: List[str]=None):
        """GoogleMapsPlayablelocationsV3SamplePlayableLocation - a model defined in OpenAPI

        :param center_point: The center_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :param name: The name of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :param place_id: The place_id of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :param plus_code: The plus_code of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :param snapped_point: The snapped_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :param types: The types of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        """
        self.openapi_types = {
            'center_point': GoogleTypeLatLng,
            'name': str,
            'place_id': str,
            'plus_code': str,
            'snapped_point': GoogleTypeLatLng,
            'types': List[str]
        }

        self.attribute_map = {
            'center_point': 'centerPoint',
            'name': 'name',
            'place_id': 'placeId',
            'plus_code': 'plusCode',
            'snapped_point': 'snappedPoint',
            'types': 'types'
        }

        self._center_point = center_point
        self._name = name
        self._place_id = place_id
        self._plus_code = plus_code
        self._snapped_point = snapped_point
        self._types = types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlayablelocationsV3SamplePlayableLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlayablelocationsV3SamplePlayableLocation of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def center_point(self):
        """Gets the center_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.


        :return: The center_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :rtype: GoogleTypeLatLng
        """
        return self._center_point

    @center_point.setter
    def center_point(self, center_point):
        """Sets the center_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.


        :param center_point: The center_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :type center_point: GoogleTypeLatLng
        """

        self._center_point = center_point

    @property
    def name(self):
        """Gets the name of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.

        Required. The name of this playable location.

        :return: The name of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.

        Required. The name of this playable location.

        :param name: The name of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :type name: str
        """

        self._name = name

    @property
    def place_id(self):
        """Gets the place_id of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.

        A [place ID] (https://developers.google.com/places/place-id)

        :return: The place_id of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :rtype: str
        """
        return self._place_id

    @place_id.setter
    def place_id(self, place_id):
        """Sets the place_id of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.

        A [place ID] (https://developers.google.com/places/place-id)

        :param place_id: The place_id of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :type place_id: str
        """

        self._place_id = place_id

    @property
    def plus_code(self):
        """Gets the plus_code of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.

        A [plus code] (http://openlocationcode.com)

        :return: The plus_code of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :rtype: str
        """
        return self._plus_code

    @plus_code.setter
    def plus_code(self, plus_code):
        """Sets the plus_code of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.

        A [plus code] (http://openlocationcode.com)

        :param plus_code: The plus_code of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :type plus_code: str
        """

        self._plus_code = plus_code

    @property
    def snapped_point(self):
        """Gets the snapped_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.


        :return: The snapped_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :rtype: GoogleTypeLatLng
        """
        return self._snapped_point

    @snapped_point.setter
    def snapped_point(self, snapped_point):
        """Sets the snapped_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.


        :param snapped_point: The snapped_point of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :type snapped_point: GoogleTypeLatLng
        """

        self._snapped_point = snapped_point

    @property
    def types(self):
        """Gets the types of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.

        A collection of [Playable Location Types](/maps/documentation/gaming/tt/types) for this playable location. The first type in the collection is the primary type. Type information might not be available for all playable locations.

        :return: The types of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :rtype: List[str]
        """
        return self._types

    @types.setter
    def types(self, types):
        """Sets the types of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.

        A collection of [Playable Location Types](/maps/documentation/gaming/tt/types) for this playable location. The first type in the collection is the primary type. Type information might not be available for all playable locations.

        :param types: The types of this GoogleMapsPlayablelocationsV3SamplePlayableLocation.
        :type types: List[str]
        """

        self._types = types
