# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_maps_playablelocations_v3_impression import GoogleMapsPlayablelocationsV3Impression
from openapi_server.models.google_maps_unity_client_info import GoogleMapsUnityClientInfo
from openapi_server import util


class GoogleMapsPlayablelocationsV3LogImpressionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_info: GoogleMapsUnityClientInfo=None, impressions: List[GoogleMapsPlayablelocationsV3Impression]=None, request_id: str=None):
        """GoogleMapsPlayablelocationsV3LogImpressionsRequest - a model defined in OpenAPI

        :param client_info: The client_info of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        :param impressions: The impressions of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        :param request_id: The request_id of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        """
        self.openapi_types = {
            'client_info': GoogleMapsUnityClientInfo,
            'impressions': List[GoogleMapsPlayablelocationsV3Impression],
            'request_id': str
        }

        self.attribute_map = {
            'client_info': 'clientInfo',
            'impressions': 'impressions',
            'request_id': 'requestId'
        }

        self._client_info = client_info
        self._impressions = impressions
        self._request_id = request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlayablelocationsV3LogImpressionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlayablelocationsV3LogImpressionsRequest of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_info(self):
        """Gets the client_info of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.


        :return: The client_info of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        :rtype: GoogleMapsUnityClientInfo
        """
        return self._client_info

    @client_info.setter
    def client_info(self, client_info):
        """Sets the client_info of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.


        :param client_info: The client_info of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        :type client_info: GoogleMapsUnityClientInfo
        """

        self._client_info = client_info

    @property
    def impressions(self):
        """Gets the impressions of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.

        Required. Impression event details. The maximum number of impression reports that you can log at once is 50.

        :return: The impressions of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        :rtype: List[GoogleMapsPlayablelocationsV3Impression]
        """
        return self._impressions

    @impressions.setter
    def impressions(self, impressions):
        """Sets the impressions of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.

        Required. Impression event details. The maximum number of impression reports that you can log at once is 50.

        :param impressions: The impressions of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        :type impressions: List[GoogleMapsPlayablelocationsV3Impression]
        """

        self._impressions = impressions

    @property
    def request_id(self):
        """Gets the request_id of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.

        Required. A string that uniquely identifies the log impressions request. This allows you to detect duplicate requests. We recommend that you use UUIDs for this value. The value must not exceed 50 characters. You should reuse the `request_id` only when retrying a request in case of failure. In this case, the request must be identical to the one that failed.

        :return: The request_id of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.

        Required. A string that uniquely identifies the log impressions request. This allows you to detect duplicate requests. We recommend that you use UUIDs for this value. The value must not exceed 50 characters. You should reuse the `request_id` only when retrying a request in case of failure. In this case, the request must be identical to the one that failed.

        :param request_id: The request_id of this GoogleMapsPlayablelocationsV3LogImpressionsRequest.
        :type request_id: str
        """

        self._request_id = request_id
