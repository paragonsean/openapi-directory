# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_maps_playablelocations_v3_sample_spacing_options import GoogleMapsPlayablelocationsV3SampleSpacingOptions
from openapi_server import util


class GoogleMapsPlayablelocationsV3SampleFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, included_types: List[str]=None, max_location_count: int=None, spacing: GoogleMapsPlayablelocationsV3SampleSpacingOptions=None):
        """GoogleMapsPlayablelocationsV3SampleFilter - a model defined in OpenAPI

        :param included_types: The included_types of this GoogleMapsPlayablelocationsV3SampleFilter.
        :param max_location_count: The max_location_count of this GoogleMapsPlayablelocationsV3SampleFilter.
        :param spacing: The spacing of this GoogleMapsPlayablelocationsV3SampleFilter.
        """
        self.openapi_types = {
            'included_types': List[str],
            'max_location_count': int,
            'spacing': GoogleMapsPlayablelocationsV3SampleSpacingOptions
        }

        self.attribute_map = {
            'included_types': 'includedTypes',
            'max_location_count': 'maxLocationCount',
            'spacing': 'spacing'
        }

        self._included_types = included_types
        self._max_location_count = max_location_count
        self._spacing = spacing

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlayablelocationsV3SampleFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlayablelocationsV3SampleFilter of this GoogleMapsPlayablelocationsV3SampleFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def included_types(self):
        """Gets the included_types of this GoogleMapsPlayablelocationsV3SampleFilter.

        Restricts the set of playable locations to just the [types](/maps/documentation/gaming/tt/types) that you want.

        :return: The included_types of this GoogleMapsPlayablelocationsV3SampleFilter.
        :rtype: List[str]
        """
        return self._included_types

    @included_types.setter
    def included_types(self, included_types):
        """Sets the included_types of this GoogleMapsPlayablelocationsV3SampleFilter.

        Restricts the set of playable locations to just the [types](/maps/documentation/gaming/tt/types) that you want.

        :param included_types: The included_types of this GoogleMapsPlayablelocationsV3SampleFilter.
        :type included_types: List[str]
        """

        self._included_types = included_types

    @property
    def max_location_count(self):
        """Gets the max_location_count of this GoogleMapsPlayablelocationsV3SampleFilter.

        Specifies the maximum number of playable locations to return. This value must not be greater than 1000. The default value is 100. Only the top-ranking playable locations are returned.

        :return: The max_location_count of this GoogleMapsPlayablelocationsV3SampleFilter.
        :rtype: int
        """
        return self._max_location_count

    @max_location_count.setter
    def max_location_count(self, max_location_count):
        """Sets the max_location_count of this GoogleMapsPlayablelocationsV3SampleFilter.

        Specifies the maximum number of playable locations to return. This value must not be greater than 1000. The default value is 100. Only the top-ranking playable locations are returned.

        :param max_location_count: The max_location_count of this GoogleMapsPlayablelocationsV3SampleFilter.
        :type max_location_count: int
        """

        self._max_location_count = max_location_count

    @property
    def spacing(self):
        """Gets the spacing of this GoogleMapsPlayablelocationsV3SampleFilter.


        :return: The spacing of this GoogleMapsPlayablelocationsV3SampleFilter.
        :rtype: GoogleMapsPlayablelocationsV3SampleSpacingOptions
        """
        return self._spacing

    @spacing.setter
    def spacing(self, spacing):
        """Sets the spacing of this GoogleMapsPlayablelocationsV3SampleFilter.


        :param spacing: The spacing of this GoogleMapsPlayablelocationsV3SampleFilter.
        :type spacing: GoogleMapsPlayablelocationsV3SampleSpacingOptions
        """

        self._spacing = spacing
