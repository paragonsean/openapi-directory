# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_maps_playablelocations_v3_sample_area_filter import GoogleMapsPlayablelocationsV3SampleAreaFilter
from openapi_server.models.google_maps_playablelocations_v3_sample_criterion import GoogleMapsPlayablelocationsV3SampleCriterion
from openapi_server import util


class GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area_filter: GoogleMapsPlayablelocationsV3SampleAreaFilter=None, criteria: List[GoogleMapsPlayablelocationsV3SampleCriterion]=None):
        """GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest - a model defined in OpenAPI

        :param area_filter: The area_filter of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.
        :param criteria: The criteria of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.
        """
        self.openapi_types = {
            'area_filter': GoogleMapsPlayablelocationsV3SampleAreaFilter,
            'criteria': List[GoogleMapsPlayablelocationsV3SampleCriterion]
        }

        self.attribute_map = {
            'area_filter': 'areaFilter',
            'criteria': 'criteria'
        }

        self._area_filter = area_filter
        self._criteria = criteria

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area_filter(self):
        """Gets the area_filter of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.


        :return: The area_filter of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.
        :rtype: GoogleMapsPlayablelocationsV3SampleAreaFilter
        """
        return self._area_filter

    @area_filter.setter
    def area_filter(self, area_filter):
        """Sets the area_filter of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.


        :param area_filter: The area_filter of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.
        :type area_filter: GoogleMapsPlayablelocationsV3SampleAreaFilter
        """

        self._area_filter = area_filter

    @property
    def criteria(self):
        """Gets the criteria of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.

        Required. Specifies one or more (up to 5) criteria for filtering the returned playable locations.

        :return: The criteria of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.
        :rtype: List[GoogleMapsPlayablelocationsV3SampleCriterion]
        """
        return self._criteria

    @criteria.setter
    def criteria(self, criteria):
        """Sets the criteria of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.

        Required. Specifies one or more (up to 5) criteria for filtering the returned playable locations.

        :param criteria: The criteria of this GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest.
        :type criteria: List[GoogleMapsPlayablelocationsV3SampleCriterion]
        """

        self._criteria = criteria
