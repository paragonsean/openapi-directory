/**
 * Playable Locations API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleMapsPlayablelocationsV3PlayerReport model module.
 * @module model/GoogleMapsPlayablelocationsV3PlayerReport
 * @version v3
 */
class GoogleMapsPlayablelocationsV3PlayerReport {
    /**
     * Constructs a new <code>GoogleMapsPlayablelocationsV3PlayerReport</code>.
     * A report submitted by a player about a playable location that is considered inappropriate for use in the game.
     * @alias module:model/GoogleMapsPlayablelocationsV3PlayerReport
     */
    constructor() { 
        
        GoogleMapsPlayablelocationsV3PlayerReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlayablelocationsV3PlayerReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlayablelocationsV3PlayerReport} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlayablelocationsV3PlayerReport} The populated <code>GoogleMapsPlayablelocationsV3PlayerReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlayablelocationsV3PlayerReport();

            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
            if (data.hasOwnProperty('locationName')) {
                obj['locationName'] = ApiClient.convertToType(data['locationName'], 'String');
            }
            if (data.hasOwnProperty('reasonDetails')) {
                obj['reasonDetails'] = ApiClient.convertToType(data['reasonDetails'], 'String');
            }
            if (data.hasOwnProperty('reasons')) {
                obj['reasons'] = ApiClient.convertToType(data['reasons'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlayablelocationsV3PlayerReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlayablelocationsV3PlayerReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }
        // ensure the json data is a string
        if (data['locationName'] && !(typeof data['locationName'] === 'string' || data['locationName'] instanceof String)) {
            throw new Error("Expected the field `locationName` to be a primitive type in the JSON string but got " + data['locationName']);
        }
        // ensure the json data is a string
        if (data['reasonDetails'] && !(typeof data['reasonDetails'] === 'string' || data['reasonDetails'] instanceof String)) {
            throw new Error("Expected the field `reasonDetails` to be a primitive type in the JSON string but got " + data['reasonDetails']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reasons'])) {
            throw new Error("Expected the field `reasons` to be an array in the JSON data but got " + data['reasons']);
        }

        return true;
    }


}



/**
 * Language code (in BCP-47 format) indicating the language of the freeform description provided in `reason_details`. Examples are \"en\", \"en-US\" or \"ja-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
 * @member {String} languageCode
 */
GoogleMapsPlayablelocationsV3PlayerReport.prototype['languageCode'] = undefined;

/**
 * Required. The name of the playable location.
 * @member {String} locationName
 */
GoogleMapsPlayablelocationsV3PlayerReport.prototype['locationName'] = undefined;

/**
 * Required. A free-form description detailing why the playable location is considered bad.
 * @member {String} reasonDetails
 */
GoogleMapsPlayablelocationsV3PlayerReport.prototype['reasonDetails'] = undefined;

/**
 * Required. One or more reasons why this playable location is considered bad.
 * @member {Array.<module:model/GoogleMapsPlayablelocationsV3PlayerReport.ReasonsEnum>} reasons
 */
GoogleMapsPlayablelocationsV3PlayerReport.prototype['reasons'] = undefined;





/**
 * Allowed values for the <code>reasons</code> property.
 * @enum {String}
 * @readonly
 */
GoogleMapsPlayablelocationsV3PlayerReport['ReasonsEnum'] = {

    /**
     * value: "BAD_LOCATION_REASON_UNSPECIFIED"
     * @const
     */
    "BAD_LOCATION_REASON_UNSPECIFIED": "BAD_LOCATION_REASON_UNSPECIFIED",

    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER",

    /**
     * value: "NOT_PEDESTRIAN_ACCESSIBLE"
     * @const
     */
    "NOT_PEDESTRIAN_ACCESSIBLE": "NOT_PEDESTRIAN_ACCESSIBLE",

    /**
     * value: "NOT_OPEN_TO_PUBLIC"
     * @const
     */
    "NOT_OPEN_TO_PUBLIC": "NOT_OPEN_TO_PUBLIC",

    /**
     * value: "PERMANENTLY_CLOSED"
     * @const
     */
    "PERMANENTLY_CLOSED": "PERMANENTLY_CLOSED",

    /**
     * value: "TEMPORARILY_INACCESSIBLE"
     * @const
     */
    "TEMPORARILY_INACCESSIBLE": "TEMPORARILY_INACCESSIBLE"
};



export default GoogleMapsPlayablelocationsV3PlayerReport;

