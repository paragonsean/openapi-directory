/**
 * Playable Locations API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleMapsPlayablelocationsV3SampleFilter from './GoogleMapsPlayablelocationsV3SampleFilter';

/**
 * The GoogleMapsPlayablelocationsV3SampleCriterion model module.
 * @module model/GoogleMapsPlayablelocationsV3SampleCriterion
 * @version v3
 */
class GoogleMapsPlayablelocationsV3SampleCriterion {
    /**
     * Constructs a new <code>GoogleMapsPlayablelocationsV3SampleCriterion</code>.
     * Encapsulates a filter criterion for searching for a set of playable locations.
     * @alias module:model/GoogleMapsPlayablelocationsV3SampleCriterion
     */
    constructor() { 
        
        GoogleMapsPlayablelocationsV3SampleCriterion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlayablelocationsV3SampleCriterion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlayablelocationsV3SampleCriterion} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlayablelocationsV3SampleCriterion} The populated <code>GoogleMapsPlayablelocationsV3SampleCriterion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlayablelocationsV3SampleCriterion();

            if (data.hasOwnProperty('fieldsToReturn')) {
                obj['fieldsToReturn'] = ApiClient.convertToType(data['fieldsToReturn'], 'String');
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = GoogleMapsPlayablelocationsV3SampleFilter.constructFromObject(data['filter']);
            }
            if (data.hasOwnProperty('gameObjectType')) {
                obj['gameObjectType'] = ApiClient.convertToType(data['gameObjectType'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlayablelocationsV3SampleCriterion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlayablelocationsV3SampleCriterion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fieldsToReturn'] && !(typeof data['fieldsToReturn'] === 'string' || data['fieldsToReturn'] instanceof String)) {
            throw new Error("Expected the field `fieldsToReturn` to be a primitive type in the JSON string but got " + data['fieldsToReturn']);
        }
        // validate the optional field `filter`
        if (data['filter']) { // data not null
          GoogleMapsPlayablelocationsV3SampleFilter.validateJSON(data['filter']);
        }

        return true;
    }


}



/**
 * Specifies which `PlayableLocation` fields are returned. `name` (which is used for logging impressions), `center_point` and `place_id` (or `plus_code`) are always returned. The following fields are omitted unless you specify them here: * snapped_point * types Note: The more fields you include, the more expensive in terms of data and associated latency your query will be.
 * @member {String} fieldsToReturn
 */
GoogleMapsPlayablelocationsV3SampleCriterion.prototype['fieldsToReturn'] = undefined;

/**
 * @member {module:model/GoogleMapsPlayablelocationsV3SampleFilter} filter
 */
GoogleMapsPlayablelocationsV3SampleCriterion.prototype['filter'] = undefined;

/**
 * Required. An arbitrary, developer-defined identifier of the type of game object that the playable location is used for. This field allows you to specify criteria per game object type when searching for playable locations. You should assign a unique `game_object_type` ID across all `request_criteria` to represent a distinct type of game object. For example, 1=monster location, 2=powerup location. The response contains a map.
 * @member {Number} gameObjectType
 */
GoogleMapsPlayablelocationsV3SampleCriterion.prototype['gameObjectType'] = undefined;






export default GoogleMapsPlayablelocationsV3SampleCriterion;

