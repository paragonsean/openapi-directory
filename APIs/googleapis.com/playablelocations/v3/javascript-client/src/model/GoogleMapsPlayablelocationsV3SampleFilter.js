/**
 * Playable Locations API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleMapsPlayablelocationsV3SampleSpacingOptions from './GoogleMapsPlayablelocationsV3SampleSpacingOptions';

/**
 * The GoogleMapsPlayablelocationsV3SampleFilter model module.
 * @module model/GoogleMapsPlayablelocationsV3SampleFilter
 * @version v3
 */
class GoogleMapsPlayablelocationsV3SampleFilter {
    /**
     * Constructs a new <code>GoogleMapsPlayablelocationsV3SampleFilter</code>.
     * Specifies the filters to use when searching for playable locations.
     * @alias module:model/GoogleMapsPlayablelocationsV3SampleFilter
     */
    constructor() { 
        
        GoogleMapsPlayablelocationsV3SampleFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlayablelocationsV3SampleFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlayablelocationsV3SampleFilter} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlayablelocationsV3SampleFilter} The populated <code>GoogleMapsPlayablelocationsV3SampleFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlayablelocationsV3SampleFilter();

            if (data.hasOwnProperty('includedTypes')) {
                obj['includedTypes'] = ApiClient.convertToType(data['includedTypes'], ['String']);
            }
            if (data.hasOwnProperty('maxLocationCount')) {
                obj['maxLocationCount'] = ApiClient.convertToType(data['maxLocationCount'], 'Number');
            }
            if (data.hasOwnProperty('spacing')) {
                obj['spacing'] = GoogleMapsPlayablelocationsV3SampleSpacingOptions.constructFromObject(data['spacing']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlayablelocationsV3SampleFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlayablelocationsV3SampleFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['includedTypes'])) {
            throw new Error("Expected the field `includedTypes` to be an array in the JSON data but got " + data['includedTypes']);
        }
        // validate the optional field `spacing`
        if (data['spacing']) { // data not null
          GoogleMapsPlayablelocationsV3SampleSpacingOptions.validateJSON(data['spacing']);
        }

        return true;
    }


}



/**
 * Restricts the set of playable locations to just the [types](/maps/documentation/gaming/tt/types) that you want.
 * @member {Array.<String>} includedTypes
 */
GoogleMapsPlayablelocationsV3SampleFilter.prototype['includedTypes'] = undefined;

/**
 * Specifies the maximum number of playable locations to return. This value must not be greater than 1000. The default value is 100. Only the top-ranking playable locations are returned.
 * @member {Number} maxLocationCount
 */
GoogleMapsPlayablelocationsV3SampleFilter.prototype['maxLocationCount'] = undefined;

/**
 * @member {module:model/GoogleMapsPlayablelocationsV3SampleSpacingOptions} spacing
 */
GoogleMapsPlayablelocationsV3SampleFilter.prototype['spacing'] = undefined;






export default GoogleMapsPlayablelocationsV3SampleFilter;

