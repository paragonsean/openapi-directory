/**
 * Playable Locations API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GoogleMapsPlayablelocationsV3SampleAreaFilter model module.
 * @module model/GoogleMapsPlayablelocationsV3SampleAreaFilter
 * @version v3
 */
class GoogleMapsPlayablelocationsV3SampleAreaFilter {
    /**
     * Constructs a new <code>GoogleMapsPlayablelocationsV3SampleAreaFilter</code>.
     * Specifies the area to search for playable locations.
     * @alias module:model/GoogleMapsPlayablelocationsV3SampleAreaFilter
     */
    constructor() { 
        
        GoogleMapsPlayablelocationsV3SampleAreaFilter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlayablelocationsV3SampleAreaFilter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlayablelocationsV3SampleAreaFilter} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlayablelocationsV3SampleAreaFilter} The populated <code>GoogleMapsPlayablelocationsV3SampleAreaFilter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlayablelocationsV3SampleAreaFilter();

            if (data.hasOwnProperty('s2CellId')) {
                obj['s2CellId'] = ApiClient.convertToType(data['s2CellId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlayablelocationsV3SampleAreaFilter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlayablelocationsV3SampleAreaFilter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['s2CellId'] && !(typeof data['s2CellId'] === 'string' || data['s2CellId'] instanceof String)) {
            throw new Error("Expected the field `s2CellId` to be a primitive type in the JSON string but got " + data['s2CellId']);
        }

        return true;
    }


}



/**
 * Required. The S2 cell ID of the area you want. This must be between cell level 11 and 14 (inclusive). S2 cells are 64-bit integers that identify areas on the Earth. They are hierarchical, and can therefore be used for spatial indexing. The S2 geometry library is available in a number of languages: * [C++](https://github.com/google/s2geometry) * [Java](https://github.com/google/s2-geometry-library-java) * [Go](https://github.com/golang/geo) * [Python](https://github.com/google/s2geometry/tree/master/src/python)
 * @member {String} s2CellId
 */
GoogleMapsPlayablelocationsV3SampleAreaFilter.prototype['s2CellId'] = undefined;






export default GoogleMapsPlayablelocationsV3SampleAreaFilter;

