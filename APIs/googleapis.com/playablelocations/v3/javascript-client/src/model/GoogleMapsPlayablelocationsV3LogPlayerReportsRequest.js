/**
 * Playable Locations API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleMapsPlayablelocationsV3PlayerReport from './GoogleMapsPlayablelocationsV3PlayerReport';
import GoogleMapsUnityClientInfo from './GoogleMapsUnityClientInfo';

/**
 * The GoogleMapsPlayablelocationsV3LogPlayerReportsRequest model module.
 * @module model/GoogleMapsPlayablelocationsV3LogPlayerReportsRequest
 * @version v3
 */
class GoogleMapsPlayablelocationsV3LogPlayerReportsRequest {
    /**
     * Constructs a new <code>GoogleMapsPlayablelocationsV3LogPlayerReportsRequest</code>.
     * A request for logging your player&#39;s bad location reports.
     * @alias module:model/GoogleMapsPlayablelocationsV3LogPlayerReportsRequest
     */
    constructor() { 
        
        GoogleMapsPlayablelocationsV3LogPlayerReportsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleMapsPlayablelocationsV3LogPlayerReportsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleMapsPlayablelocationsV3LogPlayerReportsRequest} obj Optional instance to populate.
     * @return {module:model/GoogleMapsPlayablelocationsV3LogPlayerReportsRequest} The populated <code>GoogleMapsPlayablelocationsV3LogPlayerReportsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleMapsPlayablelocationsV3LogPlayerReportsRequest();

            if (data.hasOwnProperty('clientInfo')) {
                obj['clientInfo'] = GoogleMapsUnityClientInfo.constructFromObject(data['clientInfo']);
            }
            if (data.hasOwnProperty('playerReports')) {
                obj['playerReports'] = ApiClient.convertToType(data['playerReports'], [GoogleMapsPlayablelocationsV3PlayerReport]);
            }
            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleMapsPlayablelocationsV3LogPlayerReportsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleMapsPlayablelocationsV3LogPlayerReportsRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `clientInfo`
        if (data['clientInfo']) { // data not null
          GoogleMapsUnityClientInfo.validateJSON(data['clientInfo']);
        }
        if (data['playerReports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['playerReports'])) {
                throw new Error("Expected the field `playerReports` to be an array in the JSON data but got " + data['playerReports']);
            }
            // validate the optional field `playerReports` (array)
            for (const item of data['playerReports']) {
                GoogleMapsPlayablelocationsV3PlayerReport.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['requestId'] && !(typeof data['requestId'] === 'string' || data['requestId'] instanceof String)) {
            throw new Error("Expected the field `requestId` to be a primitive type in the JSON string but got " + data['requestId']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleMapsUnityClientInfo} clientInfo
 */
GoogleMapsPlayablelocationsV3LogPlayerReportsRequest.prototype['clientInfo'] = undefined;

/**
 * Required. Player reports. The maximum number of player reports that you can log at once is 50.
 * @member {Array.<module:model/GoogleMapsPlayablelocationsV3PlayerReport>} playerReports
 */
GoogleMapsPlayablelocationsV3LogPlayerReportsRequest.prototype['playerReports'] = undefined;

/**
 * Required. A string that uniquely identifies the log player reports request. This allows you to detect duplicate requests. We recommend that you use UUIDs for this value. The value must not exceed 50 characters. You should reuse the `request_id` only when retrying a request in the case of a failure. In that case, the request must be identical to the one that failed.
 * @member {String} requestId
 */
GoogleMapsPlayablelocationsV3LogPlayerReportsRequest.prototype['requestId'] = undefined;






export default GoogleMapsPlayablelocationsV3LogPlayerReportsRequest;

