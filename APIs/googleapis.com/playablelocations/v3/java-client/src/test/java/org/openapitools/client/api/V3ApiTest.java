/*
 * Playable Locations API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleMapsPlayablelocationsV3LogImpressionsRequest;
import org.openapitools.client.model.GoogleMapsPlayablelocationsV3LogPlayerReportsRequest;
import org.openapitools.client.model.GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest;
import org.openapitools.client.model.GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for V3Api
 */
@Disabled
public class V3ApiTest {

    private final V3Api api = new V3Api();

    /**
     * Logs new events when playable locations are displayed, and when they are interacted with. Impressions are not partially saved; either all impressions are saved and this request succeeds, or no impressions are saved, and this request fails.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playablelocationsLogImpressionsTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleMapsPlayablelocationsV3LogImpressionsRequest googleMapsPlayablelocationsV3LogImpressionsRequest = null;
        Object response = api.playablelocationsLogImpressions($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleMapsPlayablelocationsV3LogImpressionsRequest);
        // TODO: test validations
    }

    /**
     * Logs bad playable location reports submitted by players. Reports are not partially saved; either all reports are saved and this request succeeds, or no reports are saved, and this request fails.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playablelocationsLogPlayerReportsTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleMapsPlayablelocationsV3LogPlayerReportsRequest googleMapsPlayablelocationsV3LogPlayerReportsRequest = null;
        Object response = api.playablelocationsLogPlayerReports($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleMapsPlayablelocationsV3LogPlayerReportsRequest);
        // TODO: test validations
    }

    /**
     * Returns a set of playable locations that lie within a specified area, that satisfy optional filter criteria. Note: Identical &#x60;SamplePlayableLocations&#x60; requests can return different results as the state of the world changes over time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playablelocationsSamplePlayableLocationsTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        GoogleMapsPlayablelocationsV3SamplePlayableLocationsRequest googleMapsPlayablelocationsV3SamplePlayableLocationsRequest = null;
        GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse response = api.playablelocationsSamplePlayableLocations($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, googleMapsPlayablelocationsV3SamplePlayableLocationsRequest);
        // TODO: test validations
    }

}
