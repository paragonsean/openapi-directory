/*
 * Playable Locations API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Client information.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:36:14.298779-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleMapsUnityClientInfo {
  public static final String SERIALIZED_NAME_API_CLIENT = "apiClient";
  @SerializedName(SERIALIZED_NAME_API_CLIENT)
  private String _apiClient;

  public static final String SERIALIZED_NAME_APPLICATION_ID = "applicationId";
  @SerializedName(SERIALIZED_NAME_APPLICATION_ID)
  private String applicationId;

  public static final String SERIALIZED_NAME_APPLICATION_VERSION = "applicationVersion";
  @SerializedName(SERIALIZED_NAME_APPLICATION_VERSION)
  private String applicationVersion;

  public static final String SERIALIZED_NAME_DEVICE_MODEL = "deviceModel";
  @SerializedName(SERIALIZED_NAME_DEVICE_MODEL)
  private String deviceModel;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_OPERATING_SYSTEM = "operatingSystem";
  @SerializedName(SERIALIZED_NAME_OPERATING_SYSTEM)
  private String operatingSystem;

  public static final String SERIALIZED_NAME_OPERATING_SYSTEM_BUILD = "operatingSystemBuild";
  @SerializedName(SERIALIZED_NAME_OPERATING_SYSTEM_BUILD)
  private String operatingSystemBuild;

  /**
   * Platform where the application is running.
   */
  @JsonAdapter(PlatformEnum.Adapter.class)
  public enum PlatformEnum {
    PLATFORM_UNSPECIFIED("PLATFORM_UNSPECIFIED"),
    
    EDITOR("EDITOR"),
    
    MAC_OS("MAC_OS"),
    
    WINDOWS("WINDOWS"),
    
    LINUX("LINUX"),
    
    ANDROID("ANDROID"),
    
    IOS("IOS"),
    
    WEB_GL("WEB_GL");

    private String value;

    PlatformEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PlatformEnum fromValue(String value) {
      for (PlatformEnum b : PlatformEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PlatformEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PlatformEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PlatformEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PlatformEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      PlatformEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_PLATFORM = "platform";
  @SerializedName(SERIALIZED_NAME_PLATFORM)
  private PlatformEnum platform;

  public GoogleMapsUnityClientInfo() {
  }

  public GoogleMapsUnityClientInfo _apiClient(String _apiClient) {
    this._apiClient = _apiClient;
    return this;
  }

  /**
   * API client name and version. For example, the SDK calling the API. The exact format is up to the client.
   * @return _apiClient
   */
  @javax.annotation.Nullable
  public String getApiClient() {
    return _apiClient;
  }

  public void setApiClient(String _apiClient) {
    this._apiClient = _apiClient;
  }


  public GoogleMapsUnityClientInfo applicationId(String applicationId) {
    this.applicationId = applicationId;
    return this;
  }

  /**
   * Application ID, such as the package name on Android and the bundle identifier on iOS platforms.
   * @return applicationId
   */
  @javax.annotation.Nullable
  public String getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(String applicationId) {
    this.applicationId = applicationId;
  }


  public GoogleMapsUnityClientInfo applicationVersion(String applicationVersion) {
    this.applicationVersion = applicationVersion;
    return this;
  }

  /**
   * Application version number, such as \&quot;1.2.3\&quot;. The exact format is application-dependent.
   * @return applicationVersion
   */
  @javax.annotation.Nullable
  public String getApplicationVersion() {
    return applicationVersion;
  }

  public void setApplicationVersion(String applicationVersion) {
    this.applicationVersion = applicationVersion;
  }


  public GoogleMapsUnityClientInfo deviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
    return this;
  }

  /**
   * Device model as reported by the device. The exact format is platform-dependent.
   * @return deviceModel
   */
  @javax.annotation.Nullable
  public String getDeviceModel() {
    return deviceModel;
  }

  public void setDeviceModel(String deviceModel) {
    this.deviceModel = deviceModel;
  }


  public GoogleMapsUnityClientInfo languageCode(String languageCode) {
    this.languageCode = languageCode;
    return this;
  }

  /**
   * Language code (in BCP-47 format) indicating the UI language of the client. Examples are \&quot;en\&quot;, \&quot;en-US\&quot; or \&quot;ja-Latn\&quot;. For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
   * @return languageCode
   */
  @javax.annotation.Nullable
  public String getLanguageCode() {
    return languageCode;
  }

  public void setLanguageCode(String languageCode) {
    this.languageCode = languageCode;
  }


  public GoogleMapsUnityClientInfo operatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
    return this;
  }

  /**
   * Operating system name and version as reported by the OS. For example, \&quot;Mac OS X 10.10.4\&quot;. The exact format is platform-dependent.
   * @return operatingSystem
   */
  @javax.annotation.Nullable
  public String getOperatingSystem() {
    return operatingSystem;
  }

  public void setOperatingSystem(String operatingSystem) {
    this.operatingSystem = operatingSystem;
  }


  public GoogleMapsUnityClientInfo operatingSystemBuild(String operatingSystemBuild) {
    this.operatingSystemBuild = operatingSystemBuild;
    return this;
  }

  /**
   * Build number/version of the operating system. e.g., the contents of android.os.Build.ID in Android, or the contents of sysctl \&quot;kern.osversion\&quot; in iOS.
   * @return operatingSystemBuild
   */
  @javax.annotation.Nullable
  public String getOperatingSystemBuild() {
    return operatingSystemBuild;
  }

  public void setOperatingSystemBuild(String operatingSystemBuild) {
    this.operatingSystemBuild = operatingSystemBuild;
  }


  public GoogleMapsUnityClientInfo platform(PlatformEnum platform) {
    this.platform = platform;
    return this;
  }

  /**
   * Platform where the application is running.
   * @return platform
   */
  @javax.annotation.Nullable
  public PlatformEnum getPlatform() {
    return platform;
  }

  public void setPlatform(PlatformEnum platform) {
    this.platform = platform;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleMapsUnityClientInfo googleMapsUnityClientInfo = (GoogleMapsUnityClientInfo) o;
    return Objects.equals(this._apiClient, googleMapsUnityClientInfo._apiClient) &&
        Objects.equals(this.applicationId, googleMapsUnityClientInfo.applicationId) &&
        Objects.equals(this.applicationVersion, googleMapsUnityClientInfo.applicationVersion) &&
        Objects.equals(this.deviceModel, googleMapsUnityClientInfo.deviceModel) &&
        Objects.equals(this.languageCode, googleMapsUnityClientInfo.languageCode) &&
        Objects.equals(this.operatingSystem, googleMapsUnityClientInfo.operatingSystem) &&
        Objects.equals(this.operatingSystemBuild, googleMapsUnityClientInfo.operatingSystemBuild) &&
        Objects.equals(this.platform, googleMapsUnityClientInfo.platform);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_apiClient, applicationId, applicationVersion, deviceModel, languageCode, operatingSystem, operatingSystemBuild, platform);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleMapsUnityClientInfo {\n");
    sb.append("    _apiClient: ").append(toIndentedString(_apiClient)).append("\n");
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    applicationVersion: ").append(toIndentedString(applicationVersion)).append("\n");
    sb.append("    deviceModel: ").append(toIndentedString(deviceModel)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    operatingSystemBuild: ").append(toIndentedString(operatingSystemBuild)).append("\n");
    sb.append("    platform: ").append(toIndentedString(platform)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiClient");
    openapiFields.add("applicationId");
    openapiFields.add("applicationVersion");
    openapiFields.add("deviceModel");
    openapiFields.add("languageCode");
    openapiFields.add("operatingSystem");
    openapiFields.add("operatingSystemBuild");
    openapiFields.add("platform");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleMapsUnityClientInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleMapsUnityClientInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleMapsUnityClientInfo is not found in the empty JSON string", GoogleMapsUnityClientInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleMapsUnityClientInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleMapsUnityClientInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("apiClient") != null && !jsonObj.get("apiClient").isJsonNull()) && !jsonObj.get("apiClient").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `apiClient` to be a primitive type in the JSON string but got `%s`", jsonObj.get("apiClient").toString()));
      }
      if ((jsonObj.get("applicationId") != null && !jsonObj.get("applicationId").isJsonNull()) && !jsonObj.get("applicationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationId").toString()));
      }
      if ((jsonObj.get("applicationVersion") != null && !jsonObj.get("applicationVersion").isJsonNull()) && !jsonObj.get("applicationVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `applicationVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("applicationVersion").toString()));
      }
      if ((jsonObj.get("deviceModel") != null && !jsonObj.get("deviceModel").isJsonNull()) && !jsonObj.get("deviceModel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deviceModel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deviceModel").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("operatingSystem") != null && !jsonObj.get("operatingSystem").isJsonNull()) && !jsonObj.get("operatingSystem").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operatingSystem` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operatingSystem").toString()));
      }
      if ((jsonObj.get("operatingSystemBuild") != null && !jsonObj.get("operatingSystemBuild").isJsonNull()) && !jsonObj.get("operatingSystemBuild").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operatingSystemBuild` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operatingSystemBuild").toString()));
      }
      if ((jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) && !jsonObj.get("platform").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `platform` to be a primitive type in the JSON string but got `%s`", jsonObj.get("platform").toString()));
      }
      // validate the optional field `platform`
      if (jsonObj.get("platform") != null && !jsonObj.get("platform").isJsonNull()) {
        PlatformEnum.validateJsonElement(jsonObj.get("platform"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleMapsUnityClientInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleMapsUnityClientInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleMapsUnityClientInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleMapsUnityClientInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleMapsUnityClientInfo>() {
           @Override
           public void write(JsonWriter out, GoogleMapsUnityClientInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleMapsUnityClientInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleMapsUnityClientInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleMapsUnityClientInfo
   * @throws IOException if the JSON string is invalid with respect to GoogleMapsUnityClientInfo
   */
  public static GoogleMapsUnityClientInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleMapsUnityClientInfo.class);
  }

  /**
   * Convert an instance of GoogleMapsUnityClientInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

