# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.upgrade_distribution import UpgradeDistribution
from openapi_server.models.version import Version
from openapi_server.models.windows_update import WindowsUpdate
from openapi_server import util


class UpgradeOccurrence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, distribution: UpgradeDistribution=None, package: str=None, parsed_version: Version=None, windows_update: WindowsUpdate=None):
        """UpgradeOccurrence - a model defined in OpenAPI

        :param distribution: The distribution of this UpgradeOccurrence.
        :param package: The package of this UpgradeOccurrence.
        :param parsed_version: The parsed_version of this UpgradeOccurrence.
        :param windows_update: The windows_update of this UpgradeOccurrence.
        """
        self.openapi_types = {
            'distribution': UpgradeDistribution,
            'package': str,
            'parsed_version': Version,
            'windows_update': WindowsUpdate
        }

        self.attribute_map = {
            'distribution': 'distribution',
            'package': 'package',
            'parsed_version': 'parsedVersion',
            'windows_update': 'windowsUpdate'
        }

        self._distribution = distribution
        self._package = package
        self._parsed_version = parsed_version
        self._windows_update = windows_update

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpgradeOccurrence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpgradeOccurrence of this UpgradeOccurrence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def distribution(self):
        """Gets the distribution of this UpgradeOccurrence.


        :return: The distribution of this UpgradeOccurrence.
        :rtype: UpgradeDistribution
        """
        return self._distribution

    @distribution.setter
    def distribution(self, distribution):
        """Sets the distribution of this UpgradeOccurrence.


        :param distribution: The distribution of this UpgradeOccurrence.
        :type distribution: UpgradeDistribution
        """

        self._distribution = distribution

    @property
    def package(self):
        """Gets the package of this UpgradeOccurrence.

        Required for non-Windows OS. The package this Upgrade is for.

        :return: The package of this UpgradeOccurrence.
        :rtype: str
        """
        return self._package

    @package.setter
    def package(self, package):
        """Sets the package of this UpgradeOccurrence.

        Required for non-Windows OS. The package this Upgrade is for.

        :param package: The package of this UpgradeOccurrence.
        :type package: str
        """

        self._package = package

    @property
    def parsed_version(self):
        """Gets the parsed_version of this UpgradeOccurrence.


        :return: The parsed_version of this UpgradeOccurrence.
        :rtype: Version
        """
        return self._parsed_version

    @parsed_version.setter
    def parsed_version(self, parsed_version):
        """Sets the parsed_version of this UpgradeOccurrence.


        :param parsed_version: The parsed_version of this UpgradeOccurrence.
        :type parsed_version: Version
        """

        self._parsed_version = parsed_version

    @property
    def windows_update(self):
        """Gets the windows_update of this UpgradeOccurrence.


        :return: The windows_update of this UpgradeOccurrence.
        :rtype: WindowsUpdate
        """
        return self._windows_update

    @windows_update.setter
    def windows_update(self, windows_update):
        """Sets the windows_update of this UpgradeOccurrence.


        :param windows_update: The windows_update of this UpgradeOccurrence.
        :type windows_update: WindowsUpdate
        """

        self._windows_update = windows_update
