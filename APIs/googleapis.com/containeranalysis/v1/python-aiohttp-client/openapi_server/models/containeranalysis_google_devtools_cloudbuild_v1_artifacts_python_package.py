# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, paths: List[str]=None, repository: str=None):
        """ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage - a model defined in OpenAPI

        :param paths: The paths of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.
        :param repository: The repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.
        """
        self.openapi_types = {
            'paths': List[str],
            'repository': str
        }

        self.attribute_map = {
            'paths': 'paths',
            'repository': 'repository'
        }

        self._paths = paths
        self._repository = repository

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paths(self):
        """Gets the paths of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.

        Path globs used to match files in the build's workspace. For Python/ Twine, this is usually `dist/*`, and sometimes additionally an `.asc` file.

        :return: The paths of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.
        :rtype: List[str]
        """
        return self._paths

    @paths.setter
    def paths(self, paths):
        """Sets the paths of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.

        Path globs used to match files in the build's workspace. For Python/ Twine, this is usually `dist/*`, and sometimes additionally an `.asc` file.

        :param paths: The paths of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.
        :type paths: List[str]
        """

        self._paths = paths

    @property
    def repository(self):
        """Gets the repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.

        Artifact Registry repository, in the form \"https://$REGION-python.pkg.dev/$PROJECT/$REPOSITORY\" Files in the workspace matching any path pattern will be uploaded to Artifact Registry with this location as a prefix.

        :return: The repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.

        Artifact Registry repository, in the form \"https://$REGION-python.pkg.dev/$PROJECT/$REPOSITORY\" Files in the workspace matching any path pattern will be uploaded to Artifact Registry with this location as a prefix.

        :param repository: The repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.
        :type repository: str
        """

        self._repository = repository
