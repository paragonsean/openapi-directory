/*
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource
 */
public class GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSourceTest {
    private final GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource model = new GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource();

    /**
     * Model tests for GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource
     */
    @Test
    public void testGrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource() {
        // TODO: test GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource
    }

    /**
     * Test the property 'digest'
     */
    @Test
    public void digestTest() {
        // TODO: test digest
    }

    /**
     * Test the property 'entryPoint'
     */
    @Test
    public void entryPointTest() {
        // TODO: test entryPoint
    }

    /**
     * Test the property 'uri'
     */
    @Test
    public void uriTest() {
        // TODO: test uri
    }

}
