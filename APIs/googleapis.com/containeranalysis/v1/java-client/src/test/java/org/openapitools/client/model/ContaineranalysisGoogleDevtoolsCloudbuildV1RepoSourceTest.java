/*
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource
 */
public class ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSourceTest {
    private final ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource model = new ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();

    /**
     * Model tests for ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource
     */
    @Test
    public void testContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource() {
        // TODO: test ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource
    }

    /**
     * Test the property 'branchName'
     */
    @Test
    public void branchNameTest() {
        // TODO: test branchName
    }

    /**
     * Test the property 'commitSha'
     */
    @Test
    public void commitShaTest() {
        // TODO: test commitSha
    }

    /**
     * Test the property 'dir'
     */
    @Test
    public void dirTest() {
        // TODO: test dir
    }

    /**
     * Test the property 'invertRegex'
     */
    @Test
    public void invertRegexTest() {
        // TODO: test invertRegex
    }

    /**
     * Test the property 'projectId'
     */
    @Test
    public void projectIdTest() {
        // TODO: test projectId
    }

    /**
     * Test the property 'repoName'
     */
    @Test
    public void repoNameTest() {
        // TODO: test repoName
    }

    /**
     * Test the property 'substitutions'
     */
    @Test
    public void substitutionsTest() {
        // TODO: test substitutions
    }

    /**
     * Test the property 'tagName'
     */
    @Test
    public void tagNameTest() {
        // TODO: test tagName
    }

}
