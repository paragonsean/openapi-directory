/*
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.CloudRepoSourceContext;
import org.openapitools.client.model.GerritSourceContext;
import org.openapitools.client.model.GitSourceContext;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SourceContext
 */
public class SourceContextTest {
    private final SourceContext model = new SourceContext();

    /**
     * Model tests for SourceContext
     */
    @Test
    public void testSourceContext() {
        // TODO: test SourceContext
    }

    /**
     * Test the property 'cloudRepo'
     */
    @Test
    public void cloudRepoTest() {
        // TODO: test cloudRepo
    }

    /**
     * Test the property 'gerrit'
     */
    @Test
    public void gerritTest() {
        // TODO: test gerrit
    }

    /**
     * Test the property 'git'
     */
    @Test
    public void gitTest() {
        // TODO: test git
    }

    /**
     * Test the property 'labels'
     */
    @Test
    public void labelsTest() {
        // TODO: test labels
    }

}
