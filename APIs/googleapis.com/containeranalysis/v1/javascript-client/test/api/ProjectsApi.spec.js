/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ContainerAnalysisApi);
  }
}(this, function(expect, ContainerAnalysisApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ContainerAnalysisApi.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('containeranalysisProjectsNotesBatchCreate', function() {
      it('should call containeranalysisProjectsNotesBatchCreate successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsNotesBatchCreate
        //instance.containeranalysisProjectsNotesBatchCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsNotesCreate', function() {
      it('should call containeranalysisProjectsNotesCreate successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsNotesCreate
        //instance.containeranalysisProjectsNotesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsNotesList', function() {
      it('should call containeranalysisProjectsNotesList successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsNotesList
        //instance.containeranalysisProjectsNotesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsNotesOccurrencesList', function() {
      it('should call containeranalysisProjectsNotesOccurrencesList successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsNotesOccurrencesList
        //instance.containeranalysisProjectsNotesOccurrencesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesBatchCreate', function() {
      it('should call containeranalysisProjectsOccurrencesBatchCreate successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesBatchCreate
        //instance.containeranalysisProjectsOccurrencesBatchCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesCreate', function() {
      it('should call containeranalysisProjectsOccurrencesCreate successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesCreate
        //instance.containeranalysisProjectsOccurrencesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesDelete', function() {
      it('should call containeranalysisProjectsOccurrencesDelete successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesDelete
        //instance.containeranalysisProjectsOccurrencesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesGet', function() {
      it('should call containeranalysisProjectsOccurrencesGet successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesGet
        //instance.containeranalysisProjectsOccurrencesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesGetIamPolicy', function() {
      it('should call containeranalysisProjectsOccurrencesGetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesGetIamPolicy
        //instance.containeranalysisProjectsOccurrencesGetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesGetNotes', function() {
      it('should call containeranalysisProjectsOccurrencesGetNotes successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesGetNotes
        //instance.containeranalysisProjectsOccurrencesGetNotes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesGetVulnerabilitySummary', function() {
      it('should call containeranalysisProjectsOccurrencesGetVulnerabilitySummary successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesGetVulnerabilitySummary
        //instance.containeranalysisProjectsOccurrencesGetVulnerabilitySummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesList', function() {
      it('should call containeranalysisProjectsOccurrencesList successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesList
        //instance.containeranalysisProjectsOccurrencesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesPatch', function() {
      it('should call containeranalysisProjectsOccurrencesPatch successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesPatch
        //instance.containeranalysisProjectsOccurrencesPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesSetIamPolicy', function() {
      it('should call containeranalysisProjectsOccurrencesSetIamPolicy successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesSetIamPolicy
        //instance.containeranalysisProjectsOccurrencesSetIamPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsOccurrencesTestIamPermissions', function() {
      it('should call containeranalysisProjectsOccurrencesTestIamPermissions successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsOccurrencesTestIamPermissions
        //instance.containeranalysisProjectsOccurrencesTestIamPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('containeranalysisProjectsResourcesExportSBOM', function() {
      it('should call containeranalysisProjectsResourcesExportSBOM successfully', function(done) {
        //uncomment below and update the code to test containeranalysisProjectsResourcesExportSBOM
        //instance.containeranalysisProjectsResourcesExportSBOM(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
