/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CVSSv3 model module.
 * @module model/CVSSv3
 * @version v1
 */
class CVSSv3 {
    /**
     * Constructs a new <code>CVSSv3</code>.
     * Common Vulnerability Scoring System version 3. For details, see https://www.first.org/cvss/specification-document
     * @alias module:model/CVSSv3
     */
    constructor() { 
        
        CVSSv3.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CVSSv3</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CVSSv3} obj Optional instance to populate.
     * @return {module:model/CVSSv3} The populated <code>CVSSv3</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CVSSv3();

            if (data.hasOwnProperty('attackComplexity')) {
                obj['attackComplexity'] = ApiClient.convertToType(data['attackComplexity'], 'String');
            }
            if (data.hasOwnProperty('attackVector')) {
                obj['attackVector'] = ApiClient.convertToType(data['attackVector'], 'String');
            }
            if (data.hasOwnProperty('availabilityImpact')) {
                obj['availabilityImpact'] = ApiClient.convertToType(data['availabilityImpact'], 'String');
            }
            if (data.hasOwnProperty('baseScore')) {
                obj['baseScore'] = ApiClient.convertToType(data['baseScore'], 'Number');
            }
            if (data.hasOwnProperty('confidentialityImpact')) {
                obj['confidentialityImpact'] = ApiClient.convertToType(data['confidentialityImpact'], 'String');
            }
            if (data.hasOwnProperty('exploitabilityScore')) {
                obj['exploitabilityScore'] = ApiClient.convertToType(data['exploitabilityScore'], 'Number');
            }
            if (data.hasOwnProperty('impactScore')) {
                obj['impactScore'] = ApiClient.convertToType(data['impactScore'], 'Number');
            }
            if (data.hasOwnProperty('integrityImpact')) {
                obj['integrityImpact'] = ApiClient.convertToType(data['integrityImpact'], 'String');
            }
            if (data.hasOwnProperty('privilegesRequired')) {
                obj['privilegesRequired'] = ApiClient.convertToType(data['privilegesRequired'], 'String');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
            if (data.hasOwnProperty('userInteraction')) {
                obj['userInteraction'] = ApiClient.convertToType(data['userInteraction'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CVSSv3</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CVSSv3</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['attackComplexity'] && !(typeof data['attackComplexity'] === 'string' || data['attackComplexity'] instanceof String)) {
            throw new Error("Expected the field `attackComplexity` to be a primitive type in the JSON string but got " + data['attackComplexity']);
        }
        // ensure the json data is a string
        if (data['attackVector'] && !(typeof data['attackVector'] === 'string' || data['attackVector'] instanceof String)) {
            throw new Error("Expected the field `attackVector` to be a primitive type in the JSON string but got " + data['attackVector']);
        }
        // ensure the json data is a string
        if (data['availabilityImpact'] && !(typeof data['availabilityImpact'] === 'string' || data['availabilityImpact'] instanceof String)) {
            throw new Error("Expected the field `availabilityImpact` to be a primitive type in the JSON string but got " + data['availabilityImpact']);
        }
        // ensure the json data is a string
        if (data['confidentialityImpact'] && !(typeof data['confidentialityImpact'] === 'string' || data['confidentialityImpact'] instanceof String)) {
            throw new Error("Expected the field `confidentialityImpact` to be a primitive type in the JSON string but got " + data['confidentialityImpact']);
        }
        // ensure the json data is a string
        if (data['integrityImpact'] && !(typeof data['integrityImpact'] === 'string' || data['integrityImpact'] instanceof String)) {
            throw new Error("Expected the field `integrityImpact` to be a primitive type in the JSON string but got " + data['integrityImpact']);
        }
        // ensure the json data is a string
        if (data['privilegesRequired'] && !(typeof data['privilegesRequired'] === 'string' || data['privilegesRequired'] instanceof String)) {
            throw new Error("Expected the field `privilegesRequired` to be a primitive type in the JSON string but got " + data['privilegesRequired']);
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }
        // ensure the json data is a string
        if (data['userInteraction'] && !(typeof data['userInteraction'] === 'string' || data['userInteraction'] instanceof String)) {
            throw new Error("Expected the field `userInteraction` to be a primitive type in the JSON string but got " + data['userInteraction']);
        }

        return true;
    }


}



/**
 * @member {module:model/CVSSv3.AttackComplexityEnum} attackComplexity
 */
CVSSv3.prototype['attackComplexity'] = undefined;

/**
 * Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.
 * @member {module:model/CVSSv3.AttackVectorEnum} attackVector
 */
CVSSv3.prototype['attackVector'] = undefined;

/**
 * @member {module:model/CVSSv3.AvailabilityImpactEnum} availabilityImpact
 */
CVSSv3.prototype['availabilityImpact'] = undefined;

/**
 * The base score is a function of the base metric scores.
 * @member {Number} baseScore
 */
CVSSv3.prototype['baseScore'] = undefined;

/**
 * @member {module:model/CVSSv3.ConfidentialityImpactEnum} confidentialityImpact
 */
CVSSv3.prototype['confidentialityImpact'] = undefined;

/**
 * @member {Number} exploitabilityScore
 */
CVSSv3.prototype['exploitabilityScore'] = undefined;

/**
 * @member {Number} impactScore
 */
CVSSv3.prototype['impactScore'] = undefined;

/**
 * @member {module:model/CVSSv3.IntegrityImpactEnum} integrityImpact
 */
CVSSv3.prototype['integrityImpact'] = undefined;

/**
 * @member {module:model/CVSSv3.PrivilegesRequiredEnum} privilegesRequired
 */
CVSSv3.prototype['privilegesRequired'] = undefined;

/**
 * @member {module:model/CVSSv3.ScopeEnum} scope
 */
CVSSv3.prototype['scope'] = undefined;

/**
 * @member {module:model/CVSSv3.UserInteractionEnum} userInteraction
 */
CVSSv3.prototype['userInteraction'] = undefined;





/**
 * Allowed values for the <code>attackComplexity</code> property.
 * @enum {String}
 * @readonly
 */
CVSSv3['AttackComplexityEnum'] = {

    /**
     * value: "ATTACK_COMPLEXITY_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ATTACK_COMPLEXITY_UNSPECIFIED",

    /**
     * value: "ATTACK_COMPLEXITY_LOW"
     * @const
     */
    "LOW": "ATTACK_COMPLEXITY_LOW",

    /**
     * value: "ATTACK_COMPLEXITY_HIGH"
     * @const
     */
    "HIGH": "ATTACK_COMPLEXITY_HIGH"
};


/**
 * Allowed values for the <code>attackVector</code> property.
 * @enum {String}
 * @readonly
 */
CVSSv3['AttackVectorEnum'] = {

    /**
     * value: "ATTACK_VECTOR_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "ATTACK_VECTOR_UNSPECIFIED",

    /**
     * value: "ATTACK_VECTOR_NETWORK"
     * @const
     */
    "NETWORK": "ATTACK_VECTOR_NETWORK",

    /**
     * value: "ATTACK_VECTOR_ADJACENT"
     * @const
     */
    "ADJACENT": "ATTACK_VECTOR_ADJACENT",

    /**
     * value: "ATTACK_VECTOR_LOCAL"
     * @const
     */
    "LOCAL": "ATTACK_VECTOR_LOCAL",

    /**
     * value: "ATTACK_VECTOR_PHYSICAL"
     * @const
     */
    "PHYSICAL": "ATTACK_VECTOR_PHYSICAL"
};


/**
 * Allowed values for the <code>availabilityImpact</code> property.
 * @enum {String}
 * @readonly
 */
CVSSv3['AvailabilityImpactEnum'] = {

    /**
     * value: "IMPACT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "IMPACT_UNSPECIFIED",

    /**
     * value: "IMPACT_HIGH"
     * @const
     */
    "HIGH": "IMPACT_HIGH",

    /**
     * value: "IMPACT_LOW"
     * @const
     */
    "LOW": "IMPACT_LOW",

    /**
     * value: "IMPACT_NONE"
     * @const
     */
    "NONE": "IMPACT_NONE"
};


/**
 * Allowed values for the <code>confidentialityImpact</code> property.
 * @enum {String}
 * @readonly
 */
CVSSv3['ConfidentialityImpactEnum'] = {

    /**
     * value: "IMPACT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "IMPACT_UNSPECIFIED",

    /**
     * value: "IMPACT_HIGH"
     * @const
     */
    "HIGH": "IMPACT_HIGH",

    /**
     * value: "IMPACT_LOW"
     * @const
     */
    "LOW": "IMPACT_LOW",

    /**
     * value: "IMPACT_NONE"
     * @const
     */
    "NONE": "IMPACT_NONE"
};


/**
 * Allowed values for the <code>integrityImpact</code> property.
 * @enum {String}
 * @readonly
 */
CVSSv3['IntegrityImpactEnum'] = {

    /**
     * value: "IMPACT_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "IMPACT_UNSPECIFIED",

    /**
     * value: "IMPACT_HIGH"
     * @const
     */
    "HIGH": "IMPACT_HIGH",

    /**
     * value: "IMPACT_LOW"
     * @const
     */
    "LOW": "IMPACT_LOW",

    /**
     * value: "IMPACT_NONE"
     * @const
     */
    "NONE": "IMPACT_NONE"
};


/**
 * Allowed values for the <code>privilegesRequired</code> property.
 * @enum {String}
 * @readonly
 */
CVSSv3['PrivilegesRequiredEnum'] = {

    /**
     * value: "PRIVILEGES_REQUIRED_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "PRIVILEGES_REQUIRED_UNSPECIFIED",

    /**
     * value: "PRIVILEGES_REQUIRED_NONE"
     * @const
     */
    "NONE": "PRIVILEGES_REQUIRED_NONE",

    /**
     * value: "PRIVILEGES_REQUIRED_LOW"
     * @const
     */
    "LOW": "PRIVILEGES_REQUIRED_LOW",

    /**
     * value: "PRIVILEGES_REQUIRED_HIGH"
     * @const
     */
    "HIGH": "PRIVILEGES_REQUIRED_HIGH"
};


/**
 * Allowed values for the <code>scope</code> property.
 * @enum {String}
 * @readonly
 */
CVSSv3['ScopeEnum'] = {

    /**
     * value: "SCOPE_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "SCOPE_UNSPECIFIED",

    /**
     * value: "SCOPE_UNCHANGED"
     * @const
     */
    "UNCHANGED": "SCOPE_UNCHANGED",

    /**
     * value: "SCOPE_CHANGED"
     * @const
     */
    "CHANGED": "SCOPE_CHANGED"
};


/**
 * Allowed values for the <code>userInteraction</code> property.
 * @enum {String}
 * @readonly
 */
CVSSv3['UserInteractionEnum'] = {

    /**
     * value: "USER_INTERACTION_UNSPECIFIED"
     * @const
     */
    "UNSPECIFIED": "USER_INTERACTION_UNSPECIFIED",

    /**
     * value: "USER_INTERACTION_NONE"
     * @const
     */
    "NONE": "USER_INTERACTION_NONE",

    /**
     * value: "USER_INTERACTION_REQUIRED"
     * @const
     */
    "REQUIRED": "USER_INTERACTION_REQUIRED"
};



export default CVSSv3;

