/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpgradeDistribution from './UpgradeDistribution';
import Version from './Version';
import WindowsUpdate from './WindowsUpdate';

/**
 * The UpgradeNote model module.
 * @module model/UpgradeNote
 * @version v1
 */
class UpgradeNote {
    /**
     * Constructs a new <code>UpgradeNote</code>.
     * An Upgrade Note represents a potential upgrade of a package to a given version. For each package version combination (i.e. bash 4.0, bash 4.1, bash 4.1.2), there will be an Upgrade Note. For Windows, windows_update field represents the information related to the update.
     * @alias module:model/UpgradeNote
     */
    constructor() { 
        
        UpgradeNote.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpgradeNote</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpgradeNote} obj Optional instance to populate.
     * @return {module:model/UpgradeNote} The populated <code>UpgradeNote</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpgradeNote();

            if (data.hasOwnProperty('distributions')) {
                obj['distributions'] = ApiClient.convertToType(data['distributions'], [UpgradeDistribution]);
            }
            if (data.hasOwnProperty('package')) {
                obj['package'] = ApiClient.convertToType(data['package'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = Version.constructFromObject(data['version']);
            }
            if (data.hasOwnProperty('windowsUpdate')) {
                obj['windowsUpdate'] = WindowsUpdate.constructFromObject(data['windowsUpdate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpgradeNote</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpgradeNote</code>.
     */
    static validateJSON(data) {
        if (data['distributions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['distributions'])) {
                throw new Error("Expected the field `distributions` to be an array in the JSON data but got " + data['distributions']);
            }
            // validate the optional field `distributions` (array)
            for (const item of data['distributions']) {
                UpgradeDistribution.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['package'] && !(typeof data['package'] === 'string' || data['package'] instanceof String)) {
            throw new Error("Expected the field `package` to be a primitive type in the JSON string but got " + data['package']);
        }
        // validate the optional field `version`
        if (data['version']) { // data not null
          Version.validateJSON(data['version']);
        }
        // validate the optional field `windowsUpdate`
        if (data['windowsUpdate']) { // data not null
          WindowsUpdate.validateJSON(data['windowsUpdate']);
        }

        return true;
    }


}



/**
 * Metadata about the upgrade for each specific operating system.
 * @member {Array.<module:model/UpgradeDistribution>} distributions
 */
UpgradeNote.prototype['distributions'] = undefined;

/**
 * Required for non-Windows OS. The package this Upgrade is for.
 * @member {String} package
 */
UpgradeNote.prototype['package'] = undefined;

/**
 * @member {module:model/Version} version
 */
UpgradeNote.prototype['version'] = undefined;

/**
 * @member {module:model/WindowsUpdate} windowsUpdate
 */
UpgradeNote.prototype['windowsUpdate'] = undefined;






export default UpgradeNote;

