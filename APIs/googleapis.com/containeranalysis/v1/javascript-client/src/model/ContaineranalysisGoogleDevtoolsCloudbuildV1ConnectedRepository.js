/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository model module.
 * @module model/ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository
 * @version v1
 */
class ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository {
    /**
     * Constructs a new <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository</code>.
     * Location of the source in a 2nd-gen Google Cloud Build repository resource.
     * @alias module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository
     */
    constructor() { 
        
        ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository} obj Optional instance to populate.
     * @return {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository} The populated <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository();

            if (data.hasOwnProperty('dir')) {
                obj['dir'] = ApiClient.convertToType(data['dir'], 'String');
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = ApiClient.convertToType(data['repository'], 'String');
            }
            if (data.hasOwnProperty('revision')) {
                obj['revision'] = ApiClient.convertToType(data['revision'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dir'] && !(typeof data['dir'] === 'string' || data['dir'] instanceof String)) {
            throw new Error("Expected the field `dir` to be a primitive type in the JSON string but got " + data['dir']);
        }
        // ensure the json data is a string
        if (data['repository'] && !(typeof data['repository'] === 'string' || data['repository'] instanceof String)) {
            throw new Error("Expected the field `repository` to be a primitive type in the JSON string but got " + data['repository']);
        }
        // ensure the json data is a string
        if (data['revision'] && !(typeof data['revision'] === 'string' || data['revision'] instanceof String)) {
            throw new Error("Expected the field `revision` to be a primitive type in the JSON string but got " + data['revision']);
        }

        return true;
    }


}



/**
 * Directory, relative to the source root, in which to run the build.
 * @member {String} dir
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository.prototype['dir'] = undefined;

/**
 * Required. Name of the Google Cloud Build repository, formatted as `projects/_*_/locations/_*_/connections/_*_/repositories/_*`.
 * @member {String} repository
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository.prototype['repository'] = undefined;

/**
 * The revision to fetch from the Git repository such as a branch, a tag, a commit SHA, or any Git ref.
 * @member {String} revision
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository.prototype['revision'] = undefined;






export default ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository;

