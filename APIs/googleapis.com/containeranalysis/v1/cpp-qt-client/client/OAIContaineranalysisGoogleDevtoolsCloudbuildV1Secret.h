/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secret.h
 *
 * Pairs a set of secret environment variables containing encrypted values with the Cloud KMS key to use to decrypt the value. Note: Use &#x60;kmsKeyName&#x60; with &#x60;available_secrets&#x60; instead of using &#x60;kmsKeyName&#x60; with &#x60;secret&#x60;. For instructions see: https://cloud.google.com/cloud-build/docs/securing-builds/use-encrypted-credentials.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secret_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secret_H

#include <QJsonObject>

#include <QByteArray>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secret : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secret();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secret(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secret() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKmsKeyName() const;
    void setKmsKeyName(const QString &kms_key_name);
    bool is_kms_key_name_Set() const;
    bool is_kms_key_name_Valid() const;

    QMap<QString, QByteArray> getSecretEnv() const;
    void setSecretEnv(const QMap<QString, QByteArray> &secret_env);
    bool is_secret_env_Set() const;
    bool is_secret_env_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kms_key_name;
    bool m_kms_key_name_isSet;
    bool m_kms_key_name_isValid;

    QMap<QString, QByteArray> m_secret_env;
    bool m_secret_env_isSet;
    bool m_secret_env_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secret)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secret_H
