/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpgradeNote.h
 *
 * An Upgrade Note represents a potential upgrade of a package to a given version. For each package version combination (i.e. bash 4.0, bash 4.1, bash 4.1.2), there will be an Upgrade Note. For Windows, windows_update field represents the information related to the update.
 */

#ifndef OAIUpgradeNote_H
#define OAIUpgradeNote_H

#include <QJsonObject>

#include "OAIUpgradeDistribution.h"
#include "OAIVersion.h"
#include "OAIWindowsUpdate.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpgradeDistribution;
class OAIVersion;
class OAIWindowsUpdate;

class OAIUpgradeNote : public OAIObject {
public:
    OAIUpgradeNote();
    OAIUpgradeNote(QString json);
    ~OAIUpgradeNote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIUpgradeDistribution> getDistributions() const;
    void setDistributions(const QList<OAIUpgradeDistribution> &distributions);
    bool is_distributions_Set() const;
    bool is_distributions_Valid() const;

    QString getPackage() const;
    void setPackage(const QString &package);
    bool is_package_Set() const;
    bool is_package_Valid() const;

    OAIVersion getVersion() const;
    void setVersion(const OAIVersion &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    OAIWindowsUpdate getWindowsUpdate() const;
    void setWindowsUpdate(const OAIWindowsUpdate &windows_update);
    bool is_windows_update_Set() const;
    bool is_windows_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIUpgradeDistribution> m_distributions;
    bool m_distributions_isSet;
    bool m_distributions_isValid;

    QString m_package;
    bool m_package_isSet;
    bool m_package_isValid;

    OAIVersion m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    OAIWindowsUpdate m_windows_update;
    bool m_windows_update_isSet;
    bool m_windows_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpgradeNote)

#endif // OAIUpgradeNote_H
