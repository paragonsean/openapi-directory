/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetail.h
 *
 * A detail for a distro and package affected by this vulnerability and its associated fix (if one is available).
 */

#ifndef OAIDetail_H
#define OAIDetail_H

#include <QJsonObject>

#include "OAIVersion.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVersion;

class OAIDetail : public OAIObject {
public:
    OAIDetail();
    OAIDetail(QString json);
    ~OAIDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAffectedCpeUri() const;
    void setAffectedCpeUri(const QString &affected_cpe_uri);
    bool is_affected_cpe_uri_Set() const;
    bool is_affected_cpe_uri_Valid() const;

    QString getAffectedPackage() const;
    void setAffectedPackage(const QString &affected_package);
    bool is_affected_package_Set() const;
    bool is_affected_package_Valid() const;

    OAIVersion getAffectedVersionEnd() const;
    void setAffectedVersionEnd(const OAIVersion &affected_version_end);
    bool is_affected_version_end_Set() const;
    bool is_affected_version_end_Valid() const;

    OAIVersion getAffectedVersionStart() const;
    void setAffectedVersionStart(const OAIVersion &affected_version_start);
    bool is_affected_version_start_Set() const;
    bool is_affected_version_start_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFixedCpeUri() const;
    void setFixedCpeUri(const QString &fixed_cpe_uri);
    bool is_fixed_cpe_uri_Set() const;
    bool is_fixed_cpe_uri_Valid() const;

    QString getFixedPackage() const;
    void setFixedPackage(const QString &fixed_package);
    bool is_fixed_package_Set() const;
    bool is_fixed_package_Valid() const;

    OAIVersion getFixedVersion() const;
    void setFixedVersion(const OAIVersion &fixed_version);
    bool is_fixed_version_Set() const;
    bool is_fixed_version_Valid() const;

    bool isIsObsolete() const;
    void setIsObsolete(const bool &is_obsolete);
    bool is_is_obsolete_Set() const;
    bool is_is_obsolete_Valid() const;

    QString getPackageType() const;
    void setPackageType(const QString &package_type);
    bool is_package_type_Set() const;
    bool is_package_type_Valid() const;

    QString getSeverityName() const;
    void setSeverityName(const QString &severity_name);
    bool is_severity_name_Set() const;
    bool is_severity_name_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getSourceUpdateTime() const;
    void setSourceUpdateTime(const QString &source_update_time);
    bool is_source_update_time_Set() const;
    bool is_source_update_time_Valid() const;

    QString getVendor() const;
    void setVendor(const QString &vendor);
    bool is_vendor_Set() const;
    bool is_vendor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_affected_cpe_uri;
    bool m_affected_cpe_uri_isSet;
    bool m_affected_cpe_uri_isValid;

    QString m_affected_package;
    bool m_affected_package_isSet;
    bool m_affected_package_isValid;

    OAIVersion m_affected_version_end;
    bool m_affected_version_end_isSet;
    bool m_affected_version_end_isValid;

    OAIVersion m_affected_version_start;
    bool m_affected_version_start_isSet;
    bool m_affected_version_start_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_fixed_cpe_uri;
    bool m_fixed_cpe_uri_isSet;
    bool m_fixed_cpe_uri_isValid;

    QString m_fixed_package;
    bool m_fixed_package_isSet;
    bool m_fixed_package_isValid;

    OAIVersion m_fixed_version;
    bool m_fixed_version_isSet;
    bool m_fixed_version_isValid;

    bool m_is_obsolete;
    bool m_is_obsolete_isSet;
    bool m_is_obsolete_isValid;

    QString m_package_type;
    bool m_package_type_isSet;
    bool m_package_type_isValid;

    QString m_severity_name;
    bool m_severity_name_isSet;
    bool m_severity_name_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_source_update_time;
    bool m_source_update_time_isSet;
    bool m_source_update_time_isValid;

    QString m_vendor;
    bool m_vendor_isSet;
    bool m_vendor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetail)

#endif // OAIDetail_H
