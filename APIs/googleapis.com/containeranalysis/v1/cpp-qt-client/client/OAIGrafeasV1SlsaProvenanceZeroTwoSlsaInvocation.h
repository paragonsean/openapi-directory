/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation.h
 *
 * Identifies the event that kicked off the build.
 */

#ifndef OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation_H
#define OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation_H

#include <QJsonObject>

#include "OAIGrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource.h"
#include <QJsonValue>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource;

class OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation : public OAIObject {
public:
    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation();
    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation(QString json);
    ~OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource getConfigSource() const;
    void setConfigSource(const OAIGrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource &config_source);
    bool is_config_source_Set() const;
    bool is_config_source_Valid() const;

    QMap<QString, QJsonValue> getEnvironment() const;
    void setEnvironment(const QMap<QString, QJsonValue> &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QMap<QString, QJsonValue> getParameters() const;
    void setParameters(const QMap<QString, QJsonValue> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource m_config_source;
    bool m_config_source_isSet;
    bool m_config_source_isValid;

    QMap<QString, QJsonValue> m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QMap<QString, QJsonValue> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation)

#endif // OAIGrafeasV1SlsaProvenanceZeroTwoSlsaInvocation_H
