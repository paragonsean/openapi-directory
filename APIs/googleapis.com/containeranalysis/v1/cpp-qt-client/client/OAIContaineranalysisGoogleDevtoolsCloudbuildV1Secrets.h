/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secrets.h
 *
 * Secrets and secret environment variables.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secrets_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secrets_H

#include <QJsonObject>

#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret;

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secrets : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secrets();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secrets(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secrets() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret> getRInline() const;
    void setRInline(const QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret> &r_inline);
    bool is_r_inline_Set() const;
    bool is_r_inline_Valid() const;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret> getSecretManager() const;
    void setSecretManager(const QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret> &secret_manager);
    bool is_secret_manager_Set() const;
    bool is_secret_manager_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret> m_r_inline;
    bool m_r_inline_isSet;
    bool m_r_inline_isValid;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret> m_secret_manager;
    bool m_secret_manager_isSet;
    bool m_secret_manager_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secrets)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1Secrets_H
