/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildNote.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildNote::OAIBuildNote(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildNote::OAIBuildNote() {
    this->initializeModel();
}

OAIBuildNote::~OAIBuildNote() {}

void OAIBuildNote::initializeModel() {

    m_builder_version_isSet = false;
    m_builder_version_isValid = false;
}

void OAIBuildNote::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildNote::fromJsonObject(QJsonObject json) {

    m_builder_version_isValid = ::OpenAPI::fromJsonValue(m_builder_version, json[QString("builderVersion")]);
    m_builder_version_isSet = !json[QString("builderVersion")].isNull() && m_builder_version_isValid;
}

QString OAIBuildNote::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildNote::asJsonObject() const {
    QJsonObject obj;
    if (m_builder_version_isSet) {
        obj.insert(QString("builderVersion"), ::OpenAPI::toJsonValue(m_builder_version));
    }
    return obj;
}

QString OAIBuildNote::getBuilderVersion() const {
    return m_builder_version;
}
void OAIBuildNote::setBuilderVersion(const QString &builder_version) {
    m_builder_version = builder_version;
    m_builder_version_isSet = true;
}

bool OAIBuildNote::is_builder_version_Set() const{
    return m_builder_version_isSet;
}

bool OAIBuildNote::is_builder_version_Valid() const{
    return m_builder_version_isValid;
}

bool OAIBuildNote::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_builder_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildNote::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
