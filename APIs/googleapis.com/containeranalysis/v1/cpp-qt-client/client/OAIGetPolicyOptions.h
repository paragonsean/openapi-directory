/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPolicyOptions.h
 *
 * Encapsulates settings provided to GetIamPolicy.
 */

#ifndef OAIGetPolicyOptions_H
#define OAIGetPolicyOptions_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetPolicyOptions : public OAIObject {
public:
    OAIGetPolicyOptions();
    OAIGetPolicyOptions(QString json);
    ~OAIGetPolicyOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getRequestedPolicyVersion() const;
    void setRequestedPolicyVersion(const qint32 &requested_policy_version);
    bool is_requested_policy_version_Set() const;
    bool is_requested_policy_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_requested_policy_version;
    bool m_requested_policy_version_isSet;
    bool m_requested_policy_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPolicyOptions)

#endif // OAIGetPolicyOptions_H
