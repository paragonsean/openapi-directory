/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVulnerabilityOccurrencesSummary.h
 *
 * A summary of how many vulnerability occurrences there are per resource and severity type.
 */

#ifndef OAIVulnerabilityOccurrencesSummary_H
#define OAIVulnerabilityOccurrencesSummary_H

#include <QJsonObject>

#include "OAIFixableTotalByDigest.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFixableTotalByDigest;

class OAIVulnerabilityOccurrencesSummary : public OAIObject {
public:
    OAIVulnerabilityOccurrencesSummary();
    OAIVulnerabilityOccurrencesSummary(QString json);
    ~OAIVulnerabilityOccurrencesSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFixableTotalByDigest> getCounts() const;
    void setCounts(const QList<OAIFixableTotalByDigest> &counts);
    bool is_counts_Set() const;
    bool is_counts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFixableTotalByDigest> m_counts;
    bool m_counts_isSet;
    bool m_counts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVulnerabilityOccurrencesSummary)

#endif // OAIVulnerabilityOccurrencesSummary_H
