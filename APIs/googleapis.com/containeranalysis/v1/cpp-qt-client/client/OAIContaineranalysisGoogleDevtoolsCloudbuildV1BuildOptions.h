/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions.h
 *
 * Optional arguments to enable specific features of builds.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions_H

#include <QJsonObject>

#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume;

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutomapSubstitutions() const;
    void setAutomapSubstitutions(const bool &automap_substitutions);
    bool is_automap_substitutions_Set() const;
    bool is_automap_substitutions_Valid() const;

    QString getDefaultLogsBucketBehavior() const;
    void setDefaultLogsBucketBehavior(const QString &default_logs_bucket_behavior);
    bool is_default_logs_bucket_behavior_Set() const;
    bool is_default_logs_bucket_behavior_Valid() const;

    QString getDiskSizeGb() const;
    void setDiskSizeGb(const QString &disk_size_gb);
    bool is_disk_size_gb_Set() const;
    bool is_disk_size_gb_Valid() const;

    bool isDynamicSubstitutions() const;
    void setDynamicSubstitutions(const bool &dynamic_substitutions);
    bool is_dynamic_substitutions_Set() const;
    bool is_dynamic_substitutions_Valid() const;

    QList<QString> getEnv() const;
    void setEnv(const QList<QString> &env);
    bool is_env_Set() const;
    bool is_env_Valid() const;

    QString getLogStreamingOption() const;
    void setLogStreamingOption(const QString &log_streaming_option);
    bool is_log_streaming_option_Set() const;
    bool is_log_streaming_option_Valid() const;

    QString getLogging() const;
    void setLogging(const QString &logging);
    bool is_logging_Set() const;
    bool is_logging_Valid() const;

    QString getMachineType() const;
    void setMachineType(const QString &machine_type);
    bool is_machine_type_Set() const;
    bool is_machine_type_Valid() const;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption getPool() const;
    void setPool(const OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption &pool);
    bool is_pool_Set() const;
    bool is_pool_Valid() const;

    QString getRequestedVerifyOption() const;
    void setRequestedVerifyOption(const QString &requested_verify_option);
    bool is_requested_verify_option_Set() const;
    bool is_requested_verify_option_Valid() const;

    QList<QString> getSecretEnv() const;
    void setSecretEnv(const QList<QString> &secret_env);
    bool is_secret_env_Set() const;
    bool is_secret_env_Valid() const;

    QList<QString> getSourceProvenanceHash() const;
    void setSourceProvenanceHash(const QList<QString> &source_provenance_hash);
    bool is_source_provenance_hash_Set() const;
    bool is_source_provenance_hash_Valid() const;

    QString getSubstitutionOption() const;
    void setSubstitutionOption(const QString &substitution_option);
    bool is_substitution_option_Set() const;
    bool is_substitution_option_Valid() const;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume> getVolumes() const;
    void setVolumes(const QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume> &volumes);
    bool is_volumes_Set() const;
    bool is_volumes_Valid() const;

    Q_DECL_DEPRECATED QString getWorkerPool() const;
    Q_DECL_DEPRECATED void setWorkerPool(const QString &worker_pool);
    Q_DECL_DEPRECATED bool is_worker_pool_Set() const;
    Q_DECL_DEPRECATED bool is_worker_pool_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_automap_substitutions;
    bool m_automap_substitutions_isSet;
    bool m_automap_substitutions_isValid;

    QString m_default_logs_bucket_behavior;
    bool m_default_logs_bucket_behavior_isSet;
    bool m_default_logs_bucket_behavior_isValid;

    QString m_disk_size_gb;
    bool m_disk_size_gb_isSet;
    bool m_disk_size_gb_isValid;

    bool m_dynamic_substitutions;
    bool m_dynamic_substitutions_isSet;
    bool m_dynamic_substitutions_isValid;

    QList<QString> m_env;
    bool m_env_isSet;
    bool m_env_isValid;

    QString m_log_streaming_option;
    bool m_log_streaming_option_isSet;
    bool m_log_streaming_option_isValid;

    QString m_logging;
    bool m_logging_isSet;
    bool m_logging_isValid;

    QString m_machine_type;
    bool m_machine_type_isSet;
    bool m_machine_type_isValid;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptionsPoolOption m_pool;
    bool m_pool_isSet;
    bool m_pool_isValid;

    QString m_requested_verify_option;
    bool m_requested_verify_option_isSet;
    bool m_requested_verify_option_isValid;

    QList<QString> m_secret_env;
    bool m_secret_env_isSet;
    bool m_secret_env_isValid;

    QList<QString> m_source_provenance_hash;
    bool m_source_provenance_hash_isSet;
    bool m_source_provenance_hash_isValid;

    QString m_substitution_option;
    bool m_substitution_option_isSet;
    bool m_substitution_option_isValid;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume> m_volumes;
    bool m_volumes_isSet;
    bool m_volumes_isValid;

    QString m_worker_pool;
    bool m_worker_pool_isSet;
    bool m_worker_pool_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuildOptions_H
