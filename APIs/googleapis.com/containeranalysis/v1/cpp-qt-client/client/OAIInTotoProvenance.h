/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInTotoProvenance.h
 *
 * 
 */

#ifndef OAIInTotoProvenance_H
#define OAIInTotoProvenance_H

#include <QJsonObject>

#include "OAIBuilderConfig.h"
#include "OAIMetadata.h"
#include "OAIRecipe.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBuilderConfig;
class OAIMetadata;
class OAIRecipe;

class OAIInTotoProvenance : public OAIObject {
public:
    OAIInTotoProvenance();
    OAIInTotoProvenance(QString json);
    ~OAIInTotoProvenance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBuilderConfig getBuilderConfig() const;
    void setBuilderConfig(const OAIBuilderConfig &builder_config);
    bool is_builder_config_Set() const;
    bool is_builder_config_Valid() const;

    QList<QString> getMaterials() const;
    void setMaterials(const QList<QString> &materials);
    bool is_materials_Set() const;
    bool is_materials_Valid() const;

    OAIMetadata getMetadata() const;
    void setMetadata(const OAIMetadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIRecipe getRecipe() const;
    void setRecipe(const OAIRecipe &recipe);
    bool is_recipe_Set() const;
    bool is_recipe_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBuilderConfig m_builder_config;
    bool m_builder_config_isSet;
    bool m_builder_config_isValid;

    QList<QString> m_materials;
    bool m_materials_isSet;
    bool m_materials_isValid;

    OAIMetadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIRecipe m_recipe;
    bool m_recipe_isSet;
    bool m_recipe_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInTotoProvenance)

#endif // OAIInTotoProvenance_H
