/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttestationNote.h
 *
 * Note kind that represents a logical attestation \&quot;role\&quot; or \&quot;authority\&quot;. For example, an organization might have one &#x60;Authority&#x60; for \&quot;QA\&quot; and one for \&quot;build\&quot;. This note is intended to act strictly as a grouping mechanism for the attached occurrences (Attestations). This grouping mechanism also provides a security boundary, since IAM ACLs gate the ability for a principle to attach an occurrence to a given note. It also provides a single point of lookup to find all attached attestation occurrences, even if they don&#39;t all live in the same project.
 */

#ifndef OAIAttestationNote_H
#define OAIAttestationNote_H

#include <QJsonObject>

#include "OAIHint.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHint;

class OAIAttestationNote : public OAIObject {
public:
    OAIAttestationNote();
    OAIAttestationNote(QString json);
    ~OAIAttestationNote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIHint getHint() const;
    void setHint(const OAIHint &hint);
    bool is_hint_Set() const;
    bool is_hint_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIHint m_hint;
    bool m_hint_isSet;
    bool m_hint_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttestationNote)

#endif // OAIAttestationNote_H
