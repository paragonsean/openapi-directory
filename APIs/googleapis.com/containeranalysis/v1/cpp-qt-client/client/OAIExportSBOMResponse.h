/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExportSBOMResponse.h
 *
 * The response from a call to ExportSBOM.
 */

#ifndef OAIExportSBOMResponse_H
#define OAIExportSBOMResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExportSBOMResponse : public OAIObject {
public:
    OAIExportSBOMResponse();
    OAIExportSBOMResponse(QString json);
    ~OAIExportSBOMResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDiscoveryOccurrence() const;
    void setDiscoveryOccurrence(const QString &discovery_occurrence);
    bool is_discovery_occurrence_Set() const;
    bool is_discovery_occurrence_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_discovery_occurrence;
    bool m_discovery_occurrence_isSet;
    bool m_discovery_occurrence_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExportSBOMResponse)

#endif // OAIExportSBOMResponse_H
