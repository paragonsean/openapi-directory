/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1Results.h
 *
 * Artifacts created by the build pipeline.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1Results_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1Results_H

#include <QJsonObject>

#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedNpmPackage.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedNpmPackage;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage;

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1Results : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1Results();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1Results(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1Results() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getArtifactManifest() const;
    void setArtifactManifest(const QString &artifact_manifest);
    bool is_artifact_manifest_Set() const;
    bool is_artifact_manifest_Valid() const;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan getArtifactTiming() const;
    void setArtifactTiming(const OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan &artifact_timing);
    bool is_artifact_timing_Set() const;
    bool is_artifact_timing_Valid() const;

    QList<QString> getBuildStepImages() const;
    void setBuildStepImages(const QList<QString> &build_step_images);
    bool is_build_step_images_Set() const;
    bool is_build_step_images_Valid() const;

    QList<QByteArray> getBuildStepOutputs() const;
    void setBuildStepOutputs(const QList<QByteArray> &build_step_outputs);
    bool is_build_step_outputs_Set() const;
    bool is_build_step_outputs_Valid() const;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage> getImages() const;
    void setImages(const QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact> getMavenArtifacts() const;
    void setMavenArtifacts(const QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact> &maven_artifacts);
    bool is_maven_artifacts_Set() const;
    bool is_maven_artifacts_Valid() const;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedNpmPackage> getNpmPackages() const;
    void setNpmPackages(const QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedNpmPackage> &npm_packages);
    bool is_npm_packages_Set() const;
    bool is_npm_packages_Valid() const;

    QString getNumArtifacts() const;
    void setNumArtifacts(const QString &num_artifacts);
    bool is_num_artifacts_Set() const;
    bool is_num_artifacts_Valid() const;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage> getPythonPackages() const;
    void setPythonPackages(const QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage> &python_packages);
    bool is_python_packages_Set() const;
    bool is_python_packages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_artifact_manifest;
    bool m_artifact_manifest_isSet;
    bool m_artifact_manifest_isValid;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan m_artifact_timing;
    bool m_artifact_timing_isSet;
    bool m_artifact_timing_isValid;

    QList<QString> m_build_step_images;
    bool m_build_step_images_isSet;
    bool m_build_step_images_isValid;

    QList<QByteArray> m_build_step_outputs;
    bool m_build_step_outputs_isSet;
    bool m_build_step_outputs_isValid;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1BuiltImage> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact> m_maven_artifacts;
    bool m_maven_artifacts_isSet;
    bool m_maven_artifacts_isValid;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedNpmPackage> m_npm_packages;
    bool m_npm_packages_isSet;
    bool m_npm_packages_isValid;

    QString m_num_artifacts;
    bool m_num_artifacts_isSet;
    bool m_num_artifacts_isValid;

    QList<OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedPythonPackage> m_python_packages;
    bool m_python_packages_isSet;
    bool m_python_packages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1Results)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1Results_H
