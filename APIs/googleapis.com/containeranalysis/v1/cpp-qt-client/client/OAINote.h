/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINote.h
 *
 * A type of analysis that can be done for a resource.
 */

#ifndef OAINote_H
#define OAINote_H

#include <QJsonObject>

#include "OAIAttestationNote.h"
#include "OAIBuildNote.h"
#include "OAIComplianceNote.h"
#include "OAIDSSEAttestationNote.h"
#include "OAIDeploymentNote.h"
#include "OAIDiscoveryNote.h"
#include "OAIImageNote.h"
#include "OAIPackageNote.h"
#include "OAIRelatedUrl.h"
#include "OAISBOMReferenceNote.h"
#include "OAIUpgradeNote.h"
#include "OAIVulnerabilityAssessmentNote.h"
#include "OAIVulnerabilityNote.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttestationNote;
class OAIBuildNote;
class OAIComplianceNote;
class OAIDeploymentNote;
class OAIDiscoveryNote;
class OAIDSSEAttestationNote;
class OAIImageNote;
class OAIPackageNote;
class OAIRelatedUrl;
class OAISBOMReferenceNote;
class OAIUpgradeNote;
class OAIVulnerabilityNote;
class OAIVulnerabilityAssessmentNote;

class OAINote : public OAIObject {
public:
    OAINote();
    OAINote(QString json);
    ~OAINote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAttestationNote getAttestation() const;
    void setAttestation(const OAIAttestationNote &attestation);
    bool is_attestation_Set() const;
    bool is_attestation_Valid() const;

    OAIBuildNote getBuild() const;
    void setBuild(const OAIBuildNote &build);
    bool is_build_Set() const;
    bool is_build_Valid() const;

    OAIComplianceNote getCompliance() const;
    void setCompliance(const OAIComplianceNote &compliance);
    bool is_compliance_Set() const;
    bool is_compliance_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAIDeploymentNote getDeployment() const;
    void setDeployment(const OAIDeploymentNote &deployment);
    bool is_deployment_Set() const;
    bool is_deployment_Valid() const;

    OAIDiscoveryNote getDiscovery() const;
    void setDiscovery(const OAIDiscoveryNote &discovery);
    bool is_discovery_Set() const;
    bool is_discovery_Valid() const;

    OAIDSSEAttestationNote getDsseAttestation() const;
    void setDsseAttestation(const OAIDSSEAttestationNote &dsse_attestation);
    bool is_dsse_attestation_Set() const;
    bool is_dsse_attestation_Valid() const;

    QString getExpirationTime() const;
    void setExpirationTime(const QString &expiration_time);
    bool is_expiration_time_Set() const;
    bool is_expiration_time_Valid() const;

    OAIImageNote getImage() const;
    void setImage(const OAIImageNote &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getLongDescription() const;
    void setLongDescription(const QString &long_description);
    bool is_long_description_Set() const;
    bool is_long_description_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPackageNote getPackage() const;
    void setPackage(const OAIPackageNote &package);
    bool is_package_Set() const;
    bool is_package_Valid() const;

    QList<QString> getRelatedNoteNames() const;
    void setRelatedNoteNames(const QList<QString> &related_note_names);
    bool is_related_note_names_Set() const;
    bool is_related_note_names_Valid() const;

    QList<OAIRelatedUrl> getRelatedUrl() const;
    void setRelatedUrl(const QList<OAIRelatedUrl> &related_url);
    bool is_related_url_Set() const;
    bool is_related_url_Valid() const;

    OAISBOMReferenceNote getSbomReference() const;
    void setSbomReference(const OAISBOMReferenceNote &sbom_reference);
    bool is_sbom_reference_Set() const;
    bool is_sbom_reference_Valid() const;

    QString getShortDescription() const;
    void setShortDescription(const QString &short_description);
    bool is_short_description_Set() const;
    bool is_short_description_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    OAIUpgradeNote getUpgrade() const;
    void setUpgrade(const OAIUpgradeNote &upgrade);
    bool is_upgrade_Set() const;
    bool is_upgrade_Valid() const;

    OAIVulnerabilityNote getVulnerability() const;
    void setVulnerability(const OAIVulnerabilityNote &vulnerability);
    bool is_vulnerability_Set() const;
    bool is_vulnerability_Valid() const;

    OAIVulnerabilityAssessmentNote getVulnerabilityAssessment() const;
    void setVulnerabilityAssessment(const OAIVulnerabilityAssessmentNote &vulnerability_assessment);
    bool is_vulnerability_assessment_Set() const;
    bool is_vulnerability_assessment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAttestationNote m_attestation;
    bool m_attestation_isSet;
    bool m_attestation_isValid;

    OAIBuildNote m_build;
    bool m_build_isSet;
    bool m_build_isValid;

    OAIComplianceNote m_compliance;
    bool m_compliance_isSet;
    bool m_compliance_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAIDeploymentNote m_deployment;
    bool m_deployment_isSet;
    bool m_deployment_isValid;

    OAIDiscoveryNote m_discovery;
    bool m_discovery_isSet;
    bool m_discovery_isValid;

    OAIDSSEAttestationNote m_dsse_attestation;
    bool m_dsse_attestation_isSet;
    bool m_dsse_attestation_isValid;

    QString m_expiration_time;
    bool m_expiration_time_isSet;
    bool m_expiration_time_isValid;

    OAIImageNote m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_long_description;
    bool m_long_description_isSet;
    bool m_long_description_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPackageNote m_package;
    bool m_package_isSet;
    bool m_package_isValid;

    QList<QString> m_related_note_names;
    bool m_related_note_names_isSet;
    bool m_related_note_names_isValid;

    QList<OAIRelatedUrl> m_related_url;
    bool m_related_url_isSet;
    bool m_related_url_isValid;

    OAISBOMReferenceNote m_sbom_reference;
    bool m_sbom_reference_isSet;
    bool m_sbom_reference_isValid;

    QString m_short_description;
    bool m_short_description_isSet;
    bool m_short_description_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    OAIUpgradeNote m_upgrade;
    bool m_upgrade_isSet;
    bool m_upgrade_isValid;

    OAIVulnerabilityNote m_vulnerability;
    bool m_vulnerability_isSet;
    bool m_vulnerability_isValid;

    OAIVulnerabilityAssessmentNote m_vulnerability_assessment;
    bool m_vulnerability_assessment_isSet;
    bool m_vulnerability_assessment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINote)

#endif // OAINote_H
