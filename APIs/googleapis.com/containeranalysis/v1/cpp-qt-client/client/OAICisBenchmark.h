/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICisBenchmark.h
 *
 * A compliance check that is a CIS benchmark.
 */

#ifndef OAICisBenchmark_H
#define OAICisBenchmark_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICisBenchmark : public OAIObject {
public:
    OAICisBenchmark();
    OAICisBenchmark(QString json);
    ~OAICisBenchmark() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getProfileLevel() const;
    void setProfileLevel(const qint32 &profile_level);
    bool is_profile_level_Set() const;
    bool is_profile_level_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_profile_level;
    bool m_profile_level_isSet;
    bool m_profile_level_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICisBenchmark)

#endif // OAICisBenchmark_H
