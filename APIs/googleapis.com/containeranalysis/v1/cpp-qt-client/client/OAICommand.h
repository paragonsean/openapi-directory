/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommand.h
 *
 * Command describes a step performed as part of the build pipeline.
 */

#ifndef OAICommand_H
#define OAICommand_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICommand : public OAIObject {
public:
    OAICommand();
    OAICommand(QString json);
    ~OAICommand() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getArgs() const;
    void setArgs(const QList<QString> &args);
    bool is_args_Set() const;
    bool is_args_Valid() const;

    QString getDir() const;
    void setDir(const QString &dir);
    bool is_dir_Set() const;
    bool is_dir_Valid() const;

    QList<QString> getEnv() const;
    void setEnv(const QList<QString> &env);
    bool is_env_Set() const;
    bool is_env_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getWaitFor() const;
    void setWaitFor(const QList<QString> &wait_for);
    bool is_wait_for_Set() const;
    bool is_wait_for_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_args;
    bool m_args_isSet;
    bool m_args_isValid;

    QString m_dir;
    bool m_dir_isSet;
    bool m_dir_isValid;

    QList<QString> m_env;
    bool m_env_isSet;
    bool m_env_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_wait_for;
    bool m_wait_for_isSet;
    bool m_wait_for_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommand)

#endif // OAICommand_H
