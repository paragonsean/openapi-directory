# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.containeranalysis_google_devtools_cloudbuild_v1_artifacts_artifact_objects import ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects
from openapi_server.models.containeranalysis_google_devtools_cloudbuild_v1_artifacts_maven_artifact import ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact
from openapi_server.models.containeranalysis_google_devtools_cloudbuild_v1_artifacts_npm_package import ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage
from openapi_server.models.containeranalysis_google_devtools_cloudbuild_v1_artifacts_python_package import ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage
from openapi_server import util


class ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, images: List[str]=None, maven_artifacts: List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact]=None, npm_packages: List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage]=None, objects: ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects=None, python_packages: List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage]=None):
        """ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts - a model defined in OpenAPI

        :param images: The images of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :param maven_artifacts: The maven_artifacts of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :param npm_packages: The npm_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :param objects: The objects of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :param python_packages: The python_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        """
        self.openapi_types = {
            'images': List[str],
            'maven_artifacts': List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact],
            'npm_packages': List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage],
            'objects': ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects,
            'python_packages': List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage]
        }

        self.attribute_map = {
            'images': 'images',
            'maven_artifacts': 'mavenArtifacts',
            'npm_packages': 'npmPackages',
            'objects': 'objects',
            'python_packages': 'pythonPackages'
        }

        self._images = images
        self._maven_artifacts = maven_artifacts
        self._npm_packages = npm_packages
        self._objects = objects
        self._python_packages = python_packages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def images(self):
        """Gets the images of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.

        A list of images to be pushed upon the successful completion of all build steps. The images will be pushed using the builder service account's credentials. The digests of the pushed images will be stored in the Build resource's results field. If any of the images fail to be pushed, the build is marked FAILURE.

        :return: The images of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :rtype: List[str]
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.

        A list of images to be pushed upon the successful completion of all build steps. The images will be pushed using the builder service account's credentials. The digests of the pushed images will be stored in the Build resource's results field. If any of the images fail to be pushed, the build is marked FAILURE.

        :param images: The images of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :type images: List[str]
        """

        self._images = images

    @property
    def maven_artifacts(self):
        """Gets the maven_artifacts of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.

        A list of Maven artifacts to be uploaded to Artifact Registry upon successful completion of all build steps. Artifacts in the workspace matching specified paths globs will be uploaded to the specified Artifact Registry repository using the builder service account's credentials. If any artifacts fail to be pushed, the build is marked FAILURE.

        :return: The maven_artifacts of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :rtype: List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact]
        """
        return self._maven_artifacts

    @maven_artifacts.setter
    def maven_artifacts(self, maven_artifacts):
        """Sets the maven_artifacts of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.

        A list of Maven artifacts to be uploaded to Artifact Registry upon successful completion of all build steps. Artifacts in the workspace matching specified paths globs will be uploaded to the specified Artifact Registry repository using the builder service account's credentials. If any artifacts fail to be pushed, the build is marked FAILURE.

        :param maven_artifacts: The maven_artifacts of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :type maven_artifacts: List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact]
        """

        self._maven_artifacts = maven_artifacts

    @property
    def npm_packages(self):
        """Gets the npm_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.

        A list of npm packages to be uploaded to Artifact Registry upon successful completion of all build steps. Npm packages in the specified paths will be uploaded to the specified Artifact Registry repository using the builder service account's credentials. If any packages fail to be pushed, the build is marked FAILURE.

        :return: The npm_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :rtype: List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage]
        """
        return self._npm_packages

    @npm_packages.setter
    def npm_packages(self, npm_packages):
        """Sets the npm_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.

        A list of npm packages to be uploaded to Artifact Registry upon successful completion of all build steps. Npm packages in the specified paths will be uploaded to the specified Artifact Registry repository using the builder service account's credentials. If any packages fail to be pushed, the build is marked FAILURE.

        :param npm_packages: The npm_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :type npm_packages: List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage]
        """

        self._npm_packages = npm_packages

    @property
    def objects(self):
        """Gets the objects of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.


        :return: The objects of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :rtype: ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects
        """
        return self._objects

    @objects.setter
    def objects(self, objects):
        """Sets the objects of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.


        :param objects: The objects of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :type objects: ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects
        """

        self._objects = objects

    @property
    def python_packages(self):
        """Gets the python_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.

        A list of Python packages to be uploaded to Artifact Registry upon successful completion of all build steps. The build service account credentials will be used to perform the upload. If any objects fail to be pushed, the build is marked FAILURE.

        :return: The python_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :rtype: List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage]
        """
        return self._python_packages

    @python_packages.setter
    def python_packages(self, python_packages):
        """Sets the python_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.

        A list of Python packages to be uploaded to Artifact Registry upon successful completion of all build steps. The build service account credentials will be used to perform the upload. If any objects fail to be pushed, the build is marked FAILURE.

        :param python_packages: The python_packages of this ContaineranalysisGoogleDevtoolsCloudbuildV1Artifacts.
        :type python_packages: List[ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage]
        """

        self._python_packages = python_packages
