# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LicensesSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: str=None, license: str=None):
        """LicensesSummary - a model defined in OpenAPI

        :param count: The count of this LicensesSummary.
        :param license: The license of this LicensesSummary.
        """
        self.openapi_types = {
            'count': str,
            'license': str
        }

        self.attribute_map = {
            'count': 'count',
            'license': 'license'
        }

        self._count = count
        self._license = license

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LicensesSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LicensesSummary of this LicensesSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this LicensesSummary.

        The number of fixable vulnerabilities associated with this resource.

        :return: The count of this LicensesSummary.
        :rtype: str
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this LicensesSummary.

        The number of fixable vulnerabilities associated with this resource.

        :param count: The count of this LicensesSummary.
        :type count: str
        """

        self._count = count

    @property
    def license(self):
        """Gets the license of this LicensesSummary.

        The license of the package. Note that the format of this value is not guaranteed. It may be nil, an empty string, a boolean value (A | B), a differently formed boolean value (A OR B), etc...

        :return: The license of this LicensesSummary.
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license):
        """Sets the license of this LicensesSummary.

        The license of the package. Note that the format of this value is not guaranteed. It may be nil, an empty string, a boolean value (A | B), a differently formed boolean value (A OR B), etc...

        :param license: The license of this LicensesSummary.
        :type license: str
        """

        self._license = license
