# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DocumentNote(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_licence: str=None, spdx_version: str=None):
        """DocumentNote - a model defined in OpenAPI

        :param data_licence: The data_licence of this DocumentNote.
        :param spdx_version: The spdx_version of this DocumentNote.
        """
        self.openapi_types = {
            'data_licence': str,
            'spdx_version': str
        }

        self.attribute_map = {
            'data_licence': 'dataLicence',
            'spdx_version': 'spdxVersion'
        }

        self._data_licence = data_licence
        self._spdx_version = spdx_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentNote':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentNote of this DocumentNote.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_licence(self):
        """Gets the data_licence of this DocumentNote.

        Compliance with the SPDX specification includes populating the SPDX fields therein with data related to such fields (\"SPDX-Metadata\")

        :return: The data_licence of this DocumentNote.
        :rtype: str
        """
        return self._data_licence

    @data_licence.setter
    def data_licence(self, data_licence):
        """Sets the data_licence of this DocumentNote.

        Compliance with the SPDX specification includes populating the SPDX fields therein with data related to such fields (\"SPDX-Metadata\")

        :param data_licence: The data_licence of this DocumentNote.
        :type data_licence: str
        """

        self._data_licence = data_licence

    @property
    def spdx_version(self):
        """Gets the spdx_version of this DocumentNote.

        Provide a reference number that can be used to understand how to parse and interpret the rest of the file

        :return: The spdx_version of this DocumentNote.
        :rtype: str
        """
        return self._spdx_version

    @spdx_version.setter
    def spdx_version(self, spdx_version):
        """Sets the spdx_version of this DocumentNote.

        Provide a reference number that can be used to understand how to parse and interpret the rest of the file

        :param spdx_version: The spdx_version of this DocumentNote.
        :type spdx_version: str
        """

        self._spdx_version = spdx_version
