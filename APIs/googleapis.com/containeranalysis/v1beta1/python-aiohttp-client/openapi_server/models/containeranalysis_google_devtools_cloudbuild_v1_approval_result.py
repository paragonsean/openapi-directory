# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approval_time: str=None, approver_account: str=None, comment: str=None, decision: str=None, url: str=None):
        """ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult - a model defined in OpenAPI

        :param approval_time: The approval_time of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :param approver_account: The approver_account of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :param comment: The comment of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :param decision: The decision of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :param url: The url of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        """
        self.openapi_types = {
            'approval_time': str,
            'approver_account': str,
            'comment': str,
            'decision': str,
            'url': str
        }

        self.attribute_map = {
            'approval_time': 'approvalTime',
            'approver_account': 'approverAccount',
            'comment': 'comment',
            'decision': 'decision',
            'url': 'url'
        }

        self._approval_time = approval_time
        self._approver_account = approver_account
        self._comment = comment
        self._decision = decision
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approval_time(self):
        """Gets the approval_time of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Output only. The time when the approval decision was made.

        :return: The approval_time of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :rtype: str
        """
        return self._approval_time

    @approval_time.setter
    def approval_time(self, approval_time):
        """Sets the approval_time of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Output only. The time when the approval decision was made.

        :param approval_time: The approval_time of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :type approval_time: str
        """

        self._approval_time = approval_time

    @property
    def approver_account(self):
        """Gets the approver_account of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Output only. Email of the user that called the ApproveBuild API to approve or reject a build at the time that the API was called.

        :return: The approver_account of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :rtype: str
        """
        return self._approver_account

    @approver_account.setter
    def approver_account(self, approver_account):
        """Sets the approver_account of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Output only. Email of the user that called the ApproveBuild API to approve or reject a build at the time that the API was called.

        :param approver_account: The approver_account of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :type approver_account: str
        """

        self._approver_account = approver_account

    @property
    def comment(self):
        """Gets the comment of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Optional. An optional comment for this manual approval result.

        :return: The comment of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Optional. An optional comment for this manual approval result.

        :param comment: The comment of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :type comment: str
        """

        self._comment = comment

    @property
    def decision(self):
        """Gets the decision of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Required. The decision of this manual approval.

        :return: The decision of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :rtype: str
        """
        return self._decision

    @decision.setter
    def decision(self, decision):
        """Sets the decision of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Required. The decision of this manual approval.

        :param decision: The decision of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :type decision: str
        """
        allowed_values = ["DECISION_UNSPECIFIED", "APPROVED", "REJECTED"]  # noqa: E501
        if decision not in allowed_values:
            raise ValueError(
                "Invalid value for `decision` ({0}), must be one of {1}"
                .format(decision, allowed_values)
            )

        self._decision = decision

    @property
    def url(self):
        """Gets the url of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Optional. An optional URL tied to this manual approval result. This field is essentially the same as comment, except that it will be rendered by the UI differently. An example use case is a link to an external job that approved this Build.

        :return: The url of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.

        Optional. An optional URL tied to this manual approval result. This field is essentially the same as comment, except that it will be rendered by the UI differently. An example use case is a link to an external job that approved this Build.

        :param url: The url of this ContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.
        :type url: str
        """

        self._url = url
