# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.details import Details
from openapi_server.models.document_occurrence import DocumentOccurrence
from openapi_server.models.envelope import Envelope
from openapi_server.models.file_occurrence import FileOccurrence
from openapi_server.models.grafeas_v1beta1_build_details import GrafeasV1beta1BuildDetails
from openapi_server.models.grafeas_v1beta1_deployment_details import GrafeasV1beta1DeploymentDetails
from openapi_server.models.grafeas_v1beta1_discovery_details import GrafeasV1beta1DiscoveryDetails
from openapi_server.models.grafeas_v1beta1_image_details import GrafeasV1beta1ImageDetails
from openapi_server.models.grafeas_v1beta1_intoto_details import GrafeasV1beta1IntotoDetails
from openapi_server.models.grafeas_v1beta1_package_details import GrafeasV1beta1PackageDetails
from openapi_server.models.grafeas_v1beta1_vulnerability_details import GrafeasV1beta1VulnerabilityDetails
from openapi_server.models.package_info_occurrence import PackageInfoOccurrence
from openapi_server.models.relationship_occurrence import RelationshipOccurrence
from openapi_server.models.resource import Resource
from openapi_server.models.sbom_reference_occurrence import SBOMReferenceOccurrence
from openapi_server import util


class Occurrence(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attestation: Details=None, build: GrafeasV1beta1BuildDetails=None, create_time: str=None, deployment: GrafeasV1beta1DeploymentDetails=None, derived_image: GrafeasV1beta1ImageDetails=None, discovered: GrafeasV1beta1DiscoveryDetails=None, envelope: Envelope=None, installation: GrafeasV1beta1PackageDetails=None, intoto: GrafeasV1beta1IntotoDetails=None, kind: str=None, name: str=None, note_name: str=None, remediation: str=None, resource: Resource=None, sbom: DocumentOccurrence=None, sbom_reference: SBOMReferenceOccurrence=None, spdx_file: FileOccurrence=None, spdx_package: PackageInfoOccurrence=None, spdx_relationship: RelationshipOccurrence=None, update_time: str=None, vulnerability: GrafeasV1beta1VulnerabilityDetails=None):
        """Occurrence - a model defined in OpenAPI

        :param attestation: The attestation of this Occurrence.
        :param build: The build of this Occurrence.
        :param create_time: The create_time of this Occurrence.
        :param deployment: The deployment of this Occurrence.
        :param derived_image: The derived_image of this Occurrence.
        :param discovered: The discovered of this Occurrence.
        :param envelope: The envelope of this Occurrence.
        :param installation: The installation of this Occurrence.
        :param intoto: The intoto of this Occurrence.
        :param kind: The kind of this Occurrence.
        :param name: The name of this Occurrence.
        :param note_name: The note_name of this Occurrence.
        :param remediation: The remediation of this Occurrence.
        :param resource: The resource of this Occurrence.
        :param sbom: The sbom of this Occurrence.
        :param sbom_reference: The sbom_reference of this Occurrence.
        :param spdx_file: The spdx_file of this Occurrence.
        :param spdx_package: The spdx_package of this Occurrence.
        :param spdx_relationship: The spdx_relationship of this Occurrence.
        :param update_time: The update_time of this Occurrence.
        :param vulnerability: The vulnerability of this Occurrence.
        """
        self.openapi_types = {
            'attestation': Details,
            'build': GrafeasV1beta1BuildDetails,
            'create_time': str,
            'deployment': GrafeasV1beta1DeploymentDetails,
            'derived_image': GrafeasV1beta1ImageDetails,
            'discovered': GrafeasV1beta1DiscoveryDetails,
            'envelope': Envelope,
            'installation': GrafeasV1beta1PackageDetails,
            'intoto': GrafeasV1beta1IntotoDetails,
            'kind': str,
            'name': str,
            'note_name': str,
            'remediation': str,
            'resource': Resource,
            'sbom': DocumentOccurrence,
            'sbom_reference': SBOMReferenceOccurrence,
            'spdx_file': FileOccurrence,
            'spdx_package': PackageInfoOccurrence,
            'spdx_relationship': RelationshipOccurrence,
            'update_time': str,
            'vulnerability': GrafeasV1beta1VulnerabilityDetails
        }

        self.attribute_map = {
            'attestation': 'attestation',
            'build': 'build',
            'create_time': 'createTime',
            'deployment': 'deployment',
            'derived_image': 'derivedImage',
            'discovered': 'discovered',
            'envelope': 'envelope',
            'installation': 'installation',
            'intoto': 'intoto',
            'kind': 'kind',
            'name': 'name',
            'note_name': 'noteName',
            'remediation': 'remediation',
            'resource': 'resource',
            'sbom': 'sbom',
            'sbom_reference': 'sbomReference',
            'spdx_file': 'spdxFile',
            'spdx_package': 'spdxPackage',
            'spdx_relationship': 'spdxRelationship',
            'update_time': 'updateTime',
            'vulnerability': 'vulnerability'
        }

        self._attestation = attestation
        self._build = build
        self._create_time = create_time
        self._deployment = deployment
        self._derived_image = derived_image
        self._discovered = discovered
        self._envelope = envelope
        self._installation = installation
        self._intoto = intoto
        self._kind = kind
        self._name = name
        self._note_name = note_name
        self._remediation = remediation
        self._resource = resource
        self._sbom = sbom
        self._sbom_reference = sbom_reference
        self._spdx_file = spdx_file
        self._spdx_package = spdx_package
        self._spdx_relationship = spdx_relationship
        self._update_time = update_time
        self._vulnerability = vulnerability

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Occurrence':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Occurrence of this Occurrence.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attestation(self):
        """Gets the attestation of this Occurrence.


        :return: The attestation of this Occurrence.
        :rtype: Details
        """
        return self._attestation

    @attestation.setter
    def attestation(self, attestation):
        """Sets the attestation of this Occurrence.


        :param attestation: The attestation of this Occurrence.
        :type attestation: Details
        """

        self._attestation = attestation

    @property
    def build(self):
        """Gets the build of this Occurrence.


        :return: The build of this Occurrence.
        :rtype: GrafeasV1beta1BuildDetails
        """
        return self._build

    @build.setter
    def build(self, build):
        """Sets the build of this Occurrence.


        :param build: The build of this Occurrence.
        :type build: GrafeasV1beta1BuildDetails
        """

        self._build = build

    @property
    def create_time(self):
        """Gets the create_time of this Occurrence.

        Output only. The time this occurrence was created.

        :return: The create_time of this Occurrence.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this Occurrence.

        Output only. The time this occurrence was created.

        :param create_time: The create_time of this Occurrence.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def deployment(self):
        """Gets the deployment of this Occurrence.


        :return: The deployment of this Occurrence.
        :rtype: GrafeasV1beta1DeploymentDetails
        """
        return self._deployment

    @deployment.setter
    def deployment(self, deployment):
        """Sets the deployment of this Occurrence.


        :param deployment: The deployment of this Occurrence.
        :type deployment: GrafeasV1beta1DeploymentDetails
        """

        self._deployment = deployment

    @property
    def derived_image(self):
        """Gets the derived_image of this Occurrence.


        :return: The derived_image of this Occurrence.
        :rtype: GrafeasV1beta1ImageDetails
        """
        return self._derived_image

    @derived_image.setter
    def derived_image(self, derived_image):
        """Sets the derived_image of this Occurrence.


        :param derived_image: The derived_image of this Occurrence.
        :type derived_image: GrafeasV1beta1ImageDetails
        """

        self._derived_image = derived_image

    @property
    def discovered(self):
        """Gets the discovered of this Occurrence.


        :return: The discovered of this Occurrence.
        :rtype: GrafeasV1beta1DiscoveryDetails
        """
        return self._discovered

    @discovered.setter
    def discovered(self, discovered):
        """Sets the discovered of this Occurrence.


        :param discovered: The discovered of this Occurrence.
        :type discovered: GrafeasV1beta1DiscoveryDetails
        """

        self._discovered = discovered

    @property
    def envelope(self):
        """Gets the envelope of this Occurrence.


        :return: The envelope of this Occurrence.
        :rtype: Envelope
        """
        return self._envelope

    @envelope.setter
    def envelope(self, envelope):
        """Sets the envelope of this Occurrence.


        :param envelope: The envelope of this Occurrence.
        :type envelope: Envelope
        """

        self._envelope = envelope

    @property
    def installation(self):
        """Gets the installation of this Occurrence.


        :return: The installation of this Occurrence.
        :rtype: GrafeasV1beta1PackageDetails
        """
        return self._installation

    @installation.setter
    def installation(self, installation):
        """Sets the installation of this Occurrence.


        :param installation: The installation of this Occurrence.
        :type installation: GrafeasV1beta1PackageDetails
        """

        self._installation = installation

    @property
    def intoto(self):
        """Gets the intoto of this Occurrence.


        :return: The intoto of this Occurrence.
        :rtype: GrafeasV1beta1IntotoDetails
        """
        return self._intoto

    @intoto.setter
    def intoto(self, intoto):
        """Sets the intoto of this Occurrence.


        :param intoto: The intoto of this Occurrence.
        :type intoto: GrafeasV1beta1IntotoDetails
        """

        self._intoto = intoto

    @property
    def kind(self):
        """Gets the kind of this Occurrence.

        Output only. This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.

        :return: The kind of this Occurrence.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Occurrence.

        Output only. This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.

        :param kind: The kind of this Occurrence.
        :type kind: str
        """
        allowed_values = ["NOTE_KIND_UNSPECIFIED", "VULNERABILITY", "BUILD", "IMAGE", "PACKAGE", "DEPLOYMENT", "DISCOVERY", "ATTESTATION", "INTOTO", "SBOM", "SPDX_PACKAGE", "SPDX_FILE", "SPDX_RELATIONSHIP", "VULNERABILITY_ASSESSMENT", "SBOM_REFERENCE"]  # noqa: E501
        if kind not in allowed_values:
            raise ValueError(
                "Invalid value for `kind` ({0}), must be one of {1}"
                .format(kind, allowed_values)
            )

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this Occurrence.

        Output only. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.

        :return: The name of this Occurrence.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Occurrence.

        Output only. The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.

        :param name: The name of this Occurrence.
        :type name: str
        """

        self._name = name

    @property
    def note_name(self):
        """Gets the note_name of this Occurrence.

        Required. Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.

        :return: The note_name of this Occurrence.
        :rtype: str
        """
        return self._note_name

    @note_name.setter
    def note_name(self, note_name):
        """Sets the note_name of this Occurrence.

        Required. Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.

        :param note_name: The note_name of this Occurrence.
        :type note_name: str
        """

        self._note_name = note_name

    @property
    def remediation(self):
        """Gets the remediation of this Occurrence.

        A description of actions that can be taken to remedy the note.

        :return: The remediation of this Occurrence.
        :rtype: str
        """
        return self._remediation

    @remediation.setter
    def remediation(self, remediation):
        """Sets the remediation of this Occurrence.

        A description of actions that can be taken to remedy the note.

        :param remediation: The remediation of this Occurrence.
        :type remediation: str
        """

        self._remediation = remediation

    @property
    def resource(self):
        """Gets the resource of this Occurrence.


        :return: The resource of this Occurrence.
        :rtype: Resource
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this Occurrence.


        :param resource: The resource of this Occurrence.
        :type resource: Resource
        """

        self._resource = resource

    @property
    def sbom(self):
        """Gets the sbom of this Occurrence.


        :return: The sbom of this Occurrence.
        :rtype: DocumentOccurrence
        """
        return self._sbom

    @sbom.setter
    def sbom(self, sbom):
        """Sets the sbom of this Occurrence.


        :param sbom: The sbom of this Occurrence.
        :type sbom: DocumentOccurrence
        """

        self._sbom = sbom

    @property
    def sbom_reference(self):
        """Gets the sbom_reference of this Occurrence.


        :return: The sbom_reference of this Occurrence.
        :rtype: SBOMReferenceOccurrence
        """
        return self._sbom_reference

    @sbom_reference.setter
    def sbom_reference(self, sbom_reference):
        """Sets the sbom_reference of this Occurrence.


        :param sbom_reference: The sbom_reference of this Occurrence.
        :type sbom_reference: SBOMReferenceOccurrence
        """

        self._sbom_reference = sbom_reference

    @property
    def spdx_file(self):
        """Gets the spdx_file of this Occurrence.


        :return: The spdx_file of this Occurrence.
        :rtype: FileOccurrence
        """
        return self._spdx_file

    @spdx_file.setter
    def spdx_file(self, spdx_file):
        """Sets the spdx_file of this Occurrence.


        :param spdx_file: The spdx_file of this Occurrence.
        :type spdx_file: FileOccurrence
        """

        self._spdx_file = spdx_file

    @property
    def spdx_package(self):
        """Gets the spdx_package of this Occurrence.


        :return: The spdx_package of this Occurrence.
        :rtype: PackageInfoOccurrence
        """
        return self._spdx_package

    @spdx_package.setter
    def spdx_package(self, spdx_package):
        """Sets the spdx_package of this Occurrence.


        :param spdx_package: The spdx_package of this Occurrence.
        :type spdx_package: PackageInfoOccurrence
        """

        self._spdx_package = spdx_package

    @property
    def spdx_relationship(self):
        """Gets the spdx_relationship of this Occurrence.


        :return: The spdx_relationship of this Occurrence.
        :rtype: RelationshipOccurrence
        """
        return self._spdx_relationship

    @spdx_relationship.setter
    def spdx_relationship(self, spdx_relationship):
        """Sets the spdx_relationship of this Occurrence.


        :param spdx_relationship: The spdx_relationship of this Occurrence.
        :type spdx_relationship: RelationshipOccurrence
        """

        self._spdx_relationship = spdx_relationship

    @property
    def update_time(self):
        """Gets the update_time of this Occurrence.

        Output only. The time this occurrence was last updated.

        :return: The update_time of this Occurrence.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this Occurrence.

        Output only. The time this occurrence was last updated.

        :param update_time: The update_time of this Occurrence.
        :type update_time: str
        """

        self._update_time = update_time

    @property
    def vulnerability(self):
        """Gets the vulnerability of this Occurrence.


        :return: The vulnerability of this Occurrence.
        :rtype: GrafeasV1beta1VulnerabilityDetails
        """
        return self._vulnerability

    @vulnerability.setter
    def vulnerability(self, vulnerability):
        """Sets the vulnerability of this Occurrence.


        :param vulnerability: The vulnerability of this Occurrence.
        :type vulnerability: GrafeasV1beta1VulnerabilityDetails
        """

        self._vulnerability = vulnerability
