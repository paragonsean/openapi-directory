# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.discovered import Discovered
from openapi_server import util


class GrafeasV1beta1DiscoveryDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, discovered: Discovered=None):
        """GrafeasV1beta1DiscoveryDetails - a model defined in OpenAPI

        :param discovered: The discovered of this GrafeasV1beta1DiscoveryDetails.
        """
        self.openapi_types = {
            'discovered': Discovered
        }

        self.attribute_map = {
            'discovered': 'discovered'
        }

        self._discovered = discovered

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GrafeasV1beta1DiscoveryDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GrafeasV1beta1DiscoveryDetails of this GrafeasV1beta1DiscoveryDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def discovered(self):
        """Gets the discovered of this GrafeasV1beta1DiscoveryDetails.


        :return: The discovered of this GrafeasV1beta1DiscoveryDetails.
        :rtype: Discovered
        """
        return self._discovered

    @discovered.setter
    def discovered(self, discovered):
        """Sets the discovered of this GrafeasV1beta1DiscoveryDetails.


        :param discovered: The discovered of this GrafeasV1beta1DiscoveryDetails.
        :type discovered: Discovered
        """

        self._discovered = discovered
