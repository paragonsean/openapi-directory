# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArtifactRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_rule: List[str]=None):
        """ArtifactRule - a model defined in OpenAPI

        :param artifact_rule: The artifact_rule of this ArtifactRule.
        """
        self.openapi_types = {
            'artifact_rule': List[str]
        }

        self.attribute_map = {
            'artifact_rule': 'artifactRule'
        }

        self._artifact_rule = artifact_rule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtifactRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtifactRule of this ArtifactRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_rule(self):
        """Gets the artifact_rule of this ArtifactRule.


        :return: The artifact_rule of this ArtifactRule.
        :rtype: List[str]
        """
        return self._artifact_rule

    @artifact_rule.setter
    def artifact_rule(self, artifact_rule):
        """Sets the artifact_rule of this ArtifactRule.


        :param artifact_rule: The artifact_rule of this ArtifactRule.
        :type artifact_rule: List[str]
        """

        self._artifact_rule = artifact_rule
