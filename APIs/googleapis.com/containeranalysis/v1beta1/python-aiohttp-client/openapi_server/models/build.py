# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_signature import BuildSignature
from openapi_server import util


class Build(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, builder_version: str=None, signature: BuildSignature=None):
        """Build - a model defined in OpenAPI

        :param builder_version: The builder_version of this Build.
        :param signature: The signature of this Build.
        """
        self.openapi_types = {
            'builder_version': str,
            'signature': BuildSignature
        }

        self.attribute_map = {
            'builder_version': 'builderVersion',
            'signature': 'signature'
        }

        self._builder_version = builder_version
        self._signature = signature

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Build':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Build of this Build.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def builder_version(self):
        """Gets the builder_version of this Build.

        Required. Immutable. Version of the builder which produced this build.

        :return: The builder_version of this Build.
        :rtype: str
        """
        return self._builder_version

    @builder_version.setter
    def builder_version(self, builder_version):
        """Sets the builder_version of this Build.

        Required. Immutable. Version of the builder which produced this build.

        :param builder_version: The builder_version of this Build.
        :type builder_version: str
        """

        self._builder_version = builder_version

    @property
    def signature(self):
        """Gets the signature of this Build.


        :return: The signature of this Build.
        :rtype: BuildSignature
        """
        return self._signature

    @signature.setter
    def signature(self, signature):
        """Sets the signature of this Build.


        :param signature: The signature of this Build.
        :type signature: BuildSignature
        """

        self._signature = signature
