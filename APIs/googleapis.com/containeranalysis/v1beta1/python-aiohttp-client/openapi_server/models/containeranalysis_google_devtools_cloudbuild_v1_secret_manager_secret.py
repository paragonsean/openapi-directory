# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, env: str=None, version_name: str=None):
        """ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret - a model defined in OpenAPI

        :param env: The env of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.
        :param version_name: The version_name of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.
        """
        self.openapi_types = {
            'env': str,
            'version_name': str
        }

        self.attribute_map = {
            'env': 'env',
            'version_name': 'versionName'
        }

        self._env = env
        self._version_name = version_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def env(self):
        """Gets the env of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.

        Environment variable name to associate with the secret. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step.

        :return: The env of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.
        :rtype: str
        """
        return self._env

    @env.setter
    def env(self, env):
        """Sets the env of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.

        Environment variable name to associate with the secret. Secret environment variables must be unique across all of a build's secrets, and must be used by at least one build step.

        :param env: The env of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.
        :type env: str
        """

        self._env = env

    @property
    def version_name(self):
        """Gets the version_name of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.

        Resource name of the SecretVersion. In format: projects/*/secrets/*/versions/*

        :return: The version_name of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.
        :rtype: str
        """
        return self._version_name

    @version_name.setter
    def version_name(self, version_name):
        """Sets the version_name of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.

        Resource name of the SecretVersion. In format: projects/*/secrets/*/versions/*

        :param version_name: The version_name of this ContaineranalysisGoogleDevtoolsCloudbuildV1SecretManagerSecret.
        :type version_name: str
        """

        self._version_name = version_name
