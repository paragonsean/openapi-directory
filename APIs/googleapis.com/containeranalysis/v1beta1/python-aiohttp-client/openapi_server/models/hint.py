# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Hint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, human_readable_name: str=None):
        """Hint - a model defined in OpenAPI

        :param human_readable_name: The human_readable_name of this Hint.
        """
        self.openapi_types = {
            'human_readable_name': str
        }

        self.attribute_map = {
            'human_readable_name': 'humanReadableName'
        }

        self._human_readable_name = human_readable_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hint of this Hint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def human_readable_name(self):
        """Gets the human_readable_name of this Hint.

        Required. The human readable name of this attestation authority, for example \"qa\".

        :return: The human_readable_name of this Hint.
        :rtype: str
        """
        return self._human_readable_name

    @human_readable_name.setter
    def human_readable_name(self, human_readable_name):
        """Sets the human_readable_name of this Hint.

        Required. The human readable name of this attestation authority, for example \"qa\".

        :param human_readable_name: The human_readable_name of this Hint.
        :type human_readable_name: str
        """

        self._human_readable_name = human_readable_name
