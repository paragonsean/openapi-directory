# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SigningKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key_id: str=None, key_scheme: str=None, key_type: str=None, public_key_value: str=None):
        """SigningKey - a model defined in OpenAPI

        :param key_id: The key_id of this SigningKey.
        :param key_scheme: The key_scheme of this SigningKey.
        :param key_type: The key_type of this SigningKey.
        :param public_key_value: The public_key_value of this SigningKey.
        """
        self.openapi_types = {
            'key_id': str,
            'key_scheme': str,
            'key_type': str,
            'public_key_value': str
        }

        self.attribute_map = {
            'key_id': 'keyId',
            'key_scheme': 'keyScheme',
            'key_type': 'keyType',
            'public_key_value': 'publicKeyValue'
        }

        self._key_id = key_id
        self._key_scheme = key_scheme
        self._key_type = key_type
        self._public_key_value = public_key_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SigningKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SigningKey of this SigningKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key_id(self):
        """Gets the key_id of this SigningKey.

        key_id is an identifier for the signing key.

        :return: The key_id of this SigningKey.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this SigningKey.

        key_id is an identifier for the signing key.

        :param key_id: The key_id of this SigningKey.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def key_scheme(self):
        """Gets the key_scheme of this SigningKey.

        This field contains the corresponding signature scheme. Eg: \"rsassa-pss-sha256\".

        :return: The key_scheme of this SigningKey.
        :rtype: str
        """
        return self._key_scheme

    @key_scheme.setter
    def key_scheme(self, key_scheme):
        """Sets the key_scheme of this SigningKey.

        This field contains the corresponding signature scheme. Eg: \"rsassa-pss-sha256\".

        :param key_scheme: The key_scheme of this SigningKey.
        :type key_scheme: str
        """

        self._key_scheme = key_scheme

    @property
    def key_type(self):
        """Gets the key_type of this SigningKey.

        This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\", and \"ecdsa\".

        :return: The key_type of this SigningKey.
        :rtype: str
        """
        return self._key_type

    @key_type.setter
    def key_type(self, key_type):
        """Sets the key_type of this SigningKey.

        This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\", and \"ecdsa\".

        :param key_type: The key_type of this SigningKey.
        :type key_type: str
        """

        self._key_type = key_type

    @property
    def public_key_value(self):
        """Gets the public_key_value of this SigningKey.

        This field contains the actual public key.

        :return: The public_key_value of this SigningKey.
        :rtype: str
        """
        return self._public_key_value

    @public_key_value.setter
    def public_key_value(self, public_key_value):
        """Sets the public_key_value of this SigningKey.

        This field contains the actual public key.

        :param public_key_value: The public_key_value of this SigningKey.
        :type public_key_value: str
        """

        self._public_key_value = public_key_value
