# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Environment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_values: Dict[str, str]=None):
        """Environment - a model defined in OpenAPI

        :param custom_values: The custom_values of this Environment.
        """
        self.openapi_types = {
            'custom_values': Dict[str, str]
        }

        self.attribute_map = {
            'custom_values': 'customValues'
        }

        self._custom_values = custom_values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Environment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Environment of this Environment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_values(self):
        """Gets the custom_values of this Environment.


        :return: The custom_values of this Environment.
        :rtype: Dict[str, str]
        """
        return self._custom_values

    @custom_values.setter
    def custom_values(self, custom_values):
        """Sets the custom_values of this Environment.


        :param custom_values: The custom_values of this Environment.
        :type custom_values: Dict[str, str]
        """

        self._custom_values = custom_values
