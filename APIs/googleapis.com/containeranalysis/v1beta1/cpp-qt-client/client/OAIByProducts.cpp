/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIByProducts.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIByProducts::OAIByProducts(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIByProducts::OAIByProducts() {
    this->initializeModel();
}

OAIByProducts::~OAIByProducts() {}

void OAIByProducts::initializeModel() {

    m_custom_values_isSet = false;
    m_custom_values_isValid = false;
}

void OAIByProducts::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIByProducts::fromJsonObject(QJsonObject json) {

    m_custom_values_isValid = ::OpenAPI::fromJsonValue(m_custom_values, json[QString("customValues")]);
    m_custom_values_isSet = !json[QString("customValues")].isNull() && m_custom_values_isValid;
}

QString OAIByProducts::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIByProducts::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_values.size() > 0) {
        obj.insert(QString("customValues"), ::OpenAPI::toJsonValue(m_custom_values));
    }
    return obj;
}

QMap<QString, QString> OAIByProducts::getCustomValues() const {
    return m_custom_values;
}
void OAIByProducts::setCustomValues(const QMap<QString, QString> &custom_values) {
    m_custom_values = custom_values;
    m_custom_values_isSet = true;
}

bool OAIByProducts::is_custom_values_Set() const{
    return m_custom_values_isSet;
}

bool OAIByProducts::is_custom_values_Valid() const{
    return m_custom_values_isValid;
}

bool OAIByProducts::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIByProducts::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
