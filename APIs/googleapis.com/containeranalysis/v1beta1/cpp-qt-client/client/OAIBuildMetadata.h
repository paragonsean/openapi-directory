/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuildMetadata.h
 *
 * 
 */

#ifndef OAIBuildMetadata_H
#define OAIBuildMetadata_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBuildMetadata : public OAIObject {
public:
    OAIBuildMetadata();
    OAIBuildMetadata(QString json);
    ~OAIBuildMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFinishedOn() const;
    void setFinishedOn(const QString &finished_on);
    bool is_finished_on_Set() const;
    bool is_finished_on_Valid() const;

    QString getInvocationId() const;
    void setInvocationId(const QString &invocation_id);
    bool is_invocation_id_Set() const;
    bool is_invocation_id_Valid() const;

    QString getStartedOn() const;
    void setStartedOn(const QString &started_on);
    bool is_started_on_Set() const;
    bool is_started_on_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_finished_on;
    bool m_finished_on_isSet;
    bool m_finished_on_isValid;

    QString m_invocation_id;
    bool m_invocation_id_isSet;
    bool m_invocation_id_isValid;

    QString m_started_on;
    bool m_started_on_isSet;
    bool m_started_on_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuildMetadata)

#endif // OAIBuildMetadata_H
