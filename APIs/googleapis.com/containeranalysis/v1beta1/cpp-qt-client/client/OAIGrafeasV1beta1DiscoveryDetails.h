/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrafeasV1beta1DiscoveryDetails.h
 *
 * Details of a discovery occurrence.
 */

#ifndef OAIGrafeasV1beta1DiscoveryDetails_H
#define OAIGrafeasV1beta1DiscoveryDetails_H

#include <QJsonObject>

#include "OAIDiscovered.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDiscovered;

class OAIGrafeasV1beta1DiscoveryDetails : public OAIObject {
public:
    OAIGrafeasV1beta1DiscoveryDetails();
    OAIGrafeasV1beta1DiscoveryDetails(QString json);
    ~OAIGrafeasV1beta1DiscoveryDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDiscovered getDiscovered() const;
    void setDiscovered(const OAIDiscovered &discovered);
    bool is_discovered_Set() const;
    bool is_discovered_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDiscovered m_discovered;
    bool m_discovered_isSet;
    bool m_discovered_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrafeasV1beta1DiscoveryDetails)

#endif // OAIGrafeasV1beta1DiscoveryDetails_H
