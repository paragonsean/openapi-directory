/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILink.h
 *
 * This corresponds to an in-toto link.
 */

#ifndef OAILink_H
#define OAILink_H

#include <QJsonObject>

#include "OAIByProducts.h"
#include "OAIEnvironment.h"
#include "OAIGrafeasV1beta1IntotoArtifact.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIByProducts;
class OAIEnvironment;
class OAIGrafeasV1beta1IntotoArtifact;

class OAILink : public OAIObject {
public:
    OAILink();
    OAILink(QString json);
    ~OAILink() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIByProducts getByproducts() const;
    void setByproducts(const OAIByProducts &byproducts);
    bool is_byproducts_Set() const;
    bool is_byproducts_Valid() const;

    QList<QString> getCommand() const;
    void setCommand(const QList<QString> &command);
    bool is_command_Set() const;
    bool is_command_Valid() const;

    OAIEnvironment getEnvironment() const;
    void setEnvironment(const OAIEnvironment &environment);
    bool is_environment_Set() const;
    bool is_environment_Valid() const;

    QList<OAIGrafeasV1beta1IntotoArtifact> getMaterials() const;
    void setMaterials(const QList<OAIGrafeasV1beta1IntotoArtifact> &materials);
    bool is_materials_Set() const;
    bool is_materials_Valid() const;

    QList<OAIGrafeasV1beta1IntotoArtifact> getProducts() const;
    void setProducts(const QList<OAIGrafeasV1beta1IntotoArtifact> &products);
    bool is_products_Set() const;
    bool is_products_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIByProducts m_byproducts;
    bool m_byproducts_isSet;
    bool m_byproducts_isValid;

    QList<QString> m_command;
    bool m_command_isSet;
    bool m_command_isValid;

    OAIEnvironment m_environment;
    bool m_environment_isSet;
    bool m_environment_isValid;

    QList<OAIGrafeasV1beta1IntotoArtifact> m_materials;
    bool m_materials_isSet;
    bool m_materials_isValid;

    QList<OAIGrafeasV1beta1IntotoArtifact> m_products;
    bool m_products_isSet;
    bool m_products_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILink)

#endif // OAILink_H
