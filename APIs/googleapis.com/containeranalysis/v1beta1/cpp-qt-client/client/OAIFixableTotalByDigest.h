/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFixableTotalByDigest.h
 *
 * Per resource and severity counts of fixable and total vulnerabilities.
 */

#ifndef OAIFixableTotalByDigest_H
#define OAIFixableTotalByDigest_H

#include <QJsonObject>

#include "OAIResource.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResource;

class OAIFixableTotalByDigest : public OAIObject {
public:
    OAIFixableTotalByDigest();
    OAIFixableTotalByDigest(QString json);
    ~OAIFixableTotalByDigest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFixableCount() const;
    void setFixableCount(const QString &fixable_count);
    bool is_fixable_count_Set() const;
    bool is_fixable_count_Valid() const;

    OAIResource getResource() const;
    void setResource(const OAIResource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QString getSeverity() const;
    void setSeverity(const QString &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    QString getTotalCount() const;
    void setTotalCount(const QString &total_count);
    bool is_total_count_Set() const;
    bool is_total_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_fixable_count;
    bool m_fixable_count_isSet;
    bool m_fixable_count_isValid;

    OAIResource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QString m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    QString m_total_count;
    bool m_total_count_isSet;
    bool m_total_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFixableTotalByDigest)

#endif // OAIFixableTotalByDigest_H
