/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFingerprint.h
 *
 * A set of properties that uniquely identify a given Docker image.
 */

#ifndef OAIFingerprint_H
#define OAIFingerprint_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFingerprint : public OAIObject {
public:
    OAIFingerprint();
    OAIFingerprint(QString json);
    ~OAIFingerprint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getV1Name() const;
    void setV1Name(const QString &v1_name);
    bool is_v1_name_Set() const;
    bool is_v1_name_Valid() const;

    QList<QString> getV2Blob() const;
    void setV2Blob(const QList<QString> &v2_blob);
    bool is_v2_blob_Set() const;
    bool is_v2_blob_Valid() const;

    QString getV2Name() const;
    void setV2Name(const QString &v2_name);
    bool is_v2_name_Set() const;
    bool is_v2_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_v1_name;
    bool m_v1_name_isSet;
    bool m_v1_name_isValid;

    QList<QString> m_v2_blob;
    bool m_v2_blob_isSet;
    bool m_v2_blob_isValid;

    QString m_v2_name;
    bool m_v2_name_isSet;
    bool m_v2_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFingerprint)

#endif // OAIFingerprint_H
