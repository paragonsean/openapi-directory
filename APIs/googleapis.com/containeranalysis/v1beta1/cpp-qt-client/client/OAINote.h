/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINote.h
 *
 * A type of analysis that can be done for a resource.
 */

#ifndef OAINote_H
#define OAINote_H

#include <QJsonObject>

#include "OAIAuthority.h"
#include "OAIBasis.h"
#include "OAIBuild.h"
#include "OAIDeployable.h"
#include "OAIDiscovery.h"
#include "OAIDocumentNote.h"
#include "OAIFileNote.h"
#include "OAIInToto.h"
#include "OAIPackage.h"
#include "OAIPackageInfoNote.h"
#include "OAIRelatedUrl.h"
#include "OAIRelationshipNote.h"
#include "OAISBOMReferenceNote.h"
#include "OAIVulnerability.h"
#include "OAIVulnerabilityAssessmentNote.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthority;
class OAIBasis;
class OAIBuild;
class OAIDeployable;
class OAIDiscovery;
class OAIInToto;
class OAIPackage;
class OAIRelatedUrl;
class OAIDocumentNote;
class OAISBOMReferenceNote;
class OAIFileNote;
class OAIPackageInfoNote;
class OAIRelationshipNote;
class OAIVulnerability;
class OAIVulnerabilityAssessmentNote;

class OAINote : public OAIObject {
public:
    OAINote();
    OAINote(QString json);
    ~OAINote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAuthority getAttestationAuthority() const;
    void setAttestationAuthority(const OAIAuthority &attestation_authority);
    bool is_attestation_authority_Set() const;
    bool is_attestation_authority_Valid() const;

    OAIBasis getBaseImage() const;
    void setBaseImage(const OAIBasis &base_image);
    bool is_base_image_Set() const;
    bool is_base_image_Valid() const;

    OAIBuild getBuild() const;
    void setBuild(const OAIBuild &build);
    bool is_build_Set() const;
    bool is_build_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAIDeployable getDeployable() const;
    void setDeployable(const OAIDeployable &deployable);
    bool is_deployable_Set() const;
    bool is_deployable_Valid() const;

    OAIDiscovery getDiscovery() const;
    void setDiscovery(const OAIDiscovery &discovery);
    bool is_discovery_Set() const;
    bool is_discovery_Valid() const;

    QString getExpirationTime() const;
    void setExpirationTime(const QString &expiration_time);
    bool is_expiration_time_Set() const;
    bool is_expiration_time_Valid() const;

    OAIInToto getIntoto() const;
    void setIntoto(const OAIInToto &intoto);
    bool is_intoto_Set() const;
    bool is_intoto_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getLongDescription() const;
    void setLongDescription(const QString &long_description);
    bool is_long_description_Set() const;
    bool is_long_description_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPackage getPackage() const;
    void setPackage(const OAIPackage &package);
    bool is_package_Set() const;
    bool is_package_Valid() const;

    QList<QString> getRelatedNoteNames() const;
    void setRelatedNoteNames(const QList<QString> &related_note_names);
    bool is_related_note_names_Set() const;
    bool is_related_note_names_Valid() const;

    QList<OAIRelatedUrl> getRelatedUrl() const;
    void setRelatedUrl(const QList<OAIRelatedUrl> &related_url);
    bool is_related_url_Set() const;
    bool is_related_url_Valid() const;

    OAIDocumentNote getSbom() const;
    void setSbom(const OAIDocumentNote &sbom);
    bool is_sbom_Set() const;
    bool is_sbom_Valid() const;

    OAISBOMReferenceNote getSbomReference() const;
    void setSbomReference(const OAISBOMReferenceNote &sbom_reference);
    bool is_sbom_reference_Set() const;
    bool is_sbom_reference_Valid() const;

    QString getShortDescription() const;
    void setShortDescription(const QString &short_description);
    bool is_short_description_Set() const;
    bool is_short_description_Valid() const;

    OAIFileNote getSpdxFile() const;
    void setSpdxFile(const OAIFileNote &spdx_file);
    bool is_spdx_file_Set() const;
    bool is_spdx_file_Valid() const;

    OAIPackageInfoNote getSpdxPackage() const;
    void setSpdxPackage(const OAIPackageInfoNote &spdx_package);
    bool is_spdx_package_Set() const;
    bool is_spdx_package_Valid() const;

    OAIRelationshipNote getSpdxRelationship() const;
    void setSpdxRelationship(const OAIRelationshipNote &spdx_relationship);
    bool is_spdx_relationship_Set() const;
    bool is_spdx_relationship_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    OAIVulnerability getVulnerability() const;
    void setVulnerability(const OAIVulnerability &vulnerability);
    bool is_vulnerability_Set() const;
    bool is_vulnerability_Valid() const;

    OAIVulnerabilityAssessmentNote getVulnerabilityAssessment() const;
    void setVulnerabilityAssessment(const OAIVulnerabilityAssessmentNote &vulnerability_assessment);
    bool is_vulnerability_assessment_Set() const;
    bool is_vulnerability_assessment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAuthority m_attestation_authority;
    bool m_attestation_authority_isSet;
    bool m_attestation_authority_isValid;

    OAIBasis m_base_image;
    bool m_base_image_isSet;
    bool m_base_image_isValid;

    OAIBuild m_build;
    bool m_build_isSet;
    bool m_build_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAIDeployable m_deployable;
    bool m_deployable_isSet;
    bool m_deployable_isValid;

    OAIDiscovery m_discovery;
    bool m_discovery_isSet;
    bool m_discovery_isValid;

    QString m_expiration_time;
    bool m_expiration_time_isSet;
    bool m_expiration_time_isValid;

    OAIInToto m_intoto;
    bool m_intoto_isSet;
    bool m_intoto_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_long_description;
    bool m_long_description_isSet;
    bool m_long_description_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPackage m_package;
    bool m_package_isSet;
    bool m_package_isValid;

    QList<QString> m_related_note_names;
    bool m_related_note_names_isSet;
    bool m_related_note_names_isValid;

    QList<OAIRelatedUrl> m_related_url;
    bool m_related_url_isSet;
    bool m_related_url_isValid;

    OAIDocumentNote m_sbom;
    bool m_sbom_isSet;
    bool m_sbom_isValid;

    OAISBOMReferenceNote m_sbom_reference;
    bool m_sbom_reference_isSet;
    bool m_sbom_reference_isValid;

    QString m_short_description;
    bool m_short_description_isSet;
    bool m_short_description_isValid;

    OAIFileNote m_spdx_file;
    bool m_spdx_file_isSet;
    bool m_spdx_file_isValid;

    OAIPackageInfoNote m_spdx_package;
    bool m_spdx_package_isSet;
    bool m_spdx_package_isValid;

    OAIRelationshipNote m_spdx_relationship;
    bool m_spdx_relationship_isSet;
    bool m_spdx_relationship_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    OAIVulnerability m_vulnerability;
    bool m_vulnerability_isSet;
    bool m_vulnerability_isValid;

    OAIVulnerabilityAssessmentNote m_vulnerability_assessment;
    bool m_vulnerability_assessment_isSet;
    bool m_vulnerability_assessment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINote)

#endif // OAINote_H
