/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact.h
 *
 * A Maven artifact uploaded using the MavenArtifact directive.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact_H

#include <QJsonObject>

#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan;

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes getFileHashes() const;
    void setFileHashes(const OAIContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes &file_hashes);
    bool is_file_hashes_Set() const;
    bool is_file_hashes_Valid() const;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan getPushTiming() const;
    void setPushTiming(const OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan &push_timing);
    bool is_push_timing_Set() const;
    bool is_push_timing_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1FileHashes m_file_hashes;
    bool m_file_hashes_isSet;
    bool m_file_hashes_isValid;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan m_push_timing;
    bool m_push_timing_isSet;
    bool m_push_timing_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1UploadedMavenArtifact_H
