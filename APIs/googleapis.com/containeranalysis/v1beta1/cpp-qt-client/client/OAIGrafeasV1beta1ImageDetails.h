/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrafeasV1beta1ImageDetails.h
 *
 * Details of an image occurrence.
 */

#ifndef OAIGrafeasV1beta1ImageDetails_H
#define OAIGrafeasV1beta1ImageDetails_H

#include <QJsonObject>

#include "OAIDerived.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDerived;

class OAIGrafeasV1beta1ImageDetails : public OAIObject {
public:
    OAIGrafeasV1beta1ImageDetails();
    OAIGrafeasV1beta1ImageDetails(QString json);
    ~OAIGrafeasV1beta1ImageDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDerived getDerivedImage() const;
    void setDerivedImage(const OAIDerived &derived_image);
    bool is_derived_image_Set() const;
    bool is_derived_image_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDerived m_derived_image;
    bool m_derived_image_isSet;
    bool m_derived_image_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrafeasV1beta1ImageDetails)

#endif // OAIGrafeasV1beta1ImageDetails_H
