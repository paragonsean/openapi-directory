/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult.h
 *
 * ApprovalResult describes the decision and associated metadata of a manual approval of a build.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApprovalTime() const;
    void setApprovalTime(const QString &approval_time);
    bool is_approval_time_Set() const;
    bool is_approval_time_Valid() const;

    QString getApproverAccount() const;
    void setApproverAccount(const QString &approver_account);
    bool is_approver_account_Set() const;
    bool is_approver_account_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getDecision() const;
    void setDecision(const QString &decision);
    bool is_decision_Set() const;
    bool is_decision_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_approval_time;
    bool m_approval_time_isSet;
    bool m_approval_time_isValid;

    QString m_approver_account;
    bool m_approver_account_isSet;
    bool m_approver_account_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_decision;
    bool m_decision_isSet;
    bool m_decision_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1ApprovalResult_H
