/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.h
 *
 * Npm package to upload to Artifact Registry upon successful completion of all build steps.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getPackagePath() const;
    void setPackagePath(const QString &package_path);
    bool is_package_path_Set() const;
    bool is_package_path_Valid() const;

    QString getRepository() const;
    void setRepository(const QString &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_package_path;
    bool m_package_path_isSet;
    bool m_package_path_isValid;

    QString m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage_H
