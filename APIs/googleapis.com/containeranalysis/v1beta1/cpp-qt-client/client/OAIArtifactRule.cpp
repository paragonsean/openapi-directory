/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArtifactRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArtifactRule::OAIArtifactRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArtifactRule::OAIArtifactRule() {
    this->initializeModel();
}

OAIArtifactRule::~OAIArtifactRule() {}

void OAIArtifactRule::initializeModel() {

    m_artifact_rule_isSet = false;
    m_artifact_rule_isValid = false;
}

void OAIArtifactRule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArtifactRule::fromJsonObject(QJsonObject json) {

    m_artifact_rule_isValid = ::OpenAPI::fromJsonValue(m_artifact_rule, json[QString("artifactRule")]);
    m_artifact_rule_isSet = !json[QString("artifactRule")].isNull() && m_artifact_rule_isValid;
}

QString OAIArtifactRule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArtifactRule::asJsonObject() const {
    QJsonObject obj;
    if (m_artifact_rule.size() > 0) {
        obj.insert(QString("artifactRule"), ::OpenAPI::toJsonValue(m_artifact_rule));
    }
    return obj;
}

QList<QString> OAIArtifactRule::getArtifactRule() const {
    return m_artifact_rule;
}
void OAIArtifactRule::setArtifactRule(const QList<QString> &artifact_rule) {
    m_artifact_rule = artifact_rule;
    m_artifact_rule_isSet = true;
}

bool OAIArtifactRule::is_artifact_rule_Set() const{
    return m_artifact_rule_isSet;
}

bool OAIArtifactRule::is_artifact_rule_Valid() const{
    return m_artifact_rule_isValid;
}

bool OAIArtifactRule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_artifact_rule.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArtifactRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
