/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata() {
    this->initializeModel();
}

OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::~OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata() {}

void OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::initializeModel() {

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;
}

void OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::fromJsonObject(QJsonObject json) {

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;
}

QString OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    return obj;
}

QString OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QString OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::getEndTime() const {
    return m_end_time;
}
void OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::is_end_time_Valid() const{
    return m_end_time_isValid;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1OperationMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
