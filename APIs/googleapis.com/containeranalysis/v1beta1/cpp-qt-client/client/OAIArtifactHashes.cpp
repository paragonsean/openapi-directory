/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArtifactHashes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArtifactHashes::OAIArtifactHashes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArtifactHashes::OAIArtifactHashes() {
    this->initializeModel();
}

OAIArtifactHashes::~OAIArtifactHashes() {}

void OAIArtifactHashes::initializeModel() {

    m_sha256_isSet = false;
    m_sha256_isValid = false;
}

void OAIArtifactHashes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArtifactHashes::fromJsonObject(QJsonObject json) {

    m_sha256_isValid = ::OpenAPI::fromJsonValue(m_sha256, json[QString("sha256")]);
    m_sha256_isSet = !json[QString("sha256")].isNull() && m_sha256_isValid;
}

QString OAIArtifactHashes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArtifactHashes::asJsonObject() const {
    QJsonObject obj;
    if (m_sha256_isSet) {
        obj.insert(QString("sha256"), ::OpenAPI::toJsonValue(m_sha256));
    }
    return obj;
}

QString OAIArtifactHashes::getSha256() const {
    return m_sha256;
}
void OAIArtifactHashes::setSha256(const QString &sha256) {
    m_sha256 = sha256;
    m_sha256_isSet = true;
}

bool OAIArtifactHashes::is_sha256_Set() const{
    return m_sha256_isSet;
}

bool OAIArtifactHashes::is_sha256_Valid() const{
    return m_sha256_isValid;
}

bool OAIArtifactHashes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sha256_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArtifactHashes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
