/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPgpSignedAttestation.h
 *
 * An attestation wrapper with a PGP-compatible signature. This message only supports &#x60;ATTACHED&#x60; signatures, where the payload that is signed is included alongside the signature itself in the same file.
 */

#ifndef OAIPgpSignedAttestation_H
#define OAIPgpSignedAttestation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPgpSignedAttestation : public OAIObject {
public:
    OAIPgpSignedAttestation();
    OAIPgpSignedAttestation(QString json);
    ~OAIPgpSignedAttestation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getPgpKeyId() const;
    void setPgpKeyId(const QString &pgp_key_id);
    bool is_pgp_key_id_Set() const;
    bool is_pgp_key_id_Valid() const;

    QString getSignature() const;
    void setSignature(const QString &signature);
    bool is_signature_Set() const;
    bool is_signature_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_pgp_key_id;
    bool m_pgp_key_id_isSet;
    bool m_pgp_key_id_isValid;

    QString m_signature;
    bool m_signature_isSet;
    bool m_signature_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPgpSignedAttestation)

#endif // OAIPgpSignedAttestation_H
