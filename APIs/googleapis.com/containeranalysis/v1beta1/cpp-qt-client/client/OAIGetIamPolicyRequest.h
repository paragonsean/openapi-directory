/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetIamPolicyRequest.h
 *
 * Request message for &#x60;GetIamPolicy&#x60; method.
 */

#ifndef OAIGetIamPolicyRequest_H
#define OAIGetIamPolicyRequest_H

#include <QJsonObject>

#include "OAIGetPolicyOptions.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetPolicyOptions;

class OAIGetIamPolicyRequest : public OAIObject {
public:
    OAIGetIamPolicyRequest();
    OAIGetIamPolicyRequest(QString json);
    ~OAIGetIamPolicyRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetPolicyOptions getOptions() const;
    void setOptions(const OAIGetPolicyOptions &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetPolicyOptions m_options;
    bool m_options_isSet;
    bool m_options_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetIamPolicyRequest)

#endif // OAIGetIamPolicyRequest_H
