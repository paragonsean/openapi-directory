/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan() {
    this->initializeModel();
}

OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::~OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan() {}

void OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::initializeModel() {

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;
}

void OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::fromJsonObject(QJsonObject json) {

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("endTime")]);
    m_end_time_isSet = !json[QString("endTime")].isNull() && m_end_time_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("startTime")]);
    m_start_time_isSet = !json[QString("startTime")].isNull() && m_start_time_isValid;
}

QString OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::asJsonObject() const {
    QJsonObject obj;
    if (m_end_time_isSet) {
        obj.insert(QString("endTime"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("startTime"), ::OpenAPI::toJsonValue(m_start_time));
    }
    return obj;
}

QString OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::getEndTime() const {
    return m_end_time;
}
void OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::getStartTime() const {
    return m_start_time;
}
void OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::is_start_time_Valid() const{
    return m_start_time_isValid;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
