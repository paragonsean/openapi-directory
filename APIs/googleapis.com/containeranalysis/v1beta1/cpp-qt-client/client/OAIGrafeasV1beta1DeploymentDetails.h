/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrafeasV1beta1DeploymentDetails.h
 *
 * Details of a deployment occurrence.
 */

#ifndef OAIGrafeasV1beta1DeploymentDetails_H
#define OAIGrafeasV1beta1DeploymentDetails_H

#include <QJsonObject>

#include "OAIDeployment.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeployment;

class OAIGrafeasV1beta1DeploymentDetails : public OAIObject {
public:
    OAIGrafeasV1beta1DeploymentDetails();
    OAIGrafeasV1beta1DeploymentDetails(QString json);
    ~OAIGrafeasV1beta1DeploymentDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDeployment getDeployment() const;
    void setDeployment(const OAIDeployment &deployment);
    bool is_deployment_Set() const;
    bool is_deployment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDeployment m_deployment;
    bool m_deployment_isSet;
    bool m_deployment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrafeasV1beta1DeploymentDetails)

#endif // OAIGrafeasV1beta1DeploymentDetails_H
