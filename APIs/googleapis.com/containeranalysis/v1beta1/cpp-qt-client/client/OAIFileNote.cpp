/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFileNote.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFileNote::OAIFileNote(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFileNote::OAIFileNote() {
    this->initializeModel();
}

OAIFileNote::~OAIFileNote() {}

void OAIFileNote::initializeModel() {

    m_checksum_isSet = false;
    m_checksum_isValid = false;

    m_file_type_isSet = false;
    m_file_type_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIFileNote::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFileNote::fromJsonObject(QJsonObject json) {

    m_checksum_isValid = ::OpenAPI::fromJsonValue(m_checksum, json[QString("checksum")]);
    m_checksum_isSet = !json[QString("checksum")].isNull() && m_checksum_isValid;

    m_file_type_isValid = ::OpenAPI::fromJsonValue(m_file_type, json[QString("fileType")]);
    m_file_type_isSet = !json[QString("fileType")].isNull() && m_file_type_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIFileNote::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFileNote::asJsonObject() const {
    QJsonObject obj;
    if (m_checksum.size() > 0) {
        obj.insert(QString("checksum"), ::OpenAPI::toJsonValue(m_checksum));
    }
    if (m_file_type_isSet) {
        obj.insert(QString("fileType"), ::OpenAPI::toJsonValue(m_file_type));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QList<QString> OAIFileNote::getChecksum() const {
    return m_checksum;
}
void OAIFileNote::setChecksum(const QList<QString> &checksum) {
    m_checksum = checksum;
    m_checksum_isSet = true;
}

bool OAIFileNote::is_checksum_Set() const{
    return m_checksum_isSet;
}

bool OAIFileNote::is_checksum_Valid() const{
    return m_checksum_isValid;
}

QString OAIFileNote::getFileType() const {
    return m_file_type;
}
void OAIFileNote::setFileType(const QString &file_type) {
    m_file_type = file_type;
    m_file_type_isSet = true;
}

bool OAIFileNote::is_file_type_Set() const{
    return m_file_type_isSet;
}

bool OAIFileNote::is_file_type_Valid() const{
    return m_file_type_isValid;
}

QString OAIFileNote::getTitle() const {
    return m_title;
}
void OAIFileNote::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIFileNote::is_title_Set() const{
    return m_title_isSet;
}

bool OAIFileNote::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIFileNote::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_checksum.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFileNote::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
