/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrafeasV1beta1IntotoSignature.h
 *
 * A signature object consists of the KeyID used and the signature itself.
 */

#ifndef OAIGrafeasV1beta1IntotoSignature_H
#define OAIGrafeasV1beta1IntotoSignature_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGrafeasV1beta1IntotoSignature : public OAIObject {
public:
    OAIGrafeasV1beta1IntotoSignature();
    OAIGrafeasV1beta1IntotoSignature(QString json);
    ~OAIGrafeasV1beta1IntotoSignature() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKeyid() const;
    void setKeyid(const QString &keyid);
    bool is_keyid_Set() const;
    bool is_keyid_Valid() const;

    QString getSig() const;
    void setSig(const QString &sig);
    bool is_sig_Set() const;
    bool is_sig_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_keyid;
    bool m_keyid_isSet;
    bool m_keyid_isValid;

    QString m_sig;
    bool m_sig_isSet;
    bool m_sig_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrafeasV1beta1IntotoSignature)

#endif // OAIGrafeasV1beta1IntotoSignature_H
