/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRemediation.h
 *
 * Specifies details on how to handle (and presumably, fix) a vulnerability.
 */

#ifndef OAIRemediation_H
#define OAIRemediation_H

#include <QJsonObject>

#include "OAIRelatedUrl.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRelatedUrl;

class OAIRemediation : public OAIObject {
public:
    OAIRemediation();
    OAIRemediation(QString json);
    ~OAIRemediation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDetails() const;
    void setDetails(const QString &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getRemediationType() const;
    void setRemediationType(const QString &remediation_type);
    bool is_remediation_type_Set() const;
    bool is_remediation_type_Valid() const;

    OAIRelatedUrl getRemediationUri() const;
    void setRemediationUri(const OAIRelatedUrl &remediation_uri);
    bool is_remediation_uri_Set() const;
    bool is_remediation_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_remediation_type;
    bool m_remediation_type_isSet;
    bool m_remediation_type_isValid;

    OAIRelatedUrl m_remediation_uri;
    bool m_remediation_uri_isSet;
    bool m_remediation_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRemediation)

#endif // OAIRemediation_H
