/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJustification.h
 *
 * Justification provides the justification when the state of the assessment if NOT_AFFECTED.
 */

#ifndef OAIJustification_H
#define OAIJustification_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJustification : public OAIObject {
public:
    OAIJustification();
    OAIJustification(QString json);
    ~OAIJustification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDetails() const;
    void setDetails(const QString &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getJustificationType() const;
    void setJustificationType(const QString &justification_type);
    bool is_justification_type_Set() const;
    bool is_justification_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_justification_type;
    bool m_justification_type_isSet;
    bool m_justification_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJustification)

#endif // OAIJustification_H
