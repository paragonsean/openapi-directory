/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource.h
 *
 * Location of the source in an archive file in Cloud Storage.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBucket() const;
    void setBucket(const QString &bucket);
    bool is_bucket_Set() const;
    bool is_bucket_Valid() const;

    QString getGeneration() const;
    void setGeneration(const QString &generation);
    bool is_generation_Set() const;
    bool is_generation_Valid() const;

    QString getObject() const;
    void setObject(const QString &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    QString getSourceFetcher() const;
    void setSourceFetcher(const QString &source_fetcher);
    bool is_source_fetcher_Set() const;
    bool is_source_fetcher_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_bucket;
    bool m_bucket_isSet;
    bool m_bucket_isValid;

    QString m_generation;
    bool m_generation_isSet;
    bool m_generation_isValid;

    QString m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    QString m_source_fetcher;
    bool m_source_fetcher_isSet;
    bool m_source_fetcher_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource_H
