/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrafeasV1beta1BuildDetails.h
 *
 * Details of a build occurrence.
 */

#ifndef OAIGrafeasV1beta1BuildDetails_H
#define OAIGrafeasV1beta1BuildDetails_H

#include <QJsonObject>

#include "OAIBuildProvenance.h"
#include "OAIInTotoSlsaProvenanceV1.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInTotoSlsaProvenanceV1;
class OAIBuildProvenance;

class OAIGrafeasV1beta1BuildDetails : public OAIObject {
public:
    OAIGrafeasV1beta1BuildDetails();
    OAIGrafeasV1beta1BuildDetails(QString json);
    ~OAIGrafeasV1beta1BuildDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInTotoSlsaProvenanceV1 getInTotoSlsaProvenanceV1() const;
    void setInTotoSlsaProvenanceV1(const OAIInTotoSlsaProvenanceV1 &in_toto_slsa_provenance_v1);
    bool is_in_toto_slsa_provenance_v1_Set() const;
    bool is_in_toto_slsa_provenance_v1_Valid() const;

    OAIBuildProvenance getProvenance() const;
    void setProvenance(const OAIBuildProvenance &provenance);
    bool is_provenance_Set() const;
    bool is_provenance_Valid() const;

    QString getProvenanceBytes() const;
    void setProvenanceBytes(const QString &provenance_bytes);
    bool is_provenance_bytes_Set() const;
    bool is_provenance_bytes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInTotoSlsaProvenanceV1 m_in_toto_slsa_provenance_v1;
    bool m_in_toto_slsa_provenance_v1_isSet;
    bool m_in_toto_slsa_provenance_v1_isValid;

    OAIBuildProvenance m_provenance;
    bool m_provenance_isSet;
    bool m_provenance_isValid;

    QString m_provenance_bytes;
    bool m_provenance_bytes_isSet;
    bool m_provenance_bytes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrafeasV1beta1BuildDetails)

#endif // OAIGrafeasV1beta1BuildDetails_H
