/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret.h
 *
 * Pairs a set of secret environment variables mapped to encrypted values with the Cloud KMS key to use to decrypt the value.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret_H

#include <QJsonObject>

#include <QByteArray>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QByteArray> getEnvMap() const;
    void setEnvMap(const QMap<QString, QByteArray> &env_map);
    bool is_env_map_Set() const;
    bool is_env_map_Valid() const;

    QString getKmsKeyName() const;
    void setKmsKeyName(const QString &kms_key_name);
    bool is_kms_key_name_Set() const;
    bool is_kms_key_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QByteArray> m_env_map;
    bool m_env_map_isSet;
    bool m_env_map_isValid;

    QString m_kms_key_name;
    bool m_kms_key_name_isSet;
    bool m_kms_key_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1InlineSecret_H
