/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBasis.h
 *
 * Basis describes the base image portion (Note) of the DockerImage relationship. Linked occurrences are derived from this or an equivalent image via: FROM Or an equivalent reference, e.g. a tag of the resource_url.
 */

#ifndef OAIBasis_H
#define OAIBasis_H

#include <QJsonObject>

#include "OAIFingerprint.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFingerprint;

class OAIBasis : public OAIObject {
public:
    OAIBasis();
    OAIBasis(QString json);
    ~OAIBasis() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIFingerprint getFingerprint() const;
    void setFingerprint(const OAIFingerprint &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    QString getResourceUrl() const;
    void setResourceUrl(const QString &resource_url);
    bool is_resource_url_Set() const;
    bool is_resource_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIFingerprint m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QString m_resource_url;
    bool m_resource_url_isSet;
    bool m_resource_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBasis)

#endif // OAIBasis_H
