/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume() {
    this->initializeModel();
}

OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::~OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume() {}

void OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;
}

void OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;
}

QString OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    return obj;
}

QString OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::getName() const {
    return m_name;
}
void OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::is_name_Set() const{
    return m_name_isSet;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::getPath() const {
    return m_path;
}
void OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::is_path_Set() const{
    return m_path_isSet;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::is_path_Valid() const{
    return m_path_isValid;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContaineranalysisGoogleDevtoolsCloudbuildV1Volume::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
