/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGrafeasV1beta1PackageDetails.h
 *
 * Details of a package occurrence.
 */

#ifndef OAIGrafeasV1beta1PackageDetails_H
#define OAIGrafeasV1beta1PackageDetails_H

#include <QJsonObject>

#include "OAIInstallation.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstallation;

class OAIGrafeasV1beta1PackageDetails : public OAIObject {
public:
    OAIGrafeasV1beta1PackageDetails();
    OAIGrafeasV1beta1PackageDetails(QString json);
    ~OAIGrafeasV1beta1PackageDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIInstallation getInstallation() const;
    void setInstallation(const OAIInstallation &installation);
    bool is_installation_Set() const;
    bool is_installation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIInstallation m_installation;
    bool m_installation_isSet;
    bool m_installation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGrafeasV1beta1PackageDetails)

#endif // OAIGrafeasV1beta1PackageDetails_H
