/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan from './ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan';

/**
 * The ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects model module.
 * @module model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects
 * @version v1beta1
 */
class ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects {
    /**
     * Constructs a new <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects</code>.
     * Files in the workspace to upload to Cloud Storage upon successful completion of all build steps.
     * @alias module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects
     */
    constructor() { 
        
        ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects} obj Optional instance to populate.
     * @return {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects} The populated <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects();

            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('paths')) {
                obj['paths'] = ApiClient.convertToType(data['paths'], ['String']);
            }
            if (data.hasOwnProperty('timing')) {
                obj['timing'] = ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan.constructFromObject(data['timing']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['paths'])) {
            throw new Error("Expected the field `paths` to be an array in the JSON data but got " + data['paths']);
        }
        // validate the optional field `timing`
        if (data['timing']) { // data not null
          ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan.validateJSON(data['timing']);
        }

        return true;
    }


}



/**
 * Cloud Storage bucket and optional object path, in the form \"gs://bucket/path/to/somewhere/\". (see [Bucket Name Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)). Files in the workspace matching any path pattern will be uploaded to Cloud Storage with this location as a prefix.
 * @member {String} location
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects.prototype['location'] = undefined;

/**
 * Path globs used to match files in the build's workspace.
 * @member {Array.<String>} paths
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects.prototype['paths'] = undefined;

/**
 * @member {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1TimeSpan} timing
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects.prototype['timing'] = undefined;






export default ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsArtifactObjects;

