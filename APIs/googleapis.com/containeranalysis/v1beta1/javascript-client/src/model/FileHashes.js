/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Hash from './Hash';

/**
 * The FileHashes model module.
 * @module model/FileHashes
 * @version v1beta1
 */
class FileHashes {
    /**
     * Constructs a new <code>FileHashes</code>.
     * Container message for hashes of byte content of files, used in source messages to verify integrity of source input to the build.
     * @alias module:model/FileHashes
     */
    constructor() { 
        
        FileHashes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileHashes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileHashes} obj Optional instance to populate.
     * @return {module:model/FileHashes} The populated <code>FileHashes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileHashes();

            if (data.hasOwnProperty('fileHash')) {
                obj['fileHash'] = ApiClient.convertToType(data['fileHash'], [Hash]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileHashes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileHashes</code>.
     */
    static validateJSON(data) {
        if (data['fileHash']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fileHash'])) {
                throw new Error("Expected the field `fileHash` to be an array in the JSON data but got " + data['fileHash']);
            }
            // validate the optional field `fileHash` (array)
            for (const item of data['fileHash']) {
                Hash.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Required. Collection of file hashes.
 * @member {Array.<module:model/Hash>} fileHash
 */
FileHashes.prototype['fileHash'] = undefined;






export default FileHashes;

