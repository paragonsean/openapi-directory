/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ContainerAnalysisApi);
  }
}(this, function(expect, ContainerAnalysisApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource', function() {
    it('should create an instance of ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource', function() {
      // uncomment below and update the code to test ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource
      //var instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
      //expect(instance).to.be.a(ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource);
    });

    it('should have the property branchName (base name: "branchName")', function() {
      // uncomment below and update the code to test the property branchName
      //var instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
      //expect(instance).to.be();
    });

    it('should have the property commitSha (base name: "commitSha")', function() {
      // uncomment below and update the code to test the property commitSha
      //var instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
      //expect(instance).to.be();
    });

    it('should have the property dir (base name: "dir")', function() {
      // uncomment below and update the code to test the property dir
      //var instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
      //expect(instance).to.be();
    });

    it('should have the property invertRegex (base name: "invertRegex")', function() {
      // uncomment below and update the code to test the property invertRegex
      //var instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
      //expect(instance).to.be();
    });

    it('should have the property projectId (base name: "projectId")', function() {
      // uncomment below and update the code to test the property projectId
      //var instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
      //expect(instance).to.be();
    });

    it('should have the property repoName (base name: "repoName")', function() {
      // uncomment below and update the code to test the property repoName
      //var instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
      //expect(instance).to.be();
    });

    it('should have the property substitutions (base name: "substitutions")', function() {
      // uncomment below and update the code to test the property substitutions
      //var instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
      //expect(instance).to.be();
    });

    it('should have the property tagName (base name: "tagName")', function() {
      // uncomment below and update the code to test the property tagName
      //var instance = new ContainerAnalysisApi.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource();
      //expect(instance).to.be();
    });

  });

}));
