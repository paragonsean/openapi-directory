/*
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Justification;
import org.openapitools.client.model.RelatedUrl;
import org.openapitools.client.model.Remediation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Assessment
 */
public class AssessmentTest {
    private final Assessment model = new Assessment();

    /**
     * Model tests for Assessment
     */
    @Test
    public void testAssessment() {
        // TODO: test Assessment
    }

    /**
     * Test the property 'cve'
     */
    @Test
    public void cveTest() {
        // TODO: test cve
    }

    /**
     * Test the property 'impacts'
     */
    @Test
    public void impactsTest() {
        // TODO: test impacts
    }

    /**
     * Test the property 'justification'
     */
    @Test
    public void justificationTest() {
        // TODO: test justification
    }

    /**
     * Test the property 'longDescription'
     */
    @Test
    public void longDescriptionTest() {
        // TODO: test longDescription
    }

    /**
     * Test the property 'relatedUris'
     */
    @Test
    public void relatedUrisTest() {
        // TODO: test relatedUris
    }

    /**
     * Test the property 'remediations'
     */
    @Test
    public void remediationsTest() {
        // TODO: test remediations
    }

    /**
     * Test the property 'shortDescription'
     */
    @Test
    public void shortDescriptionTest() {
        // TODO: test shortDescription
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'vulnerabilityId'
     */
    @Test
    public void vulnerabilityIdTest() {
        // TODO: test vulnerabilityId
    }

}
