/*
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Version;
import org.openapitools.client.model.VulnerabilityLocation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Detail
 */
public class DetailTest {
    private final Detail model = new Detail();

    /**
     * Model tests for Detail
     */
    @Test
    public void testDetail() {
        // TODO: test Detail
    }

    /**
     * Test the property 'cpeUri'
     */
    @Test
    public void cpeUriTest() {
        // TODO: test cpeUri
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'fixedLocation'
     */
    @Test
    public void fixedLocationTest() {
        // TODO: test fixedLocation
    }

    /**
     * Test the property 'isObsolete'
     */
    @Test
    public void isObsoleteTest() {
        // TODO: test isObsolete
    }

    /**
     * Test the property 'maxAffectedVersion'
     */
    @Test
    public void maxAffectedVersionTest() {
        // TODO: test maxAffectedVersion
    }

    /**
     * Test the property 'minAffectedVersion'
     */
    @Test
    public void minAffectedVersionTest() {
        // TODO: test minAffectedVersion
    }

    /**
     * Test the property '_package'
     */
    @Test
    public void _packageTest() {
        // TODO: test _package
    }

    /**
     * Test the property 'packageType'
     */
    @Test
    public void packageTypeTest() {
        // TODO: test packageType
    }

    /**
     * Test the property 'severityName'
     */
    @Test
    public void severityNameTest() {
        // TODO: test severityName
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'sourceUpdateTime'
     */
    @Test
    public void sourceUpdateTimeTest() {
        // TODO: test sourceUpdateTime
    }

    /**
     * Test the property 'vendor'
     */
    @Test
    public void vendorTest() {
        // TODO: test vendor
    }

}
