# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artifact_id: str=None, group_id: str=None, path: str=None, repository: str=None, version: str=None):
        """ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact - a model defined in OpenAPI

        :param artifact_id: The artifact_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :param group_id: The group_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :param path: The path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :param repository: The repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :param version: The version of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        """
        self.openapi_types = {
            'artifact_id': str,
            'group_id': str,
            'path': str,
            'repository': str,
            'version': str
        }

        self.attribute_map = {
            'artifact_id': 'artifactId',
            'group_id': 'groupId',
            'path': 'path',
            'repository': 'repository',
            'version': 'version'
        }

        self._artifact_id = artifact_id
        self._group_id = group_id
        self._path = path
        self._repository = repository
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artifact_id(self):
        """Gets the artifact_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Maven `artifactId` value used when uploading the artifact to Artifact Registry.

        :return: The artifact_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :rtype: str
        """
        return self._artifact_id

    @artifact_id.setter
    def artifact_id(self, artifact_id):
        """Sets the artifact_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Maven `artifactId` value used when uploading the artifact to Artifact Registry.

        :param artifact_id: The artifact_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :type artifact_id: str
        """

        self._artifact_id = artifact_id

    @property
    def group_id(self):
        """Gets the group_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Maven `groupId` value used when uploading the artifact to Artifact Registry.

        :return: The group_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Maven `groupId` value used when uploading the artifact to Artifact Registry.

        :param group_id: The group_id of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def path(self):
        """Gets the path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Path to an artifact in the build's workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.

        :return: The path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Path to an artifact in the build's workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.

        :param path: The path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :type path: str
        """

        self._path = path

    @property
    def repository(self):
        """Gets the repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Artifact Registry repository, in the form \"https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY\" Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.

        :return: The repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Artifact Registry repository, in the form \"https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY\" Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.

        :param repository: The repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :type repository: str
        """

        self._repository = repository

    @property
    def version(self):
        """Gets the version of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Maven `version` value used when uploading the artifact to Artifact Registry.

        :return: The version of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.

        Maven `version` value used when uploading the artifact to Artifact Registry.

        :param version: The version of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.
        :type version: str
        """

        self._version = version
