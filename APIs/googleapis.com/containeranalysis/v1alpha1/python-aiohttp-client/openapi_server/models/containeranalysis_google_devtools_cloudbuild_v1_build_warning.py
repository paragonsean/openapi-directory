# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, priority: str=None, text: str=None):
        """ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning - a model defined in OpenAPI

        :param priority: The priority of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.
        :param text: The text of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.
        """
        self.openapi_types = {
            'priority': str,
            'text': str
        }

        self.attribute_map = {
            'priority': 'priority',
            'text': 'text'
        }

        self._priority = priority
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def priority(self):
        """Gets the priority of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.

        The priority for this warning.

        :return: The priority of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.
        :rtype: str
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.

        The priority for this warning.

        :param priority: The priority of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.
        :type priority: str
        """
        allowed_values = ["PRIORITY_UNSPECIFIED", "INFO", "WARNING", "ALERT"]  # noqa: E501
        if priority not in allowed_values:
            raise ValueError(
                "Invalid value for `priority` ({0}), must be one of {1}"
                .format(priority, allowed_values)
            )

        self._priority = priority

    @property
    def text(self):
        """Gets the text of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.

        Explanation of the warning generated.

        :return: The text of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.

        Explanation of the warning generated.

        :param text: The text of this ContaineranalysisGoogleDevtoolsCloudbuildV1BuildWarning.
        :type text: str
        """

        self._text = text
