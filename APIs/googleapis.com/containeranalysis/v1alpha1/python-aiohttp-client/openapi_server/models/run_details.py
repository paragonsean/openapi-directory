# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_metadata import BuildMetadata
from openapi_server.models.provenance_builder import ProvenanceBuilder
from openapi_server.models.resource_descriptor import ResourceDescriptor
from openapi_server import util


class RunDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, builder: ProvenanceBuilder=None, byproducts: List[ResourceDescriptor]=None, metadata: BuildMetadata=None):
        """RunDetails - a model defined in OpenAPI

        :param builder: The builder of this RunDetails.
        :param byproducts: The byproducts of this RunDetails.
        :param metadata: The metadata of this RunDetails.
        """
        self.openapi_types = {
            'builder': ProvenanceBuilder,
            'byproducts': List[ResourceDescriptor],
            'metadata': BuildMetadata
        }

        self.attribute_map = {
            'builder': 'builder',
            'byproducts': 'byproducts',
            'metadata': 'metadata'
        }

        self._builder = builder
        self._byproducts = byproducts
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RunDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RunDetails of this RunDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def builder(self):
        """Gets the builder of this RunDetails.


        :return: The builder of this RunDetails.
        :rtype: ProvenanceBuilder
        """
        return self._builder

    @builder.setter
    def builder(self, builder):
        """Sets the builder of this RunDetails.


        :param builder: The builder of this RunDetails.
        :type builder: ProvenanceBuilder
        """

        self._builder = builder

    @property
    def byproducts(self):
        """Gets the byproducts of this RunDetails.


        :return: The byproducts of this RunDetails.
        :rtype: List[ResourceDescriptor]
        """
        return self._byproducts

    @byproducts.setter
    def byproducts(self, byproducts):
        """Sets the byproducts of this RunDetails.


        :param byproducts: The byproducts of this RunDetails.
        :type byproducts: List[ResourceDescriptor]
        """

        self._byproducts = byproducts

    @property
    def metadata(self):
        """Gets the metadata of this RunDetails.


        :return: The metadata of this RunDetails.
        :rtype: BuildMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this RunDetails.


        :param metadata: The metadata of this RunDetails.
        :type metadata: BuildMetadata
        """

        self._metadata = metadata
