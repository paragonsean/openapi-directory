# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.version import Version
from openapi_server.models.vulnerability_location import VulnerabilityLocation
from openapi_server import util


class Detail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cpe_uri: str=None, description: str=None, fixed_location: VulnerabilityLocation=None, is_obsolete: bool=None, max_affected_version: Version=None, min_affected_version: Version=None, package: str=None, package_type: str=None, severity_name: str=None, source: str=None, vendor: str=None):
        """Detail - a model defined in OpenAPI

        :param cpe_uri: The cpe_uri of this Detail.
        :param description: The description of this Detail.
        :param fixed_location: The fixed_location of this Detail.
        :param is_obsolete: The is_obsolete of this Detail.
        :param max_affected_version: The max_affected_version of this Detail.
        :param min_affected_version: The min_affected_version of this Detail.
        :param package: The package of this Detail.
        :param package_type: The package_type of this Detail.
        :param severity_name: The severity_name of this Detail.
        :param source: The source of this Detail.
        :param vendor: The vendor of this Detail.
        """
        self.openapi_types = {
            'cpe_uri': str,
            'description': str,
            'fixed_location': VulnerabilityLocation,
            'is_obsolete': bool,
            'max_affected_version': Version,
            'min_affected_version': Version,
            'package': str,
            'package_type': str,
            'severity_name': str,
            'source': str,
            'vendor': str
        }

        self.attribute_map = {
            'cpe_uri': 'cpeUri',
            'description': 'description',
            'fixed_location': 'fixedLocation',
            'is_obsolete': 'isObsolete',
            'max_affected_version': 'maxAffectedVersion',
            'min_affected_version': 'minAffectedVersion',
            'package': 'package',
            'package_type': 'packageType',
            'severity_name': 'severityName',
            'source': 'source',
            'vendor': 'vendor'
        }

        self._cpe_uri = cpe_uri
        self._description = description
        self._fixed_location = fixed_location
        self._is_obsolete = is_obsolete
        self._max_affected_version = max_affected_version
        self._min_affected_version = min_affected_version
        self._package = package
        self._package_type = package_type
        self._severity_name = severity_name
        self._source = source
        self._vendor = vendor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Detail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Detail of this Detail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cpe_uri(self):
        """Gets the cpe_uri of this Detail.

        The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar. This field can be used as a filter in list requests.

        :return: The cpe_uri of this Detail.
        :rtype: str
        """
        return self._cpe_uri

    @cpe_uri.setter
    def cpe_uri(self, cpe_uri):
        """Sets the cpe_uri of this Detail.

        The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar. This field can be used as a filter in list requests.

        :param cpe_uri: The cpe_uri of this Detail.
        :type cpe_uri: str
        """

        self._cpe_uri = cpe_uri

    @property
    def description(self):
        """Gets the description of this Detail.

        A vendor-specific description of this note.

        :return: The description of this Detail.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Detail.

        A vendor-specific description of this note.

        :param description: The description of this Detail.
        :type description: str
        """

        self._description = description

    @property
    def fixed_location(self):
        """Gets the fixed_location of this Detail.


        :return: The fixed_location of this Detail.
        :rtype: VulnerabilityLocation
        """
        return self._fixed_location

    @fixed_location.setter
    def fixed_location(self, fixed_location):
        """Sets the fixed_location of this Detail.


        :param fixed_location: The fixed_location of this Detail.
        :type fixed_location: VulnerabilityLocation
        """

        self._fixed_location = fixed_location

    @property
    def is_obsolete(self):
        """Gets the is_obsolete of this Detail.

        Whether this Detail is obsolete. Occurrences are expected not to point to obsolete details.

        :return: The is_obsolete of this Detail.
        :rtype: bool
        """
        return self._is_obsolete

    @is_obsolete.setter
    def is_obsolete(self, is_obsolete):
        """Sets the is_obsolete of this Detail.

        Whether this Detail is obsolete. Occurrences are expected not to point to obsolete details.

        :param is_obsolete: The is_obsolete of this Detail.
        :type is_obsolete: bool
        """

        self._is_obsolete = is_obsolete

    @property
    def max_affected_version(self):
        """Gets the max_affected_version of this Detail.


        :return: The max_affected_version of this Detail.
        :rtype: Version
        """
        return self._max_affected_version

    @max_affected_version.setter
    def max_affected_version(self, max_affected_version):
        """Sets the max_affected_version of this Detail.


        :param max_affected_version: The max_affected_version of this Detail.
        :type max_affected_version: Version
        """

        self._max_affected_version = max_affected_version

    @property
    def min_affected_version(self):
        """Gets the min_affected_version of this Detail.


        :return: The min_affected_version of this Detail.
        :rtype: Version
        """
        return self._min_affected_version

    @min_affected_version.setter
    def min_affected_version(self, min_affected_version):
        """Sets the min_affected_version of this Detail.


        :param min_affected_version: The min_affected_version of this Detail.
        :type min_affected_version: Version
        """

        self._min_affected_version = min_affected_version

    @property
    def package(self):
        """Gets the package of this Detail.

        The name of the package where the vulnerability was found. This field can be used as a filter in list requests.

        :return: The package of this Detail.
        :rtype: str
        """
        return self._package

    @package.setter
    def package(self, package):
        """Sets the package of this Detail.

        The name of the package where the vulnerability was found. This field can be used as a filter in list requests.

        :param package: The package of this Detail.
        :type package: str
        """

        self._package = package

    @property
    def package_type(self):
        """Gets the package_type of this Detail.

        The type of package; whether native or non native(ruby gems, node.js packages etc)

        :return: The package_type of this Detail.
        :rtype: str
        """
        return self._package_type

    @package_type.setter
    def package_type(self, package_type):
        """Sets the package_type of this Detail.

        The type of package; whether native or non native(ruby gems, node.js packages etc)

        :param package_type: The package_type of this Detail.
        :type package_type: str
        """

        self._package_type = package_type

    @property
    def severity_name(self):
        """Gets the severity_name of this Detail.

        The severity (eg: distro assigned severity) for this vulnerability.

        :return: The severity_name of this Detail.
        :rtype: str
        """
        return self._severity_name

    @severity_name.setter
    def severity_name(self, severity_name):
        """Sets the severity_name of this Detail.

        The severity (eg: distro assigned severity) for this vulnerability.

        :param severity_name: The severity_name of this Detail.
        :type severity_name: str
        """

        self._severity_name = severity_name

    @property
    def source(self):
        """Gets the source of this Detail.

        The source from which the information in this Detail was obtained.

        :return: The source of this Detail.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this Detail.

        The source from which the information in this Detail was obtained.

        :param source: The source of this Detail.
        :type source: str
        """

        self._source = source

    @property
    def vendor(self):
        """Gets the vendor of this Detail.

        The vendor of the product. e.g. \"google\"

        :return: The vendor of this Detail.
        :rtype: str
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this Detail.

        The vendor of the product. e.g. \"google\"

        :param vendor: The vendor of this Detail.
        :type vendor: str
        """

        self._vendor = vendor
