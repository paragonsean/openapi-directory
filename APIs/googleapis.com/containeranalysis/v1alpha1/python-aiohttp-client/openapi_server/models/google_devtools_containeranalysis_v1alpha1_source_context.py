# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_devtools_containeranalysis_v1alpha1_cloud_repo_source_context import GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext
from openapi_server.models.google_devtools_containeranalysis_v1alpha1_gerrit_source_context import GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext
from openapi_server.models.google_devtools_containeranalysis_v1alpha1_git_source_context import GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext
from openapi_server import util


class GoogleDevtoolsContaineranalysisV1alpha1SourceContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cloud_repo: GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext=None, gerrit: GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext=None, git: GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext=None, labels: Dict[str, str]=None):
        """GoogleDevtoolsContaineranalysisV1alpha1SourceContext - a model defined in OpenAPI

        :param cloud_repo: The cloud_repo of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :param gerrit: The gerrit of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :param git: The git of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :param labels: The labels of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        """
        self.openapi_types = {
            'cloud_repo': GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext,
            'gerrit': GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext,
            'git': GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext,
            'labels': Dict[str, str]
        }

        self.attribute_map = {
            'cloud_repo': 'cloudRepo',
            'gerrit': 'gerrit',
            'git': 'git',
            'labels': 'labels'
        }

        self._cloud_repo = cloud_repo
        self._gerrit = gerrit
        self._git = git
        self._labels = labels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleDevtoolsContaineranalysisV1alpha1SourceContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleDevtoolsContaineranalysisV1alpha1SourceContext of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cloud_repo(self):
        """Gets the cloud_repo of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.


        :return: The cloud_repo of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :rtype: GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext
        """
        return self._cloud_repo

    @cloud_repo.setter
    def cloud_repo(self, cloud_repo):
        """Sets the cloud_repo of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.


        :param cloud_repo: The cloud_repo of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :type cloud_repo: GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext
        """

        self._cloud_repo = cloud_repo

    @property
    def gerrit(self):
        """Gets the gerrit of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.


        :return: The gerrit of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :rtype: GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext
        """
        return self._gerrit

    @gerrit.setter
    def gerrit(self, gerrit):
        """Sets the gerrit of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.


        :param gerrit: The gerrit of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :type gerrit: GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext
        """

        self._gerrit = gerrit

    @property
    def git(self):
        """Gets the git of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.


        :return: The git of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :rtype: GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext
        """
        return self._git

    @git.setter
    def git(self, git):
        """Sets the git of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.


        :param git: The git of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :type git: GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext
        """

        self._git = git

    @property
    def labels(self):
        """Gets the labels of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.

        Labels with user defined metadata.

        :return: The labels of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :rtype: Dict[str, str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.

        Labels with user defined metadata.

        :param labels: The labels of this GoogleDevtoolsContaineranalysisV1alpha1SourceContext.
        :type labels: Dict[str, str]
        """

        self._labels = labels
