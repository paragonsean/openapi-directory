# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Digest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, algo: str=None, digest_bytes: str=None):
        """Digest - a model defined in OpenAPI

        :param algo: The algo of this Digest.
        :param digest_bytes: The digest_bytes of this Digest.
        """
        self.openapi_types = {
            'algo': str,
            'digest_bytes': str
        }

        self.attribute_map = {
            'algo': 'algo',
            'digest_bytes': 'digestBytes'
        }

        self._algo = algo
        self._digest_bytes = digest_bytes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Digest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Digest of this Digest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def algo(self):
        """Gets the algo of this Digest.

        `SHA1`, `SHA512` etc.

        :return: The algo of this Digest.
        :rtype: str
        """
        return self._algo

    @algo.setter
    def algo(self, algo):
        """Sets the algo of this Digest.

        `SHA1`, `SHA512` etc.

        :param algo: The algo of this Digest.
        :type algo: str
        """

        self._algo = algo

    @property
    def digest_bytes(self):
        """Gets the digest_bytes of this Digest.

        Value of the digest.

        :return: The digest_bytes of this Digest.
        :rtype: str
        """
        return self._digest_bytes

    @digest_bytes.setter
    def digest_bytes(self, digest_bytes):
        """Sets the digest_bytes of this Digest.

        Value of the digest.

        :param digest_bytes: The digest_bytes of this Digest.
        :type digest_bytes: str
        """

        self._digest_bytes = digest_bytes
