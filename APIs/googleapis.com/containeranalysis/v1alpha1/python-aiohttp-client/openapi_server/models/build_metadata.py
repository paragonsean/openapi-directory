# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BuildMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, finished_on: str=None, invocation_id: str=None, started_on: str=None):
        """BuildMetadata - a model defined in OpenAPI

        :param finished_on: The finished_on of this BuildMetadata.
        :param invocation_id: The invocation_id of this BuildMetadata.
        :param started_on: The started_on of this BuildMetadata.
        """
        self.openapi_types = {
            'finished_on': str,
            'invocation_id': str,
            'started_on': str
        }

        self.attribute_map = {
            'finished_on': 'finishedOn',
            'invocation_id': 'invocationId',
            'started_on': 'startedOn'
        }

        self._finished_on = finished_on
        self._invocation_id = invocation_id
        self._started_on = started_on

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildMetadata of this BuildMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def finished_on(self):
        """Gets the finished_on of this BuildMetadata.


        :return: The finished_on of this BuildMetadata.
        :rtype: str
        """
        return self._finished_on

    @finished_on.setter
    def finished_on(self, finished_on):
        """Sets the finished_on of this BuildMetadata.


        :param finished_on: The finished_on of this BuildMetadata.
        :type finished_on: str
        """

        self._finished_on = finished_on

    @property
    def invocation_id(self):
        """Gets the invocation_id of this BuildMetadata.


        :return: The invocation_id of this BuildMetadata.
        :rtype: str
        """
        return self._invocation_id

    @invocation_id.setter
    def invocation_id(self, invocation_id):
        """Sets the invocation_id of this BuildMetadata.


        :param invocation_id: The invocation_id of this BuildMetadata.
        :type invocation_id: str
        """

        self._invocation_id = invocation_id

    @property
    def started_on(self):
        """Gets the started_on of this BuildMetadata.


        :return: The started_on of this BuildMetadata.
        :rtype: str
        """
        return self._started_on

    @started_on.setter
    def started_on(self, started_on):
        """Sets the started_on of this BuildMetadata.


        :param started_on: The started_on of this BuildMetadata.
        :type started_on: str
        """

        self._started_on = started_on
