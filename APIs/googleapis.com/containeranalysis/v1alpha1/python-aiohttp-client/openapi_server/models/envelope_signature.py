# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EnvelopeSignature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keyid: str=None, sig: str=None):
        """EnvelopeSignature - a model defined in OpenAPI

        :param keyid: The keyid of this EnvelopeSignature.
        :param sig: The sig of this EnvelopeSignature.
        """
        self.openapi_types = {
            'keyid': str,
            'sig': str
        }

        self.attribute_map = {
            'keyid': 'keyid',
            'sig': 'sig'
        }

        self._keyid = keyid
        self._sig = sig

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnvelopeSignature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnvelopeSignature of this EnvelopeSignature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keyid(self):
        """Gets the keyid of this EnvelopeSignature.

        A reference id to the key being used for signing

        :return: The keyid of this EnvelopeSignature.
        :rtype: str
        """
        return self._keyid

    @keyid.setter
    def keyid(self, keyid):
        """Sets the keyid of this EnvelopeSignature.

        A reference id to the key being used for signing

        :param keyid: The keyid of this EnvelopeSignature.
        :type keyid: str
        """

        self._keyid = keyid

    @property
    def sig(self):
        """Gets the sig of this EnvelopeSignature.

        The signature itself

        :return: The sig of this EnvelopeSignature.
        :rtype: str
        """
        return self._sig

    @sig.setter
    def sig(self, sig):
        """Sets the sig of this EnvelopeSignature.

        The signature itself

        :param sig: The sig of this EnvelopeSignature.
        :type sig: str
        """

        self._sig = sig
