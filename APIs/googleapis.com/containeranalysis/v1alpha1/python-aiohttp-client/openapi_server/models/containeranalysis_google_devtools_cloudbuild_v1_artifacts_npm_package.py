# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, package_path: str=None, repository: str=None):
        """ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage - a model defined in OpenAPI

        :param package_path: The package_path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.
        :param repository: The repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.
        """
        self.openapi_types = {
            'package_path': str,
            'repository': str
        }

        self.attribute_map = {
            'package_path': 'packagePath',
            'repository': 'repository'
        }

        self._package_path = package_path
        self._repository = repository

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def package_path(self):
        """Gets the package_path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.

        Path to the package.json. e.g. workspace/path/to/package

        :return: The package_path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.
        :rtype: str
        """
        return self._package_path

    @package_path.setter
    def package_path(self, package_path):
        """Sets the package_path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.

        Path to the package.json. e.g. workspace/path/to/package

        :param package_path: The package_path of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.
        :type package_path: str
        """

        self._package_path = package_path

    @property
    def repository(self):
        """Gets the repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.

        Artifact Registry repository, in the form \"https://$REGION-npm.pkg.dev/$PROJECT/$REPOSITORY\" Npm package in the workspace specified by path will be zipped and uploaded to Artifact Registry with this location as a prefix.

        :return: The repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.

        Artifact Registry repository, in the form \"https://$REGION-npm.pkg.dev/$PROJECT/$REPOSITORY\" Npm package in the workspace specified by path will be zipped and uploaded to Artifact Registry with this location as a prefix.

        :param repository: The repository of this ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsNpmPackage.
        :type repository: str
        """

        self._repository = repository
