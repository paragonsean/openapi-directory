# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IdentifierHelper(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _field: str=None, generic_uri: str=None):
        """IdentifierHelper - a model defined in OpenAPI

        :param _field: The _field of this IdentifierHelper.
        :param generic_uri: The generic_uri of this IdentifierHelper.
        """
        self.openapi_types = {
            '_field': str,
            'generic_uri': str
        }

        self.attribute_map = {
            '_field': 'field',
            'generic_uri': 'genericUri'
        }

        self.__field = _field
        self._generic_uri = generic_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IdentifierHelper':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IdentifierHelper of this IdentifierHelper.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _field(self):
        """Gets the _field of this IdentifierHelper.

        The field that is set in the API proto.

        :return: The _field of this IdentifierHelper.
        :rtype: str
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this IdentifierHelper.

        The field that is set in the API proto.

        :param _field: The _field of this IdentifierHelper.
        :type _field: str
        """
        allowed_values = ["IDENTIFIER_HELPER_FIELD_UNSPECIFIED", "GENERIC_URI"]  # noqa: E501
        if _field not in allowed_values:
            raise ValueError(
                "Invalid value for `_field` ({0}), must be one of {1}"
                .format(_field, allowed_values)
            )

        self.__field = _field

    @property
    def generic_uri(self):
        """Gets the generic_uri of this IdentifierHelper.

        Contains a URI which is vendor-specific. Example: The artifact repository URL of an image.

        :return: The generic_uri of this IdentifierHelper.
        :rtype: str
        """
        return self._generic_uri

    @generic_uri.setter
    def generic_uri(self, generic_uri):
        """Sets the generic_uri of this IdentifierHelper.

        Contains a URI which is vendor-specific. Example: The artifact repository URL of an image.

        :param generic_uri: The generic_uri of this IdentifierHelper.
        :type generic_uri: str
        """

        self._generic_uri = generic_uri
