# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContaineranalysisGoogleDevtoolsCloudbuildV1Volume(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, path: str=None):
        """ContaineranalysisGoogleDevtoolsCloudbuildV1Volume - a model defined in OpenAPI

        :param name: The name of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.
        :param path: The path of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.
        """
        self.openapi_types = {
            'name': str,
            'path': str
        }

        self.attribute_map = {
            'name': 'name',
            'path': 'path'
        }

        self._name = name
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContaineranalysisGoogleDevtoolsCloudbuildV1Volume':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContaineranalysisGoogleDevtoolsCloudbuildV1Volume of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.

        Name of the volume to mount. Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps.

        :return: The name of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.

        Name of the volume to mount. Volume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps.

        :param name: The name of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.
        :type name: str
        """

        self._name = name

    @property
    def path(self):
        """Gets the path of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.

        Path at which to mount the volume. Paths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths.

        :return: The path of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.

        Path at which to mount the volume. Paths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths.

        :param path: The path of this ContaineranalysisGoogleDevtoolsCloudbuildV1Volume.
        :type path: str
        """

        self._path = path
