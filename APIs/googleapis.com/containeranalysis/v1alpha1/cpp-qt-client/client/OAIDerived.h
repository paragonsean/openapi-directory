/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDerived.h
 *
 * Derived describes the derived image portion (Occurrence) of the DockerImage relationship. This image would be produced from a Dockerfile with FROM .
 */

#ifndef OAIDerived_H
#define OAIDerived_H

#include <QJsonObject>

#include "OAIFingerprint.h"
#include "OAILayer.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFingerprint;
class OAILayer;

class OAIDerived : public OAIObject {
public:
    OAIDerived();
    OAIDerived(QString json);
    ~OAIDerived() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseResourceUrl() const;
    void setBaseResourceUrl(const QString &base_resource_url);
    bool is_base_resource_url_Set() const;
    bool is_base_resource_url_Valid() const;

    qint32 getDistance() const;
    void setDistance(const qint32 &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    OAIFingerprint getFingerprint() const;
    void setFingerprint(const OAIFingerprint &fingerprint);
    bool is_fingerprint_Set() const;
    bool is_fingerprint_Valid() const;

    QList<OAILayer> getLayerInfo() const;
    void setLayerInfo(const QList<OAILayer> &layer_info);
    bool is_layer_info_Set() const;
    bool is_layer_info_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_resource_url;
    bool m_base_resource_url_isSet;
    bool m_base_resource_url_isValid;

    qint32 m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    OAIFingerprint m_fingerprint;
    bool m_fingerprint_isSet;
    bool m_fingerprint_isValid;

    QList<OAILayer> m_layer_info;
    bool m_layer_info_isSet;
    bool m_layer_info_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDerived)

#endif // OAIDerived_H
