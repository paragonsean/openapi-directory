/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComplianceVersion.h
 *
 * Describes the CIS benchmark version that is applicable to a given OS and os version.
 */

#ifndef OAIComplianceVersion_H
#define OAIComplianceVersion_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIComplianceVersion : public OAIObject {
public:
    OAIComplianceVersion();
    OAIComplianceVersion(QString json);
    ~OAIComplianceVersion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBenchmarkDocument() const;
    void setBenchmarkDocument(const QString &benchmark_document);
    bool is_benchmark_document_Set() const;
    bool is_benchmark_document_Valid() const;

    QString getCpeUri() const;
    void setCpeUri(const QString &cpe_uri);
    bool is_cpe_uri_Set() const;
    bool is_cpe_uri_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_benchmark_document;
    bool m_benchmark_document_isSet;
    bool m_benchmark_document_isValid;

    QString m_cpe_uri;
    bool m_cpe_uri_isSet;
    bool m_cpe_uri_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComplianceVersion)

#endif // OAIComplianceVersion_H
