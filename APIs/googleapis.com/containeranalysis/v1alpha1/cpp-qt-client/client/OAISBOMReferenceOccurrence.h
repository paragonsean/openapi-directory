/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISBOMReferenceOccurrence.h
 *
 * The occurrence representing an SBOM reference as applied to a specific resource. The occurrence follows the DSSE specification. See https://github.com/secure-systems-lab/dsse/blob/master/envelope.md for more details.
 */

#ifndef OAISBOMReferenceOccurrence_H
#define OAISBOMReferenceOccurrence_H

#include <QJsonObject>

#include "OAIEnvelopeSignature.h"
#include "OAISbomReferenceIntotoPayload.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISbomReferenceIntotoPayload;
class OAIEnvelopeSignature;

class OAISBOMReferenceOccurrence : public OAIObject {
public:
    OAISBOMReferenceOccurrence();
    OAISBOMReferenceOccurrence(QString json);
    ~OAISBOMReferenceOccurrence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISbomReferenceIntotoPayload getPayload() const;
    void setPayload(const OAISbomReferenceIntotoPayload &payload);
    bool is_payload_Set() const;
    bool is_payload_Valid() const;

    QString getPayloadType() const;
    void setPayloadType(const QString &payload_type);
    bool is_payload_type_Set() const;
    bool is_payload_type_Valid() const;

    QList<OAIEnvelopeSignature> getSignatures() const;
    void setSignatures(const QList<OAIEnvelopeSignature> &signatures);
    bool is_signatures_Set() const;
    bool is_signatures_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISbomReferenceIntotoPayload m_payload;
    bool m_payload_isSet;
    bool m_payload_isValid;

    QString m_payload_type;
    bool m_payload_type_isSet;
    bool m_payload_type_isValid;

    QList<OAIEnvelopeSignature> m_signatures;
    bool m_signatures_isSet;
    bool m_signatures_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISBOMReferenceOccurrence)

#endif // OAISBOMReferenceOccurrence_H
