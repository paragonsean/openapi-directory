/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAttestation.h
 *
 * Occurrence that represents a single \&quot;attestation\&quot;. The authenticity of an Attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust. In this circumstance, the AttestationAuthority to which this Attestation is attached is primarily useful for look-up (how to find this Attestation if you already know the Authority and artifact to be verified) and intent (which authority was this attestation intended to sign for).
 */

#ifndef OAIAttestation_H
#define OAIAttestation_H

#include <QJsonObject>

#include "OAIPgpSignedAttestation.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPgpSignedAttestation;

class OAIAttestation : public OAIObject {
public:
    OAIAttestation();
    OAIAttestation(QString json);
    ~OAIAttestation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPgpSignedAttestation getPgpSignedAttestation() const;
    void setPgpSignedAttestation(const OAIPgpSignedAttestation &pgp_signed_attestation);
    bool is_pgp_signed_attestation_Set() const;
    bool is_pgp_signed_attestation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPgpSignedAttestation m_pgp_signed_attestation;
    bool m_pgp_signed_attestation_isSet;
    bool m_pgp_signed_attestation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAttestation)

#endif // OAIAttestation_H
