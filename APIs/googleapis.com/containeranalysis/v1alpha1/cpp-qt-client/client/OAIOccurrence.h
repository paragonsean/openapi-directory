/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOccurrence.h
 *
 * &#x60;Occurrence&#x60; includes information about analysis occurrences for an image.
 */

#ifndef OAIOccurrence_H
#define OAIOccurrence_H

#include <QJsonObject>

#include "OAIAttestation.h"
#include "OAIBuildDetails.h"
#include "OAIComplianceOccurrence.h"
#include "OAIDSSEAttestationOccurrence.h"
#include "OAIDeployment.h"
#include "OAIDerived.h"
#include "OAIDiscovered.h"
#include "OAIDocumentOccurrence.h"
#include "OAIEnvelope.h"
#include "OAIFileOccurrence.h"
#include "OAIInstallation.h"
#include "OAIPackageInfoOccurrence.h"
#include "OAIRelationshipOccurrence.h"
#include "OAIResource.h"
#include "OAISBOMReferenceOccurrence.h"
#include "OAIUpgradeOccurrence.h"
#include "OAIVulnerabilityDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttestation;
class OAIBuildDetails;
class OAIComplianceOccurrence;
class OAIDeployment;
class OAIDerived;
class OAIDiscovered;
class OAIDSSEAttestationOccurrence;
class OAIEnvelope;
class OAIInstallation;
class OAIResource;
class OAIDocumentOccurrence;
class OAISBOMReferenceOccurrence;
class OAIFileOccurrence;
class OAIPackageInfoOccurrence;
class OAIRelationshipOccurrence;
class OAIUpgradeOccurrence;
class OAIVulnerabilityDetails;

class OAIOccurrence : public OAIObject {
public:
    OAIOccurrence();
    OAIOccurrence(QString json);
    ~OAIOccurrence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAttestation getAttestation() const;
    void setAttestation(const OAIAttestation &attestation);
    bool is_attestation_Set() const;
    bool is_attestation_Valid() const;

    OAIBuildDetails getBuildDetails() const;
    void setBuildDetails(const OAIBuildDetails &build_details);
    bool is_build_details_Set() const;
    bool is_build_details_Valid() const;

    OAIComplianceOccurrence getCompliance() const;
    void setCompliance(const OAIComplianceOccurrence &compliance);
    bool is_compliance_Set() const;
    bool is_compliance_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    OAIDeployment getDeployment() const;
    void setDeployment(const OAIDeployment &deployment);
    bool is_deployment_Set() const;
    bool is_deployment_Valid() const;

    OAIDerived getDerivedImage() const;
    void setDerivedImage(const OAIDerived &derived_image);
    bool is_derived_image_Set() const;
    bool is_derived_image_Valid() const;

    OAIDiscovered getDiscovered() const;
    void setDiscovered(const OAIDiscovered &discovered);
    bool is_discovered_Set() const;
    bool is_discovered_Valid() const;

    OAIDSSEAttestationOccurrence getDsseAttestation() const;
    void setDsseAttestation(const OAIDSSEAttestationOccurrence &dsse_attestation);
    bool is_dsse_attestation_Set() const;
    bool is_dsse_attestation_Valid() const;

    OAIEnvelope getEnvelope() const;
    void setEnvelope(const OAIEnvelope &envelope);
    bool is_envelope_Set() const;
    bool is_envelope_Valid() const;

    OAIInstallation getInstallation() const;
    void setInstallation(const OAIInstallation &installation);
    bool is_installation_Set() const;
    bool is_installation_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNoteName() const;
    void setNoteName(const QString &note_name);
    bool is_note_name_Set() const;
    bool is_note_name_Valid() const;

    QString getRemediation() const;
    void setRemediation(const QString &remediation);
    bool is_remediation_Set() const;
    bool is_remediation_Valid() const;

    OAIResource getResource() const;
    void setResource(const OAIResource &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QString getResourceUrl() const;
    void setResourceUrl(const QString &resource_url);
    bool is_resource_url_Set() const;
    bool is_resource_url_Valid() const;

    OAIDocumentOccurrence getSbom() const;
    void setSbom(const OAIDocumentOccurrence &sbom);
    bool is_sbom_Set() const;
    bool is_sbom_Valid() const;

    OAISBOMReferenceOccurrence getSbomReference() const;
    void setSbomReference(const OAISBOMReferenceOccurrence &sbom_reference);
    bool is_sbom_reference_Set() const;
    bool is_sbom_reference_Valid() const;

    OAIFileOccurrence getSpdxFile() const;
    void setSpdxFile(const OAIFileOccurrence &spdx_file);
    bool is_spdx_file_Set() const;
    bool is_spdx_file_Valid() const;

    OAIPackageInfoOccurrence getSpdxPackage() const;
    void setSpdxPackage(const OAIPackageInfoOccurrence &spdx_package);
    bool is_spdx_package_Set() const;
    bool is_spdx_package_Valid() const;

    OAIRelationshipOccurrence getSpdxRelationship() const;
    void setSpdxRelationship(const OAIRelationshipOccurrence &spdx_relationship);
    bool is_spdx_relationship_Set() const;
    bool is_spdx_relationship_Valid() const;

    QString getUpdateTime() const;
    void setUpdateTime(const QString &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    OAIUpgradeOccurrence getUpgrade() const;
    void setUpgrade(const OAIUpgradeOccurrence &upgrade);
    bool is_upgrade_Set() const;
    bool is_upgrade_Valid() const;

    OAIVulnerabilityDetails getVulnerabilityDetails() const;
    void setVulnerabilityDetails(const OAIVulnerabilityDetails &vulnerability_details);
    bool is_vulnerability_details_Set() const;
    bool is_vulnerability_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAttestation m_attestation;
    bool m_attestation_isSet;
    bool m_attestation_isValid;

    OAIBuildDetails m_build_details;
    bool m_build_details_isSet;
    bool m_build_details_isValid;

    OAIComplianceOccurrence m_compliance;
    bool m_compliance_isSet;
    bool m_compliance_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    OAIDeployment m_deployment;
    bool m_deployment_isSet;
    bool m_deployment_isValid;

    OAIDerived m_derived_image;
    bool m_derived_image_isSet;
    bool m_derived_image_isValid;

    OAIDiscovered m_discovered;
    bool m_discovered_isSet;
    bool m_discovered_isValid;

    OAIDSSEAttestationOccurrence m_dsse_attestation;
    bool m_dsse_attestation_isSet;
    bool m_dsse_attestation_isValid;

    OAIEnvelope m_envelope;
    bool m_envelope_isSet;
    bool m_envelope_isValid;

    OAIInstallation m_installation;
    bool m_installation_isSet;
    bool m_installation_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_note_name;
    bool m_note_name_isSet;
    bool m_note_name_isValid;

    QString m_remediation;
    bool m_remediation_isSet;
    bool m_remediation_isValid;

    OAIResource m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QString m_resource_url;
    bool m_resource_url_isSet;
    bool m_resource_url_isValid;

    OAIDocumentOccurrence m_sbom;
    bool m_sbom_isSet;
    bool m_sbom_isValid;

    OAISBOMReferenceOccurrence m_sbom_reference;
    bool m_sbom_reference_isSet;
    bool m_sbom_reference_isValid;

    OAIFileOccurrence m_spdx_file;
    bool m_spdx_file_isSet;
    bool m_spdx_file_isValid;

    OAIPackageInfoOccurrence m_spdx_package;
    bool m_spdx_package_isSet;
    bool m_spdx_package_isValid;

    OAIRelationshipOccurrence m_spdx_relationship;
    bool m_spdx_relationship_isSet;
    bool m_spdx_relationship_isValid;

    QString m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    OAIUpgradeOccurrence m_upgrade;
    bool m_upgrade_isSet;
    bool m_upgrade_isValid;

    OAIVulnerabilityDetails m_vulnerability_details;
    bool m_vulnerability_details_isSet;
    bool m_vulnerability_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOccurrence)

#endif // OAIOccurrence_H
