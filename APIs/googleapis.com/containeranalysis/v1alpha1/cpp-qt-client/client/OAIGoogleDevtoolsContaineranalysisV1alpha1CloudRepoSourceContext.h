/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext.h
 *
 * A CloudRepoSourceContext denotes a particular revision in a Google Cloud Source Repo.
 */

#ifndef OAIGoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext_H
#define OAIGoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext_H

#include <QJsonObject>

#include "OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext.h"
#include "OAIGoogleDevtoolsContaineranalysisV1alpha1RepoId.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext;
class OAIGoogleDevtoolsContaineranalysisV1alpha1RepoId;

class OAIGoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext : public OAIObject {
public:
    OAIGoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext();
    OAIGoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext(QString json);
    ~OAIGoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext getAliasContext() const;
    void setAliasContext(const OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext &alias_context);
    bool is_alias_context_Set() const;
    bool is_alias_context_Valid() const;

    OAIGoogleDevtoolsContaineranalysisV1alpha1RepoId getRepoId() const;
    void setRepoId(const OAIGoogleDevtoolsContaineranalysisV1alpha1RepoId &repo_id);
    bool is_repo_id_Set() const;
    bool is_repo_id_Valid() const;

    QString getRevisionId() const;
    void setRevisionId(const QString &revision_id);
    bool is_revision_id_Set() const;
    bool is_revision_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext m_alias_context;
    bool m_alias_context_isSet;
    bool m_alias_context_isValid;

    OAIGoogleDevtoolsContaineranalysisV1alpha1RepoId m_repo_id;
    bool m_repo_id_isSet;
    bool m_repo_id_isValid;

    QString m_revision_id;
    bool m_revision_id_isSet;
    bool m_revision_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext)

#endif // OAIGoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext_H
