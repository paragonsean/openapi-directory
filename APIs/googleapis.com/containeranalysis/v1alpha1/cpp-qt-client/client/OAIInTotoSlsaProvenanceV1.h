/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInTotoSlsaProvenanceV1.h
 *
 * 
 */

#ifndef OAIInTotoSlsaProvenanceV1_H
#define OAIInTotoSlsaProvenanceV1_H

#include <QJsonObject>

#include "OAISlsaProvenanceV1.h"
#include "OAISubject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISlsaProvenanceV1;
class OAISubject;

class OAIInTotoSlsaProvenanceV1 : public OAIObject {
public:
    OAIInTotoSlsaProvenanceV1();
    OAIInTotoSlsaProvenanceV1(QString json);
    ~OAIInTotoSlsaProvenanceV1() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getType() const;
    void setType(const QString &_type);
    bool is__type_Set() const;
    bool is__type_Valid() const;

    OAISlsaProvenanceV1 getPredicate() const;
    void setPredicate(const OAISlsaProvenanceV1 &predicate);
    bool is_predicate_Set() const;
    bool is_predicate_Valid() const;

    QString getPredicateType() const;
    void setPredicateType(const QString &predicate_type);
    bool is_predicate_type_Set() const;
    bool is_predicate_type_Valid() const;

    QList<OAISubject> getSubject() const;
    void setSubject(const QList<OAISubject> &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__type;
    bool m__type_isSet;
    bool m__type_isValid;

    OAISlsaProvenanceV1 m_predicate;
    bool m_predicate_isSet;
    bool m_predicate_isValid;

    QString m_predicate_type;
    bool m_predicate_type_isSet;
    bool m_predicate_type_isValid;

    QList<OAISubject> m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInTotoSlsaProvenanceV1)

#endif // OAIInTotoSlsaProvenanceV1_H
