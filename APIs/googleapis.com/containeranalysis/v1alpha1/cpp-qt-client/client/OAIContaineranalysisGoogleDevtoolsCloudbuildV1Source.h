/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContaineranalysisGoogleDevtoolsCloudbuildV1Source.h
 *
 * Location of the source in a supported storage service.
 */

#ifndef OAIContaineranalysisGoogleDevtoolsCloudbuildV1Source_H
#define OAIContaineranalysisGoogleDevtoolsCloudbuildV1Source_H

#include <QJsonObject>

#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1GitSource.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource.h"
#include "OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1GitSource;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource;
class OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest;

class OAIContaineranalysisGoogleDevtoolsCloudbuildV1Source : public OAIObject {
public:
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1Source();
    OAIContaineranalysisGoogleDevtoolsCloudbuildV1Source(QString json);
    ~OAIContaineranalysisGoogleDevtoolsCloudbuildV1Source() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository getConnectedRepository() const;
    void setConnectedRepository(const OAIContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository &connected_repository);
    bool is_connected_repository_Set() const;
    bool is_connected_repository_Valid() const;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1GitSource getGitSource() const;
    void setGitSource(const OAIContaineranalysisGoogleDevtoolsCloudbuildV1GitSource &git_source);
    bool is_git_source_Set() const;
    bool is_git_source_Valid() const;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource getRepoSource() const;
    void setRepoSource(const OAIContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource &repo_source);
    bool is_repo_source_Set() const;
    bool is_repo_source_Valid() const;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource getStorageSource() const;
    void setStorageSource(const OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource &storage_source);
    bool is_storage_source_Set() const;
    bool is_storage_source_Valid() const;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest getStorageSourceManifest() const;
    void setStorageSourceManifest(const OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest &storage_source_manifest);
    bool is_storage_source_manifest_Set() const;
    bool is_storage_source_manifest_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository m_connected_repository;
    bool m_connected_repository_isSet;
    bool m_connected_repository_isValid;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1GitSource m_git_source;
    bool m_git_source_isSet;
    bool m_git_source_isValid;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource m_repo_source;
    bool m_repo_source_isSet;
    bool m_repo_source_isValid;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource m_storage_source;
    bool m_storage_source_isSet;
    bool m_storage_source_isValid;

    OAIContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest m_storage_source_manifest;
    bool m_storage_source_manifest_isSet;
    bool m_storage_source_manifest_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContaineranalysisGoogleDevtoolsCloudbuildV1Source)

#endif // OAIContaineranalysisGoogleDevtoolsCloudbuildV1Source_H
