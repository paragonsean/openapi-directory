/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProduct.h
 *
 * Product contains information about a product and how to uniquely identify it.
 */

#ifndef OAIProduct_H
#define OAIProduct_H

#include <QJsonObject>

#include "OAIIdentifierHelper.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIdentifierHelper;

class OAIProduct : public OAIObject {
public:
    OAIProduct();
    OAIProduct(QString json);
    ~OAIProduct() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIIdentifierHelper getIdentifierHelper() const;
    void setIdentifierHelper(const OAIIdentifierHelper &identifier_helper);
    bool is_identifier_helper_Set() const;
    bool is_identifier_helper_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIIdentifierHelper m_identifier_helper;
    bool m_identifier_helper_isSet;
    bool m_identifier_helper_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProduct)

#endif // OAIProduct_H
