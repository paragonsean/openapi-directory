/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComplianceNote.h
 *
 * ComplianceNote encapsulates all information about a specific compliance check.
 */

#ifndef OAIComplianceNote_H
#define OAIComplianceNote_H

#include <QJsonObject>

#include "OAICisBenchmark.h"
#include "OAIComplianceVersion.h"
#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICisBenchmark;
class OAIComplianceVersion;

class OAIComplianceNote : public OAIObject {
public:
    OAIComplianceNote();
    OAIComplianceNote(QString json);
    ~OAIComplianceNote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICisBenchmark getCisBenchmark() const;
    void setCisBenchmark(const OAICisBenchmark &cis_benchmark);
    bool is_cis_benchmark_Set() const;
    bool is_cis_benchmark_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getRationale() const;
    void setRationale(const QString &rationale);
    bool is_rationale_Set() const;
    bool is_rationale_Valid() const;

    QString getRemediation() const;
    void setRemediation(const QString &remediation);
    bool is_remediation_Set() const;
    bool is_remediation_Valid() const;

    QByteArray getScanInstructions() const;
    void setScanInstructions(const QByteArray &scan_instructions);
    bool is_scan_instructions_Set() const;
    bool is_scan_instructions_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QList<OAIComplianceVersion> getVersion() const;
    void setVersion(const QList<OAIComplianceVersion> &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICisBenchmark m_cis_benchmark;
    bool m_cis_benchmark_isSet;
    bool m_cis_benchmark_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_rationale;
    bool m_rationale_isSet;
    bool m_rationale_isValid;

    QString m_remediation;
    bool m_remediation_isSet;
    bool m_remediation_isValid;

    QByteArray m_scan_instructions;
    bool m_scan_instructions_isSet;
    bool m_scan_instructions_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QList<OAIComplianceVersion> m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComplianceNote)

#endif // OAIComplianceNote_H
