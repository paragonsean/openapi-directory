/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext() {
    this->initializeModel();
}

OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::~OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext() {}

void OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::initializeModel() {

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::fromJsonObject(QJsonObject json) {

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::asJsonObject() const {
    QJsonObject obj;
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::getKind() const {
    return m_kind;
}
void OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::getName() const {
    return m_name;
}
void OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleDevtoolsContaineranalysisV1alpha1AliasContext::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
