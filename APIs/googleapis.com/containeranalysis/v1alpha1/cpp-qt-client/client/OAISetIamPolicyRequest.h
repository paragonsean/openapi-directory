/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISetIamPolicyRequest.h
 *
 * Request message for &#x60;SetIamPolicy&#x60; method.
 */

#ifndef OAISetIamPolicyRequest_H
#define OAISetIamPolicyRequest_H

#include <QJsonObject>

#include "OAIPolicy.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPolicy;

class OAISetIamPolicyRequest : public OAIObject {
public:
    OAISetIamPolicyRequest();
    OAISetIamPolicyRequest(QString json);
    ~OAISetIamPolicyRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPolicy getPolicy() const;
    void setPolicy(const OAIPolicy &policy);
    bool is_policy_Set() const;
    bool is_policy_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPolicy m_policy;
    bool m_policy_isSet;
    bool m_policy_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISetIamPolicyRequest)

#endif // OAISetIamPolicyRequest_H
