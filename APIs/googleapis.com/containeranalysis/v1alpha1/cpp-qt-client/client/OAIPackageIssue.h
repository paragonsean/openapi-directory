/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPackageIssue.h
 *
 * This message wraps a location affected by a vulnerability and its associated fix (if one is available).
 */

#ifndef OAIPackageIssue_H
#define OAIPackageIssue_H

#include <QJsonObject>

#include "OAIVulnerabilityLocation.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVulnerabilityLocation;

class OAIPackageIssue : public OAIObject {
public:
    OAIPackageIssue();
    OAIPackageIssue(QString json);
    ~OAIPackageIssue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIVulnerabilityLocation getAffectedLocation() const;
    void setAffectedLocation(const OAIVulnerabilityLocation &affected_location);
    bool is_affected_location_Set() const;
    bool is_affected_location_Valid() const;

    QString getEffectiveSeverity() const;
    void setEffectiveSeverity(const QString &effective_severity);
    bool is_effective_severity_Set() const;
    bool is_effective_severity_Valid() const;

    OAIVulnerabilityLocation getFixedLocation() const;
    void setFixedLocation(const OAIVulnerabilityLocation &fixed_location);
    bool is_fixed_location_Set() const;
    bool is_fixed_location_Valid() const;

    QString getPackageType() const;
    void setPackageType(const QString &package_type);
    bool is_package_type_Set() const;
    bool is_package_type_Valid() const;

    QString getSeverityName() const;
    void setSeverityName(const QString &severity_name);
    bool is_severity_name_Set() const;
    bool is_severity_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIVulnerabilityLocation m_affected_location;
    bool m_affected_location_isSet;
    bool m_affected_location_isValid;

    QString m_effective_severity;
    bool m_effective_severity_isSet;
    bool m_effective_severity_isValid;

    OAIVulnerabilityLocation m_fixed_location;
    bool m_fixed_location_isSet;
    bool m_fixed_location_isValid;

    QString m_package_type;
    bool m_package_type_isSet;
    bool m_package_type_isValid;

    QString m_severity_name;
    bool m_severity_name_isSet;
    bool m_severity_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPackageIssue)

#endif // OAIPackageIssue_H
