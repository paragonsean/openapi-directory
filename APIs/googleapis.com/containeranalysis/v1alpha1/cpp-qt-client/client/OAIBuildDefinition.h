/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuildDefinition.h
 *
 * 
 */

#ifndef OAIBuildDefinition_H
#define OAIBuildDefinition_H

#include <QJsonObject>

#include "OAIResourceDescriptor.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceDescriptor;

class OAIBuildDefinition : public OAIObject {
public:
    OAIBuildDefinition();
    OAIBuildDefinition(QString json);
    ~OAIBuildDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBuildType() const;
    void setBuildType(const QString &build_type);
    bool is_build_type_Set() const;
    bool is_build_type_Valid() const;

    QMap<QString, QJsonValue> getExternalParameters() const;
    void setExternalParameters(const QMap<QString, QJsonValue> &external_parameters);
    bool is_external_parameters_Set() const;
    bool is_external_parameters_Valid() const;

    QMap<QString, QJsonValue> getInternalParameters() const;
    void setInternalParameters(const QMap<QString, QJsonValue> &internal_parameters);
    bool is_internal_parameters_Set() const;
    bool is_internal_parameters_Valid() const;

    QList<OAIResourceDescriptor> getResolvedDependencies() const;
    void setResolvedDependencies(const QList<OAIResourceDescriptor> &resolved_dependencies);
    bool is_resolved_dependencies_Set() const;
    bool is_resolved_dependencies_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_build_type;
    bool m_build_type_isSet;
    bool m_build_type_isValid;

    QMap<QString, QJsonValue> m_external_parameters;
    bool m_external_parameters_isSet;
    bool m_external_parameters_isValid;

    QMap<QString, QJsonValue> m_internal_parameters;
    bool m_internal_parameters_isSet;
    bool m_internal_parameters_isValid;

    QList<OAIResourceDescriptor> m_resolved_dependencies;
    bool m_resolved_dependencies_isSet;
    bool m_resolved_dependencies_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuildDefinition)

#endif // OAIBuildDefinition_H
