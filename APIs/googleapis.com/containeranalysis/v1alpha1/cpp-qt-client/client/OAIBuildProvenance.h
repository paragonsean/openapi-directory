/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuildProvenance.h
 *
 * Provenance of a build. Contains all information needed to verify the full details about the build from source to completion.
 */

#ifndef OAIBuildProvenance_H
#define OAIBuildProvenance_H

#include <QJsonObject>

#include "OAIArtifact.h"
#include "OAICommand.h"
#include "OAISource.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArtifact;
class OAICommand;
class OAISource;

class OAIBuildProvenance : public OAIObject {
public:
    OAIBuildProvenance();
    OAIBuildProvenance(QString json);
    ~OAIBuildProvenance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getBuildOptions() const;
    void setBuildOptions(const QMap<QString, QString> &build_options);
    bool is_build_options_Set() const;
    bool is_build_options_Valid() const;

    QString getBuilderVersion() const;
    void setBuilderVersion(const QString &builder_version);
    bool is_builder_version_Set() const;
    bool is_builder_version_Valid() const;

    QList<OAIArtifact> getBuiltArtifacts() const;
    void setBuiltArtifacts(const QList<OAIArtifact> &built_artifacts);
    bool is_built_artifacts_Set() const;
    bool is_built_artifacts_Valid() const;

    QList<OAICommand> getCommands() const;
    void setCommands(const QList<OAICommand> &commands);
    bool is_commands_Set() const;
    bool is_commands_Valid() const;

    QString getCreateTime() const;
    void setCreateTime(const QString &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    QString getCreator() const;
    void setCreator(const QString &creator);
    bool is_creator_Set() const;
    bool is_creator_Valid() const;

    QString getFinishTime() const;
    void setFinishTime(const QString &finish_time);
    bool is_finish_time_Set() const;
    bool is_finish_time_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLogsBucket() const;
    void setLogsBucket(const QString &logs_bucket);
    bool is_logs_bucket_Set() const;
    bool is_logs_bucket_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    OAISource getSourceProvenance() const;
    void setSourceProvenance(const OAISource &source_provenance);
    bool is_source_provenance_Set() const;
    bool is_source_provenance_Valid() const;

    QString getStartTime() const;
    void setStartTime(const QString &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getTriggerId() const;
    void setTriggerId(const QString &trigger_id);
    bool is_trigger_id_Set() const;
    bool is_trigger_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_build_options;
    bool m_build_options_isSet;
    bool m_build_options_isValid;

    QString m_builder_version;
    bool m_builder_version_isSet;
    bool m_builder_version_isValid;

    QList<OAIArtifact> m_built_artifacts;
    bool m_built_artifacts_isSet;
    bool m_built_artifacts_isValid;

    QList<OAICommand> m_commands;
    bool m_commands_isSet;
    bool m_commands_isValid;

    QString m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    QString m_creator;
    bool m_creator_isSet;
    bool m_creator_isValid;

    QString m_finish_time;
    bool m_finish_time_isSet;
    bool m_finish_time_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_logs_bucket;
    bool m_logs_bucket_isSet;
    bool m_logs_bucket_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    OAISource m_source_provenance;
    bool m_source_provenance_isSet;
    bool m_source_provenance_isValid;

    QString m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_trigger_id;
    bool m_trigger_id_isSet;
    bool m_trigger_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuildProvenance)

#endif // OAIBuildProvenance_H
