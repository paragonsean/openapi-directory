/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIdentifierHelper.h
 *
 * Helps in identifying the underlying product. This should be treated like a one-of field. Only one field should be set in this proto. This is a workaround because spanner indexes on one-of fields restrict addition and deletion of fields.
 */

#ifndef OAIIdentifierHelper_H
#define OAIIdentifierHelper_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIdentifierHelper : public OAIObject {
public:
    OAIIdentifierHelper();
    OAIIdentifierHelper(QString json);
    ~OAIIdentifierHelper() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getField() const;
    void setField(const QString &field);
    bool is_field_Set() const;
    bool is_field_Valid() const;

    QString getGenericUri() const;
    void setGenericUri(const QString &generic_uri);
    bool is_generic_uri_Set() const;
    bool is_generic_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_field;
    bool m_field_isSet;
    bool m_field_isValid;

    QString m_generic_uri;
    bool m_generic_uri_isSet;
    bool m_generic_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIdentifierHelper)

#endif // OAIIdentifierHelper_H
