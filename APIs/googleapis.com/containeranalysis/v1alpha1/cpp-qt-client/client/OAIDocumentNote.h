/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDocumentNote.h
 *
 * DocumentNote represents an SPDX Document Creation Infromation section: https://spdx.github.io/spdx-spec/2-document-creation-information/
 */

#ifndef OAIDocumentNote_H
#define OAIDocumentNote_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDocumentNote : public OAIObject {
public:
    OAIDocumentNote();
    OAIDocumentNote(QString json);
    ~OAIDocumentNote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataLicence() const;
    void setDataLicence(const QString &data_licence);
    bool is_data_licence_Set() const;
    bool is_data_licence_Valid() const;

    QString getSpdxVersion() const;
    void setSpdxVersion(const QString &spdx_version);
    bool is_spdx_version_Set() const;
    bool is_spdx_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_licence;
    bool m_data_licence_isSet;
    bool m_data_licence_isValid;

    QString m_spdx_version;
    bool m_spdx_version_isSet;
    bool m_spdx_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDocumentNote)

#endif // OAIDocumentNote_H
