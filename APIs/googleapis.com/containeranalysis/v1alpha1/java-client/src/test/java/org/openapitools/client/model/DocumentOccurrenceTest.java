/*
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DocumentOccurrence
 */
public class DocumentOccurrenceTest {
    private final DocumentOccurrence model = new DocumentOccurrence();

    /**
     * Model tests for DocumentOccurrence
     */
    @Test
    public void testDocumentOccurrence() {
        // TODO: test DocumentOccurrence
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'creatorComment'
     */
    @Test
    public void creatorCommentTest() {
        // TODO: test creatorComment
    }

    /**
     * Test the property 'creators'
     */
    @Test
    public void creatorsTest() {
        // TODO: test creators
    }

    /**
     * Test the property 'documentComment'
     */
    @Test
    public void documentCommentTest() {
        // TODO: test documentComment
    }

    /**
     * Test the property 'externalDocumentRefs'
     */
    @Test
    public void externalDocumentRefsTest() {
        // TODO: test externalDocumentRefs
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'licenseListVersion'
     */
    @Test
    public void licenseListVersionTest() {
        // TODO: test licenseListVersion
    }

    /**
     * Test the property 'namespace'
     */
    @Test
    public void namespaceTest() {
        // TODO: test namespace
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

}
