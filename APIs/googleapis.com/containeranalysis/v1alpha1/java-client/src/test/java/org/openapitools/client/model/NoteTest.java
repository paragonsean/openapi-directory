/*
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AttestationAuthority;
import org.openapitools.client.model.Basis;
import org.openapitools.client.model.BuildType;
import org.openapitools.client.model.ComplianceNote;
import org.openapitools.client.model.DSSEAttestationNote;
import org.openapitools.client.model.Deployable;
import org.openapitools.client.model.Discovery;
import org.openapitools.client.model.DocumentNote;
import org.openapitools.client.model.FileNote;
import org.openapitools.client.model.ModelPackage;
import org.openapitools.client.model.PackageInfoNote;
import org.openapitools.client.model.RelatedUrl;
import org.openapitools.client.model.RelationshipNote;
import org.openapitools.client.model.SBOMReferenceNote;
import org.openapitools.client.model.UpgradeNote;
import org.openapitools.client.model.VulnerabilityAssessmentNote;
import org.openapitools.client.model.VulnerabilityType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Note
 */
public class NoteTest {
    private final Note model = new Note();

    /**
     * Model tests for Note
     */
    @Test
    public void testNote() {
        // TODO: test Note
    }

    /**
     * Test the property 'attestationAuthority'
     */
    @Test
    public void attestationAuthorityTest() {
        // TODO: test attestationAuthority
    }

    /**
     * Test the property 'baseImage'
     */
    @Test
    public void baseImageTest() {
        // TODO: test baseImage
    }

    /**
     * Test the property 'buildType'
     */
    @Test
    public void buildTypeTest() {
        // TODO: test buildType
    }

    /**
     * Test the property 'compliance'
     */
    @Test
    public void complianceTest() {
        // TODO: test compliance
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'deployable'
     */
    @Test
    public void deployableTest() {
        // TODO: test deployable
    }

    /**
     * Test the property 'discovery'
     */
    @Test
    public void discoveryTest() {
        // TODO: test discovery
    }

    /**
     * Test the property 'dsseAttestation'
     */
    @Test
    public void dsseAttestationTest() {
        // TODO: test dsseAttestation
    }

    /**
     * Test the property 'expirationTime'
     */
    @Test
    public void expirationTimeTest() {
        // TODO: test expirationTime
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'longDescription'
     */
    @Test
    public void longDescriptionTest() {
        // TODO: test longDescription
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property '_package'
     */
    @Test
    public void _packageTest() {
        // TODO: test _package
    }

    /**
     * Test the property 'relatedUrl'
     */
    @Test
    public void relatedUrlTest() {
        // TODO: test relatedUrl
    }

    /**
     * Test the property 'sbom'
     */
    @Test
    public void sbomTest() {
        // TODO: test sbom
    }

    /**
     * Test the property 'sbomReference'
     */
    @Test
    public void sbomReferenceTest() {
        // TODO: test sbomReference
    }

    /**
     * Test the property 'shortDescription'
     */
    @Test
    public void shortDescriptionTest() {
        // TODO: test shortDescription
    }

    /**
     * Test the property 'spdxFile'
     */
    @Test
    public void spdxFileTest() {
        // TODO: test spdxFile
    }

    /**
     * Test the property 'spdxPackage'
     */
    @Test
    public void spdxPackageTest() {
        // TODO: test spdxPackage
    }

    /**
     * Test the property 'spdxRelationship'
     */
    @Test
    public void spdxRelationshipTest() {
        // TODO: test spdxRelationship
    }

    /**
     * Test the property 'updateTime'
     */
    @Test
    public void updateTimeTest() {
        // TODO: test updateTime
    }

    /**
     * Test the property 'upgrade'
     */
    @Test
    public void upgradeTest() {
        // TODO: test upgrade
    }

    /**
     * Test the property 'vulnerabilityAssessment'
     */
    @Test
    public void vulnerabilityAssessmentTest() {
        // TODO: test vulnerabilityAssessment
    }

    /**
     * Test the property 'vulnerabilityType'
     */
    @Test
    public void vulnerabilityTypeTest() {
        // TODO: test vulnerabilityType
    }

}
