/*
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository;
import org.openapitools.client.model.ContaineranalysisGoogleDevtoolsCloudbuildV1GitSource;
import org.openapitools.client.model.ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource;
import org.openapitools.client.model.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource;
import org.openapitools.client.model.ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ContaineranalysisGoogleDevtoolsCloudbuildV1Source
 */
public class ContaineranalysisGoogleDevtoolsCloudbuildV1SourceTest {
    private final ContaineranalysisGoogleDevtoolsCloudbuildV1Source model = new ContaineranalysisGoogleDevtoolsCloudbuildV1Source();

    /**
     * Model tests for ContaineranalysisGoogleDevtoolsCloudbuildV1Source
     */
    @Test
    public void testContaineranalysisGoogleDevtoolsCloudbuildV1Source() {
        // TODO: test ContaineranalysisGoogleDevtoolsCloudbuildV1Source
    }

    /**
     * Test the property 'connectedRepository'
     */
    @Test
    public void connectedRepositoryTest() {
        // TODO: test connectedRepository
    }

    /**
     * Test the property 'gitSource'
     */
    @Test
    public void gitSourceTest() {
        // TODO: test gitSource
    }

    /**
     * Test the property 'repoSource'
     */
    @Test
    public void repoSourceTest() {
        // TODO: test repoSource
    }

    /**
     * Test the property 'storageSource'
     */
    @Test
    public void storageSourceTest() {
        // TODO: test storageSource
    }

    /**
     * Test the property 'storageSourceManifest'
     */
    @Test
    public void storageSourceManifestTest() {
        // TODO: test storageSourceManifest
    }

}
