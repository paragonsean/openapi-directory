/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository from './ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository';
import ContaineranalysisGoogleDevtoolsCloudbuildV1GitSource from './ContaineranalysisGoogleDevtoolsCloudbuildV1GitSource';
import ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource from './ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource';
import ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource from './ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource';
import ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest from './ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest';

/**
 * The ContaineranalysisGoogleDevtoolsCloudbuildV1Source model module.
 * @module model/ContaineranalysisGoogleDevtoolsCloudbuildV1Source
 * @version v1alpha1
 */
class ContaineranalysisGoogleDevtoolsCloudbuildV1Source {
    /**
     * Constructs a new <code>ContaineranalysisGoogleDevtoolsCloudbuildV1Source</code>.
     * Location of the source in a supported storage service.
     * @alias module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1Source
     */
    constructor() { 
        
        ContaineranalysisGoogleDevtoolsCloudbuildV1Source.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContaineranalysisGoogleDevtoolsCloudbuildV1Source</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1Source} obj Optional instance to populate.
     * @return {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1Source} The populated <code>ContaineranalysisGoogleDevtoolsCloudbuildV1Source</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContaineranalysisGoogleDevtoolsCloudbuildV1Source();

            if (data.hasOwnProperty('connectedRepository')) {
                obj['connectedRepository'] = ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository.constructFromObject(data['connectedRepository']);
            }
            if (data.hasOwnProperty('gitSource')) {
                obj['gitSource'] = ContaineranalysisGoogleDevtoolsCloudbuildV1GitSource.constructFromObject(data['gitSource']);
            }
            if (data.hasOwnProperty('repoSource')) {
                obj['repoSource'] = ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource.constructFromObject(data['repoSource']);
            }
            if (data.hasOwnProperty('storageSource')) {
                obj['storageSource'] = ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource.constructFromObject(data['storageSource']);
            }
            if (data.hasOwnProperty('storageSourceManifest')) {
                obj['storageSourceManifest'] = ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest.constructFromObject(data['storageSourceManifest']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1Source</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1Source</code>.
     */
    static validateJSON(data) {
        // validate the optional field `connectedRepository`
        if (data['connectedRepository']) { // data not null
          ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository.validateJSON(data['connectedRepository']);
        }
        // validate the optional field `gitSource`
        if (data['gitSource']) { // data not null
          ContaineranalysisGoogleDevtoolsCloudbuildV1GitSource.validateJSON(data['gitSource']);
        }
        // validate the optional field `repoSource`
        if (data['repoSource']) { // data not null
          ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource.validateJSON(data['repoSource']);
        }
        // validate the optional field `storageSource`
        if (data['storageSource']) { // data not null
          ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource.validateJSON(data['storageSource']);
        }
        // validate the optional field `storageSourceManifest`
        if (data['storageSourceManifest']) { // data not null
          ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest.validateJSON(data['storageSourceManifest']);
        }

        return true;
    }


}



/**
 * @member {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ConnectedRepository} connectedRepository
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1Source.prototype['connectedRepository'] = undefined;

/**
 * @member {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1GitSource} gitSource
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1Source.prototype['gitSource'] = undefined;

/**
 * @member {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1RepoSource} repoSource
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1Source.prototype['repoSource'] = undefined;

/**
 * @member {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSource} storageSource
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1Source.prototype['storageSource'] = undefined;

/**
 * @member {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1StorageSourceManifest} storageSourceManifest
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1Source.prototype['storageSourceManifest'] = undefined;






export default ContaineranalysisGoogleDevtoolsCloudbuildV1Source;

