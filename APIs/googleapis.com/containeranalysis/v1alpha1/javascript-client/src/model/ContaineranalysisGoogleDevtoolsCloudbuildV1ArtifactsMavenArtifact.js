/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact model module.
 * @module model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact
 * @version v1alpha1
 */
class ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact {
    /**
     * Constructs a new <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact</code>.
     * A Maven artifact to upload to Artifact Registry upon successful completion of all build steps.
     * @alias module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact
     */
    constructor() { 
        
        ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact} obj Optional instance to populate.
     * @return {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact} The populated <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact();

            if (data.hasOwnProperty('artifactId')) {
                obj['artifactId'] = ApiClient.convertToType(data['artifactId'], 'String');
            }
            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = ApiClient.convertToType(data['repository'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['artifactId'] && !(typeof data['artifactId'] === 'string' || data['artifactId'] instanceof String)) {
            throw new Error("Expected the field `artifactId` to be a primitive type in the JSON string but got " + data['artifactId']);
        }
        // ensure the json data is a string
        if (data['groupId'] && !(typeof data['groupId'] === 'string' || data['groupId'] instanceof String)) {
            throw new Error("Expected the field `groupId` to be a primitive type in the JSON string but got " + data['groupId']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['repository'] && !(typeof data['repository'] === 'string' || data['repository'] instanceof String)) {
            throw new Error("Expected the field `repository` to be a primitive type in the JSON string but got " + data['repository']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * Maven `artifactId` value used when uploading the artifact to Artifact Registry.
 * @member {String} artifactId
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.prototype['artifactId'] = undefined;

/**
 * Maven `groupId` value used when uploading the artifact to Artifact Registry.
 * @member {String} groupId
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.prototype['groupId'] = undefined;

/**
 * Path to an artifact in the build's workspace to be uploaded to Artifact Registry. This can be either an absolute path, e.g. /workspace/my-app/target/my-app-1.0.SNAPSHOT.jar or a relative path from /workspace, e.g. my-app/target/my-app-1.0.SNAPSHOT.jar.
 * @member {String} path
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.prototype['path'] = undefined;

/**
 * Artifact Registry repository, in the form \"https://$REGION-maven.pkg.dev/$PROJECT/$REPOSITORY\" Artifact in the workspace specified by path will be uploaded to Artifact Registry with this location as a prefix.
 * @member {String} repository
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.prototype['repository'] = undefined;

/**
 * Maven `version` value used when uploading the artifact to Artifact Registry.
 * @member {String} version
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact.prototype['version'] = undefined;






export default ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsMavenArtifact;

