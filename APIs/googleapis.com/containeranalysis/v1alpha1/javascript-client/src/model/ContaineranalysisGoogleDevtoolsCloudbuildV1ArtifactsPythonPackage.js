/**
 * Container Analysis API
 * This API is a prerequisite for leveraging Artifact Analysis scanning capabilities in both Artifact Registry and with Advanced Vulnerability Insights (runtime scanning) in GKE. In addition, the Container Analysis API is an implementation of the Grafeas API, which enables storing, querying, and retrieval of critical metadata about all of your software artifacts.
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage model module.
 * @module model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage
 * @version v1alpha1
 */
class ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage {
    /**
     * Constructs a new <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage</code>.
     * Python package to upload to Artifact Registry upon successful completion of all build steps. A package can encapsulate multiple objects to be uploaded to a single repository.
     * @alias module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage
     */
    constructor() { 
        
        ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage} obj Optional instance to populate.
     * @return {module:model/ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage} The populated <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage();

            if (data.hasOwnProperty('paths')) {
                obj['paths'] = ApiClient.convertToType(data['paths'], ['String']);
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = ApiClient.convertToType(data['repository'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['paths'])) {
            throw new Error("Expected the field `paths` to be an array in the JSON data but got " + data['paths']);
        }
        // ensure the json data is a string
        if (data['repository'] && !(typeof data['repository'] === 'string' || data['repository'] instanceof String)) {
            throw new Error("Expected the field `repository` to be a primitive type in the JSON string but got " + data['repository']);
        }

        return true;
    }


}



/**
 * Path globs used to match files in the build's workspace. For Python/ Twine, this is usually `dist/_*`, and sometimes additionally an `.asc` file.
 * @member {Array.<String>} paths
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.prototype['paths'] = undefined;

/**
 * Artifact Registry repository, in the form \"https://$REGION-python.pkg.dev/$PROJECT/$REPOSITORY\" Files in the workspace matching any path pattern will be uploaded to Artifact Registry with this location as a prefix.
 * @member {String} repository
 */
ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage.prototype['repository'] = undefined;






export default ContaineranalysisGoogleDevtoolsCloudbuildV1ArtifactsPythonPackage;

