/**
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleTypeExpr from './GoogleTypeExpr';

/**
 * The GoogleIamV1Binding model module.
 * @module model/GoogleIamV1Binding
 * @version v1alpha1
 */
class GoogleIamV1Binding {
    /**
     * Constructs a new <code>GoogleIamV1Binding</code>.
     * Associates &#x60;members&#x60; with a &#x60;role&#x60;.
     * @alias module:model/GoogleIamV1Binding
     */
    constructor() { 
        
        GoogleIamV1Binding.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleIamV1Binding</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleIamV1Binding} obj Optional instance to populate.
     * @return {module:model/GoogleIamV1Binding} The populated <code>GoogleIamV1Binding</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleIamV1Binding();

            if (data.hasOwnProperty('condition')) {
                obj['condition'] = GoogleTypeExpr.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], ['String']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleIamV1Binding</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleIamV1Binding</code>.
     */
    static validateJSON(data) {
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          GoogleTypeExpr.validateJSON(data['condition']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['members'])) {
            throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }

        return true;
    }


}



/**
 * @member {module:model/GoogleTypeExpr} condition
 */
GoogleIamV1Binding.prototype['condition'] = undefined;

/**
 * Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values:  * `allUsers`: A special identifier that represents anyone who is    on the internet; with or without a Google account.  * `allAuthenticatedUsers`: A special identifier that represents anyone    who is authenticated with a Google account or a service account.  * `user:{emailid}`: An email address that represents a specific Google    account. For example, `alice@example.com` .   * `serviceAccount:{emailid}`: An email address that represents a service    account. For example, `my-other-app@appspot.gserviceaccount.com`.  * `group:{emailid}`: An email address that represents a Google group.    For example, `admins@example.com`.  * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique    identifier) representing a user that has been recently deleted. For    example, `alice@example.com?uid=123456789012345678901`. If the user is    recovered, this value reverts to `user:{emailid}` and the recovered user    retains the role in the binding.  * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus    unique identifier) representing a service account that has been recently    deleted. For example,    `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.    If the service account is undeleted, this value reverts to    `serviceAccount:{emailid}` and the undeleted service account retains the    role in the binding.  * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique    identifier) representing a Google group that has been recently    deleted. For example, `admins@example.com?uid=123456789012345678901`. If    the group is recovered, this value reverts to `group:{emailid}` and the    recovered group retains the role in the binding.   * `domain:{domain}`: The G Suite domain (primary) that represents all the    users of that domain. For example, `google.com` or `example.com`.  
 * @member {Array.<String>} members
 */
GoogleIamV1Binding.prototype['members'] = undefined;

/**
 * Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
 * @member {String} role
 */
GoogleIamV1Binding.prototype['role'] = undefined;






export default GoogleIamV1Binding;

