/**
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GoogleCloudServicebrokerV1alpha1Binding from '../model/GoogleCloudServicebrokerV1alpha1Binding';
import GoogleCloudServicebrokerV1alpha1CreateBindingResponse from '../model/GoogleCloudServicebrokerV1alpha1CreateBindingResponse';
import GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse from '../model/GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse';
import GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse from '../model/GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse';
import GoogleCloudServicebrokerV1alpha1GetBindingResponse from '../model/GoogleCloudServicebrokerV1alpha1GetBindingResponse';
import GoogleCloudServicebrokerV1alpha1ListBindingsResponse from '../model/GoogleCloudServicebrokerV1alpha1ListBindingsResponse';
import GoogleCloudServicebrokerV1alpha1ListCatalogResponse from '../model/GoogleCloudServicebrokerV1alpha1ListCatalogResponse';
import GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse from '../model/GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse';
import GoogleCloudServicebrokerV1alpha1Operation from '../model/GoogleCloudServicebrokerV1alpha1Operation';
import GoogleCloudServicebrokerV1alpha1ServiceInstance from '../model/GoogleCloudServicebrokerV1alpha1ServiceInstance';
import GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse from '../model/GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse';

/**
* Projects service.
* @module api/ProjectsApi
* @version v1alpha1
*/
export default class ProjectsApi {

    /**
    * Constructs a new ProjectsApi. 
    * @alias module:api/ProjectsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersInstancesServiceBindingsList operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersInstancesServiceBindingsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1ListBindingsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the bindings in the instance
     * @param {String} parent Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]`.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {Number} [pageSize] Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned.
     * @param {String} [pageToken] Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a previous list request to get the next page of results.
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersInstancesServiceBindingsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1ListBindingsResponse}
     */
    servicebrokerProjectsBrokersInstancesServiceBindingsList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersInstancesServiceBindingsList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1ListBindingsResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/service_bindings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersServiceInstancesList operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersServiceInstancesListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the instances in the brokers This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param {String} parent Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {Number} [pageSize] Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned.
     * @param {String} [pageToken] Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a previous list request to get the next page of results.
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersServiceInstancesListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse}
     */
    servicebrokerProjectsBrokersServiceInstancesList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersServiceInstancesList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/service_instances', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersV2CatalogList operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersV2CatalogListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1ListCatalogResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all the Services registered with this broker for consumption for given service registry broker, which contains an set of services. Note, that Service producer API is separate from Broker API.
     * @param {String} parent Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {Number} [pageSize] Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned.
     * @param {String} [pageToken] Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a previous list request to get the next page of results.
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersV2CatalogListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1ListCatalogResponse}
     */
    servicebrokerProjectsBrokersV2CatalogList(parent, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2CatalogList");
      }

      let pathParams = {
        'parent': parent
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'pageSize': opts['pageSize'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1ListCatalogResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/v2/catalog', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersV2ServiceInstancesCreate operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Provisions a service instance. If `request.accepts_incomplete` is false and Broker cannot execute request synchronously HTTP 422 error will be returned along with FAILED_PRECONDITION status. If `request.accepts_incomplete` is true and the Broker decides to execute resource asynchronously then HTTP 202 response code will be returned and a valid polling operation in the response will be included. If Broker executes the request synchronously and it succeeds HTTP 201 response will be furnished. If identical instance exists, then HTTP 200 response will be returned. If an instance with identical ID but mismatching parameters exists, then HTTP 409 status code will be returned.
     * @param {String} parent Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
     * @param {String} instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {Boolean} [acceptsIncomplete] Value indicating that API client supports asynchronous operations. If Broker cannot execute the request synchronously HTTP 422 code will be returned to HTTP clients along with FAILED_PRECONDITION error. If true and broker will execute request asynchronously 202 HTTP code will be returned. This broker always requires this to be true as all mutator operations are asynchronous.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1ServiceInstance} [googleCloudServicebrokerV1alpha1ServiceInstance] 
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse}
     */
    servicebrokerProjectsBrokersV2ServiceInstancesCreate(parent, instanceId, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudServicebrokerV1alpha1ServiceInstance'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesCreate");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesCreate");
      }

      let pathParams = {
        'parent': parent,
        'instance_id': instanceId
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'acceptsIncomplete': opts['acceptsIncomplete']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/v2/service_instances/{instance_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersV2ServiceInstancesDelete operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deprovisions a service instance. For synchronous/asynchronous request details see CreateServiceInstance method. If service instance does not exist HTTP 410 status will be returned.
     * @param {String} parent Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
     * @param {String} instanceId The instance id to deprovision.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {Boolean} [acceptsIncomplete] See CreateServiceInstanceRequest for details.
     * @param {String} [planId] The plan id of the service instance.
     * @param {String} [serviceId] The service id of the service instance.
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse}
     */
    servicebrokerProjectsBrokersV2ServiceInstancesDelete(parent, instanceId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesDelete");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesDelete");
      }

      let pathParams = {
        'parent': parent,
        'instanceId': instanceId
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'acceptsIncomplete': opts['acceptsIncomplete'],
        'planId': opts['planId'],
        'serviceId': opts['serviceId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/v2/service_instances/{instanceId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersV2ServiceInstancesGet operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1ServiceInstance} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the given service instance from the system. This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param {String} name The resource name of the instance to return.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1ServiceInstance}
     */
    servicebrokerProjectsBrokersV2ServiceInstancesGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling servicebrokerProjectsBrokersV2ServiceInstancesGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1ServiceInstance;
      return this.apiClient.callApi(
        '/v1alpha1/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperation operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the state of the last operation for the service instance. Only last (or current) operation can be polled.
     * @param {String} parent Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
     * @param {String} instanceId The instance id for which to return the last operation status.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [operation] If `operation` was returned during mutation operation, this field must be populated with the provided value.
     * @param {String} [planId] Plan id.
     * @param {String} [serviceId] Service id.
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1Operation}
     */
    servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperation(parent, instanceId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperation");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperation");
      }

      let pathParams = {
        'parent': parent,
        'instanceId': instanceId
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'operation': opts['operation'],
        'planId': opts['planId'],
        'serviceId': opts['serviceId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1Operation;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/v2/service_instances/{instanceId}/last_operation', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersV2ServiceInstancesPatch operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates an existing service instance. See CreateServiceInstance for possible response codes.
     * @param {String} parent Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
     * @param {String} instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {Boolean} [acceptsIncomplete] See CreateServiceInstanceRequest for details.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1ServiceInstance} [googleCloudServicebrokerV1alpha1ServiceInstance] 
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse}
     */
    servicebrokerProjectsBrokersV2ServiceInstancesPatch(parent, instanceId, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudServicebrokerV1alpha1ServiceInstance'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesPatch");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesPatch");
      }

      let pathParams = {
        'parent': parent,
        'instance_id': instanceId
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'acceptsIncomplete': opts['acceptsIncomplete']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/v2/service_instances/{instance_id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1CreateBindingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * CreateBinding generates a service binding to an existing service instance. See ProviServiceInstance for async operation details.
     * @param {String} parent The GCP container. Must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
     * @param {String} instanceId The service instance to which to bind.
     * @param {String} bindingId The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {Boolean} [acceptsIncomplete] See CreateServiceInstanceRequest for details.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1Binding} [googleCloudServicebrokerV1alpha1Binding] 
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1CreateBindingResponse}
     */
    servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(parent, instanceId, bindingId, opts, callback) {
      opts = opts || {};
      let postBody = opts['googleCloudServicebrokerV1alpha1Binding'];
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate");
      }
      // verify the required parameter 'bindingId' is set
      if (bindingId === undefined || bindingId === null) {
        throw new Error("Missing the required parameter 'bindingId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate");
      }

      let pathParams = {
        'parent': parent,
        'instanceId': instanceId,
        'binding_id': bindingId
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'acceptsIncomplete': opts['acceptsIncomplete']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1CreateBindingResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/v2/service_instances/{instanceId}/service_bindings/{binding_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1GetBindingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * GetBinding returns the binding information.
     * @param {String} parent Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
     * @param {String} instanceId Instance id to which the binding is bound.
     * @param {String} bindingId The binding id.
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [planId] Plan id.
     * @param {String} [serviceId] Service id.
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1GetBindingResponse}
     */
    servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet(parent, instanceId, bindingId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet");
      }
      // verify the required parameter 'bindingId' is set
      if (bindingId === undefined || bindingId === null) {
        throw new Error("Missing the required parameter 'bindingId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet");
      }

      let pathParams = {
        'parent': parent,
        'instanceId': instanceId,
        'bindingId': bindingId
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'planId': opts['planId'],
        'serviceId': opts['serviceId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1GetBindingResponse;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/v2/service_instances/{instanceId}/service_bindings/{bindingId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation operation.
     * @callback module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GoogleCloudServicebrokerV1alpha1Operation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the state of the last operation for the binding. Only last (or current) operation can be polled.
     * @param {String} parent Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
     * @param {String} instanceId The instance id that the binding is bound to.
     * @param {String} bindingId The binding id for which to return the last operation
     * @param {Object} opts Optional parameters
     * @param {String} [uploadProtocol] Upload protocol for media (e.g. \"raw\", \"multipart\").
     * @param {String} [quotaUser] Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     * @param {Boolean} [prettyPrint = true)] Returns response with indentations and line breaks.
     * @param {String} [uploadType] Legacy upload protocol for media (e.g. \"media\", \"multipart\").
     * @param {String} [fields] Selector specifying which fields to include in a partial response.
     * @param {String} [callback] JSONP
     * @param {String} [oauthToken] OAuth 2.0 token for the current user.
     * @param {module:model/String} [xgafv] V1 error format.
     * @param {module:model/String} [alt = 'json')] Data format for response.
     * @param {String} [key] API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * @param {String} [accessToken] OAuth access token.
     * @param {String} [operation] If `operation` was returned during mutation operation, this field must be populated with the provided value.
     * @param {String} [planId] Plan id.
     * @param {String} [serviceId] Service id.
     * @param {module:api/ProjectsApi~servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GoogleCloudServicebrokerV1alpha1Operation}
     */
    servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation(parent, instanceId, bindingId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'parent' is set
      if (parent === undefined || parent === null) {
        throw new Error("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation");
      }
      // verify the required parameter 'instanceId' is set
      if (instanceId === undefined || instanceId === null) {
        throw new Error("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation");
      }
      // verify the required parameter 'bindingId' is set
      if (bindingId === undefined || bindingId === null) {
        throw new Error("Missing the required parameter 'bindingId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation");
      }

      let pathParams = {
        'parent': parent,
        'instanceId': instanceId,
        'bindingId': bindingId
      };
      let queryParams = {
        'upload_protocol': opts['uploadProtocol'],
        'quotaUser': opts['quotaUser'],
        'prettyPrint': opts['prettyPrint'],
        'uploadType': opts['uploadType'],
        'fields': opts['fields'],
        'callback': opts['callback'],
        'oauth_token': opts['oauthToken'],
        '$.xgafv': opts['xgafv'],
        'alt': opts['alt'],
        'key': opts['key'],
        'access_token': opts['accessToken'],
        'operation': opts['operation'],
        'planId': opts['planId'],
        'serviceId': opts['serviceId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Oauth2c', 'Oauth2'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = GoogleCloudServicebrokerV1alpha1Operation;
      return this.apiClient.callApi(
        '/v1alpha1/{parent}/v2/service_instances/{instanceId}/service_bindings/{bindingId}/last_operation', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
