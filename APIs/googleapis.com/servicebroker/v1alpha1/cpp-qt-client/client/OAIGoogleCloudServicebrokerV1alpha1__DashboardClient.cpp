/**
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudServicebrokerV1alpha1__DashboardClient.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::OAIGoogleCloudServicebrokerV1alpha1__DashboardClient(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::OAIGoogleCloudServicebrokerV1alpha1__DashboardClient() {
    this->initializeModel();
}

OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::~OAIGoogleCloudServicebrokerV1alpha1__DashboardClient() {}

void OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_redirect_uri_isSet = false;
    m_redirect_uri_isValid = false;

    m_secret_isSet = false;
    m_secret_isValid = false;
}

void OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_redirect_uri_isValid = ::OpenAPI::fromJsonValue(m_redirect_uri, json[QString("redirect_uri")]);
    m_redirect_uri_isSet = !json[QString("redirect_uri")].isNull() && m_redirect_uri_isValid;

    m_secret_isValid = ::OpenAPI::fromJsonValue(m_secret, json[QString("secret")]);
    m_secret_isSet = !json[QString("secret")].isNull() && m_secret_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_redirect_uri_isSet) {
        obj.insert(QString("redirect_uri"), ::OpenAPI::toJsonValue(m_redirect_uri));
    }
    if (m_secret_isSet) {
        obj.insert(QString("secret"), ::OpenAPI::toJsonValue(m_secret));
    }
    return obj;
}

QString OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::getId() const {
    return m_id;
}
void OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::getRedirectUri() const {
    return m_redirect_uri;
}
void OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::setRedirectUri(const QString &redirect_uri) {
    m_redirect_uri = redirect_uri;
    m_redirect_uri_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::is_redirect_uri_Set() const{
    return m_redirect_uri_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::is_redirect_uri_Valid() const{
    return m_redirect_uri_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::getSecret() const {
    return m_secret;
}
void OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::setSecret(const QString &secret) {
    m_secret = secret;
    m_secret_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::is_secret_Set() const{
    return m_secret_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::is_secret_Valid() const{
    return m_secret_isValid;
}

bool OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secret_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudServicebrokerV1alpha1__DashboardClient::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
