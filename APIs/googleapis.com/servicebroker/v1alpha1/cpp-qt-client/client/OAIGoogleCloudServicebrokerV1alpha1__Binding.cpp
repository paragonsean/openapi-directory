/**
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudServicebrokerV1alpha1__Binding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudServicebrokerV1alpha1__Binding::OAIGoogleCloudServicebrokerV1alpha1__Binding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudServicebrokerV1alpha1__Binding::OAIGoogleCloudServicebrokerV1alpha1__Binding() {
    this->initializeModel();
}

OAIGoogleCloudServicebrokerV1alpha1__Binding::~OAIGoogleCloudServicebrokerV1alpha1__Binding() {}

void OAIGoogleCloudServicebrokerV1alpha1__Binding::initializeModel() {

    m_bind_resource_isSet = false;
    m_bind_resource_isValid = false;

    m_binding_id_isSet = false;
    m_binding_id_isValid = false;

    m_create_time_isSet = false;
    m_create_time_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_plan_id_isSet = false;
    m_plan_id_isValid = false;

    m_service_id_isSet = false;
    m_service_id_isValid = false;
}

void OAIGoogleCloudServicebrokerV1alpha1__Binding::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudServicebrokerV1alpha1__Binding::fromJsonObject(QJsonObject json) {

    m_bind_resource_isValid = ::OpenAPI::fromJsonValue(m_bind_resource, json[QString("bind_resource")]);
    m_bind_resource_isSet = !json[QString("bind_resource")].isNull() && m_bind_resource_isValid;

    m_binding_id_isValid = ::OpenAPI::fromJsonValue(m_binding_id, json[QString("binding_id")]);
    m_binding_id_isSet = !json[QString("binding_id")].isNull() && m_binding_id_isValid;

    m_create_time_isValid = ::OpenAPI::fromJsonValue(m_create_time, json[QString("createTime")]);
    m_create_time_isSet = !json[QString("createTime")].isNull() && m_create_time_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("parameters")]);
    m_parameters_isSet = !json[QString("parameters")].isNull() && m_parameters_isValid;

    m_plan_id_isValid = ::OpenAPI::fromJsonValue(m_plan_id, json[QString("plan_id")]);
    m_plan_id_isSet = !json[QString("plan_id")].isNull() && m_plan_id_isValid;

    m_service_id_isValid = ::OpenAPI::fromJsonValue(m_service_id, json[QString("service_id")]);
    m_service_id_isSet = !json[QString("service_id")].isNull() && m_service_id_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__Binding::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudServicebrokerV1alpha1__Binding::asJsonObject() const {
    QJsonObject obj;
    if (m_bind_resource.size() > 0) {
        obj.insert(QString("bind_resource"), ::OpenAPI::toJsonValue(m_bind_resource));
    }
    if (m_binding_id_isSet) {
        obj.insert(QString("binding_id"), ::OpenAPI::toJsonValue(m_binding_id));
    }
    if (m_create_time_isSet) {
        obj.insert(QString("createTime"), ::OpenAPI::toJsonValue(m_create_time));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_plan_id_isSet) {
        obj.insert(QString("plan_id"), ::OpenAPI::toJsonValue(m_plan_id));
    }
    if (m_service_id_isSet) {
        obj.insert(QString("service_id"), ::OpenAPI::toJsonValue(m_service_id));
    }
    return obj;
}

QMap<QString, QJsonValue> OAIGoogleCloudServicebrokerV1alpha1__Binding::getBindResource() const {
    return m_bind_resource;
}
void OAIGoogleCloudServicebrokerV1alpha1__Binding::setBindResource(const QMap<QString, QJsonValue> &bind_resource) {
    m_bind_resource = bind_resource;
    m_bind_resource_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_bind_resource_Set() const{
    return m_bind_resource_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_bind_resource_Valid() const{
    return m_bind_resource_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__Binding::getBindingId() const {
    return m_binding_id;
}
void OAIGoogleCloudServicebrokerV1alpha1__Binding::setBindingId(const QString &binding_id) {
    m_binding_id = binding_id;
    m_binding_id_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_binding_id_Set() const{
    return m_binding_id_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_binding_id_Valid() const{
    return m_binding_id_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__Binding::getCreateTime() const {
    return m_create_time;
}
void OAIGoogleCloudServicebrokerV1alpha1__Binding::setCreateTime(const QString &create_time) {
    m_create_time = create_time;
    m_create_time_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_create_time_Set() const{
    return m_create_time_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_create_time_Valid() const{
    return m_create_time_isValid;
}

QMap<QString, QJsonValue> OAIGoogleCloudServicebrokerV1alpha1__Binding::getParameters() const {
    return m_parameters;
}
void OAIGoogleCloudServicebrokerV1alpha1__Binding::setParameters(const QMap<QString, QJsonValue> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__Binding::getPlanId() const {
    return m_plan_id;
}
void OAIGoogleCloudServicebrokerV1alpha1__Binding::setPlanId(const QString &plan_id) {
    m_plan_id = plan_id;
    m_plan_id_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_plan_id_Set() const{
    return m_plan_id_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_plan_id_Valid() const{
    return m_plan_id_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__Binding::getServiceId() const {
    return m_service_id;
}
void OAIGoogleCloudServicebrokerV1alpha1__Binding::setServiceId(const QString &service_id) {
    m_service_id = service_id;
    m_service_id_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_service_id_Set() const{
    return m_service_id_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::is_service_id_Valid() const{
    return m_service_id_isValid;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bind_resource.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_binding_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_plan_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudServicebrokerV1alpha1__Binding::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
