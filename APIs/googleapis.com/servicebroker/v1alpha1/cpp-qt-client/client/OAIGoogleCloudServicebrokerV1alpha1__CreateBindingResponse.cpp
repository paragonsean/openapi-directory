/**
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1alpha1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse() {
    this->initializeModel();
}

OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::~OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse() {}

void OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::initializeModel() {

    m_credentials_isSet = false;
    m_credentials_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_route_service_url_isSet = false;
    m_route_service_url_isValid = false;

    m_syslog_drain_url_isSet = false;
    m_syslog_drain_url_isValid = false;

    m_volume_mounts_isSet = false;
    m_volume_mounts_isValid = false;
}

void OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::fromJsonObject(QJsonObject json) {

    m_credentials_isValid = ::OpenAPI::fromJsonValue(m_credentials, json[QString("credentials")]);
    m_credentials_isSet = !json[QString("credentials")].isNull() && m_credentials_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_route_service_url_isValid = ::OpenAPI::fromJsonValue(m_route_service_url, json[QString("route_service_url")]);
    m_route_service_url_isSet = !json[QString("route_service_url")].isNull() && m_route_service_url_isValid;

    m_syslog_drain_url_isValid = ::OpenAPI::fromJsonValue(m_syslog_drain_url, json[QString("syslog_drain_url")]);
    m_syslog_drain_url_isSet = !json[QString("syslog_drain_url")].isNull() && m_syslog_drain_url_isValid;

    if(json["volume_mounts"].isArray()){
        auto arr = json["volume_mounts"].toArray();
        m_volume_mounts_isValid = true;
        if(arr.count() > 0) {
            for (const QJsonValue jval : arr) {
                QMap<QString, QJsonValue> item;
                m_volume_mounts_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_volume_mounts_isSet = !jval.isNull() && m_volume_mounts_isValid;
                m_volume_mounts.push_back(item);
            }
        }
    }
}

QString OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_credentials.size() > 0) {
        obj.insert(QString("credentials"), ::OpenAPI::toJsonValue(m_credentials));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_route_service_url_isSet) {
        obj.insert(QString("route_service_url"), ::OpenAPI::toJsonValue(m_route_service_url));
    }
    if (m_syslog_drain_url_isSet) {
        obj.insert(QString("syslog_drain_url"), ::OpenAPI::toJsonValue(m_syslog_drain_url));
    }
    if (m_volume_mounts.size() > 0) {
        
        obj.insert(QString("volume_mounts"), toJsonValue(m_volume_mounts));
    }
    return obj;
}

QMap<QString, QJsonValue> OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::getCredentials() const {
    return m_credentials;
}
void OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::setCredentials(const QMap<QString, QJsonValue> &credentials) {
    m_credentials = credentials;
    m_credentials_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_credentials_Set() const{
    return m_credentials_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_credentials_Valid() const{
    return m_credentials_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::getDescription() const {
    return m_description;
}
void OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::getOperation() const {
    return m_operation;
}
void OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_operation_Valid() const{
    return m_operation_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::getRouteServiceUrl() const {
    return m_route_service_url;
}
void OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::setRouteServiceUrl(const QString &route_service_url) {
    m_route_service_url = route_service_url;
    m_route_service_url_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_route_service_url_Set() const{
    return m_route_service_url_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_route_service_url_Valid() const{
    return m_route_service_url_isValid;
}

QString OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::getSyslogDrainUrl() const {
    return m_syslog_drain_url;
}
void OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::setSyslogDrainUrl(const QString &syslog_drain_url) {
    m_syslog_drain_url = syslog_drain_url;
    m_syslog_drain_url_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_syslog_drain_url_Set() const{
    return m_syslog_drain_url_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_syslog_drain_url_Valid() const{
    return m_syslog_drain_url_isValid;
}

QList<QMap<QString, QJsonValue>> OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::getVolumeMounts() const {
    return m_volume_mounts;
}
void OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::setVolumeMounts(const QList<QMap<QString, QJsonValue>> &volume_mounts) {
    m_volume_mounts = volume_mounts;
    m_volume_mounts_isSet = true;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_volume_mounts_Set() const{
    return m_volume_mounts_isSet;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::is_volume_mounts_Valid() const{
    return m_volume_mounts_isValid;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credentials.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_route_service_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_syslog_drain_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_volume_mounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleCloudServicebrokerV1alpha1__CreateBindingResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
