/*
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1Binding;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1CreateBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1GetBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1ListBindingsResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1ListCatalogResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1Operation;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1ServiceInstance;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProjectsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ProjectsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ProjectsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for servicebrokerProjectsBrokersInstancesServiceBindingsList
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersInstancesServiceBindingsListCall(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/service_bindings"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersInstancesServiceBindingsListValidateBeforeCall(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersInstancesServiceBindingsList(Async)");
        }

        return servicebrokerProjectsBrokersInstancesServiceBindingsListCall(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken, _callback);

    }

    /**
     * 
     * Lists all the bindings in the instance
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return GoogleCloudServicebrokerV1alpha1ListBindingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1ListBindingsResponse servicebrokerProjectsBrokersInstancesServiceBindingsList(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1ListBindingsResponse> localVarResp = servicebrokerProjectsBrokersInstancesServiceBindingsListWithHttpInfo(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the bindings in the instance
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1ListBindingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1ListBindingsResponse> servicebrokerProjectsBrokersInstancesServiceBindingsListWithHttpInfo(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersInstancesServiceBindingsListValidateBeforeCall(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1ListBindingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the bindings in the instance
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersInstancesServiceBindingsListAsync(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken, final ApiCallback<GoogleCloudServicebrokerV1alpha1ListBindingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersInstancesServiceBindingsListValidateBeforeCall(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1ListBindingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersServiceInstancesList
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersServiceInstancesListCall(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/service_instances"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersServiceInstancesListValidateBeforeCall(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersServiceInstancesList(Async)");
        }

        return servicebrokerProjectsBrokersServiceInstancesListCall(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken, _callback);

    }

    /**
     * 
     * Lists all the instances in the brokers This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse servicebrokerProjectsBrokersServiceInstancesList(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse> localVarResp = servicebrokerProjectsBrokersServiceInstancesListWithHttpInfo(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the instances in the brokers This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse> servicebrokerProjectsBrokersServiceInstancesListWithHttpInfo(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersServiceInstancesListValidateBeforeCall(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the instances in the brokers This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersServiceInstancesListAsync(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken, final ApiCallback<GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersServiceInstancesListValidateBeforeCall(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2CatalogList
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2CatalogListCall(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/v2/catalog"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2CatalogListValidateBeforeCall(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2CatalogList(Async)");
        }

        return servicebrokerProjectsBrokersV2CatalogListCall(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken, _callback);

    }

    /**
     * 
     * Lists all the Services registered with this broker for consumption for given service registry broker, which contains an set of services. Note, that Service producer API is separate from Broker API.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return GoogleCloudServicebrokerV1alpha1ListCatalogResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1ListCatalogResponse servicebrokerProjectsBrokersV2CatalogList(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1ListCatalogResponse> localVarResp = servicebrokerProjectsBrokersV2CatalogListWithHttpInfo(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the Services registered with this broker for consumption for given service registry broker, which contains an set of services. Note, that Service producer API is separate from Broker API.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1ListCatalogResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1ListCatalogResponse> servicebrokerProjectsBrokersV2CatalogListWithHttpInfo(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2CatalogListValidateBeforeCall(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1ListCatalogResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the Services registered with this broker for consumption for given service registry broker, which contains an set of services. Note, that Service producer API is separate from Broker API.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2CatalogListAsync(String parent, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Integer pageSize, String pageToken, final ApiCallback<GoogleCloudServicebrokerV1alpha1ListCatalogResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2CatalogListValidateBeforeCall(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1ListCatalogResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesCreate
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete Value indicating that API client supports asynchronous operations. If Broker cannot execute the request synchronously HTTP 422 code will be returned to HTTP clients along with FAILED_PRECONDITION error. If true and broker will execute request asynchronously 202 HTTP code will be returned. This broker always requires this to be true as all mutator operations are asynchronous. (optional)
     * @param googleCloudServicebrokerV1alpha1ServiceInstance  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesCreateCall(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = googleCloudServicebrokerV1alpha1ServiceInstance;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/v2/service_instances/{instance_id}"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()))
            .replace("{" + "instance_id" + "}", localVarApiClient.escapeString(instanceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (acceptsIncomplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("acceptsIncomplete", acceptsIncomplete));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesCreateValidateBeforeCall(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesCreate(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesCreate(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesCreateCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance, _callback);

    }

    /**
     * 
     * Provisions a service instance. If &#x60;request.accepts_incomplete&#x60; is false and Broker cannot execute request synchronously HTTP 422 error will be returned along with FAILED_PRECONDITION status. If &#x60;request.accepts_incomplete&#x60; is true and the Broker decides to execute resource asynchronously then HTTP 202 response code will be returned and a valid polling operation in the response will be included. If Broker executes the request synchronously and it succeeds HTTP 201 response will be furnished. If identical instance exists, then HTTP 200 response will be returned. If an instance with identical ID but mismatching parameters exists, then HTTP 409 status code will be returned.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete Value indicating that API client supports asynchronous operations. If Broker cannot execute the request synchronously HTTP 422 code will be returned to HTTP clients along with FAILED_PRECONDITION error. If true and broker will execute request asynchronously 202 HTTP code will be returned. This broker always requires this to be true as all mutator operations are asynchronous. (optional)
     * @param googleCloudServicebrokerV1alpha1ServiceInstance  (optional)
     * @return GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse servicebrokerProjectsBrokersV2ServiceInstancesCreate(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesCreateWithHttpInfo(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance);
        return localVarResp.getData();
    }

    /**
     * 
     * Provisions a service instance. If &#x60;request.accepts_incomplete&#x60; is false and Broker cannot execute request synchronously HTTP 422 error will be returned along with FAILED_PRECONDITION status. If &#x60;request.accepts_incomplete&#x60; is true and the Broker decides to execute resource asynchronously then HTTP 202 response code will be returned and a valid polling operation in the response will be included. If Broker executes the request synchronously and it succeeds HTTP 201 response will be furnished. If identical instance exists, then HTTP 200 response will be returned. If an instance with identical ID but mismatching parameters exists, then HTTP 409 status code will be returned.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete Value indicating that API client supports asynchronous operations. If Broker cannot execute the request synchronously HTTP 422 code will be returned to HTTP clients along with FAILED_PRECONDITION error. If true and broker will execute request asynchronously 202 HTTP code will be returned. This broker always requires this to be true as all mutator operations are asynchronous. (optional)
     * @param googleCloudServicebrokerV1alpha1ServiceInstance  (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse> servicebrokerProjectsBrokersV2ServiceInstancesCreateWithHttpInfo(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesCreateValidateBeforeCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Provisions a service instance. If &#x60;request.accepts_incomplete&#x60; is false and Broker cannot execute request synchronously HTTP 422 error will be returned along with FAILED_PRECONDITION status. If &#x60;request.accepts_incomplete&#x60; is true and the Broker decides to execute resource asynchronously then HTTP 202 response code will be returned and a valid polling operation in the response will be included. If Broker executes the request synchronously and it succeeds HTTP 201 response will be furnished. If identical instance exists, then HTTP 200 response will be returned. If an instance with identical ID but mismatching parameters exists, then HTTP 409 status code will be returned.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete Value indicating that API client supports asynchronous operations. If Broker cannot execute the request synchronously HTTP 422 code will be returned to HTTP clients along with FAILED_PRECONDITION error. If true and broker will execute request asynchronously 202 HTTP code will be returned. This broker always requires this to be true as all mutator operations are asynchronous. (optional)
     * @param googleCloudServicebrokerV1alpha1ServiceInstance  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesCreateAsync(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance, final ApiCallback<GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesCreateValidateBeforeCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesDelete
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id to deprovision. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param planId The plan id of the service instance. (optional)
     * @param serviceId The service id of the service instance. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesDeleteCall(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/v2/service_instances/{instanceId}"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (acceptsIncomplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("acceptsIncomplete", acceptsIncomplete));
        }

        if (planId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("planId", planId));
        }

        if (serviceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("serviceId", serviceId));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesDeleteValidateBeforeCall(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesDelete(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesDelete(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesDeleteCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, planId, serviceId, _callback);

    }

    /**
     * 
     * Deprovisions a service instance. For synchronous/asynchronous request details see CreateServiceInstance method. If service instance does not exist HTTP 410 status will be returned.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id to deprovision. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param planId The plan id of the service instance. (optional)
     * @param serviceId The service id of the service instance. (optional)
     * @return GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse servicebrokerProjectsBrokersV2ServiceInstancesDelete(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, String planId, String serviceId) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesDeleteWithHttpInfo(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, planId, serviceId);
        return localVarResp.getData();
    }

    /**
     * 
     * Deprovisions a service instance. For synchronous/asynchronous request details see CreateServiceInstance method. If service instance does not exist HTTP 410 status will be returned.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id to deprovision. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param planId The plan id of the service instance. (optional)
     * @param serviceId The service id of the service instance. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse> servicebrokerProjectsBrokersV2ServiceInstancesDeleteWithHttpInfo(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, String planId, String serviceId) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesDeleteValidateBeforeCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, planId, serviceId, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Deprovisions a service instance. For synchronous/asynchronous request details see CreateServiceInstance method. If service instance does not exist HTTP 410 status will be returned.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id to deprovision. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param planId The plan id of the service instance. (optional)
     * @param serviceId The service id of the service instance. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesDeleteAsync(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, String planId, String serviceId, final ApiCallback<GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesDeleteValidateBeforeCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, planId, serviceId, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesGet
     * @param name The resource name of the instance to return. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesGetCall(String name, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1alpha1/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesGetValidateBeforeCall(String name, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling servicebrokerProjectsBrokersV2ServiceInstancesGet(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesGetCall(name, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, _callback);

    }

    /**
     * 
     * Gets the given service instance from the system. This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param name The resource name of the instance to return. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @return GoogleCloudServicebrokerV1alpha1ServiceInstance
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1ServiceInstance servicebrokerProjectsBrokersV2ServiceInstancesGet(String name, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1ServiceInstance> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesGetWithHttpInfo(name, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets the given service instance from the system. This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param name The resource name of the instance to return. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1ServiceInstance&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1ServiceInstance> servicebrokerProjectsBrokersV2ServiceInstancesGetWithHttpInfo(String name, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesGetValidateBeforeCall(name, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1ServiceInstance>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets the given service instance from the system. This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param name The resource name of the instance to return. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesGetAsync(String name, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, final ApiCallback<GoogleCloudServicebrokerV1alpha1ServiceInstance> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesGetValidateBeforeCall(name, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1ServiceInstance>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperation
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id for which to return the last operation status. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationCall(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/v2/service_instances/{instanceId}/last_operation"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (operation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("operation", operation));
        }

        if (planId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("planId", planId));
        }

        if (serviceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("serviceId", serviceId));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationValidateBeforeCall(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperation(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperation(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId, _callback);

    }

    /**
     * 
     * Returns the state of the last operation for the service instance. Only last (or current) operation can be polled.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id for which to return the last operation status. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return GoogleCloudServicebrokerV1alpha1Operation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1Operation servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperation(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1Operation> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationWithHttpInfo(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns the state of the last operation for the service instance. Only last (or current) operation can be polled.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id for which to return the last operation status. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1Operation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1Operation> servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationWithHttpInfo(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationValidateBeforeCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1Operation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns the state of the last operation for the service instance. Only last (or current) operation can be polled.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id for which to return the last operation status. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationAsync(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId, final ApiCallback<GoogleCloudServicebrokerV1alpha1Operation> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationValidateBeforeCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1Operation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesPatch
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1alpha1ServiceInstance  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesPatchCall(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = googleCloudServicebrokerV1alpha1ServiceInstance;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/v2/service_instances/{instance_id}"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()))
            .replace("{" + "instance_id" + "}", localVarApiClient.escapeString(instanceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (acceptsIncomplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("acceptsIncomplete", acceptsIncomplete));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesPatchValidateBeforeCall(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesPatch(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesPatch(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesPatchCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance, _callback);

    }

    /**
     * 
     * Updates an existing service instance. See CreateServiceInstance for possible response codes.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1alpha1ServiceInstance  (optional)
     * @return GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse servicebrokerProjectsBrokersV2ServiceInstancesPatch(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesPatchWithHttpInfo(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates an existing service instance. See CreateServiceInstance for possible response codes.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1alpha1ServiceInstance  (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse> servicebrokerProjectsBrokersV2ServiceInstancesPatchWithHttpInfo(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesPatchValidateBeforeCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates an existing service instance. See CreateServiceInstance for possible response codes.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1alpha1ServiceInstance  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesPatchAsync(String parent, String instanceId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance, final ApiCallback<GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesPatchValidateBeforeCall(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate
     * @param parent The GCP container. Must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The service instance to which to bind. (required)
     * @param bindingId The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1alpha1Binding  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateCall(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1Binding googleCloudServicebrokerV1alpha1Binding, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = googleCloudServicebrokerV1alpha1Binding;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/v2/service_instances/{instanceId}/service_bindings/{binding_id}"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "binding_id" + "}", localVarApiClient.escapeString(bindingId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (acceptsIncomplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("acceptsIncomplete", acceptsIncomplete));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateValidateBeforeCall(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1Binding googleCloudServicebrokerV1alpha1Binding, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(Async)");
        }

        // verify the required parameter 'bindingId' is set
        if (bindingId == null) {
            throw new ApiException("Missing the required parameter 'bindingId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateCall(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1Binding, _callback);

    }

    /**
     * 
     * CreateBinding generates a service binding to an existing service instance. See ProviServiceInstance for async operation details.
     * @param parent The GCP container. Must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The service instance to which to bind. (required)
     * @param bindingId The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1alpha1Binding  (optional)
     * @return GoogleCloudServicebrokerV1alpha1CreateBindingResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1CreateBindingResponse servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1Binding googleCloudServicebrokerV1alpha1Binding) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1CreateBindingResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateWithHttpInfo(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1Binding);
        return localVarResp.getData();
    }

    /**
     * 
     * CreateBinding generates a service binding to an existing service instance. See ProviServiceInstance for async operation details.
     * @param parent The GCP container. Must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The service instance to which to bind. (required)
     * @param bindingId The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1alpha1Binding  (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1CreateBindingResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1CreateBindingResponse> servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateWithHttpInfo(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1Binding googleCloudServicebrokerV1alpha1Binding) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateValidateBeforeCall(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1Binding, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1CreateBindingResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * CreateBinding generates a service binding to an existing service instance. See ProviServiceInstance for async operation details.
     * @param parent The GCP container. Must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The service instance to which to bind. (required)
     * @param bindingId The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1alpha1Binding  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateAsync(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1alpha1Binding googleCloudServicebrokerV1alpha1Binding, final ApiCallback<GoogleCloudServicebrokerV1alpha1CreateBindingResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateValidateBeforeCall(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1Binding, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1CreateBindingResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId Instance id to which the binding is bound. (required)
     * @param bindingId The binding id. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetCall(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/v2/service_instances/{instanceId}/service_bindings/{bindingId}"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "bindingId" + "}", localVarApiClient.escapeString(bindingId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (planId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("planId", planId));
        }

        if (serviceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("serviceId", serviceId));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetValidateBeforeCall(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet(Async)");
        }

        // verify the required parameter 'bindingId' is set
        if (bindingId == null) {
            throw new ApiException("Missing the required parameter 'bindingId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetCall(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, planId, serviceId, _callback);

    }

    /**
     * 
     * GetBinding returns the binding information.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId Instance id to which the binding is bound. (required)
     * @param bindingId The binding id. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return GoogleCloudServicebrokerV1alpha1GetBindingResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1GetBindingResponse servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String planId, String serviceId) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1GetBindingResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetWithHttpInfo(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, planId, serviceId);
        return localVarResp.getData();
    }

    /**
     * 
     * GetBinding returns the binding information.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId Instance id to which the binding is bound. (required)
     * @param bindingId The binding id. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1GetBindingResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1GetBindingResponse> servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetWithHttpInfo(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String planId, String serviceId) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetValidateBeforeCall(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, planId, serviceId, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1GetBindingResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * GetBinding returns the binding information.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId Instance id to which the binding is bound. (required)
     * @param bindingId The binding id. (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetAsync(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String planId, String serviceId, final ApiCallback<GoogleCloudServicebrokerV1alpha1GetBindingResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetValidateBeforeCall(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, planId, serviceId, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1GetBindingResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id that the binding is bound to. (required)
     * @param bindingId The binding id for which to return the last operation (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationCall(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1alpha1/{parent}/v2/service_instances/{instanceId}/service_bindings/{bindingId}/last_operation"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()))
            .replace("{" + "instanceId" + "}", localVarApiClient.escapeString(instanceId.toString()))
            .replace("{" + "bindingId" + "}", localVarApiClient.escapeString(bindingId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (operation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("operation", operation));
        }

        if (planId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("planId", planId));
        }

        if (serviceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("serviceId", serviceId));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationValidateBeforeCall(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation(Async)");
        }

        // verify the required parameter 'bindingId' is set
        if (bindingId == null) {
            throw new ApiException("Missing the required parameter 'bindingId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationCall(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId, _callback);

    }

    /**
     * 
     * Returns the state of the last operation for the binding. Only last (or current) operation can be polled.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id that the binding is bound to. (required)
     * @param bindingId The binding id for which to return the last operation (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return GoogleCloudServicebrokerV1alpha1Operation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1alpha1Operation servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1alpha1Operation> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationWithHttpInfo(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns the state of the last operation for the binding. Only last (or current) operation can be polled.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id that the binding is bound to. (required)
     * @param bindingId The binding id for which to return the last operation (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1alpha1Operation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1alpha1Operation> servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationWithHttpInfo(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationValidateBeforeCall(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1Operation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns the state of the last operation for the binding. Only last (or current) operation can be polled.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The instance id that the binding is bound to. (required)
     * @param bindingId The binding id for which to return the last operation (required)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param accessToken OAuth access token. (optional)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationAsync(String parent, String instanceId, String bindingId, String uploadProtocol, String quotaUser, Boolean prettyPrint, String uploadType, String fields, String paramCallback, String oauthToken, String $xgafv, String alt, String key, String accessToken, String operation, String planId, String serviceId, final ApiCallback<GoogleCloudServicebrokerV1alpha1Operation> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationValidateBeforeCall(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1alpha1Operation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
