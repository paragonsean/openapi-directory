/*
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1alpha1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1Binding;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1CreateBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1GetBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1ListBindingsResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1ListCatalogResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1Operation;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1ServiceInstance;
import org.openapitools.client.model.GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * Lists all the bindings in the instance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersInstancesServiceBindingsListTest() throws ApiException {
        String parent = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudServicebrokerV1alpha1ListBindingsResponse response = api.servicebrokerProjectsBrokersInstancesServiceBindingsList(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists all the instances in the brokers This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersServiceInstancesListTest() throws ApiException {
        String parent = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudServicebrokerV1alpha1ListServiceInstancesResponse response = api.servicebrokerProjectsBrokersServiceInstancesList(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists all the Services registered with this broker for consumption for given service registry broker, which contains an set of services. Note, that Service producer API is separate from Broker API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2CatalogListTest() throws ApiException {
        String parent = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudServicebrokerV1alpha1ListCatalogResponse response = api.servicebrokerProjectsBrokersV2CatalogList(parent, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Provisions a service instance. If &#x60;request.accepts_incomplete&#x60; is false and Broker cannot execute request synchronously HTTP 422 error will be returned along with FAILED_PRECONDITION status. If &#x60;request.accepts_incomplete&#x60; is true and the Broker decides to execute resource asynchronously then HTTP 202 response code will be returned and a valid polling operation in the response will be included. If Broker executes the request synchronously and it succeeds HTTP 201 response will be furnished. If identical instance exists, then HTTP 200 response will be returned. If an instance with identical ID but mismatching parameters exists, then HTTP 409 status code will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesCreateTest() throws ApiException {
        String parent = null;
        String instanceId = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        Boolean acceptsIncomplete = null;
        GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance = null;
        GoogleCloudServicebrokerV1alpha1CreateServiceInstanceResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesCreate(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance);
        // TODO: test validations
    }

    /**
     * Deprovisions a service instance. For synchronous/asynchronous request details see CreateServiceInstance method. If service instance does not exist HTTP 410 status will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesDeleteTest() throws ApiException {
        String parent = null;
        String instanceId = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        Boolean acceptsIncomplete = null;
        String planId = null;
        String serviceId = null;
        GoogleCloudServicebrokerV1alpha1DeleteServiceInstanceResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesDelete(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, planId, serviceId);
        // TODO: test validations
    }

    /**
     * Gets the given service instance from the system. This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesGetTest() throws ApiException {
        String name = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        GoogleCloudServicebrokerV1alpha1ServiceInstance response = api.servicebrokerProjectsBrokersV2ServiceInstancesGet(name, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken);
        // TODO: test validations
    }

    /**
     * Returns the state of the last operation for the service instance. Only last (or current) operation can be polled.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperationTest() throws ApiException {
        String parent = null;
        String instanceId = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        String operation = null;
        String planId = null;
        String serviceId = null;
        GoogleCloudServicebrokerV1alpha1Operation response = api.servicebrokerProjectsBrokersV2ServiceInstancesGetLastOperation(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId);
        // TODO: test validations
    }

    /**
     * Updates an existing service instance. See CreateServiceInstance for possible response codes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesPatchTest() throws ApiException {
        String parent = null;
        String instanceId = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        Boolean acceptsIncomplete = null;
        GoogleCloudServicebrokerV1alpha1ServiceInstance googleCloudServicebrokerV1alpha1ServiceInstance = null;
        GoogleCloudServicebrokerV1alpha1UpdateServiceInstanceResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesPatch(parent, instanceId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1ServiceInstance);
        // TODO: test validations
    }

    /**
     * CreateBinding generates a service binding to an existing service instance. See ProviServiceInstance for async operation details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateTest() throws ApiException {
        String parent = null;
        String instanceId = null;
        String bindingId = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        Boolean acceptsIncomplete = null;
        GoogleCloudServicebrokerV1alpha1Binding googleCloudServicebrokerV1alpha1Binding = null;
        GoogleCloudServicebrokerV1alpha1CreateBindingResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, acceptsIncomplete, googleCloudServicebrokerV1alpha1Binding);
        // TODO: test validations
    }

    /**
     * GetBinding returns the binding information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetTest() throws ApiException {
        String parent = null;
        String instanceId = null;
        String bindingId = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        String planId = null;
        String serviceId = null;
        GoogleCloudServicebrokerV1alpha1GetBindingResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, planId, serviceId);
        // TODO: test validations
    }

    /**
     * Returns the state of the last operation for the binding. Only last (or current) operation can be polled.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationTest() throws ApiException {
        String parent = null;
        String instanceId = null;
        String bindingId = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String uploadType = null;
        String fields = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        String operation = null;
        String planId = null;
        String serviceId = null;
        GoogleCloudServicebrokerV1alpha1Operation response = api.servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation(parent, instanceId, bindingId, uploadProtocol, quotaUser, prettyPrint, uploadType, fields, paramCallback, oauthToken, $xgafv, alt, key, accessToken, operation, planId, serviceId);
        // TODO: test validations
    }

}
