openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
  description: |
    The Google Cloud Platform Service Broker API provides Google hosted
    implementation of the Open Service Broker API
    (https://www.openservicebrokerapi.org/).
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Service Broker
  version: v1alpha1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.7.31
    format: google
    url: https://servicebroker.googleapis.com/$discovery/rest?version=v1alpha1
    version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: servicebroker
externalDocs:
  url: https://cloud.google.com/kubernetes-engine/docs/concepts/add-on/service-broker
servers:
- url: https://servicebroker.googleapis.com/
tags:
- name: v1alpha1
- name: projects
paths:
  /v1alpha1/{name}:
    get:
      description: |-
        Gets the given service instance from the system.
        This API is an extension and not part of the OSB spec.
        Hence the path is a standard Google API URL.
      operationId: servicebroker_projects_brokers_v2_service_instances_get
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: The resource name of the instance to return.
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__ServiceInstance'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1alpha1/{parent}/service_bindings:
    get:
      description: Lists all the bindings in the instance
      operationId: servicebroker_projects_brokers_instances_service_bindings_list
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Parent must match
          `projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]`.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: |-
          Specifies the number of results to return per page. If there are fewer
          elements than the specified number, returns all elements.
          Optional. If unset or 0, all the results will be returned.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          Specifies a page token to use. Set `pageToken` to a `nextPageToken`
          returned by a previous list request to get the next page of results.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__ListBindingsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1alpha1/{parent}/service_instances:
    get:
      description: |-
        Lists all the instances in the brokers
        This API is an extension and not part of the OSB spec.
        Hence the path is a standard Google API URL.
      operationId: servicebroker_projects_brokers_service_instances_list
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: "Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: |-
          Specifies the number of results to return per page. If there are fewer
          elements than the specified number, returns all elements.
          Optional. If unset or 0, all the results will be returned.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          Specifies a page token to use. Set `pageToken` to a `nextPageToken`
          returned by a previous list request to get the next page of results.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__ListServiceInstancesResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1alpha1/{parent}/v2/catalog:
    get:
      description: |-
        Lists all the Services registered with this broker for consumption for
        given service registry broker, which contains an set of services.
        Note, that Service producer API is separate from Broker API.
      operationId: servicebroker_projects_brokers_v2_catalog_list
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: "Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: |-
          Specifies the number of results to return per page. If there are fewer
          elements than the specified number, returns all elements.
          Optional. If unset or 0, all the results will be returned.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      - description: |-
          Specifies a page token to use. Set `pageToken` to a `nextPageToken`
          returned by a previous list request to get the next page of results.
        explode: true
        in: query
        name: pageToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__ListCatalogResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1alpha1/{parent}/v2/service_instances/{instanceId}:
    delete:
      description: |-
        Deprovisions a service instance.
        For synchronous/asynchronous request details see CreateServiceInstance
        method.
        If service instance does not exist HTTP 410 status will be returned.
      operationId: servicebroker_projects_brokers_v2_service_instances_delete
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: "Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: The instance id to deprovision.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: See CreateServiceInstanceRequest for details.
        explode: true
        in: query
        name: acceptsIncomplete
        required: false
        schema:
          type: boolean
        style: form
      - description: The plan id of the service instance.
        explode: true
        in: query
        name: planId
        required: false
        schema:
          type: string
        style: form
      - description: The service id of the service instance.
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__DeleteServiceInstanceResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1alpha1/{parent}/v2/service_instances/{instanceId}/last_operation:
    get:
      description: |-
        Returns the state of the last operation for the service instance.
        Only last (or current) operation can be polled.
      operationId: servicebroker_projects_brokers_v2_service_instances_get_last_operation
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: "Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: The instance id for which to return the last operation status.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: |-
          If `operation` was returned during mutation operation, this field must be
          populated with the provided value.
        explode: true
        in: query
        name: operation
        required: false
        schema:
          type: string
        style: form
      - description: Plan id.
        explode: true
        in: query
        name: planId
        required: false
        schema:
          type: string
        style: form
      - description: Service id.
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1alpha1/{parent}/v2/service_instances/{instanceId}/service_bindings/{bindingId}/last_operation:
    get:
      description: |-
        Returns the state of the last operation for the binding.
        Only last (or current) operation can be polled.
      operationId: servicebroker_projects_brokers_v2_service_instances_service_bindings_get_last_operation
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: "Parent must match `projects/[PROJECT_ID]/brokers/[BROKER_ID]`."
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: The instance id that the binding is bound to.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: The binding id for which to return the last operation
        explode: false
        in: path
        name: bindingId
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: |-
          If `operation` was returned during mutation operation, this field must be
          populated with the provided value.
        explode: true
        in: query
        name: operation
        required: false
        schema:
          type: string
        style: form
      - description: Plan id.
        explode: true
        in: query
        name: planId
        required: false
        schema:
          type: string
        style: form
      - description: Service id.
        explode: true
        in: query
        name: serviceId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__Operation'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
  /v1alpha1/{parent}/v2/service_instances/{instanceId}/service_bindings/{binding_id}:
    put:
      description: |-
        CreateBinding generates a service binding to an existing service instance.
        See ProviServiceInstance for async operation details.
      operationId: servicebroker_projects_brokers_v2_service_instances_service_bindings_create
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The GCP container.
          Must match
          `projects/[PROJECT_ID]/brokers/[BROKER_ID]`.
        explode: false
        in: path
        name: parent
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: The service instance to which to bind.
        explode: false
        in: path
        name: instanceId
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: |-
          The id of the binding. Must be unique within GCP project.
          Maximum length is 64, GUID recommended.
          Required.
        explode: false
        in: path
        name: binding_id
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: See CreateServiceInstanceRequest for details.
        explode: true
        in: query
        name: acceptsIncomplete
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__Binding'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__CreateBindingResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - projects
      x-openapi-router-controller: openapi_server.controllers.projects_controller
      x-codegen-request-body-name: body
  /v1alpha1/{resource}:getIamPolicy:
    get:
      description: |-
        Gets the access control policy for a resource.
        Returns an empty policy if the resource exists and does not have a policy
        set.
      operationId: servicebroker_get_iam_policy
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: |-
          REQUIRED: The resource for which the policy is being requested.
          See the operation documentation for the appropriate value for this field.
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      - description: |-
          Optional. The policy format version to be returned.

          Valid values are 0, 1, and 3. Requests specifying an invalid value will be
          rejected.

          Requests for policies with any conditional bindings must specify version 3.
          Policies without any conditional bindings may specify any valid value or
          leave the field unset.
        explode: true
        in: query
        name: options.requestedPolicyVersion
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleIamV1__Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - v1alpha1
      x-openapi-router-controller: openapi_server.controllers.v1alpha1_controller
  /v1alpha1/{resource}:setIamPolicy:
    post:
      description: |-
        Sets the access control policy on the specified resource. Replaces any
        existing policy.

        Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED
      operationId: servicebroker_set_iam_policy
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: |-
          REQUIRED: The resource for which the policy is being specified.
          See the operation documentation for the appropriate value for this field.
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1__SetIamPolicyRequest'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleIamV1__Policy'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - v1alpha1
      x-openapi-router-controller: openapi_server.controllers.v1alpha1_controller
      x-codegen-request-body-name: body
  /v1alpha1/{resource}:testIamPermissions:
    post:
      description: |-
        Returns permissions that a caller has on the specified resource.
        If the resource does not exist, this will return an empty set of
        permissions, not a NOT_FOUND error.

        Note: This operation is designed to be used for building permission-aware
        UIs and command-line tools, not for authorization checking. This operation
        may "fail open" without warning.
      operationId: servicebroker_test_iam_permissions
      parameters:
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          default: json
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: |-
          REQUIRED: The resource for which the policy detail is being requested.
          See the operation documentation for the appropriate value for this field.
        explode: false
        in: path
        name: resource
        required: true
        schema:
          type: string
        style: simple
        x-reservedExpansion: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleIamV1__TestIamPermissionsRequest'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GoogleIamV1__TestIamPermissionsResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/cloud-platform
        Oauth2c:
        - https://www.googleapis.com/auth/cloud-platform
      tags:
      - v1alpha1
      x-openapi-router-controller: openapi_server.controllers.v1alpha1_controller
      x-codegen-request-body-name: body
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        default: json
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        default: true
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  requestBodies:
    GoogleCloudServicebrokerV1alpha1__ServiceInstance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__ServiceInstance'
  schemas:
    GoogleCloudServicebrokerV1alpha1__Binding:
      description: Describes the binding.
      example:
        createTime: createTime
        service_id: service_id
        bind_resource:
          key: ""
        parameters:
          key: ""
        plan_id: plan_id
        binding_id: binding_id
      properties:
        bind_resource:
          additionalProperties:
            description: Properties of the object.
          description: |-
            A JSON object that contains data for platform resources associated with
            the binding to be created.
          title: bind_resource
          type: object
        binding_id:
          description: |-
            The id of the binding. Must be unique within GCP project.
            Maximum length is 64, GUID recommended.
            Required.
          title: binding_id
          type: string
        createTime:
          description: Output only. Timestamp for when the binding was created.
          format: google-datetime
          title: createTime
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: Configuration options for the service binding.
          title: parameters
          type: object
        plan_id:
          description: |-
            The ID of the plan. See `Service` and `Plan` resources for details.
            Maximum length is 64, GUID recommended.
            Required.
          title: plan_id
          type: string
        service_id:
          description: |-
            The id of the service. Must be a valid identifier of a service
            contained in the list from a `ListServices()` call.
            Maximum length is 64, GUID recommended.
            Required.
          title: service_id
          type: string
      title: GoogleCloudServicebrokerV1alpha1__Binding
      type: object
    GoogleCloudServicebrokerV1alpha1__CreateBindingResponse:
      description: Response for the `CreateBinding()` method.
      example:
        route_service_url: route_service_url
        credentials:
          key: ""
        syslog_drain_url: syslog_drain_url
        description: description
        volume_mounts:
        - key: ""
        - key: ""
        operation: operation
      properties:
        credentials:
          additionalProperties:
            description: Properties of the object.
          description: Credentials to use the binding.
          title: credentials
          type: object
        description:
          description: |-
            Used to communicate description of the response. Usually for non-standard
            error codes.
            https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
          title: description
          type: string
        operation:
          description: |-
            If broker executes operation asynchronously, this is the operation ID that
            can be polled to check the completion status of said operation.
            This broker always executes all create/delete operations asynchronously.
          title: operation
          type: string
        route_service_url:
          description: |-
            A URL to which the platform may proxy requests for the address sent with
            bind_resource.route
          title: route_service_url
          type: string
        syslog_drain_url:
          description: From where to read system logs.
          title: syslog_drain_url
          type: string
        volume_mounts:
          description: An array of configuration for mounting volumes.
          items:
            additionalProperties:
              description: Properties of the object.
            type: object
          title: volume_mounts
          type: array
      title: GoogleCloudServicebrokerV1alpha1__CreateBindingResponse
      type: object
    GoogleCloudServicebrokerV1alpha1__CreateServiceInstanceResponse:
      description: Response for the `CreateServiceInstance()` method.
      properties:
        description:
          description: |-
            Used to communicate description of the response. Usually for non-standard
            error codes.
            https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
          type: string
        operation:
          description: |-
            If broker executes operation asynchronously, this is the operation ID that
            can be polled to check the completion status of said operation.
            This broker always will return a non-empty operation on success.
          type: string
      type: object
    GoogleCloudServicebrokerV1alpha1__DashboardClient:
      description: Message containing information required to activate Dashboard SSO
        feature.
      example:
        id: id
        redirect_uri: redirect_uri
        secret: secret
      properties:
        id:
          description: The id of the Oauth client that the dashboard will use.
          title: id
          type: string
        redirect_uri:
          description: |-
            A URI for the service dashboard.
            Validated by the OAuth token server when the dashboard requests a token.
          title: redirect_uri
          type: string
        secret:
          description: A secret for the dashboard client.
          title: secret
          type: string
      title: GoogleCloudServicebrokerV1alpha1__DashboardClient
      type: object
    GoogleCloudServicebrokerV1alpha1__DeleteBindingResponse:
      description: Response for the `DeleteBinding()` method.
      properties:
        description:
          description: |-
            Used to communicate description of the response. Usually for non-standard
            error codes.
            https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
          type: string
        operation:
          description: |-
            If broker executes operation asynchronously, this is the operation ID that
            can be polled to check the completion status of said operation.
          type: string
      type: object
    GoogleCloudServicebrokerV1alpha1__DeleteServiceInstanceResponse:
      description: Response for the `DeleteServiceInstance()` method.
      example:
        description: description
        operation: operation
      properties:
        description:
          description: |-
            Used to communicate description of the response. Usually for non-standard
            error codes.
            https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
          title: description
          type: string
        operation:
          description: |-
            If broker executes operation asynchronously, this is the operation ID that
            can be polled to check the completion status of said operation.
          title: operation
          type: string
      title: GoogleCloudServicebrokerV1alpha1__DeleteServiceInstanceResponse
      type: object
    GoogleCloudServicebrokerV1alpha1__GetBindingResponse:
      description: Response for the `GetBinding()` method.
      properties:
        credentials:
          additionalProperties:
            description: Properties of the object.
          description: Credentials to use the binding.
          type: object
        description:
          description: |-
            Used to communicate description of the response. Usually for non-standard
            error codes.
            https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
          type: string
        route_service_url:
          description: |-
            A URL to which the platform may proxy requests for the address sent with
            bind_resource.route
          type: string
        syslog_drain_url:
          description: From where to read system logs.
          type: string
        volume_mounts:
          description: An array of configuration for mounting volumes.
          items:
            additionalProperties:
              description: Properties of the object.
            type: object
          type: array
      type: object
    GoogleCloudServicebrokerV1alpha1__ListBindingsResponse:
      description: The response for the `ListBindings()` method.
      example:
        nextPageToken: nextPageToken
        bindings:
        - createTime: createTime
          service_id: service_id
          bind_resource:
            key: ""
          parameters:
            key: ""
          plan_id: plan_id
          binding_id: binding_id
        - createTime: createTime
          service_id: service_id
          bind_resource:
            key: ""
          parameters:
            key: ""
          plan_id: plan_id
          binding_id: binding_id
        description: description
      properties:
        bindings:
          description: The list of the bindings in the instance.
          items:
            $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__Binding'
          title: bindings
          type: array
        description:
          description: |-
            Used to communicate description of the response. Usually for non-standard
            error codes.
            https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
          title: description
          type: string
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.
            If the number of results is larger than `pageSize`, use the `nextPageToken`
            as a value for the query parameter `pageToken` in the next list request.
            Subsequent list requests will have their own `nextPageToken` to continue
            paging through the results
          title: nextPageToken
          type: string
      title: GoogleCloudServicebrokerV1alpha1__ListBindingsResponse
      type: object
    GoogleCloudServicebrokerV1alpha1__ListCatalogResponse:
      description: Response message for the `ListCatalog()` method.
      example:
        nextPageToken: nextPageToken
        description: description
        services:
        - bindable: true
          metadata:
            key: ""
          plan_updateable: true
          plans:
          - bindable: true
            metadata:
              key: ""
            schemas:
              key: ""
            name: name
            description: description
            id: id
            free: true
          - bindable: true
            metadata:
              key: ""
            schemas:
              key: ""
            name: name
            description: description
            id: id
            free: true
          name: name
          description: description
          id: id
          dashboard_client:
            id: id
            redirect_uri: redirect_uri
            secret: secret
          instance_retrievable: true
          binding_retrievable: true
          tags:
          - tags
          - tags
        - bindable: true
          metadata:
            key: ""
          plan_updateable: true
          plans:
          - bindable: true
            metadata:
              key: ""
            schemas:
              key: ""
            name: name
            description: description
            id: id
            free: true
          - bindable: true
            metadata:
              key: ""
            schemas:
              key: ""
            name: name
            description: description
            id: id
            free: true
          name: name
          description: description
          id: id
          dashboard_client:
            id: id
            redirect_uri: redirect_uri
            secret: secret
          instance_retrievable: true
          binding_retrievable: true
          tags:
          - tags
          - tags
      properties:
        description:
          description: |-
            Used to communicate description of the response. Usually for non-standard
            error codes.
            https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
          title: description
          type: string
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.
            If the number of results is larger than `pageSize`, use the `nextPageToken`
            as a value for the query parameter `pageToken` in the next list request.
            Subsequent list requests will have their own `nextPageToken` to continue
            paging through the results
          title: nextPageToken
          type: string
        services:
          description: The services available for the requested GCP project.
          items:
            $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__Service'
          title: services
          type: array
      title: GoogleCloudServicebrokerV1alpha1__ListCatalogResponse
      type: object
    GoogleCloudServicebrokerV1alpha1__ListServiceInstancesResponse:
      description: The response for the `ListServiceInstances()` method.
      example:
        instances:
        - instance_id: instance_id
          previous_values:
            key: ""
          createTime: createTime
          service_id: service_id
          context:
            key: ""
          deploymentName: deploymentName
          resourceName: resourceName
          organization_guid: organization_guid
          space_guid: space_guid
          parameters:
            key: ""
          plan_id: plan_id
        - instance_id: instance_id
          previous_values:
            key: ""
          createTime: createTime
          service_id: service_id
          context:
            key: ""
          deploymentName: deploymentName
          resourceName: resourceName
          organization_guid: organization_guid
          space_guid: space_guid
          parameters:
            key: ""
          plan_id: plan_id
        nextPageToken: nextPageToken
        description: description
      properties:
        description:
          description: |-
            Used to communicate description of the response. Usually for non-standard
            error codes.
            https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
          title: description
          type: string
        instances:
          description: The list of the instances in the broker.
          items:
            $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__ServiceInstance'
          title: instances
          type: array
        nextPageToken:
          description: |-
            This token allows you to get the next page of results for list requests.
            If the number of results is larger than `pageSize`, use the `nextPageToken`
            as a value for the query parameter `pageToken` in the next list request.
            Subsequent list requests will have their own `nextPageToken` to continue
            paging through the results
          title: nextPageToken
          type: string
      title: GoogleCloudServicebrokerV1alpha1__ListServiceInstancesResponse
      type: object
    GoogleCloudServicebrokerV1alpha1__Operation:
      description: "Describes a long running operation, which conforms to OpenService\
        \ API."
      example:
        description: description
        state: state
      properties:
        description:
          description: Optional description of the Operation state.
          title: description
          type: string
        state:
          description: |-
            The state of the operation.
            Valid values are: "in progress", "succeeded", and "failed".
          title: state
          type: string
      title: GoogleCloudServicebrokerV1alpha1__Operation
      type: object
    GoogleCloudServicebrokerV1alpha1__Plan:
      description: Plan message describes a Service Plan.
      example:
        bindable: true
        metadata:
          key: ""
        schemas:
          key: ""
        name: name
        description: description
        id: id
        free: true
      properties:
        bindable:
          description: |-
            Specifies whether instances of the service can be bound to applications.
            If not specified, `Service.bindable` will be presumed.
          title: bindable
          type: boolean
        description:
          description: Textual description of the plan. Optional.
          title: description
          type: string
        free:
          description: Whether the service is free.
          title: free
          type: boolean
        id:
          description: |-
            ID is a globally unique identifier used to uniquely identify the plan.
            User must make no presumption about the format of this field.
          title: id
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: |-
            A list of metadata for a service offering.
            Metadata is an arbitrary JSON object.
          title: metadata
          type: object
        name:
          description: |-
            User friendly name of the plan.
            The name must be globally unique within GCP project.
            Note, which is different from ("This must be globally unique within a
            platform marketplace").
          title: name
          type: string
        schemas:
          additionalProperties:
            description: Properties of the object.
          description: Schema definitions for service instances and bindings for the
            plan.
          title: schemas
          type: object
      title: GoogleCloudServicebrokerV1alpha1__Plan
      type: object
    GoogleCloudServicebrokerV1alpha1__Service:
      description: |-
        The resource model mostly follows the Open Service Broker API, as
        described here:
        https://github.com/openservicebrokerapi/servicebroker/blob/master/_spec.md
        Though due to Google Specifics it has additional optional fields.
      example:
        bindable: true
        metadata:
          key: ""
        plan_updateable: true
        plans:
        - bindable: true
          metadata:
            key: ""
          schemas:
            key: ""
          name: name
          description: description
          id: id
          free: true
        - bindable: true
          metadata:
            key: ""
          schemas:
            key: ""
          name: name
          description: description
          id: id
          free: true
        name: name
        description: description
        id: id
        dashboard_client:
          id: id
          redirect_uri: redirect_uri
          secret: secret
        instance_retrievable: true
        binding_retrievable: true
        tags:
        - tags
        - tags
      properties:
        bindable:
          description: |-
            Specifies whether instances of the service can be bound to applications.
            Required.
          title: bindable
          type: boolean
        binding_retrievable:
          description: Whether the service provides an endpoint to get service bindings.
          title: binding_retrievable
          type: boolean
        dashboard_client:
          $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__DashboardClient'
        description:
          description: Textual description of the service. Required.
          title: description
          type: string
        id:
          description: |-
            ID is a globally unique identifier used to uniquely identify the service.
            ID is an opaque string.
          title: id
          type: string
        instance_retrievable:
          description: Whether the service provides an endpoint to get service instances.
          title: instance_retrievable
          type: boolean
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: |-
            A list of metadata for a service offering.
            Metadata is an arbitrary JSON object.
          title: metadata
          type: object
        name:
          description: |-
            User friendly service name.
            Name must match [a-z0-9]+ regexp.
            The name must be globally unique within GCP project.
            Note, which is different from ("This must be globally unique within a
            platform marketplace").
            Required.
          title: name
          type: string
        plan_updateable:
          description: Whether the service supports upgrade/downgrade for some plans.
          title: plan_updateable
          type: boolean
        plans:
          description: |-
            A list of plans for this service.
            At least one plan is required.
          items:
            $ref: '#/components/schemas/GoogleCloudServicebrokerV1alpha1__Plan'
          title: plans
          type: array
        tags:
          description: |-
            Tags provide a flexible mechanism to expose a classification, attribute, or
            base technology of a service.
          items:
            type: string
          title: tags
          type: array
      title: GoogleCloudServicebrokerV1alpha1__Service
      type: object
    GoogleCloudServicebrokerV1alpha1__ServiceInstance:
      description: Message describing inputs to Provision and Update Service instance
        requests.
      example:
        instance_id: instance_id
        previous_values:
          key: ""
        createTime: createTime
        service_id: service_id
        context:
          key: ""
        deploymentName: deploymentName
        resourceName: resourceName
        organization_guid: organization_guid
        space_guid: space_guid
        parameters:
          key: ""
        plan_id: plan_id
      properties:
        context:
          additionalProperties:
            description: Properties of the object.
          description: |-
            Platform specific contextual information under which the service instance
            is to be provisioned. This replaces organization_guid and space_guid.
            But can also contain anything.
            Currently only used for logging context information.
          title: context
          type: object
        createTime:
          description: Output only. Timestamp for when the instance was created.
          format: google-datetime
          title: createTime
          type: string
        deploymentName:
          description: |-
            Output only. Name of the Deployment Manager deployment used for provisioning of this
            service instance.
          title: deploymentName
          type: string
        instance_id:
          description: |-
            The id of the service instance. Must be unique within GCP project.
            Maximum length is 64, GUID recommended.
            Required.
          title: instance_id
          type: string
        organization_guid:
          description: |-
            The platform GUID for the organization under which the service is to be
            provisioned.
            Required.
          title: organization_guid
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: |-
            Configuration options for the service instance.
            Parameters is JSON object serialized to string.
          title: parameters
          type: object
        plan_id:
          description: |-
            The ID of the plan. See `Service` and `Plan` resources for details.
            Maximum length is 64, GUID recommended.
            Required.
          title: plan_id
          type: string
        previous_values:
          additionalProperties:
            description: Properties of the object.
          description: |-
            Used only in UpdateServiceInstance request to optionally specify previous
            fields.
          title: previous_values
          type: object
        resourceName:
          description: |-
            Output only. The resource name of the instance, e.g.
            projects/project_id/brokers/broker_id/service_instances/instance_id
          title: resourceName
          type: string
        service_id:
          description: |-
            The id of the service. Must be a valid identifier of a service
            contained in the list from a `ListServices()` call.
            Maximum length is 64, GUID recommended.
            Required.
          title: service_id
          type: string
        space_guid:
          description: |-
            The identifier for the project space within the platform organization.
            Required.
          title: space_guid
          type: string
      title: GoogleCloudServicebrokerV1alpha1__ServiceInstance
      type: object
    GoogleCloudServicebrokerV1alpha1__UpdateServiceInstanceResponse:
      description: Response for the `UpdateServiceInstance()` method.
      properties:
        description:
          description: |-
            Used to communicate description of the response. Usually for non-standard
            error codes.
            https://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors
          type: string
        operation:
          description: |-
            If broker executes operation asynchronously, this is the operation ID that
            can be polled to check the completion status of said operation.
          type: string
      type: object
    GoogleIamV1__Binding:
      description: Associates `members` with a `role`.
      example:
        condition:
          expression: expression
          description: description
          location: location
          title: title
        role: role
        members:
        - members
        - members
      properties:
        condition:
          $ref: '#/components/schemas/GoogleType__Expr'
        members:
          description: |+
            Specifies the identities requesting access for a Cloud Platform resource.
            `members` can have the following values:

            * `allUsers`: A special identifier that represents anyone who is
               on the internet; with or without a Google account.

            * `allAuthenticatedUsers`: A special identifier that represents anyone
               who is authenticated with a Google account or a service account.

            * `user:{emailid}`: An email address that represents a specific Google
               account. For example, `alice@example.com` .


            * `serviceAccount:{emailid}`: An email address that represents a service
               account. For example, `my-other-app@appspot.gserviceaccount.com`.

            * `group:{emailid}`: An email address that represents a Google group.
               For example, `admins@example.com`.

            * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
               identifier) representing a user that has been recently deleted. For
               example, `alice@example.com?uid=123456789012345678901`. If the user is
               recovered, this value reverts to `user:{emailid}` and the recovered user
               retains the role in the binding.

            * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
               unique identifier) representing a service account that has been recently
               deleted. For example,
               `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
               If the service account is undeleted, this value reverts to
               `serviceAccount:{emailid}` and the undeleted service account retains the
               role in the binding.

            * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
               identifier) representing a Google group that has been recently
               deleted. For example, `admins@example.com?uid=123456789012345678901`. If
               the group is recovered, this value reverts to `group:{emailid}` and the
               recovered group retains the role in the binding.


            * `domain:{domain}`: The G Suite domain (primary) that represents all the    users of that domain. For example, `google.com` or `example.com`.

          items:
            type: string
          title: members
          type: array
        role:
          description: |-
            Role that is assigned to `members`.
            For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          title: role
          type: string
      title: GoogleIamV1__Binding
      type: object
    GoogleIamV1__Policy:
      description: |-
        An Identity and Access Management (IAM) policy, which specifies access
        controls for Google Cloud resources.


        A `Policy` is a collection of `bindings`. A `binding` binds one or more
        `members` to a single `role`. Members can be user accounts, service accounts,
        Google groups, and domains (such as G Suite). A `role` is a named list of
        permissions; each `role` can be an IAM predefined role or a user-created
        custom role.

        Optionally, a `binding` can specify a `condition`, which is a logical
        expression that allows access to a resource only if the expression evaluates
        to `true`. A condition can add constraints based on attributes of the
        request, the resource, or both.

        **JSON example:**

            {
              "bindings": [
                {
                  "role": "roles/resourcemanager.organizationAdmin",
                  "members": [
                    "user:mike@example.com",
                    "group:admins@example.com",
                    "domain:google.com",
                    "serviceAccount:my-project-id@appspot.gserviceaccount.com"
                  ]
                },
                {
                  "role": "roles/resourcemanager.organizationViewer",
                  "members": ["user:eve@example.com"],
                  "condition": {
                    "title": "expirable access",
                    "description": "Does not grant access after Sep 2020",
                    "expression": "request.time < timestamp('2020-10-01T00:00:00.000Z')",
                  }
                }
              ],
              "etag": "BwWWja0YfJA=",
              "version": 3
            }

        **YAML example:**

            bindings:
            - members:
              - user:mike@example.com
              - group:admins@example.com
              - domain:google.com
              - serviceAccount:my-project-id@appspot.gserviceaccount.com
              role: roles/resourcemanager.organizationAdmin
            - members:
              - user:eve@example.com
              role: roles/resourcemanager.organizationViewer
              condition:
                title: expirable access
                description: Does not grant access after Sep 2020
                expression: request.time < timestamp('2020-10-01T00:00:00.000Z')
            - etag: BwWWja0YfJA=
            - version: 3

        For a description of IAM and its features, see the
        [IAM documentation](https://cloud.google.com/iam/docs/).
      example:
        bindings:
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        - condition:
            expression: expression
            description: description
            location: location
            title: title
          role: role
          members:
          - members
          - members
        etag: etag
        version: 0
      properties:
        bindings:
          description: |-
            Associates a list of `members` to a `role`. Optionally, may specify a
            `condition` that determines how and when the `bindings` are applied. Each
            of the `bindings` must contain at least one member.
          items:
            $ref: '#/components/schemas/GoogleIamV1__Binding'
          title: bindings
          type: array
        etag:
          description: |-
            `etag` is used for optimistic concurrency control as a way to help
            prevent simultaneous updates of a policy from overwriting each other.
            It is strongly suggested that systems make use of the `etag` in the
            read-modify-write cycle to perform policy updates in order to avoid race
            conditions: An `etag` is returned in the response to `getIamPolicy`, and
            systems are expected to put that etag in the request to `setIamPolicy` to
            ensure that their change will be applied to the same version of the policy.

            **Important:** If you use IAM Conditions, you must include the `etag` field
            whenever you call `setIamPolicy`. If you omit this field, then IAM allows
            you to overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.
          format: byte
          title: etag
          type: string
        version:
          description: |-
            Specifies the format of the policy.

            Valid values are `0`, `1`, and `3`. Requests that specify an invalid value
            are rejected.

            Any operation that affects conditional role bindings must specify version
            `3`. This requirement applies to the following operations:

            * Getting a policy that includes a conditional role binding
            * Adding a conditional role binding to a policy
            * Changing a conditional role binding in a policy
            * Removing any role binding, with or without a condition, from a policy
              that includes conditions

            **Important:** If you use IAM Conditions, you must include the `etag` field
            whenever you call `setIamPolicy`. If you omit this field, then IAM allows
            you to overwrite a version `3` policy with a version `1` policy, and all of
            the conditions in the version `3` policy are lost.

            If a policy does not include any conditions, operations on that policy may
            specify any valid version or leave the field unset.
          format: int32
          title: version
          type: integer
      title: GoogleIamV1__Policy
      type: object
    GoogleIamV1__SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: '#/components/schemas/GoogleIamV1__Policy'
      title: GoogleIamV1__SetIamPolicyRequest
      type: object
    GoogleIamV1__TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: |-
            The set of permissions to check for the `resource`. Permissions with
            wildcards (such as '*' or 'storage.*') are not allowed. For more
            information see
            [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          title: permissions
          type: array
      title: GoogleIamV1__TestIamPermissionsRequest
      type: object
    GoogleIamV1__TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      example:
        permissions:
        - permissions
        - permissions
      properties:
        permissions:
          description: |-
            A subset of `TestPermissionsRequest.permissions` that the caller is
            allowed.
          items:
            type: string
          title: permissions
          type: array
      title: GoogleIamV1__TestIamPermissionsResponse
      type: object
    GoogleType__Expr:
      description: |-
        Represents an expression text. Example:

            title: "User account presence"
            description: "Determines whether the request has a user account"
            expression: "size(request.user) > 0"
      example:
        expression: expression
        description: description
        location: location
        title: title
      properties:
        description:
          description: |-
            An optional description of the expression. This is a longer text which
            describes the expression, e.g. when hovered over it in a UI.
          title: description
          type: string
        expression:
          description: |-
            Textual representation of an expression in
            Common Expression Language syntax.

            The application context of the containing message determines which
            well-known feature set of CEL is supported.
          title: expression
          type: string
        location:
          description: |-
            An optional string indicating the location of the expression for error
            reporting, e.g. a file name and a position in the file.
          title: location
          type: string
        title:
          description: |-
            An optional title for the expression, i.e. a short string describing
            its purpose. This can be used e.g. in UIs which allow to enter the
            expression.
          title: title
          type: string
      title: GoogleType__Expr
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data
              across Google Cloud Platform services
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2
    Oauth2c:
      description: Oauth 2.0 accessCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: View and manage your data
              across Google Cloud Platform services
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_Oauth2c
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_Oauth2c
x-hasEquivalentPaths: true
