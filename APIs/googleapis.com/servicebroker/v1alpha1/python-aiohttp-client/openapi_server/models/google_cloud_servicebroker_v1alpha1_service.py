# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.google_cloud_servicebroker_v1alpha1_dashboard_client import GoogleCloudServicebrokerV1alpha1DashboardClient
from openapi_server.models.google_cloud_servicebroker_v1alpha1_plan import GoogleCloudServicebrokerV1alpha1Plan
from openapi_server import util


class GoogleCloudServicebrokerV1alpha1Service(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bindable: bool=None, binding_retrievable: bool=None, dashboard_client: GoogleCloudServicebrokerV1alpha1DashboardClient=None, description: str=None, id: str=None, instance_retrievable: bool=None, metadata: Dict[str, object]=None, name: str=None, plan_updateable: bool=None, plans: List[GoogleCloudServicebrokerV1alpha1Plan]=None, tags: List[str]=None):
        """GoogleCloudServicebrokerV1alpha1Service - a model defined in OpenAPI

        :param bindable: The bindable of this GoogleCloudServicebrokerV1alpha1Service.
        :param binding_retrievable: The binding_retrievable of this GoogleCloudServicebrokerV1alpha1Service.
        :param dashboard_client: The dashboard_client of this GoogleCloudServicebrokerV1alpha1Service.
        :param description: The description of this GoogleCloudServicebrokerV1alpha1Service.
        :param id: The id of this GoogleCloudServicebrokerV1alpha1Service.
        :param instance_retrievable: The instance_retrievable of this GoogleCloudServicebrokerV1alpha1Service.
        :param metadata: The metadata of this GoogleCloudServicebrokerV1alpha1Service.
        :param name: The name of this GoogleCloudServicebrokerV1alpha1Service.
        :param plan_updateable: The plan_updateable of this GoogleCloudServicebrokerV1alpha1Service.
        :param plans: The plans of this GoogleCloudServicebrokerV1alpha1Service.
        :param tags: The tags of this GoogleCloudServicebrokerV1alpha1Service.
        """
        self.openapi_types = {
            'bindable': bool,
            'binding_retrievable': bool,
            'dashboard_client': GoogleCloudServicebrokerV1alpha1DashboardClient,
            'description': str,
            'id': str,
            'instance_retrievable': bool,
            'metadata': Dict[str, object],
            'name': str,
            'plan_updateable': bool,
            'plans': List[GoogleCloudServicebrokerV1alpha1Plan],
            'tags': List[str]
        }

        self.attribute_map = {
            'bindable': 'bindable',
            'binding_retrievable': 'binding_retrievable',
            'dashboard_client': 'dashboard_client',
            'description': 'description',
            'id': 'id',
            'instance_retrievable': 'instance_retrievable',
            'metadata': 'metadata',
            'name': 'name',
            'plan_updateable': 'plan_updateable',
            'plans': 'plans',
            'tags': 'tags'
        }

        self._bindable = bindable
        self._binding_retrievable = binding_retrievable
        self._dashboard_client = dashboard_client
        self._description = description
        self._id = id
        self._instance_retrievable = instance_retrievable
        self._metadata = metadata
        self._name = name
        self._plan_updateable = plan_updateable
        self._plans = plans
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudServicebrokerV1alpha1Service':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudServicebrokerV1alpha1__Service of this GoogleCloudServicebrokerV1alpha1Service.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bindable(self):
        """Gets the bindable of this GoogleCloudServicebrokerV1alpha1Service.

        Specifies whether instances of the service can be bound to applications. Required.

        :return: The bindable of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: bool
        """
        return self._bindable

    @bindable.setter
    def bindable(self, bindable):
        """Sets the bindable of this GoogleCloudServicebrokerV1alpha1Service.

        Specifies whether instances of the service can be bound to applications. Required.

        :param bindable: The bindable of this GoogleCloudServicebrokerV1alpha1Service.
        :type bindable: bool
        """

        self._bindable = bindable

    @property
    def binding_retrievable(self):
        """Gets the binding_retrievable of this GoogleCloudServicebrokerV1alpha1Service.

        Whether the service provides an endpoint to get service bindings.

        :return: The binding_retrievable of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: bool
        """
        return self._binding_retrievable

    @binding_retrievable.setter
    def binding_retrievable(self, binding_retrievable):
        """Sets the binding_retrievable of this GoogleCloudServicebrokerV1alpha1Service.

        Whether the service provides an endpoint to get service bindings.

        :param binding_retrievable: The binding_retrievable of this GoogleCloudServicebrokerV1alpha1Service.
        :type binding_retrievable: bool
        """

        self._binding_retrievable = binding_retrievable

    @property
    def dashboard_client(self):
        """Gets the dashboard_client of this GoogleCloudServicebrokerV1alpha1Service.


        :return: The dashboard_client of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: GoogleCloudServicebrokerV1alpha1DashboardClient
        """
        return self._dashboard_client

    @dashboard_client.setter
    def dashboard_client(self, dashboard_client):
        """Sets the dashboard_client of this GoogleCloudServicebrokerV1alpha1Service.


        :param dashboard_client: The dashboard_client of this GoogleCloudServicebrokerV1alpha1Service.
        :type dashboard_client: GoogleCloudServicebrokerV1alpha1DashboardClient
        """

        self._dashboard_client = dashboard_client

    @property
    def description(self):
        """Gets the description of this GoogleCloudServicebrokerV1alpha1Service.

        Textual description of the service. Required.

        :return: The description of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GoogleCloudServicebrokerV1alpha1Service.

        Textual description of the service. Required.

        :param description: The description of this GoogleCloudServicebrokerV1alpha1Service.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this GoogleCloudServicebrokerV1alpha1Service.

        ID is a globally unique identifier used to uniquely identify the service. ID is an opaque string.

        :return: The id of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GoogleCloudServicebrokerV1alpha1Service.

        ID is a globally unique identifier used to uniquely identify the service. ID is an opaque string.

        :param id: The id of this GoogleCloudServicebrokerV1alpha1Service.
        :type id: str
        """

        self._id = id

    @property
    def instance_retrievable(self):
        """Gets the instance_retrievable of this GoogleCloudServicebrokerV1alpha1Service.

        Whether the service provides an endpoint to get service instances.

        :return: The instance_retrievable of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: bool
        """
        return self._instance_retrievable

    @instance_retrievable.setter
    def instance_retrievable(self, instance_retrievable):
        """Sets the instance_retrievable of this GoogleCloudServicebrokerV1alpha1Service.

        Whether the service provides an endpoint to get service instances.

        :param instance_retrievable: The instance_retrievable of this GoogleCloudServicebrokerV1alpha1Service.
        :type instance_retrievable: bool
        """

        self._instance_retrievable = instance_retrievable

    @property
    def metadata(self):
        """Gets the metadata of this GoogleCloudServicebrokerV1alpha1Service.

        A list of metadata for a service offering. Metadata is an arbitrary JSON object.

        :return: The metadata of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: Dict[str, object]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GoogleCloudServicebrokerV1alpha1Service.

        A list of metadata for a service offering. Metadata is an arbitrary JSON object.

        :param metadata: The metadata of this GoogleCloudServicebrokerV1alpha1Service.
        :type metadata: Dict[str, object]
        """

        self._metadata = metadata

    @property
    def name(self):
        """Gets the name of this GoogleCloudServicebrokerV1alpha1Service.

        User friendly service name. Name must match [a-z0-9]+ regexp. The name must be globally unique within GCP project. Note, which is different from (\"This must be globally unique within a platform marketplace\"). Required.

        :return: The name of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GoogleCloudServicebrokerV1alpha1Service.

        User friendly service name. Name must match [a-z0-9]+ regexp. The name must be globally unique within GCP project. Note, which is different from (\"This must be globally unique within a platform marketplace\"). Required.

        :param name: The name of this GoogleCloudServicebrokerV1alpha1Service.
        :type name: str
        """

        self._name = name

    @property
    def plan_updateable(self):
        """Gets the plan_updateable of this GoogleCloudServicebrokerV1alpha1Service.

        Whether the service supports upgrade/downgrade for some plans.

        :return: The plan_updateable of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: bool
        """
        return self._plan_updateable

    @plan_updateable.setter
    def plan_updateable(self, plan_updateable):
        """Sets the plan_updateable of this GoogleCloudServicebrokerV1alpha1Service.

        Whether the service supports upgrade/downgrade for some plans.

        :param plan_updateable: The plan_updateable of this GoogleCloudServicebrokerV1alpha1Service.
        :type plan_updateable: bool
        """

        self._plan_updateable = plan_updateable

    @property
    def plans(self):
        """Gets the plans of this GoogleCloudServicebrokerV1alpha1Service.

        A list of plans for this service. At least one plan is required.

        :return: The plans of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: List[GoogleCloudServicebrokerV1alpha1Plan]
        """
        return self._plans

    @plans.setter
    def plans(self, plans):
        """Sets the plans of this GoogleCloudServicebrokerV1alpha1Service.

        A list of plans for this service. At least one plan is required.

        :param plans: The plans of this GoogleCloudServicebrokerV1alpha1Service.
        :type plans: List[GoogleCloudServicebrokerV1alpha1Plan]
        """

        self._plans = plans

    @property
    def tags(self):
        """Gets the tags of this GoogleCloudServicebrokerV1alpha1Service.

        Tags provide a flexible mechanism to expose a classification, attribute, or base technology of a service.

        :return: The tags of this GoogleCloudServicebrokerV1alpha1Service.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this GoogleCloudServicebrokerV1alpha1Service.

        Tags provide a flexible mechanism to expose a classification, attribute, or base technology of a service.

        :param tags: The tags of this GoogleCloudServicebrokerV1alpha1Service.
        :type tags: List[str]
        """

        self._tags = tags
