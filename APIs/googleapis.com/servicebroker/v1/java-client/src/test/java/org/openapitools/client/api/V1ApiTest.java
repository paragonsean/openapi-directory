/*
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleIamV1Policy;
import org.openapitools.client.model.GoogleIamV1SetIamPolicyRequest;
import org.openapitools.client.model.GoogleIamV1TestIamPermissionsRequest;
import org.openapitools.client.model.GoogleIamV1TestIamPermissionsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for V1Api
 */
@Disabled
public class V1ApiTest {

    private final V1Api api = new V1Api();

    /**
     * Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerGetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String oauthToken = null;
        String paramCallback = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        String uploadProtocol = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String fields = null;
        String uploadType = null;
        Integer optionsRequestedPolicyVersion = null;
        GoogleIamV1Policy response = api.servicebrokerGetIamPolicy(resource, $xgafv, oauthToken, paramCallback, alt, key, accessToken, uploadProtocol, prettyPrint, quotaUser, fields, uploadType, optionsRequestedPolicyVersion);
        // TODO: test validations
    }

    /**
     * Sets the access control policy on the specified resource. Replaces any existing policy.  Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerSetIamPolicyTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String oauthToken = null;
        String paramCallback = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        String uploadProtocol = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String fields = null;
        String uploadType = null;
        GoogleIamV1SetIamPolicyRequest googleIamV1SetIamPolicyRequest = null;
        GoogleIamV1Policy response = api.servicebrokerSetIamPolicy(resource, $xgafv, oauthToken, paramCallback, alt, key, accessToken, uploadProtocol, prettyPrint, quotaUser, fields, uploadType, googleIamV1SetIamPolicyRequest);
        // TODO: test validations
    }

    /**
     * Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.  Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \&quot;fail open\&quot; without warning.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerTestIamPermissionsTest() throws ApiException {
        String resource = null;
        String $xgafv = null;
        String oauthToken = null;
        String paramCallback = null;
        String alt = null;
        String key = null;
        String accessToken = null;
        String uploadProtocol = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String fields = null;
        String uploadType = null;
        GoogleIamV1TestIamPermissionsRequest googleIamV1TestIamPermissionsRequest = null;
        GoogleIamV1TestIamPermissionsResponse response = api.servicebrokerTestIamPermissions(resource, $xgafv, oauthToken, paramCallback, alt, key, accessToken, uploadProtocol, prettyPrint, quotaUser, fields, uploadType, googleIamV1TestIamPermissionsRequest);
        // TODO: test validations
    }

}
