/**
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import GoogleIamV1Binding from './model/GoogleIamV1Binding';
import GoogleIamV1Policy from './model/GoogleIamV1Policy';
import GoogleIamV1SetIamPolicyRequest from './model/GoogleIamV1SetIamPolicyRequest';
import GoogleIamV1TestIamPermissionsRequest from './model/GoogleIamV1TestIamPermissionsRequest';
import GoogleIamV1TestIamPermissionsResponse from './model/GoogleIamV1TestIamPermissionsResponse';
import GoogleTypeExpr from './model/GoogleTypeExpr';
import V1Api from './api/V1Api';


/**
* The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ServiceBroker = require('index'); // See note below*.
* var xxxSvc = new ServiceBroker.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ServiceBroker.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ServiceBroker.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ServiceBroker.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The GoogleIamV1Binding model constructor.
     * @property {module:model/GoogleIamV1Binding}
     */
    GoogleIamV1Binding,

    /**
     * The GoogleIamV1Policy model constructor.
     * @property {module:model/GoogleIamV1Policy}
     */
    GoogleIamV1Policy,

    /**
     * The GoogleIamV1SetIamPolicyRequest model constructor.
     * @property {module:model/GoogleIamV1SetIamPolicyRequest}
     */
    GoogleIamV1SetIamPolicyRequest,

    /**
     * The GoogleIamV1TestIamPermissionsRequest model constructor.
     * @property {module:model/GoogleIamV1TestIamPermissionsRequest}
     */
    GoogleIamV1TestIamPermissionsRequest,

    /**
     * The GoogleIamV1TestIamPermissionsResponse model constructor.
     * @property {module:model/GoogleIamV1TestIamPermissionsResponse}
     */
    GoogleIamV1TestIamPermissionsResponse,

    /**
     * The GoogleTypeExpr model constructor.
     * @property {module:model/GoogleTypeExpr}
     */
    GoogleTypeExpr,

    /**
    * The V1Api service constructor.
    * @property {module:api/V1Api}
    */
    V1Api
};
