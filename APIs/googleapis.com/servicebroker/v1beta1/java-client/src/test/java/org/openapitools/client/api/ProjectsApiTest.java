/*
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1Binding;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1Broker;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1CreateBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1DeleteBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1GetBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ListBindingsResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ListBrokersResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ListCatalogResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1Operation;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ServiceInstance;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectsApi
 */
@Disabled
public class ProjectsApiTest {

    private final ProjectsApi api = new ProjectsApi();

    /**
     * CreateBroker creates a Broker.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersCreateTest() throws ApiException {
        String parent = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        GoogleCloudServicebrokerV1beta1Broker googleCloudServicebrokerV1beta1Broker = null;
        GoogleCloudServicebrokerV1beta1Broker response = api.servicebrokerProjectsBrokersCreate(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, googleCloudServicebrokerV1beta1Broker);
        // TODO: test validations
    }

    /**
     * Lists all the bindings in the instance.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersInstancesBindingsListTest() throws ApiException {
        String parent = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudServicebrokerV1beta1ListBindingsResponse response = api.servicebrokerProjectsBrokersInstancesBindingsList(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists all the instances in the brokers This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersInstancesListTest() throws ApiException {
        String parent = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse response = api.servicebrokerProjectsBrokersInstancesList(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * ListBrokers lists brokers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersListTest() throws ApiException {
        String parent = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudServicebrokerV1beta1ListBrokersResponse response = api.servicebrokerProjectsBrokersList(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Lists all the Services registered with this broker for consumption for given service registry broker, which contains an set of services. Note, that Service producer API is separate from Broker API.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2CatalogListTest() throws ApiException {
        String parent = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        Integer pageSize = null;
        String pageToken = null;
        GoogleCloudServicebrokerV1beta1ListCatalogResponse response = api.servicebrokerProjectsBrokersV2CatalogList(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken);
        // TODO: test validations
    }

    /**
     * Provisions a service instance. If &#x60;request.accepts_incomplete&#x60; is false and Broker cannot execute request synchronously HTTP 422 error will be returned along with FAILED_PRECONDITION status. If &#x60;request.accepts_incomplete&#x60; is true and the Broker decides to execute resource asynchronously then HTTP 202 response code will be returned and a valid polling operation in the response will be included. If Broker executes the request synchronously and it succeeds HTTP 201 response will be furnished. If identical instance exists, then HTTP 200 response will be returned. If an instance with identical ID but mismatching parameters exists, then HTTP 409 status code will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesCreateTest() throws ApiException {
        String parent = null;
        String instanceId = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        Boolean acceptsIncomplete = null;
        GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance = null;
        GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesCreate(parent, instanceId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance);
        // TODO: test validations
    }

    /**
     * Updates an existing service instance. See CreateServiceInstance for possible response codes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesPatchTest() throws ApiException {
        String name = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        Boolean acceptsIncomplete = null;
        GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance = null;
        GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesPatch(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance);
        // TODO: test validations
    }

    /**
     * CreateBinding generates a service binding to an existing service instance. See ProviServiceInstance for async operation details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateTest() throws ApiException {
        String parent = null;
        String bindingId = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        Boolean acceptsIncomplete = null;
        GoogleCloudServicebrokerV1beta1Binding googleCloudServicebrokerV1beta1Binding = null;
        GoogleCloudServicebrokerV1beta1CreateBindingResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(parent, bindingId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1Binding);
        // TODO: test validations
    }

    /**
     * Unbinds from a service instance. For synchronous/asynchronous request details see CreateServiceInstance method. If binding does not exist HTTP 410 status will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDeleteTest() throws ApiException {
        String name = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        Boolean acceptsIncomplete = null;
        String planId = null;
        String serviceId = null;
        GoogleCloudServicebrokerV1beta1DeleteBindingResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDelete(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, planId, serviceId);
        // TODO: test validations
    }

    /**
     * GetBinding returns the binding information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetTest() throws ApiException {
        String name = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String planId = null;
        String serviceId = null;
        GoogleCloudServicebrokerV1beta1GetBindingResponse response = api.servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, planId, serviceId);
        // TODO: test validations
    }

    /**
     * Returns the state of the last operation for the binding. Only last (or current) operation can be polled.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationTest() throws ApiException {
        String name = null;
        String fields = null;
        String uploadType = null;
        String paramCallback = null;
        String oauthToken = null;
        String $xgafv = null;
        String alt = null;
        String accessToken = null;
        String key = null;
        String uploadProtocol = null;
        String quotaUser = null;
        Boolean prettyPrint = null;
        String operation = null;
        String planId = null;
        String serviceId = null;
        GoogleCloudServicebrokerV1beta1Operation response = api.servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, operation, planId, serviceId);
        // TODO: test validations
    }

}
