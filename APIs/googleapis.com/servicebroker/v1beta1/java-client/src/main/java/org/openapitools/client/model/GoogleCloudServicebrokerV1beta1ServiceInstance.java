/*
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Message describing inputs to Provision and Update Service instance requests.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:34:17.619469-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudServicebrokerV1beta1ServiceInstance {
  public static final String SERIALIZED_NAME_CONTEXT = "context";
  @SerializedName(SERIALIZED_NAME_CONTEXT)
  private Map<String, Object> context = new HashMap<>();

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DEPLOYMENT_NAME = "deploymentName";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_NAME)
  private String deploymentName;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_INSTANCE_ID = "instance_id";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private String instanceId;

  public static final String SERIALIZED_NAME_ORGANIZATION_GUID = "organization_guid";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_GUID)
  private String organizationGuid;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map<String, Object> parameters = new HashMap<>();

  public static final String SERIALIZED_NAME_PLAN_ID = "plan_id";
  @SerializedName(SERIALIZED_NAME_PLAN_ID)
  private String planId;

  public static final String SERIALIZED_NAME_PREVIOUS_VALUES = "previous_values";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_VALUES)
  private Map<String, Object> previousValues = new HashMap<>();

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_SERVICE_ID = "service_id";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private String serviceId;

  public static final String SERIALIZED_NAME_SPACE_GUID = "space_guid";
  @SerializedName(SERIALIZED_NAME_SPACE_GUID)
  private String spaceGuid;

  public GoogleCloudServicebrokerV1beta1ServiceInstance() {
  }

  public GoogleCloudServicebrokerV1beta1ServiceInstance context(Map<String, Object> context) {
    this.context = context;
    return this;
  }

  public GoogleCloudServicebrokerV1beta1ServiceInstance putContextItem(String key, Object contextItem) {
    if (this.context == null) {
      this.context = new HashMap<>();
    }
    this.context.put(key, contextItem);
    return this;
  }

  /**
   * Platform specific contextual information under which the service instance is to be provisioned. This replaces organization_guid and space_guid. But can also contain anything. Currently only used for logging context information.
   * @return context
   */
  @javax.annotation.Nullable
  public Map<String, Object> getContext() {
    return context;
  }

  public void setContext(Map<String, Object> context) {
    this.context = context;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Timestamp for when the instance was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance deploymentName(String deploymentName) {
    this.deploymentName = deploymentName;
    return this;
  }

  /**
   * Output only. String containing the Deployment Manager deployment name that was created for this instance,
   * @return deploymentName
   */
  @javax.annotation.Nullable
  public String getDeploymentName() {
    return deploymentName;
  }

  public void setDeploymentName(String deploymentName) {
    this.deploymentName = deploymentName;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance description(String description) {
    this.description = description;
    return this;
  }

  /**
   * To return errors when GetInstance call is done via HTTP to be unified with other methods.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance instanceId(String instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required.
   * @return instanceId
   */
  @javax.annotation.Nullable
  public String getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(String instanceId) {
    this.instanceId = instanceId;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance organizationGuid(String organizationGuid) {
    this.organizationGuid = organizationGuid;
    return this;
  }

  /**
   * The platform GUID for the organization under which the service is to be provisioned. Required.
   * @return organizationGuid
   */
  @javax.annotation.Nullable
  public String getOrganizationGuid() {
    return organizationGuid;
  }

  public void setOrganizationGuid(String organizationGuid) {
    this.organizationGuid = organizationGuid;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance parameters(Map<String, Object> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudServicebrokerV1beta1ServiceInstance putParametersItem(String key, Object parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

  /**
   * Configuration options for the service instance. Parameters is JSON object serialized to string.
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map<String, Object> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, Object> parameters) {
    this.parameters = parameters;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance planId(String planId) {
    this.planId = planId;
    return this;
  }

  /**
   * The ID of the plan. See &#x60;Service&#x60; and &#x60;Plan&#x60; resources for details. Maximum length is 64, GUID recommended. Required.
   * @return planId
   */
  @javax.annotation.Nullable
  public String getPlanId() {
    return planId;
  }

  public void setPlanId(String planId) {
    this.planId = planId;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance previousValues(Map<String, Object> previousValues) {
    this.previousValues = previousValues;
    return this;
  }

  public GoogleCloudServicebrokerV1beta1ServiceInstance putPreviousValuesItem(String key, Object previousValuesItem) {
    if (this.previousValues == null) {
      this.previousValues = new HashMap<>();
    }
    this.previousValues.put(key, previousValuesItem);
    return this;
  }

  /**
   * Used only in UpdateServiceInstance request to optionally specify previous fields.
   * @return previousValues
   */
  @javax.annotation.Nullable
  public Map<String, Object> getPreviousValues() {
    return previousValues;
  }

  public void setPreviousValues(Map<String, Object> previousValues) {
    this.previousValues = previousValues;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Output only. The resource name of the instance, e.g. projects/project_id/brokers/broker_id/service_instances/instance_id
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance serviceId(String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * The id of the service. Must be a valid identifier of a service contained in the list from a &#x60;ListServices()&#x60; call. Maximum length is 64, GUID recommended. Required.
   * @return serviceId
   */
  @javax.annotation.Nullable
  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }


  public GoogleCloudServicebrokerV1beta1ServiceInstance spaceGuid(String spaceGuid) {
    this.spaceGuid = spaceGuid;
    return this;
  }

  /**
   * The identifier for the project space within the platform organization. Required.
   * @return spaceGuid
   */
  @javax.annotation.Nullable
  public String getSpaceGuid() {
    return spaceGuid;
  }

  public void setSpaceGuid(String spaceGuid) {
    this.spaceGuid = spaceGuid;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance = (GoogleCloudServicebrokerV1beta1ServiceInstance) o;
    return Objects.equals(this.context, googleCloudServicebrokerV1beta1ServiceInstance.context) &&
        Objects.equals(this.createTime, googleCloudServicebrokerV1beta1ServiceInstance.createTime) &&
        Objects.equals(this.deploymentName, googleCloudServicebrokerV1beta1ServiceInstance.deploymentName) &&
        Objects.equals(this.description, googleCloudServicebrokerV1beta1ServiceInstance.description) &&
        Objects.equals(this.instanceId, googleCloudServicebrokerV1beta1ServiceInstance.instanceId) &&
        Objects.equals(this.organizationGuid, googleCloudServicebrokerV1beta1ServiceInstance.organizationGuid) &&
        Objects.equals(this.parameters, googleCloudServicebrokerV1beta1ServiceInstance.parameters) &&
        Objects.equals(this.planId, googleCloudServicebrokerV1beta1ServiceInstance.planId) &&
        Objects.equals(this.previousValues, googleCloudServicebrokerV1beta1ServiceInstance.previousValues) &&
        Objects.equals(this.resourceName, googleCloudServicebrokerV1beta1ServiceInstance.resourceName) &&
        Objects.equals(this.serviceId, googleCloudServicebrokerV1beta1ServiceInstance.serviceId) &&
        Objects.equals(this.spaceGuid, googleCloudServicebrokerV1beta1ServiceInstance.spaceGuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(context, createTime, deploymentName, description, instanceId, organizationGuid, parameters, planId, previousValues, resourceName, serviceId, spaceGuid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudServicebrokerV1beta1ServiceInstance {\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    deploymentName: ").append(toIndentedString(deploymentName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    organizationGuid: ").append(toIndentedString(organizationGuid)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    previousValues: ").append(toIndentedString(previousValues)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("    spaceGuid: ").append(toIndentedString(spaceGuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("context");
    openapiFields.add("createTime");
    openapiFields.add("deploymentName");
    openapiFields.add("description");
    openapiFields.add("instance_id");
    openapiFields.add("organization_guid");
    openapiFields.add("parameters");
    openapiFields.add("plan_id");
    openapiFields.add("previous_values");
    openapiFields.add("resourceName");
    openapiFields.add("service_id");
    openapiFields.add("space_guid");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudServicebrokerV1beta1ServiceInstance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudServicebrokerV1beta1ServiceInstance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudServicebrokerV1beta1ServiceInstance is not found in the empty JSON string", GoogleCloudServicebrokerV1beta1ServiceInstance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudServicebrokerV1beta1ServiceInstance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudServicebrokerV1beta1ServiceInstance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("deploymentName") != null && !jsonObj.get("deploymentName").isJsonNull()) && !jsonObj.get("deploymentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deploymentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deploymentName").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("instance_id") != null && !jsonObj.get("instance_id").isJsonNull()) && !jsonObj.get("instance_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `instance_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("instance_id").toString()));
      }
      if ((jsonObj.get("organization_guid") != null && !jsonObj.get("organization_guid").isJsonNull()) && !jsonObj.get("organization_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization_guid").toString()));
      }
      if ((jsonObj.get("plan_id") != null && !jsonObj.get("plan_id").isJsonNull()) && !jsonObj.get("plan_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plan_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plan_id").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("service_id") != null && !jsonObj.get("service_id").isJsonNull()) && !jsonObj.get("service_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_id").toString()));
      }
      if ((jsonObj.get("space_guid") != null && !jsonObj.get("space_guid").isJsonNull()) && !jsonObj.get("space_guid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `space_guid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("space_guid").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudServicebrokerV1beta1ServiceInstance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudServicebrokerV1beta1ServiceInstance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudServicebrokerV1beta1ServiceInstance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudServicebrokerV1beta1ServiceInstance.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudServicebrokerV1beta1ServiceInstance>() {
           @Override
           public void write(JsonWriter out, GoogleCloudServicebrokerV1beta1ServiceInstance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudServicebrokerV1beta1ServiceInstance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudServicebrokerV1beta1ServiceInstance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudServicebrokerV1beta1ServiceInstance
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudServicebrokerV1beta1ServiceInstance
   */
  public static GoogleCloudServicebrokerV1beta1ServiceInstance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudServicebrokerV1beta1ServiceInstance.class);
  }

  /**
   * Convert an instance of GoogleCloudServicebrokerV1beta1ServiceInstance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

