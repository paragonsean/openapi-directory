/*
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describes the binding.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:34:17.619469-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GoogleCloudServicebrokerV1beta1Binding {
  public static final String SERIALIZED_NAME_BIND_RESOURCE = "bind_resource";
  @SerializedName(SERIALIZED_NAME_BIND_RESOURCE)
  private Map<String, Object> bindResource = new HashMap<>();

  public static final String SERIALIZED_NAME_BINDING_ID = "binding_id";
  @SerializedName(SERIALIZED_NAME_BINDING_ID)
  private String bindingId;

  public static final String SERIALIZED_NAME_CREATE_TIME = "createTime";
  @SerializedName(SERIALIZED_NAME_CREATE_TIME)
  private String createTime;

  public static final String SERIALIZED_NAME_DEPLOYMENT_NAME = "deploymentName";
  @SerializedName(SERIALIZED_NAME_DEPLOYMENT_NAME)
  private String deploymentName;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private Map<String, Object> parameters = new HashMap<>();

  public static final String SERIALIZED_NAME_PLAN_ID = "plan_id";
  @SerializedName(SERIALIZED_NAME_PLAN_ID)
  private String planId;

  public static final String SERIALIZED_NAME_RESOURCE_NAME = "resourceName";
  @SerializedName(SERIALIZED_NAME_RESOURCE_NAME)
  private String resourceName;

  public static final String SERIALIZED_NAME_SERVICE_ID = "service_id";
  @SerializedName(SERIALIZED_NAME_SERVICE_ID)
  private String serviceId;

  public GoogleCloudServicebrokerV1beta1Binding() {
  }

  public GoogleCloudServicebrokerV1beta1Binding bindResource(Map<String, Object> bindResource) {
    this.bindResource = bindResource;
    return this;
  }

  public GoogleCloudServicebrokerV1beta1Binding putBindResourceItem(String key, Object bindResourceItem) {
    if (this.bindResource == null) {
      this.bindResource = new HashMap<>();
    }
    this.bindResource.put(key, bindResourceItem);
    return this;
  }

  /**
   * A JSON object that contains data for platform resources associated with the binding to be created.
   * @return bindResource
   */
  @javax.annotation.Nullable
  public Map<String, Object> getBindResource() {
    return bindResource;
  }

  public void setBindResource(Map<String, Object> bindResource) {
    this.bindResource = bindResource;
  }


  public GoogleCloudServicebrokerV1beta1Binding bindingId(String bindingId) {
    this.bindingId = bindingId;
    return this;
  }

  /**
   * The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required.
   * @return bindingId
   */
  @javax.annotation.Nullable
  public String getBindingId() {
    return bindingId;
  }

  public void setBindingId(String bindingId) {
    this.bindingId = bindingId;
  }


  public GoogleCloudServicebrokerV1beta1Binding createTime(String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * Output only. Timestamp for when the binding was created.
   * @return createTime
   */
  @javax.annotation.Nullable
  public String getCreateTime() {
    return createTime;
  }

  public void setCreateTime(String createTime) {
    this.createTime = createTime;
  }


  public GoogleCloudServicebrokerV1beta1Binding deploymentName(String deploymentName) {
    this.deploymentName = deploymentName;
    return this;
  }

  /**
   * Output only. String containing the Deployment Manager deployment name that was created for this binding,
   * @return deploymentName
   */
  @javax.annotation.Nullable
  public String getDeploymentName() {
    return deploymentName;
  }

  public void setDeploymentName(String deploymentName) {
    this.deploymentName = deploymentName;
  }


  public GoogleCloudServicebrokerV1beta1Binding parameters(Map<String, Object> parameters) {
    this.parameters = parameters;
    return this;
  }

  public GoogleCloudServicebrokerV1beta1Binding putParametersItem(String key, Object parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

  /**
   * Configuration options for the service binding.
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map<String, Object> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, Object> parameters) {
    this.parameters = parameters;
  }


  public GoogleCloudServicebrokerV1beta1Binding planId(String planId) {
    this.planId = planId;
    return this;
  }

  /**
   * The ID of the plan. See &#x60;Service&#x60; and &#x60;Plan&#x60; resources for details. Maximum length is 64, GUID recommended. Required.
   * @return planId
   */
  @javax.annotation.Nullable
  public String getPlanId() {
    return planId;
  }

  public void setPlanId(String planId) {
    this.planId = planId;
  }


  public GoogleCloudServicebrokerV1beta1Binding resourceName(String resourceName) {
    this.resourceName = resourceName;
    return this;
  }

  /**
   * Output only. The resource name of the binding, e.g. projects/project_id/brokers/broker_id/service_instances/instance_id/bindings/binding_id.
   * @return resourceName
   */
  @javax.annotation.Nullable
  public String getResourceName() {
    return resourceName;
  }

  public void setResourceName(String resourceName) {
    this.resourceName = resourceName;
  }


  public GoogleCloudServicebrokerV1beta1Binding serviceId(String serviceId) {
    this.serviceId = serviceId;
    return this;
  }

  /**
   * The id of the service. Must be a valid identifier of a service contained in the list from a &#x60;ListServices()&#x60; call. Maximum length is 64, GUID recommended. Required.
   * @return serviceId
   */
  @javax.annotation.Nullable
  public String getServiceId() {
    return serviceId;
  }

  public void setServiceId(String serviceId) {
    this.serviceId = serviceId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GoogleCloudServicebrokerV1beta1Binding googleCloudServicebrokerV1beta1Binding = (GoogleCloudServicebrokerV1beta1Binding) o;
    return Objects.equals(this.bindResource, googleCloudServicebrokerV1beta1Binding.bindResource) &&
        Objects.equals(this.bindingId, googleCloudServicebrokerV1beta1Binding.bindingId) &&
        Objects.equals(this.createTime, googleCloudServicebrokerV1beta1Binding.createTime) &&
        Objects.equals(this.deploymentName, googleCloudServicebrokerV1beta1Binding.deploymentName) &&
        Objects.equals(this.parameters, googleCloudServicebrokerV1beta1Binding.parameters) &&
        Objects.equals(this.planId, googleCloudServicebrokerV1beta1Binding.planId) &&
        Objects.equals(this.resourceName, googleCloudServicebrokerV1beta1Binding.resourceName) &&
        Objects.equals(this.serviceId, googleCloudServicebrokerV1beta1Binding.serviceId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bindResource, bindingId, createTime, deploymentName, parameters, planId, resourceName, serviceId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GoogleCloudServicebrokerV1beta1Binding {\n");
    sb.append("    bindResource: ").append(toIndentedString(bindResource)).append("\n");
    sb.append("    bindingId: ").append(toIndentedString(bindingId)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    deploymentName: ").append(toIndentedString(deploymentName)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    planId: ").append(toIndentedString(planId)).append("\n");
    sb.append("    resourceName: ").append(toIndentedString(resourceName)).append("\n");
    sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bind_resource");
    openapiFields.add("binding_id");
    openapiFields.add("createTime");
    openapiFields.add("deploymentName");
    openapiFields.add("parameters");
    openapiFields.add("plan_id");
    openapiFields.add("resourceName");
    openapiFields.add("service_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GoogleCloudServicebrokerV1beta1Binding
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GoogleCloudServicebrokerV1beta1Binding.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GoogleCloudServicebrokerV1beta1Binding is not found in the empty JSON string", GoogleCloudServicebrokerV1beta1Binding.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GoogleCloudServicebrokerV1beta1Binding.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GoogleCloudServicebrokerV1beta1Binding` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("binding_id") != null && !jsonObj.get("binding_id").isJsonNull()) && !jsonObj.get("binding_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `binding_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("binding_id").toString()));
      }
      if ((jsonObj.get("createTime") != null && !jsonObj.get("createTime").isJsonNull()) && !jsonObj.get("createTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createTime").toString()));
      }
      if ((jsonObj.get("deploymentName") != null && !jsonObj.get("deploymentName").isJsonNull()) && !jsonObj.get("deploymentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deploymentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deploymentName").toString()));
      }
      if ((jsonObj.get("plan_id") != null && !jsonObj.get("plan_id").isJsonNull()) && !jsonObj.get("plan_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plan_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plan_id").toString()));
      }
      if ((jsonObj.get("resourceName") != null && !jsonObj.get("resourceName").isJsonNull()) && !jsonObj.get("resourceName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resourceName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resourceName").toString()));
      }
      if ((jsonObj.get("service_id") != null && !jsonObj.get("service_id").isJsonNull()) && !jsonObj.get("service_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `service_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("service_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GoogleCloudServicebrokerV1beta1Binding.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GoogleCloudServicebrokerV1beta1Binding' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GoogleCloudServicebrokerV1beta1Binding> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GoogleCloudServicebrokerV1beta1Binding.class));

       return (TypeAdapter<T>) new TypeAdapter<GoogleCloudServicebrokerV1beta1Binding>() {
           @Override
           public void write(JsonWriter out, GoogleCloudServicebrokerV1beta1Binding value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GoogleCloudServicebrokerV1beta1Binding read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GoogleCloudServicebrokerV1beta1Binding given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GoogleCloudServicebrokerV1beta1Binding
   * @throws IOException if the JSON string is invalid with respect to GoogleCloudServicebrokerV1beta1Binding
   */
  public static GoogleCloudServicebrokerV1beta1Binding fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GoogleCloudServicebrokerV1beta1Binding.class);
  }

  /**
   * Convert an instance of GoogleCloudServicebrokerV1beta1Binding to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

