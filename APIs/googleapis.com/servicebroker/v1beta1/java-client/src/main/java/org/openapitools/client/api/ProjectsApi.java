/*
 * Service Broker
 * The Google Cloud Platform Service Broker API provides Google hosted implementation of the Open Service Broker API (https://www.openservicebrokerapi.org/). 
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1Binding;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1Broker;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1CreateBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1DeleteBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1GetBindingResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ListBindingsResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ListBrokersResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ListCatalogResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1Operation;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1ServiceInstance;
import org.openapitools.client.model.GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ProjectsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ProjectsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ProjectsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for servicebrokerProjectsBrokersCreate
     * @param parent The project in which to create broker. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param googleCloudServicebrokerV1beta1Broker  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersCreateCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, GoogleCloudServicebrokerV1beta1Broker googleCloudServicebrokerV1beta1Broker, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = googleCloudServicebrokerV1beta1Broker;

        // create path and map variables
        String localVarPath = "/v1beta1/{parent}/brokers"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersCreateValidateBeforeCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, GoogleCloudServicebrokerV1beta1Broker googleCloudServicebrokerV1beta1Broker, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersCreate(Async)");
        }

        return servicebrokerProjectsBrokersCreateCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, googleCloudServicebrokerV1beta1Broker, _callback);

    }

    /**
     * 
     * CreateBroker creates a Broker.
     * @param parent The project in which to create broker. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param googleCloudServicebrokerV1beta1Broker  (optional)
     * @return GoogleCloudServicebrokerV1beta1Broker
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1Broker servicebrokerProjectsBrokersCreate(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, GoogleCloudServicebrokerV1beta1Broker googleCloudServicebrokerV1beta1Broker) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1Broker> localVarResp = servicebrokerProjectsBrokersCreateWithHttpInfo(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, googleCloudServicebrokerV1beta1Broker);
        return localVarResp.getData();
    }

    /**
     * 
     * CreateBroker creates a Broker.
     * @param parent The project in which to create broker. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param googleCloudServicebrokerV1beta1Broker  (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1Broker&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1Broker> servicebrokerProjectsBrokersCreateWithHttpInfo(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, GoogleCloudServicebrokerV1beta1Broker googleCloudServicebrokerV1beta1Broker) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersCreateValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, googleCloudServicebrokerV1beta1Broker, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1Broker>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * CreateBroker creates a Broker.
     * @param parent The project in which to create broker. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param googleCloudServicebrokerV1beta1Broker  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersCreateAsync(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, GoogleCloudServicebrokerV1beta1Broker googleCloudServicebrokerV1beta1Broker, final ApiCallback<GoogleCloudServicebrokerV1beta1Broker> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersCreateValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, googleCloudServicebrokerV1beta1Broker, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1Broker>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersInstancesBindingsList
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; + &#x60;v2/service_instances/[INSTANCE_ID]&#x60; or &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersInstancesBindingsListCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1beta1/{parent}/bindings"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersInstancesBindingsListValidateBeforeCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersInstancesBindingsList(Async)");
        }

        return servicebrokerProjectsBrokersInstancesBindingsListCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, _callback);

    }

    /**
     * 
     * Lists all the bindings in the instance.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; + &#x60;v2/service_instances/[INSTANCE_ID]&#x60; or &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return GoogleCloudServicebrokerV1beta1ListBindingsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1ListBindingsResponse servicebrokerProjectsBrokersInstancesBindingsList(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1ListBindingsResponse> localVarResp = servicebrokerProjectsBrokersInstancesBindingsListWithHttpInfo(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the bindings in the instance.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; + &#x60;v2/service_instances/[INSTANCE_ID]&#x60; or &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1ListBindingsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1ListBindingsResponse> servicebrokerProjectsBrokersInstancesBindingsListWithHttpInfo(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersInstancesBindingsListValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1ListBindingsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the bindings in the instance.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; + &#x60;v2/service_instances/[INSTANCE_ID]&#x60; or &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/instances/[INSTANCE_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersInstancesBindingsListAsync(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback<GoogleCloudServicebrokerV1beta1ListBindingsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersInstancesBindingsListValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1ListBindingsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersInstancesList
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersInstancesListCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1beta1/{parent}/instances"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersInstancesListValidateBeforeCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersInstancesList(Async)");
        }

        return servicebrokerProjectsBrokersInstancesListCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, _callback);

    }

    /**
     * 
     * Lists all the instances in the brokers This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse servicebrokerProjectsBrokersInstancesList(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse> localVarResp = servicebrokerProjectsBrokersInstancesListWithHttpInfo(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the instances in the brokers This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse> servicebrokerProjectsBrokersInstancesListWithHttpInfo(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersInstancesListValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the instances in the brokers This API is an extension and not part of the OSB spec. Hence the path is a standard Google API URL.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersInstancesListAsync(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback<GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersInstancesListValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1ListServiceInstancesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersList
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersListCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1beta1/{parent}/brokers"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersListValidateBeforeCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersList(Async)");
        }

        return servicebrokerProjectsBrokersListCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, _callback);

    }

    /**
     * 
     * ListBrokers lists brokers.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return GoogleCloudServicebrokerV1beta1ListBrokersResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1ListBrokersResponse servicebrokerProjectsBrokersList(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1ListBrokersResponse> localVarResp = servicebrokerProjectsBrokersListWithHttpInfo(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * ListBrokers lists brokers.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1ListBrokersResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1ListBrokersResponse> servicebrokerProjectsBrokersListWithHttpInfo(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersListValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1ListBrokersResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * ListBrokers lists brokers.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. Acceptable values are 0 to 200, inclusive. (Default: 100) (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersListAsync(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback<GoogleCloudServicebrokerV1beta1ListBrokersResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersListValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1ListBrokersResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2CatalogList
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2CatalogListCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1beta1/{parent}/v2/catalog"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageToken", pageToken));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2CatalogListValidateBeforeCall(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2CatalogList(Async)");
        }

        return servicebrokerProjectsBrokersV2CatalogListCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, _callback);

    }

    /**
     * 
     * Lists all the Services registered with this broker for consumption for given service registry broker, which contains an set of services. Note, that Service producer API is separate from Broker API.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return GoogleCloudServicebrokerV1beta1ListCatalogResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1ListCatalogResponse servicebrokerProjectsBrokersV2CatalogList(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1ListCatalogResponse> localVarResp = servicebrokerProjectsBrokersV2CatalogListWithHttpInfo(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all the Services registered with this broker for consumption for given service registry broker, which contains an set of services. Note, that Service producer API is separate from Broker API.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1ListCatalogResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1ListCatalogResponse> servicebrokerProjectsBrokersV2CatalogListWithHttpInfo(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2CatalogListValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1ListCatalogResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all the Services registered with this broker for consumption for given service registry broker, which contains an set of services. Note, that Service producer API is separate from Broker API.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param pageSize Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements. Optional. If unset or 0, all the results will be returned. (optional)
     * @param pageToken Specifies a page token to use. Set &#x60;pageToken&#x60; to a &#x60;nextPageToken&#x60; returned by a previous list request to get the next page of results. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2CatalogListAsync(String parent, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Integer pageSize, String pageToken, final ApiCallback<GoogleCloudServicebrokerV1beta1ListCatalogResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2CatalogListValidateBeforeCall(parent, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, pageSize, pageToken, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1ListCatalogResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesCreate
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete Value indicating that API client supports asynchronous operations. If Broker cannot execute the request synchronously HTTP 422 code will be returned to HTTP clients along with FAILED_PRECONDITION error. If true and broker will execute request asynchronously 202 HTTP code will be returned. This broker always requires this to be true as all mutator operations are asynchronous. (optional)
     * @param googleCloudServicebrokerV1beta1ServiceInstance  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesCreateCall(String parent, String instanceId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = googleCloudServicebrokerV1beta1ServiceInstance;

        // create path and map variables
        String localVarPath = "/v1beta1/{parent}/v2/service_instances/{instance_id}"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()))
            .replace("{" + "instance_id" + "}", localVarApiClient.escapeString(instanceId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (acceptsIncomplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("acceptsIncomplete", acceptsIncomplete));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesCreateValidateBeforeCall(String parent, String instanceId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesCreate(Async)");
        }

        // verify the required parameter 'instanceId' is set
        if (instanceId == null) {
            throw new ApiException("Missing the required parameter 'instanceId' when calling servicebrokerProjectsBrokersV2ServiceInstancesCreate(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesCreateCall(parent, instanceId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance, _callback);

    }

    /**
     * 
     * Provisions a service instance. If &#x60;request.accepts_incomplete&#x60; is false and Broker cannot execute request synchronously HTTP 422 error will be returned along with FAILED_PRECONDITION status. If &#x60;request.accepts_incomplete&#x60; is true and the Broker decides to execute resource asynchronously then HTTP 202 response code will be returned and a valid polling operation in the response will be included. If Broker executes the request synchronously and it succeeds HTTP 201 response will be furnished. If identical instance exists, then HTTP 200 response will be returned. If an instance with identical ID but mismatching parameters exists, then HTTP 409 status code will be returned.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete Value indicating that API client supports asynchronous operations. If Broker cannot execute the request synchronously HTTP 422 code will be returned to HTTP clients along with FAILED_PRECONDITION error. If true and broker will execute request asynchronously 202 HTTP code will be returned. This broker always requires this to be true as all mutator operations are asynchronous. (optional)
     * @param googleCloudServicebrokerV1beta1ServiceInstance  (optional)
     * @return GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse servicebrokerProjectsBrokersV2ServiceInstancesCreate(String parent, String instanceId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesCreateWithHttpInfo(parent, instanceId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance);
        return localVarResp.getData();
    }

    /**
     * 
     * Provisions a service instance. If &#x60;request.accepts_incomplete&#x60; is false and Broker cannot execute request synchronously HTTP 422 error will be returned along with FAILED_PRECONDITION status. If &#x60;request.accepts_incomplete&#x60; is true and the Broker decides to execute resource asynchronously then HTTP 202 response code will be returned and a valid polling operation in the response will be included. If Broker executes the request synchronously and it succeeds HTTP 201 response will be furnished. If identical instance exists, then HTTP 200 response will be returned. If an instance with identical ID but mismatching parameters exists, then HTTP 409 status code will be returned.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete Value indicating that API client supports asynchronous operations. If Broker cannot execute the request synchronously HTTP 422 code will be returned to HTTP clients along with FAILED_PRECONDITION error. If true and broker will execute request asynchronously 202 HTTP code will be returned. This broker always requires this to be true as all mutator operations are asynchronous. (optional)
     * @param googleCloudServicebrokerV1beta1ServiceInstance  (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse> servicebrokerProjectsBrokersV2ServiceInstancesCreateWithHttpInfo(String parent, String instanceId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesCreateValidateBeforeCall(parent, instanceId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Provisions a service instance. If &#x60;request.accepts_incomplete&#x60; is false and Broker cannot execute request synchronously HTTP 422 error will be returned along with FAILED_PRECONDITION status. If &#x60;request.accepts_incomplete&#x60; is true and the Broker decides to execute resource asynchronously then HTTP 202 response code will be returned and a valid polling operation in the response will be included. If Broker executes the request synchronously and it succeeds HTTP 201 response will be furnished. If identical instance exists, then HTTP 200 response will be returned. If an instance with identical ID but mismatching parameters exists, then HTTP 409 status code will be returned.
     * @param parent Parent must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]&#x60;. (required)
     * @param instanceId The id of the service instance. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete Value indicating that API client supports asynchronous operations. If Broker cannot execute the request synchronously HTTP 422 code will be returned to HTTP clients along with FAILED_PRECONDITION error. If true and broker will execute request asynchronously 202 HTTP code will be returned. This broker always requires this to be true as all mutator operations are asynchronous. (optional)
     * @param googleCloudServicebrokerV1beta1ServiceInstance  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesCreateAsync(String parent, String instanceId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance, final ApiCallback<GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesCreateValidateBeforeCall(parent, instanceId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1CreateServiceInstanceResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesPatch
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1beta1ServiceInstance  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesPatchCall(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = googleCloudServicebrokerV1beta1ServiceInstance;

        // create path and map variables
        String localVarPath = "/v1beta1/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (acceptsIncomplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("acceptsIncomplete", acceptsIncomplete));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesPatchValidateBeforeCall(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling servicebrokerProjectsBrokersV2ServiceInstancesPatch(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesPatchCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance, _callback);

    }

    /**
     * 
     * Updates an existing service instance. See CreateServiceInstance for possible response codes.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1beta1ServiceInstance  (optional)
     * @return GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse servicebrokerProjectsBrokersV2ServiceInstancesPatch(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesPatchWithHttpInfo(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance);
        return localVarResp.getData();
    }

    /**
     * 
     * Updates an existing service instance. See CreateServiceInstance for possible response codes.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1beta1ServiceInstance  (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse> servicebrokerProjectsBrokersV2ServiceInstancesPatchWithHttpInfo(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesPatchValidateBeforeCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates an existing service instance. See CreateServiceInstance for possible response codes.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1beta1ServiceInstance  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesPatchAsync(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1ServiceInstance googleCloudServicebrokerV1beta1ServiceInstance, final ApiCallback<GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesPatchValidateBeforeCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1ServiceInstance, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1UpdateServiceInstanceResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate
     * @param parent The GCP container. Must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]&#x60;. (required)
     * @param bindingId The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1beta1Binding  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateCall(String parent, String bindingId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1Binding googleCloudServicebrokerV1beta1Binding, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = googleCloudServicebrokerV1beta1Binding;

        // create path and map variables
        String localVarPath = "/v1beta1/{parent}/service_bindings/{binding_id}"
            .replace("{" + "parent" + "}", localVarApiClient.escapeString(parent.toString()))
            .replace("{" + "binding_id" + "}", localVarApiClient.escapeString(bindingId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (acceptsIncomplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("acceptsIncomplete", acceptsIncomplete));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateValidateBeforeCall(String parent, String bindingId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1Binding googleCloudServicebrokerV1beta1Binding, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'parent' is set
        if (parent == null) {
            throw new ApiException("Missing the required parameter 'parent' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(Async)");
        }

        // verify the required parameter 'bindingId' is set
        if (bindingId == null) {
            throw new ApiException("Missing the required parameter 'bindingId' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateCall(parent, bindingId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1Binding, _callback);

    }

    /**
     * 
     * CreateBinding generates a service binding to an existing service instance. See ProviServiceInstance for async operation details.
     * @param parent The GCP container. Must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]&#x60;. (required)
     * @param bindingId The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1beta1Binding  (optional)
     * @return GoogleCloudServicebrokerV1beta1CreateBindingResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1CreateBindingResponse servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreate(String parent, String bindingId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1Binding googleCloudServicebrokerV1beta1Binding) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1CreateBindingResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateWithHttpInfo(parent, bindingId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1Binding);
        return localVarResp.getData();
    }

    /**
     * 
     * CreateBinding generates a service binding to an existing service instance. See ProviServiceInstance for async operation details.
     * @param parent The GCP container. Must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]&#x60;. (required)
     * @param bindingId The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1beta1Binding  (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1CreateBindingResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1CreateBindingResponse> servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateWithHttpInfo(String parent, String bindingId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1Binding googleCloudServicebrokerV1beta1Binding) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateValidateBeforeCall(parent, bindingId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1Binding, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1CreateBindingResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * CreateBinding generates a service binding to an existing service instance. See ProviServiceInstance for async operation details.
     * @param parent The GCP container. Must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]&#x60;. (required)
     * @param bindingId The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param googleCloudServicebrokerV1beta1Binding  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateAsync(String parent, String bindingId, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, GoogleCloudServicebrokerV1beta1Binding googleCloudServicebrokerV1beta1Binding, final ApiCallback<GoogleCloudServicebrokerV1beta1CreateBindingResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsCreateValidateBeforeCall(parent, bindingId, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, googleCloudServicebrokerV1beta1Binding, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1CreateBindingResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDelete
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; &#x60;v2/service_instances/[INSTANCE_ID]/service_bindings/[BINDING_ID]&#x60; or &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; &#x60;/instances/[INSTANCE_ID]/bindings/[BINDING_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param planId The plan id of the service instance. (optional)
     * @param serviceId Additional query parameter hints. The service id of the service instance. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDeleteCall(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1beta1/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (acceptsIncomplete != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("acceptsIncomplete", acceptsIncomplete));
        }

        if (planId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("planId", planId));
        }

        if (serviceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("serviceId", serviceId));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDeleteValidateBeforeCall(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDelete(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDeleteCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, planId, serviceId, _callback);

    }

    /**
     * 
     * Unbinds from a service instance. For synchronous/asynchronous request details see CreateServiceInstance method. If binding does not exist HTTP 410 status will be returned.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; &#x60;v2/service_instances/[INSTANCE_ID]/service_bindings/[BINDING_ID]&#x60; or &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; &#x60;/instances/[INSTANCE_ID]/bindings/[BINDING_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param planId The plan id of the service instance. (optional)
     * @param serviceId Additional query parameter hints. The service id of the service instance. (optional)
     * @return GoogleCloudServicebrokerV1beta1DeleteBindingResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1DeleteBindingResponse servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDelete(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, String planId, String serviceId) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1DeleteBindingResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDeleteWithHttpInfo(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, planId, serviceId);
        return localVarResp.getData();
    }

    /**
     * 
     * Unbinds from a service instance. For synchronous/asynchronous request details see CreateServiceInstance method. If binding does not exist HTTP 410 status will be returned.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; &#x60;v2/service_instances/[INSTANCE_ID]/service_bindings/[BINDING_ID]&#x60; or &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; &#x60;/instances/[INSTANCE_ID]/bindings/[BINDING_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param planId The plan id of the service instance. (optional)
     * @param serviceId Additional query parameter hints. The service id of the service instance. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1DeleteBindingResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1DeleteBindingResponse> servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDeleteWithHttpInfo(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, String planId, String serviceId) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDeleteValidateBeforeCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, planId, serviceId, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1DeleteBindingResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Unbinds from a service instance. For synchronous/asynchronous request details see CreateServiceInstance method. If binding does not exist HTTP 410 status will be returned.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; &#x60;v2/service_instances/[INSTANCE_ID]/service_bindings/[BINDING_ID]&#x60; or &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/&#x60; &#x60;/instances/[INSTANCE_ID]/bindings/[BINDING_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param acceptsIncomplete See CreateServiceInstanceRequest for details. (optional)
     * @param planId The plan id of the service instance. (optional)
     * @param serviceId Additional query parameter hints. The service id of the service instance. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDeleteAsync(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, Boolean acceptsIncomplete, String planId, String serviceId, final ApiCallback<GoogleCloudServicebrokerV1beta1DeleteBindingResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsDeleteValidateBeforeCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, acceptsIncomplete, planId, serviceId, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1DeleteBindingResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_bindings&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetCall(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1beta1/{name}"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (planId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("planId", planId));
        }

        if (serviceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("serviceId", serviceId));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetValidateBeforeCall(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, planId, serviceId, _callback);

    }

    /**
     * 
     * GetBinding returns the binding information.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_bindings&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return GoogleCloudServicebrokerV1beta1GetBindingResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1GetBindingResponse servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGet(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String planId, String serviceId) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1GetBindingResponse> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetWithHttpInfo(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, planId, serviceId);
        return localVarResp.getData();
    }

    /**
     * 
     * GetBinding returns the binding information.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_bindings&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1GetBindingResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1GetBindingResponse> servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetWithHttpInfo(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String planId, String serviceId) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetValidateBeforeCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, planId, serviceId, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1GetBindingResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * GetBinding returns the binding information.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_bindings&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetAsync(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String planId, String serviceId, final ApiCallback<GoogleCloudServicebrokerV1beta1GetBindingResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetValidateBeforeCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, planId, serviceId, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1GetBindingResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_binding/[BINDING_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationCall(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String operation, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1beta1/{name}/last_operation"
            .replace("{" + "name" + "}", localVarApiClient.escapeString(name.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (uploadType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uploadType", uploadType));
        }

        if (paramCallback != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("callback", paramCallback));
        }

        if (oauthToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("oauth_token", oauthToken));
        }

        if ($xgafv != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$.xgafv", $xgafv));
        }

        if (alt != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("alt", alt));
        }

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (uploadProtocol != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("upload_protocol", uploadProtocol));
        }

        if (quotaUser != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("quotaUser", quotaUser));
        }

        if (prettyPrint != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("prettyPrint", prettyPrint));
        }

        if (operation != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("operation", operation));
        }

        if (planId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("planId", planId));
        }

        if (serviceId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("serviceId", serviceId));
        }

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Oauth2c", "Oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationValidateBeforeCall(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String operation, String planId, String serviceId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'name' is set
        if (name == null) {
            throw new ApiException("Missing the required parameter 'name' when calling servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation(Async)");
        }

        return servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, operation, planId, serviceId, _callback);

    }

    /**
     * 
     * Returns the state of the last operation for the binding. Only last (or current) operation can be polled.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_binding/[BINDING_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return GoogleCloudServicebrokerV1beta1Operation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public GoogleCloudServicebrokerV1beta1Operation servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperation(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String operation, String planId, String serviceId) throws ApiException {
        ApiResponse<GoogleCloudServicebrokerV1beta1Operation> localVarResp = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationWithHttpInfo(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, operation, planId, serviceId);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns the state of the last operation for the binding. Only last (or current) operation can be polled.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_binding/[BINDING_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @return ApiResponse&lt;GoogleCloudServicebrokerV1beta1Operation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GoogleCloudServicebrokerV1beta1Operation> servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationWithHttpInfo(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String operation, String planId, String serviceId) throws ApiException {
        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationValidateBeforeCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, operation, planId, serviceId, null);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1Operation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns the state of the last operation for the binding. Only last (or current) operation can be polled.
     * @param name Name must match &#x60;projects/[PROJECT_ID]/brokers/[BROKER_ID]/v2/service_instances/[INSTANCE_ID]/service_binding/[BINDING_ID]&#x60;. (required)
     * @param fields Selector specifying which fields to include in a partial response. (optional)
     * @param uploadType Legacy upload protocol for media (e.g. \&quot;media\&quot;, \&quot;multipart\&quot;). (optional)
     * @param paramCallback JSONP (optional)
     * @param oauthToken OAuth 2.0 token for the current user. (optional)
     * @param $xgafv V1 error format. (optional)
     * @param alt Data format for response. (optional, default to json)
     * @param accessToken OAuth access token. (optional)
     * @param key API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. (optional)
     * @param uploadProtocol Upload protocol for media (e.g. \&quot;raw\&quot;, \&quot;multipart\&quot;). (optional)
     * @param quotaUser Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. (optional)
     * @param prettyPrint Returns response with indentations and line breaks. (optional, default to true)
     * @param operation If &#x60;operation&#x60; was returned during mutation operation, this field must be populated with the provided value. (optional)
     * @param planId Plan id. (optional)
     * @param serviceId Service id. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationAsync(String name, String fields, String uploadType, String paramCallback, String oauthToken, String $xgafv, String alt, String accessToken, String key, String uploadProtocol, String quotaUser, Boolean prettyPrint, String operation, String planId, String serviceId, final ApiCallback<GoogleCloudServicebrokerV1beta1Operation> _callback) throws ApiException {

        okhttp3.Call localVarCall = servicebrokerProjectsBrokersV2ServiceInstancesServiceBindingsGetLastOperationValidateBeforeCall(name, fields, uploadType, paramCallback, oauthToken, $xgafv, alt, accessToken, key, uploadProtocol, quotaUser, prettyPrint, operation, planId, serviceId, _callback);
        Type localVarReturnType = new TypeToken<GoogleCloudServicebrokerV1beta1Operation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
