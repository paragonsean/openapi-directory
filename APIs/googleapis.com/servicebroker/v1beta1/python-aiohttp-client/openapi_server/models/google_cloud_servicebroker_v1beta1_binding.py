# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleCloudServicebrokerV1beta1Binding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bind_resource: Dict[str, object]=None, binding_id: str=None, create_time: str=None, deployment_name: str=None, parameters: Dict[str, object]=None, plan_id: str=None, resource_name: str=None, service_id: str=None):
        """GoogleCloudServicebrokerV1beta1Binding - a model defined in OpenAPI

        :param bind_resource: The bind_resource of this GoogleCloudServicebrokerV1beta1Binding.
        :param binding_id: The binding_id of this GoogleCloudServicebrokerV1beta1Binding.
        :param create_time: The create_time of this GoogleCloudServicebrokerV1beta1Binding.
        :param deployment_name: The deployment_name of this GoogleCloudServicebrokerV1beta1Binding.
        :param parameters: The parameters of this GoogleCloudServicebrokerV1beta1Binding.
        :param plan_id: The plan_id of this GoogleCloudServicebrokerV1beta1Binding.
        :param resource_name: The resource_name of this GoogleCloudServicebrokerV1beta1Binding.
        :param service_id: The service_id of this GoogleCloudServicebrokerV1beta1Binding.
        """
        self.openapi_types = {
            'bind_resource': Dict[str, object],
            'binding_id': str,
            'create_time': str,
            'deployment_name': str,
            'parameters': Dict[str, object],
            'plan_id': str,
            'resource_name': str,
            'service_id': str
        }

        self.attribute_map = {
            'bind_resource': 'bind_resource',
            'binding_id': 'binding_id',
            'create_time': 'createTime',
            'deployment_name': 'deploymentName',
            'parameters': 'parameters',
            'plan_id': 'plan_id',
            'resource_name': 'resourceName',
            'service_id': 'service_id'
        }

        self._bind_resource = bind_resource
        self._binding_id = binding_id
        self._create_time = create_time
        self._deployment_name = deployment_name
        self._parameters = parameters
        self._plan_id = plan_id
        self._resource_name = resource_name
        self._service_id = service_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleCloudServicebrokerV1beta1Binding':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleCloudServicebrokerV1beta1__Binding of this GoogleCloudServicebrokerV1beta1Binding.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bind_resource(self):
        """Gets the bind_resource of this GoogleCloudServicebrokerV1beta1Binding.

        A JSON object that contains data for platform resources associated with the binding to be created.

        :return: The bind_resource of this GoogleCloudServicebrokerV1beta1Binding.
        :rtype: Dict[str, object]
        """
        return self._bind_resource

    @bind_resource.setter
    def bind_resource(self, bind_resource):
        """Sets the bind_resource of this GoogleCloudServicebrokerV1beta1Binding.

        A JSON object that contains data for platform resources associated with the binding to be created.

        :param bind_resource: The bind_resource of this GoogleCloudServicebrokerV1beta1Binding.
        :type bind_resource: Dict[str, object]
        """

        self._bind_resource = bind_resource

    @property
    def binding_id(self):
        """Gets the binding_id of this GoogleCloudServicebrokerV1beta1Binding.

        The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required.

        :return: The binding_id of this GoogleCloudServicebrokerV1beta1Binding.
        :rtype: str
        """
        return self._binding_id

    @binding_id.setter
    def binding_id(self, binding_id):
        """Sets the binding_id of this GoogleCloudServicebrokerV1beta1Binding.

        The id of the binding. Must be unique within GCP project. Maximum length is 64, GUID recommended. Required.

        :param binding_id: The binding_id of this GoogleCloudServicebrokerV1beta1Binding.
        :type binding_id: str
        """

        self._binding_id = binding_id

    @property
    def create_time(self):
        """Gets the create_time of this GoogleCloudServicebrokerV1beta1Binding.

        Output only. Timestamp for when the binding was created.

        :return: The create_time of this GoogleCloudServicebrokerV1beta1Binding.
        :rtype: str
        """
        return self._create_time

    @create_time.setter
    def create_time(self, create_time):
        """Sets the create_time of this GoogleCloudServicebrokerV1beta1Binding.

        Output only. Timestamp for when the binding was created.

        :param create_time: The create_time of this GoogleCloudServicebrokerV1beta1Binding.
        :type create_time: str
        """

        self._create_time = create_time

    @property
    def deployment_name(self):
        """Gets the deployment_name of this GoogleCloudServicebrokerV1beta1Binding.

        Output only. String containing the Deployment Manager deployment name that was created for this binding,

        :return: The deployment_name of this GoogleCloudServicebrokerV1beta1Binding.
        :rtype: str
        """
        return self._deployment_name

    @deployment_name.setter
    def deployment_name(self, deployment_name):
        """Sets the deployment_name of this GoogleCloudServicebrokerV1beta1Binding.

        Output only. String containing the Deployment Manager deployment name that was created for this binding,

        :param deployment_name: The deployment_name of this GoogleCloudServicebrokerV1beta1Binding.
        :type deployment_name: str
        """

        self._deployment_name = deployment_name

    @property
    def parameters(self):
        """Gets the parameters of this GoogleCloudServicebrokerV1beta1Binding.

        Configuration options for the service binding.

        :return: The parameters of this GoogleCloudServicebrokerV1beta1Binding.
        :rtype: Dict[str, object]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this GoogleCloudServicebrokerV1beta1Binding.

        Configuration options for the service binding.

        :param parameters: The parameters of this GoogleCloudServicebrokerV1beta1Binding.
        :type parameters: Dict[str, object]
        """

        self._parameters = parameters

    @property
    def plan_id(self):
        """Gets the plan_id of this GoogleCloudServicebrokerV1beta1Binding.

        The ID of the plan. See `Service` and `Plan` resources for details. Maximum length is 64, GUID recommended. Required.

        :return: The plan_id of this GoogleCloudServicebrokerV1beta1Binding.
        :rtype: str
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id):
        """Sets the plan_id of this GoogleCloudServicebrokerV1beta1Binding.

        The ID of the plan. See `Service` and `Plan` resources for details. Maximum length is 64, GUID recommended. Required.

        :param plan_id: The plan_id of this GoogleCloudServicebrokerV1beta1Binding.
        :type plan_id: str
        """

        self._plan_id = plan_id

    @property
    def resource_name(self):
        """Gets the resource_name of this GoogleCloudServicebrokerV1beta1Binding.

        Output only. The resource name of the binding, e.g. projects/project_id/brokers/broker_id/service_instances/instance_id/bindings/binding_id.

        :return: The resource_name of this GoogleCloudServicebrokerV1beta1Binding.
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this GoogleCloudServicebrokerV1beta1Binding.

        Output only. The resource name of the binding, e.g. projects/project_id/brokers/broker_id/service_instances/instance_id/bindings/binding_id.

        :param resource_name: The resource_name of this GoogleCloudServicebrokerV1beta1Binding.
        :type resource_name: str
        """

        self._resource_name = resource_name

    @property
    def service_id(self):
        """Gets the service_id of this GoogleCloudServicebrokerV1beta1Binding.

        The id of the service. Must be a valid identifier of a service contained in the list from a `ListServices()` call. Maximum length is 64, GUID recommended. Required.

        :return: The service_id of this GoogleCloudServicebrokerV1beta1Binding.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this GoogleCloudServicebrokerV1beta1Binding.

        The id of the service. Must be a valid identifier of a service contained in the list from a `ListServices()` call. Maximum length is 64, GUID recommended. Required.

        :param service_id: The service_id of this GoogleCloudServicebrokerV1beta1Binding.
        :type service_id: str
        """

        self._service_id = service_id
