/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServiceUsageApi);
  }
}(this, function(expect, ServiceUsageApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServiceUsageApi.QuotaBucket();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QuotaBucket', function() {
    it('should create an instance of QuotaBucket', function() {
      // uncomment below and update the code to test QuotaBucket
      //var instance = new ServiceUsageApi.QuotaBucket();
      //expect(instance).to.be.a(ServiceUsageApi.QuotaBucket);
    });

    it('should have the property adminOverride (base name: "adminOverride")', function() {
      // uncomment below and update the code to test the property adminOverride
      //var instance = new ServiceUsageApi.QuotaBucket();
      //expect(instance).to.be();
    });

    it('should have the property consumerOverride (base name: "consumerOverride")', function() {
      // uncomment below and update the code to test the property consumerOverride
      //var instance = new ServiceUsageApi.QuotaBucket();
      //expect(instance).to.be();
    });

    it('should have the property defaultLimit (base name: "defaultLimit")', function() {
      // uncomment below and update the code to test the property defaultLimit
      //var instance = new ServiceUsageApi.QuotaBucket();
      //expect(instance).to.be();
    });

    it('should have the property dimensions (base name: "dimensions")', function() {
      // uncomment below and update the code to test the property dimensions
      //var instance = new ServiceUsageApi.QuotaBucket();
      //expect(instance).to.be();
    });

    it('should have the property effectiveLimit (base name: "effectiveLimit")', function() {
      // uncomment below and update the code to test the property effectiveLimit
      //var instance = new ServiceUsageApi.QuotaBucket();
      //expect(instance).to.be();
    });

    it('should have the property producerOverride (base name: "producerOverride")', function() {
      // uncomment below and update the code to test the property producerOverride
      //var instance = new ServiceUsageApi.QuotaBucket();
      //expect(instance).to.be();
    });

    it('should have the property producerQuotaPolicy (base name: "producerQuotaPolicy")', function() {
      // uncomment below and update the code to test the property producerQuotaPolicy
      //var instance = new ServiceUsageApi.QuotaBucket();
      //expect(instance).to.be();
    });

  });

}));
