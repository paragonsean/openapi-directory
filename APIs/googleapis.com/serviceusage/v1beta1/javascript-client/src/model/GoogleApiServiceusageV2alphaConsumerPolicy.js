/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleApiServiceusageV2alphaEnableRule from './GoogleApiServiceusageV2alphaEnableRule';

/**
 * The GoogleApiServiceusageV2alphaConsumerPolicy model module.
 * @module model/GoogleApiServiceusageV2alphaConsumerPolicy
 * @version v1beta1
 */
class GoogleApiServiceusageV2alphaConsumerPolicy {
    /**
     * Constructs a new <code>GoogleApiServiceusageV2alphaConsumerPolicy</code>.
     * Consumer Policy is a set of rules that define what services or service groups can be used for a cloud resource hierarchy.
     * @alias module:model/GoogleApiServiceusageV2alphaConsumerPolicy
     */
    constructor() { 
        
        GoogleApiServiceusageV2alphaConsumerPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GoogleApiServiceusageV2alphaConsumerPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GoogleApiServiceusageV2alphaConsumerPolicy} obj Optional instance to populate.
     * @return {module:model/GoogleApiServiceusageV2alphaConsumerPolicy} The populated <code>GoogleApiServiceusageV2alphaConsumerPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GoogleApiServiceusageV2alphaConsumerPolicy();

            if (data.hasOwnProperty('annotations')) {
                obj['annotations'] = ApiClient.convertToType(data['annotations'], {'String': 'String'});
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'String');
            }
            if (data.hasOwnProperty('enableRules')) {
                obj['enableRules'] = ApiClient.convertToType(data['enableRules'], [GoogleApiServiceusageV2alphaEnableRule]);
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('updateTime')) {
                obj['updateTime'] = ApiClient.convertToType(data['updateTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GoogleApiServiceusageV2alphaConsumerPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GoogleApiServiceusageV2alphaConsumerPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['createTime'] && !(typeof data['createTime'] === 'string' || data['createTime'] instanceof String)) {
            throw new Error("Expected the field `createTime` to be a primitive type in the JSON string but got " + data['createTime']);
        }
        if (data['enableRules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['enableRules'])) {
                throw new Error("Expected the field `enableRules` to be an array in the JSON data but got " + data['enableRules']);
            }
            // validate the optional field `enableRules` (array)
            for (const item of data['enableRules']) {
                GoogleApiServiceusageV2alphaEnableRule.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['updateTime'] && !(typeof data['updateTime'] === 'string' || data['updateTime'] instanceof String)) {
            throw new Error("Expected the field `updateTime` to be a primitive type in the JSON string but got " + data['updateTime']);
        }

        return true;
    }


}



/**
 * Optional. Annotations is an unstructured key-value map stored with a policy that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. [AIP-128](https://google.aip.dev/128#annotations)
 * @member {Object.<String, String>} annotations
 */
GoogleApiServiceusageV2alphaConsumerPolicy.prototype['annotations'] = undefined;

/**
 * Output only. The time the policy was created. For singleton policies, this is the first touch of the policy.
 * @member {String} createTime
 */
GoogleApiServiceusageV2alphaConsumerPolicy.prototype['createTime'] = undefined;

/**
 * Enable rules define usable services, groups, and categories. There can currently be at most one `EnableRule`. This restriction will be lifted in later releases.
 * @member {Array.<module:model/GoogleApiServiceusageV2alphaEnableRule>} enableRules
 */
GoogleApiServiceusageV2alphaConsumerPolicy.prototype['enableRules'] = undefined;

/**
 * Output only. An opaque tag indicating the current version of the policy, used for concurrency control.
 * @member {String} etag
 */
GoogleApiServiceusageV2alphaConsumerPolicy.prototype['etag'] = undefined;

/**
 * Output only. The resource name of the policy. Only the `default` policy is supported: `projects/12345/consumerPolicies/default`, `folders/12345/consumerPolicies/default`, `organizations/12345/consumerPolicies/default`.
 * @member {String} name
 */
GoogleApiServiceusageV2alphaConsumerPolicy.prototype['name'] = undefined;

/**
 * Output only. The time the policy was last updated.
 * @member {String} updateTime
 */
GoogleApiServiceusageV2alphaConsumerPolicy.prototype['updateTime'] = undefined;






export default GoogleApiServiceusageV2alphaConsumerPolicy;

