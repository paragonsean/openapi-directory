/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BatchEnableServicesRequest model module.
 * @module model/BatchEnableServicesRequest
 * @version v1beta1
 */
class BatchEnableServicesRequest {
    /**
     * Constructs a new <code>BatchEnableServicesRequest</code>.
     * Request message for the &#x60;BatchEnableServices&#x60; method.
     * @alias module:model/BatchEnableServicesRequest
     */
    constructor() { 
        
        BatchEnableServicesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchEnableServicesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchEnableServicesRequest} obj Optional instance to populate.
     * @return {module:model/BatchEnableServicesRequest} The populated <code>BatchEnableServicesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchEnableServicesRequest();

            if (data.hasOwnProperty('serviceIds')) {
                obj['serviceIds'] = ApiClient.convertToType(data['serviceIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchEnableServicesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchEnableServicesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['serviceIds'])) {
            throw new Error("Expected the field `serviceIds` to be an array in the JSON data but got " + data['serviceIds']);
        }

        return true;
    }


}



/**
 * The identifiers of the services to enable on the project. A valid identifier would be: serviceusage.googleapis.com Enabling services requires that each service is public or is shared with the user enabling the service. Two or more services must be specified. To enable a single service, use the `EnableService` method instead. A single request can enable a maximum of 20 services at a time. If more than 20 services are specified, the request will fail, and no state changes will occur.
 * @member {Array.<String>} serviceIds
 */
BatchEnableServicesRequest.prototype['serviceIds'] = undefined;






export default BatchEnableServicesRequest;

