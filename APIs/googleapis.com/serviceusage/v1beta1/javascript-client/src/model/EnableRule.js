/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1beta1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EnableRule model module.
 * @module model/EnableRule
 * @version v1beta1
 */
class EnableRule {
    /**
     * Constructs a new <code>EnableRule</code>.
     * The consumer policy rule that defines usable services and service groups.
     * @alias module:model/EnableRule
     */
    constructor() { 
        
        EnableRule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EnableRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EnableRule} obj Optional instance to populate.
     * @return {module:model/EnableRule} The populated <code>EnableRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EnableRule();

            if (data.hasOwnProperty('enableType')) {
                obj['enableType'] = ApiClient.convertToType(data['enableType'], 'String');
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], ['String']);
            }
            if (data.hasOwnProperty('services')) {
                obj['services'] = ApiClient.convertToType(data['services'], ['String']);
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EnableRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EnableRule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['enableType'] && !(typeof data['enableType'] === 'string' || data['enableType'] instanceof String)) {
            throw new Error("Expected the field `enableType` to be a primitive type in the JSON string but got " + data['enableType']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['groups'])) {
            throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['services'])) {
            throw new Error("Expected the field `services` to be an array in the JSON data but got " + data['services']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['values'])) {
            throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
        }

        return true;
    }


}



/**
 * Client and resource project enable type.
 * @member {module:model/EnableRule.EnableTypeEnum} enableType
 */
EnableRule.prototype['enableType'] = undefined;

/**
 * DEPRECATED: Please use field `values`. Service group should have prefix `groups/`. The names of the service groups that are enabled (Not Implemented). Example: `groups/googleServices`.
 * @member {Array.<String>} groups
 */
EnableRule.prototype['groups'] = undefined;

/**
 * DEPRECATED: Please use field `values`. Service should have prefix `services/`. The names of the services that are enabled. Example: `storage.googleapis.com`.
 * @member {Array.<String>} services
 */
EnableRule.prototype['services'] = undefined;

/**
 * The names of the services or service groups that are enabled. Example: `services/storage.googleapis.com`, `groups/googleServices`, `groups/allServices`.
 * @member {Array.<String>} values
 */
EnableRule.prototype['values'] = undefined;





/**
 * Allowed values for the <code>enableType</code> property.
 * @enum {String}
 * @readonly
 */
EnableRule['EnableTypeEnum'] = {

    /**
     * value: "ENABLE_TYPE_UNSPECIFIED"
     * @const
     */
    "ENABLE_TYPE_UNSPECIFIED": "ENABLE_TYPE_UNSPECIFIED",

    /**
     * value: "CLIENT"
     * @const
     */
    "CLIENT": "CLIENT",

    /**
     * value: "RESOURCE"
     * @const
     */
    "RESOURCE": "RESOURCE",

    /**
     * value: "V1_COMPATIBLE"
     * @const
     */
    "V1_COMPATIBLE": "V1_COMPATIBLE"
};



export default EnableRule;

