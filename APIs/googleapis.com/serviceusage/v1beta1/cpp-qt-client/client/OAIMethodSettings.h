/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMethodSettings.h
 *
 * Describes the generator configuration for a method.
 */

#ifndef OAIMethodSettings_H
#define OAIMethodSettings_H

#include <QJsonObject>

#include "OAILongRunning.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILongRunning;

class OAIMethodSettings : public OAIObject {
public:
    OAIMethodSettings();
    OAIMethodSettings(QString json);
    ~OAIMethodSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAutoPopulatedFields() const;
    void setAutoPopulatedFields(const QList<QString> &auto_populated_fields);
    bool is_auto_populated_fields_Set() const;
    bool is_auto_populated_fields_Valid() const;

    OAILongRunning getLongRunning() const;
    void setLongRunning(const OAILongRunning &long_running);
    bool is_long_running_Set() const;
    bool is_long_running_Valid() const;

    QString getSelector() const;
    void setSelector(const QString &selector);
    bool is_selector_Set() const;
    bool is_selector_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_auto_populated_fields;
    bool m_auto_populated_fields_isSet;
    bool m_auto_populated_fields_isValid;

    OAILongRunning m_long_running;
    bool m_long_running_isSet;
    bool m_long_running_isValid;

    QString m_selector;
    bool m_selector_isSet;
    bool m_selector_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMethodSettings)

#endif // OAIMethodSettings_H
