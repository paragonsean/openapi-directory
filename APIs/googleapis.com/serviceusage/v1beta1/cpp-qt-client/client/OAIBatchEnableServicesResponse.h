/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBatchEnableServicesResponse.h
 *
 * Response message for the &#x60;BatchEnableServices&#x60; method. This response message is assigned to the &#x60;response&#x60; field of the returned Operation when that operation is done.
 */

#ifndef OAIBatchEnableServicesResponse_H
#define OAIBatchEnableServicesResponse_H

#include <QJsonObject>

#include "OAIEnableFailure.h"
#include "OAIGoogleApiServiceusageV1Service.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEnableFailure;
class OAIGoogleApiServiceusageV1Service;

class OAIBatchEnableServicesResponse : public OAIObject {
public:
    OAIBatchEnableServicesResponse();
    OAIBatchEnableServicesResponse(QString json);
    ~OAIBatchEnableServicesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEnableFailure> getFailures() const;
    void setFailures(const QList<OAIEnableFailure> &failures);
    bool is_failures_Set() const;
    bool is_failures_Valid() const;

    QList<OAIGoogleApiServiceusageV1Service> getServices() const;
    void setServices(const QList<OAIGoogleApiServiceusageV1Service> &services);
    bool is_services_Set() const;
    bool is_services_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEnableFailure> m_failures;
    bool m_failures_isSet;
    bool m_failures_isValid;

    QList<OAIGoogleApiServiceusageV1Service> m_services;
    bool m_services_isSet;
    bool m_services_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBatchEnableServicesResponse)

#endif // OAIBatchEnableServicesResponse_H
