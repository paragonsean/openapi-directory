/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDotnetSettings.h
 *
 * Settings for Dotnet client libraries.
 */

#ifndef OAIDotnetSettings_H
#define OAIDotnetSettings_H

#include <QJsonObject>

#include "OAICommonLanguageSettings.h"
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICommonLanguageSettings;

class OAIDotnetSettings : public OAIObject {
public:
    OAIDotnetSettings();
    OAIDotnetSettings(QString json);
    ~OAIDotnetSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICommonLanguageSettings getCommon() const;
    void setCommon(const OAICommonLanguageSettings &common);
    bool is_common_Set() const;
    bool is_common_Valid() const;

    QList<QString> getForcedNamespaceAliases() const;
    void setForcedNamespaceAliases(const QList<QString> &forced_namespace_aliases);
    bool is_forced_namespace_aliases_Set() const;
    bool is_forced_namespace_aliases_Valid() const;

    QList<QString> getHandwrittenSignatures() const;
    void setHandwrittenSignatures(const QList<QString> &handwritten_signatures);
    bool is_handwritten_signatures_Set() const;
    bool is_handwritten_signatures_Valid() const;

    QList<QString> getIgnoredResources() const;
    void setIgnoredResources(const QList<QString> &ignored_resources);
    bool is_ignored_resources_Set() const;
    bool is_ignored_resources_Valid() const;

    QMap<QString, QString> getRenamedResources() const;
    void setRenamedResources(const QMap<QString, QString> &renamed_resources);
    bool is_renamed_resources_Set() const;
    bool is_renamed_resources_Valid() const;

    QMap<QString, QString> getRenamedServices() const;
    void setRenamedServices(const QMap<QString, QString> &renamed_services);
    bool is_renamed_services_Set() const;
    bool is_renamed_services_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICommonLanguageSettings m_common;
    bool m_common_isSet;
    bool m_common_isValid;

    QList<QString> m_forced_namespace_aliases;
    bool m_forced_namespace_aliases_isSet;
    bool m_forced_namespace_aliases_isValid;

    QList<QString> m_handwritten_signatures;
    bool m_handwritten_signatures_isSet;
    bool m_handwritten_signatures_isValid;

    QList<QString> m_ignored_resources;
    bool m_ignored_resources_isSet;
    bool m_ignored_resources_isValid;

    QMap<QString, QString> m_renamed_resources;
    bool m_renamed_resources_isSet;
    bool m_renamed_resources_isValid;

    QMap<QString, QString> m_renamed_services;
    bool m_renamed_services_isSet;
    bool m_renamed_services_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDotnetSettings)

#endif // OAIDotnetSettings_H
