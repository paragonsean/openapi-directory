/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1beta1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceConfig.h
 *
 * The configuration of the service.
 */

#ifndef OAIServiceConfig_H
#define OAIServiceConfig_H

#include <QJsonObject>

#include "OAIApi.h"
#include "OAIAuthentication.h"
#include "OAIDocumentation.h"
#include "OAIEndpoint.h"
#include "OAIMonitoredResourceDescriptor.h"
#include "OAIMonitoring.h"
#include "OAIQuota.h"
#include "OAIUsage.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApi;
class OAIAuthentication;
class OAIDocumentation;
class OAIEndpoint;
class OAIMonitoredResourceDescriptor;
class OAIMonitoring;
class OAIQuota;
class OAIUsage;

class OAIServiceConfig : public OAIObject {
public:
    OAIServiceConfig();
    OAIServiceConfig(QString json);
    ~OAIServiceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIApi> getApis() const;
    void setApis(const QList<OAIApi> &apis);
    bool is_apis_Set() const;
    bool is_apis_Valid() const;

    OAIAuthentication getAuthentication() const;
    void setAuthentication(const OAIAuthentication &authentication);
    bool is_authentication_Set() const;
    bool is_authentication_Valid() const;

    OAIDocumentation getDocumentation() const;
    void setDocumentation(const OAIDocumentation &documentation);
    bool is_documentation_Set() const;
    bool is_documentation_Valid() const;

    QList<OAIEndpoint> getEndpoints() const;
    void setEndpoints(const QList<OAIEndpoint> &endpoints);
    bool is_endpoints_Set() const;
    bool is_endpoints_Valid() const;

    QList<OAIMonitoredResourceDescriptor> getMonitoredResources() const;
    void setMonitoredResources(const QList<OAIMonitoredResourceDescriptor> &monitored_resources);
    bool is_monitored_resources_Set() const;
    bool is_monitored_resources_Valid() const;

    OAIMonitoring getMonitoring() const;
    void setMonitoring(const OAIMonitoring &monitoring);
    bool is_monitoring_Set() const;
    bool is_monitoring_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIQuota getQuota() const;
    void setQuota(const OAIQuota &quota);
    bool is_quota_Set() const;
    bool is_quota_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    OAIUsage getUsage() const;
    void setUsage(const OAIUsage &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIApi> m_apis;
    bool m_apis_isSet;
    bool m_apis_isValid;

    OAIAuthentication m_authentication;
    bool m_authentication_isSet;
    bool m_authentication_isValid;

    OAIDocumentation m_documentation;
    bool m_documentation_isSet;
    bool m_documentation_isValid;

    QList<OAIEndpoint> m_endpoints;
    bool m_endpoints_isSet;
    bool m_endpoints_isValid;

    QList<OAIMonitoredResourceDescriptor> m_monitored_resources;
    bool m_monitored_resources_isSet;
    bool m_monitored_resources_isValid;

    OAIMonitoring m_monitoring;
    bool m_monitoring_isSet;
    bool m_monitoring_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIQuota m_quota;
    bool m_quota_isSet;
    bool m_quota_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    OAIUsage m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceConfig)

#endif // OAIServiceConfig_H
