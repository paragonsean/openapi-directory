# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_error_rule import CustomErrorRule
from openapi_server import util


class CustomError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rules: List[CustomErrorRule]=None, types: List[str]=None):
        """CustomError - a model defined in OpenAPI

        :param rules: The rules of this CustomError.
        :param types: The types of this CustomError.
        """
        self.openapi_types = {
            'rules': List[CustomErrorRule],
            'types': List[str]
        }

        self.attribute_map = {
            'rules': 'rules',
            'types': 'types'
        }

        self._rules = rules
        self._types = types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomError of this CustomError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rules(self):
        """Gets the rules of this CustomError.

        The list of custom error rules that apply to individual API messages. **NOTE:** All service configuration rules follow \"last one wins\" order.

        :return: The rules of this CustomError.
        :rtype: List[CustomErrorRule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this CustomError.

        The list of custom error rules that apply to individual API messages. **NOTE:** All service configuration rules follow \"last one wins\" order.

        :param rules: The rules of this CustomError.
        :type rules: List[CustomErrorRule]
        """

        self._rules = rules

    @property
    def types(self):
        """Gets the types of this CustomError.

        The list of custom error detail types, e.g. 'google.foo.v1.CustomError'.

        :return: The types of this CustomError.
        :rtype: List[str]
        """
        return self._types

    @types.setter
    def types(self, types):
        """Sets the types of this CustomError.

        The list of custom error detail types, e.g. 'google.foo.v1.CustomError'.

        :param types: The types of this CustomError.
        :type types: List[str]
        """

        self._types = types
