# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.usage_rule import UsageRule
from openapi_server import util


class Usage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, producer_notification_channel: str=None, requirements: List[str]=None, rules: List[UsageRule]=None):
        """Usage - a model defined in OpenAPI

        :param producer_notification_channel: The producer_notification_channel of this Usage.
        :param requirements: The requirements of this Usage.
        :param rules: The rules of this Usage.
        """
        self.openapi_types = {
            'producer_notification_channel': str,
            'requirements': List[str],
            'rules': List[UsageRule]
        }

        self.attribute_map = {
            'producer_notification_channel': 'producerNotificationChannel',
            'requirements': 'requirements',
            'rules': 'rules'
        }

        self._producer_notification_channel = producer_notification_channel
        self._requirements = requirements
        self._rules = rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Usage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Usage of this Usage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def producer_notification_channel(self):
        """Gets the producer_notification_channel of this Usage.

        The full resource name of a channel used for sending notifications to the service producer. Google Service Management currently only supports [Google Cloud Pub/Sub](https://cloud.google.com/pubsub) as a notification channel. To use Google Cloud Pub/Sub as the channel, this must be the name of a Cloud Pub/Sub topic that uses the Cloud Pub/Sub topic name format documented in https://cloud.google.com/pubsub/docs/overview.

        :return: The producer_notification_channel of this Usage.
        :rtype: str
        """
        return self._producer_notification_channel

    @producer_notification_channel.setter
    def producer_notification_channel(self, producer_notification_channel):
        """Sets the producer_notification_channel of this Usage.

        The full resource name of a channel used for sending notifications to the service producer. Google Service Management currently only supports [Google Cloud Pub/Sub](https://cloud.google.com/pubsub) as a notification channel. To use Google Cloud Pub/Sub as the channel, this must be the name of a Cloud Pub/Sub topic that uses the Cloud Pub/Sub topic name format documented in https://cloud.google.com/pubsub/docs/overview.

        :param producer_notification_channel: The producer_notification_channel of this Usage.
        :type producer_notification_channel: str
        """

        self._producer_notification_channel = producer_notification_channel

    @property
    def requirements(self):
        """Gets the requirements of this Usage.

        Requirements that must be satisfied before a consumer project can use the service. Each requirement is of the form /; for example 'serviceusage.googleapis.com/billing-enabled'. For Google APIs, a Terms of Service requirement must be included here. Google Cloud APIs must include \"serviceusage.googleapis.com/tos/cloud\". Other Google APIs should include \"serviceusage.googleapis.com/tos/universal\". Additional ToS can be included based on the business needs.

        :return: The requirements of this Usage.
        :rtype: List[str]
        """
        return self._requirements

    @requirements.setter
    def requirements(self, requirements):
        """Sets the requirements of this Usage.

        Requirements that must be satisfied before a consumer project can use the service. Each requirement is of the form /; for example 'serviceusage.googleapis.com/billing-enabled'. For Google APIs, a Terms of Service requirement must be included here. Google Cloud APIs must include \"serviceusage.googleapis.com/tos/cloud\". Other Google APIs should include \"serviceusage.googleapis.com/tos/universal\". Additional ToS can be included based on the business needs.

        :param requirements: The requirements of this Usage.
        :type requirements: List[str]
        """

        self._requirements = requirements

    @property
    def rules(self):
        """Gets the rules of this Usage.

        A list of usage rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order.

        :return: The rules of this Usage.
        :rtype: List[UsageRule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this Usage.

        A list of usage rules that apply to individual API methods. **NOTE:** All service configuration rules follow \"last one wins\" order.

        :param rules: The rules of this Usage.
        :type rules: List[UsageRule]
        """

        self._rules = rules
