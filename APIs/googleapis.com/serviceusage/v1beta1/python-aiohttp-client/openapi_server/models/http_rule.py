# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.custom_http_pattern import CustomHttpPattern
from openapi_server import util


class HttpRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_bindings: List[HttpRule]=None, body: str=None, custom: CustomHttpPattern=None, delete: str=None, get: str=None, patch: str=None, post: str=None, put: str=None, response_body: str=None, selector: str=None):
        """HttpRule - a model defined in OpenAPI

        :param additional_bindings: The additional_bindings of this HttpRule.
        :param body: The body of this HttpRule.
        :param custom: The custom of this HttpRule.
        :param delete: The delete of this HttpRule.
        :param get: The get of this HttpRule.
        :param patch: The patch of this HttpRule.
        :param post: The post of this HttpRule.
        :param put: The put of this HttpRule.
        :param response_body: The response_body of this HttpRule.
        :param selector: The selector of this HttpRule.
        """
        self.openapi_types = {
            'additional_bindings': List[HttpRule],
            'body': str,
            'custom': CustomHttpPattern,
            'delete': str,
            'get': str,
            'patch': str,
            'post': str,
            'put': str,
            'response_body': str,
            'selector': str
        }

        self.attribute_map = {
            'additional_bindings': 'additionalBindings',
            'body': 'body',
            'custom': 'custom',
            'delete': 'delete',
            'get': 'get',
            'patch': 'patch',
            'post': 'post',
            'put': 'put',
            'response_body': 'responseBody',
            'selector': 'selector'
        }

        self._additional_bindings = additional_bindings
        self._body = body
        self._custom = custom
        self._delete = delete
        self._get = get
        self._patch = patch
        self._post = post
        self._put = put
        self._response_body = response_body
        self._selector = selector

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HttpRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HttpRule of this HttpRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_bindings(self):
        """Gets the additional_bindings of this HttpRule.

        Additional HTTP bindings for the selector. Nested bindings must not contain an `additional_bindings` field themselves (that is, the nesting may only be one level deep).

        :return: The additional_bindings of this HttpRule.
        :rtype: List[HttpRule]
        """
        return self._additional_bindings

    @additional_bindings.setter
    def additional_bindings(self, additional_bindings):
        """Sets the additional_bindings of this HttpRule.

        Additional HTTP bindings for the selector. Nested bindings must not contain an `additional_bindings` field themselves (that is, the nesting may only be one level deep).

        :param additional_bindings: The additional_bindings of this HttpRule.
        :type additional_bindings: List[HttpRule]
        """

        self._additional_bindings = additional_bindings

    @property
    def body(self):
        """Gets the body of this HttpRule.

        The name of the request field whose value is mapped to the HTTP request body, or `*` for mapping all request fields not captured by the path pattern to the HTTP body, or omitted for not having any HTTP request body. NOTE: the referred field must be present at the top-level of the request message type.

        :return: The body of this HttpRule.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this HttpRule.

        The name of the request field whose value is mapped to the HTTP request body, or `*` for mapping all request fields not captured by the path pattern to the HTTP body, or omitted for not having any HTTP request body. NOTE: the referred field must be present at the top-level of the request message type.

        :param body: The body of this HttpRule.
        :type body: str
        """

        self._body = body

    @property
    def custom(self):
        """Gets the custom of this HttpRule.


        :return: The custom of this HttpRule.
        :rtype: CustomHttpPattern
        """
        return self._custom

    @custom.setter
    def custom(self, custom):
        """Sets the custom of this HttpRule.


        :param custom: The custom of this HttpRule.
        :type custom: CustomHttpPattern
        """

        self._custom = custom

    @property
    def delete(self):
        """Gets the delete of this HttpRule.

        Maps to HTTP DELETE. Used for deleting a resource.

        :return: The delete of this HttpRule.
        :rtype: str
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this HttpRule.

        Maps to HTTP DELETE. Used for deleting a resource.

        :param delete: The delete of this HttpRule.
        :type delete: str
        """

        self._delete = delete

    @property
    def get(self):
        """Gets the get of this HttpRule.

        Maps to HTTP GET. Used for listing and getting information about resources.

        :return: The get of this HttpRule.
        :rtype: str
        """
        return self._get

    @get.setter
    def get(self, get):
        """Sets the get of this HttpRule.

        Maps to HTTP GET. Used for listing and getting information about resources.

        :param get: The get of this HttpRule.
        :type get: str
        """

        self._get = get

    @property
    def patch(self):
        """Gets the patch of this HttpRule.

        Maps to HTTP PATCH. Used for updating a resource.

        :return: The patch of this HttpRule.
        :rtype: str
        """
        return self._patch

    @patch.setter
    def patch(self, patch):
        """Sets the patch of this HttpRule.

        Maps to HTTP PATCH. Used for updating a resource.

        :param patch: The patch of this HttpRule.
        :type patch: str
        """

        self._patch = patch

    @property
    def post(self):
        """Gets the post of this HttpRule.

        Maps to HTTP POST. Used for creating a resource or performing an action.

        :return: The post of this HttpRule.
        :rtype: str
        """
        return self._post

    @post.setter
    def post(self, post):
        """Sets the post of this HttpRule.

        Maps to HTTP POST. Used for creating a resource or performing an action.

        :param post: The post of this HttpRule.
        :type post: str
        """

        self._post = post

    @property
    def put(self):
        """Gets the put of this HttpRule.

        Maps to HTTP PUT. Used for replacing a resource.

        :return: The put of this HttpRule.
        :rtype: str
        """
        return self._put

    @put.setter
    def put(self, put):
        """Sets the put of this HttpRule.

        Maps to HTTP PUT. Used for replacing a resource.

        :param put: The put of this HttpRule.
        :type put: str
        """

        self._put = put

    @property
    def response_body(self):
        """Gets the response_body of this HttpRule.

        Optional. The name of the response field whose value is mapped to the HTTP response body. When omitted, the entire response message will be used as the HTTP response body. NOTE: The referred field must be present at the top-level of the response message type.

        :return: The response_body of this HttpRule.
        :rtype: str
        """
        return self._response_body

    @response_body.setter
    def response_body(self, response_body):
        """Sets the response_body of this HttpRule.

        Optional. The name of the response field whose value is mapped to the HTTP response body. When omitted, the entire response message will be used as the HTTP response body. NOTE: The referred field must be present at the top-level of the response message type.

        :param response_body: The response_body of this HttpRule.
        :type response_body: str
        """

        self._response_body = response_body

    @property
    def selector(self):
        """Gets the selector of this HttpRule.

        Selects a method to which this rule applies. Refer to selector for syntax details.

        :return: The selector of this HttpRule.
        :rtype: str
        """
        return self._selector

    @selector.setter
    def selector(self, selector):
        """Sets the selector of this HttpRule.

        Selects a method to which this rule applies. Refer to selector for syntax details.

        :param selector: The selector of this HttpRule.
        :type selector: str
        """

        self._selector = selector
