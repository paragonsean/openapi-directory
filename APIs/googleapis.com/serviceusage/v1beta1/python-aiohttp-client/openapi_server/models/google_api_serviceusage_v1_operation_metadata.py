# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleApiServiceusageV1OperationMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource_names: List[str]=None):
        """GoogleApiServiceusageV1OperationMetadata - a model defined in OpenAPI

        :param resource_names: The resource_names of this GoogleApiServiceusageV1OperationMetadata.
        """
        self.openapi_types = {
            'resource_names': List[str]
        }

        self.attribute_map = {
            'resource_names': 'resourceNames'
        }

        self._resource_names = resource_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleApiServiceusageV1OperationMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleApiServiceusageV1OperationMetadata of this GoogleApiServiceusageV1OperationMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource_names(self):
        """Gets the resource_names of this GoogleApiServiceusageV1OperationMetadata.

        The full name of the resources that this operation is directly associated with.

        :return: The resource_names of this GoogleApiServiceusageV1OperationMetadata.
        :rtype: List[str]
        """
        return self._resource_names

    @resource_names.setter
    def resource_names(self, resource_names):
        """Sets the resource_names of this GoogleApiServiceusageV1OperationMetadata.

        The full name of the resources that this operation is directly associated with.

        :param resource_names: The resource_names of this GoogleApiServiceusageV1OperationMetadata.
        :type resource_names: List[str]
        """

        self._resource_names = resource_names
