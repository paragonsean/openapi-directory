/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DisableServiceRequest model module.
 * @module model/DisableServiceRequest
 * @version v1
 */
class DisableServiceRequest {
    /**
     * Constructs a new <code>DisableServiceRequest</code>.
     * Request message for the &#x60;DisableService&#x60; method.
     * @alias module:model/DisableServiceRequest
     */
    constructor() { 
        
        DisableServiceRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DisableServiceRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DisableServiceRequest} obj Optional instance to populate.
     * @return {module:model/DisableServiceRequest} The populated <code>DisableServiceRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DisableServiceRequest();

            if (data.hasOwnProperty('checkIfServiceHasUsage')) {
                obj['checkIfServiceHasUsage'] = ApiClient.convertToType(data['checkIfServiceHasUsage'], 'String');
            }
            if (data.hasOwnProperty('disableDependentServices')) {
                obj['disableDependentServices'] = ApiClient.convertToType(data['disableDependentServices'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DisableServiceRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DisableServiceRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['checkIfServiceHasUsage'] && !(typeof data['checkIfServiceHasUsage'] === 'string' || data['checkIfServiceHasUsage'] instanceof String)) {
            throw new Error("Expected the field `checkIfServiceHasUsage` to be a primitive type in the JSON string but got " + data['checkIfServiceHasUsage']);
        }

        return true;
    }


}



/**
 * Defines the behavior for checking service usage when disabling a service.
 * @member {module:model/DisableServiceRequest.CheckIfServiceHasUsageEnum} checkIfServiceHasUsage
 */
DisableServiceRequest.prototype['checkIfServiceHasUsage'] = undefined;

/**
 * Indicates if services that are enabled and which depend on this service should also be disabled. If not set, an error will be generated if any enabled services depend on the service to be disabled. When set, the service, and any enabled services that depend on it, will be disabled together.
 * @member {Boolean} disableDependentServices
 */
DisableServiceRequest.prototype['disableDependentServices'] = undefined;





/**
 * Allowed values for the <code>checkIfServiceHasUsage</code> property.
 * @enum {String}
 * @readonly
 */
DisableServiceRequest['CheckIfServiceHasUsageEnum'] = {

    /**
     * value: "CHECK_IF_SERVICE_HAS_USAGE_UNSPECIFIED"
     * @const
     */
    "CHECK_IF_SERVICE_HAS_USAGE_UNSPECIFIED": "CHECK_IF_SERVICE_HAS_USAGE_UNSPECIFIED",

    /**
     * value: "SKIP"
     * @const
     */
    "SKIP": "SKIP",

    /**
     * value: "CHECK"
     * @const
     */
    "CHECK": "CHECK"
};



export default DisableServiceRequest;

