# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BillingDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metrics: List[str]=None, monitored_resource: str=None):
        """BillingDestination - a model defined in OpenAPI

        :param metrics: The metrics of this BillingDestination.
        :param monitored_resource: The monitored_resource of this BillingDestination.
        """
        self.openapi_types = {
            'metrics': List[str],
            'monitored_resource': str
        }

        self.attribute_map = {
            'metrics': 'metrics',
            'monitored_resource': 'monitoredResource'
        }

        self._metrics = metrics
        self._monitored_resource = monitored_resource

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillingDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BillingDestination of this BillingDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metrics(self):
        """Gets the metrics of this BillingDestination.

        Names of the metrics to report to this billing destination. Each name must be defined in Service.metrics section.

        :return: The metrics of this BillingDestination.
        :rtype: List[str]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this BillingDestination.

        Names of the metrics to report to this billing destination. Each name must be defined in Service.metrics section.

        :param metrics: The metrics of this BillingDestination.
        :type metrics: List[str]
        """

        self._metrics = metrics

    @property
    def monitored_resource(self):
        """Gets the monitored_resource of this BillingDestination.

        The monitored resource type. The type must be defined in Service.monitored_resources section.

        :return: The monitored_resource of this BillingDestination.
        :rtype: str
        """
        return self._monitored_resource

    @monitored_resource.setter
    def monitored_resource(self, monitored_resource):
        """Sets the monitored_resource of this BillingDestination.

        The monitored resource type. The type must be defined in Service.monitored_resources section.

        :param monitored_resource: The monitored_resource of this BillingDestination.
        :type monitored_resource: str
        """

        self._monitored_resource = monitored_resource
