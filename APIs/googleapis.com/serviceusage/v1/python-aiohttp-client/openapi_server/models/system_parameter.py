# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SystemParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, http_header: str=None, name: str=None, url_query_parameter: str=None):
        """SystemParameter - a model defined in OpenAPI

        :param http_header: The http_header of this SystemParameter.
        :param name: The name of this SystemParameter.
        :param url_query_parameter: The url_query_parameter of this SystemParameter.
        """
        self.openapi_types = {
            'http_header': str,
            'name': str,
            'url_query_parameter': str
        }

        self.attribute_map = {
            'http_header': 'httpHeader',
            'name': 'name',
            'url_query_parameter': 'urlQueryParameter'
        }

        self._http_header = http_header
        self._name = name
        self._url_query_parameter = url_query_parameter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SystemParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SystemParameter of this SystemParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def http_header(self):
        """Gets the http_header of this SystemParameter.

        Define the HTTP header name to use for the parameter. It is case insensitive.

        :return: The http_header of this SystemParameter.
        :rtype: str
        """
        return self._http_header

    @http_header.setter
    def http_header(self, http_header):
        """Sets the http_header of this SystemParameter.

        Define the HTTP header name to use for the parameter. It is case insensitive.

        :param http_header: The http_header of this SystemParameter.
        :type http_header: str
        """

        self._http_header = http_header

    @property
    def name(self):
        """Gets the name of this SystemParameter.

        Define the name of the parameter, such as \"api_key\" . It is case sensitive.

        :return: The name of this SystemParameter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SystemParameter.

        Define the name of the parameter, such as \"api_key\" . It is case sensitive.

        :param name: The name of this SystemParameter.
        :type name: str
        """

        self._name = name

    @property
    def url_query_parameter(self):
        """Gets the url_query_parameter of this SystemParameter.

        Define the URL query parameter name to use for the parameter. It is case sensitive.

        :return: The url_query_parameter of this SystemParameter.
        :rtype: str
        """
        return self._url_query_parameter

    @url_query_parameter.setter
    def url_query_parameter(self, url_query_parameter):
        """Sets the url_query_parameter of this SystemParameter.

        Define the URL query parameter name to use for the parameter. It is case sensitive.

        :param url_query_parameter: The url_query_parameter of this SystemParameter.
        :type url_query_parameter: str
        """

        self._url_query_parameter = url_query_parameter
