# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchEnableServicesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_ids: List[str]=None):
        """BatchEnableServicesRequest - a model defined in OpenAPI

        :param service_ids: The service_ids of this BatchEnableServicesRequest.
        """
        self.openapi_types = {
            'service_ids': List[str]
        }

        self.attribute_map = {
            'service_ids': 'serviceIds'
        }

        self._service_ids = service_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchEnableServicesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchEnableServicesRequest of this BatchEnableServicesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_ids(self):
        """Gets the service_ids of this BatchEnableServicesRequest.

        The identifiers of the services to enable on the project. A valid identifier would be: serviceusage.googleapis.com Enabling services requires that each service is public or is shared with the user enabling the service. A single request can enable a maximum of 20 services at a time. If more than 20 services are specified, the request will fail, and no state changes will occur.

        :return: The service_ids of this BatchEnableServicesRequest.
        :rtype: List[str]
        """
        return self._service_ids

    @service_ids.setter
    def service_ids(self, service_ids):
        """Sets the service_ids of this BatchEnableServicesRequest.

        The identifiers of the services to enable on the project. A valid identifier would be: serviceusage.googleapis.com Enabling services requires that each service is public or is shared with the user enabling the service. A single request can enable a maximum of 20 services at a time. If more than 20 services are specified, the request will fail, and no state changes will occur.

        :param service_ids: The service_ids of this BatchEnableServicesRequest.
        :type service_ids: List[str]
        """

        self._service_ids = service_ids
