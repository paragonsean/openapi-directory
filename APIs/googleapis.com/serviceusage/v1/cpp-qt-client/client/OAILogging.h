/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILogging.h
 *
 * Logging configuration of the service. The following example shows how to configure logs to be sent to the producer and consumer projects. In the example, the &#x60;activity_history&#x60; log is sent to both the producer and consumer projects, whereas the &#x60;purchase_history&#x60; log is only sent to the producer project. monitored_resources: - type: library.googleapis.com/branch labels: - key: /city description: The city where the library branch is located in. - key: /name description: The name of the branch. logs: - name: activity_history labels: - key: /customer_id - name: purchase_history logging: producer_destinations: - monitored_resource: library.googleapis.com/branch logs: - activity_history - purchase_history consumer_destinations: - monitored_resource: library.googleapis.com/branch logs: - activity_history
 */

#ifndef OAILogging_H
#define OAILogging_H

#include <QJsonObject>

#include "OAILoggingDestination.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILoggingDestination;

class OAILogging : public OAIObject {
public:
    OAILogging();
    OAILogging(QString json);
    ~OAILogging() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAILoggingDestination> getConsumerDestinations() const;
    void setConsumerDestinations(const QList<OAILoggingDestination> &consumer_destinations);
    bool is_consumer_destinations_Set() const;
    bool is_consumer_destinations_Valid() const;

    QList<OAILoggingDestination> getProducerDestinations() const;
    void setProducerDestinations(const QList<OAILoggingDestination> &producer_destinations);
    bool is_producer_destinations_Set() const;
    bool is_producer_destinations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAILoggingDestination> m_consumer_destinations;
    bool m_consumer_destinations_isSet;
    bool m_consumer_destinations_isValid;

    QList<OAILoggingDestination> m_producer_destinations;
    bool m_producer_destinations_isSet;
    bool m_producer_destinations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILogging)

#endif // OAILogging_H
