/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMonitoring.h
 *
 * Monitoring configuration of the service. The example below shows how to configure monitored resources and metrics for monitoring. In the example, a monitored resource and two metrics are defined. The &#x60;library.googleapis.com/book/returned_count&#x60; metric is sent to both producer and consumer projects, whereas the &#x60;library.googleapis.com/book/num_overdue&#x60; metric is only sent to the consumer project. monitored_resources: - type: library.googleapis.com/Branch display_name: \&quot;Library Branch\&quot; description: \&quot;A branch of a library.\&quot; launch_stage: GA labels: - key: resource_container description: \&quot;The Cloud container (ie. project id) for the Branch.\&quot; - key: location description: \&quot;The location of the library branch.\&quot; - key: branch_id description: \&quot;The id of the branch.\&quot; metrics: - name: library.googleapis.com/book/returned_count display_name: \&quot;Books Returned\&quot; description: \&quot;The count of books that have been returned.\&quot; launch_stage: GA metric_kind: DELTA value_type: INT64 unit: \&quot;1\&quot; labels: - key: customer_id description: \&quot;The id of the customer.\&quot; - name: library.googleapis.com/book/num_overdue display_name: \&quot;Books Overdue\&quot; description: \&quot;The current number of overdue books.\&quot; launch_stage: GA metric_kind: GAUGE value_type: INT64 unit: \&quot;1\&quot; labels: - key: customer_id description: \&quot;The id of the customer.\&quot; monitoring: producer_destinations: - monitored_resource: library.googleapis.com/Branch metrics: - library.googleapis.com/book/returned_count consumer_destinations: - monitored_resource: library.googleapis.com/Branch metrics: - library.googleapis.com/book/returned_count - library.googleapis.com/book/num_overdue
 */

#ifndef OAIMonitoring_H
#define OAIMonitoring_H

#include <QJsonObject>

#include "OAIMonitoringDestination.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMonitoringDestination;

class OAIMonitoring : public OAIObject {
public:
    OAIMonitoring();
    OAIMonitoring(QString json);
    ~OAIMonitoring() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIMonitoringDestination> getConsumerDestinations() const;
    void setConsumerDestinations(const QList<OAIMonitoringDestination> &consumer_destinations);
    bool is_consumer_destinations_Set() const;
    bool is_consumer_destinations_Valid() const;

    QList<OAIMonitoringDestination> getProducerDestinations() const;
    void setProducerDestinations(const QList<OAIMonitoringDestination> &producer_destinations);
    bool is_producer_destinations_Set() const;
    bool is_producer_destinations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIMonitoringDestination> m_consumer_destinations;
    bool m_consumer_destinations_isSet;
    bool m_consumer_destinations_isValid;

    QList<OAIMonitoringDestination> m_producer_destinations;
    bool m_producer_destinations_isSet;
    bool m_producer_destinations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMonitoring)

#endif // OAIMonitoring_H
