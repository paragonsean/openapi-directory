/**
 * Service Usage API
 * Enables services that service consumers want to use on Google Cloud Platform, lists the available or enabled services, or disables services that service consumers no longer use.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGoogleApiServiceusageV1ServiceConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGoogleApiServiceusageV1ServiceConfig::OAIGoogleApiServiceusageV1ServiceConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGoogleApiServiceusageV1ServiceConfig::OAIGoogleApiServiceusageV1ServiceConfig() {
    this->initializeModel();
}

OAIGoogleApiServiceusageV1ServiceConfig::~OAIGoogleApiServiceusageV1ServiceConfig() {}

void OAIGoogleApiServiceusageV1ServiceConfig::initializeModel() {

    m_apis_isSet = false;
    m_apis_isValid = false;

    m_authentication_isSet = false;
    m_authentication_isValid = false;

    m_documentation_isSet = false;
    m_documentation_isValid = false;

    m_endpoints_isSet = false;
    m_endpoints_isValid = false;

    m_monitored_resources_isSet = false;
    m_monitored_resources_isValid = false;

    m_monitoring_isSet = false;
    m_monitoring_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_quota_isSet = false;
    m_quota_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_usage_isSet = false;
    m_usage_isValid = false;
}

void OAIGoogleApiServiceusageV1ServiceConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGoogleApiServiceusageV1ServiceConfig::fromJsonObject(QJsonObject json) {

    m_apis_isValid = ::OpenAPI::fromJsonValue(m_apis, json[QString("apis")]);
    m_apis_isSet = !json[QString("apis")].isNull() && m_apis_isValid;

    m_authentication_isValid = ::OpenAPI::fromJsonValue(m_authentication, json[QString("authentication")]);
    m_authentication_isSet = !json[QString("authentication")].isNull() && m_authentication_isValid;

    m_documentation_isValid = ::OpenAPI::fromJsonValue(m_documentation, json[QString("documentation")]);
    m_documentation_isSet = !json[QString("documentation")].isNull() && m_documentation_isValid;

    m_endpoints_isValid = ::OpenAPI::fromJsonValue(m_endpoints, json[QString("endpoints")]);
    m_endpoints_isSet = !json[QString("endpoints")].isNull() && m_endpoints_isValid;

    m_monitored_resources_isValid = ::OpenAPI::fromJsonValue(m_monitored_resources, json[QString("monitoredResources")]);
    m_monitored_resources_isSet = !json[QString("monitoredResources")].isNull() && m_monitored_resources_isValid;

    m_monitoring_isValid = ::OpenAPI::fromJsonValue(m_monitoring, json[QString("monitoring")]);
    m_monitoring_isSet = !json[QString("monitoring")].isNull() && m_monitoring_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_quota_isValid = ::OpenAPI::fromJsonValue(m_quota, json[QString("quota")]);
    m_quota_isSet = !json[QString("quota")].isNull() && m_quota_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_usage_isValid = ::OpenAPI::fromJsonValue(m_usage, json[QString("usage")]);
    m_usage_isSet = !json[QString("usage")].isNull() && m_usage_isValid;
}

QString OAIGoogleApiServiceusageV1ServiceConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGoogleApiServiceusageV1ServiceConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_apis.size() > 0) {
        obj.insert(QString("apis"), ::OpenAPI::toJsonValue(m_apis));
    }
    if (m_authentication.isSet()) {
        obj.insert(QString("authentication"), ::OpenAPI::toJsonValue(m_authentication));
    }
    if (m_documentation.isSet()) {
        obj.insert(QString("documentation"), ::OpenAPI::toJsonValue(m_documentation));
    }
    if (m_endpoints.size() > 0) {
        obj.insert(QString("endpoints"), ::OpenAPI::toJsonValue(m_endpoints));
    }
    if (m_monitored_resources.size() > 0) {
        obj.insert(QString("monitoredResources"), ::OpenAPI::toJsonValue(m_monitored_resources));
    }
    if (m_monitoring.isSet()) {
        obj.insert(QString("monitoring"), ::OpenAPI::toJsonValue(m_monitoring));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_quota.isSet()) {
        obj.insert(QString("quota"), ::OpenAPI::toJsonValue(m_quota));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_usage.isSet()) {
        obj.insert(QString("usage"), ::OpenAPI::toJsonValue(m_usage));
    }
    return obj;
}

QList<OAIApi> OAIGoogleApiServiceusageV1ServiceConfig::getApis() const {
    return m_apis;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setApis(const QList<OAIApi> &apis) {
    m_apis = apis;
    m_apis_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_apis_Set() const{
    return m_apis_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_apis_Valid() const{
    return m_apis_isValid;
}

OAIAuthentication OAIGoogleApiServiceusageV1ServiceConfig::getAuthentication() const {
    return m_authentication;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setAuthentication(const OAIAuthentication &authentication) {
    m_authentication = authentication;
    m_authentication_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_authentication_Set() const{
    return m_authentication_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_authentication_Valid() const{
    return m_authentication_isValid;
}

OAIDocumentation OAIGoogleApiServiceusageV1ServiceConfig::getDocumentation() const {
    return m_documentation;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setDocumentation(const OAIDocumentation &documentation) {
    m_documentation = documentation;
    m_documentation_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_documentation_Set() const{
    return m_documentation_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_documentation_Valid() const{
    return m_documentation_isValid;
}

QList<OAIEndpoint> OAIGoogleApiServiceusageV1ServiceConfig::getEndpoints() const {
    return m_endpoints;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setEndpoints(const QList<OAIEndpoint> &endpoints) {
    m_endpoints = endpoints;
    m_endpoints_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_endpoints_Set() const{
    return m_endpoints_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_endpoints_Valid() const{
    return m_endpoints_isValid;
}

QList<OAIMonitoredResourceDescriptor> OAIGoogleApiServiceusageV1ServiceConfig::getMonitoredResources() const {
    return m_monitored_resources;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setMonitoredResources(const QList<OAIMonitoredResourceDescriptor> &monitored_resources) {
    m_monitored_resources = monitored_resources;
    m_monitored_resources_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_monitored_resources_Set() const{
    return m_monitored_resources_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_monitored_resources_Valid() const{
    return m_monitored_resources_isValid;
}

OAIMonitoring OAIGoogleApiServiceusageV1ServiceConfig::getMonitoring() const {
    return m_monitoring;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setMonitoring(const OAIMonitoring &monitoring) {
    m_monitoring = monitoring;
    m_monitoring_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_monitoring_Set() const{
    return m_monitoring_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_monitoring_Valid() const{
    return m_monitoring_isValid;
}

QString OAIGoogleApiServiceusageV1ServiceConfig::getName() const {
    return m_name;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_name_Valid() const{
    return m_name_isValid;
}

OAIQuota OAIGoogleApiServiceusageV1ServiceConfig::getQuota() const {
    return m_quota;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setQuota(const OAIQuota &quota) {
    m_quota = quota;
    m_quota_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_quota_Set() const{
    return m_quota_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_quota_Valid() const{
    return m_quota_isValid;
}

QString OAIGoogleApiServiceusageV1ServiceConfig::getTitle() const {
    return m_title;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_title_Set() const{
    return m_title_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_title_Valid() const{
    return m_title_isValid;
}

OAIUsage OAIGoogleApiServiceusageV1ServiceConfig::getUsage() const {
    return m_usage;
}
void OAIGoogleApiServiceusageV1ServiceConfig::setUsage(const OAIUsage &usage) {
    m_usage = usage;
    m_usage_isSet = true;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_usage_Set() const{
    return m_usage_isSet;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::is_usage_Valid() const{
    return m_usage_isValid;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_apis.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_authentication.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_documentation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoints.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitored_resources.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_monitoring.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quota.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usage.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGoogleApiServiceusageV1ServiceConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
