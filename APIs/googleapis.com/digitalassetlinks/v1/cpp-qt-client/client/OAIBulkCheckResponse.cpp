/**
 * Digital Asset Links API
 * Discovers relationships between online assets such as websites or mobile apps.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkCheckResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkCheckResponse::OAIBulkCheckResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkCheckResponse::OAIBulkCheckResponse() {
    this->initializeModel();
}

OAIBulkCheckResponse::~OAIBulkCheckResponse() {}

void OAIBulkCheckResponse::initializeModel() {

    m_bulk_error_code_isSet = false;
    m_bulk_error_code_isValid = false;

    m_check_results_isSet = false;
    m_check_results_isValid = false;
}

void OAIBulkCheckResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkCheckResponse::fromJsonObject(QJsonObject json) {

    m_bulk_error_code_isValid = ::OpenAPI::fromJsonValue(m_bulk_error_code, json[QString("bulkErrorCode")]);
    m_bulk_error_code_isSet = !json[QString("bulkErrorCode")].isNull() && m_bulk_error_code_isValid;

    m_check_results_isValid = ::OpenAPI::fromJsonValue(m_check_results, json[QString("checkResults")]);
    m_check_results_isSet = !json[QString("checkResults")].isNull() && m_check_results_isValid;
}

QString OAIBulkCheckResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkCheckResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_bulk_error_code_isSet) {
        obj.insert(QString("bulkErrorCode"), ::OpenAPI::toJsonValue(m_bulk_error_code));
    }
    if (m_check_results.size() > 0) {
        obj.insert(QString("checkResults"), ::OpenAPI::toJsonValue(m_check_results));
    }
    return obj;
}

QString OAIBulkCheckResponse::getBulkErrorCode() const {
    return m_bulk_error_code;
}
void OAIBulkCheckResponse::setBulkErrorCode(const QString &bulk_error_code) {
    m_bulk_error_code = bulk_error_code;
    m_bulk_error_code_isSet = true;
}

bool OAIBulkCheckResponse::is_bulk_error_code_Set() const{
    return m_bulk_error_code_isSet;
}

bool OAIBulkCheckResponse::is_bulk_error_code_Valid() const{
    return m_bulk_error_code_isValid;
}

QList<OAICheckResponse> OAIBulkCheckResponse::getCheckResults() const {
    return m_check_results;
}
void OAIBulkCheckResponse::setCheckResults(const QList<OAICheckResponse> &check_results) {
    m_check_results = check_results;
    m_check_results_isSet = true;
}

bool OAIBulkCheckResponse::is_check_results_Set() const{
    return m_check_results_isSet;
}

bool OAIBulkCheckResponse::is_check_results_Valid() const{
    return m_check_results_isValid;
}

bool OAIBulkCheckResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bulk_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_check_results.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkCheckResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
