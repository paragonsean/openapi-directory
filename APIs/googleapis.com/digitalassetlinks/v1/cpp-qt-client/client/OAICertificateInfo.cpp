/**
 * Digital Asset Links API
 * Discovers relationships between online assets such as websites or mobile apps.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificateInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificateInfo::OAICertificateInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificateInfo::OAICertificateInfo() {
    this->initializeModel();
}

OAICertificateInfo::~OAICertificateInfo() {}

void OAICertificateInfo::initializeModel() {

    m_sha256_fingerprint_isSet = false;
    m_sha256_fingerprint_isValid = false;
}

void OAICertificateInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICertificateInfo::fromJsonObject(QJsonObject json) {

    m_sha256_fingerprint_isValid = ::OpenAPI::fromJsonValue(m_sha256_fingerprint, json[QString("sha256Fingerprint")]);
    m_sha256_fingerprint_isSet = !json[QString("sha256Fingerprint")].isNull() && m_sha256_fingerprint_isValid;
}

QString OAICertificateInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICertificateInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_sha256_fingerprint_isSet) {
        obj.insert(QString("sha256Fingerprint"), ::OpenAPI::toJsonValue(m_sha256_fingerprint));
    }
    return obj;
}

QString OAICertificateInfo::getSha256Fingerprint() const {
    return m_sha256_fingerprint;
}
void OAICertificateInfo::setSha256Fingerprint(const QString &sha256_fingerprint) {
    m_sha256_fingerprint = sha256_fingerprint;
    m_sha256_fingerprint_isSet = true;
}

bool OAICertificateInfo::is_sha256_fingerprint_Set() const{
    return m_sha256_fingerprint_isSet;
}

bool OAICertificateInfo::is_sha256_fingerprint_Valid() const{
    return m_sha256_fingerprint_isValid;
}

bool OAICertificateInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sha256_fingerprint_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICertificateInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
