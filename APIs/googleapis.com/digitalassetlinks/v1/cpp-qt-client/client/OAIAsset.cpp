/**
 * Digital Asset Links API
 * Discovers relationships between online assets such as websites or mobile apps.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAsset.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAsset::OAIAsset(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAsset::OAIAsset() {
    this->initializeModel();
}

OAIAsset::~OAIAsset() {}

void OAIAsset::initializeModel() {

    m_android_app_isSet = false;
    m_android_app_isValid = false;

    m_web_isSet = false;
    m_web_isValid = false;
}

void OAIAsset::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAsset::fromJsonObject(QJsonObject json) {

    m_android_app_isValid = ::OpenAPI::fromJsonValue(m_android_app, json[QString("androidApp")]);
    m_android_app_isSet = !json[QString("androidApp")].isNull() && m_android_app_isValid;

    m_web_isValid = ::OpenAPI::fromJsonValue(m_web, json[QString("web")]);
    m_web_isSet = !json[QString("web")].isNull() && m_web_isValid;
}

QString OAIAsset::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAsset::asJsonObject() const {
    QJsonObject obj;
    if (m_android_app.isSet()) {
        obj.insert(QString("androidApp"), ::OpenAPI::toJsonValue(m_android_app));
    }
    if (m_web.isSet()) {
        obj.insert(QString("web"), ::OpenAPI::toJsonValue(m_web));
    }
    return obj;
}

OAIAndroidAppAsset OAIAsset::getAndroidApp() const {
    return m_android_app;
}
void OAIAsset::setAndroidApp(const OAIAndroidAppAsset &android_app) {
    m_android_app = android_app;
    m_android_app_isSet = true;
}

bool OAIAsset::is_android_app_Set() const{
    return m_android_app_isSet;
}

bool OAIAsset::is_android_app_Valid() const{
    return m_android_app_isValid;
}

OAIWebAsset OAIAsset::getWeb() const {
    return m_web;
}
void OAIAsset::setWeb(const OAIWebAsset &web) {
    m_web = web;
    m_web_isSet = true;
}

bool OAIAsset::is_web_Set() const{
    return m_web_isSet;
}

bool OAIAsset::is_web_Valid() const{
    return m_web_isValid;
}

bool OAIAsset::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_android_app.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_web.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAsset::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
