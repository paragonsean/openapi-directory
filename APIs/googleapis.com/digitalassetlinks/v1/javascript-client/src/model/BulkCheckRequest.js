/**
 * Digital Asset Links API
 * Discovers relationships between online assets such as websites or mobile apps.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Asset from './Asset';
import StatementTemplate from './StatementTemplate';

/**
 * The BulkCheckRequest model module.
 * @module model/BulkCheckRequest
 * @version v1
 */
class BulkCheckRequest {
    /**
     * Constructs a new <code>BulkCheckRequest</code>.
     * Message used to check for the existence of multiple digital asset links within a single RPC.
     * @alias module:model/BulkCheckRequest
     */
    constructor() { 
        
        BulkCheckRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BulkCheckRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BulkCheckRequest} obj Optional instance to populate.
     * @return {module:model/BulkCheckRequest} The populated <code>BulkCheckRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BulkCheckRequest();

            if (data.hasOwnProperty('allowGoogleInternalDataSources')) {
                obj['allowGoogleInternalDataSources'] = ApiClient.convertToType(data['allowGoogleInternalDataSources'], 'Boolean');
            }
            if (data.hasOwnProperty('defaultRelation')) {
                obj['defaultRelation'] = ApiClient.convertToType(data['defaultRelation'], 'String');
            }
            if (data.hasOwnProperty('defaultSource')) {
                obj['defaultSource'] = Asset.constructFromObject(data['defaultSource']);
            }
            if (data.hasOwnProperty('defaultTarget')) {
                obj['defaultTarget'] = Asset.constructFromObject(data['defaultTarget']);
            }
            if (data.hasOwnProperty('skipCacheLookup')) {
                obj['skipCacheLookup'] = ApiClient.convertToType(data['skipCacheLookup'], 'Boolean');
            }
            if (data.hasOwnProperty('statements')) {
                obj['statements'] = ApiClient.convertToType(data['statements'], [StatementTemplate]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BulkCheckRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BulkCheckRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['defaultRelation'] && !(typeof data['defaultRelation'] === 'string' || data['defaultRelation'] instanceof String)) {
            throw new Error("Expected the field `defaultRelation` to be a primitive type in the JSON string but got " + data['defaultRelation']);
        }
        // validate the optional field `defaultSource`
        if (data['defaultSource']) { // data not null
          Asset.validateJSON(data['defaultSource']);
        }
        // validate the optional field `defaultTarget`
        if (data['defaultTarget']) { // data not null
          Asset.validateJSON(data['defaultTarget']);
        }
        if (data['statements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['statements'])) {
                throw new Error("Expected the field `statements` to be an array in the JSON data but got " + data['statements']);
            }
            // validate the optional field `statements` (array)
            for (const item of data['statements']) {
                StatementTemplate.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Same configuration as in Check request, all statements checks will use same configurations.
 * @member {Boolean} allowGoogleInternalDataSources
 */
BulkCheckRequest.prototype['allowGoogleInternalDataSources'] = undefined;

/**
 * If specified, will be used in any given template statement that doesnâ€™t specify a relation.
 * @member {String} defaultRelation
 */
BulkCheckRequest.prototype['defaultRelation'] = undefined;

/**
 * @member {module:model/Asset} defaultSource
 */
BulkCheckRequest.prototype['defaultSource'] = undefined;

/**
 * @member {module:model/Asset} defaultTarget
 */
BulkCheckRequest.prototype['defaultTarget'] = undefined;

/**
 * Same configuration as in Check request, all statements checks will use same configurations.
 * @member {Boolean} skipCacheLookup
 */
BulkCheckRequest.prototype['skipCacheLookup'] = undefined;

/**
 * List of statements to check. For each statement, you can omit a field if the corresponding default_* field below was supplied. Minimum 1 statement; maximum 1,000 statements. Any additional statements will be ignored.
 * @member {Array.<module:model/StatementTemplate>} statements
 */
BulkCheckRequest.prototype['statements'] = undefined;






export default BulkCheckRequest;

