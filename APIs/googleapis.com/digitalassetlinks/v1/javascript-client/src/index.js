/**
 * Digital Asset Links API
 * Discovers relationships between online assets such as websites or mobile apps.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AndroidAppAsset from './model/AndroidAppAsset';
import Asset from './model/Asset';
import BulkCheckRequest from './model/BulkCheckRequest';
import BulkCheckResponse from './model/BulkCheckResponse';
import CertificateInfo from './model/CertificateInfo';
import CheckResponse from './model/CheckResponse';
import ListResponse from './model/ListResponse';
import Statement from './model/Statement';
import StatementTemplate from './model/StatementTemplate';
import WebAsset from './model/WebAsset';
import AssetlinksApi from './api/AssetlinksApi';
import StatementsApi from './api/StatementsApi';


/**
* Discovers relationships between online assets such as websites or mobile apps..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DigitalAssetLinksApi = require('index'); // See note below*.
* var xxxSvc = new DigitalAssetLinksApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DigitalAssetLinksApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DigitalAssetLinksApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DigitalAssetLinksApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AndroidAppAsset model constructor.
     * @property {module:model/AndroidAppAsset}
     */
    AndroidAppAsset,

    /**
     * The Asset model constructor.
     * @property {module:model/Asset}
     */
    Asset,

    /**
     * The BulkCheckRequest model constructor.
     * @property {module:model/BulkCheckRequest}
     */
    BulkCheckRequest,

    /**
     * The BulkCheckResponse model constructor.
     * @property {module:model/BulkCheckResponse}
     */
    BulkCheckResponse,

    /**
     * The CertificateInfo model constructor.
     * @property {module:model/CertificateInfo}
     */
    CertificateInfo,

    /**
     * The CheckResponse model constructor.
     * @property {module:model/CheckResponse}
     */
    CheckResponse,

    /**
     * The ListResponse model constructor.
     * @property {module:model/ListResponse}
     */
    ListResponse,

    /**
     * The Statement model constructor.
     * @property {module:model/Statement}
     */
    Statement,

    /**
     * The StatementTemplate model constructor.
     * @property {module:model/StatementTemplate}
     */
    StatementTemplate,

    /**
     * The WebAsset model constructor.
     * @property {module:model/WebAsset}
     */
    WebAsset,

    /**
    * The AssetlinksApi service constructor.
    * @property {module:api/AssetlinksApi}
    */
    AssetlinksApi,

    /**
    * The StatementsApi service constructor.
    * @property {module:api/StatementsApi}
    */
    StatementsApi
};
