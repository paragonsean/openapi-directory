openapi: 3.0.0
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Discovers relationships between online assets such as websites or mobile
    apps.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Digital Asset Links API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 7.0.4
    format: google
    url: https://digitalassetlinks.googleapis.com/$discovery/rest?version=v1
    version: v1
  x-providerName: googleapis.com
  x-serviceName: digitalassetlinks
externalDocs:
  url: https://developers.google.com/digital-asset-links/
servers:
- url: https://digitalassetlinks.googleapis.com/
tags:
- name: assetlinks
- name: statements
paths:
  /v1/assetlinks:bulkCheck:
    post:
      description: Send a bundle of statement checks in a single RPC to minimize latency
        and service load. Statements need not be all for the same source and/or target.
        We recommend using this method when you need to check more than one statement
        in a short period of time.
      operationId: digitalassetlinks_assetlinks_bulk_check
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkCheckRequest'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkCheckResponse'
          description: Successful response
      tags:
      - assetlinks
      x-openapi-router-controller: openapi_server.controllers.assetlinks_controller
      x-codegen-request-body-name: body
  /v1/assetlinks:check:
    get:
      description: "Determines whether the specified (directional) relationship exists\
        \ between the specified source and target assets. The relation describes the\
        \ intent of the link between the two assets as claimed by the source asset.\
        \ An example for such relationships is the delegation of privileges or permissions.\
        \ This command is most often used by infrastructure systems to check preconditions\
        \ for an action. For example, a client may want to know if it is OK to send\
        \ a web URL to a particular mobile app instead. The client can check for the\
        \ relevant asset link from the website to the mobile app to decide if the\
        \ operation should be allowed. A note about security: if you specify a secure\
        \ asset as the source, such as an HTTPS website or an Android app, the API\
        \ will ensure that any statements used to generate the response have been\
        \ made in a secure way by the owner of that asset. Conversely, if the source\
        \ asset is an insecure HTTP website (that is, the URL starts with `http://`\
        \ instead of `https://`), the API cannot verify its statements securely, and\
        \ it is not possible to ensure that the website's statements have not been\
        \ altered by a third party. For more information, see the [Digital Asset Links\
        \ technical design specification](https://github.com/google/digitalassetlinks/blob/master/well-known/details.md)."
      operationId: digitalassetlinks_assetlinks_check
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Query string for the relation. We identify relations with strings\
          \ of the format `/`, where `` must be one of a set of pre-defined purpose\
          \ categories, and `` is a free-form lowercase alphanumeric string that describes\
          \ the specific use case of the statement. Refer to [our API documentation](/digital-asset-links/v1/relation-strings)\
          \ for the current list of supported relations. For a query to match an asset\
          \ link, both the query's and the asset link's relation strings must match\
          \ exactly. Example: A query with relation `delegate_permission/common.handle_all_urls`\
          \ matches an asset link with relation `delegate_permission/common.handle_all_urls`."
        explode: true
        in: query
        name: relation
        required: false
        schema:
          type: string
        style: form
      - description: "The uppercase SHA-265 fingerprint of the certificate. From the\
          \ PEM certificate, it can be acquired like this: $ keytool -printcert -file\
          \ $CERTFILE | grep SHA256: SHA256: 14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:\
          \ \\ 42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 or like this: $ openssl x509\
          \ -in $CERTFILE -noout -fingerprint -sha256 SHA256 Fingerprint=14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:\
          \ \\ 16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 In this example, the\
          \ contents of this field would be `14:6D:E9:83:C5:73: 06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:\
          \ 44:E5`. If these tools are not available to you, you can convert the PEM\
          \ certificate into the DER format, compute the SHA-256 hash of that string\
          \ and represent the result as a hexstring (that is, uppercase hexadecimal\
          \ representations of each octet, separated by colons)."
        explode: true
        in: query
        name: source.androidApp.certificate.sha256Fingerprint
        required: false
        schema:
          type: string
        style: form
      - description: "Android App assets are naturally identified by their Java package\
          \ name. For example, the Google Maps app uses the package name `com.google.android.apps.maps`.\
          \ REQUIRED"
        explode: true
        in: query
        name: source.androidApp.packageName
        required: false
        schema:
          type: string
        style: form
      - description: "Web assets are identified by a URL that contains only the scheme,\
          \ hostname and port parts. The format is http[s]://[:] Hostnames must be\
          \ fully qualified: they must end in a single period (\"`.`\"). Only the\
          \ schemes \"http\" and \"https\" are currently allowed. Port numbers are\
          \ given as a decimal number, and they must be omitted if the standard port\
          \ numbers are used: 80 for http and 443 for https. We call this limited\
          \ URL the \"site\". All URLs that share the same scheme, hostname and port\
          \ are considered to be a part of the site and thus belong to the web asset.\
          \ Example: the asset with the site `https://www.google.com` contains all\
          \ these URLs: * `https://www.google.com/` * `https://www.google.com:443/`\
          \ * `https://www.google.com/foo` * `https://www.google.com/foo?bar` * `https://www.google.com/foo#bar`\
          \ * `https://user@password:www.google.com/` But it does not contain these\
          \ URLs: * `http://www.google.com/` (wrong scheme) * `https://google.com/`\
          \ (hostname does not match) * `https://www.google.com:444/` (port does not\
          \ match) REQUIRED"
        explode: true
        in: query
        name: source.web.site
        required: false
        schema:
          type: string
        style: form
      - description: "The uppercase SHA-265 fingerprint of the certificate. From the\
          \ PEM certificate, it can be acquired like this: $ keytool -printcert -file\
          \ $CERTFILE | grep SHA256: SHA256: 14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:\
          \ \\ 42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 or like this: $ openssl x509\
          \ -in $CERTFILE -noout -fingerprint -sha256 SHA256 Fingerprint=14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:\
          \ \\ 16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 In this example, the\
          \ contents of this field would be `14:6D:E9:83:C5:73: 06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:\
          \ 44:E5`. If these tools are not available to you, you can convert the PEM\
          \ certificate into the DER format, compute the SHA-256 hash of that string\
          \ and represent the result as a hexstring (that is, uppercase hexadecimal\
          \ representations of each octet, separated by colons)."
        explode: true
        in: query
        name: target.androidApp.certificate.sha256Fingerprint
        required: false
        schema:
          type: string
        style: form
      - description: "Android App assets are naturally identified by their Java package\
          \ name. For example, the Google Maps app uses the package name `com.google.android.apps.maps`.\
          \ REQUIRED"
        explode: true
        in: query
        name: target.androidApp.packageName
        required: false
        schema:
          type: string
        style: form
      - description: "Web assets are identified by a URL that contains only the scheme,\
          \ hostname and port parts. The format is http[s]://[:] Hostnames must be\
          \ fully qualified: they must end in a single period (\"`.`\"). Only the\
          \ schemes \"http\" and \"https\" are currently allowed. Port numbers are\
          \ given as a decimal number, and they must be omitted if the standard port\
          \ numbers are used: 80 for http and 443 for https. We call this limited\
          \ URL the \"site\". All URLs that share the same scheme, hostname and port\
          \ are considered to be a part of the site and thus belong to the web asset.\
          \ Example: the asset with the site `https://www.google.com` contains all\
          \ these URLs: * `https://www.google.com/` * `https://www.google.com:443/`\
          \ * `https://www.google.com/foo` * `https://www.google.com/foo?bar` * `https://www.google.com/foo#bar`\
          \ * `https://user@password:www.google.com/` But it does not contain these\
          \ URLs: * `http://www.google.com/` (wrong scheme) * `https://google.com/`\
          \ (hostname does not match) * `https://www.google.com:444/` (port does not\
          \ match) REQUIRED"
        explode: true
        in: query
        name: target.web.site
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
          description: Successful response
      tags:
      - assetlinks
      x-openapi-router-controller: openapi_server.controllers.assetlinks_controller
  /v1/statements:list:
    get:
      description: "Retrieves a list of all statements from a given source that match\
        \ the specified target and statement string. The API guarantees that all statements\
        \ with secure source assets, such as HTTPS websites or Android apps, have\
        \ been made in a secure way by the owner of those assets, as described in\
        \ the [Digital Asset Links technical design specification](https://github.com/google/digitalassetlinks/blob/master/well-known/details.md).\
        \ Specifically, you should consider that for insecure websites (that is, where\
        \ the URL starts with `http://` instead of `https://`), this guarantee cannot\
        \ be made. The `List` command is most useful in cases where the API client\
        \ wants to know all the ways in which two assets are related, or enumerate\
        \ all the relationships from a particular source asset. Example: a feature\
        \ that helps users navigate to related items. When a mobile app is running\
        \ on a device, the feature would make it easy to navigate to the corresponding\
        \ web site or Google+ profile."
      operationId: digitalassetlinks_statements_list
      parameters:
      - description: V1 error format.
        explode: true
        in: query
        name: $.xgafv
        required: false
        schema:
          enum:
          - "1"
          - "2"
          type: string
        style: form
      - description: OAuth access token.
        explode: true
        in: query
        name: access_token
        required: false
        schema:
          type: string
        style: form
      - description: Data format for response.
        explode: true
        in: query
        name: alt
        required: false
        schema:
          enum:
          - json
          - media
          - proto
          type: string
        style: form
      - description: JSONP
        explode: true
        in: query
        name: callback
        required: false
        schema:
          type: string
        style: form
      - description: Selector specifying which fields to include in a partial response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: "API key. Your API key identifies your project and provides you\
          \ with API access, quota, and reports. Required unless you provide an OAuth\
          \ 2.0 token."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: OAuth 2.0 token for the current user.
        explode: true
        in: query
        name: oauth_token
        required: false
        schema:
          type: string
        style: form
      - description: Returns response with indentations and line breaks.
        explode: true
        in: query
        name: prettyPrint
        required: false
        schema:
          type: boolean
        style: form
      - description: "Available to use for quota purposes for server-side applications.\
          \ Can be any arbitrary string assigned to a user, but should not exceed\
          \ 40 characters."
        explode: true
        in: query
        name: quotaUser
        required: false
        schema:
          type: string
        style: form
      - description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
        explode: true
        in: query
        name: upload_protocol
        required: false
        schema:
          type: string
        style: form
      - description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
          )."
        explode: true
        in: query
        name: uploadType
        required: false
        schema:
          type: string
        style: form
      - description: "Use only associations that match the specified relation. See\
          \ the [`Statement`](#Statement) message for a detailed definition of relation\
          \ strings. For a query to match a statement, one of the following must be\
          \ true: * both the query's and the statement's relation strings match exactly,\
          \ or * the query's relation string is empty or missing. Example: A query\
          \ with relation `delegate_permission/common.handle_all_urls` matches an\
          \ asset link with relation `delegate_permission/common.handle_all_urls`."
        explode: true
        in: query
        name: relation
        required: false
        schema:
          type: string
        style: form
      - description: "The uppercase SHA-265 fingerprint of the certificate. From the\
          \ PEM certificate, it can be acquired like this: $ keytool -printcert -file\
          \ $CERTFILE | grep SHA256: SHA256: 14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:\
          \ \\ 42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 or like this: $ openssl x509\
          \ -in $CERTFILE -noout -fingerprint -sha256 SHA256 Fingerprint=14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:\
          \ \\ 16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 In this example, the\
          \ contents of this field would be `14:6D:E9:83:C5:73: 06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:\
          \ 44:E5`. If these tools are not available to you, you can convert the PEM\
          \ certificate into the DER format, compute the SHA-256 hash of that string\
          \ and represent the result as a hexstring (that is, uppercase hexadecimal\
          \ representations of each octet, separated by colons)."
        explode: true
        in: query
        name: source.androidApp.certificate.sha256Fingerprint
        required: false
        schema:
          type: string
        style: form
      - description: "Android App assets are naturally identified by their Java package\
          \ name. For example, the Google Maps app uses the package name `com.google.android.apps.maps`.\
          \ REQUIRED"
        explode: true
        in: query
        name: source.androidApp.packageName
        required: false
        schema:
          type: string
        style: form
      - description: "Web assets are identified by a URL that contains only the scheme,\
          \ hostname and port parts. The format is http[s]://[:] Hostnames must be\
          \ fully qualified: they must end in a single period (\"`.`\"). Only the\
          \ schemes \"http\" and \"https\" are currently allowed. Port numbers are\
          \ given as a decimal number, and they must be omitted if the standard port\
          \ numbers are used: 80 for http and 443 for https. We call this limited\
          \ URL the \"site\". All URLs that share the same scheme, hostname and port\
          \ are considered to be a part of the site and thus belong to the web asset.\
          \ Example: the asset with the site `https://www.google.com` contains all\
          \ these URLs: * `https://www.google.com/` * `https://www.google.com:443/`\
          \ * `https://www.google.com/foo` * `https://www.google.com/foo?bar` * `https://www.google.com/foo#bar`\
          \ * `https://user@password:www.google.com/` But it does not contain these\
          \ URLs: * `http://www.google.com/` (wrong scheme) * `https://google.com/`\
          \ (hostname does not match) * `https://www.google.com:444/` (port does not\
          \ match) REQUIRED"
        explode: true
        in: query
        name: source.web.site
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse'
          description: Successful response
      tags:
      - statements
      x-openapi-router-controller: openapi_server.controllers.statements_controller
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      explode: true
      in: query
      name: $.xgafv
      required: false
      schema:
        enum:
        - "1"
        - "2"
        type: string
      style: form
    access_token:
      description: OAuth access token.
      explode: true
      in: query
      name: access_token
      required: false
      schema:
        type: string
      style: form
    alt:
      description: Data format for response.
      explode: true
      in: query
      name: alt
      required: false
      schema:
        enum:
        - json
        - media
        - proto
        type: string
      style: form
    callback:
      description: JSONP
      explode: true
      in: query
      name: callback
      required: false
      schema:
        type: string
      style: form
    fields:
      description: Selector specifying which fields to include in a partial response.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        type: string
      style: form
    key:
      description: "API key. Your API key identifies your project and provides you\
        \ with API access, quota, and reports. Required unless you provide an OAuth\
        \ 2.0 token."
      explode: true
      in: query
      name: key
      required: false
      schema:
        type: string
      style: form
    oauth_token:
      description: OAuth 2.0 token for the current user.
      explode: true
      in: query
      name: oauth_token
      required: false
      schema:
        type: string
      style: form
    prettyPrint:
      description: Returns response with indentations and line breaks.
      explode: true
      in: query
      name: prettyPrint
      required: false
      schema:
        type: boolean
      style: form
    quotaUser:
      description: "Available to use for quota purposes for server-side applications.\
        \ Can be any arbitrary string assigned to a user, but should not exceed 40\
        \ characters."
      explode: true
      in: query
      name: quotaUser
      required: false
      schema:
        type: string
      style: form
    uploadType:
      description: "Legacy upload protocol for media (e.g. \"media\", \"multipart\"\
        )."
      explode: true
      in: query
      name: uploadType
      required: false
      schema:
        type: string
      style: form
    upload_protocol:
      description: "Upload protocol for media (e.g. \"raw\", \"multipart\")."
      explode: true
      in: query
      name: upload_protocol
      required: false
      schema:
        type: string
      style: form
  schemas:
    AndroidAppAsset:
      description: Describes an android app asset.
      example:
        certificate:
          sha256Fingerprint: sha256Fingerprint
        packageName: packageName
      properties:
        certificate:
          $ref: '#/components/schemas/CertificateInfo'
        packageName:
          description: "Android App assets are naturally identified by their Java\
            \ package name. For example, the Google Maps app uses the package name\
            \ `com.google.android.apps.maps`. REQUIRED"
          title: packageName
          type: string
      title: AndroidAppAsset
      type: object
    Asset:
      description: "Uniquely identifies an asset. A digital asset is an identifiable\
        \ and addressable online entity that typically provides some service or content.\
        \ Examples of assets are websites, Android apps, Twitter feeds, and Plus Pages."
      example:
        androidApp:
          certificate:
            sha256Fingerprint: sha256Fingerprint
          packageName: packageName
        web:
          site: site
      properties:
        androidApp:
          $ref: '#/components/schemas/AndroidAppAsset'
        web:
          $ref: '#/components/schemas/WebAsset'
      title: Asset
      type: object
    BulkCheckRequest:
      description: Message used to check for the existence of multiple digital asset
        links within a single RPC.
      example:
        allowGoogleInternalDataSources: true
        defaultRelation: defaultRelation
        defaultTarget:
          androidApp:
            certificate:
              sha256Fingerprint: sha256Fingerprint
            packageName: packageName
          web:
            site: site
        skipCacheLookup: true
        defaultSource:
          androidApp:
            certificate:
              sha256Fingerprint: sha256Fingerprint
            packageName: packageName
          web:
            site: site
        statements:
        - source:
            androidApp:
              certificate:
                sha256Fingerprint: sha256Fingerprint
              packageName: packageName
            web:
              site: site
          relation: relation
          target:
            androidApp:
              certificate:
                sha256Fingerprint: sha256Fingerprint
              packageName: packageName
            web:
              site: site
        - source:
            androidApp:
              certificate:
                sha256Fingerprint: sha256Fingerprint
              packageName: packageName
            web:
              site: site
          relation: relation
          target:
            androidApp:
              certificate:
                sha256Fingerprint: sha256Fingerprint
              packageName: packageName
            web:
              site: site
      properties:
        allowGoogleInternalDataSources:
          description: "Same configuration as in Check request, all statements checks\
            \ will use same configurations."
          title: allowGoogleInternalDataSources
          type: boolean
        defaultRelation:
          description: "If specified, will be used in any given template statement\
            \ that doesn’t specify a relation."
          title: defaultRelation
          type: string
        defaultSource:
          $ref: '#/components/schemas/Asset'
        defaultTarget:
          $ref: '#/components/schemas/Asset'
        skipCacheLookup:
          description: "Same configuration as in Check request, all statements checks\
            \ will use same configurations."
          title: skipCacheLookup
          type: boolean
        statements:
          description: "List of statements to check. For each statement, you can omit\
            \ a field if the corresponding default_* field below was supplied. Minimum\
            \ 1 statement; maximum 1,000 statements. Any additional statements will\
            \ be ignored."
          items:
            $ref: '#/components/schemas/StatementTemplate'
          title: statements
          type: array
      title: BulkCheckRequest
      type: object
    BulkCheckResponse:
      description: "Response for BulkCheck call. Results are sent in a list in the\
        \ same order in which they were sent. Individual check errors are described\
        \ in the appropriate check_results entry. If the entire call fails, the response\
        \ will include a bulk_error_code field describing the error."
      example:
        checkResults:
        - debugString: debugString
          maxAge: maxAge
          errorCode:
          - ERROR_CODE_UNSPECIFIED
          - ERROR_CODE_UNSPECIFIED
          linked: true
        - debugString: debugString
          maxAge: maxAge
          errorCode:
          - ERROR_CODE_UNSPECIFIED
          - ERROR_CODE_UNSPECIFIED
          linked: true
        bulkErrorCode: ERROR_CODE_UNSPECIFIED
      properties:
        bulkErrorCode:
          description: Error code for the entire request. Present only if the entire
            request failed. Individual check errors will not trigger the presence
            of this field.
          enum:
          - ERROR_CODE_UNSPECIFIED
          - ERROR_CODE_INVALID_QUERY
          - ERROR_CODE_FETCH_ERROR
          - ERROR_CODE_FAILED_SSL_VALIDATION
          - ERROR_CODE_REDIRECT
          - ERROR_CODE_TOO_LARGE
          - ERROR_CODE_MALFORMED_HTTP_RESPONSE
          - ERROR_CODE_WRONG_CONTENT_TYPE
          - ERROR_CODE_MALFORMED_CONTENT
          - ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE
          - ERROR_CODE_FETCH_BUDGET_EXHAUSTED
          title: bulkErrorCode
          type: string
        checkResults:
          description: List of results for each check request. Results are returned
            in the same order in which they were sent in the request.
          items:
            $ref: '#/components/schemas/CheckResponse'
          title: checkResults
          type: array
      title: BulkCheckResponse
      type: object
    CertificateInfo:
      description: Describes an X509 certificate.
      example:
        sha256Fingerprint: sha256Fingerprint
      properties:
        sha256Fingerprint:
          description: "The uppercase SHA-265 fingerprint of the certificate. From\
            \ the PEM certificate, it can be acquired like this: $ keytool -printcert\
            \ -file $CERTFILE | grep SHA256: SHA256: 14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:\
            \ \\ 42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 or like this: $ openssl x509\
            \ -in $CERTFILE -noout -fingerprint -sha256 SHA256 Fingerprint=14:6D:E9:83:C5:73:06:50:D8:EE:B9:95:2F:34:FC:64:\
            \ \\ 16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:44:E5 In this example,\
            \ the contents of this field would be `14:6D:E9:83:C5:73: 06:50:D8:EE:B9:95:2F:34:FC:64:16:A0:83:42:E6:1D:BE:A8:8A:04:96:B2:3F:CF:\
            \ 44:E5`. If these tools are not available to you, you can convert the\
            \ PEM certificate into the DER format, compute the SHA-256 hash of that\
            \ string and represent the result as a hexstring (that is, uppercase hexadecimal\
            \ representations of each octet, separated by colons)."
          title: sha256Fingerprint
          type: string
      title: CertificateInfo
      type: object
    CheckResponse:
      description: Response message for the CheckAssetLinks call.
      example:
        debugString: debugString
        maxAge: maxAge
        errorCode:
        - ERROR_CODE_UNSPECIFIED
        - ERROR_CODE_UNSPECIFIED
        linked: true
      properties:
        debugString:
          description: "Human-readable message containing information intended to\
            \ help end users understand, reproduce and debug the result. The message\
            \ will be in English and we are currently not planning to offer any translations.\
            \ Please note that no guarantees are made about the contents or format\
            \ of this string. Any aspect of it may be subject to change without notice.\
            \ You should not attempt to programmatically parse this data. For programmatic\
            \ access, use the error_code field below."
          title: debugString
          type: string
        errorCode:
          description: Error codes that describe the result of the Check operation.
          items:
            enum:
            - ERROR_CODE_UNSPECIFIED
            - ERROR_CODE_INVALID_QUERY
            - ERROR_CODE_FETCH_ERROR
            - ERROR_CODE_FAILED_SSL_VALIDATION
            - ERROR_CODE_REDIRECT
            - ERROR_CODE_TOO_LARGE
            - ERROR_CODE_MALFORMED_HTTP_RESPONSE
            - ERROR_CODE_WRONG_CONTENT_TYPE
            - ERROR_CODE_MALFORMED_CONTENT
            - ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE
            - ERROR_CODE_FETCH_BUDGET_EXHAUSTED
            type: string
          title: errorCode
          type: array
        linked:
          description: Set to true if the assets specified in the request are linked
            by the relation specified in the request.
          title: linked
          type: boolean
        maxAge:
          description: "From serving time, how much longer the response should be\
            \ considered valid barring further updates. REQUIRED"
          format: google-duration
          title: maxAge
          type: string
      title: CheckResponse
      type: object
    ListResponse:
      description: Response message for the List call.
      example:
        debugString: debugString
        maxAge: maxAge
        errorCode:
        - ERROR_CODE_UNSPECIFIED
        - ERROR_CODE_UNSPECIFIED
        statements:
        - source:
            androidApp:
              certificate:
                sha256Fingerprint: sha256Fingerprint
              packageName: packageName
            web:
              site: site
          relation: relation
          target:
            androidApp:
              certificate:
                sha256Fingerprint: sha256Fingerprint
              packageName: packageName
            web:
              site: site
        - source:
            androidApp:
              certificate:
                sha256Fingerprint: sha256Fingerprint
              packageName: packageName
            web:
              site: site
          relation: relation
          target:
            androidApp:
              certificate:
                sha256Fingerprint: sha256Fingerprint
              packageName: packageName
            web:
              site: site
      properties:
        debugString:
          description: "Human-readable message containing information intended to\
            \ help end users understand, reproduce and debug the result. The message\
            \ will be in English and we are currently not planning to offer any translations.\
            \ Please note that no guarantees are made about the contents or format\
            \ of this string. Any aspect of it may be subject to change without notice.\
            \ You should not attempt to programmatically parse this data. For programmatic\
            \ access, use the error_code field below."
          title: debugString
          type: string
        errorCode:
          description: Error codes that describe the result of the List operation.
          items:
            enum:
            - ERROR_CODE_UNSPECIFIED
            - ERROR_CODE_INVALID_QUERY
            - ERROR_CODE_FETCH_ERROR
            - ERROR_CODE_FAILED_SSL_VALIDATION
            - ERROR_CODE_REDIRECT
            - ERROR_CODE_TOO_LARGE
            - ERROR_CODE_MALFORMED_HTTP_RESPONSE
            - ERROR_CODE_WRONG_CONTENT_TYPE
            - ERROR_CODE_MALFORMED_CONTENT
            - ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE
            - ERROR_CODE_FETCH_BUDGET_EXHAUSTED
            type: string
          title: errorCode
          type: array
        maxAge:
          description: "From serving time, how much longer the response should be\
            \ considered valid barring further updates. REQUIRED"
          format: google-duration
          title: maxAge
          type: string
        statements:
          description: A list of all the matching statements that have been found.
          items:
            $ref: '#/components/schemas/Statement'
          title: statements
          type: array
      title: ListResponse
      type: object
    Statement:
      description: "Describes a reliable statement that has been made about the relationship\
        \ between a source asset and a target asset. Statements are always made by\
        \ the source asset, either directly or by delegating to a statement list that\
        \ is stored elsewhere. For more detailed definitions of statements and assets,\
        \ please refer to our [API documentation landing page](/digital-asset-links/v1/getting-started)."
      example:
        source:
          androidApp:
            certificate:
              sha256Fingerprint: sha256Fingerprint
            packageName: packageName
          web:
            site: site
        relation: relation
        target:
          androidApp:
            certificate:
              sha256Fingerprint: sha256Fingerprint
            packageName: packageName
          web:
            site: site
      properties:
        relation:
          description: "The relation identifies the use of the statement as intended\
            \ by the source asset's owner (that is, the person or entity who issued\
            \ the statement). Every complete statement has a relation. We identify\
            \ relations with strings of the format `/`, where `` must be one of a\
            \ set of pre-defined purpose categories, and `` is a free-form lowercase\
            \ alphanumeric string that describes the specific use case of the statement.\
            \ Refer to [our API documentation](/digital-asset-links/v1/relation-strings)\
            \ for the current list of supported relations. Example: `delegate_permission/common.handle_all_urls`\
            \ REQUIRED"
          title: relation
          type: string
        source:
          $ref: '#/components/schemas/Asset'
        target:
          $ref: '#/components/schemas/Asset'
      title: Statement
      type: object
    StatementTemplate:
      description: A single statement to check in a bulk call using BulkCheck. See
        CheckRequest for details about each field.
      example:
        source:
          androidApp:
            certificate:
              sha256Fingerprint: sha256Fingerprint
            packageName: packageName
          web:
            site: site
        relation: relation
        target:
          androidApp:
            certificate:
              sha256Fingerprint: sha256Fingerprint
            packageName: packageName
          web:
            site: site
      properties:
        relation:
          description: "The relationship being asserted between the source and target.\
            \ If omitted, you must specify a BulkCheckRequest.default_relation value\
            \ to use here."
          title: relation
          type: string
        source:
          $ref: '#/components/schemas/Asset'
        target:
          $ref: '#/components/schemas/Asset'
      title: StatementTemplate
      type: object
    WebAsset:
      description: Describes a web asset.
      example:
        site: site
      properties:
        site:
          description: "Web assets are identified by a URL that contains only the\
            \ scheme, hostname and port parts. The format is http[s]://[:] Hostnames\
            \ must be fully qualified: they must end in a single period (\"`.`\").\
            \ Only the schemes \"http\" and \"https\" are currently allowed. Port\
            \ numbers are given as a decimal number, and they must be omitted if the\
            \ standard port numbers are used: 80 for http and 443 for https. We call\
            \ this limited URL the \"site\". All URLs that share the same scheme,\
            \ hostname and port are considered to be a part of the site and thus belong\
            \ to the web asset. Example: the asset with the site `https://www.google.com`\
            \ contains all these URLs: * `https://www.google.com/` * `https://www.google.com:443/`\
            \ * `https://www.google.com/foo` * `https://www.google.com/foo?bar` *\
            \ `https://www.google.com/foo#bar` * `https://user@password:www.google.com/`\
            \ But it does not contain these URLs: * `http://www.google.com/` (wrong\
            \ scheme) * `https://google.com/` (hostname does not match) * `https://www.google.com:444/`\
            \ (port does not match) REQUIRED"
          title: site
          type: string
      title: WebAsset
      type: object
