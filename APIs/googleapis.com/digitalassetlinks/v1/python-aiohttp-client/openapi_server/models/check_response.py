# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CheckResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, debug_string: str=None, error_code: List[str]=None, linked: bool=None, max_age: str=None):
        """CheckResponse - a model defined in OpenAPI

        :param debug_string: The debug_string of this CheckResponse.
        :param error_code: The error_code of this CheckResponse.
        :param linked: The linked of this CheckResponse.
        :param max_age: The max_age of this CheckResponse.
        """
        self.openapi_types = {
            'debug_string': str,
            'error_code': List[str],
            'linked': bool,
            'max_age': str
        }

        self.attribute_map = {
            'debug_string': 'debugString',
            'error_code': 'errorCode',
            'linked': 'linked',
            'max_age': 'maxAge'
        }

        self._debug_string = debug_string
        self._error_code = error_code
        self._linked = linked
        self._max_age = max_age

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CheckResponse of this CheckResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def debug_string(self):
        """Gets the debug_string of this CheckResponse.

        Human-readable message containing information intended to help end users understand, reproduce and debug the result. The message will be in English and we are currently not planning to offer any translations. Please note that no guarantees are made about the contents or format of this string. Any aspect of it may be subject to change without notice. You should not attempt to programmatically parse this data. For programmatic access, use the error_code field below.

        :return: The debug_string of this CheckResponse.
        :rtype: str
        """
        return self._debug_string

    @debug_string.setter
    def debug_string(self, debug_string):
        """Sets the debug_string of this CheckResponse.

        Human-readable message containing information intended to help end users understand, reproduce and debug the result. The message will be in English and we are currently not planning to offer any translations. Please note that no guarantees are made about the contents or format of this string. Any aspect of it may be subject to change without notice. You should not attempt to programmatically parse this data. For programmatic access, use the error_code field below.

        :param debug_string: The debug_string of this CheckResponse.
        :type debug_string: str
        """

        self._debug_string = debug_string

    @property
    def error_code(self):
        """Gets the error_code of this CheckResponse.

        Error codes that describe the result of the Check operation.

        :return: The error_code of this CheckResponse.
        :rtype: List[str]
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this CheckResponse.

        Error codes that describe the result of the Check operation.

        :param error_code: The error_code of this CheckResponse.
        :type error_code: List[str]
        """
        allowed_values = ["ERROR_CODE_UNSPECIFIED", "ERROR_CODE_INVALID_QUERY", "ERROR_CODE_FETCH_ERROR", "ERROR_CODE_FAILED_SSL_VALIDATION", "ERROR_CODE_REDIRECT", "ERROR_CODE_TOO_LARGE", "ERROR_CODE_MALFORMED_HTTP_RESPONSE", "ERROR_CODE_WRONG_CONTENT_TYPE", "ERROR_CODE_MALFORMED_CONTENT", "ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE", "ERROR_CODE_FETCH_BUDGET_EXHAUSTED"]  # noqa: E501
        if not set(error_code).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `error_code` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(error_code) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._error_code = error_code

    @property
    def linked(self):
        """Gets the linked of this CheckResponse.

        Set to true if the assets specified in the request are linked by the relation specified in the request.

        :return: The linked of this CheckResponse.
        :rtype: bool
        """
        return self._linked

    @linked.setter
    def linked(self, linked):
        """Sets the linked of this CheckResponse.

        Set to true if the assets specified in the request are linked by the relation specified in the request.

        :param linked: The linked of this CheckResponse.
        :type linked: bool
        """

        self._linked = linked

    @property
    def max_age(self):
        """Gets the max_age of this CheckResponse.

        From serving time, how much longer the response should be considered valid barring further updates. REQUIRED

        :return: The max_age of this CheckResponse.
        :rtype: str
        """
        return self._max_age

    @max_age.setter
    def max_age(self, max_age):
        """Sets the max_age of this CheckResponse.

        From serving time, how much longer the response should be considered valid barring further updates. REQUIRED

        :param max_age: The max_age of this CheckResponse.
        :type max_age: str
        """

        self._max_age = max_age
