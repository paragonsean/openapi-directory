# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.check_response import CheckResponse
from openapi_server import util


class BulkCheckResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bulk_error_code: str=None, check_results: List[CheckResponse]=None):
        """BulkCheckResponse - a model defined in OpenAPI

        :param bulk_error_code: The bulk_error_code of this BulkCheckResponse.
        :param check_results: The check_results of this BulkCheckResponse.
        """
        self.openapi_types = {
            'bulk_error_code': str,
            'check_results': List[CheckResponse]
        }

        self.attribute_map = {
            'bulk_error_code': 'bulkErrorCode',
            'check_results': 'checkResults'
        }

        self._bulk_error_code = bulk_error_code
        self._check_results = check_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkCheckResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkCheckResponse of this BulkCheckResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bulk_error_code(self):
        """Gets the bulk_error_code of this BulkCheckResponse.

        Error code for the entire request. Present only if the entire request failed. Individual check errors will not trigger the presence of this field.

        :return: The bulk_error_code of this BulkCheckResponse.
        :rtype: str
        """
        return self._bulk_error_code

    @bulk_error_code.setter
    def bulk_error_code(self, bulk_error_code):
        """Sets the bulk_error_code of this BulkCheckResponse.

        Error code for the entire request. Present only if the entire request failed. Individual check errors will not trigger the presence of this field.

        :param bulk_error_code: The bulk_error_code of this BulkCheckResponse.
        :type bulk_error_code: str
        """
        allowed_values = ["ERROR_CODE_UNSPECIFIED", "ERROR_CODE_INVALID_QUERY", "ERROR_CODE_FETCH_ERROR", "ERROR_CODE_FAILED_SSL_VALIDATION", "ERROR_CODE_REDIRECT", "ERROR_CODE_TOO_LARGE", "ERROR_CODE_MALFORMED_HTTP_RESPONSE", "ERROR_CODE_WRONG_CONTENT_TYPE", "ERROR_CODE_MALFORMED_CONTENT", "ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE", "ERROR_CODE_FETCH_BUDGET_EXHAUSTED"]  # noqa: E501
        if bulk_error_code not in allowed_values:
            raise ValueError(
                "Invalid value for `bulk_error_code` ({0}), must be one of {1}"
                .format(bulk_error_code, allowed_values)
            )

        self._bulk_error_code = bulk_error_code

    @property
    def check_results(self):
        """Gets the check_results of this BulkCheckResponse.

        List of results for each check request. Results are returned in the same order in which they were sent in the request.

        :return: The check_results of this BulkCheckResponse.
        :rtype: List[CheckResponse]
        """
        return self._check_results

    @check_results.setter
    def check_results(self, check_results):
        """Sets the check_results of this BulkCheckResponse.

        List of results for each check request. Results are returned in the same order in which they were sent in the request.

        :param check_results: The check_results of this BulkCheckResponse.
        :type check_results: List[CheckResponse]
        """

        self._check_results = check_results
