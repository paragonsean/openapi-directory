# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset import Asset
from openapi_server.models.statement_template import StatementTemplate
from openapi_server import util


class BulkCheckRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_google_internal_data_sources: bool=None, default_relation: str=None, default_source: Asset=None, default_target: Asset=None, skip_cache_lookup: bool=None, statements: List[StatementTemplate]=None):
        """BulkCheckRequest - a model defined in OpenAPI

        :param allow_google_internal_data_sources: The allow_google_internal_data_sources of this BulkCheckRequest.
        :param default_relation: The default_relation of this BulkCheckRequest.
        :param default_source: The default_source of this BulkCheckRequest.
        :param default_target: The default_target of this BulkCheckRequest.
        :param skip_cache_lookup: The skip_cache_lookup of this BulkCheckRequest.
        :param statements: The statements of this BulkCheckRequest.
        """
        self.openapi_types = {
            'allow_google_internal_data_sources': bool,
            'default_relation': str,
            'default_source': Asset,
            'default_target': Asset,
            'skip_cache_lookup': bool,
            'statements': List[StatementTemplate]
        }

        self.attribute_map = {
            'allow_google_internal_data_sources': 'allowGoogleInternalDataSources',
            'default_relation': 'defaultRelation',
            'default_source': 'defaultSource',
            'default_target': 'defaultTarget',
            'skip_cache_lookup': 'skipCacheLookup',
            'statements': 'statements'
        }

        self._allow_google_internal_data_sources = allow_google_internal_data_sources
        self._default_relation = default_relation
        self._default_source = default_source
        self._default_target = default_target
        self._skip_cache_lookup = skip_cache_lookup
        self._statements = statements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkCheckRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkCheckRequest of this BulkCheckRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_google_internal_data_sources(self):
        """Gets the allow_google_internal_data_sources of this BulkCheckRequest.

        Same configuration as in Check request, all statements checks will use same configurations.

        :return: The allow_google_internal_data_sources of this BulkCheckRequest.
        :rtype: bool
        """
        return self._allow_google_internal_data_sources

    @allow_google_internal_data_sources.setter
    def allow_google_internal_data_sources(self, allow_google_internal_data_sources):
        """Sets the allow_google_internal_data_sources of this BulkCheckRequest.

        Same configuration as in Check request, all statements checks will use same configurations.

        :param allow_google_internal_data_sources: The allow_google_internal_data_sources of this BulkCheckRequest.
        :type allow_google_internal_data_sources: bool
        """

        self._allow_google_internal_data_sources = allow_google_internal_data_sources

    @property
    def default_relation(self):
        """Gets the default_relation of this BulkCheckRequest.

        If specified, will be used in any given template statement that doesn’t specify a relation.

        :return: The default_relation of this BulkCheckRequest.
        :rtype: str
        """
        return self._default_relation

    @default_relation.setter
    def default_relation(self, default_relation):
        """Sets the default_relation of this BulkCheckRequest.

        If specified, will be used in any given template statement that doesn’t specify a relation.

        :param default_relation: The default_relation of this BulkCheckRequest.
        :type default_relation: str
        """

        self._default_relation = default_relation

    @property
    def default_source(self):
        """Gets the default_source of this BulkCheckRequest.


        :return: The default_source of this BulkCheckRequest.
        :rtype: Asset
        """
        return self._default_source

    @default_source.setter
    def default_source(self, default_source):
        """Sets the default_source of this BulkCheckRequest.


        :param default_source: The default_source of this BulkCheckRequest.
        :type default_source: Asset
        """

        self._default_source = default_source

    @property
    def default_target(self):
        """Gets the default_target of this BulkCheckRequest.


        :return: The default_target of this BulkCheckRequest.
        :rtype: Asset
        """
        return self._default_target

    @default_target.setter
    def default_target(self, default_target):
        """Sets the default_target of this BulkCheckRequest.


        :param default_target: The default_target of this BulkCheckRequest.
        :type default_target: Asset
        """

        self._default_target = default_target

    @property
    def skip_cache_lookup(self):
        """Gets the skip_cache_lookup of this BulkCheckRequest.

        Same configuration as in Check request, all statements checks will use same configurations.

        :return: The skip_cache_lookup of this BulkCheckRequest.
        :rtype: bool
        """
        return self._skip_cache_lookup

    @skip_cache_lookup.setter
    def skip_cache_lookup(self, skip_cache_lookup):
        """Sets the skip_cache_lookup of this BulkCheckRequest.

        Same configuration as in Check request, all statements checks will use same configurations.

        :param skip_cache_lookup: The skip_cache_lookup of this BulkCheckRequest.
        :type skip_cache_lookup: bool
        """

        self._skip_cache_lookup = skip_cache_lookup

    @property
    def statements(self):
        """Gets the statements of this BulkCheckRequest.

        List of statements to check. For each statement, you can omit a field if the corresponding default_* field below was supplied. Minimum 1 statement; maximum 1,000 statements. Any additional statements will be ignored.

        :return: The statements of this BulkCheckRequest.
        :rtype: List[StatementTemplate]
        """
        return self._statements

    @statements.setter
    def statements(self, statements):
        """Sets the statements of this BulkCheckRequest.

        List of statements to check. For each statement, you can omit a field if the corresponding default_* field below was supplied. Minimum 1 statement; maximum 1,000 statements. Any additional statements will be ignored.

        :param statements: The statements of this BulkCheckRequest.
        :type statements: List[StatementTemplate]
        """

        self._statements = statements
