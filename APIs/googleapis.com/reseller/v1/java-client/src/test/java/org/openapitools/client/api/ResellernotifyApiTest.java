/*
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ResellernotifyGetwatchdetailsResponse;
import org.openapitools.client.model.ResellernotifyResource;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ResellernotifyApi
 */
@Disabled
public class ResellernotifyApiTest {

    private final ResellernotifyApi api = new ResellernotifyApi();

    /**
     * Returns all the details of the watch corresponding to the reseller.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resellerResellernotifyGetwatchdetailsTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        ResellernotifyGetwatchdetailsResponse response = api.resellerResellernotifyGetwatchdetails($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Registers a Reseller for receiving notifications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resellerResellernotifyRegisterTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String serviceAccountEmailAddress = null;
        ResellernotifyResource response = api.resellerResellernotifyRegister($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, serviceAccountEmailAddress);
        // TODO: test validations
    }

    /**
     * Unregisters a Reseller for receiving notifications.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resellerResellernotifyUnregisterTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String serviceAccountEmailAddress = null;
        ResellernotifyResource response = api.resellerResellernotifyUnregister($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, serviceAccountEmailAddress);
        // TODO: test validations
    }

}
