/*
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Customer;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * Gets a customer account. Use this operation to see a customer account already in your reseller management, or to see the minimal account information for an existing customer that you do not manage. For more information about the API response for existing customers, see [retrieving a customer account](/admin-sdk/reseller/v1/how-tos/manage_customers#get_customer).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resellerCustomersGetTest() throws ApiException {
        String customerId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Customer response = api.resellerCustomersGet(customerId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType);
        // TODO: test validations
    }

    /**
     * Orders a new customer&#39;s account. Before ordering a new customer account, establish whether the customer account already exists using the [&#x60;customers.get&#x60;](/admin-sdk/reseller/v1/reference/customers/get) If the customer account exists as a direct Google account or as a resold customer account from another reseller, use the &#x60;customerAuthToken\\&#x60; as described in [order a resold account for an existing customer](/admin-sdk/reseller/v1/how-tos/manage_customers#create_existing_customer). For more information about ordering a new customer account, see [order a new customer account](/admin-sdk/reseller/v1/how-tos/manage_customers#create_customer). After creating a new customer account, you must provision a user as an administrator. The customer&#39;s administrator is required to sign in to the Admin console and sign the G Suite via Reseller agreement to activate the account. Resellers are prohibited from signing the G Suite via Reseller agreement on the customer&#39;s behalf. For more information, see [order a new customer account](/admin-sdk/reseller/v1/how-tos/manage_customers#tos).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resellerCustomersInsertTest() throws ApiException {
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        String customerAuthToken = null;
        Customer customer = null;
        Customer response = api.resellerCustomersInsert($xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, customerAuthToken, customer);
        // TODO: test validations
    }

    /**
     * Updates a customer account&#39;s settings. This method supports patch semantics. You cannot update &#x60;customerType&#x60; via the Reseller API, but a &#x60;\&quot;team\&quot;&#x60; customer can verify their domain and become &#x60;customerType &#x3D; \&quot;domain\&quot;&#x60;. For more information, see [Verify your domain to unlock Essentials features](https://support.google.com/a/answer/9122284).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resellerCustomersPatchTest() throws ApiException {
        String customerId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Customer customer = null;
        Customer response = api.resellerCustomersPatch(customerId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, customer);
        // TODO: test validations
    }

    /**
     * Updates a customer account&#39;s settings. You cannot update &#x60;customerType&#x60; via the Reseller API, but a &#x60;\&quot;team\&quot;&#x60; customer can verify their domain and become &#x60;customerType &#x3D; \&quot;domain\&quot;&#x60;. For more information, see [update a customer&#39;s settings](/admin-sdk/reseller/v1/how-tos/manage_customers#update_customer).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resellerCustomersUpdateTest() throws ApiException {
        String customerId = null;
        String $xgafv = null;
        String accessToken = null;
        String alt = null;
        String paramCallback = null;
        String fields = null;
        String key = null;
        String oauthToken = null;
        Boolean prettyPrint = null;
        String quotaUser = null;
        String uploadProtocol = null;
        String uploadType = null;
        Customer customer = null;
        Customer response = api.resellerCustomersUpdate(customerId, $xgafv, accessToken, alt, paramCallback, fields, key, oauthToken, prettyPrint, quotaUser, uploadProtocol, uploadType, customer);
        // TODO: test validations
    }

}
