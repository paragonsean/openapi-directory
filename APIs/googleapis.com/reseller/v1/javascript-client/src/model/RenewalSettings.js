/**
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RenewalSettings model module.
 * @module model/RenewalSettings
 * @version v1
 */
class RenewalSettings {
    /**
     * Constructs a new <code>RenewalSettings</code>.
     * JSON template for a subscription renewal settings.
     * @alias module:model/RenewalSettings
     */
    constructor() { 
        
        RenewalSettings.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'subscriptions#renewalSettings';
    }

    /**
     * Constructs a <code>RenewalSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RenewalSettings} obj Optional instance to populate.
     * @return {module:model/RenewalSettings} The populated <code>RenewalSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RenewalSettings();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('renewalType')) {
                obj['renewalType'] = ApiClient.convertToType(data['renewalType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RenewalSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RenewalSettings</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['renewalType'] && !(typeof data['renewalType'] === 'string' || data['renewalType'] instanceof String)) {
            throw new Error("Expected the field `renewalType` to be a primitive type in the JSON string but got " + data['renewalType']);
        }

        return true;
    }


}



/**
 * Identifies the resource as a subscription renewal setting. Value: `subscriptions#renewalSettings`
 * @member {String} kind
 * @default 'subscriptions#renewalSettings'
 */
RenewalSettings.prototype['kind'] = 'subscriptions#renewalSettings';

/**
 * Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. When renewing a subscription, the `renewalType` is a required property.
 * @member {String} renewalType
 */
RenewalSettings.prototype['renewalType'] = undefined;






export default RenewalSettings;

