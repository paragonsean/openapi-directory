/**
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Seats model module.
 * @module model/Seats
 * @version v1
 */
class Seats {
    /**
     * Constructs a new <code>Seats</code>.
     * JSON template for subscription seats.
     * @alias module:model/Seats
     */
    constructor() { 
        
        Seats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'subscriptions#seats';
    }

    /**
     * Constructs a <code>Seats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Seats} obj Optional instance to populate.
     * @return {module:model/Seats} The populated <code>Seats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Seats();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('licensedNumberOfSeats')) {
                obj['licensedNumberOfSeats'] = ApiClient.convertToType(data['licensedNumberOfSeats'], 'Number');
            }
            if (data.hasOwnProperty('maximumNumberOfSeats')) {
                obj['maximumNumberOfSeats'] = ApiClient.convertToType(data['maximumNumberOfSeats'], 'Number');
            }
            if (data.hasOwnProperty('numberOfSeats')) {
                obj['numberOfSeats'] = ApiClient.convertToType(data['numberOfSeats'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Seats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Seats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * Identifies the resource as a subscription seat setting. Value: `subscriptions#seats`
 * @member {String} kind
 * @default 'subscriptions#seats'
 */
Seats.prototype['kind'] = 'subscriptions#seats';

/**
 * Read-only field containing the current number of users that are assigned a license for the product defined in `skuId`. This field's value is equivalent to the numerical count of users returned by the Enterprise License Manager API method: [`listForProductAndSku`](/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku).
 * @member {Number} licensedNumberOfSeats
 */
Seats.prototype['licensedNumberOfSeats'] = undefined;

/**
 * This is a required property and is exclusive to subscriptions with `FLEXIBLE` or `TRIAL` plans. This property sets the maximum number of licensed users allowed on a subscription. This quantity can be increased up to the maximum limit defined in the reseller's contract. The minimum quantity is the current number of users in the customer account. *Note: *G Suite subscriptions automatically assign a license to every user.
 * @member {Number} maximumNumberOfSeats
 */
Seats.prototype['maximumNumberOfSeats'] = undefined;

/**
 * This is a required property and is exclusive to subscriptions with `ANNUAL_MONTHLY_PAY` and `ANNUAL_YEARLY_PAY` plans. This property sets the maximum number of licenses assignable to users on a subscription. The reseller can add more licenses, but once set, the `numberOfSeats` cannot be reduced until renewal. The reseller is invoiced based on the `numberOfSeats` value regardless of how many of these user licenses are assigned. *Note: *Google Workspace subscriptions automatically assign a license to every user.
 * @member {Number} numberOfSeats
 */
Seats.prototype['numberOfSeats'] = undefined;






export default Seats;

