/**
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Subscription from './Subscription';

/**
 * The Subscriptions model module.
 * @module model/Subscriptions
 * @version v1
 */
class Subscriptions {
    /**
     * Constructs a new <code>Subscriptions</code>.
     * A subscription manages the relationship of a Google customer&#39;s payment plan with a product&#39;s SKU, user licenses, 30-day free trial status, and renewal options. A primary role of a reseller is to manage the Google customer&#39;s subscriptions.
     * @alias module:model/Subscriptions
     */
    constructor() { 
        
        Subscriptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'reseller#subscriptions';
    }

    /**
     * Constructs a <code>Subscriptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Subscriptions} obj Optional instance to populate.
     * @return {module:model/Subscriptions} The populated <code>Subscriptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Subscriptions();

            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('nextPageToken')) {
                obj['nextPageToken'] = ApiClient.convertToType(data['nextPageToken'], 'String');
            }
            if (data.hasOwnProperty('subscriptions')) {
                obj['subscriptions'] = ApiClient.convertToType(data['subscriptions'], [Subscription]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Subscriptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Subscriptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['nextPageToken'] && !(typeof data['nextPageToken'] === 'string' || data['nextPageToken'] instanceof String)) {
            throw new Error("Expected the field `nextPageToken` to be a primitive type in the JSON string but got " + data['nextPageToken']);
        }
        if (data['subscriptions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['subscriptions'])) {
                throw new Error("Expected the field `subscriptions` to be an array in the JSON data but got " + data['subscriptions']);
            }
            // validate the optional field `subscriptions` (array)
            for (const item of data['subscriptions']) {
                Subscription.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Identifies the resource as a collection of subscriptions. Value: reseller#subscriptions
 * @member {String} kind
 * @default 'reseller#subscriptions'
 */
Subscriptions.prototype['kind'] = 'reseller#subscriptions';

/**
 * The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
 * @member {String} nextPageToken
 */
Subscriptions.prototype['nextPageToken'] = undefined;

/**
 * The subscriptions in this page of results.
 * @member {Array.<module:model/Subscription>} subscriptions
 */
Subscriptions.prototype['subscriptions'] = undefined;






export default Subscriptions;

