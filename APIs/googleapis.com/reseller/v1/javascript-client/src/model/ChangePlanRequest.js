/**
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Seats from './Seats';

/**
 * The ChangePlanRequest model module.
 * @module model/ChangePlanRequest
 * @version v1
 */
class ChangePlanRequest {
    /**
     * Constructs a new <code>ChangePlanRequest</code>.
     * JSON template for the ChangePlan rpc request.
     * @alias module:model/ChangePlanRequest
     */
    constructor() { 
        
        ChangePlanRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['kind'] = 'subscriptions#changePlanRequest';
    }

    /**
     * Constructs a <code>ChangePlanRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChangePlanRequest} obj Optional instance to populate.
     * @return {module:model/ChangePlanRequest} The populated <code>ChangePlanRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChangePlanRequest();

            if (data.hasOwnProperty('dealCode')) {
                obj['dealCode'] = ApiClient.convertToType(data['dealCode'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('planName')) {
                obj['planName'] = ApiClient.convertToType(data['planName'], 'String');
            }
            if (data.hasOwnProperty('purchaseOrderId')) {
                obj['purchaseOrderId'] = ApiClient.convertToType(data['purchaseOrderId'], 'String');
            }
            if (data.hasOwnProperty('seats')) {
                obj['seats'] = Seats.constructFromObject(data['seats']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChangePlanRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChangePlanRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dealCode'] && !(typeof data['dealCode'] === 'string' || data['dealCode'] instanceof String)) {
            throw new Error("Expected the field `dealCode` to be a primitive type in the JSON string but got " + data['dealCode']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['planName'] && !(typeof data['planName'] === 'string' || data['planName'] instanceof String)) {
            throw new Error("Expected the field `planName` to be a primitive type in the JSON string but got " + data['planName']);
        }
        // ensure the json data is a string
        if (data['purchaseOrderId'] && !(typeof data['purchaseOrderId'] === 'string' || data['purchaseOrderId'] instanceof String)) {
            throw new Error("Expected the field `purchaseOrderId` to be a primitive type in the JSON string but got " + data['purchaseOrderId']);
        }
        // validate the optional field `seats`
        if (data['seats']) { // data not null
          Seats.validateJSON(data['seats']);
        }

        return true;
    }


}



/**
 * Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `changePlan` request in order to receive discounted rate. This property is optional. If a deal code has already been added to a subscription, this property may be left empty and the existing discounted rate will still apply (if not empty, only provide the deal code that is already present on the subscription). If a deal code has never been added to a subscription and this property is left blank, regular pricing will apply.
 * @member {String} dealCode
 */
ChangePlanRequest.prototype['dealCode'] = undefined;

/**
 * Identifies the resource as a subscription change plan request. Value: `subscriptions#changePlanRequest`
 * @member {String} kind
 * @default 'subscriptions#changePlanRequest'
 */
ChangePlanRequest.prototype['kind'] = 'subscriptions#changePlanRequest';

/**
 * The `planName` property is required. This is the name of the subscription's payment plan. For more information about the Google payment plans, see API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` - The annual commitment plan with monthly payments *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` - The annual commitment plan with yearly payments - `FLEXIBLE` - The flexible plan - `TRIAL` - The 30-day free trial plan 
 * @member {String} planName
 */
ChangePlanRequest.prototype['planName'] = undefined;

/**
 * This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
 * @member {String} purchaseOrderId
 */
ChangePlanRequest.prototype['purchaseOrderId'] = undefined;

/**
 * @member {module:model/Seats} seats
 */
ChangePlanRequest.prototype['seats'] = undefined;






export default ChangePlanRequest;

