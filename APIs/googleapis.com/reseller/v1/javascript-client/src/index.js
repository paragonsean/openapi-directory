/**
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import ChangePlanRequest from './model/ChangePlanRequest';
import Customer from './model/Customer';
import PrimaryAdmin from './model/PrimaryAdmin';
import RenewalSettings from './model/RenewalSettings';
import ResellernotifyGetwatchdetailsResponse from './model/ResellernotifyGetwatchdetailsResponse';
import ResellernotifyResource from './model/ResellernotifyResource';
import Seats from './model/Seats';
import Subscription from './model/Subscription';
import SubscriptionPlan from './model/SubscriptionPlan';
import SubscriptionPlanCommitmentInterval from './model/SubscriptionPlanCommitmentInterval';
import SubscriptionTransferInfo from './model/SubscriptionTransferInfo';
import SubscriptionTrialSettings from './model/SubscriptionTrialSettings';
import Subscriptions from './model/Subscriptions';
import CustomersApi from './api/CustomersApi';
import ResellernotifyApi from './api/ResellernotifyApi';
import SubscriptionsApi from './api/SubscriptionsApi';


/**
* Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GoogleWorkspaceResellerApi = require('index'); // See note below*.
* var xxxSvc = new GoogleWorkspaceResellerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GoogleWorkspaceResellerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GoogleWorkspaceResellerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GoogleWorkspaceResellerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The ChangePlanRequest model constructor.
     * @property {module:model/ChangePlanRequest}
     */
    ChangePlanRequest,

    /**
     * The Customer model constructor.
     * @property {module:model/Customer}
     */
    Customer,

    /**
     * The PrimaryAdmin model constructor.
     * @property {module:model/PrimaryAdmin}
     */
    PrimaryAdmin,

    /**
     * The RenewalSettings model constructor.
     * @property {module:model/RenewalSettings}
     */
    RenewalSettings,

    /**
     * The ResellernotifyGetwatchdetailsResponse model constructor.
     * @property {module:model/ResellernotifyGetwatchdetailsResponse}
     */
    ResellernotifyGetwatchdetailsResponse,

    /**
     * The ResellernotifyResource model constructor.
     * @property {module:model/ResellernotifyResource}
     */
    ResellernotifyResource,

    /**
     * The Seats model constructor.
     * @property {module:model/Seats}
     */
    Seats,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The SubscriptionPlan model constructor.
     * @property {module:model/SubscriptionPlan}
     */
    SubscriptionPlan,

    /**
     * The SubscriptionPlanCommitmentInterval model constructor.
     * @property {module:model/SubscriptionPlanCommitmentInterval}
     */
    SubscriptionPlanCommitmentInterval,

    /**
     * The SubscriptionTransferInfo model constructor.
     * @property {module:model/SubscriptionTransferInfo}
     */
    SubscriptionTransferInfo,

    /**
     * The SubscriptionTrialSettings model constructor.
     * @property {module:model/SubscriptionTrialSettings}
     */
    SubscriptionTrialSettings,

    /**
     * The Subscriptions model constructor.
     * @property {module:model/Subscriptions}
     */
    Subscriptions,

    /**
    * The CustomersApi service constructor.
    * @property {module:api/CustomersApi}
    */
    CustomersApi,

    /**
    * The ResellernotifyApi service constructor.
    * @property {module:api/ResellernotifyApi}
    */
    ResellernotifyApi,

    /**
    * The SubscriptionsApi service constructor.
    * @property {module:api/SubscriptionsApi}
    */
    SubscriptionsApi
};
