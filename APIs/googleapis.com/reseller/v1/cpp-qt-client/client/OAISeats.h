/**
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISeats.h
 *
 * JSON template for subscription seats.
 */

#ifndef OAISeats_H
#define OAISeats_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISeats : public OAIObject {
public:
    OAISeats();
    OAISeats(QString json);
    ~OAISeats() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    qint32 getLicensedNumberOfSeats() const;
    void setLicensedNumberOfSeats(const qint32 &licensed_number_of_seats);
    bool is_licensed_number_of_seats_Set() const;
    bool is_licensed_number_of_seats_Valid() const;

    qint32 getMaximumNumberOfSeats() const;
    void setMaximumNumberOfSeats(const qint32 &maximum_number_of_seats);
    bool is_maximum_number_of_seats_Set() const;
    bool is_maximum_number_of_seats_Valid() const;

    qint32 getNumberOfSeats() const;
    void setNumberOfSeats(const qint32 &number_of_seats);
    bool is_number_of_seats_Set() const;
    bool is_number_of_seats_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    qint32 m_licensed_number_of_seats;
    bool m_licensed_number_of_seats_isSet;
    bool m_licensed_number_of_seats_isValid;

    qint32 m_maximum_number_of_seats;
    bool m_maximum_number_of_seats_isSet;
    bool m_maximum_number_of_seats_isValid;

    qint32 m_number_of_seats;
    bool m_number_of_seats_isSet;
    bool m_number_of_seats_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISeats)

#endif // OAISeats_H
