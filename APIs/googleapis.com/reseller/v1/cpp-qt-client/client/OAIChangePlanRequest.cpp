/**
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChangePlanRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChangePlanRequest::OAIChangePlanRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChangePlanRequest::OAIChangePlanRequest() {
    this->initializeModel();
}

OAIChangePlanRequest::~OAIChangePlanRequest() {}

void OAIChangePlanRequest::initializeModel() {

    m_deal_code_isSet = false;
    m_deal_code_isValid = false;

    m_kind_isSet = false;
    m_kind_isValid = false;

    m_plan_name_isSet = false;
    m_plan_name_isValid = false;

    m_purchase_order_id_isSet = false;
    m_purchase_order_id_isValid = false;

    m_seats_isSet = false;
    m_seats_isValid = false;
}

void OAIChangePlanRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChangePlanRequest::fromJsonObject(QJsonObject json) {

    m_deal_code_isValid = ::OpenAPI::fromJsonValue(m_deal_code, json[QString("dealCode")]);
    m_deal_code_isSet = !json[QString("dealCode")].isNull() && m_deal_code_isValid;

    m_kind_isValid = ::OpenAPI::fromJsonValue(m_kind, json[QString("kind")]);
    m_kind_isSet = !json[QString("kind")].isNull() && m_kind_isValid;

    m_plan_name_isValid = ::OpenAPI::fromJsonValue(m_plan_name, json[QString("planName")]);
    m_plan_name_isSet = !json[QString("planName")].isNull() && m_plan_name_isValid;

    m_purchase_order_id_isValid = ::OpenAPI::fromJsonValue(m_purchase_order_id, json[QString("purchaseOrderId")]);
    m_purchase_order_id_isSet = !json[QString("purchaseOrderId")].isNull() && m_purchase_order_id_isValid;

    m_seats_isValid = ::OpenAPI::fromJsonValue(m_seats, json[QString("seats")]);
    m_seats_isSet = !json[QString("seats")].isNull() && m_seats_isValid;
}

QString OAIChangePlanRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChangePlanRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_deal_code_isSet) {
        obj.insert(QString("dealCode"), ::OpenAPI::toJsonValue(m_deal_code));
    }
    if (m_kind_isSet) {
        obj.insert(QString("kind"), ::OpenAPI::toJsonValue(m_kind));
    }
    if (m_plan_name_isSet) {
        obj.insert(QString("planName"), ::OpenAPI::toJsonValue(m_plan_name));
    }
    if (m_purchase_order_id_isSet) {
        obj.insert(QString("purchaseOrderId"), ::OpenAPI::toJsonValue(m_purchase_order_id));
    }
    if (m_seats.isSet()) {
        obj.insert(QString("seats"), ::OpenAPI::toJsonValue(m_seats));
    }
    return obj;
}

QString OAIChangePlanRequest::getDealCode() const {
    return m_deal_code;
}
void OAIChangePlanRequest::setDealCode(const QString &deal_code) {
    m_deal_code = deal_code;
    m_deal_code_isSet = true;
}

bool OAIChangePlanRequest::is_deal_code_Set() const{
    return m_deal_code_isSet;
}

bool OAIChangePlanRequest::is_deal_code_Valid() const{
    return m_deal_code_isValid;
}

QString OAIChangePlanRequest::getKind() const {
    return m_kind;
}
void OAIChangePlanRequest::setKind(const QString &kind) {
    m_kind = kind;
    m_kind_isSet = true;
}

bool OAIChangePlanRequest::is_kind_Set() const{
    return m_kind_isSet;
}

bool OAIChangePlanRequest::is_kind_Valid() const{
    return m_kind_isValid;
}

QString OAIChangePlanRequest::getPlanName() const {
    return m_plan_name;
}
void OAIChangePlanRequest::setPlanName(const QString &plan_name) {
    m_plan_name = plan_name;
    m_plan_name_isSet = true;
}

bool OAIChangePlanRequest::is_plan_name_Set() const{
    return m_plan_name_isSet;
}

bool OAIChangePlanRequest::is_plan_name_Valid() const{
    return m_plan_name_isValid;
}

QString OAIChangePlanRequest::getPurchaseOrderId() const {
    return m_purchase_order_id;
}
void OAIChangePlanRequest::setPurchaseOrderId(const QString &purchase_order_id) {
    m_purchase_order_id = purchase_order_id;
    m_purchase_order_id_isSet = true;
}

bool OAIChangePlanRequest::is_purchase_order_id_Set() const{
    return m_purchase_order_id_isSet;
}

bool OAIChangePlanRequest::is_purchase_order_id_Valid() const{
    return m_purchase_order_id_isValid;
}

OAISeats OAIChangePlanRequest::getSeats() const {
    return m_seats;
}
void OAIChangePlanRequest::setSeats(const OAISeats &seats) {
    m_seats = seats;
    m_seats_isSet = true;
}

bool OAIChangePlanRequest::is_seats_Set() const{
    return m_seats_isSet;
}

bool OAIChangePlanRequest::is_seats_Valid() const{
    return m_seats_isValid;
}

bool OAIChangePlanRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kind_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_plan_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seats.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChangePlanRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
