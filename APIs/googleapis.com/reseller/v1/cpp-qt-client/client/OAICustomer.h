/**
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomer.h
 *
 * When a Google customer&#39;s account is registered with a reseller, the customer&#39;s subscriptions for Google services are managed by this reseller. A customer is described by a primary domain name and a physical address.
 */

#ifndef OAICustomer_H
#define OAICustomer_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAIPrimaryAdmin.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAIPrimaryAdmin;

class OAICustomer : public OAIObject {
public:
    OAICustomer();
    OAICustomer(QString json);
    ~OAICustomer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlternateEmail() const;
    void setAlternateEmail(const QString &alternate_email);
    bool is_alternate_email_Set() const;
    bool is_alternate_email_Valid() const;

    QString getCustomerDomain() const;
    void setCustomerDomain(const QString &customer_domain);
    bool is_customer_domain_Set() const;
    bool is_customer_domain_Valid() const;

    bool isCustomerDomainVerified() const;
    void setCustomerDomainVerified(const bool &customer_domain_verified);
    bool is_customer_domain_verified_Set() const;
    bool is_customer_domain_verified_Valid() const;

    QString getCustomerId() const;
    void setCustomerId(const QString &customer_id);
    bool is_customer_id_Set() const;
    bool is_customer_id_Valid() const;

    QString getCustomerType() const;
    void setCustomerType(const QString &customer_type);
    bool is_customer_type_Set() const;
    bool is_customer_type_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    OAIAddress getPostalAddress() const;
    void setPostalAddress(const OAIAddress &postal_address);
    bool is_postal_address_Set() const;
    bool is_postal_address_Valid() const;

    OAIPrimaryAdmin getPrimaryAdmin() const;
    void setPrimaryAdmin(const OAIPrimaryAdmin &primary_admin);
    bool is_primary_admin_Set() const;
    bool is_primary_admin_Valid() const;

    QString getResourceUiUrl() const;
    void setResourceUiUrl(const QString &resource_ui_url);
    bool is_resource_ui_url_Set() const;
    bool is_resource_ui_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alternate_email;
    bool m_alternate_email_isSet;
    bool m_alternate_email_isValid;

    QString m_customer_domain;
    bool m_customer_domain_isSet;
    bool m_customer_domain_isValid;

    bool m_customer_domain_verified;
    bool m_customer_domain_verified_isSet;
    bool m_customer_domain_verified_isValid;

    QString m_customer_id;
    bool m_customer_id_isSet;
    bool m_customer_id_isValid;

    QString m_customer_type;
    bool m_customer_type_isSet;
    bool m_customer_type_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    OAIAddress m_postal_address;
    bool m_postal_address_isSet;
    bool m_postal_address_isValid;

    OAIPrimaryAdmin m_primary_admin;
    bool m_primary_admin_isSet;
    bool m_primary_admin_isValid;

    QString m_resource_ui_url;
    bool m_resource_ui_url_isSet;
    bool m_resource_ui_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomer)

#endif // OAICustomer_H
