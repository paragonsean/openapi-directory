/**
 * Google Workspace Reseller API
 * Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResellernotifyGetwatchdetailsResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResellernotifyGetwatchdetailsResponse::OAIResellernotifyGetwatchdetailsResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResellernotifyGetwatchdetailsResponse::OAIResellernotifyGetwatchdetailsResponse() {
    this->initializeModel();
}

OAIResellernotifyGetwatchdetailsResponse::~OAIResellernotifyGetwatchdetailsResponse() {}

void OAIResellernotifyGetwatchdetailsResponse::initializeModel() {

    m_service_account_email_addresses_isSet = false;
    m_service_account_email_addresses_isValid = false;

    m_topic_name_isSet = false;
    m_topic_name_isValid = false;
}

void OAIResellernotifyGetwatchdetailsResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResellernotifyGetwatchdetailsResponse::fromJsonObject(QJsonObject json) {

    m_service_account_email_addresses_isValid = ::OpenAPI::fromJsonValue(m_service_account_email_addresses, json[QString("serviceAccountEmailAddresses")]);
    m_service_account_email_addresses_isSet = !json[QString("serviceAccountEmailAddresses")].isNull() && m_service_account_email_addresses_isValid;

    m_topic_name_isValid = ::OpenAPI::fromJsonValue(m_topic_name, json[QString("topicName")]);
    m_topic_name_isSet = !json[QString("topicName")].isNull() && m_topic_name_isValid;
}

QString OAIResellernotifyGetwatchdetailsResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResellernotifyGetwatchdetailsResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_service_account_email_addresses.size() > 0) {
        obj.insert(QString("serviceAccountEmailAddresses"), ::OpenAPI::toJsonValue(m_service_account_email_addresses));
    }
    if (m_topic_name_isSet) {
        obj.insert(QString("topicName"), ::OpenAPI::toJsonValue(m_topic_name));
    }
    return obj;
}

QList<QString> OAIResellernotifyGetwatchdetailsResponse::getServiceAccountEmailAddresses() const {
    return m_service_account_email_addresses;
}
void OAIResellernotifyGetwatchdetailsResponse::setServiceAccountEmailAddresses(const QList<QString> &service_account_email_addresses) {
    m_service_account_email_addresses = service_account_email_addresses;
    m_service_account_email_addresses_isSet = true;
}

bool OAIResellernotifyGetwatchdetailsResponse::is_service_account_email_addresses_Set() const{
    return m_service_account_email_addresses_isSet;
}

bool OAIResellernotifyGetwatchdetailsResponse::is_service_account_email_addresses_Valid() const{
    return m_service_account_email_addresses_isValid;
}

QString OAIResellernotifyGetwatchdetailsResponse::getTopicName() const {
    return m_topic_name;
}
void OAIResellernotifyGetwatchdetailsResponse::setTopicName(const QString &topic_name) {
    m_topic_name = topic_name;
    m_topic_name_isSet = true;
}

bool OAIResellernotifyGetwatchdetailsResponse::is_topic_name_Set() const{
    return m_topic_name_isSet;
}

bool OAIResellernotifyGetwatchdetailsResponse::is_topic_name_Valid() const{
    return m_topic_name_isValid;
}

bool OAIResellernotifyGetwatchdetailsResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_account_email_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_topic_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResellernotifyGetwatchdetailsResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
