# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subscription import Subscription
from openapi_server import util


class Subscriptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str='reseller#subscriptions', next_page_token: str=None, subscriptions: List[Subscription]=None):
        """Subscriptions - a model defined in OpenAPI

        :param kind: The kind of this Subscriptions.
        :param next_page_token: The next_page_token of this Subscriptions.
        :param subscriptions: The subscriptions of this Subscriptions.
        """
        self.openapi_types = {
            'kind': str,
            'next_page_token': str,
            'subscriptions': List[Subscription]
        }

        self.attribute_map = {
            'kind': 'kind',
            'next_page_token': 'nextPageToken',
            'subscriptions': 'subscriptions'
        }

        self._kind = kind
        self._next_page_token = next_page_token
        self._subscriptions = subscriptions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Subscriptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Subscriptions of this Subscriptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this Subscriptions.

        Identifies the resource as a collection of subscriptions. Value: reseller#subscriptions

        :return: The kind of this Subscriptions.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Subscriptions.

        Identifies the resource as a collection of subscriptions. Value: reseller#subscriptions

        :param kind: The kind of this Subscriptions.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this Subscriptions.

        The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.

        :return: The next_page_token of this Subscriptions.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this Subscriptions.

        The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.

        :param next_page_token: The next_page_token of this Subscriptions.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token

    @property
    def subscriptions(self):
        """Gets the subscriptions of this Subscriptions.

        The subscriptions in this page of results.

        :return: The subscriptions of this Subscriptions.
        :rtype: List[Subscription]
        """
        return self._subscriptions

    @subscriptions.setter
    def subscriptions(self, subscriptions):
        """Sets the subscriptions of this Subscriptions.

        The subscriptions in this page of results.

        :param subscriptions: The subscriptions of this Subscriptions.
        :type subscriptions: List[Subscription]
        """

        self._subscriptions = subscriptions
