# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subscription_plan_commitment_interval import SubscriptionPlanCommitmentInterval
from openapi_server import util


class SubscriptionPlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commitment_interval: SubscriptionPlanCommitmentInterval=None, is_commitment_plan: bool=None, plan_name: str=None):
        """SubscriptionPlan - a model defined in OpenAPI

        :param commitment_interval: The commitment_interval of this SubscriptionPlan.
        :param is_commitment_plan: The is_commitment_plan of this SubscriptionPlan.
        :param plan_name: The plan_name of this SubscriptionPlan.
        """
        self.openapi_types = {
            'commitment_interval': SubscriptionPlanCommitmentInterval,
            'is_commitment_plan': bool,
            'plan_name': str
        }

        self.attribute_map = {
            'commitment_interval': 'commitmentInterval',
            'is_commitment_plan': 'isCommitmentPlan',
            'plan_name': 'planName'
        }

        self._commitment_interval = commitment_interval
        self._is_commitment_plan = is_commitment_plan
        self._plan_name = plan_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionPlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Subscription_plan of this SubscriptionPlan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commitment_interval(self):
        """Gets the commitment_interval of this SubscriptionPlan.


        :return: The commitment_interval of this SubscriptionPlan.
        :rtype: SubscriptionPlanCommitmentInterval
        """
        return self._commitment_interval

    @commitment_interval.setter
    def commitment_interval(self, commitment_interval):
        """Sets the commitment_interval of this SubscriptionPlan.


        :param commitment_interval: The commitment_interval of this SubscriptionPlan.
        :type commitment_interval: SubscriptionPlanCommitmentInterval
        """

        self._commitment_interval = commitment_interval

    @property
    def is_commitment_plan(self):
        """Gets the is_commitment_plan of this SubscriptionPlan.

        The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. 

        :return: The is_commitment_plan of this SubscriptionPlan.
        :rtype: bool
        """
        return self._is_commitment_plan

    @is_commitment_plan.setter
    def is_commitment_plan(self, is_commitment_plan):
        """Sets the is_commitment_plan of this SubscriptionPlan.

        The `isCommitmentPlan` property's boolean value identifies the plan as an annual commitment plan: - `true` — The subscription's plan is an annual commitment plan. - `false` — The plan is not an annual commitment plan. 

        :param is_commitment_plan: The is_commitment_plan of this SubscriptionPlan.
        :type is_commitment_plan: bool
        """

        self._is_commitment_plan = is_commitment_plan

    @property
    def plan_name(self):
        """Gets the plan_name of this SubscriptionPlan.

        The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. 

        :return: The plan_name of this SubscriptionPlan.
        :rtype: str
        """
        return self._plan_name

    @plan_name.setter
    def plan_name(self, plan_name):
        """Sets the plan_name of this SubscriptionPlan.

        The `planName` property is required. This is the name of the subscription's plan. For more information about the Google payment plans, see the API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` — The annual commitment plan with monthly payments. *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` — The annual commitment plan with yearly payments - `FLEXIBLE` — The flexible plan - `TRIAL` — The 30-day free trial plan. A subscription in trial will be suspended after the 30th free day if no payment plan is assigned. Calling `changePlan` will assign a payment plan to a trial but will not activate the plan. A trial will automatically begin its assigned payment plan after its 30th free day or immediately after calling `startPaidService`. - `FREE` — The free plan is exclusive to the Cloud Identity SKU and does not incur any billing. 

        :param plan_name: The plan_name of this SubscriptionPlan.
        :type plan_name: str
        """

        self._plan_name = plan_name
