# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.renewal_settings import RenewalSettings
from openapi_server.models.seats import Seats
from openapi_server.models.subscription_plan import SubscriptionPlan
from openapi_server.models.subscription_transfer_info import SubscriptionTransferInfo
from openapi_server.models.subscription_trial_settings import SubscriptionTrialSettings
from openapi_server import util


class Subscription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_method: str=None, creation_time: str=None, customer_domain: str=None, customer_id: str=None, deal_code: str=None, kind: str='reseller#subscription', plan: SubscriptionPlan=None, purchase_order_id: str=None, renewal_settings: RenewalSettings=None, resource_ui_url: str=None, seats: Seats=None, sku_id: str=None, sku_name: str=None, status: str=None, subscription_id: str=None, suspension_reasons: List[str]=None, transfer_info: SubscriptionTransferInfo=None, trial_settings: SubscriptionTrialSettings=None):
        """Subscription - a model defined in OpenAPI

        :param billing_method: The billing_method of this Subscription.
        :param creation_time: The creation_time of this Subscription.
        :param customer_domain: The customer_domain of this Subscription.
        :param customer_id: The customer_id of this Subscription.
        :param deal_code: The deal_code of this Subscription.
        :param kind: The kind of this Subscription.
        :param plan: The plan of this Subscription.
        :param purchase_order_id: The purchase_order_id of this Subscription.
        :param renewal_settings: The renewal_settings of this Subscription.
        :param resource_ui_url: The resource_ui_url of this Subscription.
        :param seats: The seats of this Subscription.
        :param sku_id: The sku_id of this Subscription.
        :param sku_name: The sku_name of this Subscription.
        :param status: The status of this Subscription.
        :param subscription_id: The subscription_id of this Subscription.
        :param suspension_reasons: The suspension_reasons of this Subscription.
        :param transfer_info: The transfer_info of this Subscription.
        :param trial_settings: The trial_settings of this Subscription.
        """
        self.openapi_types = {
            'billing_method': str,
            'creation_time': str,
            'customer_domain': str,
            'customer_id': str,
            'deal_code': str,
            'kind': str,
            'plan': SubscriptionPlan,
            'purchase_order_id': str,
            'renewal_settings': RenewalSettings,
            'resource_ui_url': str,
            'seats': Seats,
            'sku_id': str,
            'sku_name': str,
            'status': str,
            'subscription_id': str,
            'suspension_reasons': List[str],
            'transfer_info': SubscriptionTransferInfo,
            'trial_settings': SubscriptionTrialSettings
        }

        self.attribute_map = {
            'billing_method': 'billingMethod',
            'creation_time': 'creationTime',
            'customer_domain': 'customerDomain',
            'customer_id': 'customerId',
            'deal_code': 'dealCode',
            'kind': 'kind',
            'plan': 'plan',
            'purchase_order_id': 'purchaseOrderId',
            'renewal_settings': 'renewalSettings',
            'resource_ui_url': 'resourceUiUrl',
            'seats': 'seats',
            'sku_id': 'skuId',
            'sku_name': 'skuName',
            'status': 'status',
            'subscription_id': 'subscriptionId',
            'suspension_reasons': 'suspensionReasons',
            'transfer_info': 'transferInfo',
            'trial_settings': 'trialSettings'
        }

        self._billing_method = billing_method
        self._creation_time = creation_time
        self._customer_domain = customer_domain
        self._customer_id = customer_id
        self._deal_code = deal_code
        self._kind = kind
        self._plan = plan
        self._purchase_order_id = purchase_order_id
        self._renewal_settings = renewal_settings
        self._resource_ui_url = resource_ui_url
        self._seats = seats
        self._sku_id = sku_id
        self._sku_name = sku_name
        self._status = status
        self._subscription_id = subscription_id
        self._suspension_reasons = suspension_reasons
        self._transfer_info = transfer_info
        self._trial_settings = trial_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Subscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Subscription of this Subscription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_method(self):
        """Gets the billing_method of this Subscription.

        Read-only field that returns the current billing method for a subscription.

        :return: The billing_method of this Subscription.
        :rtype: str
        """
        return self._billing_method

    @billing_method.setter
    def billing_method(self, billing_method):
        """Sets the billing_method of this Subscription.

        Read-only field that returns the current billing method for a subscription.

        :param billing_method: The billing_method of this Subscription.
        :type billing_method: str
        """

        self._billing_method = billing_method

    @property
    def creation_time(self):
        """Gets the creation_time of this Subscription.

        The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter.

        :return: The creation_time of this Subscription.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this Subscription.

        The `creationTime` property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter.

        :param creation_time: The creation_time of this Subscription.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def customer_domain(self):
        """Gets the customer_domain of this Subscription.

        Primary domain name of the customer

        :return: The customer_domain of this Subscription.
        :rtype: str
        """
        return self._customer_domain

    @customer_domain.setter
    def customer_domain(self, customer_domain):
        """Sets the customer_domain of this Subscription.

        Primary domain name of the customer

        :param customer_domain: The customer_domain of this Subscription.
        :type customer_domain: str
        """

        self._customer_domain = customer_domain

    @property
    def customer_id(self):
        """Gets the customer_id of this Subscription.

        This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.

        :return: The customer_id of this Subscription.
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this Subscription.

        This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.

        :param customer_id: The customer_id of this Subscription.
        :type customer_id: str
        """

        self._customer_id = customer_id

    @property
    def deal_code(self):
        """Gets the deal_code of this Subscription.

        Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty.

        :return: The deal_code of this Subscription.
        :rtype: str
        """
        return self._deal_code

    @deal_code.setter
    def deal_code(self, deal_code):
        """Sets the deal_code of this Subscription.

        Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `insert` requests in order to receive discounted rate. This property is optional, regular pricing applies if left empty.

        :param deal_code: The deal_code of this Subscription.
        :type deal_code: str
        """

        self._deal_code = deal_code

    @property
    def kind(self):
        """Gets the kind of this Subscription.

        Identifies the resource as a Subscription. Value: `reseller#subscription`

        :return: The kind of this Subscription.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Subscription.

        Identifies the resource as a Subscription. Value: `reseller#subscription`

        :param kind: The kind of this Subscription.
        :type kind: str
        """

        self._kind = kind

    @property
    def plan(self):
        """Gets the plan of this Subscription.


        :return: The plan of this Subscription.
        :rtype: SubscriptionPlan
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this Subscription.


        :param plan: The plan of this Subscription.
        :type plan: SubscriptionPlan
        """

        self._plan = plan

    @property
    def purchase_order_id(self):
        """Gets the purchase_order_id of this Subscription.

        This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.

        :return: The purchase_order_id of this Subscription.
        :rtype: str
        """
        return self._purchase_order_id

    @purchase_order_id.setter
    def purchase_order_id(self, purchase_order_id):
        """Sets the purchase_order_id of this Subscription.

        This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.

        :param purchase_order_id: The purchase_order_id of this Subscription.
        :type purchase_order_id: str
        """

        self._purchase_order_id = purchase_order_id

    @property
    def renewal_settings(self):
        """Gets the renewal_settings of this Subscription.


        :return: The renewal_settings of this Subscription.
        :rtype: RenewalSettings
        """
        return self._renewal_settings

    @renewal_settings.setter
    def renewal_settings(self, renewal_settings):
        """Sets the renewal_settings of this Subscription.


        :param renewal_settings: The renewal_settings of this Subscription.
        :type renewal_settings: RenewalSettings
        """

        self._renewal_settings = renewal_settings

    @property
    def resource_ui_url(self):
        """Gets the resource_ui_url of this Subscription.

        URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console.

        :return: The resource_ui_url of this Subscription.
        :rtype: str
        """
        return self._resource_ui_url

    @resource_ui_url.setter
    def resource_ui_url(self, resource_ui_url):
        """Sets the resource_ui_url of this Subscription.

        URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task using the Subscriptions page in the Admin console.

        :param resource_ui_url: The resource_ui_url of this Subscription.
        :type resource_ui_url: str
        """

        self._resource_ui_url = resource_ui_url

    @property
    def seats(self):
        """Gets the seats of this Subscription.


        :return: The seats of this Subscription.
        :rtype: Seats
        """
        return self._seats

    @seats.setter
    def seats(self, seats):
        """Sets the seats of this Subscription.


        :param seats: The seats of this Subscription.
        :type seats: Seats
        """

        self._seats = seats

    @property
    def sku_id(self):
        """Gets the sku_id of this Subscription.

        A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs.

        :return: The sku_id of this Subscription.
        :rtype: str
        """
        return self._sku_id

    @sku_id.setter
    def sku_id(self, sku_id):
        """Sets the sku_id of this Subscription.

        A required property. The `skuId` is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs available in this version of the API, see Product and SKU IDs.

        :param sku_id: The sku_id of this Subscription.
        :type sku_id: str
        """

        self._sku_id = sku_id

    @property
    def sku_name(self):
        """Gets the sku_name of this Subscription.

        Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs.

        :return: The sku_name of this Subscription.
        :rtype: str
        """
        return self._sku_name

    @sku_name.setter
    def sku_name(self, sku_name):
        """Sets the sku_name of this Subscription.

        Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion. For products and SKUs available in this version of the API, see Product and SKU IDs.

        :param sku_name: The sku_name of this Subscription.
        :type sku_name: str
        """

        self._sku_name = sku_name

    @property
    def status(self):
        """Gets the status of this Subscription.

        This is an optional property.

        :return: The status of this Subscription.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Subscription.

        This is an optional property.

        :param status: The status of this Subscription.
        :type status: str
        """

        self._status = status

    @property
    def subscription_id(self):
        """Gets the subscription_id of this Subscription.

        The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions.

        :return: The subscription_id of this Subscription.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this Subscription.

        The `subscriptionId` is the subscription identifier and is unique for each customer. This is a required property. Since a `subscriptionId` changes when a subscription is updated, we recommend not using this ID as a key for persistent data. Use the `subscriptionId` as described in retrieve all reseller subscriptions.

        :param subscription_id: The subscription_id of this Subscription.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def suspension_reasons(self):
        """Gets the suspension_reasons of this Subscription.

        Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). 

        :return: The suspension_reasons of this Subscription.
        :rtype: List[str]
        """
        return self._suspension_reasons

    @suspension_reasons.setter
    def suspension_reasons(self, suspension_reasons):
        """Sets the suspension_reasons of this Subscription.

        Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many concurrent, overlapping suspension reasons. A subscription's `STATUS` is `SUSPENDED` until all pending suspensions are removed. Possible options include: - `PENDING_TOS_ACCEPTANCE` - The customer has not logged in and accepted the G Suite Resold Terms of Services. - `RENEWAL_WITH_TYPE_CANCEL` - The customer's commitment ended and their service was cancelled at the end of their term. - `RESELLER_INITIATED` - A manual suspension invoked by a Reseller. - `TRIAL_ENDED` - The customer's trial expired without a plan selected. - `OTHER` - The customer is suspended for an internal Google reason (e.g. abuse or otherwise). 

        :param suspension_reasons: The suspension_reasons of this Subscription.
        :type suspension_reasons: List[str]
        """

        self._suspension_reasons = suspension_reasons

    @property
    def transfer_info(self):
        """Gets the transfer_info of this Subscription.


        :return: The transfer_info of this Subscription.
        :rtype: SubscriptionTransferInfo
        """
        return self._transfer_info

    @transfer_info.setter
    def transfer_info(self, transfer_info):
        """Sets the transfer_info of this Subscription.


        :param transfer_info: The transfer_info of this Subscription.
        :type transfer_info: SubscriptionTransferInfo
        """

        self._transfer_info = transfer_info

    @property
    def trial_settings(self):
        """Gets the trial_settings of this Subscription.


        :return: The trial_settings of this Subscription.
        :rtype: SubscriptionTrialSettings
        """
        return self._trial_settings

    @trial_settings.setter
    def trial_settings(self, trial_settings):
        """Sets the trial_settings of this Subscription.


        :param trial_settings: The trial_settings of this Subscription.
        :type trial_settings: SubscriptionTrialSettings
        """

        self._trial_settings = trial_settings
