# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Address(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_line1: str=None, address_line2: str=None, address_line3: str=None, contact_name: str=None, country_code: str=None, kind: str='customers#address', locality: str=None, organization_name: str=None, postal_code: str=None, region: str=None):
        """Address - a model defined in OpenAPI

        :param address_line1: The address_line1 of this Address.
        :param address_line2: The address_line2 of this Address.
        :param address_line3: The address_line3 of this Address.
        :param contact_name: The contact_name of this Address.
        :param country_code: The country_code of this Address.
        :param kind: The kind of this Address.
        :param locality: The locality of this Address.
        :param organization_name: The organization_name of this Address.
        :param postal_code: The postal_code of this Address.
        :param region: The region of this Address.
        """
        self.openapi_types = {
            'address_line1': str,
            'address_line2': str,
            'address_line3': str,
            'contact_name': str,
            'country_code': str,
            'kind': str,
            'locality': str,
            'organization_name': str,
            'postal_code': str,
            'region': str
        }

        self.attribute_map = {
            'address_line1': 'addressLine1',
            'address_line2': 'addressLine2',
            'address_line3': 'addressLine3',
            'contact_name': 'contactName',
            'country_code': 'countryCode',
            'kind': 'kind',
            'locality': 'locality',
            'organization_name': 'organizationName',
            'postal_code': 'postalCode',
            'region': 'region'
        }

        self._address_line1 = address_line1
        self._address_line2 = address_line2
        self._address_line3 = address_line3
        self._contact_name = contact_name
        self._country_code = country_code
        self._kind = kind
        self._locality = locality
        self._organization_name = organization_name
        self._postal_code = postal_code
        self._region = region

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Address':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Address of this Address.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_line1(self):
        """Gets the address_line1 of this Address.

        A customer's physical address. An address can be composed of one to three lines. The `addressline2` and `addressLine3` are optional.

        :return: The address_line1 of this Address.
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """Sets the address_line1 of this Address.

        A customer's physical address. An address can be composed of one to three lines. The `addressline2` and `addressLine3` are optional.

        :param address_line1: The address_line1 of this Address.
        :type address_line1: str
        """

        self._address_line1 = address_line1

    @property
    def address_line2(self):
        """Gets the address_line2 of this Address.

        Line 2 of the address.

        :return: The address_line2 of this Address.
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """Sets the address_line2 of this Address.

        Line 2 of the address.

        :param address_line2: The address_line2 of this Address.
        :type address_line2: str
        """

        self._address_line2 = address_line2

    @property
    def address_line3(self):
        """Gets the address_line3 of this Address.

        Line 3 of the address.

        :return: The address_line3 of this Address.
        :rtype: str
        """
        return self._address_line3

    @address_line3.setter
    def address_line3(self, address_line3):
        """Sets the address_line3 of this Address.

        Line 3 of the address.

        :param address_line3: The address_line3 of this Address.
        :type address_line3: str
        """

        self._address_line3 = address_line3

    @property
    def contact_name(self):
        """Gets the contact_name of this Address.

        The customer contact's name. This is required.

        :return: The contact_name of this Address.
        :rtype: str
        """
        return self._contact_name

    @contact_name.setter
    def contact_name(self, contact_name):
        """Sets the contact_name of this Address.

        The customer contact's name. This is required.

        :param contact_name: The contact_name of this Address.
        :type contact_name: str
        """

        self._contact_name = contact_name

    @property
    def country_code(self):
        """Gets the country_code of this Address.

        For `countryCode` information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer.

        :return: The country_code of this Address.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this Address.

        For `countryCode` information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer.

        :param country_code: The country_code of this Address.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def kind(self):
        """Gets the kind of this Address.

        Identifies the resource as a customer address. Value: `customers#address`

        :return: The kind of this Address.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Address.

        Identifies the resource as a customer address. Value: `customers#address`

        :param kind: The kind of this Address.
        :type kind: str
        """

        self._kind = kind

    @property
    def locality(self):
        """Gets the locality of this Address.

        An example of a `locality` value is the city of `San Francisco`.

        :return: The locality of this Address.
        :rtype: str
        """
        return self._locality

    @locality.setter
    def locality(self, locality):
        """Sets the locality of this Address.

        An example of a `locality` value is the city of `San Francisco`.

        :param locality: The locality of this Address.
        :type locality: str
        """

        self._locality = locality

    @property
    def organization_name(self):
        """Gets the organization_name of this Address.

        The company or company division name. This is required.

        :return: The organization_name of this Address.
        :rtype: str
        """
        return self._organization_name

    @organization_name.setter
    def organization_name(self, organization_name):
        """Sets the organization_name of this Address.

        The company or company division name. This is required.

        :param organization_name: The organization_name of this Address.
        :type organization_name: str
        """

        self._organization_name = organization_name

    @property
    def postal_code(self):
        """Gets the postal_code of this Address.

        A `postalCode` example is a postal zip code such as `94043`. This property is required when creating a new customer.

        :return: The postal_code of this Address.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this Address.

        A `postalCode` example is a postal zip code such as `94043`. This property is required when creating a new customer.

        :param postal_code: The postal_code of this Address.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def region(self):
        """Gets the region of this Address.

        An example of a `region` value is `CA` for the state of California.

        :return: The region of this Address.
        :rtype: str
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this Address.

        An example of a `region` value is `CA` for the state of California.

        :param region: The region of this Address.
        :type region: str
        """

        self._region = region
