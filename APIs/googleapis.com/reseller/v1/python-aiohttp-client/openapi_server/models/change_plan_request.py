# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.seats import Seats
from openapi_server import util


class ChangePlanRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deal_code: str=None, kind: str='subscriptions#changePlanRequest', plan_name: str=None, purchase_order_id: str=None, seats: Seats=None):
        """ChangePlanRequest - a model defined in OpenAPI

        :param deal_code: The deal_code of this ChangePlanRequest.
        :param kind: The kind of this ChangePlanRequest.
        :param plan_name: The plan_name of this ChangePlanRequest.
        :param purchase_order_id: The purchase_order_id of this ChangePlanRequest.
        :param seats: The seats of this ChangePlanRequest.
        """
        self.openapi_types = {
            'deal_code': str,
            'kind': str,
            'plan_name': str,
            'purchase_order_id': str,
            'seats': Seats
        }

        self.attribute_map = {
            'deal_code': 'dealCode',
            'kind': 'kind',
            'plan_name': 'planName',
            'purchase_order_id': 'purchaseOrderId',
            'seats': 'seats'
        }

        self._deal_code = deal_code
        self._kind = kind
        self._plan_name = plan_name
        self._purchase_order_id = purchase_order_id
        self._seats = seats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangePlanRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangePlanRequest of this ChangePlanRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deal_code(self):
        """Gets the deal_code of this ChangePlanRequest.

        Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `changePlan` request in order to receive discounted rate. This property is optional. If a deal code has already been added to a subscription, this property may be left empty and the existing discounted rate will still apply (if not empty, only provide the deal code that is already present on the subscription). If a deal code has never been added to a subscription and this property is left blank, regular pricing will apply.

        :return: The deal_code of this ChangePlanRequest.
        :rtype: str
        """
        return self._deal_code

    @deal_code.setter
    def deal_code(self, deal_code):
        """Sets the deal_code of this ChangePlanRequest.

        Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in `changePlan` request in order to receive discounted rate. This property is optional. If a deal code has already been added to a subscription, this property may be left empty and the existing discounted rate will still apply (if not empty, only provide the deal code that is already present on the subscription). If a deal code has never been added to a subscription and this property is left blank, regular pricing will apply.

        :param deal_code: The deal_code of this ChangePlanRequest.
        :type deal_code: str
        """

        self._deal_code = deal_code

    @property
    def kind(self):
        """Gets the kind of this ChangePlanRequest.

        Identifies the resource as a subscription change plan request. Value: `subscriptions#changePlanRequest`

        :return: The kind of this ChangePlanRequest.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ChangePlanRequest.

        Identifies the resource as a subscription change plan request. Value: `subscriptions#changePlanRequest`

        :param kind: The kind of this ChangePlanRequest.
        :type kind: str
        """

        self._kind = kind

    @property
    def plan_name(self):
        """Gets the plan_name of this ChangePlanRequest.

        The `planName` property is required. This is the name of the subscription's payment plan. For more information about the Google payment plans, see API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` - The annual commitment plan with monthly payments *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` - The annual commitment plan with yearly payments - `FLEXIBLE` - The flexible plan - `TRIAL` - The 30-day free trial plan 

        :return: The plan_name of this ChangePlanRequest.
        :rtype: str
        """
        return self._plan_name

    @plan_name.setter
    def plan_name(self, plan_name):
        """Sets the plan_name of this ChangePlanRequest.

        The `planName` property is required. This is the name of the subscription's payment plan. For more information about the Google payment plans, see API concepts. Possible values are: - `ANNUAL_MONTHLY_PAY` - The annual commitment plan with monthly payments *Caution: *`ANNUAL_MONTHLY_PAY` is returned as `ANNUAL` in all API responses. - `ANNUAL_YEARLY_PAY` - The annual commitment plan with yearly payments - `FLEXIBLE` - The flexible plan - `TRIAL` - The 30-day free trial plan 

        :param plan_name: The plan_name of this ChangePlanRequest.
        :type plan_name: str
        """

        self._plan_name = plan_name

    @property
    def purchase_order_id(self):
        """Gets the purchase_order_id of this ChangePlanRequest.

        This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.

        :return: The purchase_order_id of this ChangePlanRequest.
        :rtype: str
        """
        return self._purchase_order_id

    @purchase_order_id.setter
    def purchase_order_id(self, purchase_order_id):
        """Sets the purchase_order_id of this ChangePlanRequest.

        This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a `purchaseOrderId` value is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.

        :param purchase_order_id: The purchase_order_id of this ChangePlanRequest.
        :type purchase_order_id: str
        """

        self._purchase_order_id = purchase_order_id

    @property
    def seats(self):
        """Gets the seats of this ChangePlanRequest.


        :return: The seats of this ChangePlanRequest.
        :rtype: Seats
        """
        return self._seats

    @seats.setter
    def seats(self, seats):
        """Sets the seats of this ChangePlanRequest.


        :param seats: The seats of this ChangePlanRequest.
        :type seats: Seats
        """

        self._seats = seats
