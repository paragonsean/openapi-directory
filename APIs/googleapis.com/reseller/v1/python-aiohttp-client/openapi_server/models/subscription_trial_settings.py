# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscriptionTrialSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_in_trial: bool=None, trial_end_time: str=None):
        """SubscriptionTrialSettings - a model defined in OpenAPI

        :param is_in_trial: The is_in_trial of this SubscriptionTrialSettings.
        :param trial_end_time: The trial_end_time of this SubscriptionTrialSettings.
        """
        self.openapi_types = {
            'is_in_trial': bool,
            'trial_end_time': str
        }

        self.attribute_map = {
            'is_in_trial': 'isInTrial',
            'trial_end_time': 'trialEndTime'
        }

        self._is_in_trial = is_in_trial
        self._trial_end_time = trial_end_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionTrialSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Subscription_trialSettings of this SubscriptionTrialSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_in_trial(self):
        """Gets the is_in_trial of this SubscriptionTrialSettings.

        Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. 

        :return: The is_in_trial of this SubscriptionTrialSettings.
        :rtype: bool
        """
        return self._is_in_trial

    @is_in_trial.setter
    def is_in_trial(self, is_in_trial):
        """Sets the is_in_trial of this SubscriptionTrialSettings.

        Determines if a subscription's plan is in a 30-day free trial or not: - `true` — The plan is in trial. - `false` — The plan is not in trial. 

        :param is_in_trial: The is_in_trial of this SubscriptionTrialSettings.
        :type is_in_trial: bool
        """

        self._is_in_trial = is_in_trial

    @property
    def trial_end_time(self):
        """Gets the trial_end_time of this SubscriptionTrialSettings.

        Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter.

        :return: The trial_end_time of this SubscriptionTrialSettings.
        :rtype: str
        """
        return self._trial_end_time

    @trial_end_time.setter
    def trial_end_time(self, trial_end_time):
        """Sets the trial_end_time of this SubscriptionTrialSettings.

        Date when the trial ends. The value is in milliseconds using the UNIX Epoch format. See an example Epoch converter.

        :param trial_end_time: The trial_end_time of this SubscriptionTrialSettings.
        :type trial_end_time: str
        """

        self._trial_end_time = trial_end_time
