# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversion import Conversion
from openapi_server.models.conversion_error import ConversionError
from openapi_server import util


class ConversionStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversion: Conversion=None, errors: List[ConversionError]=None, kind: str=None):
        """ConversionStatus - a model defined in OpenAPI

        :param conversion: The conversion of this ConversionStatus.
        :param errors: The errors of this ConversionStatus.
        :param kind: The kind of this ConversionStatus.
        """
        self.openapi_types = {
            'conversion': Conversion,
            'errors': List[ConversionError],
            'kind': str
        }

        self.attribute_map = {
            'conversion': 'conversion',
            'errors': 'errors',
            'kind': 'kind'
        }

        self._conversion = conversion
        self._errors = errors
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversionStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConversionStatus of this ConversionStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversion(self):
        """Gets the conversion of this ConversionStatus.


        :return: The conversion of this ConversionStatus.
        :rtype: Conversion
        """
        return self._conversion

    @conversion.setter
    def conversion(self, conversion):
        """Sets the conversion of this ConversionStatus.


        :param conversion: The conversion of this ConversionStatus.
        :type conversion: Conversion
        """

        self._conversion = conversion

    @property
    def errors(self):
        """Gets the errors of this ConversionStatus.

        A list of errors related to this conversion.

        :return: The errors of this ConversionStatus.
        :rtype: List[ConversionError]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this ConversionStatus.

        A list of errors related to this conversion.

        :param errors: The errors of this ConversionStatus.
        :type errors: List[ConversionError]
        """

        self._errors = errors

    @property
    def kind(self):
        """Gets the kind of this ConversionStatus.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionStatus\".

        :return: The kind of this ConversionStatus.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ConversionStatus.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionStatus\".

        :param kind: The kind of this ConversionStatus.
        :type kind: str
        """

        self._kind = kind
