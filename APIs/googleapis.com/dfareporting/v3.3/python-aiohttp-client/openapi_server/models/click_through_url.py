# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClickThroughUrl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, computed_click_through_url: str=None, custom_click_through_url: str=None, default_landing_page: bool=None, landing_page_id: str=None):
        """ClickThroughUrl - a model defined in OpenAPI

        :param computed_click_through_url: The computed_click_through_url of this ClickThroughUrl.
        :param custom_click_through_url: The custom_click_through_url of this ClickThroughUrl.
        :param default_landing_page: The default_landing_page of this ClickThroughUrl.
        :param landing_page_id: The landing_page_id of this ClickThroughUrl.
        """
        self.openapi_types = {
            'computed_click_through_url': str,
            'custom_click_through_url': str,
            'default_landing_page': bool,
            'landing_page_id': str
        }

        self.attribute_map = {
            'computed_click_through_url': 'computedClickThroughUrl',
            'custom_click_through_url': 'customClickThroughUrl',
            'default_landing_page': 'defaultLandingPage',
            'landing_page_id': 'landingPageId'
        }

        self._computed_click_through_url = computed_click_through_url
        self._custom_click_through_url = custom_click_through_url
        self._default_landing_page = default_landing_page
        self._landing_page_id = landing_page_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClickThroughUrl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClickThroughUrl of this ClickThroughUrl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def computed_click_through_url(self):
        """Gets the computed_click_through_url of this ClickThroughUrl.

        Read-only convenience field representing the actual URL that will be used for this click-through. The URL is computed as follows: - If defaultLandingPage is enabled then the campaign's default landing page URL is assigned to this field. - If defaultLandingPage is not enabled and a landingPageId is specified then that landing page's URL is assigned to this field. - If neither of the above cases apply, then the customClickThroughUrl is assigned to this field. 

        :return: The computed_click_through_url of this ClickThroughUrl.
        :rtype: str
        """
        return self._computed_click_through_url

    @computed_click_through_url.setter
    def computed_click_through_url(self, computed_click_through_url):
        """Sets the computed_click_through_url of this ClickThroughUrl.

        Read-only convenience field representing the actual URL that will be used for this click-through. The URL is computed as follows: - If defaultLandingPage is enabled then the campaign's default landing page URL is assigned to this field. - If defaultLandingPage is not enabled and a landingPageId is specified then that landing page's URL is assigned to this field. - If neither of the above cases apply, then the customClickThroughUrl is assigned to this field. 

        :param computed_click_through_url: The computed_click_through_url of this ClickThroughUrl.
        :type computed_click_through_url: str
        """

        self._computed_click_through_url = computed_click_through_url

    @property
    def custom_click_through_url(self):
        """Gets the custom_click_through_url of this ClickThroughUrl.

        Custom click-through URL. Applicable if the defaultLandingPage field is set to false and the landingPageId field is left unset.

        :return: The custom_click_through_url of this ClickThroughUrl.
        :rtype: str
        """
        return self._custom_click_through_url

    @custom_click_through_url.setter
    def custom_click_through_url(self, custom_click_through_url):
        """Sets the custom_click_through_url of this ClickThroughUrl.

        Custom click-through URL. Applicable if the defaultLandingPage field is set to false and the landingPageId field is left unset.

        :param custom_click_through_url: The custom_click_through_url of this ClickThroughUrl.
        :type custom_click_through_url: str
        """

        self._custom_click_through_url = custom_click_through_url

    @property
    def default_landing_page(self):
        """Gets the default_landing_page of this ClickThroughUrl.

        Whether the campaign default landing page is used.

        :return: The default_landing_page of this ClickThroughUrl.
        :rtype: bool
        """
        return self._default_landing_page

    @default_landing_page.setter
    def default_landing_page(self, default_landing_page):
        """Sets the default_landing_page of this ClickThroughUrl.

        Whether the campaign default landing page is used.

        :param default_landing_page: The default_landing_page of this ClickThroughUrl.
        :type default_landing_page: bool
        """

        self._default_landing_page = default_landing_page

    @property
    def landing_page_id(self):
        """Gets the landing_page_id of this ClickThroughUrl.

        ID of the landing page for the click-through URL. Applicable if the defaultLandingPage field is set to false.

        :return: The landing_page_id of this ClickThroughUrl.
        :rtype: str
        """
        return self._landing_page_id

    @landing_page_id.setter
    def landing_page_id(self, landing_page_id):
        """Sets the landing_page_id of this ClickThroughUrl.

        ID of the landing page for the click-through URL. Applicable if the defaultLandingPage field is set to false.

        :param landing_page_id: The landing_page_id of this ClickThroughUrl.
        :type landing_page_id: str
        """

        self._landing_page_id = landing_page_id
