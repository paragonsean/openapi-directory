# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_value import DimensionValue
from openapi_server.models.site_contact import SiteContact
from openapi_server.models.site_settings import SiteSettings
from openapi_server.models.site_video_settings import SiteVideoSettings
from openapi_server import util


class Site(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, approved: bool=None, directory_site_id: str=None, directory_site_id_dimension_value: DimensionValue=None, id: str=None, id_dimension_value: DimensionValue=None, key_name: str=None, kind: str=None, name: str=None, site_contacts: List[SiteContact]=None, site_settings: SiteSettings=None, subaccount_id: str=None, video_settings: SiteVideoSettings=None):
        """Site - a model defined in OpenAPI

        :param account_id: The account_id of this Site.
        :param approved: The approved of this Site.
        :param directory_site_id: The directory_site_id of this Site.
        :param directory_site_id_dimension_value: The directory_site_id_dimension_value of this Site.
        :param id: The id of this Site.
        :param id_dimension_value: The id_dimension_value of this Site.
        :param key_name: The key_name of this Site.
        :param kind: The kind of this Site.
        :param name: The name of this Site.
        :param site_contacts: The site_contacts of this Site.
        :param site_settings: The site_settings of this Site.
        :param subaccount_id: The subaccount_id of this Site.
        :param video_settings: The video_settings of this Site.
        """
        self.openapi_types = {
            'account_id': str,
            'approved': bool,
            'directory_site_id': str,
            'directory_site_id_dimension_value': DimensionValue,
            'id': str,
            'id_dimension_value': DimensionValue,
            'key_name': str,
            'kind': str,
            'name': str,
            'site_contacts': List[SiteContact],
            'site_settings': SiteSettings,
            'subaccount_id': str,
            'video_settings': SiteVideoSettings
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'approved': 'approved',
            'directory_site_id': 'directorySiteId',
            'directory_site_id_dimension_value': 'directorySiteIdDimensionValue',
            'id': 'id',
            'id_dimension_value': 'idDimensionValue',
            'key_name': 'keyName',
            'kind': 'kind',
            'name': 'name',
            'site_contacts': 'siteContacts',
            'site_settings': 'siteSettings',
            'subaccount_id': 'subaccountId',
            'video_settings': 'videoSettings'
        }

        self._account_id = account_id
        self._approved = approved
        self._directory_site_id = directory_site_id
        self._directory_site_id_dimension_value = directory_site_id_dimension_value
        self._id = id
        self._id_dimension_value = id_dimension_value
        self._key_name = key_name
        self._kind = kind
        self._name = name
        self._site_contacts = site_contacts
        self._site_settings = site_settings
        self._subaccount_id = subaccount_id
        self._video_settings = video_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Site':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Site of this Site.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Site.

        Account ID of this site. This is a read-only field that can be left blank.

        :return: The account_id of this Site.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Site.

        Account ID of this site. This is a read-only field that can be left blank.

        :param account_id: The account_id of this Site.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def approved(self):
        """Gets the approved of this Site.

        Whether this site is approved.

        :return: The approved of this Site.
        :rtype: bool
        """
        return self._approved

    @approved.setter
    def approved(self, approved):
        """Sets the approved of this Site.

        Whether this site is approved.

        :param approved: The approved of this Site.
        :type approved: bool
        """

        self._approved = approved

    @property
    def directory_site_id(self):
        """Gets the directory_site_id of this Site.

        Directory site associated with this site. This is a required field that is read-only after insertion.

        :return: The directory_site_id of this Site.
        :rtype: str
        """
        return self._directory_site_id

    @directory_site_id.setter
    def directory_site_id(self, directory_site_id):
        """Sets the directory_site_id of this Site.

        Directory site associated with this site. This is a required field that is read-only after insertion.

        :param directory_site_id: The directory_site_id of this Site.
        :type directory_site_id: str
        """

        self._directory_site_id = directory_site_id

    @property
    def directory_site_id_dimension_value(self):
        """Gets the directory_site_id_dimension_value of this Site.


        :return: The directory_site_id_dimension_value of this Site.
        :rtype: DimensionValue
        """
        return self._directory_site_id_dimension_value

    @directory_site_id_dimension_value.setter
    def directory_site_id_dimension_value(self, directory_site_id_dimension_value):
        """Sets the directory_site_id_dimension_value of this Site.


        :param directory_site_id_dimension_value: The directory_site_id_dimension_value of this Site.
        :type directory_site_id_dimension_value: DimensionValue
        """

        self._directory_site_id_dimension_value = directory_site_id_dimension_value

    @property
    def id(self):
        """Gets the id of this Site.

        ID of this site. This is a read-only, auto-generated field.

        :return: The id of this Site.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Site.

        ID of this site. This is a read-only, auto-generated field.

        :param id: The id of this Site.
        :type id: str
        """

        self._id = id

    @property
    def id_dimension_value(self):
        """Gets the id_dimension_value of this Site.


        :return: The id_dimension_value of this Site.
        :rtype: DimensionValue
        """
        return self._id_dimension_value

    @id_dimension_value.setter
    def id_dimension_value(self, id_dimension_value):
        """Sets the id_dimension_value of this Site.


        :param id_dimension_value: The id_dimension_value of this Site.
        :type id_dimension_value: DimensionValue
        """

        self._id_dimension_value = id_dimension_value

    @property
    def key_name(self):
        """Gets the key_name of this Site.

        Key name of this site. This is a read-only, auto-generated field.

        :return: The key_name of this Site.
        :rtype: str
        """
        return self._key_name

    @key_name.setter
    def key_name(self, key_name):
        """Sets the key_name of this Site.

        Key name of this site. This is a read-only, auto-generated field.

        :param key_name: The key_name of this Site.
        :type key_name: str
        """

        self._key_name = key_name

    @property
    def kind(self):
        """Gets the kind of this Site.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#site\".

        :return: The kind of this Site.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Site.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#site\".

        :param kind: The kind of this Site.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this Site.

        Name of this site.This is a required field. Must be less than 128 characters long. If this site is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this site is a top-level site, and the name must be unique among top-level sites of the same account.

        :return: The name of this Site.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Site.

        Name of this site.This is a required field. Must be less than 128 characters long. If this site is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this site is a top-level site, and the name must be unique among top-level sites of the same account.

        :param name: The name of this Site.
        :type name: str
        """

        self._name = name

    @property
    def site_contacts(self):
        """Gets the site_contacts of this Site.

        Site contacts.

        :return: The site_contacts of this Site.
        :rtype: List[SiteContact]
        """
        return self._site_contacts

    @site_contacts.setter
    def site_contacts(self, site_contacts):
        """Sets the site_contacts of this Site.

        Site contacts.

        :param site_contacts: The site_contacts of this Site.
        :type site_contacts: List[SiteContact]
        """

        self._site_contacts = site_contacts

    @property
    def site_settings(self):
        """Gets the site_settings of this Site.


        :return: The site_settings of this Site.
        :rtype: SiteSettings
        """
        return self._site_settings

    @site_settings.setter
    def site_settings(self, site_settings):
        """Sets the site_settings of this Site.


        :param site_settings: The site_settings of this Site.
        :type site_settings: SiteSettings
        """

        self._site_settings = site_settings

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this Site.

        Subaccount ID of this site. This is a read-only field that can be left blank.

        :return: The subaccount_id of this Site.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this Site.

        Subaccount ID of this site. This is a read-only field that can be left blank.

        :param subaccount_id: The subaccount_id of this Site.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def video_settings(self):
        """Gets the video_settings of this Site.


        :return: The video_settings of this Site.
        :rtype: SiteVideoSettings
        """
        return self._video_settings

    @video_settings.setter
    def video_settings(self, video_settings):
        """Sets the video_settings of this Site.


        :param video_settings: The video_settings of this Site.
        :type video_settings: SiteVideoSettings
        """

        self._video_settings = video_settings
