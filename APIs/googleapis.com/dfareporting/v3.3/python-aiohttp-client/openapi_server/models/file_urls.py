# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileUrls(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_url: str=None, browser_url: str=None):
        """FileUrls - a model defined in OpenAPI

        :param api_url: The api_url of this FileUrls.
        :param browser_url: The browser_url of this FileUrls.
        """
        self.openapi_types = {
            'api_url': str,
            'browser_url': str
        }

        self.attribute_map = {
            'api_url': 'apiUrl',
            'browser_url': 'browserUrl'
        }

        self._api_url = api_url
        self._browser_url = browser_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileUrls':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The File_urls of this FileUrls.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_url(self):
        """Gets the api_url of this FileUrls.

        The URL for downloading the report data through the API.

        :return: The api_url of this FileUrls.
        :rtype: str
        """
        return self._api_url

    @api_url.setter
    def api_url(self, api_url):
        """Sets the api_url of this FileUrls.

        The URL for downloading the report data through the API.

        :param api_url: The api_url of this FileUrls.
        :type api_url: str
        """

        self._api_url = api_url

    @property
    def browser_url(self):
        """Gets the browser_url of this FileUrls.

        The URL for downloading the report data through a browser.

        :return: The browser_url of this FileUrls.
        :rtype: str
        """
        return self._browser_url

    @browser_url.setter
    def browser_url(self, browser_url):
        """Sets the browser_url of this FileUrls.

        The URL for downloading the report data through a browser.

        :param browser_url: The browser_url of this FileUrls.
        :type browser_url: str
        """

        self._browser_url = browser_url
