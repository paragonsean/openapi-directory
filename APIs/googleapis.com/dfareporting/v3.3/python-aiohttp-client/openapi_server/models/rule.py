# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Rule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_id: str=None, name: str=None, targeting_template_id: str=None):
        """Rule - a model defined in OpenAPI

        :param asset_id: The asset_id of this Rule.
        :param name: The name of this Rule.
        :param targeting_template_id: The targeting_template_id of this Rule.
        """
        self.openapi_types = {
            'asset_id': str,
            'name': str,
            'targeting_template_id': str
        }

        self.attribute_map = {
            'asset_id': 'assetId',
            'name': 'name',
            'targeting_template_id': 'targetingTemplateId'
        }

        self._asset_id = asset_id
        self._name = name
        self._targeting_template_id = targeting_template_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Rule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Rule of this Rule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_id(self):
        """Gets the asset_id of this Rule.

        A creativeAssets[].id. This should refer to one of the parent assets in this creative. This is a required field.

        :return: The asset_id of this Rule.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this Rule.

        A creativeAssets[].id. This should refer to one of the parent assets in this creative. This is a required field.

        :param asset_id: The asset_id of this Rule.
        :type asset_id: str
        """

        self._asset_id = asset_id

    @property
    def name(self):
        """Gets the name of this Rule.

        A user-friendly name for this rule. This is a required field.

        :return: The name of this Rule.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Rule.

        A user-friendly name for this rule. This is a required field.

        :param name: The name of this Rule.
        :type name: str
        """

        self._name = name

    @property
    def targeting_template_id(self):
        """Gets the targeting_template_id of this Rule.

        A targeting template ID. The targeting from the targeting template will be used to determine whether this asset should be served. This is a required field.

        :return: The targeting_template_id of this Rule.
        :rtype: str
        """
        return self._targeting_template_id

    @targeting_template_id.setter
    def targeting_template_id(self, targeting_template_id):
        """Sets the targeting_template_id of this Rule.

        A targeting template ID. The targeting from the targeting template will be used to determine whether this asset should be served. This is a required field.

        :param targeting_template_id: The targeting_template_id of this Rule.
        :type targeting_template_id: str
        """

        self._targeting_template_id = targeting_template_id
