# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension import Dimension
from openapi_server.models.metric import Metric
from openapi_server import util


class PathToConversionReportCompatibleFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversion_dimensions: List[Dimension]=None, custom_floodlight_variables: List[Dimension]=None, kind: str=None, metrics: List[Metric]=None, per_interaction_dimensions: List[Dimension]=None):
        """PathToConversionReportCompatibleFields - a model defined in OpenAPI

        :param conversion_dimensions: The conversion_dimensions of this PathToConversionReportCompatibleFields.
        :param custom_floodlight_variables: The custom_floodlight_variables of this PathToConversionReportCompatibleFields.
        :param kind: The kind of this PathToConversionReportCompatibleFields.
        :param metrics: The metrics of this PathToConversionReportCompatibleFields.
        :param per_interaction_dimensions: The per_interaction_dimensions of this PathToConversionReportCompatibleFields.
        """
        self.openapi_types = {
            'conversion_dimensions': List[Dimension],
            'custom_floodlight_variables': List[Dimension],
            'kind': str,
            'metrics': List[Metric],
            'per_interaction_dimensions': List[Dimension]
        }

        self.attribute_map = {
            'conversion_dimensions': 'conversionDimensions',
            'custom_floodlight_variables': 'customFloodlightVariables',
            'kind': 'kind',
            'metrics': 'metrics',
            'per_interaction_dimensions': 'perInteractionDimensions'
        }

        self._conversion_dimensions = conversion_dimensions
        self._custom_floodlight_variables = custom_floodlight_variables
        self._kind = kind
        self._metrics = metrics
        self._per_interaction_dimensions = per_interaction_dimensions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PathToConversionReportCompatibleFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PathToConversionReportCompatibleFields of this PathToConversionReportCompatibleFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversion_dimensions(self):
        """Gets the conversion_dimensions of this PathToConversionReportCompatibleFields.

        Conversion dimensions which are compatible to be selected in the \"conversionDimensions\" section of the report.

        :return: The conversion_dimensions of this PathToConversionReportCompatibleFields.
        :rtype: List[Dimension]
        """
        return self._conversion_dimensions

    @conversion_dimensions.setter
    def conversion_dimensions(self, conversion_dimensions):
        """Sets the conversion_dimensions of this PathToConversionReportCompatibleFields.

        Conversion dimensions which are compatible to be selected in the \"conversionDimensions\" section of the report.

        :param conversion_dimensions: The conversion_dimensions of this PathToConversionReportCompatibleFields.
        :type conversion_dimensions: List[Dimension]
        """

        self._conversion_dimensions = conversion_dimensions

    @property
    def custom_floodlight_variables(self):
        """Gets the custom_floodlight_variables of this PathToConversionReportCompatibleFields.

        Custom floodlight variables which are compatible to be selected in the \"customFloodlightVariables\" section of the report.

        :return: The custom_floodlight_variables of this PathToConversionReportCompatibleFields.
        :rtype: List[Dimension]
        """
        return self._custom_floodlight_variables

    @custom_floodlight_variables.setter
    def custom_floodlight_variables(self, custom_floodlight_variables):
        """Sets the custom_floodlight_variables of this PathToConversionReportCompatibleFields.

        Custom floodlight variables which are compatible to be selected in the \"customFloodlightVariables\" section of the report.

        :param custom_floodlight_variables: The custom_floodlight_variables of this PathToConversionReportCompatibleFields.
        :type custom_floodlight_variables: List[Dimension]
        """

        self._custom_floodlight_variables = custom_floodlight_variables

    @property
    def kind(self):
        """Gets the kind of this PathToConversionReportCompatibleFields.

        The kind of resource this is, in this case dfareporting#pathToConversionReportCompatibleFields.

        :return: The kind of this PathToConversionReportCompatibleFields.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PathToConversionReportCompatibleFields.

        The kind of resource this is, in this case dfareporting#pathToConversionReportCompatibleFields.

        :param kind: The kind of this PathToConversionReportCompatibleFields.
        :type kind: str
        """

        self._kind = kind

    @property
    def metrics(self):
        """Gets the metrics of this PathToConversionReportCompatibleFields.

        Metrics which are compatible to be selected in the \"metricNames\" section of the report.

        :return: The metrics of this PathToConversionReportCompatibleFields.
        :rtype: List[Metric]
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this PathToConversionReportCompatibleFields.

        Metrics which are compatible to be selected in the \"metricNames\" section of the report.

        :param metrics: The metrics of this PathToConversionReportCompatibleFields.
        :type metrics: List[Metric]
        """

        self._metrics = metrics

    @property
    def per_interaction_dimensions(self):
        """Gets the per_interaction_dimensions of this PathToConversionReportCompatibleFields.

        Per-interaction dimensions which are compatible to be selected in the \"perInteractionDimensions\" section of the report.

        :return: The per_interaction_dimensions of this PathToConversionReportCompatibleFields.
        :rtype: List[Dimension]
        """
        return self._per_interaction_dimensions

    @per_interaction_dimensions.setter
    def per_interaction_dimensions(self, per_interaction_dimensions):
        """Sets the per_interaction_dimensions of this PathToConversionReportCompatibleFields.

        Per-interaction dimensions which are compatible to be selected in the \"perInteractionDimensions\" section of the report.

        :param per_interaction_dimensions: The per_interaction_dimensions of this PathToConversionReportCompatibleFields.
        :type per_interaction_dimensions: List[Dimension]
        """

        self._per_interaction_dimensions = per_interaction_dimensions
