# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_value import DimensionValue
from openapi_server.models.floodlight_activity_dynamic_tag import FloodlightActivityDynamicTag
from openapi_server import util


class FloodlightActivityPublisherDynamicTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, click_through: bool=None, directory_site_id: str=None, dynamic_tag: FloodlightActivityDynamicTag=None, site_id: str=None, site_id_dimension_value: DimensionValue=None, view_through: bool=None):
        """FloodlightActivityPublisherDynamicTag - a model defined in OpenAPI

        :param click_through: The click_through of this FloodlightActivityPublisherDynamicTag.
        :param directory_site_id: The directory_site_id of this FloodlightActivityPublisherDynamicTag.
        :param dynamic_tag: The dynamic_tag of this FloodlightActivityPublisherDynamicTag.
        :param site_id: The site_id of this FloodlightActivityPublisherDynamicTag.
        :param site_id_dimension_value: The site_id_dimension_value of this FloodlightActivityPublisherDynamicTag.
        :param view_through: The view_through of this FloodlightActivityPublisherDynamicTag.
        """
        self.openapi_types = {
            'click_through': bool,
            'directory_site_id': str,
            'dynamic_tag': FloodlightActivityDynamicTag,
            'site_id': str,
            'site_id_dimension_value': DimensionValue,
            'view_through': bool
        }

        self.attribute_map = {
            'click_through': 'clickThrough',
            'directory_site_id': 'directorySiteId',
            'dynamic_tag': 'dynamicTag',
            'site_id': 'siteId',
            'site_id_dimension_value': 'siteIdDimensionValue',
            'view_through': 'viewThrough'
        }

        self._click_through = click_through
        self._directory_site_id = directory_site_id
        self._dynamic_tag = dynamic_tag
        self._site_id = site_id
        self._site_id_dimension_value = site_id_dimension_value
        self._view_through = view_through

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FloodlightActivityPublisherDynamicTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FloodlightActivityPublisherDynamicTag of this FloodlightActivityPublisherDynamicTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def click_through(self):
        """Gets the click_through of this FloodlightActivityPublisherDynamicTag.

        Whether this tag is applicable only for click-throughs.

        :return: The click_through of this FloodlightActivityPublisherDynamicTag.
        :rtype: bool
        """
        return self._click_through

    @click_through.setter
    def click_through(self, click_through):
        """Sets the click_through of this FloodlightActivityPublisherDynamicTag.

        Whether this tag is applicable only for click-throughs.

        :param click_through: The click_through of this FloodlightActivityPublisherDynamicTag.
        :type click_through: bool
        """

        self._click_through = click_through

    @property
    def directory_site_id(self):
        """Gets the directory_site_id of this FloodlightActivityPublisherDynamicTag.

        Directory site ID of this dynamic tag. This is a write-only field that can be used as an alternative to the siteId field. When this resource is retrieved, only the siteId field will be populated.

        :return: The directory_site_id of this FloodlightActivityPublisherDynamicTag.
        :rtype: str
        """
        return self._directory_site_id

    @directory_site_id.setter
    def directory_site_id(self, directory_site_id):
        """Sets the directory_site_id of this FloodlightActivityPublisherDynamicTag.

        Directory site ID of this dynamic tag. This is a write-only field that can be used as an alternative to the siteId field. When this resource is retrieved, only the siteId field will be populated.

        :param directory_site_id: The directory_site_id of this FloodlightActivityPublisherDynamicTag.
        :type directory_site_id: str
        """

        self._directory_site_id = directory_site_id

    @property
    def dynamic_tag(self):
        """Gets the dynamic_tag of this FloodlightActivityPublisherDynamicTag.


        :return: The dynamic_tag of this FloodlightActivityPublisherDynamicTag.
        :rtype: FloodlightActivityDynamicTag
        """
        return self._dynamic_tag

    @dynamic_tag.setter
    def dynamic_tag(self, dynamic_tag):
        """Sets the dynamic_tag of this FloodlightActivityPublisherDynamicTag.


        :param dynamic_tag: The dynamic_tag of this FloodlightActivityPublisherDynamicTag.
        :type dynamic_tag: FloodlightActivityDynamicTag
        """

        self._dynamic_tag = dynamic_tag

    @property
    def site_id(self):
        """Gets the site_id of this FloodlightActivityPublisherDynamicTag.

        Site ID of this dynamic tag.

        :return: The site_id of this FloodlightActivityPublisherDynamicTag.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this FloodlightActivityPublisherDynamicTag.

        Site ID of this dynamic tag.

        :param site_id: The site_id of this FloodlightActivityPublisherDynamicTag.
        :type site_id: str
        """

        self._site_id = site_id

    @property
    def site_id_dimension_value(self):
        """Gets the site_id_dimension_value of this FloodlightActivityPublisherDynamicTag.


        :return: The site_id_dimension_value of this FloodlightActivityPublisherDynamicTag.
        :rtype: DimensionValue
        """
        return self._site_id_dimension_value

    @site_id_dimension_value.setter
    def site_id_dimension_value(self, site_id_dimension_value):
        """Sets the site_id_dimension_value of this FloodlightActivityPublisherDynamicTag.


        :param site_id_dimension_value: The site_id_dimension_value of this FloodlightActivityPublisherDynamicTag.
        :type site_id_dimension_value: DimensionValue
        """

        self._site_id_dimension_value = site_id_dimension_value

    @property
    def view_through(self):
        """Gets the view_through of this FloodlightActivityPublisherDynamicTag.

        Whether this tag is applicable only for view-throughs.

        :return: The view_through of this FloodlightActivityPublisherDynamicTag.
        :rtype: bool
        """
        return self._view_through

    @view_through.setter
    def view_through(self, view_through):
        """Sets the view_through of this FloodlightActivityPublisherDynamicTag.

        Whether this tag is applicable only for view-throughs.

        :param view_through: The view_through of this FloodlightActivityPublisherDynamicTag.
        :type view_through: bool
        """

        self._view_through = view_through
