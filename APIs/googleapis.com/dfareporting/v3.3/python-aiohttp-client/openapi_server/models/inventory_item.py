# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ad_slot import AdSlot
from openapi_server.models.last_modified_info import LastModifiedInfo
from openapi_server.models.pricing import Pricing
from openapi_server import util


class InventoryItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, ad_slots: List[AdSlot]=None, advertiser_id: str=None, content_category_id: str=None, estimated_click_through_rate: str=None, estimated_conversion_rate: str=None, id: str=None, in_plan: bool=None, kind: str=None, last_modified_info: LastModifiedInfo=None, name: str=None, negotiation_channel_id: str=None, order_id: str=None, placement_strategy_id: str=None, pricing: Pricing=None, project_id: str=None, rfp_id: str=None, site_id: str=None, subaccount_id: str=None, type: str=None):
        """InventoryItem - a model defined in OpenAPI

        :param account_id: The account_id of this InventoryItem.
        :param ad_slots: The ad_slots of this InventoryItem.
        :param advertiser_id: The advertiser_id of this InventoryItem.
        :param content_category_id: The content_category_id of this InventoryItem.
        :param estimated_click_through_rate: The estimated_click_through_rate of this InventoryItem.
        :param estimated_conversion_rate: The estimated_conversion_rate of this InventoryItem.
        :param id: The id of this InventoryItem.
        :param in_plan: The in_plan of this InventoryItem.
        :param kind: The kind of this InventoryItem.
        :param last_modified_info: The last_modified_info of this InventoryItem.
        :param name: The name of this InventoryItem.
        :param negotiation_channel_id: The negotiation_channel_id of this InventoryItem.
        :param order_id: The order_id of this InventoryItem.
        :param placement_strategy_id: The placement_strategy_id of this InventoryItem.
        :param pricing: The pricing of this InventoryItem.
        :param project_id: The project_id of this InventoryItem.
        :param rfp_id: The rfp_id of this InventoryItem.
        :param site_id: The site_id of this InventoryItem.
        :param subaccount_id: The subaccount_id of this InventoryItem.
        :param type: The type of this InventoryItem.
        """
        self.openapi_types = {
            'account_id': str,
            'ad_slots': List[AdSlot],
            'advertiser_id': str,
            'content_category_id': str,
            'estimated_click_through_rate': str,
            'estimated_conversion_rate': str,
            'id': str,
            'in_plan': bool,
            'kind': str,
            'last_modified_info': LastModifiedInfo,
            'name': str,
            'negotiation_channel_id': str,
            'order_id': str,
            'placement_strategy_id': str,
            'pricing': Pricing,
            'project_id': str,
            'rfp_id': str,
            'site_id': str,
            'subaccount_id': str,
            'type': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'ad_slots': 'adSlots',
            'advertiser_id': 'advertiserId',
            'content_category_id': 'contentCategoryId',
            'estimated_click_through_rate': 'estimatedClickThroughRate',
            'estimated_conversion_rate': 'estimatedConversionRate',
            'id': 'id',
            'in_plan': 'inPlan',
            'kind': 'kind',
            'last_modified_info': 'lastModifiedInfo',
            'name': 'name',
            'negotiation_channel_id': 'negotiationChannelId',
            'order_id': 'orderId',
            'placement_strategy_id': 'placementStrategyId',
            'pricing': 'pricing',
            'project_id': 'projectId',
            'rfp_id': 'rfpId',
            'site_id': 'siteId',
            'subaccount_id': 'subaccountId',
            'type': 'type'
        }

        self._account_id = account_id
        self._ad_slots = ad_slots
        self._advertiser_id = advertiser_id
        self._content_category_id = content_category_id
        self._estimated_click_through_rate = estimated_click_through_rate
        self._estimated_conversion_rate = estimated_conversion_rate
        self._id = id
        self._in_plan = in_plan
        self._kind = kind
        self._last_modified_info = last_modified_info
        self._name = name
        self._negotiation_channel_id = negotiation_channel_id
        self._order_id = order_id
        self._placement_strategy_id = placement_strategy_id
        self._pricing = pricing
        self._project_id = project_id
        self._rfp_id = rfp_id
        self._site_id = site_id
        self._subaccount_id = subaccount_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventoryItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventoryItem of this InventoryItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this InventoryItem.

        Account ID of this inventory item.

        :return: The account_id of this InventoryItem.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this InventoryItem.

        Account ID of this inventory item.

        :param account_id: The account_id of this InventoryItem.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def ad_slots(self):
        """Gets the ad_slots of this InventoryItem.

        Ad slots of this inventory item. If this inventory item represents a standalone placement, there will be exactly one ad slot. If this inventory item represents a placement group, there will be more than one ad slot, each representing one child placement in that placement group.

        :return: The ad_slots of this InventoryItem.
        :rtype: List[AdSlot]
        """
        return self._ad_slots

    @ad_slots.setter
    def ad_slots(self, ad_slots):
        """Sets the ad_slots of this InventoryItem.

        Ad slots of this inventory item. If this inventory item represents a standalone placement, there will be exactly one ad slot. If this inventory item represents a placement group, there will be more than one ad slot, each representing one child placement in that placement group.

        :param ad_slots: The ad_slots of this InventoryItem.
        :type ad_slots: List[AdSlot]
        """

        self._ad_slots = ad_slots

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this InventoryItem.

        Advertiser ID of this inventory item.

        :return: The advertiser_id of this InventoryItem.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this InventoryItem.

        Advertiser ID of this inventory item.

        :param advertiser_id: The advertiser_id of this InventoryItem.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def content_category_id(self):
        """Gets the content_category_id of this InventoryItem.

        Content category ID of this inventory item.

        :return: The content_category_id of this InventoryItem.
        :rtype: str
        """
        return self._content_category_id

    @content_category_id.setter
    def content_category_id(self, content_category_id):
        """Sets the content_category_id of this InventoryItem.

        Content category ID of this inventory item.

        :param content_category_id: The content_category_id of this InventoryItem.
        :type content_category_id: str
        """

        self._content_category_id = content_category_id

    @property
    def estimated_click_through_rate(self):
        """Gets the estimated_click_through_rate of this InventoryItem.

        Estimated click-through rate of this inventory item.

        :return: The estimated_click_through_rate of this InventoryItem.
        :rtype: str
        """
        return self._estimated_click_through_rate

    @estimated_click_through_rate.setter
    def estimated_click_through_rate(self, estimated_click_through_rate):
        """Sets the estimated_click_through_rate of this InventoryItem.

        Estimated click-through rate of this inventory item.

        :param estimated_click_through_rate: The estimated_click_through_rate of this InventoryItem.
        :type estimated_click_through_rate: str
        """

        self._estimated_click_through_rate = estimated_click_through_rate

    @property
    def estimated_conversion_rate(self):
        """Gets the estimated_conversion_rate of this InventoryItem.

        Estimated conversion rate of this inventory item.

        :return: The estimated_conversion_rate of this InventoryItem.
        :rtype: str
        """
        return self._estimated_conversion_rate

    @estimated_conversion_rate.setter
    def estimated_conversion_rate(self, estimated_conversion_rate):
        """Sets the estimated_conversion_rate of this InventoryItem.

        Estimated conversion rate of this inventory item.

        :param estimated_conversion_rate: The estimated_conversion_rate of this InventoryItem.
        :type estimated_conversion_rate: str
        """

        self._estimated_conversion_rate = estimated_conversion_rate

    @property
    def id(self):
        """Gets the id of this InventoryItem.

        ID of this inventory item.

        :return: The id of this InventoryItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InventoryItem.

        ID of this inventory item.

        :param id: The id of this InventoryItem.
        :type id: str
        """

        self._id = id

    @property
    def in_plan(self):
        """Gets the in_plan of this InventoryItem.

        Whether this inventory item is in plan.

        :return: The in_plan of this InventoryItem.
        :rtype: bool
        """
        return self._in_plan

    @in_plan.setter
    def in_plan(self, in_plan):
        """Sets the in_plan of this InventoryItem.

        Whether this inventory item is in plan.

        :param in_plan: The in_plan of this InventoryItem.
        :type in_plan: bool
        """

        self._in_plan = in_plan

    @property
    def kind(self):
        """Gets the kind of this InventoryItem.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#inventoryItem\".

        :return: The kind of this InventoryItem.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this InventoryItem.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#inventoryItem\".

        :param kind: The kind of this InventoryItem.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_modified_info(self):
        """Gets the last_modified_info of this InventoryItem.


        :return: The last_modified_info of this InventoryItem.
        :rtype: LastModifiedInfo
        """
        return self._last_modified_info

    @last_modified_info.setter
    def last_modified_info(self, last_modified_info):
        """Sets the last_modified_info of this InventoryItem.


        :param last_modified_info: The last_modified_info of this InventoryItem.
        :type last_modified_info: LastModifiedInfo
        """

        self._last_modified_info = last_modified_info

    @property
    def name(self):
        """Gets the name of this InventoryItem.

        Name of this inventory item. For standalone inventory items, this is the same name as that of its only ad slot. For group inventory items, this can differ from the name of any of its ad slots.

        :return: The name of this InventoryItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InventoryItem.

        Name of this inventory item. For standalone inventory items, this is the same name as that of its only ad slot. For group inventory items, this can differ from the name of any of its ad slots.

        :param name: The name of this InventoryItem.
        :type name: str
        """

        self._name = name

    @property
    def negotiation_channel_id(self):
        """Gets the negotiation_channel_id of this InventoryItem.

        Negotiation channel ID of this inventory item.

        :return: The negotiation_channel_id of this InventoryItem.
        :rtype: str
        """
        return self._negotiation_channel_id

    @negotiation_channel_id.setter
    def negotiation_channel_id(self, negotiation_channel_id):
        """Sets the negotiation_channel_id of this InventoryItem.

        Negotiation channel ID of this inventory item.

        :param negotiation_channel_id: The negotiation_channel_id of this InventoryItem.
        :type negotiation_channel_id: str
        """

        self._negotiation_channel_id = negotiation_channel_id

    @property
    def order_id(self):
        """Gets the order_id of this InventoryItem.

        Order ID of this inventory item.

        :return: The order_id of this InventoryItem.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this InventoryItem.

        Order ID of this inventory item.

        :param order_id: The order_id of this InventoryItem.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def placement_strategy_id(self):
        """Gets the placement_strategy_id of this InventoryItem.

        Placement strategy ID of this inventory item.

        :return: The placement_strategy_id of this InventoryItem.
        :rtype: str
        """
        return self._placement_strategy_id

    @placement_strategy_id.setter
    def placement_strategy_id(self, placement_strategy_id):
        """Sets the placement_strategy_id of this InventoryItem.

        Placement strategy ID of this inventory item.

        :param placement_strategy_id: The placement_strategy_id of this InventoryItem.
        :type placement_strategy_id: str
        """

        self._placement_strategy_id = placement_strategy_id

    @property
    def pricing(self):
        """Gets the pricing of this InventoryItem.


        :return: The pricing of this InventoryItem.
        :rtype: Pricing
        """
        return self._pricing

    @pricing.setter
    def pricing(self, pricing):
        """Sets the pricing of this InventoryItem.


        :param pricing: The pricing of this InventoryItem.
        :type pricing: Pricing
        """

        self._pricing = pricing

    @property
    def project_id(self):
        """Gets the project_id of this InventoryItem.

        Project ID of this inventory item.

        :return: The project_id of this InventoryItem.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this InventoryItem.

        Project ID of this inventory item.

        :param project_id: The project_id of this InventoryItem.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def rfp_id(self):
        """Gets the rfp_id of this InventoryItem.

        RFP ID of this inventory item.

        :return: The rfp_id of this InventoryItem.
        :rtype: str
        """
        return self._rfp_id

    @rfp_id.setter
    def rfp_id(self, rfp_id):
        """Sets the rfp_id of this InventoryItem.

        RFP ID of this inventory item.

        :param rfp_id: The rfp_id of this InventoryItem.
        :type rfp_id: str
        """

        self._rfp_id = rfp_id

    @property
    def site_id(self):
        """Gets the site_id of this InventoryItem.

        ID of the site this inventory item is associated with.

        :return: The site_id of this InventoryItem.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this InventoryItem.

        ID of the site this inventory item is associated with.

        :param site_id: The site_id of this InventoryItem.
        :type site_id: str
        """

        self._site_id = site_id

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this InventoryItem.

        Subaccount ID of this inventory item.

        :return: The subaccount_id of this InventoryItem.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this InventoryItem.

        Subaccount ID of this inventory item.

        :param subaccount_id: The subaccount_id of this InventoryItem.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def type(self):
        """Gets the type of this InventoryItem.

        Type of inventory item.

        :return: The type of this InventoryItem.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InventoryItem.

        Type of inventory item.

        :param type: The type of this InventoryItem.
        :type type: str
        """
        allowed_values = ["PLANNING_PLACEMENT_TYPE_REGULAR", "PLANNING_PLACEMENT_TYPE_CREDIT"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
