# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostalCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, country_code: str=None, country_dart_id: str=None, id: str=None, kind: str=None):
        """PostalCode - a model defined in OpenAPI

        :param code: The code of this PostalCode.
        :param country_code: The country_code of this PostalCode.
        :param country_dart_id: The country_dart_id of this PostalCode.
        :param id: The id of this PostalCode.
        :param kind: The kind of this PostalCode.
        """
        self.openapi_types = {
            'code': str,
            'country_code': str,
            'country_dart_id': str,
            'id': str,
            'kind': str
        }

        self.attribute_map = {
            'code': 'code',
            'country_code': 'countryCode',
            'country_dart_id': 'countryDartId',
            'id': 'id',
            'kind': 'kind'
        }

        self._code = code
        self._country_code = country_code
        self._country_dart_id = country_dart_id
        self._id = id
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostalCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostalCode of this PostalCode.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this PostalCode.

        Postal code. This is equivalent to the id field.

        :return: The code of this PostalCode.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this PostalCode.

        Postal code. This is equivalent to the id field.

        :param code: The code of this PostalCode.
        :type code: str
        """

        self._code = code

    @property
    def country_code(self):
        """Gets the country_code of this PostalCode.

        Country code of the country to which this postal code belongs.

        :return: The country_code of this PostalCode.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this PostalCode.

        Country code of the country to which this postal code belongs.

        :param country_code: The country_code of this PostalCode.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def country_dart_id(self):
        """Gets the country_dart_id of this PostalCode.

        DART ID of the country to which this postal code belongs.

        :return: The country_dart_id of this PostalCode.
        :rtype: str
        """
        return self._country_dart_id

    @country_dart_id.setter
    def country_dart_id(self, country_dart_id):
        """Sets the country_dart_id of this PostalCode.

        DART ID of the country to which this postal code belongs.

        :param country_dart_id: The country_dart_id of this PostalCode.
        :type country_dart_id: str
        """

        self._country_dart_id = country_dart_id

    @property
    def id(self):
        """Gets the id of this PostalCode.

        ID of this postal code.

        :return: The id of this PostalCode.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PostalCode.

        ID of this postal code.

        :param id: The id of this PostalCode.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this PostalCode.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#postalCode\".

        :return: The kind of this PostalCode.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PostalCode.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#postalCode\".

        :param kind: The kind of this PostalCode.
        :type kind: str
        """

        self._kind = kind
