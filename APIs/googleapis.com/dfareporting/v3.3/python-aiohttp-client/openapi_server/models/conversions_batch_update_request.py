# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversion import Conversion
from openapi_server.models.encryption_info import EncryptionInfo
from openapi_server import util


class ConversionsBatchUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, conversions: List[Conversion]=None, encryption_info: EncryptionInfo=None, kind: str=None):
        """ConversionsBatchUpdateRequest - a model defined in OpenAPI

        :param conversions: The conversions of this ConversionsBatchUpdateRequest.
        :param encryption_info: The encryption_info of this ConversionsBatchUpdateRequest.
        :param kind: The kind of this ConversionsBatchUpdateRequest.
        """
        self.openapi_types = {
            'conversions': List[Conversion],
            'encryption_info': EncryptionInfo,
            'kind': str
        }

        self.attribute_map = {
            'conversions': 'conversions',
            'encryption_info': 'encryptionInfo',
            'kind': 'kind'
        }

        self._conversions = conversions
        self._encryption_info = encryption_info
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversionsBatchUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConversionsBatchUpdateRequest of this ConversionsBatchUpdateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def conversions(self):
        """Gets the conversions of this ConversionsBatchUpdateRequest.

        The set of conversions to update.

        :return: The conversions of this ConversionsBatchUpdateRequest.
        :rtype: List[Conversion]
        """
        return self._conversions

    @conversions.setter
    def conversions(self, conversions):
        """Sets the conversions of this ConversionsBatchUpdateRequest.

        The set of conversions to update.

        :param conversions: The conversions of this ConversionsBatchUpdateRequest.
        :type conversions: List[Conversion]
        """

        self._conversions = conversions

    @property
    def encryption_info(self):
        """Gets the encryption_info of this ConversionsBatchUpdateRequest.


        :return: The encryption_info of this ConversionsBatchUpdateRequest.
        :rtype: EncryptionInfo
        """
        return self._encryption_info

    @encryption_info.setter
    def encryption_info(self, encryption_info):
        """Sets the encryption_info of this ConversionsBatchUpdateRequest.


        :param encryption_info: The encryption_info of this ConversionsBatchUpdateRequest.
        :type encryption_info: EncryptionInfo
        """

        self._encryption_info = encryption_info

    @property
    def kind(self):
        """Gets the kind of this ConversionsBatchUpdateRequest.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionsBatchUpdateRequest\".

        :return: The kind of this ConversionsBatchUpdateRequest.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ConversionsBatchUpdateRequest.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#conversionsBatchUpdateRequest\".

        :param kind: The kind of this ConversionsBatchUpdateRequest.
        :type kind: str
        """

        self._kind = kind
