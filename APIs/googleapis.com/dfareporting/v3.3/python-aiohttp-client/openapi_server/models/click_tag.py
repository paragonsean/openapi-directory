# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.creative_click_through_url import CreativeClickThroughUrl
from openapi_server import util


class ClickTag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, click_through_url: CreativeClickThroughUrl=None, event_name: str=None, name: str=None):
        """ClickTag - a model defined in OpenAPI

        :param click_through_url: The click_through_url of this ClickTag.
        :param event_name: The event_name of this ClickTag.
        :param name: The name of this ClickTag.
        """
        self.openapi_types = {
            'click_through_url': CreativeClickThroughUrl,
            'event_name': str,
            'name': str
        }

        self.attribute_map = {
            'click_through_url': 'clickThroughUrl',
            'event_name': 'eventName',
            'name': 'name'
        }

        self._click_through_url = click_through_url
        self._event_name = event_name
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClickTag':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClickTag of this ClickTag.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def click_through_url(self):
        """Gets the click_through_url of this ClickTag.


        :return: The click_through_url of this ClickTag.
        :rtype: CreativeClickThroughUrl
        """
        return self._click_through_url

    @click_through_url.setter
    def click_through_url(self, click_through_url):
        """Sets the click_through_url of this ClickTag.


        :param click_through_url: The click_through_url of this ClickTag.
        :type click_through_url: CreativeClickThroughUrl
        """

        self._click_through_url = click_through_url

    @property
    def event_name(self):
        """Gets the event_name of this ClickTag.

        Advertiser event name associated with the click tag. This field is used by DISPLAY_IMAGE_GALLERY and HTML5_BANNER creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.

        :return: The event_name of this ClickTag.
        :rtype: str
        """
        return self._event_name

    @event_name.setter
    def event_name(self, event_name):
        """Sets the event_name of this ClickTag.

        Advertiser event name associated with the click tag. This field is used by DISPLAY_IMAGE_GALLERY and HTML5_BANNER creatives. Applicable to DISPLAY when the primary asset type is not HTML_IMAGE.

        :param event_name: The event_name of this ClickTag.
        :type event_name: str
        """

        self._event_name = event_name

    @property
    def name(self):
        """Gets the name of this ClickTag.

        Parameter name for the specified click tag. For DISPLAY_IMAGE_GALLERY creative assets, this field must match the value of the creative asset's creativeAssetId.name field.

        :return: The name of this ClickTag.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ClickTag.

        Parameter name for the specified click tag. For DISPLAY_IMAGE_GALLERY creative assets, this field must match the value of the creative asset's creativeAssetId.name field.

        :param name: The name of this ClickTag.
        :type name: str
        """

        self._name = name
