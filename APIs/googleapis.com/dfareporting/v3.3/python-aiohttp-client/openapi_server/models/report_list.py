# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report import Report
from openapi_server import util


class ReportList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, etag: str=None, items: List[Report]=None, kind: str=None, next_page_token: str=None):
        """ReportList - a model defined in OpenAPI

        :param etag: The etag of this ReportList.
        :param items: The items of this ReportList.
        :param kind: The kind of this ReportList.
        :param next_page_token: The next_page_token of this ReportList.
        """
        self.openapi_types = {
            'etag': str,
            'items': List[Report],
            'kind': str,
            'next_page_token': str
        }

        self.attribute_map = {
            'etag': 'etag',
            'items': 'items',
            'kind': 'kind',
            'next_page_token': 'nextPageToken'
        }

        self._etag = etag
        self._items = items
        self._kind = kind
        self._next_page_token = next_page_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReportList of this ReportList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etag(self):
        """Gets the etag of this ReportList.

        The eTag of this response for caching purposes.

        :return: The etag of this ReportList.
        :rtype: str
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ReportList.

        The eTag of this response for caching purposes.

        :param etag: The etag of this ReportList.
        :type etag: str
        """

        self._etag = etag

    @property
    def items(self):
        """Gets the items of this ReportList.

        The reports returned in this response.

        :return: The items of this ReportList.
        :rtype: List[Report]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this ReportList.

        The reports returned in this response.

        :param items: The items of this ReportList.
        :type items: List[Report]
        """

        self._items = items

    @property
    def kind(self):
        """Gets the kind of this ReportList.

        The kind of list this is, in this case dfareporting#reportList.

        :return: The kind of this ReportList.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this ReportList.

        The kind of list this is, in this case dfareporting#reportList.

        :param kind: The kind of this ReportList.
        :type kind: str
        """

        self._kind = kind

    @property
    def next_page_token(self):
        """Gets the next_page_token of this ReportList.

        Continuation token used to page through reports. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.

        :return: The next_page_token of this ReportList.
        :rtype: str
        """
        return self._next_page_token

    @next_page_token.setter
    def next_page_token(self, next_page_token):
        """Sets the next_page_token of this ReportList.

        Continuation token used to page through reports. To retrieve the next page of results, set the next request's \"pageToken\" to the value of this field. The page token is only valid for a limited amount of time and should not be persisted.

        :param next_page_token: The next_page_token of this ReportList.
        :type next_page_token: str
        """

        self._next_page_token = next_page_token
