# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.last_modified_info import LastModifiedInfo
from openapi_server.models.order_contact import OrderContact
from openapi_server import util


class Order(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, advertiser_id: str=None, approver_user_profile_ids: List[str]=None, buyer_invoice_id: str=None, buyer_organization_name: str=None, comments: str=None, contacts: List[OrderContact]=None, id: str=None, kind: str=None, last_modified_info: LastModifiedInfo=None, name: str=None, notes: str=None, planning_term_id: str=None, project_id: str=None, seller_order_id: str=None, seller_organization_name: str=None, site_id: List[str]=None, site_names: List[str]=None, subaccount_id: str=None, terms_and_conditions: str=None):
        """Order - a model defined in OpenAPI

        :param account_id: The account_id of this Order.
        :param advertiser_id: The advertiser_id of this Order.
        :param approver_user_profile_ids: The approver_user_profile_ids of this Order.
        :param buyer_invoice_id: The buyer_invoice_id of this Order.
        :param buyer_organization_name: The buyer_organization_name of this Order.
        :param comments: The comments of this Order.
        :param contacts: The contacts of this Order.
        :param id: The id of this Order.
        :param kind: The kind of this Order.
        :param last_modified_info: The last_modified_info of this Order.
        :param name: The name of this Order.
        :param notes: The notes of this Order.
        :param planning_term_id: The planning_term_id of this Order.
        :param project_id: The project_id of this Order.
        :param seller_order_id: The seller_order_id of this Order.
        :param seller_organization_name: The seller_organization_name of this Order.
        :param site_id: The site_id of this Order.
        :param site_names: The site_names of this Order.
        :param subaccount_id: The subaccount_id of this Order.
        :param terms_and_conditions: The terms_and_conditions of this Order.
        """
        self.openapi_types = {
            'account_id': str,
            'advertiser_id': str,
            'approver_user_profile_ids': List[str],
            'buyer_invoice_id': str,
            'buyer_organization_name': str,
            'comments': str,
            'contacts': List[OrderContact],
            'id': str,
            'kind': str,
            'last_modified_info': LastModifiedInfo,
            'name': str,
            'notes': str,
            'planning_term_id': str,
            'project_id': str,
            'seller_order_id': str,
            'seller_organization_name': str,
            'site_id': List[str],
            'site_names': List[str],
            'subaccount_id': str,
            'terms_and_conditions': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'advertiser_id': 'advertiserId',
            'approver_user_profile_ids': 'approverUserProfileIds',
            'buyer_invoice_id': 'buyerInvoiceId',
            'buyer_organization_name': 'buyerOrganizationName',
            'comments': 'comments',
            'contacts': 'contacts',
            'id': 'id',
            'kind': 'kind',
            'last_modified_info': 'lastModifiedInfo',
            'name': 'name',
            'notes': 'notes',
            'planning_term_id': 'planningTermId',
            'project_id': 'projectId',
            'seller_order_id': 'sellerOrderId',
            'seller_organization_name': 'sellerOrganizationName',
            'site_id': 'siteId',
            'site_names': 'siteNames',
            'subaccount_id': 'subaccountId',
            'terms_and_conditions': 'termsAndConditions'
        }

        self._account_id = account_id
        self._advertiser_id = advertiser_id
        self._approver_user_profile_ids = approver_user_profile_ids
        self._buyer_invoice_id = buyer_invoice_id
        self._buyer_organization_name = buyer_organization_name
        self._comments = comments
        self._contacts = contacts
        self._id = id
        self._kind = kind
        self._last_modified_info = last_modified_info
        self._name = name
        self._notes = notes
        self._planning_term_id = planning_term_id
        self._project_id = project_id
        self._seller_order_id = seller_order_id
        self._seller_organization_name = seller_organization_name
        self._site_id = site_id
        self._site_names = site_names
        self._subaccount_id = subaccount_id
        self._terms_and_conditions = terms_and_conditions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Order':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order of this Order.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Order.

        Account ID of this order.

        :return: The account_id of this Order.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Order.

        Account ID of this order.

        :param account_id: The account_id of this Order.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this Order.

        Advertiser ID of this order.

        :return: The advertiser_id of this Order.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this Order.

        Advertiser ID of this order.

        :param advertiser_id: The advertiser_id of this Order.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def approver_user_profile_ids(self):
        """Gets the approver_user_profile_ids of this Order.

        IDs for users that have to approve documents created for this order.

        :return: The approver_user_profile_ids of this Order.
        :rtype: List[str]
        """
        return self._approver_user_profile_ids

    @approver_user_profile_ids.setter
    def approver_user_profile_ids(self, approver_user_profile_ids):
        """Sets the approver_user_profile_ids of this Order.

        IDs for users that have to approve documents created for this order.

        :param approver_user_profile_ids: The approver_user_profile_ids of this Order.
        :type approver_user_profile_ids: List[str]
        """

        self._approver_user_profile_ids = approver_user_profile_ids

    @property
    def buyer_invoice_id(self):
        """Gets the buyer_invoice_id of this Order.

        Buyer invoice ID associated with this order.

        :return: The buyer_invoice_id of this Order.
        :rtype: str
        """
        return self._buyer_invoice_id

    @buyer_invoice_id.setter
    def buyer_invoice_id(self, buyer_invoice_id):
        """Sets the buyer_invoice_id of this Order.

        Buyer invoice ID associated with this order.

        :param buyer_invoice_id: The buyer_invoice_id of this Order.
        :type buyer_invoice_id: str
        """

        self._buyer_invoice_id = buyer_invoice_id

    @property
    def buyer_organization_name(self):
        """Gets the buyer_organization_name of this Order.

        Name of the buyer organization.

        :return: The buyer_organization_name of this Order.
        :rtype: str
        """
        return self._buyer_organization_name

    @buyer_organization_name.setter
    def buyer_organization_name(self, buyer_organization_name):
        """Sets the buyer_organization_name of this Order.

        Name of the buyer organization.

        :param buyer_organization_name: The buyer_organization_name of this Order.
        :type buyer_organization_name: str
        """

        self._buyer_organization_name = buyer_organization_name

    @property
    def comments(self):
        """Gets the comments of this Order.

        Comments in this order.

        :return: The comments of this Order.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this Order.

        Comments in this order.

        :param comments: The comments of this Order.
        :type comments: str
        """

        self._comments = comments

    @property
    def contacts(self):
        """Gets the contacts of this Order.

        Contacts for this order.

        :return: The contacts of this Order.
        :rtype: List[OrderContact]
        """
        return self._contacts

    @contacts.setter
    def contacts(self, contacts):
        """Sets the contacts of this Order.

        Contacts for this order.

        :param contacts: The contacts of this Order.
        :type contacts: List[OrderContact]
        """

        self._contacts = contacts

    @property
    def id(self):
        """Gets the id of this Order.

        ID of this order. This is a read-only, auto-generated field.

        :return: The id of this Order.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Order.

        ID of this order. This is a read-only, auto-generated field.

        :param id: The id of this Order.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this Order.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#order\".

        :return: The kind of this Order.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Order.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#order\".

        :param kind: The kind of this Order.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_modified_info(self):
        """Gets the last_modified_info of this Order.


        :return: The last_modified_info of this Order.
        :rtype: LastModifiedInfo
        """
        return self._last_modified_info

    @last_modified_info.setter
    def last_modified_info(self, last_modified_info):
        """Sets the last_modified_info of this Order.


        :param last_modified_info: The last_modified_info of this Order.
        :type last_modified_info: LastModifiedInfo
        """

        self._last_modified_info = last_modified_info

    @property
    def name(self):
        """Gets the name of this Order.

        Name of this order.

        :return: The name of this Order.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Order.

        Name of this order.

        :param name: The name of this Order.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this Order.

        Notes of this order.

        :return: The notes of this Order.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Order.

        Notes of this order.

        :param notes: The notes of this Order.
        :type notes: str
        """

        self._notes = notes

    @property
    def planning_term_id(self):
        """Gets the planning_term_id of this Order.

        ID of the terms and conditions template used in this order.

        :return: The planning_term_id of this Order.
        :rtype: str
        """
        return self._planning_term_id

    @planning_term_id.setter
    def planning_term_id(self, planning_term_id):
        """Sets the planning_term_id of this Order.

        ID of the terms and conditions template used in this order.

        :param planning_term_id: The planning_term_id of this Order.
        :type planning_term_id: str
        """

        self._planning_term_id = planning_term_id

    @property
    def project_id(self):
        """Gets the project_id of this Order.

        Project ID of this order.

        :return: The project_id of this Order.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this Order.

        Project ID of this order.

        :param project_id: The project_id of this Order.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def seller_order_id(self):
        """Gets the seller_order_id of this Order.

        Seller order ID associated with this order.

        :return: The seller_order_id of this Order.
        :rtype: str
        """
        return self._seller_order_id

    @seller_order_id.setter
    def seller_order_id(self, seller_order_id):
        """Sets the seller_order_id of this Order.

        Seller order ID associated with this order.

        :param seller_order_id: The seller_order_id of this Order.
        :type seller_order_id: str
        """

        self._seller_order_id = seller_order_id

    @property
    def seller_organization_name(self):
        """Gets the seller_organization_name of this Order.

        Name of the seller organization.

        :return: The seller_organization_name of this Order.
        :rtype: str
        """
        return self._seller_organization_name

    @seller_organization_name.setter
    def seller_organization_name(self, seller_organization_name):
        """Sets the seller_organization_name of this Order.

        Name of the seller organization.

        :param seller_organization_name: The seller_organization_name of this Order.
        :type seller_organization_name: str
        """

        self._seller_organization_name = seller_organization_name

    @property
    def site_id(self):
        """Gets the site_id of this Order.

        Site IDs this order is associated with.

        :return: The site_id of this Order.
        :rtype: List[str]
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """Sets the site_id of this Order.

        Site IDs this order is associated with.

        :param site_id: The site_id of this Order.
        :type site_id: List[str]
        """

        self._site_id = site_id

    @property
    def site_names(self):
        """Gets the site_names of this Order.

        Free-form site names this order is associated with.

        :return: The site_names of this Order.
        :rtype: List[str]
        """
        return self._site_names

    @site_names.setter
    def site_names(self, site_names):
        """Sets the site_names of this Order.

        Free-form site names this order is associated with.

        :param site_names: The site_names of this Order.
        :type site_names: List[str]
        """

        self._site_names = site_names

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this Order.

        Subaccount ID of this order.

        :return: The subaccount_id of this Order.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this Order.

        Subaccount ID of this order.

        :param subaccount_id: The subaccount_id of this Order.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def terms_and_conditions(self):
        """Gets the terms_and_conditions of this Order.

        Terms and conditions of this order.

        :return: The terms_and_conditions of this Order.
        :rtype: str
        """
        return self._terms_and_conditions

    @terms_and_conditions.setter
    def terms_and_conditions(self, terms_and_conditions):
        """Sets the terms_and_conditions of this Order.

        Terms and conditions of this order.

        :param terms_and_conditions: The terms_and_conditions of this Order.
        :type terms_and_conditions: str
        """

        self._terms_and_conditions = terms_and_conditions
