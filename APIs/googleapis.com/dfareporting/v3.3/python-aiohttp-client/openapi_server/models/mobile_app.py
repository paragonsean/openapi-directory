# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MobileApp(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, directory: str=None, id: str=None, kind: str=None, publisher_name: str=None, title: str=None):
        """MobileApp - a model defined in OpenAPI

        :param directory: The directory of this MobileApp.
        :param id: The id of this MobileApp.
        :param kind: The kind of this MobileApp.
        :param publisher_name: The publisher_name of this MobileApp.
        :param title: The title of this MobileApp.
        """
        self.openapi_types = {
            'directory': str,
            'id': str,
            'kind': str,
            'publisher_name': str,
            'title': str
        }

        self.attribute_map = {
            'directory': 'directory',
            'id': 'id',
            'kind': 'kind',
            'publisher_name': 'publisherName',
            'title': 'title'
        }

        self._directory = directory
        self._id = id
        self._kind = kind
        self._publisher_name = publisher_name
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MobileApp':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MobileApp of this MobileApp.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def directory(self):
        """Gets the directory of this MobileApp.

        Mobile app directory.

        :return: The directory of this MobileApp.
        :rtype: str
        """
        return self._directory

    @directory.setter
    def directory(self, directory):
        """Sets the directory of this MobileApp.

        Mobile app directory.

        :param directory: The directory of this MobileApp.
        :type directory: str
        """
        allowed_values = ["UNKNOWN", "APPLE_APP_STORE", "GOOGLE_PLAY_STORE"]  # noqa: E501
        if directory not in allowed_values:
            raise ValueError(
                "Invalid value for `directory` ({0}), must be one of {1}"
                .format(directory, allowed_values)
            )

        self._directory = directory

    @property
    def id(self):
        """Gets the id of this MobileApp.

        ID of this mobile app.

        :return: The id of this MobileApp.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MobileApp.

        ID of this mobile app.

        :param id: The id of this MobileApp.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this MobileApp.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileApp\".

        :return: The kind of this MobileApp.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this MobileApp.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#mobileApp\".

        :param kind: The kind of this MobileApp.
        :type kind: str
        """

        self._kind = kind

    @property
    def publisher_name(self):
        """Gets the publisher_name of this MobileApp.

        Publisher name.

        :return: The publisher_name of this MobileApp.
        :rtype: str
        """
        return self._publisher_name

    @publisher_name.setter
    def publisher_name(self, publisher_name):
        """Sets the publisher_name of this MobileApp.

        Publisher name.

        :param publisher_name: The publisher_name of this MobileApp.
        :type publisher_name: str
        """

        self._publisher_name = publisher_name

    @property
    def title(self):
        """Gets the title of this MobileApp.

        Title of this mobile app.

        :return: The title of this MobileApp.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this MobileApp.

        Title of this mobile app.

        :param title: The title of this MobileApp.
        :type title: str
        """

        self._title = title
