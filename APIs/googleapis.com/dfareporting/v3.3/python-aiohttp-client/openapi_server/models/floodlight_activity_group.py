# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_value import DimensionValue
from openapi_server import util


class FloodlightActivityGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, advertiser_id: str=None, advertiser_id_dimension_value: DimensionValue=None, floodlight_configuration_id: str=None, floodlight_configuration_id_dimension_value: DimensionValue=None, id: str=None, id_dimension_value: DimensionValue=None, kind: str=None, name: str=None, subaccount_id: str=None, tag_string: str=None, type: str=None):
        """FloodlightActivityGroup - a model defined in OpenAPI

        :param account_id: The account_id of this FloodlightActivityGroup.
        :param advertiser_id: The advertiser_id of this FloodlightActivityGroup.
        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this FloodlightActivityGroup.
        :param floodlight_configuration_id: The floodlight_configuration_id of this FloodlightActivityGroup.
        :param floodlight_configuration_id_dimension_value: The floodlight_configuration_id_dimension_value of this FloodlightActivityGroup.
        :param id: The id of this FloodlightActivityGroup.
        :param id_dimension_value: The id_dimension_value of this FloodlightActivityGroup.
        :param kind: The kind of this FloodlightActivityGroup.
        :param name: The name of this FloodlightActivityGroup.
        :param subaccount_id: The subaccount_id of this FloodlightActivityGroup.
        :param tag_string: The tag_string of this FloodlightActivityGroup.
        :param type: The type of this FloodlightActivityGroup.
        """
        self.openapi_types = {
            'account_id': str,
            'advertiser_id': str,
            'advertiser_id_dimension_value': DimensionValue,
            'floodlight_configuration_id': str,
            'floodlight_configuration_id_dimension_value': DimensionValue,
            'id': str,
            'id_dimension_value': DimensionValue,
            'kind': str,
            'name': str,
            'subaccount_id': str,
            'tag_string': str,
            'type': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'advertiser_id': 'advertiserId',
            'advertiser_id_dimension_value': 'advertiserIdDimensionValue',
            'floodlight_configuration_id': 'floodlightConfigurationId',
            'floodlight_configuration_id_dimension_value': 'floodlightConfigurationIdDimensionValue',
            'id': 'id',
            'id_dimension_value': 'idDimensionValue',
            'kind': 'kind',
            'name': 'name',
            'subaccount_id': 'subaccountId',
            'tag_string': 'tagString',
            'type': 'type'
        }

        self._account_id = account_id
        self._advertiser_id = advertiser_id
        self._advertiser_id_dimension_value = advertiser_id_dimension_value
        self._floodlight_configuration_id = floodlight_configuration_id
        self._floodlight_configuration_id_dimension_value = floodlight_configuration_id_dimension_value
        self._id = id
        self._id_dimension_value = id_dimension_value
        self._kind = kind
        self._name = name
        self._subaccount_id = subaccount_id
        self._tag_string = tag_string
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FloodlightActivityGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FloodlightActivityGroup of this FloodlightActivityGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this FloodlightActivityGroup.

        Account ID of this floodlight activity group. This is a read-only field that can be left blank.

        :return: The account_id of this FloodlightActivityGroup.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this FloodlightActivityGroup.

        Account ID of this floodlight activity group. This is a read-only field that can be left blank.

        :param account_id: The account_id of this FloodlightActivityGroup.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this FloodlightActivityGroup.

        Advertiser ID of this floodlight activity group. If this field is left blank, the value will be copied over either from the floodlight configuration's advertiser or from the existing activity group's advertiser.

        :return: The advertiser_id of this FloodlightActivityGroup.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this FloodlightActivityGroup.

        Advertiser ID of this floodlight activity group. If this field is left blank, the value will be copied over either from the floodlight configuration's advertiser or from the existing activity group's advertiser.

        :param advertiser_id: The advertiser_id of this FloodlightActivityGroup.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def advertiser_id_dimension_value(self):
        """Gets the advertiser_id_dimension_value of this FloodlightActivityGroup.


        :return: The advertiser_id_dimension_value of this FloodlightActivityGroup.
        :rtype: DimensionValue
        """
        return self._advertiser_id_dimension_value

    @advertiser_id_dimension_value.setter
    def advertiser_id_dimension_value(self, advertiser_id_dimension_value):
        """Sets the advertiser_id_dimension_value of this FloodlightActivityGroup.


        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this FloodlightActivityGroup.
        :type advertiser_id_dimension_value: DimensionValue
        """

        self._advertiser_id_dimension_value = advertiser_id_dimension_value

    @property
    def floodlight_configuration_id(self):
        """Gets the floodlight_configuration_id of this FloodlightActivityGroup.

        Floodlight configuration ID of this floodlight activity group. This is a required field.

        :return: The floodlight_configuration_id of this FloodlightActivityGroup.
        :rtype: str
        """
        return self._floodlight_configuration_id

    @floodlight_configuration_id.setter
    def floodlight_configuration_id(self, floodlight_configuration_id):
        """Sets the floodlight_configuration_id of this FloodlightActivityGroup.

        Floodlight configuration ID of this floodlight activity group. This is a required field.

        :param floodlight_configuration_id: The floodlight_configuration_id of this FloodlightActivityGroup.
        :type floodlight_configuration_id: str
        """

        self._floodlight_configuration_id = floodlight_configuration_id

    @property
    def floodlight_configuration_id_dimension_value(self):
        """Gets the floodlight_configuration_id_dimension_value of this FloodlightActivityGroup.


        :return: The floodlight_configuration_id_dimension_value of this FloodlightActivityGroup.
        :rtype: DimensionValue
        """
        return self._floodlight_configuration_id_dimension_value

    @floodlight_configuration_id_dimension_value.setter
    def floodlight_configuration_id_dimension_value(self, floodlight_configuration_id_dimension_value):
        """Sets the floodlight_configuration_id_dimension_value of this FloodlightActivityGroup.


        :param floodlight_configuration_id_dimension_value: The floodlight_configuration_id_dimension_value of this FloodlightActivityGroup.
        :type floodlight_configuration_id_dimension_value: DimensionValue
        """

        self._floodlight_configuration_id_dimension_value = floodlight_configuration_id_dimension_value

    @property
    def id(self):
        """Gets the id of this FloodlightActivityGroup.

        ID of this floodlight activity group. This is a read-only, auto-generated field.

        :return: The id of this FloodlightActivityGroup.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FloodlightActivityGroup.

        ID of this floodlight activity group. This is a read-only, auto-generated field.

        :param id: The id of this FloodlightActivityGroup.
        :type id: str
        """

        self._id = id

    @property
    def id_dimension_value(self):
        """Gets the id_dimension_value of this FloodlightActivityGroup.


        :return: The id_dimension_value of this FloodlightActivityGroup.
        :rtype: DimensionValue
        """
        return self._id_dimension_value

    @id_dimension_value.setter
    def id_dimension_value(self, id_dimension_value):
        """Sets the id_dimension_value of this FloodlightActivityGroup.


        :param id_dimension_value: The id_dimension_value of this FloodlightActivityGroup.
        :type id_dimension_value: DimensionValue
        """

        self._id_dimension_value = id_dimension_value

    @property
    def kind(self):
        """Gets the kind of this FloodlightActivityGroup.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivityGroup\".

        :return: The kind of this FloodlightActivityGroup.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this FloodlightActivityGroup.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#floodlightActivityGroup\".

        :param kind: The kind of this FloodlightActivityGroup.
        :type kind: str
        """

        self._kind = kind

    @property
    def name(self):
        """Gets the name of this FloodlightActivityGroup.

        Name of this floodlight activity group. This is a required field. Must be less than 65 characters long and cannot contain quotes.

        :return: The name of this FloodlightActivityGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this FloodlightActivityGroup.

        Name of this floodlight activity group. This is a required field. Must be less than 65 characters long and cannot contain quotes.

        :param name: The name of this FloodlightActivityGroup.
        :type name: str
        """

        self._name = name

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this FloodlightActivityGroup.

        Subaccount ID of this floodlight activity group. This is a read-only field that can be left blank.

        :return: The subaccount_id of this FloodlightActivityGroup.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this FloodlightActivityGroup.

        Subaccount ID of this floodlight activity group. This is a read-only field that can be left blank.

        :param subaccount_id: The subaccount_id of this FloodlightActivityGroup.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def tag_string(self):
        """Gets the tag_string of this FloodlightActivityGroup.

        Value of the type= parameter in the floodlight tag, which the ad servers use to identify the activity group that the activity belongs to. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being a-z0-9[ _ ]. This tag string must also be unique among activity groups of the same floodlight configuration. This field is read-only after insertion.

        :return: The tag_string of this FloodlightActivityGroup.
        :rtype: str
        """
        return self._tag_string

    @tag_string.setter
    def tag_string(self, tag_string):
        """Sets the tag_string of this FloodlightActivityGroup.

        Value of the type= parameter in the floodlight tag, which the ad servers use to identify the activity group that the activity belongs to. This is optional: if empty, a new tag string will be generated for you. This string must be 1 to 8 characters long, with valid characters being a-z0-9[ _ ]. This tag string must also be unique among activity groups of the same floodlight configuration. This field is read-only after insertion.

        :param tag_string: The tag_string of this FloodlightActivityGroup.
        :type tag_string: str
        """

        self._tag_string = tag_string

    @property
    def type(self):
        """Gets the type of this FloodlightActivityGroup.

        Type of the floodlight activity group. This is a required field that is read-only after insertion.

        :return: The type of this FloodlightActivityGroup.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FloodlightActivityGroup.

        Type of the floodlight activity group. This is a required field that is read-only after insertion.

        :param type: The type of this FloodlightActivityGroup.
        :type type: str
        """
        allowed_values = ["COUNTER", "SALE"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
