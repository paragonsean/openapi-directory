# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.last_modified_info import LastModifiedInfo
from openapi_server import util


class OrderDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, advertiser_id: str=None, amended_order_document_id: str=None, approved_by_user_profile_ids: List[str]=None, cancelled: bool=None, created_info: LastModifiedInfo=None, effective_date: date=None, id: str=None, kind: str=None, last_sent_recipients: List[str]=None, last_sent_time: datetime=None, order_id: str=None, project_id: str=None, signed: bool=None, subaccount_id: str=None, title: str=None, type: str=None):
        """OrderDocument - a model defined in OpenAPI

        :param account_id: The account_id of this OrderDocument.
        :param advertiser_id: The advertiser_id of this OrderDocument.
        :param amended_order_document_id: The amended_order_document_id of this OrderDocument.
        :param approved_by_user_profile_ids: The approved_by_user_profile_ids of this OrderDocument.
        :param cancelled: The cancelled of this OrderDocument.
        :param created_info: The created_info of this OrderDocument.
        :param effective_date: The effective_date of this OrderDocument.
        :param id: The id of this OrderDocument.
        :param kind: The kind of this OrderDocument.
        :param last_sent_recipients: The last_sent_recipients of this OrderDocument.
        :param last_sent_time: The last_sent_time of this OrderDocument.
        :param order_id: The order_id of this OrderDocument.
        :param project_id: The project_id of this OrderDocument.
        :param signed: The signed of this OrderDocument.
        :param subaccount_id: The subaccount_id of this OrderDocument.
        :param title: The title of this OrderDocument.
        :param type: The type of this OrderDocument.
        """
        self.openapi_types = {
            'account_id': str,
            'advertiser_id': str,
            'amended_order_document_id': str,
            'approved_by_user_profile_ids': List[str],
            'cancelled': bool,
            'created_info': LastModifiedInfo,
            'effective_date': date,
            'id': str,
            'kind': str,
            'last_sent_recipients': List[str],
            'last_sent_time': datetime,
            'order_id': str,
            'project_id': str,
            'signed': bool,
            'subaccount_id': str,
            'title': str,
            'type': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'advertiser_id': 'advertiserId',
            'amended_order_document_id': 'amendedOrderDocumentId',
            'approved_by_user_profile_ids': 'approvedByUserProfileIds',
            'cancelled': 'cancelled',
            'created_info': 'createdInfo',
            'effective_date': 'effectiveDate',
            'id': 'id',
            'kind': 'kind',
            'last_sent_recipients': 'lastSentRecipients',
            'last_sent_time': 'lastSentTime',
            'order_id': 'orderId',
            'project_id': 'projectId',
            'signed': 'signed',
            'subaccount_id': 'subaccountId',
            'title': 'title',
            'type': 'type'
        }

        self._account_id = account_id
        self._advertiser_id = advertiser_id
        self._amended_order_document_id = amended_order_document_id
        self._approved_by_user_profile_ids = approved_by_user_profile_ids
        self._cancelled = cancelled
        self._created_info = created_info
        self._effective_date = effective_date
        self._id = id
        self._kind = kind
        self._last_sent_recipients = last_sent_recipients
        self._last_sent_time = last_sent_time
        self._order_id = order_id
        self._project_id = project_id
        self._signed = signed
        self._subaccount_id = subaccount_id
        self._title = title
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderDocument of this OrderDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this OrderDocument.

        Account ID of this order document.

        :return: The account_id of this OrderDocument.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this OrderDocument.

        Account ID of this order document.

        :param account_id: The account_id of this OrderDocument.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this OrderDocument.

        Advertiser ID of this order document.

        :return: The advertiser_id of this OrderDocument.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this OrderDocument.

        Advertiser ID of this order document.

        :param advertiser_id: The advertiser_id of this OrderDocument.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def amended_order_document_id(self):
        """Gets the amended_order_document_id of this OrderDocument.

        The amended order document ID of this order document. An order document can be created by optionally amending another order document so that the change history can be preserved.

        :return: The amended_order_document_id of this OrderDocument.
        :rtype: str
        """
        return self._amended_order_document_id

    @amended_order_document_id.setter
    def amended_order_document_id(self, amended_order_document_id):
        """Sets the amended_order_document_id of this OrderDocument.

        The amended order document ID of this order document. An order document can be created by optionally amending another order document so that the change history can be preserved.

        :param amended_order_document_id: The amended_order_document_id of this OrderDocument.
        :type amended_order_document_id: str
        """

        self._amended_order_document_id = amended_order_document_id

    @property
    def approved_by_user_profile_ids(self):
        """Gets the approved_by_user_profile_ids of this OrderDocument.

        IDs of users who have approved this order document.

        :return: The approved_by_user_profile_ids of this OrderDocument.
        :rtype: List[str]
        """
        return self._approved_by_user_profile_ids

    @approved_by_user_profile_ids.setter
    def approved_by_user_profile_ids(self, approved_by_user_profile_ids):
        """Sets the approved_by_user_profile_ids of this OrderDocument.

        IDs of users who have approved this order document.

        :param approved_by_user_profile_ids: The approved_by_user_profile_ids of this OrderDocument.
        :type approved_by_user_profile_ids: List[str]
        """

        self._approved_by_user_profile_ids = approved_by_user_profile_ids

    @property
    def cancelled(self):
        """Gets the cancelled of this OrderDocument.

        Whether this order document is cancelled.

        :return: The cancelled of this OrderDocument.
        :rtype: bool
        """
        return self._cancelled

    @cancelled.setter
    def cancelled(self, cancelled):
        """Sets the cancelled of this OrderDocument.

        Whether this order document is cancelled.

        :param cancelled: The cancelled of this OrderDocument.
        :type cancelled: bool
        """

        self._cancelled = cancelled

    @property
    def created_info(self):
        """Gets the created_info of this OrderDocument.


        :return: The created_info of this OrderDocument.
        :rtype: LastModifiedInfo
        """
        return self._created_info

    @created_info.setter
    def created_info(self, created_info):
        """Sets the created_info of this OrderDocument.


        :param created_info: The created_info of this OrderDocument.
        :type created_info: LastModifiedInfo
        """

        self._created_info = created_info

    @property
    def effective_date(self):
        """Gets the effective_date of this OrderDocument.


        :return: The effective_date of this OrderDocument.
        :rtype: date
        """
        return self._effective_date

    @effective_date.setter
    def effective_date(self, effective_date):
        """Sets the effective_date of this OrderDocument.


        :param effective_date: The effective_date of this OrderDocument.
        :type effective_date: date
        """

        self._effective_date = effective_date

    @property
    def id(self):
        """Gets the id of this OrderDocument.

        ID of this order document.

        :return: The id of this OrderDocument.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderDocument.

        ID of this order document.

        :param id: The id of this OrderDocument.
        :type id: str
        """

        self._id = id

    @property
    def kind(self):
        """Gets the kind of this OrderDocument.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#orderDocument\".

        :return: The kind of this OrderDocument.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this OrderDocument.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#orderDocument\".

        :param kind: The kind of this OrderDocument.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_sent_recipients(self):
        """Gets the last_sent_recipients of this OrderDocument.

        List of email addresses that received the last sent document.

        :return: The last_sent_recipients of this OrderDocument.
        :rtype: List[str]
        """
        return self._last_sent_recipients

    @last_sent_recipients.setter
    def last_sent_recipients(self, last_sent_recipients):
        """Sets the last_sent_recipients of this OrderDocument.

        List of email addresses that received the last sent document.

        :param last_sent_recipients: The last_sent_recipients of this OrderDocument.
        :type last_sent_recipients: List[str]
        """

        self._last_sent_recipients = last_sent_recipients

    @property
    def last_sent_time(self):
        """Gets the last_sent_time of this OrderDocument.


        :return: The last_sent_time of this OrderDocument.
        :rtype: datetime
        """
        return self._last_sent_time

    @last_sent_time.setter
    def last_sent_time(self, last_sent_time):
        """Sets the last_sent_time of this OrderDocument.


        :param last_sent_time: The last_sent_time of this OrderDocument.
        :type last_sent_time: datetime
        """

        self._last_sent_time = last_sent_time

    @property
    def order_id(self):
        """Gets the order_id of this OrderDocument.

        ID of the order from which this order document is created.

        :return: The order_id of this OrderDocument.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this OrderDocument.

        ID of the order from which this order document is created.

        :param order_id: The order_id of this OrderDocument.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def project_id(self):
        """Gets the project_id of this OrderDocument.

        Project ID of this order document.

        :return: The project_id of this OrderDocument.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this OrderDocument.

        Project ID of this order document.

        :param project_id: The project_id of this OrderDocument.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def signed(self):
        """Gets the signed of this OrderDocument.

        Whether this order document has been signed.

        :return: The signed of this OrderDocument.
        :rtype: bool
        """
        return self._signed

    @signed.setter
    def signed(self, signed):
        """Sets the signed of this OrderDocument.

        Whether this order document has been signed.

        :param signed: The signed of this OrderDocument.
        :type signed: bool
        """

        self._signed = signed

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this OrderDocument.

        Subaccount ID of this order document.

        :return: The subaccount_id of this OrderDocument.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this OrderDocument.

        Subaccount ID of this order document.

        :param subaccount_id: The subaccount_id of this OrderDocument.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def title(self):
        """Gets the title of this OrderDocument.

        Title of this order document.

        :return: The title of this OrderDocument.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this OrderDocument.

        Title of this order document.

        :param title: The title of this OrderDocument.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this OrderDocument.

        Type of this order document

        :return: The type of this OrderDocument.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OrderDocument.

        Type of this order document

        :param type: The type of this OrderDocument.
        :type type: str
        """
        allowed_values = ["PLANNING_ORDER_TYPE_INSERTION_ORDER", "PLANNING_ORDER_TYPE_CHANGE_ORDER"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
