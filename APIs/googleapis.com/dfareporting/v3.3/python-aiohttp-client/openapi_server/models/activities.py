# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimension_value import DimensionValue
from openapi_server import util


class Activities(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filters: List[DimensionValue]=None, kind: str=None, metric_names: List[str]=None):
        """Activities - a model defined in OpenAPI

        :param filters: The filters of this Activities.
        :param kind: The kind of this Activities.
        :param metric_names: The metric_names of this Activities.
        """
        self.openapi_types = {
            'filters': List[DimensionValue],
            'kind': str,
            'metric_names': List[str]
        }

        self.attribute_map = {
            'filters': 'filters',
            'kind': 'kind',
            'metric_names': 'metricNames'
        }

        self._filters = filters
        self._kind = kind
        self._metric_names = metric_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Activities':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activities of this Activities.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filters(self):
        """Gets the filters of this Activities.

        List of activity filters. The dimension values need to be all either of type \"dfa:activity\" or \"dfa:activityGroup\".

        :return: The filters of this Activities.
        :rtype: List[DimensionValue]
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this Activities.

        List of activity filters. The dimension values need to be all either of type \"dfa:activity\" or \"dfa:activityGroup\".

        :param filters: The filters of this Activities.
        :type filters: List[DimensionValue]
        """

        self._filters = filters

    @property
    def kind(self):
        """Gets the kind of this Activities.

        The kind of resource this is, in this case dfareporting#activities.

        :return: The kind of this Activities.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Activities.

        The kind of resource this is, in this case dfareporting#activities.

        :param kind: The kind of this Activities.
        :type kind: str
        """

        self._kind = kind

    @property
    def metric_names(self):
        """Gets the metric_names of this Activities.

        List of names of floodlight activity metrics.

        :return: The metric_names of this Activities.
        :rtype: List[str]
        """
        return self._metric_names

    @metric_names.setter
    def metric_names(self, metric_names):
        """Sets the metric_names of this Activities.

        List of names of floodlight activity metrics.

        :param metric_names: The metric_names of this Activities.
        :type metric_names: List[str]
        """

        self._metric_names = metric_names
