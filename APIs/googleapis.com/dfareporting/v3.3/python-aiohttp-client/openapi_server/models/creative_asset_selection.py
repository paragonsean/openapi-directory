# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule import Rule
from openapi_server import util


class CreativeAssetSelection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default_asset_id: str=None, rules: List[Rule]=None):
        """CreativeAssetSelection - a model defined in OpenAPI

        :param default_asset_id: The default_asset_id of this CreativeAssetSelection.
        :param rules: The rules of this CreativeAssetSelection.
        """
        self.openapi_types = {
            'default_asset_id': str,
            'rules': List[Rule]
        }

        self.attribute_map = {
            'default_asset_id': 'defaultAssetId',
            'rules': 'rules'
        }

        self._default_asset_id = default_asset_id
        self._rules = rules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreativeAssetSelection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreativeAssetSelection of this CreativeAssetSelection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default_asset_id(self):
        """Gets the default_asset_id of this CreativeAssetSelection.

        A creativeAssets[].id. This should refer to one of the parent assets in this creative, and will be served if none of the rules match. This is a required field.

        :return: The default_asset_id of this CreativeAssetSelection.
        :rtype: str
        """
        return self._default_asset_id

    @default_asset_id.setter
    def default_asset_id(self, default_asset_id):
        """Sets the default_asset_id of this CreativeAssetSelection.

        A creativeAssets[].id. This should refer to one of the parent assets in this creative, and will be served if none of the rules match. This is a required field.

        :param default_asset_id: The default_asset_id of this CreativeAssetSelection.
        :type default_asset_id: str
        """

        self._default_asset_id = default_asset_id

    @property
    def rules(self):
        """Gets the rules of this CreativeAssetSelection.

        Rules determine which asset will be served to a viewer. Rules will be evaluated in the order in which they are stored in this list. This list must contain at least one rule. Applicable to INSTREAM_VIDEO creatives.

        :return: The rules of this CreativeAssetSelection.
        :rtype: List[Rule]
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this CreativeAssetSelection.

        Rules determine which asset will be served to a viewer. Rules will be evaluated in the order in which they are stored in this list. This list must contain at least one rule. Applicable to INSTREAM_VIDEO creatives.

        :param rules: The rules of this CreativeAssetSelection.
        :type rules: List[Rule]
        """

        self._rules = rules
