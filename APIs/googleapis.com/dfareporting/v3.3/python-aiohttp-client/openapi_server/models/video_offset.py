# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoOffset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, offset_percentage: int=None, offset_seconds: int=None):
        """VideoOffset - a model defined in OpenAPI

        :param offset_percentage: The offset_percentage of this VideoOffset.
        :param offset_seconds: The offset_seconds of this VideoOffset.
        """
        self.openapi_types = {
            'offset_percentage': int,
            'offset_seconds': int
        }

        self.attribute_map = {
            'offset_percentage': 'offsetPercentage',
            'offset_seconds': 'offsetSeconds'
        }

        self._offset_percentage = offset_percentage
        self._offset_seconds = offset_seconds

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoOffset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoOffset of this VideoOffset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def offset_percentage(self):
        """Gets the offset_percentage of this VideoOffset.

        Duration, as a percentage of video duration. Do not set when offsetSeconds is set. Acceptable values are 0 to 100, inclusive.

        :return: The offset_percentage of this VideoOffset.
        :rtype: int
        """
        return self._offset_percentage

    @offset_percentage.setter
    def offset_percentage(self, offset_percentage):
        """Sets the offset_percentage of this VideoOffset.

        Duration, as a percentage of video duration. Do not set when offsetSeconds is set. Acceptable values are 0 to 100, inclusive.

        :param offset_percentage: The offset_percentage of this VideoOffset.
        :type offset_percentage: int
        """

        self._offset_percentage = offset_percentage

    @property
    def offset_seconds(self):
        """Gets the offset_seconds of this VideoOffset.

        Duration, in seconds. Do not set when offsetPercentage is set. Acceptable values are 0 to 86399, inclusive.

        :return: The offset_seconds of this VideoOffset.
        :rtype: int
        """
        return self._offset_seconds

    @offset_seconds.setter
    def offset_seconds(self, offset_seconds):
        """Sets the offset_seconds of this VideoOffset.

        Duration, in seconds. Do not set when offsetPercentage is set. Acceptable values are 0 to 86399, inclusive.

        :param offset_seconds: The offset_seconds of this VideoOffset.
        :type offset_seconds: int
        """

        self._offset_seconds = offset_seconds
