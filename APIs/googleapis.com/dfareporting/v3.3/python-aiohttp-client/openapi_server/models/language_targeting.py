# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.language import Language
from openapi_server import util


class LanguageTargeting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, languages: List[Language]=None):
        """LanguageTargeting - a model defined in OpenAPI

        :param languages: The languages of this LanguageTargeting.
        """
        self.openapi_types = {
            'languages': List[Language]
        }

        self.attribute_map = {
            'languages': 'languages'
        }

        self._languages = languages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LanguageTargeting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LanguageTargeting of this LanguageTargeting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def languages(self):
        """Gets the languages of this LanguageTargeting.

        Languages that this ad targets. For each language only languageId is required. The other fields are populated automatically when the ad is inserted or updated.

        :return: The languages of this LanguageTargeting.
        :rtype: List[Language]
        """
        return self._languages

    @languages.setter
    def languages(self, languages):
        """Sets the languages of this LanguageTargeting.

        Languages that this ad targets. For each language only languageId is required. The other fields are populated automatically when the ad is inserted or updated.

        :param languages: The languages of this LanguageTargeting.
        :type languages: List[Language]
        """

        self._languages = languages
