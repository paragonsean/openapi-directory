# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_population_clause import ListPopulationClause
from openapi_server import util


class ListPopulationRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, floodlight_activity_id: str=None, floodlight_activity_name: str=None, list_population_clauses: List[ListPopulationClause]=None):
        """ListPopulationRule - a model defined in OpenAPI

        :param floodlight_activity_id: The floodlight_activity_id of this ListPopulationRule.
        :param floodlight_activity_name: The floodlight_activity_name of this ListPopulationRule.
        :param list_population_clauses: The list_population_clauses of this ListPopulationRule.
        """
        self.openapi_types = {
            'floodlight_activity_id': str,
            'floodlight_activity_name': str,
            'list_population_clauses': List[ListPopulationClause]
        }

        self.attribute_map = {
            'floodlight_activity_id': 'floodlightActivityId',
            'floodlight_activity_name': 'floodlightActivityName',
            'list_population_clauses': 'listPopulationClauses'
        }

        self._floodlight_activity_id = floodlight_activity_id
        self._floodlight_activity_name = floodlight_activity_name
        self._list_population_clauses = list_population_clauses

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListPopulationRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListPopulationRule of this ListPopulationRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def floodlight_activity_id(self):
        """Gets the floodlight_activity_id of this ListPopulationRule.

        Floodlight activity ID associated with this rule. This field can be left blank.

        :return: The floodlight_activity_id of this ListPopulationRule.
        :rtype: str
        """
        return self._floodlight_activity_id

    @floodlight_activity_id.setter
    def floodlight_activity_id(self, floodlight_activity_id):
        """Sets the floodlight_activity_id of this ListPopulationRule.

        Floodlight activity ID associated with this rule. This field can be left blank.

        :param floodlight_activity_id: The floodlight_activity_id of this ListPopulationRule.
        :type floodlight_activity_id: str
        """

        self._floodlight_activity_id = floodlight_activity_id

    @property
    def floodlight_activity_name(self):
        """Gets the floodlight_activity_name of this ListPopulationRule.

        Name of floodlight activity associated with this rule. This is a read-only, auto-generated field.

        :return: The floodlight_activity_name of this ListPopulationRule.
        :rtype: str
        """
        return self._floodlight_activity_name

    @floodlight_activity_name.setter
    def floodlight_activity_name(self, floodlight_activity_name):
        """Sets the floodlight_activity_name of this ListPopulationRule.

        Name of floodlight activity associated with this rule. This is a read-only, auto-generated field.

        :param floodlight_activity_name: The floodlight_activity_name of this ListPopulationRule.
        :type floodlight_activity_name: str
        """

        self._floodlight_activity_name = floodlight_activity_name

    @property
    def list_population_clauses(self):
        """Gets the list_population_clauses of this ListPopulationRule.

        Clauses that make up this list population rule. Clauses are joined by ANDs, and the clauses themselves are made up of list population terms which are joined by ORs.

        :return: The list_population_clauses of this ListPopulationRule.
        :rtype: List[ListPopulationClause]
        """
        return self._list_population_clauses

    @list_population_clauses.setter
    def list_population_clauses(self, list_population_clauses):
        """Sets the list_population_clauses of this ListPopulationRule.

        Clauses that make up this list population rule. Clauses are joined by ANDs, and the clauses themselves are made up of list population terms which are joined by ORs.

        :param list_population_clauses: The list_population_clauses of this ListPopulationRule.
        :type list_population_clauses: List[ListPopulationClause]
        """

        self._list_population_clauses = list_population_clauses
