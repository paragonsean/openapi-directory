# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomViewabilityMetricConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audible: bool=None, time_millis: int=None, time_percent: int=None, viewability_percent: int=None):
        """CustomViewabilityMetricConfiguration - a model defined in OpenAPI

        :param audible: The audible of this CustomViewabilityMetricConfiguration.
        :param time_millis: The time_millis of this CustomViewabilityMetricConfiguration.
        :param time_percent: The time_percent of this CustomViewabilityMetricConfiguration.
        :param viewability_percent: The viewability_percent of this CustomViewabilityMetricConfiguration.
        """
        self.openapi_types = {
            'audible': bool,
            'time_millis': int,
            'time_percent': int,
            'viewability_percent': int
        }

        self.attribute_map = {
            'audible': 'audible',
            'time_millis': 'timeMillis',
            'time_percent': 'timePercent',
            'viewability_percent': 'viewabilityPercent'
        }

        self._audible = audible
        self._time_millis = time_millis
        self._time_percent = time_percent
        self._viewability_percent = viewability_percent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomViewabilityMetricConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomViewabilityMetricConfiguration of this CustomViewabilityMetricConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audible(self):
        """Gets the audible of this CustomViewabilityMetricConfiguration.

        Whether the video must be audible to count an impression.

        :return: The audible of this CustomViewabilityMetricConfiguration.
        :rtype: bool
        """
        return self._audible

    @audible.setter
    def audible(self, audible):
        """Sets the audible of this CustomViewabilityMetricConfiguration.

        Whether the video must be audible to count an impression.

        :param audible: The audible of this CustomViewabilityMetricConfiguration.
        :type audible: bool
        """

        self._audible = audible

    @property
    def time_millis(self):
        """Gets the time_millis of this CustomViewabilityMetricConfiguration.

        The time in milliseconds the video must play for the Custom Viewability Metric to count an impression. If both this and timePercent are specified, the earlier of the two will be used.

        :return: The time_millis of this CustomViewabilityMetricConfiguration.
        :rtype: int
        """
        return self._time_millis

    @time_millis.setter
    def time_millis(self, time_millis):
        """Sets the time_millis of this CustomViewabilityMetricConfiguration.

        The time in milliseconds the video must play for the Custom Viewability Metric to count an impression. If both this and timePercent are specified, the earlier of the two will be used.

        :param time_millis: The time_millis of this CustomViewabilityMetricConfiguration.
        :type time_millis: int
        """

        self._time_millis = time_millis

    @property
    def time_percent(self):
        """Gets the time_percent of this CustomViewabilityMetricConfiguration.

        The percentage of video that must play for the Custom Viewability Metric to count an impression. If both this and timeMillis are specified, the earlier of the two will be used.

        :return: The time_percent of this CustomViewabilityMetricConfiguration.
        :rtype: int
        """
        return self._time_percent

    @time_percent.setter
    def time_percent(self, time_percent):
        """Sets the time_percent of this CustomViewabilityMetricConfiguration.

        The percentage of video that must play for the Custom Viewability Metric to count an impression. If both this and timeMillis are specified, the earlier of the two will be used.

        :param time_percent: The time_percent of this CustomViewabilityMetricConfiguration.
        :type time_percent: int
        """

        self._time_percent = time_percent

    @property
    def viewability_percent(self):
        """Gets the viewability_percent of this CustomViewabilityMetricConfiguration.

        The percentage of video that must be on screen for the Custom Viewability Metric to count an impression.

        :return: The viewability_percent of this CustomViewabilityMetricConfiguration.
        :rtype: int
        """
        return self._viewability_percent

    @viewability_percent.setter
    def viewability_percent(self, viewability_percent):
        """Sets the viewability_percent of this CustomViewabilityMetricConfiguration.

        The percentage of video that must be on screen for the Custom Viewability Metric to count an impression.

        :param viewability_percent: The viewability_percent of this CustomViewabilityMetricConfiguration.
        :type viewability_percent: int
        """

        self._viewability_percent = viewability_percent
