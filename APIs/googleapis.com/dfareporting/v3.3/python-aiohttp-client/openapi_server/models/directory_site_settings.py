# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dfp_settings import DfpSettings
from openapi_server import util


class DirectorySiteSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_view_opt_out: bool=None, dfp_settings: DfpSettings=None, instream_video_placement_accepted: bool=None, interstitial_placement_accepted: bool=None):
        """DirectorySiteSettings - a model defined in OpenAPI

        :param active_view_opt_out: The active_view_opt_out of this DirectorySiteSettings.
        :param dfp_settings: The dfp_settings of this DirectorySiteSettings.
        :param instream_video_placement_accepted: The instream_video_placement_accepted of this DirectorySiteSettings.
        :param interstitial_placement_accepted: The interstitial_placement_accepted of this DirectorySiteSettings.
        """
        self.openapi_types = {
            'active_view_opt_out': bool,
            'dfp_settings': DfpSettings,
            'instream_video_placement_accepted': bool,
            'interstitial_placement_accepted': bool
        }

        self.attribute_map = {
            'active_view_opt_out': 'activeViewOptOut',
            'dfp_settings': 'dfpSettings',
            'instream_video_placement_accepted': 'instreamVideoPlacementAccepted',
            'interstitial_placement_accepted': 'interstitialPlacementAccepted'
        }

        self._active_view_opt_out = active_view_opt_out
        self._dfp_settings = dfp_settings
        self._instream_video_placement_accepted = instream_video_placement_accepted
        self._interstitial_placement_accepted = interstitial_placement_accepted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DirectorySiteSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DirectorySiteSettings of this DirectorySiteSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_view_opt_out(self):
        """Gets the active_view_opt_out of this DirectorySiteSettings.

        Whether this directory site has disabled active view creatives.

        :return: The active_view_opt_out of this DirectorySiteSettings.
        :rtype: bool
        """
        return self._active_view_opt_out

    @active_view_opt_out.setter
    def active_view_opt_out(self, active_view_opt_out):
        """Sets the active_view_opt_out of this DirectorySiteSettings.

        Whether this directory site has disabled active view creatives.

        :param active_view_opt_out: The active_view_opt_out of this DirectorySiteSettings.
        :type active_view_opt_out: bool
        """

        self._active_view_opt_out = active_view_opt_out

    @property
    def dfp_settings(self):
        """Gets the dfp_settings of this DirectorySiteSettings.


        :return: The dfp_settings of this DirectorySiteSettings.
        :rtype: DfpSettings
        """
        return self._dfp_settings

    @dfp_settings.setter
    def dfp_settings(self, dfp_settings):
        """Sets the dfp_settings of this DirectorySiteSettings.


        :param dfp_settings: The dfp_settings of this DirectorySiteSettings.
        :type dfp_settings: DfpSettings
        """

        self._dfp_settings = dfp_settings

    @property
    def instream_video_placement_accepted(self):
        """Gets the instream_video_placement_accepted of this DirectorySiteSettings.

        Whether this site accepts in-stream video ads.

        :return: The instream_video_placement_accepted of this DirectorySiteSettings.
        :rtype: bool
        """
        return self._instream_video_placement_accepted

    @instream_video_placement_accepted.setter
    def instream_video_placement_accepted(self, instream_video_placement_accepted):
        """Sets the instream_video_placement_accepted of this DirectorySiteSettings.

        Whether this site accepts in-stream video ads.

        :param instream_video_placement_accepted: The instream_video_placement_accepted of this DirectorySiteSettings.
        :type instream_video_placement_accepted: bool
        """

        self._instream_video_placement_accepted = instream_video_placement_accepted

    @property
    def interstitial_placement_accepted(self):
        """Gets the interstitial_placement_accepted of this DirectorySiteSettings.

        Whether this site accepts interstitial ads.

        :return: The interstitial_placement_accepted of this DirectorySiteSettings.
        :rtype: bool
        """
        return self._interstitial_placement_accepted

    @interstitial_placement_accepted.setter
    def interstitial_placement_accepted(self, interstitial_placement_accepted):
        """Sets the interstitial_placement_accepted of this DirectorySiteSettings.

        Whether this site accepts interstitial ads.

        :param interstitial_placement_accepted: The interstitial_placement_accepted of this DirectorySiteSettings.
        :type interstitial_placement_accepted: bool
        """

        self._interstitial_placement_accepted = interstitial_placement_accepted
