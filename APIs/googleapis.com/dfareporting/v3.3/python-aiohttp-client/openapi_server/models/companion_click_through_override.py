# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.click_through_url import ClickThroughUrl
from openapi_server import util


class CompanionClickThroughOverride(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, click_through_url: ClickThroughUrl=None, creative_id: str=None):
        """CompanionClickThroughOverride - a model defined in OpenAPI

        :param click_through_url: The click_through_url of this CompanionClickThroughOverride.
        :param creative_id: The creative_id of this CompanionClickThroughOverride.
        """
        self.openapi_types = {
            'click_through_url': ClickThroughUrl,
            'creative_id': str
        }

        self.attribute_map = {
            'click_through_url': 'clickThroughUrl',
            'creative_id': 'creativeId'
        }

        self._click_through_url = click_through_url
        self._creative_id = creative_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanionClickThroughOverride':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanionClickThroughOverride of this CompanionClickThroughOverride.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def click_through_url(self):
        """Gets the click_through_url of this CompanionClickThroughOverride.


        :return: The click_through_url of this CompanionClickThroughOverride.
        :rtype: ClickThroughUrl
        """
        return self._click_through_url

    @click_through_url.setter
    def click_through_url(self, click_through_url):
        """Sets the click_through_url of this CompanionClickThroughOverride.


        :param click_through_url: The click_through_url of this CompanionClickThroughOverride.
        :type click_through_url: ClickThroughUrl
        """

        self._click_through_url = click_through_url

    @property
    def creative_id(self):
        """Gets the creative_id of this CompanionClickThroughOverride.

        ID of the creative for this companion click-through override.

        :return: The creative_id of this CompanionClickThroughOverride.
        :rtype: str
        """
        return self._creative_id

    @creative_id.setter
    def creative_id(self, creative_id):
        """Sets the creative_id of this CompanionClickThroughOverride.

        ID of the creative for this companion click-through override.

        :param creative_id: The creative_id of this CompanionClickThroughOverride.
        :type creative_id: str
        """

        self._creative_id = creative_id
