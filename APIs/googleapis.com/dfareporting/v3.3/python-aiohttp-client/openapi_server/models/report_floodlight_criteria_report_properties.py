# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportFloodlightCriteriaReportProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_attributed_ip_conversions: bool=None, include_unattributed_cookie_conversions: bool=None, include_unattributed_ip_conversions: bool=None):
        """ReportFloodlightCriteriaReportProperties - a model defined in OpenAPI

        :param include_attributed_ip_conversions: The include_attributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.
        :param include_unattributed_cookie_conversions: The include_unattributed_cookie_conversions of this ReportFloodlightCriteriaReportProperties.
        :param include_unattributed_ip_conversions: The include_unattributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.
        """
        self.openapi_types = {
            'include_attributed_ip_conversions': bool,
            'include_unattributed_cookie_conversions': bool,
            'include_unattributed_ip_conversions': bool
        }

        self.attribute_map = {
            'include_attributed_ip_conversions': 'includeAttributedIPConversions',
            'include_unattributed_cookie_conversions': 'includeUnattributedCookieConversions',
            'include_unattributed_ip_conversions': 'includeUnattributedIPConversions'
        }

        self._include_attributed_ip_conversions = include_attributed_ip_conversions
        self._include_unattributed_cookie_conversions = include_unattributed_cookie_conversions
        self._include_unattributed_ip_conversions = include_unattributed_ip_conversions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportFloodlightCriteriaReportProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Report_floodlightCriteria_reportProperties of this ReportFloodlightCriteriaReportProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_attributed_ip_conversions(self):
        """Gets the include_attributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.

        Include conversions that have no cookie, but do have an exposure path.

        :return: The include_attributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.
        :rtype: bool
        """
        return self._include_attributed_ip_conversions

    @include_attributed_ip_conversions.setter
    def include_attributed_ip_conversions(self, include_attributed_ip_conversions):
        """Sets the include_attributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.

        Include conversions that have no cookie, but do have an exposure path.

        :param include_attributed_ip_conversions: The include_attributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.
        :type include_attributed_ip_conversions: bool
        """

        self._include_attributed_ip_conversions = include_attributed_ip_conversions

    @property
    def include_unattributed_cookie_conversions(self):
        """Gets the include_unattributed_cookie_conversions of this ReportFloodlightCriteriaReportProperties.

        Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.

        :return: The include_unattributed_cookie_conversions of this ReportFloodlightCriteriaReportProperties.
        :rtype: bool
        """
        return self._include_unattributed_cookie_conversions

    @include_unattributed_cookie_conversions.setter
    def include_unattributed_cookie_conversions(self, include_unattributed_cookie_conversions):
        """Sets the include_unattributed_cookie_conversions of this ReportFloodlightCriteriaReportProperties.

        Include conversions of users with a DoubleClick cookie but without an exposure. That means the user did not click or see an ad from the advertiser within the Floodlight group, or that the interaction happened outside the lookback window.

        :param include_unattributed_cookie_conversions: The include_unattributed_cookie_conversions of this ReportFloodlightCriteriaReportProperties.
        :type include_unattributed_cookie_conversions: bool
        """

        self._include_unattributed_cookie_conversions = include_unattributed_cookie_conversions

    @property
    def include_unattributed_ip_conversions(self):
        """Gets the include_unattributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.

        Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.

        :return: The include_unattributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.
        :rtype: bool
        """
        return self._include_unattributed_ip_conversions

    @include_unattributed_ip_conversions.setter
    def include_unattributed_ip_conversions(self, include_unattributed_ip_conversions):
        """Sets the include_unattributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.

        Include conversions that have no associated cookies and no exposures. It’s therefore impossible to know how the user was exposed to your ads during the lookback window prior to a conversion.

        :param include_unattributed_ip_conversions: The include_unattributed_ip_conversions of this ReportFloodlightCriteriaReportProperties.
        :type include_unattributed_ip_conversions: bool
        """

        self._include_unattributed_ip_conversions = include_unattributed_ip_conversions
