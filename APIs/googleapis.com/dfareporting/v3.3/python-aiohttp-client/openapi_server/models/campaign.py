# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ad_blocking_configuration import AdBlockingConfiguration
from openapi_server.models.audience_segment_group import AudienceSegmentGroup
from openapi_server.models.click_through_url_suffix_properties import ClickThroughUrlSuffixProperties
from openapi_server.models.creative_optimization_configuration import CreativeOptimizationConfiguration
from openapi_server.models.default_click_through_event_tag_properties import DefaultClickThroughEventTagProperties
from openapi_server.models.dimension_value import DimensionValue
from openapi_server.models.event_tag_override import EventTagOverride
from openapi_server.models.last_modified_info import LastModifiedInfo
from openapi_server import util


class Campaign(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, ad_blocking_configuration: AdBlockingConfiguration=None, additional_creative_optimization_configurations: List[CreativeOptimizationConfiguration]=None, advertiser_group_id: str=None, advertiser_id: str=None, advertiser_id_dimension_value: DimensionValue=None, archived: bool=None, audience_segment_groups: List[AudienceSegmentGroup]=None, billing_invoice_code: str=None, click_through_url_suffix_properties: ClickThroughUrlSuffixProperties=None, comment: str=None, create_info: LastModifiedInfo=None, creative_group_ids: List[str]=None, creative_optimization_configuration: CreativeOptimizationConfiguration=None, default_click_through_event_tag_properties: DefaultClickThroughEventTagProperties=None, default_landing_page_id: str=None, end_date: date=None, event_tag_overrides: List[EventTagOverride]=None, external_id: str=None, id: str=None, id_dimension_value: DimensionValue=None, kind: str=None, last_modified_info: LastModifiedInfo=None, name: str=None, nielsen_ocr_enabled: bool=None, start_date: date=None, subaccount_id: str=None, trafficker_emails: List[str]=None):
        """Campaign - a model defined in OpenAPI

        :param account_id: The account_id of this Campaign.
        :param ad_blocking_configuration: The ad_blocking_configuration of this Campaign.
        :param additional_creative_optimization_configurations: The additional_creative_optimization_configurations of this Campaign.
        :param advertiser_group_id: The advertiser_group_id of this Campaign.
        :param advertiser_id: The advertiser_id of this Campaign.
        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this Campaign.
        :param archived: The archived of this Campaign.
        :param audience_segment_groups: The audience_segment_groups of this Campaign.
        :param billing_invoice_code: The billing_invoice_code of this Campaign.
        :param click_through_url_suffix_properties: The click_through_url_suffix_properties of this Campaign.
        :param comment: The comment of this Campaign.
        :param create_info: The create_info of this Campaign.
        :param creative_group_ids: The creative_group_ids of this Campaign.
        :param creative_optimization_configuration: The creative_optimization_configuration of this Campaign.
        :param default_click_through_event_tag_properties: The default_click_through_event_tag_properties of this Campaign.
        :param default_landing_page_id: The default_landing_page_id of this Campaign.
        :param end_date: The end_date of this Campaign.
        :param event_tag_overrides: The event_tag_overrides of this Campaign.
        :param external_id: The external_id of this Campaign.
        :param id: The id of this Campaign.
        :param id_dimension_value: The id_dimension_value of this Campaign.
        :param kind: The kind of this Campaign.
        :param last_modified_info: The last_modified_info of this Campaign.
        :param name: The name of this Campaign.
        :param nielsen_ocr_enabled: The nielsen_ocr_enabled of this Campaign.
        :param start_date: The start_date of this Campaign.
        :param subaccount_id: The subaccount_id of this Campaign.
        :param trafficker_emails: The trafficker_emails of this Campaign.
        """
        self.openapi_types = {
            'account_id': str,
            'ad_blocking_configuration': AdBlockingConfiguration,
            'additional_creative_optimization_configurations': List[CreativeOptimizationConfiguration],
            'advertiser_group_id': str,
            'advertiser_id': str,
            'advertiser_id_dimension_value': DimensionValue,
            'archived': bool,
            'audience_segment_groups': List[AudienceSegmentGroup],
            'billing_invoice_code': str,
            'click_through_url_suffix_properties': ClickThroughUrlSuffixProperties,
            'comment': str,
            'create_info': LastModifiedInfo,
            'creative_group_ids': List[str],
            'creative_optimization_configuration': CreativeOptimizationConfiguration,
            'default_click_through_event_tag_properties': DefaultClickThroughEventTagProperties,
            'default_landing_page_id': str,
            'end_date': date,
            'event_tag_overrides': List[EventTagOverride],
            'external_id': str,
            'id': str,
            'id_dimension_value': DimensionValue,
            'kind': str,
            'last_modified_info': LastModifiedInfo,
            'name': str,
            'nielsen_ocr_enabled': bool,
            'start_date': date,
            'subaccount_id': str,
            'trafficker_emails': List[str]
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'ad_blocking_configuration': 'adBlockingConfiguration',
            'additional_creative_optimization_configurations': 'additionalCreativeOptimizationConfigurations',
            'advertiser_group_id': 'advertiserGroupId',
            'advertiser_id': 'advertiserId',
            'advertiser_id_dimension_value': 'advertiserIdDimensionValue',
            'archived': 'archived',
            'audience_segment_groups': 'audienceSegmentGroups',
            'billing_invoice_code': 'billingInvoiceCode',
            'click_through_url_suffix_properties': 'clickThroughUrlSuffixProperties',
            'comment': 'comment',
            'create_info': 'createInfo',
            'creative_group_ids': 'creativeGroupIds',
            'creative_optimization_configuration': 'creativeOptimizationConfiguration',
            'default_click_through_event_tag_properties': 'defaultClickThroughEventTagProperties',
            'default_landing_page_id': 'defaultLandingPageId',
            'end_date': 'endDate',
            'event_tag_overrides': 'eventTagOverrides',
            'external_id': 'externalId',
            'id': 'id',
            'id_dimension_value': 'idDimensionValue',
            'kind': 'kind',
            'last_modified_info': 'lastModifiedInfo',
            'name': 'name',
            'nielsen_ocr_enabled': 'nielsenOcrEnabled',
            'start_date': 'startDate',
            'subaccount_id': 'subaccountId',
            'trafficker_emails': 'traffickerEmails'
        }

        self._account_id = account_id
        self._ad_blocking_configuration = ad_blocking_configuration
        self._additional_creative_optimization_configurations = additional_creative_optimization_configurations
        self._advertiser_group_id = advertiser_group_id
        self._advertiser_id = advertiser_id
        self._advertiser_id_dimension_value = advertiser_id_dimension_value
        self._archived = archived
        self._audience_segment_groups = audience_segment_groups
        self._billing_invoice_code = billing_invoice_code
        self._click_through_url_suffix_properties = click_through_url_suffix_properties
        self._comment = comment
        self._create_info = create_info
        self._creative_group_ids = creative_group_ids
        self._creative_optimization_configuration = creative_optimization_configuration
        self._default_click_through_event_tag_properties = default_click_through_event_tag_properties
        self._default_landing_page_id = default_landing_page_id
        self._end_date = end_date
        self._event_tag_overrides = event_tag_overrides
        self._external_id = external_id
        self._id = id
        self._id_dimension_value = id_dimension_value
        self._kind = kind
        self._last_modified_info = last_modified_info
        self._name = name
        self._nielsen_ocr_enabled = nielsen_ocr_enabled
        self._start_date = start_date
        self._subaccount_id = subaccount_id
        self._trafficker_emails = trafficker_emails

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Campaign':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Campaign of this Campaign.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this Campaign.

        Account ID of this campaign. This is a read-only field that can be left blank.

        :return: The account_id of this Campaign.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this Campaign.

        Account ID of this campaign. This is a read-only field that can be left blank.

        :param account_id: The account_id of this Campaign.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def ad_blocking_configuration(self):
        """Gets the ad_blocking_configuration of this Campaign.


        :return: The ad_blocking_configuration of this Campaign.
        :rtype: AdBlockingConfiguration
        """
        return self._ad_blocking_configuration

    @ad_blocking_configuration.setter
    def ad_blocking_configuration(self, ad_blocking_configuration):
        """Sets the ad_blocking_configuration of this Campaign.


        :param ad_blocking_configuration: The ad_blocking_configuration of this Campaign.
        :type ad_blocking_configuration: AdBlockingConfiguration
        """

        self._ad_blocking_configuration = ad_blocking_configuration

    @property
    def additional_creative_optimization_configurations(self):
        """Gets the additional_creative_optimization_configurations of this Campaign.

        Additional creative optimization configurations for the campaign.

        :return: The additional_creative_optimization_configurations of this Campaign.
        :rtype: List[CreativeOptimizationConfiguration]
        """
        return self._additional_creative_optimization_configurations

    @additional_creative_optimization_configurations.setter
    def additional_creative_optimization_configurations(self, additional_creative_optimization_configurations):
        """Sets the additional_creative_optimization_configurations of this Campaign.

        Additional creative optimization configurations for the campaign.

        :param additional_creative_optimization_configurations: The additional_creative_optimization_configurations of this Campaign.
        :type additional_creative_optimization_configurations: List[CreativeOptimizationConfiguration]
        """

        self._additional_creative_optimization_configurations = additional_creative_optimization_configurations

    @property
    def advertiser_group_id(self):
        """Gets the advertiser_group_id of this Campaign.

        Advertiser group ID of the associated advertiser.

        :return: The advertiser_group_id of this Campaign.
        :rtype: str
        """
        return self._advertiser_group_id

    @advertiser_group_id.setter
    def advertiser_group_id(self, advertiser_group_id):
        """Sets the advertiser_group_id of this Campaign.

        Advertiser group ID of the associated advertiser.

        :param advertiser_group_id: The advertiser_group_id of this Campaign.
        :type advertiser_group_id: str
        """

        self._advertiser_group_id = advertiser_group_id

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this Campaign.

        Advertiser ID of this campaign. This is a required field.

        :return: The advertiser_id of this Campaign.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this Campaign.

        Advertiser ID of this campaign. This is a required field.

        :param advertiser_id: The advertiser_id of this Campaign.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def advertiser_id_dimension_value(self):
        """Gets the advertiser_id_dimension_value of this Campaign.


        :return: The advertiser_id_dimension_value of this Campaign.
        :rtype: DimensionValue
        """
        return self._advertiser_id_dimension_value

    @advertiser_id_dimension_value.setter
    def advertiser_id_dimension_value(self, advertiser_id_dimension_value):
        """Sets the advertiser_id_dimension_value of this Campaign.


        :param advertiser_id_dimension_value: The advertiser_id_dimension_value of this Campaign.
        :type advertiser_id_dimension_value: DimensionValue
        """

        self._advertiser_id_dimension_value = advertiser_id_dimension_value

    @property
    def archived(self):
        """Gets the archived of this Campaign.

        Whether this campaign has been archived.

        :return: The archived of this Campaign.
        :rtype: bool
        """
        return self._archived

    @archived.setter
    def archived(self, archived):
        """Sets the archived of this Campaign.

        Whether this campaign has been archived.

        :param archived: The archived of this Campaign.
        :type archived: bool
        """

        self._archived = archived

    @property
    def audience_segment_groups(self):
        """Gets the audience_segment_groups of this Campaign.

        Audience segment groups assigned to this campaign. Cannot have more than 300 segment groups.

        :return: The audience_segment_groups of this Campaign.
        :rtype: List[AudienceSegmentGroup]
        """
        return self._audience_segment_groups

    @audience_segment_groups.setter
    def audience_segment_groups(self, audience_segment_groups):
        """Sets the audience_segment_groups of this Campaign.

        Audience segment groups assigned to this campaign. Cannot have more than 300 segment groups.

        :param audience_segment_groups: The audience_segment_groups of this Campaign.
        :type audience_segment_groups: List[AudienceSegmentGroup]
        """

        self._audience_segment_groups = audience_segment_groups

    @property
    def billing_invoice_code(self):
        """Gets the billing_invoice_code of this Campaign.

        Billing invoice code included in the Campaign Manager client billing invoices associated with the campaign.

        :return: The billing_invoice_code of this Campaign.
        :rtype: str
        """
        return self._billing_invoice_code

    @billing_invoice_code.setter
    def billing_invoice_code(self, billing_invoice_code):
        """Sets the billing_invoice_code of this Campaign.

        Billing invoice code included in the Campaign Manager client billing invoices associated with the campaign.

        :param billing_invoice_code: The billing_invoice_code of this Campaign.
        :type billing_invoice_code: str
        """

        self._billing_invoice_code = billing_invoice_code

    @property
    def click_through_url_suffix_properties(self):
        """Gets the click_through_url_suffix_properties of this Campaign.


        :return: The click_through_url_suffix_properties of this Campaign.
        :rtype: ClickThroughUrlSuffixProperties
        """
        return self._click_through_url_suffix_properties

    @click_through_url_suffix_properties.setter
    def click_through_url_suffix_properties(self, click_through_url_suffix_properties):
        """Sets the click_through_url_suffix_properties of this Campaign.


        :param click_through_url_suffix_properties: The click_through_url_suffix_properties of this Campaign.
        :type click_through_url_suffix_properties: ClickThroughUrlSuffixProperties
        """

        self._click_through_url_suffix_properties = click_through_url_suffix_properties

    @property
    def comment(self):
        """Gets the comment of this Campaign.

        Arbitrary comments about this campaign. Must be less than 256 characters long.

        :return: The comment of this Campaign.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this Campaign.

        Arbitrary comments about this campaign. Must be less than 256 characters long.

        :param comment: The comment of this Campaign.
        :type comment: str
        """

        self._comment = comment

    @property
    def create_info(self):
        """Gets the create_info of this Campaign.


        :return: The create_info of this Campaign.
        :rtype: LastModifiedInfo
        """
        return self._create_info

    @create_info.setter
    def create_info(self, create_info):
        """Sets the create_info of this Campaign.


        :param create_info: The create_info of this Campaign.
        :type create_info: LastModifiedInfo
        """

        self._create_info = create_info

    @property
    def creative_group_ids(self):
        """Gets the creative_group_ids of this Campaign.

        List of creative group IDs that are assigned to the campaign.

        :return: The creative_group_ids of this Campaign.
        :rtype: List[str]
        """
        return self._creative_group_ids

    @creative_group_ids.setter
    def creative_group_ids(self, creative_group_ids):
        """Sets the creative_group_ids of this Campaign.

        List of creative group IDs that are assigned to the campaign.

        :param creative_group_ids: The creative_group_ids of this Campaign.
        :type creative_group_ids: List[str]
        """

        self._creative_group_ids = creative_group_ids

    @property
    def creative_optimization_configuration(self):
        """Gets the creative_optimization_configuration of this Campaign.


        :return: The creative_optimization_configuration of this Campaign.
        :rtype: CreativeOptimizationConfiguration
        """
        return self._creative_optimization_configuration

    @creative_optimization_configuration.setter
    def creative_optimization_configuration(self, creative_optimization_configuration):
        """Sets the creative_optimization_configuration of this Campaign.


        :param creative_optimization_configuration: The creative_optimization_configuration of this Campaign.
        :type creative_optimization_configuration: CreativeOptimizationConfiguration
        """

        self._creative_optimization_configuration = creative_optimization_configuration

    @property
    def default_click_through_event_tag_properties(self):
        """Gets the default_click_through_event_tag_properties of this Campaign.


        :return: The default_click_through_event_tag_properties of this Campaign.
        :rtype: DefaultClickThroughEventTagProperties
        """
        return self._default_click_through_event_tag_properties

    @default_click_through_event_tag_properties.setter
    def default_click_through_event_tag_properties(self, default_click_through_event_tag_properties):
        """Sets the default_click_through_event_tag_properties of this Campaign.


        :param default_click_through_event_tag_properties: The default_click_through_event_tag_properties of this Campaign.
        :type default_click_through_event_tag_properties: DefaultClickThroughEventTagProperties
        """

        self._default_click_through_event_tag_properties = default_click_through_event_tag_properties

    @property
    def default_landing_page_id(self):
        """Gets the default_landing_page_id of this Campaign.

        The default landing page ID for this campaign.

        :return: The default_landing_page_id of this Campaign.
        :rtype: str
        """
        return self._default_landing_page_id

    @default_landing_page_id.setter
    def default_landing_page_id(self, default_landing_page_id):
        """Sets the default_landing_page_id of this Campaign.

        The default landing page ID for this campaign.

        :param default_landing_page_id: The default_landing_page_id of this Campaign.
        :type default_landing_page_id: str
        """

        self._default_landing_page_id = default_landing_page_id

    @property
    def end_date(self):
        """Gets the end_date of this Campaign.


        :return: The end_date of this Campaign.
        :rtype: date
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this Campaign.


        :param end_date: The end_date of this Campaign.
        :type end_date: date
        """

        self._end_date = end_date

    @property
    def event_tag_overrides(self):
        """Gets the event_tag_overrides of this Campaign.

        Overrides that can be used to activate or deactivate advertiser event tags.

        :return: The event_tag_overrides of this Campaign.
        :rtype: List[EventTagOverride]
        """
        return self._event_tag_overrides

    @event_tag_overrides.setter
    def event_tag_overrides(self, event_tag_overrides):
        """Sets the event_tag_overrides of this Campaign.

        Overrides that can be used to activate or deactivate advertiser event tags.

        :param event_tag_overrides: The event_tag_overrides of this Campaign.
        :type event_tag_overrides: List[EventTagOverride]
        """

        self._event_tag_overrides = event_tag_overrides

    @property
    def external_id(self):
        """Gets the external_id of this Campaign.

        External ID for this campaign.

        :return: The external_id of this Campaign.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this Campaign.

        External ID for this campaign.

        :param external_id: The external_id of this Campaign.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def id(self):
        """Gets the id of this Campaign.

        ID of this campaign. This is a read-only auto-generated field.

        :return: The id of this Campaign.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Campaign.

        ID of this campaign. This is a read-only auto-generated field.

        :param id: The id of this Campaign.
        :type id: str
        """

        self._id = id

    @property
    def id_dimension_value(self):
        """Gets the id_dimension_value of this Campaign.


        :return: The id_dimension_value of this Campaign.
        :rtype: DimensionValue
        """
        return self._id_dimension_value

    @id_dimension_value.setter
    def id_dimension_value(self, id_dimension_value):
        """Sets the id_dimension_value of this Campaign.


        :param id_dimension_value: The id_dimension_value of this Campaign.
        :type id_dimension_value: DimensionValue
        """

        self._id_dimension_value = id_dimension_value

    @property
    def kind(self):
        """Gets the kind of this Campaign.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaign\".

        :return: The kind of this Campaign.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this Campaign.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#campaign\".

        :param kind: The kind of this Campaign.
        :type kind: str
        """

        self._kind = kind

    @property
    def last_modified_info(self):
        """Gets the last_modified_info of this Campaign.


        :return: The last_modified_info of this Campaign.
        :rtype: LastModifiedInfo
        """
        return self._last_modified_info

    @last_modified_info.setter
    def last_modified_info(self, last_modified_info):
        """Sets the last_modified_info of this Campaign.


        :param last_modified_info: The last_modified_info of this Campaign.
        :type last_modified_info: LastModifiedInfo
        """

        self._last_modified_info = last_modified_info

    @property
    def name(self):
        """Gets the name of this Campaign.

        Name of this campaign. This is a required field and must be less than 256 characters long and unique among campaigns of the same advertiser.

        :return: The name of this Campaign.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Campaign.

        Name of this campaign. This is a required field and must be less than 256 characters long and unique among campaigns of the same advertiser.

        :param name: The name of this Campaign.
        :type name: str
        """

        self._name = name

    @property
    def nielsen_ocr_enabled(self):
        """Gets the nielsen_ocr_enabled of this Campaign.

        Whether Nielsen reports are enabled for this campaign.

        :return: The nielsen_ocr_enabled of this Campaign.
        :rtype: bool
        """
        return self._nielsen_ocr_enabled

    @nielsen_ocr_enabled.setter
    def nielsen_ocr_enabled(self, nielsen_ocr_enabled):
        """Sets the nielsen_ocr_enabled of this Campaign.

        Whether Nielsen reports are enabled for this campaign.

        :param nielsen_ocr_enabled: The nielsen_ocr_enabled of this Campaign.
        :type nielsen_ocr_enabled: bool
        """

        self._nielsen_ocr_enabled = nielsen_ocr_enabled

    @property
    def start_date(self):
        """Gets the start_date of this Campaign.


        :return: The start_date of this Campaign.
        :rtype: date
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Campaign.


        :param start_date: The start_date of this Campaign.
        :type start_date: date
        """

        self._start_date = start_date

    @property
    def subaccount_id(self):
        """Gets the subaccount_id of this Campaign.

        Subaccount ID of this campaign. This is a read-only field that can be left blank.

        :return: The subaccount_id of this Campaign.
        :rtype: str
        """
        return self._subaccount_id

    @subaccount_id.setter
    def subaccount_id(self, subaccount_id):
        """Sets the subaccount_id of this Campaign.

        Subaccount ID of this campaign. This is a read-only field that can be left blank.

        :param subaccount_id: The subaccount_id of this Campaign.
        :type subaccount_id: str
        """

        self._subaccount_id = subaccount_id

    @property
    def trafficker_emails(self):
        """Gets the trafficker_emails of this Campaign.

        Campaign trafficker contact emails.

        :return: The trafficker_emails of this Campaign.
        :rtype: List[str]
        """
        return self._trafficker_emails

    @trafficker_emails.setter
    def trafficker_emails(self, trafficker_emails):
        """Sets the trafficker_emails of this Campaign.

        Campaign trafficker contact emails.

        :param trafficker_emails: The trafficker_emails of this Campaign.
        :type trafficker_emails: List[str]
        """

        self._trafficker_emails = trafficker_emails
