# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TranscodeSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled_video_formats: List[int]=None, kind: str=None):
        """TranscodeSetting - a model defined in OpenAPI

        :param enabled_video_formats: The enabled_video_formats of this TranscodeSetting.
        :param kind: The kind of this TranscodeSetting.
        """
        self.openapi_types = {
            'enabled_video_formats': List[int],
            'kind': str
        }

        self.attribute_map = {
            'enabled_video_formats': 'enabledVideoFormats',
            'kind': 'kind'
        }

        self._enabled_video_formats = enabled_video_formats
        self._kind = kind

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TranscodeSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TranscodeSetting of this TranscodeSetting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled_video_formats(self):
        """Gets the enabled_video_formats of this TranscodeSetting.

        Allowlist of video formats to be served to this placement. Set this list to null or empty to serve all video formats.

        :return: The enabled_video_formats of this TranscodeSetting.
        :rtype: List[int]
        """
        return self._enabled_video_formats

    @enabled_video_formats.setter
    def enabled_video_formats(self, enabled_video_formats):
        """Sets the enabled_video_formats of this TranscodeSetting.

        Allowlist of video formats to be served to this placement. Set this list to null or empty to serve all video formats.

        :param enabled_video_formats: The enabled_video_formats of this TranscodeSetting.
        :type enabled_video_formats: List[int]
        """

        self._enabled_video_formats = enabled_video_formats

    @property
    def kind(self):
        """Gets the kind of this TranscodeSetting.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#transcodeSetting\".

        :return: The kind of this TranscodeSetting.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TranscodeSetting.

        Identifies what kind of resource this is. Value: the fixed string \"dfareporting#transcodeSetting\".

        :param kind: The kind of this TranscodeSetting.
        :type kind: str
        """

        self._kind = kind
