/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Flight model module.
 * @module model/Flight
 * @version v3.3
 */
class Flight {
    /**
     * Constructs a new <code>Flight</code>.
     * Flight
     * @alias module:model/Flight
     */
    constructor() { 
        
        Flight.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Flight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Flight} obj Optional instance to populate.
     * @return {module:model/Flight} The populated <code>Flight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Flight();

            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('rateOrCost')) {
                obj['rateOrCost'] = ApiClient.convertToType(data['rateOrCost'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ApiClient.convertToType(data['units'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Flight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Flight</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['rateOrCost'] && !(typeof data['rateOrCost'] === 'string' || data['rateOrCost'] instanceof String)) {
            throw new Error("Expected the field `rateOrCost` to be a primitive type in the JSON string but got " + data['rateOrCost']);
        }
        // ensure the json data is a string
        if (data['units'] && !(typeof data['units'] === 'string' || data['units'] instanceof String)) {
            throw new Error("Expected the field `units` to be a primitive type in the JSON string but got " + data['units']);
        }

        return true;
    }


}



/**
 * @member {Date} endDate
 */
Flight.prototype['endDate'] = undefined;

/**
 * Rate or cost of this flight.
 * @member {String} rateOrCost
 */
Flight.prototype['rateOrCost'] = undefined;

/**
 * @member {Date} startDate
 */
Flight.prototype['startDate'] = undefined;

/**
 * Units of this flight.
 * @member {String} units
 */
Flight.prototype['units'] = undefined;






export default Flight;

