/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LastModifiedInfo from './LastModifiedInfo';

/**
 * The Project model module.
 * @module model/Project
 * @version v3.3
 */
class Project {
    /**
     * Constructs a new <code>Project</code>.
     * Contains properties of a Planning project.
     * @alias module:model/Project
     */
    constructor() { 
        
        Project.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Project</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Project} obj Optional instance to populate.
     * @return {module:model/Project} The populated <code>Project</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Project();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('advertiserId')) {
                obj['advertiserId'] = ApiClient.convertToType(data['advertiserId'], 'String');
            }
            if (data.hasOwnProperty('audienceAgeGroup')) {
                obj['audienceAgeGroup'] = ApiClient.convertToType(data['audienceAgeGroup'], 'String');
            }
            if (data.hasOwnProperty('audienceGender')) {
                obj['audienceGender'] = ApiClient.convertToType(data['audienceGender'], 'String');
            }
            if (data.hasOwnProperty('budget')) {
                obj['budget'] = ApiClient.convertToType(data['budget'], 'String');
            }
            if (data.hasOwnProperty('clientBillingCode')) {
                obj['clientBillingCode'] = ApiClient.convertToType(data['clientBillingCode'], 'String');
            }
            if (data.hasOwnProperty('clientName')) {
                obj['clientName'] = ApiClient.convertToType(data['clientName'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedInfo')) {
                obj['lastModifiedInfo'] = LastModifiedInfo.constructFromObject(data['lastModifiedInfo']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('overview')) {
                obj['overview'] = ApiClient.convertToType(data['overview'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
            if (data.hasOwnProperty('targetClicks')) {
                obj['targetClicks'] = ApiClient.convertToType(data['targetClicks'], 'String');
            }
            if (data.hasOwnProperty('targetConversions')) {
                obj['targetConversions'] = ApiClient.convertToType(data['targetConversions'], 'String');
            }
            if (data.hasOwnProperty('targetCpaNanos')) {
                obj['targetCpaNanos'] = ApiClient.convertToType(data['targetCpaNanos'], 'String');
            }
            if (data.hasOwnProperty('targetCpcNanos')) {
                obj['targetCpcNanos'] = ApiClient.convertToType(data['targetCpcNanos'], 'String');
            }
            if (data.hasOwnProperty('targetCpmActiveViewNanos')) {
                obj['targetCpmActiveViewNanos'] = ApiClient.convertToType(data['targetCpmActiveViewNanos'], 'String');
            }
            if (data.hasOwnProperty('targetCpmNanos')) {
                obj['targetCpmNanos'] = ApiClient.convertToType(data['targetCpmNanos'], 'String');
            }
            if (data.hasOwnProperty('targetImpressions')) {
                obj['targetImpressions'] = ApiClient.convertToType(data['targetImpressions'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Project</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Project</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['advertiserId'] && !(typeof data['advertiserId'] === 'string' || data['advertiserId'] instanceof String)) {
            throw new Error("Expected the field `advertiserId` to be a primitive type in the JSON string but got " + data['advertiserId']);
        }
        // ensure the json data is a string
        if (data['audienceAgeGroup'] && !(typeof data['audienceAgeGroup'] === 'string' || data['audienceAgeGroup'] instanceof String)) {
            throw new Error("Expected the field `audienceAgeGroup` to be a primitive type in the JSON string but got " + data['audienceAgeGroup']);
        }
        // ensure the json data is a string
        if (data['audienceGender'] && !(typeof data['audienceGender'] === 'string' || data['audienceGender'] instanceof String)) {
            throw new Error("Expected the field `audienceGender` to be a primitive type in the JSON string but got " + data['audienceGender']);
        }
        // ensure the json data is a string
        if (data['budget'] && !(typeof data['budget'] === 'string' || data['budget'] instanceof String)) {
            throw new Error("Expected the field `budget` to be a primitive type in the JSON string but got " + data['budget']);
        }
        // ensure the json data is a string
        if (data['clientBillingCode'] && !(typeof data['clientBillingCode'] === 'string' || data['clientBillingCode'] instanceof String)) {
            throw new Error("Expected the field `clientBillingCode` to be a primitive type in the JSON string but got " + data['clientBillingCode']);
        }
        // ensure the json data is a string
        if (data['clientName'] && !(typeof data['clientName'] === 'string' || data['clientName'] instanceof String)) {
            throw new Error("Expected the field `clientName` to be a primitive type in the JSON string but got " + data['clientName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `lastModifiedInfo`
        if (data['lastModifiedInfo']) { // data not null
          LastModifiedInfo.validateJSON(data['lastModifiedInfo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['overview'] && !(typeof data['overview'] === 'string' || data['overview'] instanceof String)) {
            throw new Error("Expected the field `overview` to be a primitive type in the JSON string but got " + data['overview']);
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }
        // ensure the json data is a string
        if (data['targetClicks'] && !(typeof data['targetClicks'] === 'string' || data['targetClicks'] instanceof String)) {
            throw new Error("Expected the field `targetClicks` to be a primitive type in the JSON string but got " + data['targetClicks']);
        }
        // ensure the json data is a string
        if (data['targetConversions'] && !(typeof data['targetConversions'] === 'string' || data['targetConversions'] instanceof String)) {
            throw new Error("Expected the field `targetConversions` to be a primitive type in the JSON string but got " + data['targetConversions']);
        }
        // ensure the json data is a string
        if (data['targetCpaNanos'] && !(typeof data['targetCpaNanos'] === 'string' || data['targetCpaNanos'] instanceof String)) {
            throw new Error("Expected the field `targetCpaNanos` to be a primitive type in the JSON string but got " + data['targetCpaNanos']);
        }
        // ensure the json data is a string
        if (data['targetCpcNanos'] && !(typeof data['targetCpcNanos'] === 'string' || data['targetCpcNanos'] instanceof String)) {
            throw new Error("Expected the field `targetCpcNanos` to be a primitive type in the JSON string but got " + data['targetCpcNanos']);
        }
        // ensure the json data is a string
        if (data['targetCpmActiveViewNanos'] && !(typeof data['targetCpmActiveViewNanos'] === 'string' || data['targetCpmActiveViewNanos'] instanceof String)) {
            throw new Error("Expected the field `targetCpmActiveViewNanos` to be a primitive type in the JSON string but got " + data['targetCpmActiveViewNanos']);
        }
        // ensure the json data is a string
        if (data['targetCpmNanos'] && !(typeof data['targetCpmNanos'] === 'string' || data['targetCpmNanos'] instanceof String)) {
            throw new Error("Expected the field `targetCpmNanos` to be a primitive type in the JSON string but got " + data['targetCpmNanos']);
        }
        // ensure the json data is a string
        if (data['targetImpressions'] && !(typeof data['targetImpressions'] === 'string' || data['targetImpressions'] instanceof String)) {
            throw new Error("Expected the field `targetImpressions` to be a primitive type in the JSON string but got " + data['targetImpressions']);
        }

        return true;
    }


}



/**
 * Account ID of this project.
 * @member {String} accountId
 */
Project.prototype['accountId'] = undefined;

/**
 * Advertiser ID of this project.
 * @member {String} advertiserId
 */
Project.prototype['advertiserId'] = undefined;

/**
 * Audience age group of this project.
 * @member {module:model/Project.AudienceAgeGroupEnum} audienceAgeGroup
 */
Project.prototype['audienceAgeGroup'] = undefined;

/**
 * Audience gender of this project.
 * @member {module:model/Project.AudienceGenderEnum} audienceGender
 */
Project.prototype['audienceGender'] = undefined;

/**
 * Budget of this project in the currency specified by the current account. The value stored in this field represents only the non-fractional amount. For example, for USD, the smallest value that can be represented by this field is 1 US dollar.
 * @member {String} budget
 */
Project.prototype['budget'] = undefined;

/**
 * Client billing code of this project.
 * @member {String} clientBillingCode
 */
Project.prototype['clientBillingCode'] = undefined;

/**
 * Name of the project client.
 * @member {String} clientName
 */
Project.prototype['clientName'] = undefined;

/**
 * @member {Date} endDate
 */
Project.prototype['endDate'] = undefined;

/**
 * ID of this project. This is a read-only, auto-generated field.
 * @member {String} id
 */
Project.prototype['id'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#project\".
 * @member {String} kind
 */
Project.prototype['kind'] = undefined;

/**
 * @member {module:model/LastModifiedInfo} lastModifiedInfo
 */
Project.prototype['lastModifiedInfo'] = undefined;

/**
 * Name of this project.
 * @member {String} name
 */
Project.prototype['name'] = undefined;

/**
 * Overview of this project.
 * @member {String} overview
 */
Project.prototype['overview'] = undefined;

/**
 * @member {Date} startDate
 */
Project.prototype['startDate'] = undefined;

/**
 * Subaccount ID of this project.
 * @member {String} subaccountId
 */
Project.prototype['subaccountId'] = undefined;

/**
 * Number of clicks that the advertiser is targeting.
 * @member {String} targetClicks
 */
Project.prototype['targetClicks'] = undefined;

/**
 * Number of conversions that the advertiser is targeting.
 * @member {String} targetConversions
 */
Project.prototype['targetConversions'] = undefined;

/**
 * CPA that the advertiser is targeting.
 * @member {String} targetCpaNanos
 */
Project.prototype['targetCpaNanos'] = undefined;

/**
 * CPC that the advertiser is targeting.
 * @member {String} targetCpcNanos
 */
Project.prototype['targetCpcNanos'] = undefined;

/**
 * vCPM from Active View that the advertiser is targeting.
 * @member {String} targetCpmActiveViewNanos
 */
Project.prototype['targetCpmActiveViewNanos'] = undefined;

/**
 * CPM that the advertiser is targeting.
 * @member {String} targetCpmNanos
 */
Project.prototype['targetCpmNanos'] = undefined;

/**
 * Number of impressions that the advertiser is targeting.
 * @member {String} targetImpressions
 */
Project.prototype['targetImpressions'] = undefined;





/**
 * Allowed values for the <code>audienceAgeGroup</code> property.
 * @enum {String}
 * @readonly
 */
Project['AudienceAgeGroupEnum'] = {

    /**
     * value: "PLANNING_AUDIENCE_AGE_18_24"
     * @const
     */
    "18_24": "PLANNING_AUDIENCE_AGE_18_24",

    /**
     * value: "PLANNING_AUDIENCE_AGE_25_34"
     * @const
     */
    "25_34": "PLANNING_AUDIENCE_AGE_25_34",

    /**
     * value: "PLANNING_AUDIENCE_AGE_35_44"
     * @const
     */
    "35_44": "PLANNING_AUDIENCE_AGE_35_44",

    /**
     * value: "PLANNING_AUDIENCE_AGE_45_54"
     * @const
     */
    "45_54": "PLANNING_AUDIENCE_AGE_45_54",

    /**
     * value: "PLANNING_AUDIENCE_AGE_55_64"
     * @const
     */
    "55_64": "PLANNING_AUDIENCE_AGE_55_64",

    /**
     * value: "PLANNING_AUDIENCE_AGE_65_OR_MORE"
     * @const
     */
    "65_OR_MORE": "PLANNING_AUDIENCE_AGE_65_OR_MORE",

    /**
     * value: "PLANNING_AUDIENCE_AGE_UNKNOWN"
     * @const
     */
    "UNKNOWN": "PLANNING_AUDIENCE_AGE_UNKNOWN"
};


/**
 * Allowed values for the <code>audienceGender</code> property.
 * @enum {String}
 * @readonly
 */
Project['AudienceGenderEnum'] = {

    /**
     * value: "PLANNING_AUDIENCE_GENDER_MALE"
     * @const
     */
    "MALE": "PLANNING_AUDIENCE_GENDER_MALE",

    /**
     * value: "PLANNING_AUDIENCE_GENDER_FEMALE"
     * @const
     */
    "FEMALE": "PLANNING_AUDIENCE_GENDER_FEMALE"
};



export default Project;

