/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionValue from './DimensionValue';

/**
 * The Advertiser model module.
 * @module model/Advertiser
 * @version v3.3
 */
class Advertiser {
    /**
     * Constructs a new <code>Advertiser</code>.
     * Contains properties of a Campaign Manager advertiser.
     * @alias module:model/Advertiser
     */
    constructor() { 
        
        Advertiser.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Advertiser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Advertiser} obj Optional instance to populate.
     * @return {module:model/Advertiser} The populated <code>Advertiser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Advertiser();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('advertiserGroupId')) {
                obj['advertiserGroupId'] = ApiClient.convertToType(data['advertiserGroupId'], 'String');
            }
            if (data.hasOwnProperty('clickThroughUrlSuffix')) {
                obj['clickThroughUrlSuffix'] = ApiClient.convertToType(data['clickThroughUrlSuffix'], 'String');
            }
            if (data.hasOwnProperty('defaultClickThroughEventTagId')) {
                obj['defaultClickThroughEventTagId'] = ApiClient.convertToType(data['defaultClickThroughEventTagId'], 'String');
            }
            if (data.hasOwnProperty('defaultEmail')) {
                obj['defaultEmail'] = ApiClient.convertToType(data['defaultEmail'], 'String');
            }
            if (data.hasOwnProperty('floodlightConfigurationId')) {
                obj['floodlightConfigurationId'] = ApiClient.convertToType(data['floodlightConfigurationId'], 'String');
            }
            if (data.hasOwnProperty('floodlightConfigurationIdDimensionValue')) {
                obj['floodlightConfigurationIdDimensionValue'] = DimensionValue.constructFromObject(data['floodlightConfigurationIdDimensionValue']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('idDimensionValue')) {
                obj['idDimensionValue'] = DimensionValue.constructFromObject(data['idDimensionValue']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('originalFloodlightConfigurationId')) {
                obj['originalFloodlightConfigurationId'] = ApiClient.convertToType(data['originalFloodlightConfigurationId'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('subaccountId')) {
                obj['subaccountId'] = ApiClient.convertToType(data['subaccountId'], 'String');
            }
            if (data.hasOwnProperty('suspended')) {
                obj['suspended'] = ApiClient.convertToType(data['suspended'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Advertiser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Advertiser</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is a string
        if (data['advertiserGroupId'] && !(typeof data['advertiserGroupId'] === 'string' || data['advertiserGroupId'] instanceof String)) {
            throw new Error("Expected the field `advertiserGroupId` to be a primitive type in the JSON string but got " + data['advertiserGroupId']);
        }
        // ensure the json data is a string
        if (data['clickThroughUrlSuffix'] && !(typeof data['clickThroughUrlSuffix'] === 'string' || data['clickThroughUrlSuffix'] instanceof String)) {
            throw new Error("Expected the field `clickThroughUrlSuffix` to be a primitive type in the JSON string but got " + data['clickThroughUrlSuffix']);
        }
        // ensure the json data is a string
        if (data['defaultClickThroughEventTagId'] && !(typeof data['defaultClickThroughEventTagId'] === 'string' || data['defaultClickThroughEventTagId'] instanceof String)) {
            throw new Error("Expected the field `defaultClickThroughEventTagId` to be a primitive type in the JSON string but got " + data['defaultClickThroughEventTagId']);
        }
        // ensure the json data is a string
        if (data['defaultEmail'] && !(typeof data['defaultEmail'] === 'string' || data['defaultEmail'] instanceof String)) {
            throw new Error("Expected the field `defaultEmail` to be a primitive type in the JSON string but got " + data['defaultEmail']);
        }
        // ensure the json data is a string
        if (data['floodlightConfigurationId'] && !(typeof data['floodlightConfigurationId'] === 'string' || data['floodlightConfigurationId'] instanceof String)) {
            throw new Error("Expected the field `floodlightConfigurationId` to be a primitive type in the JSON string but got " + data['floodlightConfigurationId']);
        }
        // validate the optional field `floodlightConfigurationIdDimensionValue`
        if (data['floodlightConfigurationIdDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['floodlightConfigurationIdDimensionValue']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `idDimensionValue`
        if (data['idDimensionValue']) { // data not null
          DimensionValue.validateJSON(data['idDimensionValue']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['originalFloodlightConfigurationId'] && !(typeof data['originalFloodlightConfigurationId'] === 'string' || data['originalFloodlightConfigurationId'] instanceof String)) {
            throw new Error("Expected the field `originalFloodlightConfigurationId` to be a primitive type in the JSON string but got " + data['originalFloodlightConfigurationId']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['subaccountId'] && !(typeof data['subaccountId'] === 'string' || data['subaccountId'] instanceof String)) {
            throw new Error("Expected the field `subaccountId` to be a primitive type in the JSON string but got " + data['subaccountId']);
        }

        return true;
    }


}



/**
 * Account ID of this advertiser.This is a read-only field that can be left blank.
 * @member {String} accountId
 */
Advertiser.prototype['accountId'] = undefined;

/**
 * ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting purposes, allowing you to see aggregated information for all advertisers in each group.
 * @member {String} advertiserGroupId
 */
Advertiser.prototype['advertiserGroupId'] = undefined;

/**
 * Suffix added to click-through URL of ad creative associations under this advertiser. Must be less than 129 characters long.
 * @member {String} clickThroughUrlSuffix
 */
Advertiser.prototype['clickThroughUrlSuffix'] = undefined;

/**
 * ID of the click-through event tag to apply by default to the landing pages of this advertiser's campaigns.
 * @member {String} defaultClickThroughEventTagId
 */
Advertiser.prototype['defaultClickThroughEventTagId'] = undefined;

/**
 * Default email address used in sender field for tag emails.
 * @member {String} defaultEmail
 */
Advertiser.prototype['defaultEmail'] = undefined;

/**
 * Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created automatically, so on insert this field should be left blank. This field can be set to another advertiser's floodlight configuration ID in order to share that advertiser's floodlight configuration with this advertiser, so long as: - This advertiser's original floodlight configuration is not already associated with floodlight activities or floodlight activity groups. - This advertiser's original floodlight configuration is not already shared with another advertiser. 
 * @member {String} floodlightConfigurationId
 */
Advertiser.prototype['floodlightConfigurationId'] = undefined;

/**
 * @member {module:model/DimensionValue} floodlightConfigurationIdDimensionValue
 */
Advertiser.prototype['floodlightConfigurationIdDimensionValue'] = undefined;

/**
 * ID of this advertiser. This is a read-only, auto-generated field.
 * @member {String} id
 */
Advertiser.prototype['id'] = undefined;

/**
 * @member {module:model/DimensionValue} idDimensionValue
 */
Advertiser.prototype['idDimensionValue'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string \"dfareporting#advertiser\".
 * @member {String} kind
 */
Advertiser.prototype['kind'] = undefined;

/**
 * Name of this advertiser. This is a required field and must be less than 256 characters long and unique among advertisers of the same account.
 * @member {String} name
 */
Advertiser.prototype['name'] = undefined;

/**
 * Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of this advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has activities associated with any campaign or placement.
 * @member {String} originalFloodlightConfigurationId
 */
Advertiser.prototype['originalFloodlightConfigurationId'] = undefined;

/**
 * Status of this advertiser.
 * @member {module:model/Advertiser.StatusEnum} status
 */
Advertiser.prototype['status'] = undefined;

/**
 * Subaccount ID of this advertiser.This is a read-only field that can be left blank.
 * @member {String} subaccountId
 */
Advertiser.prototype['subaccountId'] = undefined;

/**
 * Suspension status of this advertiser.
 * @member {Boolean} suspended
 */
Advertiser.prototype['suspended'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Advertiser['StatusEnum'] = {

    /**
     * value: "APPROVED"
     * @const
     */
    "APPROVED": "APPROVED",

    /**
     * value: "ON_HOLD"
     * @const
     */
    "ON_HOLD": "ON_HOLD"
};



export default Advertiser;

