/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DimensionFilter from './DimensionFilter';

/**
 * The DimensionValueRequest model module.
 * @module model/DimensionValueRequest
 * @version v3.3
 */
class DimensionValueRequest {
    /**
     * Constructs a new <code>DimensionValueRequest</code>.
     * Represents a DimensionValuesRequest.
     * @alias module:model/DimensionValueRequest
     */
    constructor() { 
        
        DimensionValueRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DimensionValueRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DimensionValueRequest} obj Optional instance to populate.
     * @return {module:model/DimensionValueRequest} The populated <code>DimensionValueRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DimensionValueRequest();

            if (data.hasOwnProperty('dimensionName')) {
                obj['dimensionName'] = ApiClient.convertToType(data['dimensionName'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], [DimensionFilter]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DimensionValueRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DimensionValueRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['dimensionName'] && !(typeof data['dimensionName'] === 'string' || data['dimensionName'] instanceof String)) {
            throw new Error("Expected the field `dimensionName` to be a primitive type in the JSON string but got " + data['dimensionName']);
        }
        if (data['filters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['filters'])) {
                throw new Error("Expected the field `filters` to be an array in the JSON data but got " + data['filters']);
            }
            // validate the optional field `filters` (array)
            for (const item of data['filters']) {
                DimensionFilter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }

        return true;
    }


}



/**
 * The name of the dimension for which values should be requested.
 * @member {String} dimensionName
 */
DimensionValueRequest.prototype['dimensionName'] = undefined;

/**
 * @member {Date} endDate
 */
DimensionValueRequest.prototype['endDate'] = undefined;

/**
 * The list of filters by which to filter values. The filters are ANDed.
 * @member {Array.<module:model/DimensionFilter>} filters
 */
DimensionValueRequest.prototype['filters'] = undefined;

/**
 * The kind of request this is, in this case dfareporting#dimensionValueRequest .
 * @member {String} kind
 */
DimensionValueRequest.prototype['kind'] = undefined;

/**
 * @member {Date} startDate
 */
DimensionValueRequest.prototype['startDate'] = undefined;






export default DimensionValueRequest;

