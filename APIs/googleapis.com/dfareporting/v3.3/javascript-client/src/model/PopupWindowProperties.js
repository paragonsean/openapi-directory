/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OffsetPosition from './OffsetPosition';
import Size from './Size';

/**
 * The PopupWindowProperties model module.
 * @module model/PopupWindowProperties
 * @version v3.3
 */
class PopupWindowProperties {
    /**
     * Constructs a new <code>PopupWindowProperties</code>.
     * Popup Window Properties.
     * @alias module:model/PopupWindowProperties
     */
    constructor() { 
        
        PopupWindowProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PopupWindowProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PopupWindowProperties} obj Optional instance to populate.
     * @return {module:model/PopupWindowProperties} The populated <code>PopupWindowProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PopupWindowProperties();

            if (data.hasOwnProperty('dimension')) {
                obj['dimension'] = Size.constructFromObject(data['dimension']);
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = OffsetPosition.constructFromObject(data['offset']);
            }
            if (data.hasOwnProperty('positionType')) {
                obj['positionType'] = ApiClient.convertToType(data['positionType'], 'String');
            }
            if (data.hasOwnProperty('showAddressBar')) {
                obj['showAddressBar'] = ApiClient.convertToType(data['showAddressBar'], 'Boolean');
            }
            if (data.hasOwnProperty('showMenuBar')) {
                obj['showMenuBar'] = ApiClient.convertToType(data['showMenuBar'], 'Boolean');
            }
            if (data.hasOwnProperty('showScrollBar')) {
                obj['showScrollBar'] = ApiClient.convertToType(data['showScrollBar'], 'Boolean');
            }
            if (data.hasOwnProperty('showStatusBar')) {
                obj['showStatusBar'] = ApiClient.convertToType(data['showStatusBar'], 'Boolean');
            }
            if (data.hasOwnProperty('showToolBar')) {
                obj['showToolBar'] = ApiClient.convertToType(data['showToolBar'], 'Boolean');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PopupWindowProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PopupWindowProperties</code>.
     */
    static validateJSON(data) {
        // validate the optional field `dimension`
        if (data['dimension']) { // data not null
          Size.validateJSON(data['dimension']);
        }
        // validate the optional field `offset`
        if (data['offset']) { // data not null
          OffsetPosition.validateJSON(data['offset']);
        }
        // ensure the json data is a string
        if (data['positionType'] && !(typeof data['positionType'] === 'string' || data['positionType'] instanceof String)) {
            throw new Error("Expected the field `positionType` to be a primitive type in the JSON string but got " + data['positionType']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {module:model/Size} dimension
 */
PopupWindowProperties.prototype['dimension'] = undefined;

/**
 * @member {module:model/OffsetPosition} offset
 */
PopupWindowProperties.prototype['offset'] = undefined;

/**
 * Popup window position either centered or at specific coordinate.
 * @member {module:model/PopupWindowProperties.PositionTypeEnum} positionType
 */
PopupWindowProperties.prototype['positionType'] = undefined;

/**
 * Whether to display the browser address bar.
 * @member {Boolean} showAddressBar
 */
PopupWindowProperties.prototype['showAddressBar'] = undefined;

/**
 * Whether to display the browser menu bar.
 * @member {Boolean} showMenuBar
 */
PopupWindowProperties.prototype['showMenuBar'] = undefined;

/**
 * Whether to display the browser scroll bar.
 * @member {Boolean} showScrollBar
 */
PopupWindowProperties.prototype['showScrollBar'] = undefined;

/**
 * Whether to display the browser status bar.
 * @member {Boolean} showStatusBar
 */
PopupWindowProperties.prototype['showStatusBar'] = undefined;

/**
 * Whether to display the browser tool bar.
 * @member {Boolean} showToolBar
 */
PopupWindowProperties.prototype['showToolBar'] = undefined;

/**
 * Title of popup window.
 * @member {String} title
 */
PopupWindowProperties.prototype['title'] = undefined;





/**
 * Allowed values for the <code>positionType</code> property.
 * @enum {String}
 * @readonly
 */
PopupWindowProperties['PositionTypeEnum'] = {

    /**
     * value: "CENTER"
     * @const
     */
    "CENTER": "CENTER",

    /**
     * value: "COORDINATES"
     * @const
     */
    "COORDINATES": "COORDINATES"
};



export default PopupWindowProperties;

