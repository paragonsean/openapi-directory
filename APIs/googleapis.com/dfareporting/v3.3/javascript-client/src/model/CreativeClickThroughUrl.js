/**
 * Campaign Manager 360 API
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * The version of the OpenAPI document: v3.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreativeClickThroughUrl model module.
 * @module model/CreativeClickThroughUrl
 * @version v3.3
 */
class CreativeClickThroughUrl {
    /**
     * Constructs a new <code>CreativeClickThroughUrl</code>.
     * Click-through URL
     * @alias module:model/CreativeClickThroughUrl
     */
    constructor() { 
        
        CreativeClickThroughUrl.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreativeClickThroughUrl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreativeClickThroughUrl} obj Optional instance to populate.
     * @return {module:model/CreativeClickThroughUrl} The populated <code>CreativeClickThroughUrl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreativeClickThroughUrl();

            if (data.hasOwnProperty('computedClickThroughUrl')) {
                obj['computedClickThroughUrl'] = ApiClient.convertToType(data['computedClickThroughUrl'], 'String');
            }
            if (data.hasOwnProperty('customClickThroughUrl')) {
                obj['customClickThroughUrl'] = ApiClient.convertToType(data['customClickThroughUrl'], 'String');
            }
            if (data.hasOwnProperty('landingPageId')) {
                obj['landingPageId'] = ApiClient.convertToType(data['landingPageId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreativeClickThroughUrl</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreativeClickThroughUrl</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['computedClickThroughUrl'] && !(typeof data['computedClickThroughUrl'] === 'string' || data['computedClickThroughUrl'] instanceof String)) {
            throw new Error("Expected the field `computedClickThroughUrl` to be a primitive type in the JSON string but got " + data['computedClickThroughUrl']);
        }
        // ensure the json data is a string
        if (data['customClickThroughUrl'] && !(typeof data['customClickThroughUrl'] === 'string' || data['customClickThroughUrl'] instanceof String)) {
            throw new Error("Expected the field `customClickThroughUrl` to be a primitive type in the JSON string but got " + data['customClickThroughUrl']);
        }
        // ensure the json data is a string
        if (data['landingPageId'] && !(typeof data['landingPageId'] === 'string' || data['landingPageId'] instanceof String)) {
            throw new Error("Expected the field `landingPageId` to be a primitive type in the JSON string but got " + data['landingPageId']);
        }

        return true;
    }


}



/**
 * Read-only convenience field representing the actual URL that will be used for this click-through. The URL is computed as follows: - If landingPageId is specified then that landing page's URL is assigned to this field. - Otherwise, the customClickThroughUrl is assigned to this field. 
 * @member {String} computedClickThroughUrl
 */
CreativeClickThroughUrl.prototype['computedClickThroughUrl'] = undefined;

/**
 * Custom click-through URL. Applicable if the landingPageId field is left unset.
 * @member {String} customClickThroughUrl
 */
CreativeClickThroughUrl.prototype['customClickThroughUrl'] = undefined;

/**
 * ID of the landing page for the click-through URL.
 * @member {String} landingPageId
 */
CreativeClickThroughUrl.prototype['landingPageId'] = undefined;






export default CreativeClickThroughUrl;

